Welcome to JMH Tests Suites
Select the appropriate option:
     type (1)  - to run C1/C2 JIT Benchmarks
     type (2)  - to run Graal JIT Benchmarks
     type (3)  - to run Garbage Collectors Benchmarks (e.g. Serial, ParallelOld, CMS, G1, ZGC, Shenandoah, Epsilon)
##################################################################################################
###############################       HotSpot GC Test Suite       ################################
##################################################################################################
Launching hotspotvm_gc JMH Tests Suite ...
Create results/report-openjdk-13/hotspotvm_gc folder
Running java  -jar benchmarks/target/benchmarks.jar .*BurstHeapMemoryAllocatorBenchmark.* -prof gc -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_gc/BurstHeapMemoryAllocatorBenchmark.json
# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UseConcMarkSweepGC -Xms4g -Xmx4g -XX:+AlwaysPreTouch
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.concMarkSweepGC
# Parameters: (objectsSize = _4_KB)

# Run progress: 0.00% complete, ETA 01:00:00
# Fork: 1 of 3
OpenJDK 64-Bit Server VM warning: Option UseConcMarkSweepGC was deprecated in version 9.0 and will likely be removed in a future release.
# Warmup Iteration   1: 0.196 ops/s
# Warmup Iteration   2: 0.198 ops/s
# Warmup Iteration   3: 0.222 ops/s
# Warmup Iteration   4: 0.246 ops/s
# Warmup Iteration   5: 0.239 ops/s
Iteration   1: 0.240 ops/s
                 ·gc.alloc.rate:                    2243.931 MB/sec
                 ·gc.alloc.rate.norm:               10190080296.000 B/op
                 ·gc.churn.CMS_Old_Gen:             1549.956 MB/sec
                 ·gc.churn.CMS_Old_Gen.norm:        7038616744.000 B/op
                 ·gc.churn.Par_Eden_Space:          2213.476 MB/sec
                 ·gc.churn.Par_Eden_Space.norm:     10051776749.333 B/op
                 ·gc.churn.Par_Survivor_Space:      56.302 MB/sec
                 ·gc.churn.Par_Survivor_Space.norm: 255677781.333 B/op
                 ·gc.count:                         68.000 counts
                 ·gc.time:                          10602.000 ms

Iteration   2: 0.243 ops/s
                 ·gc.alloc.rate:                    2272.282 MB/sec
                 ·gc.alloc.rate.norm:               10190080296.000 B/op
                 ·gc.churn.CMS_Old_Gen:             1569.537 MB/sec
                 ·gc.churn.CMS_Old_Gen.norm:        7038610146.667 B/op
                 ·gc.churn.Par_Eden_Space:          2241.442 MB/sec
                 ·gc.churn.Par_Eden_Space.norm:     10051776736.000 B/op
                 ·gc.churn.Par_Survivor_Space:      57.013 MB/sec
                 ·gc.churn.Par_Survivor_Space.norm: 255677781.333 B/op
                 ·gc.count:                         68.000 counts
                 ·gc.time:                          10391.000 ms

Iteration   3: 0.238 ops/s
                 ·gc.alloc.rate:                    2224.431 MB/sec
                 ·gc.alloc.rate.norm:               10190080296.000 B/op
                 ·gc.churn.CMS_Old_Gen:             1536.487 MB/sec
                 ·gc.churn.CMS_Old_Gen.norm:        7038622661.333 B/op
                 ·gc.churn.Par_Eden_Space:          2194.240 MB/sec
                 ·gc.churn.Par_Eden_Space.norm:     10051776536.000 B/op
                 ·gc.churn.Par_Survivor_Space:      55.813 MB/sec
                 ·gc.churn.Par_Survivor_Space.norm: 255677781.333 B/op
                 ·gc.count:                         68.000 counts
                 ·gc.time:                          10678.000 ms

Iteration   4: 0.244 ops/s
                 ·gc.alloc.rate:                    2282.145 MB/sec
                 ·gc.alloc.rate.norm:               10190080317.333 B/op
                 ·gc.churn.CMS_Old_Gen:             1576.352 MB/sec
                 ·gc.churn.CMS_Old_Gen.norm:        7038621290.667 B/op
                 ·gc.churn.Par_Eden_Space:          2209.482 MB/sec
                 ·gc.churn.Par_Eden_Space.norm:     9865633056.000 B/op
                 ·gc.churn.Par_Survivor_Space:      57.261 MB/sec
                 ·gc.churn.Par_Survivor_Space.norm: 255677781.333 B/op
                 ·gc.count:                         67.000 counts
                 ·gc.time:                          10373.000 ms

Iteration   5: 0.241 ops/s
                 ·gc.alloc.rate:                    2255.098 MB/sec
                 ·gc.alloc.rate.norm:               10190080296.000 B/op
                 ·gc.churn.CMS_Old_Gen:             1557.668 MB/sec
                 ·gc.churn.CMS_Old_Gen.norm:        7038613034.667 B/op
                 ·gc.churn.Par_Eden_Space:          2224.491 MB/sec
                 ·gc.churn.Par_Eden_Space.norm:     10051776608.000 B/op
                 ·gc.churn.Par_Survivor_Space:      56.582 MB/sec
                 ·gc.churn.Par_Survivor_Space.norm: 255677781.333 B/op
                 ·gc.count:                         68.000 counts
                 ·gc.time:                          10500.000 ms


# Run progress: 2.78% complete, ETA 01:17:42
# Fork: 2 of 3
OpenJDK 64-Bit Server VM warning: Option UseConcMarkSweepGC was deprecated in version 9.0 and will likely be removed in a future release.
# Warmup Iteration   1: 0.246 ops/s
# Warmup Iteration   2: 0.244 ops/s
# Warmup Iteration   3: 0.242 ops/s
# Warmup Iteration   4: 0.244 ops/s
# Warmup Iteration   5: 0.248 ops/s
Iteration   1: 0.240 ops/s
                 ·gc.alloc.rate:                    2246.024 MB/sec
                 ·gc.alloc.rate.norm:               10190080296.000 B/op
                 ·gc.churn.CMS_Old_Gen:             1551.405 MB/sec
                 ·gc.churn.CMS_Old_Gen.norm:        7038637194.667 B/op
                 ·gc.churn.Par_Eden_Space:          2215.540 MB/sec
                 ·gc.churn.Par_Eden_Space.norm:     10051775736.000 B/op
                 ·gc.churn.Par_Survivor_Space:      56.355 MB/sec
                 ·gc.churn.Par_Survivor_Space.norm: 255677781.333 B/op
                 ·gc.count:                         68.000 counts
                 ·gc.time:                          10568.000 ms

Iteration   2: 0.247 ops/s
                 ·gc.alloc.rate:                    2301.780 MB/sec
                 ·gc.alloc.rate.norm:               10190080317.333 B/op
                 ·gc.churn.CMS_Old_Gen:             1589.916 MB/sec
                 ·gc.churn.CMS_Old_Gen.norm:        7038629474.667 B/op
                 ·gc.churn.Par_Eden_Space:          2270.539 MB/sec
                 ·gc.churn.Par_Eden_Space.norm:     10051776640.000 B/op
                 ·gc.churn.Par_Survivor_Space:      57.754 MB/sec
                 ·gc.churn.Par_Survivor_Space.norm: 255677781.333 B/op
                 ·gc.count:                         68.000 counts
                 ·gc.time:                          10264.000 ms

Iteration   3: 0.243 ops/s
                 ·gc.alloc.rate:                    2269.226 MB/sec
                 ·gc.alloc.rate.norm:               10190080296.000 B/op
                 ·gc.churn.CMS_Old_Gen:             1567.428 MB/sec
                 ·gc.churn.CMS_Old_Gen.norm:        7038619765.333 B/op
                 ·gc.churn.Par_Eden_Space:          2238.427 MB/sec
                 ·gc.churn.Par_Eden_Space.norm:     10051776941.333 B/op
                 ·gc.churn.Par_Survivor_Space:      56.937 MB/sec
                 ·gc.churn.Par_Survivor_Space.norm: 255677781.333 B/op
                 ·gc.count:                         68.000 counts
                 ·gc.time:                          10466.000 ms

Iteration   4: 0.246 ops/s
                 ·gc.alloc.rate:                    2298.635 MB/sec
                 ·gc.alloc.rate.norm:               10190080296.000 B/op
                 ·gc.churn.CMS_Old_Gen:             1587.742 MB/sec
                 ·gc.churn.CMS_Old_Gen.norm:        7038617146.667 B/op
                 ·gc.churn.Par_Eden_Space:          2267.438 MB/sec
                 ·gc.churn.Par_Eden_Space.norm:     10051777408.000 B/op
                 ·gc.churn.Par_Survivor_Space:      57.675 MB/sec
                 ·gc.churn.Par_Survivor_Space.norm: 255677781.333 B/op
                 ·gc.count:                         68.000 counts
                 ·gc.time:                          10285.000 ms

Iteration   5: 0.243 ops/s
                 ·gc.alloc.rate:                    2265.065 MB/sec
                 ·gc.alloc.rate.norm:               10190080306.667 B/op
                 ·gc.churn.CMS_Old_Gen:             1564.555 MB/sec
                 ·gc.churn.CMS_Old_Gen.norm:        7038622613.333 B/op
                 ·gc.churn.Par_Eden_Space:          2192.947 MB/sec
                 ·gc.churn.Par_Eden_Space.norm:     9865632456.000 B/op
                 ·gc.churn.Par_Survivor_Space:      56.832 MB/sec
                 ·gc.churn.Par_Survivor_Space.norm: 255677781.333 B/op
                 ·gc.count:                         67.000 counts
                 ·gc.time:                          10443.000 ms


# Run progress: 5.56% complete, ETA 01:14:29
# Fork: 3 of 3
OpenJDK 64-Bit Server VM warning: Option UseConcMarkSweepGC was deprecated in version 9.0 and will likely be removed in a future release.
# Warmup Iteration   1: 0.247 ops/s
# Warmup Iteration   2: 0.244 ops/s
# Warmup Iteration   3: 0.244 ops/s
# Warmup Iteration   4: 0.243 ops/s
# Warmup Iteration   5: 0.242 ops/s
Iteration   1: 0.239 ops/s
                 ·gc.alloc.rate:                    2233.115 MB/sec
                 ·gc.alloc.rate.norm:               10190080296.000 B/op
                 ·gc.churn.CMS_Old_Gen:             1682.715 MB/sec
                 ·gc.churn.CMS_Old_Gen.norm:        7678511128.000 B/op
                 ·gc.churn.Par_Eden_Space:          2243.599 MB/sec
                 ·gc.churn.Par_Eden_Space.norm:     10237919834.667 B/op
                 ·gc.churn.Par_Survivor_Space:      61.124 MB/sec
                 ·gc.churn.Par_Survivor_Space.norm: 278921216.000 B/op
                 ·gc.count:                         67.000 counts
                 ·gc.time:                          10611.000 ms

Iteration   2: 0.249 ops/s
                 ·gc.alloc.rate:                    2322.389 MB/sec
                 ·gc.alloc.rate.norm:               10190080296.000 B/op
                 ·gc.churn.CMS_Old_Gen:             1604.153 MB/sec
                 ·gc.churn.CMS_Old_Gen.norm:        7038636336.000 B/op
                 ·gc.churn.Par_Eden_Space:          2290.868 MB/sec
                 ·gc.churn.Par_Eden_Space.norm:     10051775869.333 B/op
                 ·gc.churn.Par_Survivor_Space:      58.271 MB/sec
                 ·gc.churn.Par_Survivor_Space.norm: 255677781.333 B/op
                 ·gc.count:                         68.000 counts
                 ·gc.time:                          10158.000 ms

Iteration   3: 0.245 ops/s
                 ·gc.alloc.rate:                    2289.392 MB/sec
                 ·gc.alloc.rate.norm:               10190080306.667 B/op
                 ·gc.churn.CMS_Old_Gen:             1581.361 MB/sec
                 ·gc.churn.CMS_Old_Gen.norm:        7038634754.667 B/op
                 ·gc.churn.Par_Eden_Space:          2258.320 MB/sec
                 ·gc.churn.Par_Eden_Space.norm:     10051775432.000 B/op
                 ·gc.churn.Par_Survivor_Space:      57.443 MB/sec
                 ·gc.churn.Par_Survivor_Space.norm: 255677781.333 B/op
                 ·gc.count:                         68.000 counts
                 ·gc.time:                          10331.000 ms

Iteration   4: 0.249 ops/s
                 ·gc.alloc.rate:                    2321.378 MB/sec
                 ·gc.alloc.rate.norm:               10190080306.667 B/op
                 ·gc.churn.CMS_Old_Gen:             1603.450 MB/sec
                 ·gc.churn.CMS_Old_Gen.norm:        7038611626.667 B/op
                 ·gc.churn.Par_Eden_Space:          2289.872 MB/sec
                 ·gc.churn.Par_Eden_Space.norm:     10051777032.000 B/op
                 ·gc.churn.Par_Survivor_Space:      58.245 MB/sec
                 ·gc.churn.Par_Survivor_Space.norm: 255677781.333 B/op
                 ·gc.count:                         68.000 counts
                 ·gc.time:                          10168.000 ms

Iteration   5: 0.246 ops/s
                 ·gc.alloc.rate:                    2300.736 MB/sec
                 ·gc.alloc.rate.norm:               10190080306.667 B/op
                 ·gc.churn.CMS_Old_Gen:             1589.193 MB/sec
                 ·gc.churn.CMS_Old_Gen.norm:        7038618493.333 B/op
                 ·gc.churn.Par_Eden_Space:          2227.482 MB/sec
                 ·gc.churn.Par_Eden_Space.norm:     9865632989.333 B/op
                 ·gc.churn.Par_Survivor_Space:      57.727 MB/sec
                 ·gc.churn.Par_Survivor_Space.norm: 255677781.333 B/op
                 ·gc.count:                         67.000 counts
                 ·gc.time:                          10268.000 ms



Result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.concMarkSweepGC":
  0.244 ±(99.9%) 0.004 ops/s [Average]
  (min, avg, max) = (0.238, 0.244, 0.249), stdev = 0.003
  CI (99.9%): [0.240, 0.247] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.concMarkSweepGC:·gc.alloc.rate":
  2275.042 ±(99.9%) 32.882 MB/sec [Average]
  (min, avg, max) = (2224.431, 2275.042, 2322.389), stdev = 30.758
  CI (99.9%): [2242.159, 2307.924] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.concMarkSweepGC:·gc.alloc.rate.norm":
  10190080301.689 ±(99.9%) 8.475 B/op [Average]
  (min, avg, max) = (10190080296.000, 10190080301.689, 10190080317.333), stdev = 7.928
  CI (99.9%): [10190080293.214, 10190080310.164] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.concMarkSweepGC:·gc.churn.CMS_Old_Gen":
  1580.795 ±(99.9%) 36.757 MB/sec [Average]
  (min, avg, max) = (1536.487, 1580.795, 1682.715), stdev = 34.383
  CI (99.9%): [1544.037, 1617.552] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.concMarkSweepGC:·gc.churn.CMS_Old_Gen.norm":
  7081281494.044 ±(99.9%) 176628706.965 B/op [Average]
  (min, avg, max) = (7038610146.667, 7081281494.044, 7678511128.000), stdev = 165218602.097
  CI (99.9%): [6904652787.080, 7257910201.009] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.concMarkSweepGC:·gc.churn.Par_Eden_Space":
  2238.544 ±(99.9%) 33.831 MB/sec [Average]
  (min, avg, max) = (2192.947, 2238.544, 2290.868), stdev = 31.645
  CI (99.9%): [2204.713, 2272.375] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.concMarkSweepGC:·gc.churn.Par_Eden_Space.norm":
  10026957334.933 ±(99.9%) 102762522.590 B/op [Average]
  (min, avg, max) = (9865632456.000, 10026957334.933, 10237919834.667), stdev = 96124127.397
  CI (99.9%): [9924194812.343, 10129719857.523] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.concMarkSweepGC:·gc.churn.Par_Survivor_Space":
  57.422 ±(99.9%) 1.335 MB/sec [Average]
  (min, avg, max) = (55.813, 57.422, 61.124), stdev = 1.249
  CI (99.9%): [56.087, 58.757] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.concMarkSweepGC:·gc.churn.Par_Survivor_Space.norm":
  257227343.644 ±(99.9%) 6415891.644 B/op [Average]
  (min, avg, max) = (255677781.333, 257227343.644, 278921216.000), stdev = 6001429.025
  CI (99.9%): [250811452.001, 263643235.288] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.concMarkSweepGC:·gc.count":
  1016.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (67.000, 67.733, 68.000), stdev = 0.458
  CI (99.9%): [1016.000, 1016.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.concMarkSweepGC:·gc.time":
  156106.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (10158.000, 10407.067, 10678.000), stdev = 163.312
  CI (99.9%): [156106.000, 156106.000] (assumes normal distribution)


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UseConcMarkSweepGC -Xms4g -Xmx4g -XX:+AlwaysPreTouch
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.concMarkSweepGC
# Parameters: (objectsSize = _4_MB)

# Run progress: 8.33% complete, ETA 01:11:52
# Fork: 1 of 3
OpenJDK 64-Bit Server VM warning: Option UseConcMarkSweepGC was deprecated in version 9.0 and will likely be removed in a future release.
# Warmup Iteration   1: 0.524 ops/s
# Warmup Iteration   2: 0.516 ops/s
# Warmup Iteration   3: 0.515 ops/s
# Warmup Iteration   4: 0.514 ops/s
# Warmup Iteration   5: 0.523 ops/s
Iteration   1: 0.509 ops/s
                 ·gc.alloc.rate:                    4720.211 MB/sec
                 ·gc.alloc.rate.norm:               10133487017.333 B/op
                 ·gc.churn.CMS_Old_Gen:             3611.819 MB/sec
                 ·gc.churn.CMS_Old_Gen.norm:        7753958605.333 B/op
                 ·gc.churn.Par_Eden_Space:          4751.641 MB/sec
                 ·gc.churn.Par_Eden_Space.norm:     10200962700.000 B/op
                 ·gc.churn.Par_Survivor_Space:      119.842 MB/sec
                 ·gc.churn.Par_Survivor_Space.norm: 257280274.667 B/op
                 ·gc.count:                         139.000 counts
                 ·gc.time:                          9342.000 ms

Iteration   2: 0.519 ops/s
                 ·gc.alloc.rate:                    4803.352 MB/sec
                 ·gc.alloc.rate.norm:               10133487024.000 B/op
                 ·gc.churn.CMS_Old_Gen:             3626.396 MB/sec
                 ·gc.churn.CMS_Old_Gen.norm:        7650498130.667 B/op
                 ·gc.churn.Par_Eden_Space:          4791.374 MB/sec
                 ·gc.churn.Par_Eden_Space.norm:     10108217870.667 B/op
                 ·gc.churn.Par_Survivor_Space:      127.255 MB/sec
                 ·gc.churn.Par_Survivor_Space.norm: 268466416.000 B/op
                 ·gc.count:                         138.000 counts
                 ·gc.time:                          9153.000 ms

Iteration   3: 0.518 ops/s
                 ·gc.alloc.rate:                              4793.943 MB/sec
                 ·gc.alloc.rate.norm:                         10133487012.000 B/op
                 ·gc.churn.CMS_Old_Gen:                       3619.294 MB/sec
                 ·gc.churn.CMS_Old_Gen.norm:                  7650500288.000 B/op
                 ·gc.churn.CodeHeap_'profiled_nmethods':      ≈ 10⁻⁴ MB/sec
                 ·gc.churn.CodeHeap_'profiled_nmethods'.norm: 661.333 B/op
                 ·gc.churn.Par_Eden_Space:                    4825.854 MB/sec
                 ·gc.churn.Par_Eden_Space.norm:               10200940814.667 B/op
                 ·gc.churn.Par_Survivor_Space:                127.005 MB/sec
                 ·gc.churn.Par_Survivor_Space.norm:           268465128.000 B/op
                 ·gc.count:                                   139.000 counts
                 ·gc.time:                                    9238.000 ms

Iteration   4: 0.518 ops/s
                 ·gc.alloc.rate:                         4801.443 MB/sec
                 ·gc.alloc.rate.norm:                    10133487017.333 B/op
                 ·gc.churn.CMS_Old_Gen:                  3624.956 MB/sec
                 ·gc.churn.CMS_Old_Gen.norm:             7650501749.333 B/op
                 ·gc.churn.CodeHeap_'non-nmethods':      0.001 MB/sec
                 ·gc.churn.CodeHeap_'non-nmethods'.norm: 1920.000 B/op
                 ·gc.churn.Par_Eden_Space:               4833.403 MB/sec
                 ·gc.churn.Par_Eden_Space.norm:          10200937812.000 B/op
                 ·gc.churn.Par_Survivor_Space:           127.204 MB/sec
                 ·gc.churn.Par_Survivor_Space.norm:      268465472.000 B/op
                 ·gc.count:                              139.000 counts
                 ·gc.time:                               9201.000 ms

Iteration   5: 0.518 ops/s
                 ·gc.alloc.rate:                              4797.682 MB/sec
                 ·gc.alloc.rate.norm:                         10133487017.333 B/op
                 ·gc.churn.CMS_Old_Gen:                       3622.117 MB/sec
                 ·gc.churn.CMS_Old_Gen.norm:                  7650501809.333 B/op
                 ·gc.churn.CodeHeap_'profiled_nmethods':      0.001 MB/sec
                 ·gc.churn.CodeHeap_'profiled_nmethods'.norm: 1877.333 B/op
                 ·gc.churn.Par_Eden_Space:                    4829.603 MB/sec
                 ·gc.churn.Par_Eden_Space.norm:               10200908366.667 B/op
                 ·gc.churn.Par_Survivor_Space:                127.104 MB/sec
                 ·gc.churn.Par_Survivor_Space.norm:           268464784.000 B/op
                 ·gc.count:                                   140.000 counts
                 ·gc.time:                                    9284.000 ms


# Run progress: 11.11% complete, ETA 01:08:37
# Fork: 2 of 3
OpenJDK 64-Bit Server VM warning: Option UseConcMarkSweepGC was deprecated in version 9.0 and will likely be removed in a future release.
# Warmup Iteration   1: 0.526 ops/s
# Warmup Iteration   2: 0.513 ops/s
# Warmup Iteration   3: 0.518 ops/s
# Warmup Iteration   4: 0.518 ops/s
# Warmup Iteration   5: 0.520 ops/s
Iteration   1: 0.515 ops/s
                 ·gc.alloc.rate:                    4775.880 MB/sec
                 ·gc.alloc.rate.norm:               10133487017.333 B/op
                 ·gc.churn.CMS_Old_Gen:             3654.417 MB/sec
                 ·gc.churn.CMS_Old_Gen.norm:        7753959594.667 B/op
                 ·gc.churn.Par_Eden_Space:          4807.679 MB/sec
                 ·gc.churn.Par_Eden_Space.norm:     10200957989.333 B/op
                 ·gc.churn.Par_Survivor_Space:      121.254 MB/sec
                 ·gc.churn.Par_Survivor_Space.norm: 257278210.667 B/op
                 ·gc.count:                         139.000 counts
                 ·gc.time:                          9243.000 ms

Iteration   2: 0.525 ops/s
                 ·gc.alloc.rate:                    4856.672 MB/sec
                 ·gc.alloc.rate.norm:               10133487024.000 B/op
                 ·gc.churn.CMS_Old_Gen:             3666.650 MB/sec
                 ·gc.churn.CMS_Old_Gen.norm:        7650496594.667 B/op
                 ·gc.churn.Par_Eden_Space:          4844.561 MB/sec
                 ·gc.churn.Par_Eden_Space.norm:     10108217882.667 B/op
                 ·gc.churn.Par_Survivor_Space:      128.668 MB/sec
                 ·gc.churn.Par_Survivor_Space.norm: 268467104.000 B/op
                 ·gc.count:                         138.000 counts
                 ·gc.time:                          9091.000 ms

Iteration   3: 0.518 ops/s
                 ·gc.alloc.rate:                              4801.542 MB/sec
                 ·gc.alloc.rate.norm:                         10133487012.000 B/op
                 ·gc.churn.CMS_Old_Gen:                       3625.031 MB/sec
                 ·gc.churn.CMS_Old_Gen.norm:                  7650500926.667 B/op
                 ·gc.churn.CodeHeap_'profiled_nmethods':      ≈ 10⁻⁴ MB/sec
                 ·gc.churn.CodeHeap_'profiled_nmethods'.norm: 448.000 B/op
                 ·gc.churn.Par_Eden_Space:                    4833.501 MB/sec
                 ·gc.churn.Par_Eden_Space.norm:               10200935498.667 B/op
                 ·gc.churn.Par_Survivor_Space:                127.206 MB/sec
                 ·gc.churn.Par_Survivor_Space.norm:           268464784.000 B/op
                 ·gc.count:                                   139.000 counts
                 ·gc.time:                                    9216.000 ms

Iteration   4: 0.517 ops/s
                 ·gc.alloc.rate:                         4785.219 MB/sec
                 ·gc.alloc.rate.norm:                    10133487017.333 B/op
                 ·gc.churn.CMS_Old_Gen:                  3612.707 MB/sec
                 ·gc.churn.CMS_Old_Gen.norm:             7650499252.000 B/op
                 ·gc.churn.CodeHeap_'non-nmethods':      ≈ 10⁻³ MB/sec
                 ·gc.churn.CodeHeap_'non-nmethods'.norm: 960.000 B/op
                 ·gc.churn.Par_Eden_Space:               4817.066 MB/sec
                 ·gc.churn.Par_Eden_Space.norm:          10200928312.000 B/op
                 ·gc.churn.Par_Survivor_Space:           126.774 MB/sec
                 ·gc.churn.Par_Survivor_Space.norm:      268465128.000 B/op
                 ·gc.count:                              138.000 counts
                 ·gc.time:                               9263.000 ms

Iteration   5: 0.513 ops/s
                 ·gc.alloc.rate:                                  4755.920 MB/sec
                 ·gc.alloc.rate.norm:                             10133487012.000 B/op
                 ·gc.churn.CMS_Old_Gen:                           3590.588 MB/sec
                 ·gc.churn.CMS_Old_Gen.norm:                      7650501806.667 B/op
                 ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
                 ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 2816.000 B/op
                 ·gc.churn.CodeHeap_'profiled_nmethods':          0.001 MB/sec
                 ·gc.churn.CodeHeap_'profiled_nmethods'.norm:     1536.000 B/op
                 ·gc.churn.Par_Eden_Space:                        4787.559 MB/sec
                 ·gc.churn.Par_Eden_Space.norm:                   10200899738.667 B/op
                 ·gc.churn.Par_Survivor_Space:                    125.998 MB/sec
                 ·gc.churn.Par_Survivor_Space.norm:               268466098.667 B/op
                 ·gc.count:                                       139.000 counts
                 ·gc.time:                                        9320.000 ms


# Run progress: 13.89% complete, ETA 01:05:49
# Fork: 3 of 3
OpenJDK 64-Bit Server VM warning: Option UseConcMarkSweepGC was deprecated in version 9.0 and will likely be removed in a future release.
# Warmup Iteration   1: 0.523 ops/s
# Warmup Iteration   2: 0.515 ops/s
# Warmup Iteration   3: 0.520 ops/s
# Warmup Iteration   4: 0.516 ops/s
# Warmup Iteration   5: 0.523 ops/s
Iteration   1: 0.519 ops/s
                 ·gc.alloc.rate:                    4810.451 MB/sec
                 ·gc.alloc.rate.norm:               10133487017.333 B/op
                 ·gc.churn.CMS_Old_Gen:             3680.868 MB/sec
                 ·gc.churn.CMS_Old_Gen.norm:        7753956478.667 B/op
                 ·gc.churn.Par_Eden_Space:          4842.480 MB/sec
                 ·gc.churn.Par_Eden_Space.norm:     10200957992.000 B/op
                 ·gc.churn.Par_Survivor_Space:      122.133 MB/sec
                 ·gc.churn.Par_Survivor_Space.norm: 257279242.667 B/op
                 ·gc.count:                         139.000 counts
                 ·gc.time:                          9237.000 ms

Iteration   2: 0.522 ops/s
                 ·gc.alloc.rate:                    4836.241 MB/sec
                 ·gc.alloc.rate.norm:               10133487029.333 B/op
                 ·gc.churn.CMS_Old_Gen:             3651.226 MB/sec
                 ·gc.churn.CMS_Old_Gen.norm:        7650498121.333 B/op
                 ·gc.churn.Par_Eden_Space:          4824.181 MB/sec
                 ·gc.churn.Par_Eden_Space.norm:     10108217869.333 B/op
                 ·gc.churn.Par_Survivor_Space:      128.127 MB/sec
                 ·gc.churn.Par_Survivor_Space.norm: 268467104.000 B/op
                 ·gc.count:                         138.000 counts
                 ·gc.time:                          9096.000 ms

Iteration   3: 0.524 ops/s
                 ·gc.alloc.rate:                    4854.961 MB/sec
                 ·gc.alloc.rate.norm:               10133487012.000 B/op
                 ·gc.churn.CMS_Old_Gen:             3665.359 MB/sec
                 ·gc.churn.CMS_Old_Gen.norm:        7650496733.333 B/op
                 ·gc.churn.Par_Eden_Space:          4887.276 MB/sec
                 ·gc.churn.Par_Eden_Space.norm:     10200935501.333 B/op
                 ·gc.churn.Par_Survivor_Space:      128.622 MB/sec
                 ·gc.churn.Par_Survivor_Space.norm: 268465128.000 B/op
                 ·gc.count:                         139.000 counts
                 ·gc.time:                          9130.000 ms

Iteration   4: 0.518 ops/s
                 ·gc.alloc.rate:                         4798.754 MB/sec
                 ·gc.alloc.rate.norm:                    10133487012.000 B/op
                 ·gc.churn.CMS_Old_Gen:                  3622.926 MB/sec
                 ·gc.churn.CMS_Old_Gen.norm:             7650502378.667 B/op
                 ·gc.churn.CodeHeap_'non-nmethods':      ≈ 10⁻³ MB/sec
                 ·gc.churn.CodeHeap_'non-nmethods'.norm: 960.000 B/op
                 ·gc.churn.Par_Eden_Space:               4830.693 MB/sec
                 ·gc.churn.Par_Eden_Space.norm:          10200933102.667 B/op
                 ·gc.churn.Par_Survivor_Space:           127.133 MB/sec
                 ·gc.churn.Par_Survivor_Space.norm:      268465816.000 B/op
                 ·gc.count:                              139.000 counts
                 ·gc.time:                               9199.000 ms

Iteration   5: 0.516 ops/s
                 ·gc.alloc.rate:                              4781.164 MB/sec
                 ·gc.alloc.rate.norm:                         10133487012.000 B/op
                 ·gc.churn.CMS_Old_Gen:                       3609.645 MB/sec
                 ·gc.churn.CMS_Old_Gen.norm:                  7650499298.667 B/op
                 ·gc.churn.CodeHeap_'profiled_nmethods':      ≈ 10⁻³ MB/sec
                 ·gc.churn.CodeHeap_'profiled_nmethods'.norm: 832.000 B/op
                 ·gc.churn.Par_Eden_Space:                    4812.972 MB/sec
                 ·gc.churn.Par_Eden_Space.norm:               10200903448.000 B/op
                 ·gc.churn.Par_Survivor_Space:                126.667 MB/sec
                 ·gc.churn.Par_Survivor_Space.norm:           268465021.333 B/op
                 ·gc.count:                                   140.000 counts
                 ·gc.time:                                    9290.000 ms



Result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.concMarkSweepGC":
  0.518 ±(99.9%) 0.004 ops/s [Average]
  (min, avg, max) = (0.509, 0.518, 0.525), stdev = 0.004
  CI (99.9%): [0.514, 0.522] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.concMarkSweepGC:·gc.alloc.rate":
  4798.229 ±(99.9%) 37.397 MB/sec [Average]
  (min, avg, max) = (4720.211, 4798.229, 4856.672), stdev = 34.981
  CI (99.9%): [4760.832, 4835.626] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.concMarkSweepGC:·gc.alloc.rate.norm":
  10133487016.889 ±(99.9%) 5.719 B/op [Average]
  (min, avg, max) = (10133487012.000, 10133487016.889, 10133487029.333), stdev = 5.349
  CI (99.9%): [10133487011.170, 10133487022.607] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.concMarkSweepGC:·gc.churn.CMS_Old_Gen":
  3632.267 ±(99.9%) 27.163 MB/sec [Average]
  (min, avg, max) = (3590.588, 3632.267, 3680.868), stdev = 25.408
  CI (99.9%): [3605.104, 3659.429] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.concMarkSweepGC:·gc.churn.CMS_Old_Gen.norm":
  7671191451.200 ±(99.9%) 45794149.350 B/op [Average]
  (min, avg, max) = (7650496594.667, 7671191451.200, 7753959594.667), stdev = 42835875.718
  CI (99.9%): [7625397301.850, 7716985600.550] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.concMarkSweepGC:·gc.churn.CodeHeap_'non-nmethods'":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.concMarkSweepGC:·gc.churn.CodeHeap_'non-nmethods'.norm":
  256.000 ±(99.9%) 609.228 B/op [Average]
  (min, avg, max) = (≈ 0, 256.000, 1920.000), stdev = 569.872
  CI (99.9%): [≈ 0, 865.228] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.concMarkSweepGC:·gc.churn.CodeHeap_'non-profiled_nmethods'":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.concMarkSweepGC:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
  187.733 ±(99.9%) 777.301 B/op [Average]
  (min, avg, max) = (≈ 0, 187.733, 2816.000), stdev = 727.088
  CI (99.9%): [≈ 0, 965.035] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.concMarkSweepGC:·gc.churn.CodeHeap_'profiled_nmethods'":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.concMarkSweepGC:·gc.churn.CodeHeap_'profiled_nmethods'.norm":
  356.978 ±(99.9%) 657.927 B/op [Average]
  (min, avg, max) = (≈ 0, 356.978, 1877.333), stdev = 615.425
  CI (99.9%): [≈ 0, 1014.904] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.concMarkSweepGC:·gc.churn.Par_Eden_Space":
  4821.323 ±(99.9%) 32.556 MB/sec [Average]
  (min, avg, max) = (4751.641, 4821.323, 4887.276), stdev = 30.453
  CI (99.9%): [4788.767, 4853.879] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.concMarkSweepGC:·gc.churn.Par_Eden_Space.norm":
  10182390326.578 ±(99.9%) 41038988.827 B/op [Average]
  (min, avg, max) = (10108217869.333, 10182390326.578, 10200962700.000), stdev = 38387895.614
  CI (99.9%): [10141351337.751, 10223429315.405] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.concMarkSweepGC:·gc.churn.Par_Survivor_Space":
  126.066 ±(99.9%) 2.898 MB/sec [Average]
  (min, avg, max) = (119.842, 126.066, 128.668), stdev = 2.711
  CI (99.9%): [123.168, 128.964] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.concMarkSweepGC:·gc.churn.Par_Survivor_Space.norm":
  266228380.800 ±(99.9%) 4951481.733 B/op [Average]
  (min, avg, max) = (257278210.667, 266228380.800, 268467104.000), stdev = 4631619.085
  CI (99.9%): [261276899.067, 271179862.533] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.concMarkSweepGC:·gc.count":
  2083.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (138.000, 138.867, 140.000), stdev = 0.640
  CI (99.9%): [2083.000, 2083.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.concMarkSweepGC:·gc.time":
  138303.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (9091.000, 9220.200, 9342.000), stdev = 76.669
  CI (99.9%): [138303.000, 138303.000] (assumes normal distribution)


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UseG1GC -Xms4g -Xmx4g -XX:+AlwaysPreTouch
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.g1GC
# Parameters: (objectsSize = _4_KB)

# Run progress: 16.67% complete, ETA 01:03:15
# Fork: 1 of 3
# Warmup Iteration   1: 0.470 ops/s
# Warmup Iteration   2: 0.481 ops/s
# Warmup Iteration   3: 0.487 ops/s
# Warmup Iteration   4: 0.472 ops/s
# Warmup Iteration   5: 0.478 ops/s
Iteration   1: 0.494 ops/s
                 ·gc.alloc.rate:                   4653.542 MB/sec
                 ·gc.alloc.rate.norm:              10358243537.600 B/op
                 ·gc.churn.G1_Eden_Space:          4681.812 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     10421167718.400 B/op
                 ·gc.churn.G1_Old_Gen:             940.033 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:        2092403616.000 B/op
                 ·gc.churn.G1_Survivor_Space:      148.297 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 330091724.800 B/op
                 ·gc.count:                        135.000 counts
                 ·gc.time:                         6868.000 ms

Iteration   2: 0.476 ops/s
                 ·gc.alloc.rate:                   4489.657 MB/sec
                 ·gc.alloc.rate.norm:              10358243544.000 B/op
                 ·gc.churn.G1_Eden_Space:          4469.846 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     10312535244.800 B/op
                 ·gc.churn.G1_Old_Gen:             1582.735 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:        3651583041.600 B/op
                 ·gc.churn.G1_Survivor_Space:      155.800 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 359451852.800 B/op
                 ·gc.count:                        136.000 counts
                 ·gc.time:                         7298.000 ms

Iteration   3: 0.491 ops/s
                 ·gc.alloc.rate:                   4623.575 MB/sec
                 ·gc.alloc.rate.norm:              10358243537.600 B/op
                 ·gc.churn.G1_Eden_Space:          4650.352 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     10418231705.600 B/op
                 ·gc.churn.G1_Old_Gen:             933.981 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:        2092407283.200 B/op
                 ·gc.churn.G1_Survivor_Space:      144.908 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 324639129.600 B/op
                 ·gc.count:                        141.000 counts
                 ·gc.time:                         6890.000 ms

Iteration   4: 0.481 ops/s
                 ·gc.alloc.rate:                   4530.878 MB/sec
                 ·gc.alloc.rate.norm:              10358243537.600 B/op
                 ·gc.churn.G1_Eden_Space:          4531.065 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     10358672588.800 B/op
                 ·gc.churn.G1_Old_Gen:             1371.881 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:        3136319009.600 B/op
                 ·gc.churn.G1_Survivor_Space:      147.507 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 337222041.600 B/op
                 ·gc.count:                        139.000 counts
                 ·gc.time:                         7172.000 ms

Iteration   5: 0.470 ops/s
                 ·gc.alloc.rate:                   4431.349 MB/sec
                 ·gc.alloc.rate.norm:              10358243544.000 B/op
                 ·gc.churn.G1_Eden_Space:          4462.395 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     10430814617.600 B/op
                 ·gc.churn.G1_Old_Gen:             1565.846 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:        3660152894.400 B/op
                 ·gc.churn.G1_Survivor_Space:      150.547 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 351902105.600 B/op
                 ·gc.count:                        141.000 counts
                 ·gc.time:                         7383.000 ms


# Run progress: 19.44% complete, ETA 01:00:03
# Fork: 2 of 3
# Warmup Iteration   1: 0.468 ops/s
# Warmup Iteration   2: 0.489 ops/s
# Warmup Iteration   3: 0.480 ops/s
# Warmup Iteration   4: 0.487 ops/s
# Warmup Iteration   5: 0.482 ops/s
Iteration   1: 0.486 ops/s
                 ·gc.alloc.rate:                   4580.889 MB/sec
                 ·gc.alloc.rate.norm:              10358243544.000 B/op
                 ·gc.churn.G1_Eden_Space:          4575.143 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     10345250816.000 B/op
                 ·gc.churn.G1_Old_Gen:             1154.990 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:        2611647145.600 B/op
                 ·gc.churn.G1_Survivor_Space:      147.651 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 333866598.400 B/op
                 ·gc.count:                        136.000 counts
                 ·gc.time:                         7007.000 ms

Iteration   2: 0.479 ops/s
                 ·gc.alloc.rate:                   4513.802 MB/sec
                 ·gc.alloc.rate.norm:              10358243537.600 B/op
                 ·gc.churn.G1_Eden_Space:          4526.601 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     10387613286.400 B/op
                 ·gc.churn.G1_Old_Gen:             1367.434 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:        3137978036.800 B/op
                 ·gc.churn.G1_Survivor_Space:      150.424 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 345191219.200 B/op
                 ·gc.count:                        138.000 counts
                 ·gc.time:                         7186.000 ms

Iteration   3: 0.480 ops/s
                 ·gc.alloc.rate:                   4527.507 MB/sec
                 ·gc.alloc.rate.norm:              10358243544.000 B/op
                 ·gc.churn.G1_Eden_Space:          4574.261 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     10465207910.400 B/op
                 ·gc.churn.G1_Old_Gen:             1142.720 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:        2614367811.200 B/op
                 ·gc.churn.G1_Survivor_Space:      145.014 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 331769446.400 B/op
                 ·gc.count:                        143.000 counts
                 ·gc.time:                         7098.000 ms

Iteration   4: 0.479 ops/s
                 ·gc.alloc.rate:                   4510.659 MB/sec
                 ·gc.alloc.rate.norm:              10358243537.600 B/op
                 ·gc.churn.G1_Eden_Space:          4509.020 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     10354478284.800 B/op
                 ·gc.churn.G1_Old_Gen:             1364.661 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:        3133797524.800 B/op
                 ·gc.churn.G1_Survivor_Space:      152.145 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 349385523.200 B/op
                 ·gc.count:                        136.000 counts
                 ·gc.time:                         7194.000 ms

Iteration   5: 0.491 ops/s
                 ·gc.alloc.rate:                   4623.933 MB/sec
                 ·gc.alloc.rate.norm:              10358243537.600 B/op
                 ·gc.churn.G1_Eden_Space:          4638.542 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     10390968729.600 B/op
                 ·gc.churn.G1_Old_Gen:             934.981 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:        2094484644.800 B/op
                 ·gc.churn.G1_Survivor_Space:      147.915 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 331350016.000 B/op
                 ·gc.count:                        135.000 counts
                 ·gc.time:                         6853.000 ms


# Run progress: 22.22% complete, ETA 00:57:10
# Fork: 3 of 3
# Warmup Iteration   1: 0.462 ops/s
# Warmup Iteration   2: 0.482 ops/s
# Warmup Iteration   3: 0.479 ops/s
# Warmup Iteration   4: 0.479 ops/s
# Warmup Iteration   5: 0.494 ops/s
Iteration   1: 0.488 ops/s
                 ·gc.alloc.rate:                   4597.893 MB/sec
                 ·gc.alloc.rate.norm:              10358243537.600 B/op
                 ·gc.churn.G1_Eden_Space:          4578.162 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     10313793536.000 B/op
                 ·gc.churn.G1_Old_Gen:             1162.799 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:        2619581563.200 B/op
                 ·gc.churn.G1_Survivor_Space:      145.593 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 327994572.800 B/op
                 ·gc.count:                        136.000 counts
                 ·gc.time:                         6979.000 ms

Iteration   2: 0.478 ops/s
                 ·gc.alloc.rate:                   4503.870 MB/sec
                 ·gc.alloc.rate.norm:              10358243537.600 B/op
                 ·gc.churn.G1_Eden_Space:          4535.607 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     10431234048.000 B/op
                 ·gc.churn.G1_Old_Gen:             1138.113 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:        2617493472.000 B/op
                 ·gc.churn.G1_Survivor_Space:      144.074 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 331350016.000 B/op
                 ·gc.count:                        143.000 counts
                 ·gc.time:                         7091.000 ms

Iteration   3: 0.473 ops/s
                 ·gc.alloc.rate:                   4463.134 MB/sec
                 ·gc.alloc.rate.norm:              10358243544.000 B/op
                 ·gc.churn.G1_Eden_Space:          4476.692 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     10389710438.400 B/op
                 ·gc.churn.G1_Old_Gen:             1351.458 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:        3136525064.000 B/op
                 ·gc.churn.G1_Survivor_Space:      145.121 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 336802611.200 B/op
                 ·gc.count:                        143.000 counts
                 ·gc.time:                         7221.000 ms

Iteration   4: 0.483 ops/s
                 ·gc.alloc.rate:                   4553.255 MB/sec
                 ·gc.alloc.rate.norm:              10358243544.000 B/op
                 ·gc.churn.G1_Eden_Space:          4559.712 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     10372933222.400 B/op
                 ·gc.churn.G1_Old_Gen:             1149.859 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:        2615826286.400 B/op
                 ·gc.churn.G1_Survivor_Space:      150.448 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 342255206.400 B/op
                 ·gc.count:                        137.000 counts
                 ·gc.time:                         7049.000 ms

Iteration   5: 0.486 ops/s
                 ·gc.alloc.rate:                   4577.771 MB/sec
                 ·gc.alloc.rate.norm:              10358243537.600 B/op
                 ·gc.churn.G1_Eden_Space:          4597.609 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     10403132211.200 B/op
                 ·gc.churn.G1_Old_Gen:             1154.752 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:        2612887640.000 B/op
                 ·gc.churn.G1_Survivor_Space:      150.702 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 340996915.200 B/op
                 ·gc.count:                        136.000 counts
                 ·gc.time:                         7039.000 ms



Result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.g1GC":
  0.482 ±(99.9%) 0.008 ops/s [Average]
  (min, avg, max) = (0.470, 0.482, 0.494), stdev = 0.007
  CI (99.9%): [0.475, 0.490] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.g1GC:·gc.alloc.rate":
  4545.448 ±(99.9%) 67.880 MB/sec [Average]
  (min, avg, max) = (4431.349, 4545.448, 4653.542), stdev = 63.495
  CI (99.9%): [4477.568, 4613.327] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.g1GC:·gc.alloc.rate.norm":
  10358243540.160 ±(99.9%) 3.470 B/op [Average]
  (min, avg, max) = (10358243537.600, 10358243540.160, 10358243544.000), stdev = 3.245
  CI (99.9%): [10358243536.690, 10358243543.630] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.g1GC:·gc.churn.G1_Eden_Space":
  4557.788 ±(99.9%) 70.576 MB/sec [Average]
  (min, avg, max) = (4462.395, 4557.788, 4681.812), stdev = 66.017
  CI (99.9%): [4487.212, 4628.364] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.g1GC:·gc.churn.G1_Eden_Space.norm":
  10386382957.227 ±(99.9%) 47051571.117 B/op [Average]
  (min, avg, max) = (10312535244.800, 10386382957.227, 10465207910.400), stdev = 44012068.820
  CI (99.9%): [10339331386.109, 10433434528.344] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.g1GC:·gc.churn.G1_Old_Gen":
  1221.083 ±(99.9%) 222.229 MB/sec [Average]
  (min, avg, max) = (933.981, 1221.083, 1582.735), stdev = 207.873
  CI (99.9%): [998.854, 1443.312] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.g1GC:·gc.churn.G1_Old_Gen.norm":
  2788497002.240 ±(99.9%) 543536882.443 B/op [Average]
  (min, avg, max) = (2092403616.000, 2788497002.240, 3660152894.400), stdev = 508424737.114
  CI (99.9%): [2244960119.797, 3332033884.683] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.g1GC:·gc.churn.G1_Survivor_Space":
  148.410 ±(99.9%) 3.495 MB/sec [Average]
  (min, avg, max) = (144.074, 148.410, 155.800), stdev = 3.269
  CI (99.9%): [144.915, 151.904] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.g1GC:·gc.churn.G1_Survivor_Space.norm":
  338284598.613 ±(99.9%) 10491037.162 B/op [Average]
  (min, avg, max) = (324639129.600, 338284598.613, 359451852.800), stdev = 9813322.671
  CI (99.9%): [327793561.451, 348775635.776] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.g1GC:·gc.count":
  2075.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (135.000, 138.333, 143.000), stdev = 3.063
  CI (99.9%): [2075.000, 2075.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.g1GC:·gc.time":
  106328.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (6853.000, 7088.533, 7383.000), stdev = 156.298
  CI (99.9%): [106328.000, 106328.000] (assumes normal distribution)


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UseG1GC -Xms4g -Xmx4g -XX:+AlwaysPreTouch
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.g1GC
# Parameters: (objectsSize = _4_MB)

# Run progress: 25.00% complete, ETA 00:54:33
# Fork: 1 of 3
# Warmup Iteration   1: 1.332 ops/s
# Warmup Iteration   2: 1.324 ops/s
# Warmup Iteration   3: 1.328 ops/s
# Warmup Iteration   4: 1.350 ops/s
# Warmup Iteration   5: 1.353 ops/s
Iteration   1: 1.331 ops/s
                 ·gc.alloc.rate:                   12483.882 MB/sec
                 ·gc.alloc.rate.norm:              10301259935.429 B/op
                 ·gc.churn.G1_Eden_Space:          0.182 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     149796.571 B/op
                 ·gc.churn.G1_Old_Gen:             18725.733 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:        15451815936.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.038 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 31402.286 B/op
                 ·gc.count:                        544.000 counts
                 ·gc.time:                         819.000 ms

Iteration   2: 1.322 ops/s
                 ·gc.alloc.rate:                   12395.935 MB/sec
                 ·gc.alloc.rate.norm:              10301259935.429 B/op
                 ·gc.churn.G1_Eden_Space:          0.180 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     149796.571 B/op
                 ·gc.churn.G1_Old_Gen:             18593.813 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:        15451815936.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.040 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 33445.714 B/op
                 ·gc.count:                        555.000 counts
                 ·gc.time:                         841.000 ms

Iteration   3: 1.345 ops/s
                 ·gc.alloc.rate:                   12607.003 MB/sec
                 ·gc.alloc.rate.norm:              10301259935.429 B/op
                 ·gc.churn.G1_Eden_Space:          0.183 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     149796.571 B/op
                 ·gc.churn.G1_Old_Gen:             18910.414 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:        15451815936.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.042 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 34056.000 B/op
                 ·gc.count:                        537.000 counts
                 ·gc.time:                         805.000 ms

Iteration   4: 1.350 ops/s
                 ·gc.alloc.rate:                   12651.277 MB/sec
                 ·gc.alloc.rate.norm:              10301259935.429 B/op
                 ·gc.churn.G1_Eden_Space:          0.184 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     149796.571 B/op
                 ·gc.churn.G1_Old_Gen:             18976.825 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:        15451815936.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.041 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 33613.714 B/op
                 ·gc.count:                        533.000 counts
                 ·gc.time:                         805.000 ms

Iteration   5: 1.316 ops/s
                 ·gc.alloc.rate:                   12347.869 MB/sec
                 ·gc.alloc.rate.norm:              10301259935.429 B/op
                 ·gc.churn.G1_Eden_Space:          0.180 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     149796.571 B/op
                 ·gc.churn.G1_Old_Gen:             18521.715 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:        15451815753.143 B/op
                 ·gc.churn.G1_Survivor_Space:      0.047 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 39068.571 B/op
                 ·gc.count:                        544.000 counts
                 ·gc.time:                         832.000 ms


# Run progress: 27.78% complete, ETA 00:52:07
# Fork: 2 of 3
# Warmup Iteration   1: 1.326 ops/s
# Warmup Iteration   2: 1.344 ops/s
# Warmup Iteration   3: 1.374 ops/s
# Warmup Iteration   4: 1.339 ops/s
# Warmup Iteration   5: 1.345 ops/s
Iteration   1: 1.378 ops/s
                 ·gc.alloc.rate:                   12899.991 MB/sec
                 ·gc.alloc.rate.norm:              10301259933.143 B/op
                 ·gc.churn.G1_Eden_Space:          0.188 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     149796.571 B/op
                 ·gc.churn.G1_Old_Gen:             19349.895 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:        15451815936.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.044 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 34940.571 B/op
                 ·gc.count:                        523.000 counts
                 ·gc.time:                         762.000 ms

Iteration   2: 1.389 ops/s
                 ·gc.alloc.rate:                   13001.133 MB/sec
                 ·gc.alloc.rate.norm:              10301259935.429 B/op
                 ·gc.churn.G1_Eden_Space:          0.189 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     149796.571 B/op
                 ·gc.churn.G1_Old_Gen:             19501.606 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:        15451815936.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.042 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 33483.429 B/op
                 ·gc.count:                        524.000 counts
                 ·gc.time:                         759.000 ms

Iteration   3: 1.470 ops/s
                 ·gc.alloc.rate:                   13769.398 MB/sec
                 ·gc.alloc.rate.norm:              10301259931.200 B/op
                 ·gc.churn.G1_Eden_Space:          0.187 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     139810.133 B/op
                 ·gc.churn.G1_Old_Gen:             20653.998 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:        15451815936.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.047 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 34950.400 B/op
                 ·gc.count:                        567.000 counts
                 ·gc.time:                         765.000 ms

Iteration   4: 1.504 ops/s
                 ·gc.alloc.rate:                   14111.352 MB/sec
                 ·gc.alloc.rate.norm:              10301259929.500 B/op
                 ·gc.churn.G1_Eden_Space:          0.180 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     131072.000 B/op
                 ·gc.churn.G1_Old_Gen:             21166.927 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:        15451815936.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.049 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 36120.000 B/op
                 ·gc.count:                        607.000 counts
                 ·gc.time:                         768.000 ms

Iteration   5: 1.545 ops/s
                 ·gc.alloc.rate:                   14480.174 MB/sec
                 ·gc.alloc.rate.norm:              10301259931.500 B/op
                 ·gc.churn.G1_Eden_Space:          0.184 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     131072.000 B/op
                 ·gc.churn.G1_Old_Gen:             21720.158 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:        15451815936.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.046 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 32637.000 B/op
                 ·gc.count:                        606.000 counts
                 ·gc.time:                         748.000 ms


# Run progress: 30.56% complete, ETA 00:49:43
# Fork: 3 of 3
# Warmup Iteration   1: 1.438 ops/s
# Warmup Iteration   2: 1.348 ops/s
# Warmup Iteration   3: 1.322 ops/s
# Warmup Iteration   4: 1.321 ops/s
# Warmup Iteration   5: 1.343 ops/s
Iteration   1: 1.341 ops/s
                 ·gc.alloc.rate:                   12571.553 MB/sec
                 ·gc.alloc.rate.norm:              10301259935.429 B/op
                 ·gc.churn.G1_Eden_Space:          0.183 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     149796.571 B/op
                 ·gc.churn.G1_Old_Gen:             18857.239 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:        15451815936.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.044 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 35972.571 B/op
                 ·gc.count:                        552.000 counts
                 ·gc.time:                         819.000 ms

Iteration   2: 1.391 ops/s
                 ·gc.alloc.rate:                   13020.677 MB/sec
                 ·gc.alloc.rate.norm:              10301259933.143 B/op
                 ·gc.churn.G1_Eden_Space:          0.189 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     149796.571 B/op
                 ·gc.churn.G1_Old_Gen:             19530.922 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:        15451815753.143 B/op
                 ·gc.churn.G1_Survivor_Space:      0.048 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 38256.000 B/op
                 ·gc.count:                        533.000 counts
                 ·gc.time:                         773.000 ms

Iteration   3: 1.379 ops/s
                 ·gc.alloc.rate:                   12906.778 MB/sec
                 ·gc.alloc.rate.norm:              10301259937.714 B/op
                 ·gc.churn.G1_Eden_Space:          0.188 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     149796.571 B/op
                 ·gc.churn.G1_Old_Gen:             19360.074 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:        15451815936.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.042 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 33171.429 B/op
                 ·gc.count:                        514.000 counts
                 ·gc.time:                         759.000 ms

Iteration   4: 1.328 ops/s
                 ·gc.alloc.rate:                   12457.883 MB/sec
                 ·gc.alloc.rate.norm:              10301259933.143 B/op
                 ·gc.churn.G1_Eden_Space:          0.181 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     149796.571 B/op
                 ·gc.churn.G1_Old_Gen:             18686.734 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:        15451815936.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.041 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 34056.000 B/op
                 ·gc.count:                        549.000 counts
                 ·gc.time:                         838.000 ms

Iteration   5: 1.353 ops/s
                 ·gc.alloc.rate:                   12679.229 MB/sec
                 ·gc.alloc.rate.norm:              10301259933.143 B/op
                 ·gc.churn.G1_Eden_Space:          0.184 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     149796.571 B/op
                 ·gc.churn.G1_Old_Gen:             19018.753 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:        15451815936.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.041 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 33171.429 B/op
                 ·gc.count:                        547.000 counts
                 ·gc.time:                         818.000 ms



Result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.g1GC":
  1.383 ±(99.9%) 0.074 ops/s [Average]
  (min, avg, max) = (1.316, 1.383, 1.545), stdev = 0.070
  CI (99.9%): [1.309, 1.457] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.g1GC:·gc.alloc.rate":
  12958.942 ±(99.9%) 695.464 MB/sec [Average]
  (min, avg, max) = (12347.869, 12958.942, 14480.174), stdev = 650.537
  CI (99.9%): [12263.478, 13654.406] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.g1GC:·gc.alloc.rate.norm":
  10301259934.032 ±(99.9%) 2.310 B/op [Average]
  (min, avg, max) = (10301259929.500, 10301259934.032, 10301259937.714), stdev = 2.160
  CI (99.9%): [10301259931.723, 10301259936.342] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.g1GC:·gc.churn.G1_Eden_Space":
  0.184 ±(99.9%) 0.004 MB/sec [Average]
  (min, avg, max) = (0.180, 0.184, 0.189), stdev = 0.003
  CI (99.9%): [0.180, 0.188] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.g1GC:·gc.churn.G1_Eden_Space.norm":
  146634.199 ±(99.9%) 7289.681 B/op [Average]
  (min, avg, max) = (131072.000, 146634.199, 149796.571), stdev = 6818.772
  CI (99.9%): [139344.518, 153923.880] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.g1GC:·gc.churn.G1_Old_Gen":
  19438.320 ±(99.9%) 1043.191 MB/sec [Average]
  (min, avg, max) = (18521.715, 19438.320, 21720.158), stdev = 975.801
  CI (99.9%): [18395.130, 20481.511] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.g1GC:·gc.churn.G1_Old_Gen.norm":
  15451815911.619 ±(99.9%) 68.785 B/op [Average]
  (min, avg, max) = (15451815753.143, 15451815911.619, 15451815936.000), stdev = 64.341
  CI (99.9%): [15451815842.834, 15451815980.404] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.g1GC:·gc.churn.G1_Survivor_Space":
  0.043 ±(99.9%) 0.004 MB/sec [Average]
  (min, avg, max) = (0.038, 0.043, 0.049), stdev = 0.003
  CI (99.9%): [0.040, 0.047] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.g1GC:·gc.churn.G1_Survivor_Space.norm":
  34556.341 ±(99.9%) 2213.961 B/op [Average]
  (min, avg, max) = (31402.286, 34556.341, 39068.571), stdev = 2070.940
  CI (99.9%): [32342.380, 36770.302] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.g1GC:·gc.count":
  8235.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (514.000, 549.000, 607.000), stdev = 27.016
  CI (99.9%): [8235.000, 8235.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.g1GC:·gc.time":
  11911.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (748.000, 794.067, 841.000), stdev = 32.956
  CI (99.9%): [11911.000, 11911.000] (assumes normal distribution)


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UseParallelOldGC -Xms4g -Xmx4g -XX:+AlwaysPreTouch
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.parallelOldGC
# Parameters: (objectsSize = _4_KB)

# Run progress: 33.33% complete, ETA 00:47:27
# Fork: 1 of 3
# Warmup Iteration   1: 0.384 ops/s
# Warmup Iteration   2: 0.369 ops/s
# Warmup Iteration   3: 0.373 ops/s
# Warmup Iteration   4: 0.375 ops/s
# Warmup Iteration   5: 0.369 ops/s
Iteration   1: 0.376 ops/s
                 ·gc.alloc.rate:                   3398.763 MB/sec
                 ·gc.alloc.rate.norm:              9927067854.000 B/op
                 ·gc.churn.PS_Eden_Space:          3389.451 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     9899868160.000 B/op
                 ·gc.churn.PS_Old_Gen:             2827.429 MB/sec
                 ·gc.churn.PS_Old_Gen.norm:        8258321050.000 B/op
                 ·gc.churn.PS_Survivor_Space:      653.388 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 1908408320.000 B/op
                 ·gc.count:                        99.000 counts
                 ·gc.time:                         7847.000 ms

Iteration   2: 0.374 ops/s
                 ·gc.alloc.rate:                   3380.816 MB/sec
                 ·gc.alloc.rate.norm:              9927067854.000 B/op
                 ·gc.churn.PS_Eden_Space:          3371.552 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     9899868160.000 B/op
                 ·gc.churn.PS_Old_Gen:             2812.563 MB/sec
                 ·gc.churn.PS_Old_Gen.norm:        8258509818.000 B/op
                 ·gc.churn.PS_Survivor_Space:      649.942 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 1908421312.000 B/op
                 ·gc.count:                        99.000 counts
                 ·gc.time:                         7898.000 ms

Iteration   3: 0.374 ops/s
                 ·gc.alloc.rate:                   3382.996 MB/sec
                 ·gc.alloc.rate.norm:              9927067846.000 B/op
                 ·gc.churn.PS_Eden_Space:          3373.727 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     9899868160.000 B/op
                 ·gc.churn.PS_Old_Gen:             2814.357 MB/sec
                 ·gc.churn.PS_Old_Gen.norm:        8258453348.000 B/op
                 ·gc.churn.PS_Survivor_Space:      650.361 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 1908421312.000 B/op
                 ·gc.count:                        99.000 counts
                 ·gc.time:                         7908.000 ms

Iteration   4: 0.373 ops/s
                 ·gc.alloc.rate:                   3370.414 MB/sec
                 ·gc.alloc.rate.norm:              9927067846.000 B/op
                 ·gc.churn.PS_Eden_Space:          3401.675 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     10019143680.000 B/op
                 ·gc.churn.PS_Old_Gen:             2803.766 MB/sec
                 ·gc.churn.PS_Old_Gen.norm:        8258087740.000 B/op
                 ·gc.churn.PS_Survivor_Space:      647.938 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 1908408320.000 B/op
                 ·gc.count:                        100.000 counts
                 ·gc.time:                         7946.000 ms

Iteration   5: 0.372 ops/s
                 ·gc.alloc.rate:                   3363.366 MB/sec
                 ·gc.alloc.rate.norm:              9927067846.000 B/op
                 ·gc.churn.PS_Eden_Space:          3354.150 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     9899868160.000 B/op
                 ·gc.churn.PS_Old_Gen:             2798.076 MB/sec
                 ·gc.churn.PS_Old_Gen.norm:        8258599840.000 B/op
                 ·gc.churn.PS_Survivor_Space:      646.588 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 1908421312.000 B/op
                 ·gc.count:                        99.000 counts
                 ·gc.time:                         7938.000 ms


# Run progress: 36.11% complete, ETA 00:45:19
# Fork: 2 of 3
# Warmup Iteration   1: 0.381 ops/s
# Warmup Iteration   2: 0.375 ops/s
# Warmup Iteration   3: 0.375 ops/s
# Warmup Iteration   4: 0.374 ops/s
# Warmup Iteration   5: 0.371 ops/s
Iteration   1: 0.374 ops/s
                 ·gc.alloc.rate:                   3384.997 MB/sec
                 ·gc.alloc.rate.norm:              9927067846.000 B/op
                 ·gc.churn.PS_Eden_Space:          3375.722 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     9899868160.000 B/op
                 ·gc.churn.PS_Old_Gen:             2815.989 MB/sec
                 ·gc.churn.PS_Old_Gen.norm:        8258358066.000 B/op
                 ·gc.churn.PS_Survivor_Space:      650.742 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 1908408320.000 B/op
                 ·gc.count:                        99.000 counts
                 ·gc.time:                         7853.000 ms

Iteration   2: 0.373 ops/s
                 ·gc.alloc.rate:                   3376.512 MB/sec
                 ·gc.alloc.rate.norm:              9927067854.000 B/op
                 ·gc.churn.PS_Eden_Space:          3367.260 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     9899868160.000 B/op
                 ·gc.churn.PS_Old_Gen:             2809.013 MB/sec
                 ·gc.churn.PS_Old_Gen.norm:        8258600390.000 B/op
                 ·gc.churn.PS_Survivor_Space:      649.117 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 1908427808.000 B/op
                 ·gc.count:                        99.000 counts
                 ·gc.time:                         7944.000 ms

Iteration   3: 0.375 ops/s
                 ·gc.alloc.rate:                   3391.809 MB/sec
                 ·gc.alloc.rate.norm:              9927067846.000 B/op
                 ·gc.churn.PS_Eden_Space:          3382.515 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     9899868160.000 B/op
                 ·gc.churn.PS_Old_Gen:             2821.642 MB/sec
                 ·gc.churn.PS_Old_Gen.norm:        8258316492.000 B/op
                 ·gc.churn.PS_Survivor_Space:      652.053 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 1908414816.000 B/op
                 ·gc.count:                        99.000 counts
                 ·gc.time:                         7894.000 ms

Iteration   4: 0.372 ops/s
                 ·gc.alloc.rate:                   3366.599 MB/sec
                 ·gc.alloc.rate.norm:              9927067846.000 B/op
                 ·gc.churn.PS_Eden_Space:          3397.825 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     10019143680.000 B/op
                 ·gc.churn.PS_Old_Gen:             2800.599 MB/sec
                 ·gc.churn.PS_Old_Gen.norm:        8258107256.000 B/op
                 ·gc.churn.PS_Survivor_Space:      647.205 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 1908408320.000 B/op
                 ·gc.count:                        100.000 counts
                 ·gc.time:                         7937.000 ms

Iteration   5: 0.374 ops/s
                 ·gc.alloc.rate:                   3382.707 MB/sec
                 ·gc.alloc.rate.norm:              9927067846.000 B/op
                 ·gc.churn.PS_Eden_Space:          3373.438 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     9899868160.000 B/op
                 ·gc.churn.PS_Old_Gen:             2814.173 MB/sec
                 ·gc.churn.PS_Old_Gen.norm:        8258618344.000 B/op
                 ·gc.churn.PS_Survivor_Space:      650.306 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 1908421312.000 B/op
                 ·gc.count:                        99.000 counts
                 ·gc.time:                         7923.000 ms


# Run progress: 38.89% complete, ETA 00:43:13
# Fork: 3 of 3
# Warmup Iteration   1: 0.376 ops/s
# Warmup Iteration   2: 0.375 ops/s
# Warmup Iteration   3: 0.375 ops/s
# Warmup Iteration   4: 0.372 ops/s
# Warmup Iteration   5: 0.372 ops/s
Iteration   1: 0.374 ops/s
                 ·gc.alloc.rate:                   3384.738 MB/sec
                 ·gc.alloc.rate.norm:              9927067846.000 B/op
                 ·gc.churn.PS_Eden_Space:          3375.464 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     9899868160.000 B/op
                 ·gc.churn.PS_Old_Gen:             2815.767 MB/sec
                 ·gc.churn.PS_Old_Gen.norm:        8258338616.000 B/op
                 ·gc.churn.PS_Survivor_Space:      650.692 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 1908408320.000 B/op
                 ·gc.count:                        99.000 counts
                 ·gc.time:                         7883.000 ms

Iteration   2: 0.372 ops/s
                 ·gc.alloc.rate:                   3360.630 MB/sec
                 ·gc.alloc.rate.norm:              9927067846.000 B/op
                 ·gc.churn.PS_Eden_Space:          3351.422 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     9899868160.000 B/op
                 ·gc.churn.PS_Old_Gen:             2795.801 MB/sec
                 ·gc.churn.PS_Old_Gen.norm:        8258602454.000 B/op
                 ·gc.churn.PS_Survivor_Space:      646.064 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 1908427808.000 B/op
                 ·gc.count:                        99.000 counts
                 ·gc.time:                         7971.000 ms

Iteration   3: 0.372 ops/s
                 ·gc.alloc.rate:                   3361.254 MB/sec
                 ·gc.alloc.rate.norm:              9927067846.000 B/op
                 ·gc.churn.PS_Eden_Space:          3352.045 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     9899868160.000 B/op
                 ·gc.churn.PS_Old_Gen:             2796.230 MB/sec
                 ·gc.churn.PS_Old_Gen.norm:        8258336008.000 B/op
                 ·gc.churn.PS_Survivor_Space:      646.179 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 1908414816.000 B/op
                 ·gc.count:                        99.000 counts
                 ·gc.time:                         7928.000 ms

Iteration   4: 0.373 ops/s
                 ·gc.alloc.rate:                   3373.170 MB/sec
                 ·gc.alloc.rate.norm:              9927067862.000 B/op
                 ·gc.churn.PS_Eden_Space:          3404.457 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     10019143680.000 B/op
                 ·gc.churn.PS_Old_Gen:             2806.058 MB/sec
                 ·gc.churn.PS_Old_Gen.norm:        8258085644.000 B/op
                 ·gc.churn.PS_Survivor_Space:      648.468 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 1908408320.000 B/op
                 ·gc.count:                        100.000 counts
                 ·gc.time:                         7932.000 ms

Iteration   5: 0.372 ops/s
                 ·gc.alloc.rate:                   3364.931 MB/sec
                 ·gc.alloc.rate.norm:              9927067854.000 B/op
                 ·gc.churn.PS_Eden_Space:          3355.711 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     9899868160.000 B/op
                 ·gc.churn.PS_Old_Gen:             2799.388 MB/sec
                 ·gc.churn.PS_Old_Gen.norm:        8258627604.000 B/op
                 ·gc.churn.PS_Survivor_Space:      646.888 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 1908421312.000 B/op
                 ·gc.count:                        99.000 counts
                 ·gc.time:                         7935.000 ms



Result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.parallelOldGC":
  0.373 ±(99.9%) 0.001 ops/s [Average]
  (min, avg, max) = (0.372, 0.373, 0.376), stdev = 0.001
  CI (99.9%): [0.372, 0.375] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.parallelOldGC:·gc.alloc.rate":
  3376.247 ±(99.9%) 12.471 MB/sec [Average]
  (min, avg, max) = (3360.630, 3376.247, 3398.763), stdev = 11.666
  CI (99.9%): [3363.775, 3388.718] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.parallelOldGC:·gc.alloc.rate.norm":
  9927067849.200 ±(99.9%) 5.409 B/op [Average]
  (min, avg, max) = (9927067846.000, 9927067849.200, 9927067862.000), stdev = 5.060
  CI (99.9%): [9927067843.791, 9927067854.609] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.parallelOldGC:·gc.churn.PS_Eden_Space":
  3375.094 ±(99.9%) 18.805 MB/sec [Average]
  (min, avg, max) = (3351.422, 3375.094, 3404.457), stdev = 17.590
  CI (99.9%): [3356.290, 3393.899] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.parallelOldGC:·gc.churn.PS_Eden_Space.norm":
  9923723264.000 ±(99.9%) 52795300.721 B/op [Average]
  (min, avg, max) = (9899868160.000, 9923723264.000, 10019143680.000), stdev = 49384757.055
  CI (99.9%): [9870927963.279, 9976518564.721] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.parallelOldGC:·gc.churn.PS_Old_Gen":
  2808.723 ±(99.9%) 10.368 MB/sec [Average]
  (min, avg, max) = (2795.801, 2808.723, 2827.429), stdev = 9.698
  CI (99.9%): [2798.356, 2819.091] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.parallelOldGC:·gc.churn.PS_Old_Gen.norm":
  8258397511.333 ±(99.9%) 210002.840 B/op [Average]
  (min, avg, max) = (8258085644.000, 8258397511.333, 8258627604.000), stdev = 196436.787
  CI (99.9%): [8258187508.494, 8258607514.173] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.parallelOldGC:·gc.churn.PS_Survivor_Space":
  649.062 ±(99.9%) 2.397 MB/sec [Average]
  (min, avg, max) = (646.064, 649.062, 653.388), stdev = 2.242
  CI (99.9%): [646.665, 651.459] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.parallelOldGC:·gc.churn.PS_Survivor_Space.norm":
  1908416115.200 ±(99.9%) 7961.470 B/op [Average]
  (min, avg, max) = (1908408320.000, 1908416115.200, 1908427808.000), stdev = 7447.164
  CI (99.9%): [1908408153.730, 1908424076.670] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.parallelOldGC:·gc.count":
  1488.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (99.000, 99.200, 100.000), stdev = 0.414
  CI (99.9%): [1488.000, 1488.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.parallelOldGC:·gc.time":
  118737.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (7847.000, 7915.800, 7971.000), stdev = 34.984
  CI (99.9%): [118737.000, 118737.000] (assumes normal distribution)


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UseParallelOldGC -Xms4g -Xmx4g -XX:+AlwaysPreTouch
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.parallelOldGC
# Parameters: (objectsSize = _4_MB)

# Run progress: 41.67% complete, ETA 00:41:09
# Fork: 1 of 3
# Warmup Iteration   1: 0.543 ops/s
# Warmup Iteration   2: 0.537 ops/s
# Warmup Iteration   3: 0.531 ops/s
# Warmup Iteration   4: 0.548 ops/s
# Warmup Iteration   5: 0.496 ops/s
Iteration   1: 0.482 ops/s
                 ·gc.alloc.rate:                   4322.058 MB/sec
                 ·gc.alloc.rate.norm:              9865050289.600 B/op
                 ·gc.churn.PS_Eden_Space:          4331.296 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     9886136640.000 B/op
                 ·gc.churn.PS_Old_Gen:             3160.245 MB/sec
                 ·gc.churn.PS_Old_Gen.norm:        7213225696.000 B/op
                 ·gc.churn.PS_Survivor_Space:      293.426 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 669741152.000 B/op
                 ·gc.count:                        65.000 counts
                 ·gc.time:                         6982.000 ms

Iteration   2: 0.464 ops/s
                 ·gc.alloc.rate:                   4173.003 MB/sec
                 ·gc.alloc.rate.norm:              9865050289.600 B/op
                 ·gc.churn.PS_Eden_Space:          4272.798 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     10100968488.000 B/op
                 ·gc.churn.PS_Old_Gen:             2901.506 MB/sec
                 ·gc.churn.PS_Old_Gen.norm:        6859208740.800 B/op
                 ·gc.churn.PS_Survivor_Space:      313.100 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 740172960.000 B/op
                 ·gc.count:                        68.000 counts
                 ·gc.time:                         7345.000 ms

Iteration   3: 0.502 ops/s
                 ·gc.alloc.rate:                   4536.329 MB/sec
                 ·gc.alloc.rate.norm:              9865050288.000 B/op
                 ·gc.churn.PS_Eden_Space:          4613.994 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     10033948530.667 B/op
                 ·gc.churn.PS_Old_Gen:             3192.589 MB/sec
                 ·gc.churn.PS_Old_Gen.norm:        6942850209.333 B/op
                 ·gc.churn.PS_Survivor_Space:      324.149 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 704918826.667 B/op
                 ·gc.count:                        80.000 counts
                 ·gc.time:                         8575.000 ms

Iteration   4: 0.555 ops/s
                 ·gc.alloc.rate:                   4986.824 MB/sec
                 ·gc.alloc.rate.norm:              9865050281.333 B/op
                 ·gc.churn.PS_Eden_Space:          4979.334 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     9850233506.667 B/op
                 ·gc.churn.PS_Old_Gen:             3586.675 MB/sec
                 ·gc.churn.PS_Old_Gen.norm:        7095241996.000 B/op
                 ·gc.churn.PS_Survivor_Space:      341.489 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 675542202.667 B/op
                 ·gc.count:                        78.000 counts
                 ·gc.time:                         8285.000 ms

Iteration   5: 0.534 ops/s
                 ·gc.alloc.rate:                   4811.149 MB/sec
                 ·gc.alloc.rate.norm:              9865050276.000 B/op
                 ·gc.churn.PS_Eden_Space:          4891.264 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     10029324405.333 B/op
                 ·gc.churn.PS_Old_Gen:             3316.446 MB/sec
                 ·gc.churn.PS_Old_Gen.norm:        6800227330.667 B/op
                 ·gc.churn.PS_Survivor_Space:      343.805 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 704957056.000 B/op
                 ·gc.count:                        80.000 counts
                 ·gc.time:                         8751.000 ms


# Run progress: 44.44% complete, ETA 00:39:10
# Fork: 2 of 3
# Warmup Iteration   1: 0.543 ops/s
# Warmup Iteration   2: 0.531 ops/s
# Warmup Iteration   3: 0.536 ops/s
# Warmup Iteration   4: 0.540 ops/s
# Warmup Iteration   5: 0.509 ops/s
Iteration   1: 0.462 ops/s
                 ·gc.alloc.rate:                   4151.322 MB/sec
                 ·gc.alloc.rate.norm:              9865050289.600 B/op
                 ·gc.churn.PS_Eden_Space:          4250.614 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     10101004329.600 B/op
                 ·gc.churn.PS_Old_Gen:             3109.895 MB/sec
                 ·gc.churn.PS_Old_Gen.norm:        7390241152.000 B/op
                 ·gc.churn.PS_Survivor_Space:      311.495 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 740225388.800 B/op
                 ·gc.count:                        68.000 counts
                 ·gc.time:                         7286.000 ms

Iteration   2: 0.481 ops/s
                 ·gc.alloc.rate:                   4317.788 MB/sec
                 ·gc.alloc.rate.norm:              9865050296.000 B/op
                 ·gc.churn.PS_Eden_Space:          4326.988 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     9886069120.000 B/op
                 ·gc.churn.PS_Old_Gen:             2924.695 MB/sec
                 ·gc.churn.PS_Old_Gen.norm:        6682184875.200 B/op
                 ·gc.churn.PS_Survivor_Space:      293.116 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 669695276.800 B/op
                 ·gc.count:                        65.000 counts
                 ·gc.time:                         7062.000 ms

Iteration   3: 0.494 ops/s
                 ·gc.alloc.rate:                   4426.001 MB/sec
                 ·gc.alloc.rate.norm:              9865050304.000 B/op
                 ·gc.churn.PS_Eden_Space:          4531.843 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     10100960153.600 B/op
                 ·gc.churn.PS_Old_Gen:             3236.263 MB/sec
                 ·gc.churn.PS_Old_Gen.norm:        7213261529.600 B/op
                 ·gc.churn.PS_Survivor_Space:      332.108 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 740231942.400 B/op
                 ·gc.count:                        68.000 counts
                 ·gc.time:                         7096.000 ms

Iteration   4: 0.548 ops/s
                 ·gc.alloc.rate:                   4927.920 MB/sec
                 ·gc.alloc.rate.norm:              9865050294.667 B/op
                 ·gc.churn.PS_Eden_Space:          4920.519 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     9850235702.667 B/op
                 ·gc.churn.PS_Old_Gen:             3470.624 MB/sec
                 ·gc.churn.PS_Old_Gen.norm:        6947735081.333 B/op
                 ·gc.churn.PS_Survivor_Space:      337.467 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 675564048.000 B/op
                 ·gc.count:                        78.000 counts
                 ·gc.time:                         8405.000 ms

Iteration   5: 0.548 ops/s
                 ·gc.alloc.rate:                   4932.657 MB/sec
                 ·gc.alloc.rate.norm:              9865050276.000 B/op
                 ·gc.churn.PS_Eden_Space:          5014.796 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     10029322912.000 B/op
                 ·gc.churn.PS_Old_Gen:             3473.968 MB/sec
                 ·gc.churn.PS_Old_Gen.norm:        6947749678.667 B/op
                 ·gc.churn.PS_Survivor_Space:      352.480 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 704940672.000 B/op
                 ·gc.count:                        80.000 counts
                 ·gc.time:                         8429.000 ms


# Run progress: 47.22% complete, ETA 00:37:11
# Fork: 3 of 3
# Warmup Iteration   1: 0.540 ops/s
# Warmup Iteration   2: 0.532 ops/s
# Warmup Iteration   3: 0.542 ops/s
# Warmup Iteration   4: 0.533 ops/s
# Warmup Iteration   5: 0.513 ops/s
Iteration   1: 0.453 ops/s
                 ·gc.alloc.rate:                   4080.214 MB/sec
                 ·gc.alloc.rate.norm:              9865050289.600 B/op
                 ·gc.churn.PS_Eden_Space:          4177.804 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     10101003315.200 B/op
                 ·gc.churn.PS_Old_Gen:             2910.199 MB/sec
                 ·gc.churn.PS_Old_Gen.norm:        7036215544.000 B/op
                 ·gc.churn.PS_Survivor_Space:      306.154 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 740212281.600 B/op
                 ·gc.count:                        68.000 counts
                 ·gc.time:                         7533.000 ms

Iteration   2: 0.491 ops/s
                 ·gc.alloc.rate:                   4402.905 MB/sec
                 ·gc.alloc.rate.norm:              9865050296.000 B/op
                 ·gc.churn.PS_Eden_Space:          4412.288 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     9886073712.000 B/op
                 ·gc.churn.PS_Old_Gen:             3061.311 MB/sec
                 ·gc.churn.PS_Old_Gen.norm:        6859104323.200 B/op
                 ·gc.churn.PS_Survivor_Space:      298.891 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 669688723.200 B/op
                 ·gc.count:                        65.000 counts
                 ·gc.time:                         6879.000 ms

Iteration   3: 0.492 ops/s
                 ·gc.alloc.rate:                   4412.768 MB/sec
                 ·gc.alloc.rate.norm:              9865050304.000 B/op
                 ·gc.churn.PS_Eden_Space:          4518.292 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     10100956604.800 B/op
                 ·gc.churn.PS_Old_Gen:             3305.775 MB/sec
                 ·gc.churn.PS_Old_Gen.norm:        7390290603.200 B/op
                 ·gc.churn.PS_Survivor_Space:      331.113 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 740225388.800 B/op
                 ·gc.count:                        68.000 counts
                 ·gc.time:                         7107.000 ms

Iteration   4: 0.540 ops/s
                 ·gc.alloc.rate:                   4857.383 MB/sec
                 ·gc.alloc.rate.norm:              9865050276.000 B/op
                 ·gc.churn.PS_Eden_Space:          4938.270 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     10029327838.667 B/op
                 ·gc.churn.PS_Old_Gen:             3348.309 MB/sec
                 ·gc.churn.PS_Old_Gen.norm:        6800212386.667 B/op
                 ·gc.churn.PS_Survivor_Space:      347.098 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 704935210.667 B/op
                 ·gc.count:                        80.000 counts
                 ·gc.time:                         8619.000 ms

Iteration   5: 0.560 ops/s
                 ·gc.alloc.rate:                   5033.431 MB/sec
                 ·gc.alloc.rate.norm:              9865050276.000 B/op
                 ·gc.churn.PS_Eden_Space:          5025.870 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     9850230680.000 B/op
                 ·gc.churn.PS_Old_Gen:             3620.211 MB/sec
                 ·gc.churn.PS_Old_Gen.norm:        7095272129.333 B/op
                 ·gc.churn.PS_Survivor_Space:      344.678 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 675536741.333 B/op
                 ·gc.count:                        78.000 counts
                 ·gc.time:                         8132.000 ms



Result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.parallelOldGC":
  0.507 ±(99.9%) 0.039 ops/s [Average]
  (min, avg, max) = (0.453, 0.507, 0.560), stdev = 0.037
  CI (99.9%): [0.468, 0.546] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.parallelOldGC:·gc.alloc.rate":
  4558.117 ±(99.9%) 356.765 MB/sec [Average]
  (min, avg, max) = (4080.214, 4558.117, 5033.431), stdev = 333.718
  CI (99.9%): [4201.352, 4914.882] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.parallelOldGC:·gc.alloc.rate.norm":
  9865050288.427 ±(99.9%) 10.351 B/op [Average]
  (min, avg, max) = (9865050276.000, 9865050288.427, 9865050304.000), stdev = 9.682
  CI (99.9%): [9865050278.076, 9865050298.777] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.parallelOldGC:·gc.churn.PS_Eden_Space":
  4613.732 ±(99.9%) 337.747 MB/sec [Average]
  (min, avg, max) = (4177.804, 4613.732, 5025.870), stdev = 315.929
  CI (99.9%): [4275.985, 4951.478] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.parallelOldGC:·gc.churn.PS_Eden_Space.norm":
  9989053062.613 ±(99.9%) 113977223.565 B/op [Average]
  (min, avg, max) = (9850230680.000, 9989053062.613, 10101004329.600), stdev = 106614365.648
  CI (99.9%): [9875075839.048, 10103030286.178] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.parallelOldGC:·gc.churn.PS_Old_Gen":
  3241.247 ±(99.9%) 251.496 MB/sec [Average]
  (min, avg, max) = (2901.506, 3241.247, 3620.211), stdev = 235.250
  CI (99.9%): [2989.751, 3492.744] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.parallelOldGC:·gc.churn.PS_Old_Gen.norm":
  7018201418.400 ±(99.9%) 228446681.820 B/op [Average]
  (min, avg, max) = (6682184875.200, 7018201418.400, 7390290603.200), stdev = 213689167.931
  CI (99.9%): [6789754736.580, 7246648100.220] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.parallelOldGC:·gc.churn.PS_Survivor_Space":
  324.705 ±(99.9%) 21.897 MB/sec [Average]
  (min, avg, max) = (293.116, 324.705, 352.480), stdev = 20.482
  CI (99.9%): [302.808, 346.601] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.parallelOldGC:·gc.churn.PS_Survivor_Space.norm":
  703772524.729 ±(99.9%) 31965016.023 B/op [Average]
  (min, avg, max) = (669688723.200, 703772524.729, 740231942.400), stdev = 29900095.822
  CI (99.9%): [671807508.706, 735737540.751] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.parallelOldGC:·gc.count":
  1089.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (65.000, 72.600, 80.000), stdev = 6.468
  CI (99.9%): [1089.000, 1089.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.parallelOldGC:·gc.time":
  116486.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (6879.000, 7765.733, 8751.000), stdev = 699.269
  CI (99.9%): [116486.000, 116486.000] (assumes normal distribution)


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UseSerialGC -Xms4g -Xmx4g -XX:+AlwaysPreTouch
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.serialGC
# Parameters: (objectsSize = _4_KB)

# Run progress: 50.00% complete, ETA 00:35:12
# Fork: 1 of 3
# Warmup Iteration   1: 0.437 ops/s
# Warmup Iteration   2: 0.425 ops/s
# Warmup Iteration   3: 0.421 ops/s
# Warmup Iteration   4: 0.428 ops/s
# Warmup Iteration   5: 0.440 ops/s
Iteration   1: 0.428 ops/s
                 ·gc.alloc.rate:                3922.960 MB/sec
                 ·gc.alloc.rate.norm:           10013059313.600 B/op
                 ·gc.churn.Eden_Space:          3948.905 MB/sec
                 ·gc.churn.Eden_Space.norm:     10079279513.600 B/op
                 ·gc.churn.Survivor_Space:      224.305 MB/sec
                 ·gc.churn.Survivor_Space.norm: 572521388.800 B/op
                 ·gc.churn.Tenured_Gen:         1895.074 MB/sec
                 ·gc.churn.Tenured_Gen.norm:    4837033483.200 B/op
                 ·gc.count:                     64.000 counts
                 ·gc.time:                      8871.000 ms

Iteration   2: 0.435 ops/s
                 ·gc.alloc.rate:                3980.726 MB/sec
                 ·gc.alloc.rate.norm:           10013059313.600 B/op
                 ·gc.churn.Eden_Space:          4007.052 MB/sec
                 ·gc.churn.Eden_Space.norm:     10079279513.600 B/op
                 ·gc.churn.Survivor_Space:      227.608 MB/sec
                 ·gc.churn.Survivor_Space.norm: 572520899.200 B/op
                 ·gc.churn.Tenured_Gen:         1941.159 MB/sec
                 ·gc.churn.Tenured_Gen.norm:    4882763126.400 B/op
                 ·gc.count:                     64.000 counts
                 ·gc.time:                      8700.000 ms

Iteration   3: 0.442 ops/s
                 ·gc.alloc.rate:                4039.473 MB/sec
                 ·gc.alloc.rate.norm:           10013059313.600 B/op
                 ·gc.churn.Eden_Space:          3973.775 MB/sec
                 ·gc.churn.Eden_Space.norm:     9850204979.200 B/op
                 ·gc.churn.Survivor_Space:      230.967 MB/sec
                 ·gc.churn.Survivor_Space.norm: 572520908.800 B/op
                 ·gc.churn.Tenured_Gen:         1960.564 MB/sec
                 ·gc.churn.Tenured_Gen.norm:    4859851296.000 B/op
                 ·gc.count:                     63.000 counts
                 ·gc.time:                      8491.000 ms

Iteration   4: 0.439 ops/s
                 ·gc.alloc.rate:                4017.448 MB/sec
                 ·gc.alloc.rate.norm:           10013059313.600 B/op
                 ·gc.churn.Eden_Space:          4044.016 MB/sec
                 ·gc.churn.Eden_Space.norm:     10079279513.600 B/op
                 ·gc.churn.Survivor_Space:      229.708 MB/sec
                 ·gc.churn.Survivor_Space.norm: 572521988.800 B/op
                 ·gc.churn.Tenured_Gen:         1949.868 MB/sec
                 ·gc.churn.Tenured_Gen.norm:    4859838939.200 B/op
                 ·gc.count:                     64.000 counts
                 ·gc.time:                      8573.000 ms

Iteration   5: 0.430 ops/s
                 ·gc.alloc.rate:                3937.825 MB/sec
                 ·gc.alloc.rate.norm:           10013059313.600 B/op
                 ·gc.churn.Eden_Space:          3963.867 MB/sec
                 ·gc.churn.Eden_Space.norm:     10079279513.600 B/op
                 ·gc.churn.Survivor_Space:      225.155 MB/sec
                 ·gc.churn.Survivor_Space.norm: 572521040.000 B/op
                 ·gc.churn.Tenured_Gen:         1911.224 MB/sec
                 ·gc.churn.Tenured_Gen.norm:    4859839256.000 B/op
                 ·gc.count:                     64.000 counts
                 ·gc.time:                      8781.000 ms


# Run progress: 52.78% complete, ETA 00:33:19
# Fork: 2 of 3
# Warmup Iteration   1: 0.439 ops/s
# Warmup Iteration   2: 0.422 ops/s
# Warmup Iteration   3: 0.421 ops/s
# Warmup Iteration   4: 0.428 ops/s
# Warmup Iteration   5: 0.436 ops/s
Iteration   1: 0.424 ops/s
                 ·gc.alloc.rate:                3884.571 MB/sec
                 ·gc.alloc.rate.norm:           10013059320.000 B/op
                 ·gc.churn.Eden_Space:          3910.261 MB/sec
                 ·gc.churn.Eden_Space.norm:     10079279513.600 B/op
                 ·gc.churn.Survivor_Space:      222.110 MB/sec
                 ·gc.churn.Survivor_Space.norm: 572521388.800 B/op
                 ·gc.churn.Tenured_Gen:         1874.720 MB/sec
                 ·gc.churn.Tenured_Gen.norm:    4832367988.800 B/op
                 ·gc.count:                     64.000 counts
                 ·gc.time:                      8991.000 ms

Iteration   2: 0.430 ops/s
                 ·gc.alloc.rate:                3934.042 MB/sec
                 ·gc.alloc.rate.norm:           10013059313.600 B/op
                 ·gc.churn.Eden_Space:          3960.060 MB/sec
                 ·gc.churn.Eden_Space.norm:     10079279470.400 B/op
                 ·gc.churn.Survivor_Space:      224.938 MB/sec
                 ·gc.churn.Survivor_Space.norm: 572520907.200 B/op
                 ·gc.churn.Tenured_Gen:         1920.235 MB/sec
                 ·gc.churn.Tenured_Gen.norm:    4887449176.000 B/op
                 ·gc.count:                     64.000 counts
                 ·gc.time:                      8869.000 ms

Iteration   3: 0.442 ops/s
                 ·gc.alloc.rate:                4040.175 MB/sec
                 ·gc.alloc.rate.norm:           10013059313.600 B/op
                 ·gc.churn.Eden_Space:          3974.465 MB/sec
                 ·gc.churn.Eden_Space.norm:     9850204979.200 B/op
                 ·gc.churn.Survivor_Space:      231.007 MB/sec
                 ·gc.churn.Survivor_Space.norm: 572520908.800 B/op
                 ·gc.churn.Tenured_Gen:         1960.904 MB/sec
                 ·gc.churn.Tenured_Gen.norm:    4859850478.400 B/op
                 ·gc.count:                     63.000 counts
                 ·gc.time:                      8523.000 ms

Iteration   4: 0.437 ops/s
                 ·gc.alloc.rate:                3995.202 MB/sec
                 ·gc.alloc.rate.norm:           10013059320.000 B/op
                 ·gc.churn.Eden_Space:          4021.624 MB/sec
                 ·gc.churn.Eden_Space.norm:     10079279513.600 B/op
                 ·gc.churn.Survivor_Space:      228.436 MB/sec
                 ·gc.churn.Survivor_Space.norm: 572521995.200 B/op
                 ·gc.churn.Tenured_Gen:         1939.070 MB/sec
                 ·gc.churn.Tenured_Gen.norm:    4859834846.400 B/op
                 ·gc.count:                     64.000 counts
                 ·gc.time:                      8661.000 ms

Iteration   5: 0.429 ops/s
                 ·gc.alloc.rate:                3930.897 MB/sec
                 ·gc.alloc.rate.norm:           10013059313.600 B/op
                 ·gc.churn.Eden_Space:          3956.893 MB/sec
                 ·gc.churn.Eden_Space.norm:     10079279513.600 B/op
                 ·gc.churn.Survivor_Space:      224.759 MB/sec
                 ·gc.churn.Survivor_Space.norm: 572521040.000 B/op
                 ·gc.churn.Tenured_Gen:         1907.864 MB/sec
                 ·gc.churn.Tenured_Gen.norm:    4859845841.600 B/op
                 ·gc.count:                     64.000 counts
                 ·gc.time:                      8830.000 ms


# Run progress: 55.56% complete, ETA 00:31:26
# Fork: 3 of 3
# Warmup Iteration   1: 0.429 ops/s
# Warmup Iteration   2: 0.423 ops/s
# Warmup Iteration   3: 0.424 ops/s
# Warmup Iteration   4: 0.430 ops/s
# Warmup Iteration   5: 0.435 ops/s
Iteration   1: 0.428 ops/s
                 ·gc.alloc.rate:                3923.031 MB/sec
                 ·gc.alloc.rate.norm:           10013059320.000 B/op
                 ·gc.churn.Eden_Space:          3948.976 MB/sec
                 ·gc.churn.Eden_Space.norm:     10079279513.600 B/op
                 ·gc.churn.Survivor_Space:      224.309 MB/sec
                 ·gc.churn.Survivor_Space.norm: 572521388.800 B/op
                 ·gc.churn.Tenured_Gen:         1895.098 MB/sec
                 ·gc.churn.Tenured_Gen.norm:    4837006331.200 B/op
                 ·gc.count:                     64.000 counts
                 ·gc.time:                      8887.000 ms

Iteration   2: 0.434 ops/s
                 ·gc.alloc.rate:                3973.567 MB/sec
                 ·gc.alloc.rate.norm:           10013059313.600 B/op
                 ·gc.churn.Eden_Space:          3999.846 MB/sec
                 ·gc.churn.Eden_Space.norm:     10079279513.600 B/op
                 ·gc.churn.Survivor_Space:      227.198 MB/sec
                 ·gc.churn.Survivor_Space.norm: 572520899.200 B/op
                 ·gc.churn.Tenured_Gen:         1937.653 MB/sec
                 ·gc.churn.Tenured_Gen.norm:    4882723691.200 B/op
                 ·gc.count:                     64.000 counts
                 ·gc.time:                      8679.000 ms

Iteration   3: 0.441 ops/s
                 ·gc.alloc.rate:                4036.306 MB/sec
                 ·gc.alloc.rate.norm:           10013059313.600 B/op
                 ·gc.churn.Eden_Space:          3970.659 MB/sec
                 ·gc.churn.Eden_Space.norm:     9850204979.200 B/op
                 ·gc.churn.Survivor_Space:      230.786 MB/sec
                 ·gc.churn.Survivor_Space.norm: 572520908.800 B/op
                 ·gc.churn.Tenured_Gen:         1959.028 MB/sec
                 ·gc.churn.Tenured_Gen.norm:    4859856217.600 B/op
                 ·gc.count:                     63.000 counts
                 ·gc.time:                      8518.000 ms

Iteration   4: 0.434 ops/s
                 ·gc.alloc.rate:                3967.484 MB/sec
                 ·gc.alloc.rate.norm:           10013059320.000 B/op
                 ·gc.churn.Eden_Space:          3993.723 MB/sec
                 ·gc.churn.Eden_Space.norm:     10079279513.600 B/op
                 ·gc.churn.Survivor_Space:      226.851 MB/sec
                 ·gc.churn.Survivor_Space.norm: 572521980.800 B/op
                 ·gc.churn.Tenured_Gen:         1925.619 MB/sec
                 ·gc.churn.Tenured_Gen.norm:    4859839742.400 B/op
                 ·gc.count:                     64.000 counts
                 ·gc.time:                      8729.000 ms

Iteration   5: 0.425 ops/s
                 ·gc.alloc.rate:                3892.583 MB/sec
                 ·gc.alloc.rate.norm:           10013059313.600 B/op
                 ·gc.churn.Eden_Space:          3918.327 MB/sec
                 ·gc.churn.Eden_Space.norm:     10079279513.600 B/op
                 ·gc.churn.Survivor_Space:      222.568 MB/sec
                 ·gc.churn.Survivor_Space.norm: 572521027.200 B/op
                 ·gc.churn.Tenured_Gen:         1889.269 MB/sec
                 ·gc.churn.Tenured_Gen.norm:    4859847486.400 B/op
                 ·gc.count:                     64.000 counts
                 ·gc.time:                      8944.000 ms



Result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.serialGC":
  0.433 ±(99.9%) 0.006 ops/s [Average]
  (min, avg, max) = (0.424, 0.433, 0.442), stdev = 0.006
  CI (99.9%): [0.427, 0.440] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.serialGC:·gc.alloc.rate":
  3965.086 ±(99.9%) 55.970 MB/sec [Average]
  (min, avg, max) = (3884.571, 3965.086, 4040.175), stdev = 52.354
  CI (99.9%): [3909.116, 4021.056] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.serialGC:·gc.alloc.rate.norm":
  10013059315.307 ±(99.9%) 3.132 B/op [Average]
  (min, avg, max) = (10013059313.600, 10013059315.307, 10013059320.000), stdev = 2.930
  CI (99.9%): [10013059312.175, 10013059318.439] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.serialGC:·gc.churn.Eden_Space":
  3972.830 ±(99.9%) 38.671 MB/sec [Average]
  (min, avg, max) = (3910.261, 3972.830, 4044.016), stdev = 36.173
  CI (99.9%): [3934.159, 4011.501] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.serialGC:·gc.churn.Eden_Space.norm":
  10033464603.840 ±(99.9%) 101395984.197 B/op [Average]
  (min, avg, max) = (9850204979.200, 10033464603.840, 10079279513.600), stdev = 94845866.537
  CI (99.9%): [9932068619.643, 10134860588.037] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.serialGC:·gc.churn.Survivor_Space":
  226.714 ±(99.9%) 3.200 MB/sec [Average]
  (min, avg, max) = (222.110, 226.714, 231.007), stdev = 2.993
  CI (99.9%): [223.513, 229.914] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.serialGC:·gc.churn.Survivor_Space.norm":
  572521244.693 ±(99.9%) 455.657 B/op [Average]
  (min, avg, max) = (572520899.200, 572521244.693, 572521995.200), stdev = 426.222
  CI (99.9%): [572520789.036, 572521700.351] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.serialGC:·gc.churn.Tenured_Gen":
  1924.490 ±(99.9%) 30.030 MB/sec [Average]
  (min, avg, max) = (1874.720, 1924.490, 1960.904), stdev = 28.090
  CI (99.9%): [1894.460, 1954.520] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.serialGC:·gc.churn.Tenured_Gen.norm":
  4859863193.387 ±(99.9%) 17161235.655 B/op [Average]
  (min, avg, max) = (4832367988.800, 4859863193.387, 4887449176.000), stdev = 16052630.481
  CI (99.9%): [4842701957.731, 4877024429.042] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.serialGC:·gc.count":
  957.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (63.000, 63.800, 64.000), stdev = 0.414
  CI (99.9%): [957.000, 957.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.serialGC:·gc.time":
  131047.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (8491.000, 8736.467, 8991.000), stdev = 162.033
  CI (99.9%): [131047.000, 131047.000] (assumes normal distribution)


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UseSerialGC -Xms4g -Xmx4g -XX:+AlwaysPreTouch
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.serialGC
# Parameters: (objectsSize = _4_MB)

# Run progress: 58.33% complete, ETA 00:29:31
# Fork: 1 of 3
# Warmup Iteration   1: 0.739 ops/s
# Warmup Iteration   2: 0.752 ops/s
# Warmup Iteration   3: 0.750 ops/s
# Warmup Iteration   4: 0.756 ops/s
# Warmup Iteration   5: 0.763 ops/s
Iteration   1: 0.762 ops/s
                 ·gc.alloc.rate:                6900.485 MB/sec
                 ·gc.alloc.rate.norm:           9948936764.000 B/op
                 ·gc.churn.Eden_Space:          6935.578 MB/sec
                 ·gc.churn.Eden_Space.norm:     9999533017.000 B/op
                 ·gc.churn.Survivor_Space:      395.645 MB/sec
                 ·gc.churn.Survivor_Space.norm: 570431138.000 B/op
                 ·gc.churn.Tenured_Gen:         3339.692 MB/sec
                 ·gc.churn.Tenured_Gen.norm:    4815079087.000 B/op
                 ·gc.count:                     102.000 counts
                 ·gc.time:                      7691.000 ms

Iteration   2: 0.736 ops/s
                 ·gc.alloc.rate:                6670.982 MB/sec
                 ·gc.alloc.rate.norm:           9948936755.000 B/op
                 ·gc.churn.Eden_Space:          6704.884 MB/sec
                 ·gc.churn.Eden_Space.norm:     9999497806.000 B/op
                 ·gc.churn.Survivor_Space:      382.488 MB/sec
                 ·gc.churn.Survivor_Space.norm: 570433122.000 B/op
                 ·gc.churn.Tenured_Gen:         3228.616 MB/sec
                 ·gc.churn.Tenured_Gen.norm:    4815078376.000 B/op
                 ·gc.count:                     102.000 counts
                 ·gc.time:                      8082.000 ms

Iteration   3: 0.759 ops/s
                 ·gc.alloc.rate:                6874.556 MB/sec
                 ·gc.alloc.rate.norm:           9948936759.000 B/op
                 ·gc.churn.Eden_Space:          6909.484 MB/sec
                 ·gc.churn.Eden_Space.norm:     9999484809.000 B/op
                 ·gc.churn.Survivor_Space:      394.159 MB/sec
                 ·gc.churn.Survivor_Space.norm: 570430842.000 B/op
                 ·gc.churn.Tenured_Gen:         3327.142 MB/sec
                 ·gc.churn.Tenured_Gen.norm:    4815078913.000 B/op
                 ·gc.count:                     102.000 counts
                 ·gc.time:                      7791.000 ms

Iteration   4: 0.766 ops/s
                 ·gc.alloc.rate:                6933.523 MB/sec
                 ·gc.alloc.rate.norm:           9948936759.000 B/op
                 ·gc.churn.Eden_Space:          6968.750 MB/sec
                 ·gc.churn.Eden_Space.norm:     9999483319.000 B/op
                 ·gc.churn.Survivor_Space:      397.540 MB/sec
                 ·gc.churn.Survivor_Space.norm: 570431078.000 B/op
                 ·gc.churn.Tenured_Gen:         3355.681 MB/sec
                 ·gc.churn.Tenured_Gen.norm:    4815078881.000 B/op
                 ·gc.count:                     102.000 counts
                 ·gc.time:                      7737.000 ms

Iteration   5: 0.776 ops/s
                 ·gc.alloc.rate:                7024.647 MB/sec
                 ·gc.alloc.rate.norm:           9948936755.000 B/op
                 ·gc.churn.Eden_Space:          6959.475 MB/sec
                 ·gc.churn.Eden_Space.norm:     9856633568.000 B/op
                 ·gc.churn.Survivor_Space:      402.764 MB/sec
                 ·gc.churn.Survivor_Space.norm: 570430840.000 B/op
                 ·gc.churn.Tenured_Gen:         3399.784 MB/sec
                 ·gc.churn.Tenured_Gen.norm:    4815079127.000 B/op
                 ·gc.count:                     101.000 counts
                 ·gc.time:                      7567.000 ms


# Run progress: 61.11% complete, ETA 00:27:29
# Fork: 2 of 3
# Warmup Iteration   1: 0.753 ops/s
# Warmup Iteration   2: 0.756 ops/s
# Warmup Iteration   3: 0.750 ops/s
# Warmup Iteration   4: 0.748 ops/s
# Warmup Iteration   5: 0.759 ops/s
Iteration   1: 0.772 ops/s
                 ·gc.alloc.rate:                6989.104 MB/sec
                 ·gc.alloc.rate.norm:           9948936764.000 B/op
                 ·gc.churn.Eden_Space:          7024.648 MB/sec
                 ·gc.churn.Eden_Space.norm:     9999533309.000 B/op
                 ·gc.churn.Survivor_Space:      400.726 MB/sec
                 ·gc.churn.Survivor_Space.norm: 570431130.000 B/op
                 ·gc.churn.Tenured_Gen:         3382.581 MB/sec
                 ·gc.churn.Tenured_Gen.norm:    4815079087.000 B/op
                 ·gc.count:                     102.000 counts
                 ·gc.time:                      7602.000 ms

Iteration   2: 0.745 ops/s
                 ·gc.alloc.rate:                6755.704 MB/sec
                 ·gc.alloc.rate.norm:           9948936759.000 B/op
                 ·gc.churn.Eden_Space:          6790.037 MB/sec
                 ·gc.churn.Eden_Space.norm:     9999497720.000 B/op
                 ·gc.churn.Survivor_Space:      387.346 MB/sec
                 ·gc.churn.Survivor_Space.norm: 570433122.000 B/op
                 ·gc.churn.Tenured_Gen:         3269.620 MB/sec
                 ·gc.churn.Tenured_Gen.norm:    4815078372.000 B/op
                 ·gc.count:                     102.000 counts
                 ·gc.time:                      7917.000 ms

Iteration   3: 0.765 ops/s
                 ·gc.alloc.rate:                6929.078 MB/sec
                 ·gc.alloc.rate.norm:           9948936755.000 B/op
                 ·gc.churn.Eden_Space:          6964.279 MB/sec
                 ·gc.churn.Eden_Space.norm:     9999479245.000 B/op
                 ·gc.churn.Survivor_Space:      397.285 MB/sec
                 ·gc.churn.Survivor_Space.norm: 570430842.000 B/op
                 ·gc.churn.Tenured_Gen:         3353.530 MB/sec
                 ·gc.churn.Tenured_Gen.norm:    4815078828.000 B/op
                 ·gc.count:                     102.000 counts
                 ·gc.time:                      7698.000 ms

Iteration   4: 0.766 ops/s
                 ·gc.alloc.rate:                6933.059 MB/sec
                 ·gc.alloc.rate.norm:           9948936755.000 B/op
                 ·gc.churn.Eden_Space:          6968.282 MB/sec
                 ·gc.churn.Eden_Space.norm:     9999482389.000 B/op
                 ·gc.churn.Survivor_Space:      397.513 MB/sec
                 ·gc.churn.Survivor_Space.norm: 570431078.000 B/op
                 ·gc.churn.Tenured_Gen:         3355.457 MB/sec
                 ·gc.churn.Tenured_Gen.norm:    4815078889.000 B/op
                 ·gc.count:                     102.000 counts
                 ·gc.time:                      7729.000 ms

Iteration   5: 0.772 ops/s
                 ·gc.alloc.rate:                6985.890 MB/sec
                 ·gc.alloc.rate.norm:           9948936759.000 B/op
                 ·gc.churn.Eden_Space:          6921.077 MB/sec
                 ·gc.churn.Eden_Space.norm:     9856633570.000 B/op
                 ·gc.churn.Survivor_Space:      400.542 MB/sec
                 ·gc.churn.Survivor_Space.norm: 570430840.000 B/op
                 ·gc.churn.Tenured_Gen:         3381.026 MB/sec
                 ·gc.churn.Tenured_Gen.norm:    4815079127.000 B/op
                 ·gc.count:                     101.000 counts
                 ·gc.time:                      7613.000 ms


# Run progress: 63.89% complete, ETA 00:25:28
# Fork: 3 of 3
# Warmup Iteration   1: 0.733 ops/s
# Warmup Iteration   2: 0.760 ops/s
# Warmup Iteration   3: 0.749 ops/s
# Warmup Iteration   4: 0.758 ops/s
# Warmup Iteration   5: 0.756 ops/s
Iteration   1: 0.769 ops/s
                 ·gc.alloc.rate:                6964.140 MB/sec
                 ·gc.alloc.rate.norm:           9948936764.000 B/op
                 ·gc.churn.Eden_Space:          6999.557 MB/sec
                 ·gc.churn.Eden_Space.norm:     9999533309.000 B/op
                 ·gc.churn.Survivor_Space:      399.295 MB/sec
                 ·gc.churn.Survivor_Space.norm: 570431130.000 B/op
                 ·gc.churn.Tenured_Gen:         3370.499 MB/sec
                 ·gc.churn.Tenured_Gen.norm:    4815079087.000 B/op
                 ·gc.count:                     102.000 counts
                 ·gc.time:                      7597.000 ms

Iteration   2: 0.749 ops/s
                 ·gc.alloc.rate:                6787.761 MB/sec
                 ·gc.alloc.rate.norm:           9948936755.000 B/op
                 ·gc.churn.Eden_Space:          6822.257 MB/sec
                 ·gc.churn.Eden_Space.norm:     9999497735.000 B/op
                 ·gc.churn.Survivor_Space:      389.184 MB/sec
                 ·gc.churn.Survivor_Space.norm: 570433114.000 B/op
                 ·gc.churn.Tenured_Gen:         3285.135 MB/sec
                 ·gc.churn.Tenured_Gen.norm:    4815078376.000 B/op
                 ·gc.count:                     102.000 counts
                 ·gc.time:                      7933.000 ms

Iteration   3: 0.753 ops/s
                 ·gc.alloc.rate:                6820.885 MB/sec
                 ·gc.alloc.rate.norm:           9948936759.000 B/op
                 ·gc.churn.Eden_Space:          6855.540 MB/sec
                 ·gc.churn.Eden_Space.norm:     9999484787.000 B/op
                 ·gc.churn.Survivor_Space:      391.081 MB/sec
                 ·gc.churn.Survivor_Space.norm: 570431136.000 B/op
                 ·gc.churn.Tenured_Gen:         3301.167 MB/sec
                 ·gc.churn.Tenured_Gen.norm:    4815078923.000 B/op
                 ·gc.count:                     102.000 counts
                 ·gc.time:                      7876.000 ms

Iteration   4: 0.767 ops/s
                 ·gc.alloc.rate:                6945.518 MB/sec
                 ·gc.alloc.rate.norm:           9948936755.000 B/op
                 ·gc.churn.Eden_Space:          6980.805 MB/sec
                 ·gc.churn.Eden_Space.norm:     9999482399.000 B/op
                 ·gc.churn.Survivor_Space:      398.227 MB/sec
                 ·gc.churn.Survivor_Space.norm: 570431078.000 B/op
                 ·gc.churn.Tenured_Gen:         3361.486 MB/sec
                 ·gc.churn.Tenured_Gen.norm:    4815078893.000 B/op
                 ·gc.count:                     102.000 counts
                 ·gc.time:                      7697.000 ms

Iteration   5: 0.759 ops/s
                 ·gc.alloc.rate:                6870.928 MB/sec
                 ·gc.alloc.rate.norm:           9948936759.000 B/op
                 ·gc.churn.Eden_Space:          6807.181 MB/sec
                 ·gc.churn.Eden_Space.norm:     9856633565.000 B/op
                 ·gc.churn.Survivor_Space:      393.951 MB/sec
                 ·gc.churn.Survivor_Space.norm: 570430840.000 B/op
                 ·gc.churn.Tenured_Gen:         3325.386 MB/sec
                 ·gc.churn.Tenured_Gen.norm:    4815078822.000 B/op
                 ·gc.count:                     101.000 counts
                 ·gc.time:                      7801.000 ms



Result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.serialGC":
  0.761 ±(99.9%) 0.012 ops/s [Average]
  (min, avg, max) = (0.736, 0.761, 0.776), stdev = 0.011
  CI (99.9%): [0.749, 0.773] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.serialGC:·gc.alloc.rate":
  6892.417 ±(99.9%) 104.144 MB/sec [Average]
  (min, avg, max) = (6670.982, 6892.417, 7024.647), stdev = 97.416
  CI (99.9%): [6788.273, 6996.561] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.serialGC:·gc.alloc.rate.norm":
  9948936758.400 ±(99.9%) 3.677 B/op [Average]
  (min, avg, max) = (9948936755.000, 9948936758.400, 9948936764.000), stdev = 3.439
  CI (99.9%): [9948936754.723, 9948936762.077] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.serialGC:·gc.churn.Eden_Space":
  6907.455 ±(99.9%) 97.647 MB/sec [Average]
  (min, avg, max) = (6704.884, 6907.455, 7024.648), stdev = 91.339
  CI (99.9%): [6809.808, 7005.103] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.serialGC:·gc.churn.Eden_Space.norm":
  9970926036.467 ±(99.9%) 63237049.553 B/op [Average]
  (min, avg, max) = (9856633565.000, 9970926036.467, 9999533309.000), stdev = 59151975.392
  CI (99.9%): [9907688986.914, 10034163086.019] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.serialGC:·gc.churn.Survivor_Space":
  395.183 ±(99.9%) 5.971 MB/sec [Average]
  (min, avg, max) = (382.488, 395.183, 402.764), stdev = 5.585
  CI (99.9%): [389.212, 401.154] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.serialGC:·gc.churn.Survivor_Space.norm":
  570431422.000 ±(99.9%) 948.474 B/op [Average]
  (min, avg, max) = (570430840.000, 570431422.000, 570433122.000), stdev = 887.204
  CI (99.9%): [570430473.526, 570432370.474] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.serialGC:·gc.churn.Tenured_Gen":
  3335.787 ±(99.9%) 50.404 MB/sec [Average]
  (min, avg, max) = (3228.616, 3335.787, 3399.784), stdev = 47.148
  CI (99.9%): [3285.383, 3386.191] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.serialGC:·gc.churn.Tenured_Gen.norm":
  4815078852.533 ±(99.9%) 287.797 B/op [Average]
  (min, avg, max) = (4815078372.000, 4815078852.533, 4815079127.000), stdev = 269.205
  CI (99.9%): [4815078564.736, 4815079140.330] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.serialGC:·gc.count":
  1527.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (101.000, 101.800, 102.000), stdev = 0.414
  CI (99.9%): [1527.000, 1527.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.serialGC:·gc.time":
  116331.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (7567.000, 7755.400, 8082.000), stdev = 146.018
  CI (99.9%): [116331.000, 116331.000] (assumes normal distribution)


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+UseShenandoahGC -Xms4g -Xmx4g -XX:+AlwaysPreTouch
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.shenandoahGC
# Parameters: (objectsSize = _4_KB)

# Run progress: 66.67% complete, ETA 00:23:28
# Fork: 1 of 3
# Warmup Iteration   1: 1.627 ops/s
# Warmup Iteration   2: 1.705 ops/s
# Warmup Iteration   3: 1.728 ops/s
# Warmup Iteration   4: 1.712 ops/s
# Warmup Iteration   5: 1.711 ops/s
Iteration   1: 1.700 ops/s
                 ·gc.alloc.rate:                                  16035.561 MB/sec
                 ·gc.alloc.rate.norm:                             10358243480.444 B/op
                 ·gc.churn.CodeHeap_'non-profiled_nmethods':      ≈ 10⁻⁴ MB/sec
                 ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 92.444 B/op
                 ·gc.churn.CodeHeap_'profiled_nmethods':          0.002 MB/sec
                 ·gc.churn.CodeHeap_'profiled_nmethods'.norm:     1592.889 B/op
                 ·gc.churn.Compressed_Class_Space:                ≈ 10⁻⁴ MB/sec
                 ·gc.churn.Compressed_Class_Space.norm:           155.556 B/op
                 ·gc.churn.Metaspace:                             0.001 MB/sec
                 ·gc.churn.Metaspace.norm:                        667.111 B/op
                 ·gc.churn.Shenandoah:                            15088.885 MB/sec
                 ·gc.churn.Shenandoah.norm:                       9746733700.889 B/op
                 ·gc.count:                                       225.000 counts
                 ·gc.time:                                        1733.000 ms

Iteration   2: 1.706 ops/s
                 ·gc.alloc.rate:            16091.464 MB/sec
                 ·gc.alloc.rate.norm:       10358243478.667 B/op
                 ·gc.churn.Shenandoah:      15131.787 MB/sec
                 ·gc.churn.Shenandoah.norm: 9740488928.000 B/op
                 ·gc.count:                 216.000 counts
                 ·gc.time:                  1294.000 ms

Iteration   3: 1.716 ops/s
                 ·gc.alloc.rate:            16175.903 MB/sec
                 ·gc.alloc.rate.norm:       10358243478.667 B/op
                 ·gc.churn.Shenandoah:      15229.026 MB/sec
                 ·gc.churn.Shenandoah.norm: 9751910061.333 B/op
                 ·gc.count:                 216.000 counts
                 ·gc.time:                  1234.000 ms

Iteration   4: 1.734 ops/s
                 ·gc.alloc.rate:            16338.980 MB/sec
                 ·gc.alloc.rate.norm:       10358243480.444 B/op
                 ·gc.churn.Shenandoah:      15362.343 MB/sec
                 ·gc.churn.Shenandoah.norm: 9739095497.778 B/op
                 ·gc.count:                 216.000 counts
                 ·gc.time:                  1270.000 ms

Iteration   5: 1.723 ops/s
                 ·gc.alloc.rate:            16238.739 MB/sec
                 ·gc.alloc.rate.norm:       10358243478.667 B/op
                 ·gc.churn.Shenandoah:      15280.327 MB/sec
                 ·gc.churn.Shenandoah.norm: 9746898428.000 B/op
                 ·gc.count:                 216.000 counts
                 ·gc.time:                  1249.000 ms


# Run progress: 69.44% complete, ETA 00:21:28
# Fork: 2 of 3
# Warmup Iteration   1: 1.637 ops/s
# Warmup Iteration   2: 1.699 ops/s
# Warmup Iteration   3: 1.714 ops/s
# Warmup Iteration   4: 1.692 ops/s
# Warmup Iteration   5: 1.711 ops/s
Iteration   1: 1.690 ops/s
                 ·gc.alloc.rate:                                  15906.625 MB/sec
                 ·gc.alloc.rate.norm:                             10358243481.882 B/op
                 ·gc.churn.CodeHeap_'non-profiled_nmethods':      ≈ 10⁻⁴ MB/sec
                 ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 143.059 B/op
                 ·gc.churn.CodeHeap_'profiled_nmethods':          0.001 MB/sec
                 ·gc.churn.CodeHeap_'profiled_nmethods'.norm:     436.706 B/op
                 ·gc.churn.Shenandoah:                            14972.977 MB/sec
                 ·gc.churn.Shenandoah.norm:                       9750260547.765 B/op
                 ·gc.count:                                       209.000 counts
                 ·gc.time:                                        1279.000 ms

Iteration   2: 1.694 ops/s
                 ·gc.alloc.rate:                              15939.953 MB/sec
                 ·gc.alloc.rate.norm:                         10358243480.000 B/op
                 ·gc.churn.CodeHeap_'profiled_nmethods':      ≈ 10⁻⁴ MB/sec
                 ·gc.churn.CodeHeap_'profiled_nmethods'.norm: 75.294 B/op
                 ·gc.churn.Shenandoah:                        14971.823 MB/sec
                 ·gc.churn.Shenandoah.norm:                   9729124523.765 B/op
                 ·gc.count:                                   204.000 counts
                 ·gc.time:                                    1236.000 ms

Iteration   3: 1.718 ops/s
                 ·gc.alloc.rate:            16199.178 MB/sec
                 ·gc.alloc.rate.norm:       10358243478.667 B/op
                 ·gc.churn.Shenandoah:      15241.645 MB/sec
                 ·gc.churn.Shenandoah.norm: 9745967486.667 B/op
                 ·gc.count:                 216.000 counts
                 ·gc.time:                  1265.000 ms

Iteration   4: 1.740 ops/s
                 ·gc.alloc.rate:                                  16392.330 MB/sec
                 ·gc.alloc.rate.norm:                             10358243478.667 B/op
                 ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.002 MB/sec
                 ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 1201.778 B/op
                 ·gc.churn.CodeHeap_'profiled_nmethods':          0.002 MB/sec
                 ·gc.churn.CodeHeap_'profiled_nmethods'.norm:     1173.333 B/op
                 ·gc.churn.Shenandoah:                            15397.377 MB/sec
                 ·gc.churn.Shenandoah.norm:                       9729536892.000 B/op
                 ·gc.count:                                       216.000 counts
                 ·gc.time:                                        1287.000 ms

Iteration   5: 1.732 ops/s
                 ·gc.alloc.rate:            16323.510 MB/sec
                 ·gc.alloc.rate.norm:       10358243478.667 B/op
                 ·gc.churn.Shenandoah:      15379.748 MB/sec
                 ·gc.churn.Shenandoah.norm: 9759370306.222 B/op
                 ·gc.count:                 216.000 counts
                 ·gc.time:                  1198.000 ms


# Run progress: 72.22% complete, ETA 00:19:27
# Fork: 3 of 3
# Warmup Iteration   1: 1.652 ops/s
# Warmup Iteration   2: 1.716 ops/s
# Warmup Iteration   3: 1.709 ops/s
# Warmup Iteration   4: 1.673 ops/s
# Warmup Iteration   5: 1.729 ops/s
Iteration   1: 1.706 ops/s
                 ·gc.alloc.rate:                              16084.298 MB/sec
                 ·gc.alloc.rate.norm:                         10358243478.667 B/op
                 ·gc.churn.CodeHeap_'profiled_nmethods':      ≈ 10⁻⁴ MB/sec
                 ·gc.churn.CodeHeap_'profiled_nmethods'.norm: 71.111 B/op
                 ·gc.churn.Shenandoah:                        15134.989 MB/sec
                 ·gc.churn.Shenandoah.norm:                   9746891281.778 B/op
                 ·gc.count:                                   216.000 counts
                 ·gc.time:                                    1256.000 ms

Iteration   2: 1.686 ops/s
                 ·gc.alloc.rate:                              15869.443 MB/sec
                 ·gc.alloc.rate.norm:                         10358243481.882 B/op
                 ·gc.churn.CodeHeap_'profiled_nmethods':      0.001 MB/sec
                 ·gc.churn.CodeHeap_'profiled_nmethods'.norm: 730.353 B/op
                 ·gc.churn.Compressed_Class_Space:            ≈ 10⁻⁴ MB/sec
                 ·gc.churn.Compressed_Class_Space.norm:       164.706 B/op
                 ·gc.churn.Metaspace:                         0.002 MB/sec
                 ·gc.churn.Metaspace.norm:                    981.647 B/op
                 ·gc.churn.Shenandoah:                        14934.736 MB/sec
                 ·gc.churn.Shenandoah.norm:                   9748145009.882 B/op
                 ·gc.count:                                   215.000 counts
                 ·gc.time:                                    1710.000 ms

Iteration   3: 1.724 ops/s
                 ·gc.alloc.rate:            16248.506 MB/sec
                 ·gc.alloc.rate.norm:       10358243478.667 B/op
                 ·gc.churn.Shenandoah:      15273.977 MB/sec
                 ·gc.churn.Shenandoah.norm: 9736991866.667 B/op
                 ·gc.count:                 216.000 counts
                 ·gc.time:                  1208.000 ms

Iteration   4: 1.732 ops/s
                 ·gc.alloc.rate:            16318.970 MB/sec
                 ·gc.alloc.rate.norm:       10358243478.667 B/op
                 ·gc.churn.Shenandoah:      15369.034 MB/sec
                 ·gc.churn.Shenandoah.norm: 9755284991.111 B/op
                 ·gc.count:                 216.000 counts
                 ·gc.time:                  1214.000 ms

Iteration   5: 1.712 ops/s
                 ·gc.alloc.rate:            16141.771 MB/sec
                 ·gc.alloc.rate.norm:       10358243478.667 B/op
                 ·gc.churn.Shenandoah:      15183.451 MB/sec
                 ·gc.churn.Shenandoah.norm: 9743285803.111 B/op
                 ·gc.count:                 216.000 counts
                 ·gc.time:                  1272.000 ms



Result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.shenandoahGC":
  1.714 ±(99.9%) 0.018 ops/s [Average]
  (min, avg, max) = (1.686, 1.714, 1.740), stdev = 0.017
  CI (99.9%): [1.696, 1.732] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.shenandoahGC:·gc.alloc.rate":
  16153.682 ±(99.9%) 175.322 MB/sec [Average]
  (min, avg, max) = (15869.443, 16153.682, 16392.330), stdev = 163.997
  CI (99.9%): [15978.360, 16329.004] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.shenandoahGC:·gc.alloc.rate.norm":
  10358243479.421 ±(99.9%) 1.285 B/op [Average]
  (min, avg, max) = (10358243478.667, 10358243479.421, 10358243481.882), stdev = 1.202
  CI (99.9%): [10358243478.136, 10358243480.707] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.shenandoahGC:·gc.churn.CodeHeap_'non-profiled_nmethods'":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.shenandoahGC:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
  95.819 ±(99.9%) 330.195 B/op [Average]
  (min, avg, max) = (≈ 0, 95.819, 1201.778), stdev = 308.865
  CI (99.9%): [≈ 0, 426.014] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.shenandoahGC:·gc.churn.CodeHeap_'profiled_nmethods'":
  ≈ 10⁻³ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.shenandoahGC:·gc.churn.CodeHeap_'profiled_nmethods'.norm":
  271.979 ±(99.9%) 537.521 B/op [Average]
  (min, avg, max) = (≈ 0, 271.979, 1592.889), stdev = 502.797
  CI (99.9%): [≈ 0, 809.500] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.shenandoahGC:·gc.churn.Compressed_Class_Space":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.shenandoahGC:·gc.churn.Compressed_Class_Space.norm":
  21.351 ±(99.9%) 60.264 B/op [Average]
  (min, avg, max) = (≈ 0, 21.351, 164.706), stdev = 56.371
  CI (99.9%): [≈ 0, 81.615] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.shenandoahGC:·gc.churn.Metaspace":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.shenandoahGC:·gc.churn.Metaspace.norm":
  109.917 ±(99.9%) 316.547 B/op [Average]
  (min, avg, max) = (≈ 0, 109.917, 981.647), stdev = 296.099
  CI (99.9%): [≈ 0, 426.465] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.shenandoahGC:·gc.churn.Shenandoah":
  15196.808 ±(99.9%) 165.621 MB/sec [Average]
  (min, avg, max) = (14934.736, 15196.808, 15397.377), stdev = 154.922
  CI (99.9%): [15031.187, 15362.430] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.shenandoahGC:·gc.churn.Shenandoah.norm":
  9744665688.331 ±(99.9%) 9127202.636 B/op [Average]
  (min, avg, max) = (9729124523.765, 9744665688.331, 9759370306.222), stdev = 8537591.009
  CI (99.9%): [9735538485.695, 9753792890.967] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.shenandoahGC:·gc.count":
  3229.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (204.000, 215.267, 225.000), stdev = 4.367
  CI (99.9%): [3229.000, 3229.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.shenandoahGC:·gc.time":
  19705.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (1198.000, 1313.667, 1733.000), stdev = 168.098
  CI (99.9%): [19705.000, 19705.000] (assumes normal distribution)


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+UseShenandoahGC -Xms4g -Xmx4g -XX:+AlwaysPreTouch
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.shenandoahGC
# Parameters: (objectsSize = _4_MB)

# Run progress: 75.00% complete, ETA 00:17:28
# Fork: 1 of 3
# Warmup Iteration   1: 2.062 ops/s
# Warmup Iteration   2: 2.177 ops/s
# Warmup Iteration   3: 2.154 ops/s
# Warmup Iteration   4: 2.227 ops/s
# Warmup Iteration   5: 2.187 ops/s
Iteration   1: 2.140 ops/s
                 ·gc.alloc.rate:                                  20042.082 MB/sec
                 ·gc.alloc.rate.norm:                             10301259924.000 B/op
                 ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.004 MB/sec
                 ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 1954.909 B/op
                 ·gc.churn.CodeHeap_'profiled_nmethods':          0.002 MB/sec
                 ·gc.churn.CodeHeap_'profiled_nmethods'.norm:     866.909 B/op
                 ·gc.churn.Compressed_Class_Space:                ≈ 10⁻⁴ MB/sec
                 ·gc.churn.Compressed_Class_Space.norm:           101.818 B/op
                 ·gc.churn.Metaspace:                             0.001 MB/sec
                 ·gc.churn.Metaspace.norm:                        582.182 B/op
                 ·gc.churn.Shenandoah:                            19839.713 MB/sec
                 ·gc.churn.Shenandoah.norm:                       10197245896.727 B/op
                 ·gc.count:                                       910.000 counts
                 ·gc.time:                                        1819.000 ms

Iteration   2: 2.193 ops/s
                 ·gc.alloc.rate:                                  20516.943 MB/sec
                 ·gc.alloc.rate.norm:                             10301259924.000 B/op
                 ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.002 MB/sec
                 ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 826.182 B/op
                 ·gc.churn.CodeHeap_'profiled_nmethods':          0.004 MB/sec
                 ·gc.churn.CodeHeap_'profiled_nmethods'.norm:     2088.727 B/op
                 ·gc.churn.Shenandoah:                            20279.139 MB/sec
                 ·gc.churn.Shenandoah.norm:                       10181862104.000 B/op
                 ·gc.count:                                       704.000 counts
                 ·gc.time:                                        1298.000 ms

Iteration   3: 2.215 ops/s
                 ·gc.alloc.rate:            20754.208 MB/sec
                 ·gc.alloc.rate.norm:       10301259923.130 B/op
                 ·gc.churn.Shenandoah:      20530.357 MB/sec
                 ·gc.churn.Shenandoah.norm: 10190152438.261 B/op
                 ·gc.count:                 754.000 counts
                 ·gc.time:                  1429.000 ms

Iteration   4: 2.179 ops/s
                 ·gc.alloc.rate:            20390.350 MB/sec
                 ·gc.alloc.rate.norm:       10301259922.545 B/op
                 ·gc.churn.Shenandoah:      20174.081 MB/sec
                 ·gc.churn.Shenandoah.norm: 10192000269.818 B/op
                 ·gc.count:                 766.000 counts
                 ·gc.time:                  1497.000 ms

Iteration   5: 2.208 ops/s
                 ·gc.alloc.rate:            20691.011 MB/sec
                 ·gc.alloc.rate.norm:       10301259923.130 B/op
                 ·gc.churn.Shenandoah:      20474.282 MB/sec
                 ·gc.churn.Shenandoah.norm: 10193358895.304 B/op
                 ·gc.count:                 762.000 counts
                 ·gc.time:                  1465.000 ms


# Run progress: 77.78% complete, ETA 00:15:29
# Fork: 2 of 3
# Warmup Iteration   1: 2.059 ops/s
# Warmup Iteration   2: 2.168 ops/s
# Warmup Iteration   3: 2.176 ops/s
# Warmup Iteration   4: 2.185 ops/s
# Warmup Iteration   5: 2.193 ops/s
Iteration   1: 2.139 ops/s
                 ·gc.alloc.rate:                                  20034.548 MB/sec
                 ·gc.alloc.rate.norm:                             10301259922.545 B/op
                 ·gc.churn.CodeHeap_'non-profiled_nmethods':      ≈ 10⁻⁴ MB/sec
                 ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 23.273 B/op
                 ·gc.churn.CodeHeap_'profiled_nmethods':          ≈ 10⁻⁴ MB/sec
                 ·gc.churn.CodeHeap_'profiled_nmethods'.norm:     98.909 B/op
                 ·gc.churn.Compressed_Class_Space:                ≈ 10⁻⁴ MB/sec
                 ·gc.churn.Compressed_Class_Space.norm:           101.818 B/op
                 ·gc.churn.Metaspace:                             0.001 MB/sec
                 ·gc.churn.Metaspace.norm:                        582.182 B/op
                 ·gc.churn.Shenandoah:                            19824.923 MB/sec
                 ·gc.churn.Shenandoah.norm:                       10193475992.727 B/op
                 ·gc.count:                                       851.000 counts
                 ·gc.time:                                        1711.000 ms

Iteration   2: 2.205 ops/s
                 ·gc.alloc.rate:                              20669.175 MB/sec
                 ·gc.alloc.rate.norm:                         10301259923.130 B/op
                 ·gc.churn.CodeHeap_'profiled_nmethods':      0.002 MB/sec
                 ·gc.churn.CodeHeap_'profiled_nmethods'.norm: 1229.913 B/op
                 ·gc.churn.Shenandoah:                        20447.230 MB/sec
                 ·gc.churn.Shenandoah.norm:                   10190645454.261 B/op
                 ·gc.count:                                   767.000 counts
                 ·gc.time:                                    1444.000 ms

Iteration   3: 2.158 ops/s
                 ·gc.alloc.rate:            20203.846 MB/sec
                 ·gc.alloc.rate.norm:       10301259924.000 B/op
                 ·gc.churn.Shenandoah:      19983.840 MB/sec
                 ·gc.churn.Shenandoah.norm: 10189086408.000 B/op
                 ·gc.count:                 789.000 counts
                 ·gc.time:                  1538.000 ms

Iteration   4: 2.215 ops/s
                 ·gc.alloc.rate:            20762.340 MB/sec
                 ·gc.alloc.rate.norm:       10301259921.739 B/op
                 ·gc.churn.Shenandoah:      20531.212 MB/sec
                 ·gc.churn.Shenandoah.norm: 10186585270.609 B/op
                 ·gc.count:                 736.000 counts
                 ·gc.time:                  1347.000 ms

Iteration   5: 2.174 ops/s
                 ·gc.alloc.rate:            20345.795 MB/sec
                 ·gc.alloc.rate.norm:       10301259924.000 B/op
                 ·gc.churn.Shenandoah:      20128.813 MB/sec
                 ·gc.churn.Shenandoah.norm: 10191399938.909 B/op
                 ·gc.count:                 790.000 counts
                 ·gc.time:                  1645.000 ms


# Run progress: 80.56% complete, ETA 00:13:31
# Fork: 3 of 3
# Warmup Iteration   1: 2.135 ops/s
# Warmup Iteration   2: 2.134 ops/s
# Warmup Iteration   3: 2.187 ops/s
# Warmup Iteration   4: 2.188 ops/s
# Warmup Iteration   5: 2.203 ops/s
Iteration   1: 2.172 ops/s
                 ·gc.alloc.rate:            20327.672 MB/sec
                 ·gc.alloc.rate.norm:       10301259924.000 B/op
                 ·gc.churn.Shenandoah:      20095.913 MB/sec
                 ·gc.churn.Shenandoah.norm: 10183813982.909 B/op
                 ·gc.count:                 741.000 counts
                 ·gc.time:                  1409.000 ms

Iteration   2: 2.201 ops/s
                 ·gc.alloc.rate:                              20637.575 MB/sec
                 ·gc.alloc.rate.norm:                         10301259921.739 B/op
                 ·gc.churn.CodeHeap_'profiled_nmethods':      0.001 MB/sec
                 ·gc.churn.CodeHeap_'profiled_nmethods'.norm: 339.478 B/op
                 ·gc.churn.Shenandoah:                        20405.277 MB/sec
                 ·gc.churn.Shenandoah.norm:                   10185308009.739 B/op
                 ·gc.count:                                   736.000 counts
                 ·gc.time:                                    1396.000 ms

Iteration   3: 2.169 ops/s
                 ·gc.alloc.rate:                              20308.817 MB/sec
                 ·gc.alloc.rate.norm:                         10301259922.545 B/op
                 ·gc.churn.CodeHeap_'profiled_nmethods':      ≈ 10⁻⁴ MB/sec
                 ·gc.churn.CodeHeap_'profiled_nmethods'.norm: 104.727 B/op
                 ·gc.churn.Shenandoah:                        20087.133 MB/sec
                 ·gc.churn.Shenandoah.norm:                   10188814498.182 B/op
                 ·gc.count:                                   743.000 counts
                 ·gc.time:                                    1470.000 ms

Iteration   4: 2.196 ops/s
                 ·gc.alloc.rate:            20546.143 MB/sec
                 ·gc.alloc.rate.norm:       10301259922.545 B/op
                 ·gc.churn.Shenandoah:      20308.963 MB/sec
                 ·gc.churn.Shenandoah.norm: 10182344753.091 B/op
                 ·gc.count:                 704.000 counts
                 ·gc.time:                  1304.000 ms

Iteration   5: 2.120 ops/s
                 ·gc.alloc.rate:                        19864.080 MB/sec
                 ·gc.alloc.rate.norm:                   10301259924.000 B/op
                 ·gc.churn.Compressed_Class_Space:      ≈ 10⁻⁴ MB/sec
                 ·gc.churn.Compressed_Class_Space.norm: 101.818 B/op
                 ·gc.churn.Metaspace:                   0.001 MB/sec
                 ·gc.churn.Metaspace.norm:              582.182 B/op
                 ·gc.churn.Shenandoah:                  19658.107 MB/sec
                 ·gc.churn.Shenandoah.norm:             10194444872.000 B/op
                 ·gc.count:                             897.000 counts
                 ·gc.time:                              1878.000 ms



Result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.shenandoahGC":
  2.179 ±(99.9%) 0.032 ops/s [Average]
  (min, avg, max) = (2.120, 2.179, 2.215), stdev = 0.030
  CI (99.9%): [2.147, 2.211] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.shenandoahGC:·gc.alloc.rate":
  20406.306 ±(99.9%) 300.847 MB/sec [Average]
  (min, avg, max) = (19864.080, 20406.306, 20762.340), stdev = 281.412
  CI (99.9%): [20105.459, 20707.152] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.shenandoahGC:·gc.alloc.rate.norm":
  10301259923.137 ±(99.9%) 0.893 B/op [Average]
  (min, avg, max) = (10301259921.739, 10301259923.137, 10301259924.000), stdev = 0.836
  CI (99.9%): [10301259922.243, 10301259924.030] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.shenandoahGC:·gc.churn.CodeHeap_'non-profiled_nmethods'":
  ≈ 10⁻³ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.shenandoahGC:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
  186.958 ±(99.9%) 570.042 B/op [Average]
  (min, avg, max) = (≈ 0, 186.958, 1954.909), stdev = 533.217
  CI (99.9%): [≈ 0, 756.999] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.shenandoahGC:·gc.churn.CodeHeap_'profiled_nmethods'":
  0.001 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (≈ 0, 0.001, 0.004), stdev = 0.001
  CI (99.9%): [≈ 0, 0.002] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.shenandoahGC:·gc.churn.CodeHeap_'profiled_nmethods'.norm":
  315.244 ±(99.9%) 656.053 B/op [Average]
  (min, avg, max) = (≈ 0, 315.244, 2088.727), stdev = 613.672
  CI (99.9%): [≈ 0, 971.297] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.shenandoahGC:·gc.churn.Compressed_Class_Space":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.shenandoahGC:·gc.churn.Compressed_Class_Space.norm":
  20.364 ±(99.9%) 45.068 B/op [Average]
  (min, avg, max) = (≈ 0, 20.364, 101.818), stdev = 42.157
  CI (99.9%): [≈ 0, 65.432] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.shenandoahGC:·gc.churn.Metaspace":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.shenandoahGC:·gc.churn.Metaspace.norm":
  116.436 ±(99.9%) 257.693 B/op [Average]
  (min, avg, max) = (≈ 0, 116.436, 582.182), stdev = 241.046
  CI (99.9%): [≈ 0, 374.129] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.shenandoahGC:·gc.churn.Shenandoah":
  20184.599 ±(99.9%) 293.065 MB/sec [Average]
  (min, avg, max) = (19658.107, 20184.599, 20531.212), stdev = 274.133
  CI (99.9%): [19891.534, 20477.663] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.shenandoahGC:·gc.churn.Shenandoah.norm":
  10189369252.303 ±(99.9%) 4907940.794 B/op [Average]
  (min, avg, max) = (10181862104.000, 10189369252.303, 10197245896.727), stdev = 4590890.864
  CI (99.9%): [10184461311.509, 10194277193.096] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.shenandoahGC:·gc.count":
  11650.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (704.000, 776.667, 910.000), stdev = 62.862
  CI (99.9%): [11650.000, 11650.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.shenandoahGC:·gc.time":
  22650.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (1298.000, 1510.000, 1878.000), stdev = 177.718
  CI (99.9%): [22650.000, 22650.000] (assumes normal distribution)


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+UseZGC -Xms4g -Xmx4g -XX:+AlwaysPreTouch
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.zGC
# Parameters: (objectsSize = _4_KB)

# Run progress: 83.33% complete, ETA 00:11:34
# Fork: 1 of 3
# Warmup Iteration   1: 1.598 ops/s
# Warmup Iteration   2: 1.612 ops/s
# Warmup Iteration   3: 1.637 ops/s
# Warmup Iteration   4: 1.613 ops/s
# Warmup Iteration   5: 1.618 ops/s
Iteration   1: 1.620 ops/s
                 ·gc.alloc.rate:           15317.081 MB/sec
                 ·gc.alloc.rate.norm:      10388442533.176 B/op
                 ·gc.churn.Metaspace:      0.001 MB/sec
                 ·gc.churn.Metaspace.norm: 489.412 B/op
                 ·gc.churn.ZHeap:          13624.399 MB/sec
                 ·gc.churn.ZHeap.norm:     9240421797.647 B/op
                 ·gc.count:                106.000 counts
                 ·gc.time:                 31.000 ms

Iteration   2: 1.609 ops/s
                 ·gc.alloc.rate:           15220.167 MB/sec
                 ·gc.alloc.rate.norm:      10388442533.647 B/op
                 ·gc.churn.Metaspace:      0.001 MB/sec
                 ·gc.churn.Metaspace.norm: 489.412 B/op
                 ·gc.churn.ZHeap:          13497.168 MB/sec
                 ·gc.churn.ZHeap.norm:     9212418650.353 B/op
                 ·gc.count:                107.000 counts
                 ·gc.time:                 31.000 ms

Iteration   3: 1.640 ops/s
                 ·gc.alloc.rate:           15494.302 MB/sec
                 ·gc.alloc.rate.norm:      10388442530.353 B/op
                 ·gc.churn.Metaspace:      0.001 MB/sec
                 ·gc.churn.Metaspace.norm: 489.412 B/op
                 ·gc.churn.ZHeap:          13593.994 MB/sec
                 ·gc.churn.ZHeap.norm:     9114345953.882 B/op
                 ·gc.count:                105.000 counts
                 ·gc.time:                 31.000 ms

Iteration   4: 1.594 ops/s
                 ·gc.alloc.rate:           15038.792 MB/sec
                 ·gc.alloc.rate.norm:      10388442532.500 B/op
                 ·gc.churn.Metaspace:      0.001 MB/sec
                 ·gc.churn.Metaspace.norm: 520.000 B/op
                 ·gc.churn.ZHeap:          13391.508 MB/sec
                 ·gc.churn.ZHeap.norm:     9250537472.000 B/op
                 ·gc.count:                103.000 counts
                 ·gc.time:                 31.000 ms

Iteration   5: 1.577 ops/s
                 ·gc.alloc.rate:           14887.225 MB/sec
                 ·gc.alloc.rate.norm:      10388442536.000 B/op
                 ·gc.churn.Metaspace:      0.001 MB/sec
                 ·gc.churn.Metaspace.norm: 520.000 B/op
                 ·gc.churn.ZHeap:          13367.928 MB/sec
                 ·gc.churn.ZHeap.norm:     9328263168.000 B/op
                 ·gc.count:                103.000 counts
                 ·gc.time:                 31.000 ms


# Run progress: 86.11% complete, ETA 00:09:37
# Fork: 2 of 3
# Warmup Iteration   1: 1.598 ops/s
# Warmup Iteration   2: 1.622 ops/s
# Warmup Iteration   3: 1.583 ops/s
# Warmup Iteration   4: 1.613 ops/s
# Warmup Iteration   5: 1.612 ops/s
Iteration   1: 1.609 ops/s
                 ·gc.alloc.rate:           15219.713 MB/sec
                 ·gc.alloc.rate.norm:      10388442533.176 B/op
                 ·gc.churn.Metaspace:      0.001 MB/sec
                 ·gc.churn.Metaspace.norm: 489.412 B/op
                 ·gc.churn.ZHeap:          13545.743 MB/sec
                 ·gc.churn.ZHeap.norm:     9245849720.471 B/op
                 ·gc.count:                108.000 counts
                 ·gc.time:                 35.000 ms

Iteration   2: 1.624 ops/s
                 ·gc.alloc.rate:           15355.572 MB/sec
                 ·gc.alloc.rate.norm:      10388442530.353 B/op
                 ·gc.churn.Metaspace:      0.001 MB/sec
                 ·gc.churn.Metaspace.norm: 489.412 B/op
                 ·gc.churn.ZHeap:          13633.291 MB/sec
                 ·gc.churn.ZHeap.norm:     9223274496.000 B/op
                 ·gc.count:                106.000 counts
                 ·gc.time:                 29.000 ms

Iteration   3: 1.627 ops/s
                 ·gc.alloc.rate:           15380.065 MB/sec
                 ·gc.alloc.rate.norm:      10388442530.353 B/op
                 ·gc.churn.Metaspace:      0.001 MB/sec
                 ·gc.churn.Metaspace.norm: 489.412 B/op
                 ·gc.churn.ZHeap:          13520.615 MB/sec
                 ·gc.churn.ZHeap.norm:     9132480150.588 B/op
                 ·gc.count:                106.000 counts
                 ·gc.time:                 31.000 ms

Iteration   4: 1.619 ops/s
                 ·gc.alloc.rate:           15308.159 MB/sec
                 ·gc.alloc.rate.norm:      10388442530.353 B/op
                 ·gc.churn.Metaspace:      0.001 MB/sec
                 ·gc.churn.Metaspace.norm: 489.412 B/op
                 ·gc.churn.ZHeap:          13491.579 MB/sec
                 ·gc.churn.ZHeap.norm:     9155672184.471 B/op
                 ·gc.count:                108.000 counts
                 ·gc.time:                 31.000 ms

Iteration   5: 1.637 ops/s
                 ·gc.alloc.rate:           15471.975 MB/sec
                 ·gc.alloc.rate.norm:      10388442530.353 B/op
                 ·gc.churn.Metaspace:      0.001 MB/sec
                 ·gc.churn.Metaspace.norm: 489.412 B/op
                 ·gc.churn.ZHeap:          13503.854 MB/sec
                 ·gc.churn.ZHeap.norm:     9066974991.059 B/op
                 ·gc.count:                105.000 counts
                 ·gc.time:                 35.000 ms


# Run progress: 88.89% complete, ETA 00:07:42
# Fork: 3 of 3
# Warmup Iteration   1: 1.595 ops/s
# Warmup Iteration   2: 1.610 ops/s
# Warmup Iteration   3: 1.605 ops/s
# Warmup Iteration   4: 1.617 ops/s
# Warmup Iteration   5: 1.598 ops/s
Iteration   1: 1.589 ops/s
                 ·gc.alloc.rate:           14996.697 MB/sec
                 ·gc.alloc.rate.norm:      10388442536.000 B/op
                 ·gc.churn.Metaspace:      0.001 MB/sec
                 ·gc.churn.Metaspace.norm: 520.000 B/op
                 ·gc.churn.ZHeap:          13424.980 MB/sec
                 ·gc.churn.ZHeap.norm:     9299689472.000 B/op
                 ·gc.count:                102.000 counts
                 ·gc.time:                 29.000 ms

Iteration   2: 1.620 ops/s
                 ·gc.alloc.rate:           15315.589 MB/sec
                 ·gc.alloc.rate.norm:      10388442533.176 B/op
                 ·gc.churn.Metaspace:      0.001 MB/sec
                 ·gc.churn.Metaspace.norm: 489.412 B/op
                 ·gc.churn.ZHeap:          13629.074 MB/sec
                 ·gc.churn.ZHeap.norm:     9244492739.765 B/op
                 ·gc.count:                108.000 counts
                 ·gc.time:                 32.000 ms

Iteration   3: 1.605 ops/s
                 ·gc.alloc.rate:           15177.892 MB/sec
                 ·gc.alloc.rate.norm:      10388442530.353 B/op
                 ·gc.churn.Metaspace:      0.001 MB/sec
                 ·gc.churn.Metaspace.norm: 489.412 B/op
                 ·gc.churn.ZHeap:          13598.460 MB/sec
                 ·gc.churn.ZHeap.norm:     9307407299.765 B/op
                 ·gc.count:                108.000 counts
                 ·gc.time:                 34.000 ms

Iteration   4: 1.619 ops/s
                 ·gc.alloc.rate:           15312.455 MB/sec
                 ·gc.alloc.rate.norm:      10388442533.647 B/op
                 ·gc.churn.Metaspace:      0.001 MB/sec
                 ·gc.churn.Metaspace.norm: 489.412 B/op
                 ·gc.churn.ZHeap:          13681.199 MB/sec
                 ·gc.churn.ZHeap.norm:     9281748028.235 B/op
                 ·gc.count:                107.000 counts
                 ·gc.time:                 32.000 ms

Iteration   5: 1.628 ops/s
                 ·gc.alloc.rate:           15388.865 MB/sec
                 ·gc.alloc.rate.norm:      10388442530.353 B/op
                 ·gc.churn.Metaspace:      0.001 MB/sec
                 ·gc.churn.Metaspace.norm: 489.412 B/op
                 ·gc.churn.ZHeap:          13560.697 MB/sec
                 ·gc.churn.ZHeap.norm:     9154315203.765 B/op
                 ·gc.count:                107.000 counts
                 ·gc.time:                 33.000 ms



Result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.zGC":
  1.614 ±(99.9%) 0.019 ops/s [Average]
  (min, avg, max) = (1.577, 1.614, 1.640), stdev = 0.018
  CI (99.9%): [1.596, 1.633] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.zGC:·gc.alloc.rate":
  15258.970 ±(99.9%) 184.850 MB/sec [Average]
  (min, avg, max) = (14887.225, 15258.970, 15494.302), stdev = 172.909
  CI (99.9%): [15074.120, 15443.820] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.zGC:·gc.alloc.rate.norm":
  10388442532.253 ±(99.9%) 2.211 B/op [Average]
  (min, avg, max) = (10388442530.353, 10388442532.253, 10388442536.000), stdev = 2.068
  CI (99.9%): [10388442530.042, 10388442534.463] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.zGC:·gc.churn.Metaspace":
  0.001 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
  CI (99.9%): [0.001, 0.001] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.zGC:·gc.churn.Metaspace.norm":
  495.529 ±(99.9%) 13.539 B/op [Average]
  (min, avg, max) = (489.412, 495.529, 520.000), stdev = 12.665
  CI (99.9%): [481.990, 509.069] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.zGC:·gc.churn.ZHeap":
  13537.633 ±(99.9%) 99.452 MB/sec [Average]
  (min, avg, max) = (13367.928, 13537.633, 13681.199), stdev = 93.028
  CI (99.9%): [13438.180, 13637.085] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.zGC:·gc.churn.ZHeap.norm":
  9217192755.200 ±(99.9%) 82207306.134 B/op [Average]
  (min, avg, max) = (9066974991.059, 9217192755.200, 9328263168.000), stdev = 76896765.169
  CI (99.9%): [9134985449.066, 9299400061.334] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.zGC:·gc.count":
  1589.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (102.000, 105.933, 108.000), stdev = 1.981
  CI (99.9%): [1589.000, 1589.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.zGC:·gc.time":
  476.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (29.000, 31.733, 35.000), stdev = 1.831
  CI (99.9%): [476.000, 476.000] (assumes normal distribution)


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+UseZGC -Xms4g -Xmx4g -XX:+AlwaysPreTouch
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.zGC
# Parameters: (objectsSize = _4_MB)

# Run progress: 91.67% complete, ETA 00:05:46
# Fork: 1 of 3
# Warmup Iteration   1: 2.346 ops/s
# Warmup Iteration   2: 2.361 ops/s
# Warmup Iteration   3: 2.357 ops/s
# Warmup Iteration   4: 2.363 ops/s
# Warmup Iteration   5: 2.375 ops/s
Iteration   1: 2.320 ops/s
                 ·gc.alloc.rate:           21737.951 MB/sec
                 ·gc.alloc.rate.norm:      10301289496.333 B/op
                 ·gc.churn.Metaspace:      0.001 MB/sec
                 ·gc.churn.Metaspace.norm: 346.667 B/op
                 ·gc.churn.ZHeap:          31995.228 MB/sec
                 ·gc.churn.ZHeap.norm:     15162059434.667 B/op
                 ·gc.count:                189.000 counts
                 ·gc.time:                 54.000 ms

Iteration   2: 2.349 ops/s
                 ·gc.alloc.rate:           21996.496 MB/sec
                 ·gc.alloc.rate.norm:      10301289496.333 B/op
                 ·gc.churn.Metaspace:      0.001 MB/sec
                 ·gc.churn.Metaspace.norm: 346.667 B/op
                 ·gc.churn.ZHeap:          32328.377 MB/sec
                 ·gc.churn.ZHeap.norm:     15139864576.000 B/op
                 ·gc.count:                185.000 counts
                 ·gc.time:                 53.000 ms

Iteration   3: 2.359 ops/s
                 ·gc.alloc.rate:           22084.374 MB/sec
                 ·gc.alloc.rate.norm:      10301289496.333 B/op
                 ·gc.churn.Metaspace:      0.001 MB/sec
                 ·gc.churn.Metaspace.norm: 346.667 B/op
                 ·gc.churn.ZHeap:          32383.535 MB/sec
                 ·gc.churn.ZHeap.norm:     15105348949.333 B/op
                 ·gc.count:                181.000 counts
                 ·gc.time:                 49.000 ms

Iteration   4: 2.340 ops/s
                 ·gc.alloc.rate:           21912.618 MB/sec
                 ·gc.alloc.rate.norm:      10301289496.333 B/op
                 ·gc.churn.Metaspace:      0.001 MB/sec
                 ·gc.churn.Metaspace.norm: 346.667 B/op
                 ·gc.churn.ZHeap:          32215.324 MB/sec
                 ·gc.churn.ZHeap.norm:     15144670549.333 B/op
                 ·gc.count:                188.000 counts
                 ·gc.time:                 53.000 ms

Iteration   5: 2.355 ops/s
                 ·gc.alloc.rate:           22049.295 MB/sec
                 ·gc.alloc.rate.norm:      10301289498.333 B/op
                 ·gc.churn.Metaspace:      0.001 MB/sec
                 ·gc.churn.Metaspace.norm: 346.667 B/op
                 ·gc.churn.ZHeap:          32431.413 MB/sec
                 ·gc.churn.ZHeap.norm:     15151748437.333 B/op
                 ·gc.count:                184.000 counts
                 ·gc.time:                 52.000 ms


# Run progress: 94.44% complete, ETA 00:03:50
# Fork: 2 of 3
# Warmup Iteration   1: 2.365 ops/s
# Warmup Iteration   2: 2.342 ops/s
# Warmup Iteration   3: 2.346 ops/s
# Warmup Iteration   4: 2.367 ops/s
# Warmup Iteration   5: 2.369 ops/s
Iteration   1: 2.357 ops/s
                 ·gc.alloc.rate:           22068.730 MB/sec
                 ·gc.alloc.rate.norm:      10301289496.333 B/op
                 ·gc.churn.Metaspace:      0.001 MB/sec
                 ·gc.churn.Metaspace.norm: 346.667 B/op
                 ·gc.churn.ZHeap:          32378.380 MB/sec
                 ·gc.churn.ZHeap.norm:     15113650176.000 B/op
                 ·gc.count:                183.000 counts
                 ·gc.time:                 53.000 ms

Iteration   2: 2.348 ops/s
                 ·gc.alloc.rate:           21988.947 MB/sec
                 ·gc.alloc.rate.norm:      10301289498.333 B/op
                 ·gc.churn.Metaspace:      0.001 MB/sec
                 ·gc.churn.Metaspace.norm: 346.667 B/op
                 ·gc.churn.ZHeap:          32333.696 MB/sec
                 ·gc.churn.ZHeap.norm:     15147554133.333 B/op
                 ·gc.count:                178.000 counts
                 ·gc.time:                 50.000 ms

Iteration   3: 2.347 ops/s
                 ·gc.alloc.rate:           21976.755 MB/sec
                 ·gc.alloc.rate.norm:      10301289496.333 B/op
                 ·gc.churn.Metaspace:      0.001 MB/sec
                 ·gc.churn.Metaspace.norm: 346.667 B/op
                 ·gc.churn.ZHeap:          32238.031 MB/sec
                 ·gc.churn.ZHeap.norm:     15111116117.333 B/op
                 ·gc.count:                182.000 counts
                 ·gc.time:                 53.000 ms

Iteration   4: 2.357 ops/s
                 ·gc.alloc.rate:                         22071.639 MB/sec
                 ·gc.alloc.rate.norm:                    10301289496.333 B/op
                 ·gc.churn.CodeHeap_'non-nmethods':      0.001 MB/sec
                 ·gc.churn.CodeHeap_'non-nmethods'.norm: 608.000 B/op
                 ·gc.churn.Metaspace:                    0.001 MB/sec
                 ·gc.churn.Metaspace.norm:               346.667 B/op
                 ·gc.churn.ZHeap:                        32456.788 MB/sec
                 ·gc.churn.ZHeap.norm:                   15148253184.000 B/op
                 ·gc.count:                              184.000 counts
                 ·gc.time:                               51.000 ms

Iteration   5: 2.356 ops/s
                 ·gc.alloc.rate:           22060.246 MB/sec
                 ·gc.alloc.rate.norm:      10301289496.333 B/op
                 ·gc.churn.Metaspace:      0.001 MB/sec
                 ·gc.churn.Metaspace.norm: 508.333 B/op
                 ·gc.churn.ZHeap:          32459.123 MB/sec
                 ·gc.churn.ZHeap.norm:     15157166080.000 B/op
                 ·gc.count:                183.000 counts
                 ·gc.time:                 54.000 ms


# Run progress: 97.22% complete, ETA 00:01:55
# Fork: 3 of 3
# Warmup Iteration   1: 2.341 ops/s
# Warmup Iteration   2: 2.345 ops/s
# Warmup Iteration   3: 2.367 ops/s
# Warmup Iteration   4: 2.373 ops/s
# Warmup Iteration   5: 2.376 ops/s
Iteration   1: 2.360 ops/s
                 ·gc.alloc.rate:           22092.340 MB/sec
                 ·gc.alloc.rate.norm:      10301289496.333 B/op
                 ·gc.churn.Metaspace:      0.001 MB/sec
                 ·gc.churn.Metaspace.norm: 346.667 B/op
                 ·gc.churn.ZHeap:          32429.136 MB/sec
                 ·gc.churn.ZHeap.norm:     15121164970.667 B/op
                 ·gc.count:                182.000 counts
                 ·gc.time:                 49.000 ms

Iteration   2: 2.376 ops/s
                 ·gc.alloc.rate:           22239.892 MB/sec
                 ·gc.alloc.rate.norm:      10301289498.667 B/op
                 ·gc.churn.Metaspace:      0.001 MB/sec
                 ·gc.churn.Metaspace.norm: 346.667 B/op
                 ·gc.churn.ZHeap:          32755.521 MB/sec
                 ·gc.churn.ZHeap.norm:     15172020906.667 B/op
                 ·gc.count:                178.000 counts
                 ·gc.time:                 48.000 ms

Iteration   3: 2.315 ops/s
                 ·gc.alloc.rate:           21693.997 MB/sec
                 ·gc.alloc.rate.norm:      10301289496.333 B/op
                 ·gc.churn.Metaspace:      0.001 MB/sec
                 ·gc.churn.Metaspace.norm: 346.667 B/op
                 ·gc.churn.ZHeap:          31855.454 MB/sec
                 ·gc.churn.ZHeap.norm:     15126407850.667 B/op
                 ·gc.count:                177.000 counts
                 ·gc.time:                 53.000 ms

Iteration   4: 2.359 ops/s
                 ·gc.alloc.rate:           22086.131 MB/sec
                 ·gc.alloc.rate.norm:      10301289498.333 B/op
                 ·gc.churn.Metaspace:      0.001 MB/sec
                 ·gc.churn.Metaspace.norm: 346.667 B/op
                 ·gc.churn.ZHeap:          32431.638 MB/sec
                 ·gc.churn.ZHeap.norm:     15126582613.333 B/op
                 ·gc.count:                174.000 counts
                 ·gc.time:                 49.000 ms

Iteration   5: 2.320 ops/s
                 ·gc.alloc.rate:           21736.258 MB/sec
                 ·gc.alloc.rate.norm:      10301289496.333 B/op
                 ·gc.churn.Metaspace:      0.001 MB/sec
                 ·gc.churn.Metaspace.norm: 301.000 B/op
                 ·gc.churn.ZHeap:          31915.849 MB/sec
                 ·gc.churn.ZHeap.norm:     15125621418.667 B/op
                 ·gc.count:                183.000 counts
                 ·gc.time:                 52.000 ms



Result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.zGC":
  2.348 ±(99.9%) 0.019 ops/s [Average]
  (min, avg, max) = (2.315, 2.348, 2.376), stdev = 0.017
  CI (99.9%): [2.329, 2.366] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.zGC:·gc.alloc.rate":
  21986.378 ±(99.9%) 165.105 MB/sec [Average]
  (min, avg, max) = (21693.997, 21986.378, 22239.892), stdev = 154.440
  CI (99.9%): [21821.273, 22151.483] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.zGC:·gc.alloc.rate.norm":
  10301289496.889 ±(99.9%) 1.023 B/op [Average]
  (min, avg, max) = (10301289496.333, 10301289496.889, 10301289498.667), stdev = 0.957
  CI (99.9%): [10301289495.866, 10301289497.912] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.zGC:·gc.churn.CodeHeap_'non-nmethods'":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.zGC:·gc.churn.CodeHeap_'non-nmethods'.norm":
  40.533 ±(99.9%) 167.826 B/op [Average]
  (min, avg, max) = (≈ 0, 40.533, 608.000), stdev = 156.985
  CI (99.9%): [≈ 0, 208.360] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.zGC:·gc.churn.Metaspace":
  0.001 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
  CI (99.9%): [0.001, 0.001] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.zGC:·gc.churn.Metaspace.norm":
  354.400 ±(99.9%) 47.230 B/op [Average]
  (min, avg, max) = (301.000, 354.400, 508.333), stdev = 44.179
  CI (99.9%): [307.170, 401.630] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.zGC:·gc.churn.ZHeap":
  32307.166 ±(99.9%) 251.052 MB/sec [Average]
  (min, avg, max) = (31855.454, 32307.166, 32755.521), stdev = 234.834
  CI (99.9%): [32056.115, 32558.218] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.zGC:·gc.churn.ZHeap.norm":
  15136881959.822 ±(99.9%) 21383883.422 B/op [Average]
  (min, avg, max) = (15105348949.333, 15136881959.822, 15172020906.667), stdev = 20002497.822
  CI (99.9%): [15115498076.400, 15158265843.244] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.zGC:·gc.count":
  2731.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (174.000, 182.067, 189.000), stdev = 4.026
  CI (99.9%): [2731.000, 2731.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.BurstHeapMemoryAllocatorBenchmark.zGC:·gc.time":
  773.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (48.000, 51.533, 54.000), stdev = 2.031
  CI (99.9%): [773.000, 773.000] (assumes normal distribution)


# Run complete. Total time: 01:09:05

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                                                                          (objectsSize)   Mode  Cnt            Score           Error   Units
BurstHeapMemoryAllocatorBenchmark.concMarkSweepGC                                                          _4_KB  thrpt   15            0.244 ±         0.004   ops/s
BurstHeapMemoryAllocatorBenchmark.concMarkSweepGC:·gc.alloc.rate                                           _4_KB  thrpt   15         2275.042 ±        32.882  MB/sec
BurstHeapMemoryAllocatorBenchmark.concMarkSweepGC:·gc.alloc.rate.norm                                      _4_KB  thrpt   15  10190080301.689 ±         8.475    B/op
BurstHeapMemoryAllocatorBenchmark.concMarkSweepGC:·gc.churn.CMS_Old_Gen                                    _4_KB  thrpt   15         1580.795 ±        36.757  MB/sec
BurstHeapMemoryAllocatorBenchmark.concMarkSweepGC:·gc.churn.CMS_Old_Gen.norm                               _4_KB  thrpt   15   7081281494.044 ± 176628706.965    B/op
BurstHeapMemoryAllocatorBenchmark.concMarkSweepGC:·gc.churn.Par_Eden_Space                                 _4_KB  thrpt   15         2238.544 ±        33.831  MB/sec
BurstHeapMemoryAllocatorBenchmark.concMarkSweepGC:·gc.churn.Par_Eden_Space.norm                            _4_KB  thrpt   15  10026957334.933 ± 102762522.590    B/op
BurstHeapMemoryAllocatorBenchmark.concMarkSweepGC:·gc.churn.Par_Survivor_Space                             _4_KB  thrpt   15           57.422 ±         1.335  MB/sec
BurstHeapMemoryAllocatorBenchmark.concMarkSweepGC:·gc.churn.Par_Survivor_Space.norm                        _4_KB  thrpt   15    257227343.644 ±   6415891.644    B/op
BurstHeapMemoryAllocatorBenchmark.concMarkSweepGC:·gc.count                                                _4_KB  thrpt   15         1016.000                  counts
BurstHeapMemoryAllocatorBenchmark.concMarkSweepGC:·gc.time                                                 _4_KB  thrpt   15       156106.000                      ms
BurstHeapMemoryAllocatorBenchmark.concMarkSweepGC                                                          _4_MB  thrpt   15            0.518 ±         0.004   ops/s
BurstHeapMemoryAllocatorBenchmark.concMarkSweepGC:·gc.alloc.rate                                           _4_MB  thrpt   15         4798.229 ±        37.397  MB/sec
BurstHeapMemoryAllocatorBenchmark.concMarkSweepGC:·gc.alloc.rate.norm                                      _4_MB  thrpt   15  10133487016.889 ±         5.719    B/op
BurstHeapMemoryAllocatorBenchmark.concMarkSweepGC:·gc.churn.CMS_Old_Gen                                    _4_MB  thrpt   15         3632.267 ±        27.163  MB/sec
BurstHeapMemoryAllocatorBenchmark.concMarkSweepGC:·gc.churn.CMS_Old_Gen.norm                               _4_MB  thrpt   15   7671191451.200 ±  45794149.350    B/op
BurstHeapMemoryAllocatorBenchmark.concMarkSweepGC:·gc.churn.CodeHeap_'non-nmethods'                        _4_MB  thrpt   15           ≈ 10⁻⁴                  MB/sec
BurstHeapMemoryAllocatorBenchmark.concMarkSweepGC:·gc.churn.CodeHeap_'non-nmethods'.norm                   _4_MB  thrpt   15          256.000 ±       609.228    B/op
BurstHeapMemoryAllocatorBenchmark.concMarkSweepGC:·gc.churn.CodeHeap_'non-profiled_nmethods'               _4_MB  thrpt   15           ≈ 10⁻⁴                  MB/sec
BurstHeapMemoryAllocatorBenchmark.concMarkSweepGC:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm          _4_MB  thrpt   15          187.733 ±       777.301    B/op
BurstHeapMemoryAllocatorBenchmark.concMarkSweepGC:·gc.churn.CodeHeap_'profiled_nmethods'                   _4_MB  thrpt   15           ≈ 10⁻⁴                  MB/sec
BurstHeapMemoryAllocatorBenchmark.concMarkSweepGC:·gc.churn.CodeHeap_'profiled_nmethods'.norm              _4_MB  thrpt   15          356.978 ±       657.927    B/op
BurstHeapMemoryAllocatorBenchmark.concMarkSweepGC:·gc.churn.Par_Eden_Space                                 _4_MB  thrpt   15         4821.323 ±        32.556  MB/sec
BurstHeapMemoryAllocatorBenchmark.concMarkSweepGC:·gc.churn.Par_Eden_Space.norm                            _4_MB  thrpt   15  10182390326.578 ±  41038988.827    B/op
BurstHeapMemoryAllocatorBenchmark.concMarkSweepGC:·gc.churn.Par_Survivor_Space                             _4_MB  thrpt   15          126.066 ±         2.898  MB/sec
BurstHeapMemoryAllocatorBenchmark.concMarkSweepGC:·gc.churn.Par_Survivor_Space.norm                        _4_MB  thrpt   15    266228380.800 ±   4951481.733    B/op
BurstHeapMemoryAllocatorBenchmark.concMarkSweepGC:·gc.count                                                _4_MB  thrpt   15         2083.000                  counts
BurstHeapMemoryAllocatorBenchmark.concMarkSweepGC:·gc.time                                                 _4_MB  thrpt   15       138303.000                      ms
BurstHeapMemoryAllocatorBenchmark.g1GC                                                                     _4_KB  thrpt   15            0.482 ±         0.008   ops/s
BurstHeapMemoryAllocatorBenchmark.g1GC:·gc.alloc.rate                                                      _4_KB  thrpt   15         4545.448 ±        67.880  MB/sec
BurstHeapMemoryAllocatorBenchmark.g1GC:·gc.alloc.rate.norm                                                 _4_KB  thrpt   15  10358243540.160 ±         3.470    B/op
BurstHeapMemoryAllocatorBenchmark.g1GC:·gc.churn.G1_Eden_Space                                             _4_KB  thrpt   15         4557.788 ±        70.576  MB/sec
BurstHeapMemoryAllocatorBenchmark.g1GC:·gc.churn.G1_Eden_Space.norm                                        _4_KB  thrpt   15  10386382957.227 ±  47051571.117    B/op
BurstHeapMemoryAllocatorBenchmark.g1GC:·gc.churn.G1_Old_Gen                                                _4_KB  thrpt   15         1221.083 ±       222.229  MB/sec
BurstHeapMemoryAllocatorBenchmark.g1GC:·gc.churn.G1_Old_Gen.norm                                           _4_KB  thrpt   15   2788497002.240 ± 543536882.443    B/op
BurstHeapMemoryAllocatorBenchmark.g1GC:·gc.churn.G1_Survivor_Space                                         _4_KB  thrpt   15          148.410 ±         3.495  MB/sec
BurstHeapMemoryAllocatorBenchmark.g1GC:·gc.churn.G1_Survivor_Space.norm                                    _4_KB  thrpt   15    338284598.613 ±  10491037.162    B/op
BurstHeapMemoryAllocatorBenchmark.g1GC:·gc.count                                                           _4_KB  thrpt   15         2075.000                  counts
BurstHeapMemoryAllocatorBenchmark.g1GC:·gc.time                                                            _4_KB  thrpt   15       106328.000                      ms
BurstHeapMemoryAllocatorBenchmark.g1GC                                                                     _4_MB  thrpt   15            1.383 ±         0.074   ops/s
BurstHeapMemoryAllocatorBenchmark.g1GC:·gc.alloc.rate                                                      _4_MB  thrpt   15        12958.942 ±       695.464  MB/sec
BurstHeapMemoryAllocatorBenchmark.g1GC:·gc.alloc.rate.norm                                                 _4_MB  thrpt   15  10301259934.032 ±         2.310    B/op
BurstHeapMemoryAllocatorBenchmark.g1GC:·gc.churn.G1_Eden_Space                                             _4_MB  thrpt   15            0.184 ±         0.004  MB/sec
BurstHeapMemoryAllocatorBenchmark.g1GC:·gc.churn.G1_Eden_Space.norm                                        _4_MB  thrpt   15       146634.199 ±      7289.681    B/op
BurstHeapMemoryAllocatorBenchmark.g1GC:·gc.churn.G1_Old_Gen                                                _4_MB  thrpt   15        19438.320 ±      1043.191  MB/sec
BurstHeapMemoryAllocatorBenchmark.g1GC:·gc.churn.G1_Old_Gen.norm                                           _4_MB  thrpt   15  15451815911.619 ±        68.785    B/op
BurstHeapMemoryAllocatorBenchmark.g1GC:·gc.churn.G1_Survivor_Space                                         _4_MB  thrpt   15            0.043 ±         0.004  MB/sec
BurstHeapMemoryAllocatorBenchmark.g1GC:·gc.churn.G1_Survivor_Space.norm                                    _4_MB  thrpt   15        34556.341 ±      2213.961    B/op
BurstHeapMemoryAllocatorBenchmark.g1GC:·gc.count                                                           _4_MB  thrpt   15         8235.000                  counts
BurstHeapMemoryAllocatorBenchmark.g1GC:·gc.time                                                            _4_MB  thrpt   15        11911.000                      ms
BurstHeapMemoryAllocatorBenchmark.parallelOldGC                                                            _4_KB  thrpt   15            0.373 ±         0.001   ops/s
BurstHeapMemoryAllocatorBenchmark.parallelOldGC:·gc.alloc.rate                                             _4_KB  thrpt   15         3376.247 ±        12.471  MB/sec
BurstHeapMemoryAllocatorBenchmark.parallelOldGC:·gc.alloc.rate.norm                                        _4_KB  thrpt   15   9927067849.200 ±         5.409    B/op
BurstHeapMemoryAllocatorBenchmark.parallelOldGC:·gc.churn.PS_Eden_Space                                    _4_KB  thrpt   15         3375.094 ±        18.805  MB/sec
BurstHeapMemoryAllocatorBenchmark.parallelOldGC:·gc.churn.PS_Eden_Space.norm                               _4_KB  thrpt   15   9923723264.000 ±  52795300.721    B/op
BurstHeapMemoryAllocatorBenchmark.parallelOldGC:·gc.churn.PS_Old_Gen                                       _4_KB  thrpt   15         2808.723 ±        10.368  MB/sec
BurstHeapMemoryAllocatorBenchmark.parallelOldGC:·gc.churn.PS_Old_Gen.norm                                  _4_KB  thrpt   15   8258397511.333 ±    210002.840    B/op
BurstHeapMemoryAllocatorBenchmark.parallelOldGC:·gc.churn.PS_Survivor_Space                                _4_KB  thrpt   15          649.062 ±         2.397  MB/sec
BurstHeapMemoryAllocatorBenchmark.parallelOldGC:·gc.churn.PS_Survivor_Space.norm                           _4_KB  thrpt   15   1908416115.200 ±      7961.470    B/op
BurstHeapMemoryAllocatorBenchmark.parallelOldGC:·gc.count                                                  _4_KB  thrpt   15         1488.000                  counts
BurstHeapMemoryAllocatorBenchmark.parallelOldGC:·gc.time                                                   _4_KB  thrpt   15       118737.000                      ms
BurstHeapMemoryAllocatorBenchmark.parallelOldGC                                                            _4_MB  thrpt   15            0.507 ±         0.039   ops/s
BurstHeapMemoryAllocatorBenchmark.parallelOldGC:·gc.alloc.rate                                             _4_MB  thrpt   15         4558.117 ±       356.765  MB/sec
BurstHeapMemoryAllocatorBenchmark.parallelOldGC:·gc.alloc.rate.norm                                        _4_MB  thrpt   15   9865050288.427 ±        10.351    B/op
BurstHeapMemoryAllocatorBenchmark.parallelOldGC:·gc.churn.PS_Eden_Space                                    _4_MB  thrpt   15         4613.732 ±       337.747  MB/sec
BurstHeapMemoryAllocatorBenchmark.parallelOldGC:·gc.churn.PS_Eden_Space.norm                               _4_MB  thrpt   15   9989053062.613 ± 113977223.565    B/op
BurstHeapMemoryAllocatorBenchmark.parallelOldGC:·gc.churn.PS_Old_Gen                                       _4_MB  thrpt   15         3241.247 ±       251.496  MB/sec
BurstHeapMemoryAllocatorBenchmark.parallelOldGC:·gc.churn.PS_Old_Gen.norm                                  _4_MB  thrpt   15   7018201418.400 ± 228446681.820    B/op
BurstHeapMemoryAllocatorBenchmark.parallelOldGC:·gc.churn.PS_Survivor_Space                                _4_MB  thrpt   15          324.705 ±        21.897  MB/sec
BurstHeapMemoryAllocatorBenchmark.parallelOldGC:·gc.churn.PS_Survivor_Space.norm                           _4_MB  thrpt   15    703772524.729 ±  31965016.023    B/op
BurstHeapMemoryAllocatorBenchmark.parallelOldGC:·gc.count                                                  _4_MB  thrpt   15         1089.000                  counts
BurstHeapMemoryAllocatorBenchmark.parallelOldGC:·gc.time                                                   _4_MB  thrpt   15       116486.000                      ms
BurstHeapMemoryAllocatorBenchmark.serialGC                                                                 _4_KB  thrpt   15            0.433 ±         0.006   ops/s
BurstHeapMemoryAllocatorBenchmark.serialGC:·gc.alloc.rate                                                  _4_KB  thrpt   15         3965.086 ±        55.970  MB/sec
BurstHeapMemoryAllocatorBenchmark.serialGC:·gc.alloc.rate.norm                                             _4_KB  thrpt   15  10013059315.307 ±         3.132    B/op
BurstHeapMemoryAllocatorBenchmark.serialGC:·gc.churn.Eden_Space                                            _4_KB  thrpt   15         3972.830 ±        38.671  MB/sec
BurstHeapMemoryAllocatorBenchmark.serialGC:·gc.churn.Eden_Space.norm                                       _4_KB  thrpt   15  10033464603.840 ± 101395984.197    B/op
BurstHeapMemoryAllocatorBenchmark.serialGC:·gc.churn.Survivor_Space                                        _4_KB  thrpt   15          226.714 ±         3.200  MB/sec
BurstHeapMemoryAllocatorBenchmark.serialGC:·gc.churn.Survivor_Space.norm                                   _4_KB  thrpt   15    572521244.693 ±       455.657    B/op
BurstHeapMemoryAllocatorBenchmark.serialGC:·gc.churn.Tenured_Gen                                           _4_KB  thrpt   15         1924.490 ±        30.030  MB/sec
BurstHeapMemoryAllocatorBenchmark.serialGC:·gc.churn.Tenured_Gen.norm                                      _4_KB  thrpt   15   4859863193.387 ±  17161235.655    B/op
BurstHeapMemoryAllocatorBenchmark.serialGC:·gc.count                                                       _4_KB  thrpt   15          957.000                  counts
BurstHeapMemoryAllocatorBenchmark.serialGC:·gc.time                                                        _4_KB  thrpt   15       131047.000                      ms
BurstHeapMemoryAllocatorBenchmark.serialGC                                                                 _4_MB  thrpt   15            0.761 ±         0.012   ops/s
BurstHeapMemoryAllocatorBenchmark.serialGC:·gc.alloc.rate                                                  _4_MB  thrpt   15         6892.417 ±       104.144  MB/sec
BurstHeapMemoryAllocatorBenchmark.serialGC:·gc.alloc.rate.norm                                             _4_MB  thrpt   15   9948936758.400 ±         3.677    B/op
BurstHeapMemoryAllocatorBenchmark.serialGC:·gc.churn.Eden_Space                                            _4_MB  thrpt   15         6907.455 ±        97.647  MB/sec
BurstHeapMemoryAllocatorBenchmark.serialGC:·gc.churn.Eden_Space.norm                                       _4_MB  thrpt   15   9970926036.467 ±  63237049.553    B/op
BurstHeapMemoryAllocatorBenchmark.serialGC:·gc.churn.Survivor_Space                                        _4_MB  thrpt   15          395.183 ±         5.971  MB/sec
BurstHeapMemoryAllocatorBenchmark.serialGC:·gc.churn.Survivor_Space.norm                                   _4_MB  thrpt   15    570431422.000 ±       948.474    B/op
BurstHeapMemoryAllocatorBenchmark.serialGC:·gc.churn.Tenured_Gen                                           _4_MB  thrpt   15         3335.787 ±        50.404  MB/sec
BurstHeapMemoryAllocatorBenchmark.serialGC:·gc.churn.Tenured_Gen.norm                                      _4_MB  thrpt   15   4815078852.533 ±       287.797    B/op
BurstHeapMemoryAllocatorBenchmark.serialGC:·gc.count                                                       _4_MB  thrpt   15         1527.000                  counts
BurstHeapMemoryAllocatorBenchmark.serialGC:·gc.time                                                        _4_MB  thrpt   15       116331.000                      ms
BurstHeapMemoryAllocatorBenchmark.shenandoahGC                                                             _4_KB  thrpt   15            1.714 ±         0.018   ops/s
BurstHeapMemoryAllocatorBenchmark.shenandoahGC:·gc.alloc.rate                                              _4_KB  thrpt   15        16153.682 ±       175.322  MB/sec
BurstHeapMemoryAllocatorBenchmark.shenandoahGC:·gc.alloc.rate.norm                                         _4_KB  thrpt   15  10358243479.421 ±         1.285    B/op
BurstHeapMemoryAllocatorBenchmark.shenandoahGC:·gc.churn.CodeHeap_'non-profiled_nmethods'                  _4_KB  thrpt   15           ≈ 10⁻⁴                  MB/sec
BurstHeapMemoryAllocatorBenchmark.shenandoahGC:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm             _4_KB  thrpt   15           95.819 ±       330.195    B/op
BurstHeapMemoryAllocatorBenchmark.shenandoahGC:·gc.churn.CodeHeap_'profiled_nmethods'                      _4_KB  thrpt   15           ≈ 10⁻³                  MB/sec
BurstHeapMemoryAllocatorBenchmark.shenandoahGC:·gc.churn.CodeHeap_'profiled_nmethods'.norm                 _4_KB  thrpt   15          271.979 ±       537.521    B/op
BurstHeapMemoryAllocatorBenchmark.shenandoahGC:·gc.churn.Compressed_Class_Space                            _4_KB  thrpt   15           ≈ 10⁻⁴                  MB/sec
BurstHeapMemoryAllocatorBenchmark.shenandoahGC:·gc.churn.Compressed_Class_Space.norm                       _4_KB  thrpt   15           21.351 ±        60.264    B/op
BurstHeapMemoryAllocatorBenchmark.shenandoahGC:·gc.churn.Metaspace                                         _4_KB  thrpt   15           ≈ 10⁻⁴                  MB/sec
BurstHeapMemoryAllocatorBenchmark.shenandoahGC:·gc.churn.Metaspace.norm                                    _4_KB  thrpt   15          109.917 ±       316.547    B/op
BurstHeapMemoryAllocatorBenchmark.shenandoahGC:·gc.churn.Shenandoah                                        _4_KB  thrpt   15        15196.808 ±       165.621  MB/sec
BurstHeapMemoryAllocatorBenchmark.shenandoahGC:·gc.churn.Shenandoah.norm                                   _4_KB  thrpt   15   9744665688.331 ±   9127202.636    B/op
BurstHeapMemoryAllocatorBenchmark.shenandoahGC:·gc.count                                                   _4_KB  thrpt   15         3229.000                  counts
BurstHeapMemoryAllocatorBenchmark.shenandoahGC:·gc.time                                                    _4_KB  thrpt   15        19705.000                      ms
BurstHeapMemoryAllocatorBenchmark.shenandoahGC                                                             _4_MB  thrpt   15            2.179 ±         0.032   ops/s
BurstHeapMemoryAllocatorBenchmark.shenandoahGC:·gc.alloc.rate                                              _4_MB  thrpt   15        20406.306 ±       300.847  MB/sec
BurstHeapMemoryAllocatorBenchmark.shenandoahGC:·gc.alloc.rate.norm                                         _4_MB  thrpt   15  10301259923.137 ±         0.893    B/op
BurstHeapMemoryAllocatorBenchmark.shenandoahGC:·gc.churn.CodeHeap_'non-profiled_nmethods'                  _4_MB  thrpt   15           ≈ 10⁻³                  MB/sec
BurstHeapMemoryAllocatorBenchmark.shenandoahGC:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm             _4_MB  thrpt   15          186.958 ±       570.042    B/op
BurstHeapMemoryAllocatorBenchmark.shenandoahGC:·gc.churn.CodeHeap_'profiled_nmethods'                      _4_MB  thrpt   15            0.001 ±         0.001  MB/sec
BurstHeapMemoryAllocatorBenchmark.shenandoahGC:·gc.churn.CodeHeap_'profiled_nmethods'.norm                 _4_MB  thrpt   15          315.244 ±       656.053    B/op
BurstHeapMemoryAllocatorBenchmark.shenandoahGC:·gc.churn.Compressed_Class_Space                            _4_MB  thrpt   15           ≈ 10⁻⁴                  MB/sec
BurstHeapMemoryAllocatorBenchmark.shenandoahGC:·gc.churn.Compressed_Class_Space.norm                       _4_MB  thrpt   15           20.364 ±        45.068    B/op
BurstHeapMemoryAllocatorBenchmark.shenandoahGC:·gc.churn.Metaspace                                         _4_MB  thrpt   15           ≈ 10⁻⁴                  MB/sec
BurstHeapMemoryAllocatorBenchmark.shenandoahGC:·gc.churn.Metaspace.norm                                    _4_MB  thrpt   15          116.436 ±       257.693    B/op
BurstHeapMemoryAllocatorBenchmark.shenandoahGC:·gc.churn.Shenandoah                                        _4_MB  thrpt   15        20184.599 ±       293.065  MB/sec
BurstHeapMemoryAllocatorBenchmark.shenandoahGC:·gc.churn.Shenandoah.norm                                   _4_MB  thrpt   15  10189369252.303 ±   4907940.794    B/op
BurstHeapMemoryAllocatorBenchmark.shenandoahGC:·gc.count                                                   _4_MB  thrpt   15        11650.000                  counts
BurstHeapMemoryAllocatorBenchmark.shenandoahGC:·gc.time                                                    _4_MB  thrpt   15        22650.000                      ms
BurstHeapMemoryAllocatorBenchmark.zGC                                                                      _4_KB  thrpt   15            1.614 ±         0.019   ops/s
BurstHeapMemoryAllocatorBenchmark.zGC:·gc.alloc.rate                                                       _4_KB  thrpt   15        15258.970 ±       184.850  MB/sec
BurstHeapMemoryAllocatorBenchmark.zGC:·gc.alloc.rate.norm                                                  _4_KB  thrpt   15  10388442532.253 ±         2.211    B/op
BurstHeapMemoryAllocatorBenchmark.zGC:·gc.churn.Metaspace                                                  _4_KB  thrpt   15            0.001 ±         0.001  MB/sec
BurstHeapMemoryAllocatorBenchmark.zGC:·gc.churn.Metaspace.norm                                             _4_KB  thrpt   15          495.529 ±        13.539    B/op
BurstHeapMemoryAllocatorBenchmark.zGC:·gc.churn.ZHeap                                                      _4_KB  thrpt   15        13537.633 ±        99.452  MB/sec
BurstHeapMemoryAllocatorBenchmark.zGC:·gc.churn.ZHeap.norm                                                 _4_KB  thrpt   15   9217192755.200 ±  82207306.134    B/op
BurstHeapMemoryAllocatorBenchmark.zGC:·gc.count                                                            _4_KB  thrpt   15         1589.000                  counts
BurstHeapMemoryAllocatorBenchmark.zGC:·gc.time                                                             _4_KB  thrpt   15          476.000                      ms
BurstHeapMemoryAllocatorBenchmark.zGC                                                                      _4_MB  thrpt   15            2.348 ±         0.019   ops/s
BurstHeapMemoryAllocatorBenchmark.zGC:·gc.alloc.rate                                                       _4_MB  thrpt   15        21986.378 ±       165.105  MB/sec
BurstHeapMemoryAllocatorBenchmark.zGC:·gc.alloc.rate.norm                                                  _4_MB  thrpt   15  10301289496.889 ±         1.023    B/op
BurstHeapMemoryAllocatorBenchmark.zGC:·gc.churn.CodeHeap_'non-nmethods'                                    _4_MB  thrpt   15           ≈ 10⁻⁴                  MB/sec
BurstHeapMemoryAllocatorBenchmark.zGC:·gc.churn.CodeHeap_'non-nmethods'.norm                               _4_MB  thrpt   15           40.533 ±       167.826    B/op
BurstHeapMemoryAllocatorBenchmark.zGC:·gc.churn.Metaspace                                                  _4_MB  thrpt   15            0.001 ±         0.001  MB/sec
BurstHeapMemoryAllocatorBenchmark.zGC:·gc.churn.Metaspace.norm                                             _4_MB  thrpt   15          354.400 ±        47.230    B/op
BurstHeapMemoryAllocatorBenchmark.zGC:·gc.churn.ZHeap                                                      _4_MB  thrpt   15        32307.166 ±       251.052  MB/sec
BurstHeapMemoryAllocatorBenchmark.zGC:·gc.churn.ZHeap.norm                                                 _4_MB  thrpt   15  15136881959.822 ±  21383883.422    B/op
BurstHeapMemoryAllocatorBenchmark.zGC:·gc.count                                                            _4_MB  thrpt   15         2731.000                  counts
BurstHeapMemoryAllocatorBenchmark.zGC:·gc.time                                                             _4_MB  thrpt   15          773.000                      ms

Benchmark result is saved to results/report-openjdk-13/hotspotvm_gc/BurstHeapMemoryAllocatorBenchmark.json
Running java  -jar benchmarks/target/benchmarks.jar .*ConstantHeapMemoryOccupancyBenchmark.* -prof gc -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_gc/ConstantHeapMemoryOccupancyBenchmark.json
# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UseConcMarkSweepGC -Xms4g -Xmx4g -XX:+AlwaysPreTouch
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.ConstantHeapMemoryOccupancyBenchmark.concMarkSweepGC

# Run progress: 0.00% complete, ETA 00:30:00
# Fork: 1 of 3
OpenJDK 64-Bit Server VM warning: Option UseConcMarkSweepGC was deprecated in version 9.0 and will likely be removed in a future release.
# Warmup Iteration   1: 10.352 ops/s
# Warmup Iteration   2: 2727.611 ops/s
# Warmup Iteration   3: 2992.546 ops/s
# Warmup Iteration   4: 2959.417 ops/s
# Warmup Iteration   5: 2969.082 ops/s
Iteration   1: 3041.147 ops/s
                 ·gc.alloc.rate:                    23168.543 MB/sec
                 ·gc.alloc.rate.norm:               8388624.014 B/op
                 ·gc.churn.Par_Eden_Space:          23243.271 MB/sec
                 ·gc.churn.Par_Eden_Space.norm:     8415680.878 B/op
                 ·gc.churn.Par_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.Par_Survivor_Space.norm: 0.620 B/op
                 ·gc.count:                         460.000 counts
                 ·gc.time:                          1161.000 ms

Iteration   2: 3059.648 ops/s
                 ·gc.alloc.rate:                    23309.687 MB/sec
                 ·gc.alloc.rate.norm:               8388624.013 B/op
                 ·gc.churn.Par_Eden_Space:          23445.579 MB/sec
                 ·gc.churn.Par_Eden_Space.norm:     8437528.646 B/op
                 ·gc.churn.Par_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.Par_Survivor_Space.norm: 0.675 B/op
                 ·gc.count:                         464.000 counts
                 ·gc.time:                          1173.000 ms

Iteration   3: 2956.824 ops/s
                 ·gc.alloc.rate:                    22525.194 MB/sec
                 ·gc.alloc.rate.norm:               8388624.014 B/op
                 ·gc.churn.Par_Eden_Space:          22634.969 MB/sec
                 ·gc.churn.Par_Eden_Space.norm:     8429505.174 B/op
                 ·gc.churn.Par_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.Par_Survivor_Space.norm: 0.959 B/op
                 ·gc.count:                         448.000 counts
                 ·gc.time:                          1128.000 ms

Iteration   4: 3037.090 ops/s
                 ·gc.alloc.rate:                    23137.757 MB/sec
                 ·gc.alloc.rate.norm:               8388624.013 B/op
                 ·gc.churn.Par_Eden_Space:          23243.679 MB/sec
                 ·gc.churn.Par_Eden_Space.norm:     8427026.267 B/op
                 ·gc.churn.Par_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.Par_Survivor_Space.norm: 0.639 B/op
                 ·gc.count:                         460.000 counts
                 ·gc.time:                          1148.000 ms

Iteration   5: 3050.788 ops/s
                 ·gc.alloc.rate:                    23241.106 MB/sec
                 ·gc.alloc.rate.norm:               8388624.013 B/op
                 ·gc.churn.Par_Eden_Space:          23343.710 MB/sec
                 ·gc.churn.Par_Eden_Space.norm:     8425657.581 B/op
                 ·gc.churn.Par_Survivor_Space:      0.014 MB/sec
                 ·gc.churn.Par_Survivor_Space.norm: 5.151 B/op
                 ·gc.count:                         462.000 counts
                 ·gc.time:                          1156.000 ms


# Run progress: 5.56% complete, ETA 00:31:46
# Fork: 2 of 3
OpenJDK 64-Bit Server VM warning: Option UseConcMarkSweepGC was deprecated in version 9.0 and will likely be removed in a future release.
# Warmup Iteration   1: 9.628 ops/s
# Warmup Iteration   2: 2687.232 ops/s
# Warmup Iteration   3: 2875.735 ops/s
# Warmup Iteration   4: 2970.828 ops/s
# Warmup Iteration   5: 3022.120 ops/s
Iteration   1: 3044.175 ops/s
                 ·gc.alloc.rate:                    23190.516 MB/sec
                 ·gc.alloc.rate.norm:               8388624.013 B/op
                 ·gc.churn.Par_Eden_Space:          23292.916 MB/sec
                 ·gc.churn.Par_Eden_Space.norm:     8425664.544 B/op
                 ·gc.churn.Par_Survivor_Space:      0.014 MB/sec
                 ·gc.churn.Par_Survivor_Space.norm: 5.008 B/op
                 ·gc.count:                         461.000 counts
                 ·gc.time:                          1167.000 ms

Iteration   2: 2988.458 ops/s
                 ·gc.alloc.rate:                    22765.048 MB/sec
                 ·gc.alloc.rate.norm:               8388624.014 B/op
                 ·gc.churn.Par_Eden_Space:          22887.512 MB/sec
                 ·gc.churn.Par_Eden_Space.norm:     8433750.367 B/op
                 ·gc.churn.Par_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.Par_Survivor_Space.norm: 0.709 B/op
                 ·gc.count:                         453.000 counts
                 ·gc.time:                          1148.000 ms

Iteration   3: 3104.246 ops/s
                 ·gc.alloc.rate:                    23647.103 MB/sec
                 ·gc.alloc.rate.norm:               8388624.013 B/op
                 ·gc.churn.Par_Eden_Space:          23746.382 MB/sec
                 ·gc.churn.Par_Eden_Space.norm:     8423842.532 B/op
                 ·gc.churn.Par_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.Par_Survivor_Space.norm: 0.790 B/op
                 ·gc.count:                         470.000 counts
                 ·gc.time:                          1185.000 ms

Iteration   4: 2977.828 ops/s
                 ·gc.alloc.rate:                    22684.642 MB/sec
                 ·gc.alloc.rate.norm:               8388624.015 B/op
                 ·gc.churn.Par_Eden_Space:          22786.780 MB/sec
                 ·gc.churn.Par_Eden_Space.norm:     8426393.994 B/op
                 ·gc.churn.Par_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.Par_Survivor_Space.norm: 0.564 B/op
                 ·gc.count:                         451.000 counts
                 ·gc.time:                          1144.000 ms

Iteration   5: 3063.428 ops/s
                 ·gc.alloc.rate:                    23338.111 MB/sec
                 ·gc.alloc.rate.norm:               8388624.013 B/op
                 ·gc.churn.Par_Eden_Space:          23445.025 MB/sec
                 ·gc.churn.Par_Eden_Space.norm:     8427052.928 B/op
                 ·gc.churn.Par_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.Par_Survivor_Space.norm: 0.934 B/op
                 ·gc.count:                         464.000 counts
                 ·gc.time:                          1174.000 ms


# Run progress: 11.11% complete, ETA 00:30:01
# Fork: 3 of 3
OpenJDK 64-Bit Server VM warning: Option UseConcMarkSweepGC was deprecated in version 9.0 and will likely be removed in a future release.
# Warmup Iteration   1: 10.189 ops/s
# Warmup Iteration   2: 2717.185 ops/s
# Warmup Iteration   3: 2901.839 ops/s
# Warmup Iteration   4: 2878.420 ops/s
# Warmup Iteration   5: 2972.010 ops/s
Iteration   1: 2987.981 ops/s
                 ·gc.alloc.rate:                    22762.399 MB/sec
                 ·gc.alloc.rate.norm:               8388624.014 B/op
                 ·gc.churn.Par_Eden_Space:          22888.697 MB/sec
                 ·gc.churn.Par_Eden_Space.norm:     8435168.844 B/op
                 ·gc.churn.Par_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.Par_Survivor_Space.norm: 0.553 B/op
                 ·gc.count:                         453.000 counts
                 ·gc.time:                          1136.000 ms

Iteration   2: 2986.514 ops/s
                 ·gc.alloc.rate:                    22752.299 MB/sec
                 ·gc.alloc.rate.norm:               8388624.014 B/op
                 ·gc.churn.Par_Eden_Space:          22890.012 MB/sec
                 ·gc.churn.Par_Eden_Space.norm:     8439397.995 B/op
                 ·gc.churn.Par_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.Par_Survivor_Space.norm: 0.710 B/op
                 ·gc.count:                         453.000 counts
                 ·gc.time:                          1129.000 ms

Iteration   3: 3097.770 ops/s
                 ·gc.alloc.rate:                    23599.132 MB/sec
                 ·gc.alloc.rate.norm:               8388624.013 B/op
                 ·gc.churn.Par_Eden_Space:          23697.406 MB/sec
                 ·gc.churn.Par_Eden_Space.norm:     8423556.744 B/op
                 ·gc.churn.Par_Survivor_Space:      0.014 MB/sec
                 ·gc.churn.Par_Survivor_Space.norm: 5.047 B/op
                 ·gc.count:                         469.000 counts
                 ·gc.time:                          1171.000 ms

Iteration   4: 3009.093 ops/s
                 ·gc.alloc.rate:                    22924.470 MB/sec
                 ·gc.alloc.rate.norm:               8388624.014 B/op
                 ·gc.churn.Par_Eden_Space:          23041.581 MB/sec
                 ·gc.churn.Par_Eden_Space.norm:     8431477.770 B/op
                 ·gc.churn.Par_Survivor_Space:      0.013 MB/sec
                 ·gc.churn.Par_Survivor_Space.norm: 4.870 B/op
                 ·gc.count:                         456.000 counts
                 ·gc.time:                          1146.000 ms

Iteration   5: 3010.336 ops/s
                 ·gc.alloc.rate:                    22931.584 MB/sec
                 ·gc.alloc.rate.norm:               8388624.016 B/op
                 ·gc.churn.Par_Eden_Space:          23038.773 MB/sec
                 ·gc.churn.Par_Eden_Space.norm:     8427834.846 B/op
                 ·gc.churn.Par_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.Par_Survivor_Space.norm: 1.097 B/op
                 ·gc.count:                         456.000 counts
                 ·gc.time:                          1136.000 ms



Result "com.ionutbalosin.jvm.jit.benchmark.gc.ConstantHeapMemoryOccupancyBenchmark.concMarkSweepGC":
  3027.688 ±(99.9%) 47.046 ops/s [Average]
  (min, avg, max) = (2956.824, 3027.688, 3104.246), stdev = 44.006
  CI (99.9%): [2980.643, 3074.734] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ConstantHeapMemoryOccupancyBenchmark.concMarkSweepGC:·gc.alloc.rate":
  23065.173 ±(99.9%) 358.496 MB/sec [Average]
  (min, avg, max) = (22525.194, 23065.173, 23647.103), stdev = 335.337
  CI (99.9%): [22706.677, 23423.669] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ConstantHeapMemoryOccupancyBenchmark.concMarkSweepGC:·gc.alloc.rate.norm":
  8388624.014 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (8388624.013, 8388624.014, 8388624.016), stdev = 0.001
  CI (99.9%): [8388624.013, 8388624.015] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ConstantHeapMemoryOccupancyBenchmark.concMarkSweepGC:·gc.churn.Par_Eden_Space":
  23175.086 ±(99.9%) 352.466 MB/sec [Average]
  (min, avg, max) = (22634.969, 23175.086, 23746.382), stdev = 329.697
  CI (99.9%): [22822.620, 23527.552] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ConstantHeapMemoryOccupancyBenchmark.concMarkSweepGC:·gc.churn.Par_Eden_Space.norm":
  8428635.941 ±(99.9%) 6500.603 B/op [Average]
  (min, avg, max) = (8415680.878, 8428635.941, 8439397.995), stdev = 6080.668
  CI (99.9%): [8422135.338, 8435136.543] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ConstantHeapMemoryOccupancyBenchmark.concMarkSweepGC:·gc.churn.Par_Survivor_Space":
  0.005 ±(99.9%) 0.006 MB/sec [Average]
  (min, avg, max) = (0.001, 0.005, 0.014), stdev = 0.005
  CI (99.9%): [≈ 0, 0.011] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ConstantHeapMemoryOccupancyBenchmark.concMarkSweepGC:·gc.churn.Par_Survivor_Space.norm":
  1.888 ±(99.9%) 2.096 B/op [Average]
  (min, avg, max) = (0.553, 1.888, 5.151), stdev = 1.960
  CI (99.9%): [≈ 0, 3.984] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ConstantHeapMemoryOccupancyBenchmark.concMarkSweepGC:·gc.count":
  6880.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (448.000, 458.667, 470.000), stdev = 6.521
  CI (99.9%): [6880.000, 6880.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ConstantHeapMemoryOccupancyBenchmark.concMarkSweepGC:·gc.time":
  17302.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (1128.000, 1153.467, 1185.000), stdev = 17.756
  CI (99.9%): [17302.000, 17302.000] (assumes normal distribution)


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UseG1GC -Xms4g -Xmx4g -XX:+AlwaysPreTouch
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.ConstantHeapMemoryOccupancyBenchmark.g1GC

# Run progress: 16.67% complete, ETA 00:28:07
# Fork: 1 of 3
# Warmup Iteration   1: 2182.897 ops/s
# Warmup Iteration   2: 2135.915 ops/s
# Warmup Iteration   3: 2167.859 ops/s
# Warmup Iteration   4: 2173.175 ops/s
# Warmup Iteration   5: 2146.613 ops/s
Iteration   1: 2161.319 ops/s
                 ·gc.alloc.rate:                   16466.352 MB/sec
                 ·gc.alloc.rate.norm:              8388624.020 B/op
                 ·gc.churn.G1_Old_Gen:             20536.242 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:        10461990.368 B/op
                 ·gc.churn.G1_Survivor_Space:      0.007 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 3.641 B/op
                 ·gc.count:                        193.000 counts
                 ·gc.time:                         250.000 ms

Iteration   2: 2142.137 ops/s
                 ·gc.alloc.rate:                   16320.024 MB/sec
                 ·gc.alloc.rate.norm:              8388624.021 B/op
                 ·gc.churn.G1_Old_Gen:             20342.848 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:        10456388.499 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 2.615 B/op
                 ·gc.count:                        190.000 counts
                 ·gc.time:                         250.000 ms

Iteration   3: 2113.714 ops/s
                 ·gc.alloc.rate:                   16103.559 MB/sec
                 ·gc.alloc.rate.norm:              8388624.019 B/op
                 ·gc.churn.G1_Old_Gen:             20144.643 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:        10493694.886 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 2.833 B/op
                 ·gc.count:                        188.000 counts
                 ·gc.time:                         244.000 ms

Iteration   4: 2138.727 ops/s
                 ·gc.alloc.rate:                   16294.175 MB/sec
                 ·gc.alloc.rate.norm:              8388624.021 B/op
                 ·gc.churn.G1_Old_Gen:             20453.382 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:        10529881.555 B/op
                 ·gc.churn.G1_Survivor_Space:      0.007 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 3.378 B/op
                 ·gc.count:                        191.000 counts
                 ·gc.time:                         248.000 ms

Iteration   5: 2185.446 ops/s
                 ·gc.alloc.rate:                   16649.978 MB/sec
                 ·gc.alloc.rate.norm:              8388624.019 B/op
                 ·gc.churn.G1_Old_Gen:             20748.624 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:        10453612.280 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 2.159 B/op
                 ·gc.count:                        194.000 counts
                 ·gc.time:                         251.000 ms


# Run progress: 22.22% complete, ETA 00:26:06
# Fork: 2 of 3
# Warmup Iteration   1: 2047.783 ops/s
# Warmup Iteration   2: 2140.370 ops/s
# Warmup Iteration   3: 2161.082 ops/s
# Warmup Iteration   4: 2164.479 ops/s
# Warmup Iteration   5: 2143.920 ops/s
Iteration   1: 2160.515 ops/s
                 ·gc.alloc.rate:                   16460.212 MB/sec
                 ·gc.alloc.rate.norm:              8388624.020 B/op
                 ·gc.churn.G1_Old_Gen:             20569.508 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:        10482846.202 B/op
                 ·gc.churn.G1_Survivor_Space:      0.008 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 4.012 B/op
                 ·gc.count:                        194.000 counts
                 ·gc.time:                         256.000 ms

Iteration   2: 2145.007 ops/s
                 ·gc.alloc.rate:                   16342.052 MB/sec
                 ·gc.alloc.rate.norm:              8388624.019 B/op
                 ·gc.churn.G1_Old_Gen:             20500.848 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:        10523397.144 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 2.309 B/op
                 ·gc.count:                        193.000 counts
                 ·gc.time:                         255.000 ms

Iteration   3: 2157.310 ops/s
                 ·gc.alloc.rate:                   16435.762 MB/sec
                 ·gc.alloc.rate.norm:              8388624.019 B/op
                 ·gc.churn.G1_Old_Gen:             20502.757 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:        10464371.529 B/op
                 ·gc.churn.G1_Survivor_Space:      0.007 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 3.433 B/op
                 ·gc.count:                        193.000 counts
                 ·gc.time:                         252.000 ms

Iteration   4: 2194.396 ops/s
                 ·gc.alloc.rate:                   16718.345 MB/sec
                 ·gc.alloc.rate.norm:              8388624.020 B/op
                 ·gc.churn.G1_Old_Gen:             20914.076 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:        10493880.490 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 2.633 B/op
                 ·gc.count:                        197.000 counts
                 ·gc.time:                         258.000 ms

Iteration   5: 2132.628 ops/s
                 ·gc.alloc.rate:                   16247.518 MB/sec
                 ·gc.alloc.rate.norm:              8388624.019 B/op
                 ·gc.churn.G1_Old_Gen:             20336.971 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:        10500015.840 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 2.529 B/op
                 ·gc.count:                        192.000 counts
                 ·gc.time:                         250.000 ms


# Run progress: 27.78% complete, ETA 00:24:18
# Fork: 3 of 3
# Warmup Iteration   1: 2103.829 ops/s
# Warmup Iteration   2: 2147.413 ops/s
# Warmup Iteration   3: 2103.102 ops/s
# Warmup Iteration   4: 2136.013 ops/s
# Warmup Iteration   5: 2148.812 ops/s
Iteration   1: 2127.960 ops/s
                 ·gc.alloc.rate:                   16212.042 MB/sec
                 ·gc.alloc.rate.norm:              8388624.019 B/op
                 ·gc.churn.G1_Old_Gen:             20296.436 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:        10502018.671 B/op
                 ·gc.churn.G1_Survivor_Space:      0.006 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 3.020 B/op
                 ·gc.count:                        191.000 counts
                 ·gc.time:                         251.000 ms

Iteration   2: 2146.781 ops/s
                 ·gc.alloc.rate:                   16355.604 MB/sec
                 ·gc.alloc.rate.norm:              8388624.019 B/op
                 ·gc.churn.G1_Old_Gen:             20449.222 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:        10488199.470 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 2.019 B/op
                 ·gc.count:                        192.000 counts
                 ·gc.time:                         251.000 ms

Iteration   3: 2174.273 ops/s
                 ·gc.alloc.rate:                   16564.720 MB/sec
                 ·gc.alloc.rate.norm:              8388624.019 B/op
                 ·gc.churn.G1_Old_Gen:             20755.373 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:        10510833.990 B/op
                 ·gc.churn.G1_Survivor_Space:      0.008 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 4.057 B/op
                 ·gc.count:                        195.000 counts
                 ·gc.time:                         256.000 ms

Iteration   4: 2102.694 ops/s
                 ·gc.alloc.rate:                   16019.500 MB/sec
                 ·gc.alloc.rate.norm:              8388624.019 B/op
                 ·gc.churn.G1_Old_Gen:             20032.903 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:        10490245.795 B/op
                 ·gc.churn.G1_Survivor_Space:      0.006 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 3.056 B/op
                 ·gc.count:                        189.000 counts
                 ·gc.time:                         249.000 ms

Iteration   5: 2132.944 ops/s
                 ·gc.alloc.rate:                   16249.863 MB/sec
                 ·gc.alloc.rate.norm:              8388624.019 B/op
                 ·gc.churn.G1_Old_Gen:             20278.003 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:        10468060.498 B/op
                 ·gc.churn.G1_Survivor_Space:      0.006 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 2.916 B/op
                 ·gc.count:                        191.000 counts
                 ·gc.time:                         250.000 ms



Result "com.ionutbalosin.jvm.jit.benchmark.gc.ConstantHeapMemoryOccupancyBenchmark.g1GC":
  2147.723 ±(99.9%) 26.937 ops/s [Average]
  (min, avg, max) = (2102.694, 2147.723, 2194.396), stdev = 25.197
  CI (99.9%): [2120.787, 2174.660] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ConstantHeapMemoryOccupancyBenchmark.g1GC:·gc.alloc.rate":
  16362.647 ±(99.9%) 205.250 MB/sec [Average]
  (min, avg, max) = (16019.500, 16362.647, 16718.345), stdev = 191.991
  CI (99.9%): [16157.397, 16567.897] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ConstantHeapMemoryOccupancyBenchmark.g1GC:·gc.alloc.rate.norm":
  8388624.019 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (8388624.019, 8388624.019, 8388624.021), stdev = 0.001
  CI (99.9%): [8388624.019, 8388624.020] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ConstantHeapMemoryOccupancyBenchmark.g1GC:·gc.churn.G1_Old_Gen":
  20457.456 ±(99.9%) 250.505 MB/sec [Average]
  (min, avg, max) = (20032.903, 20457.456, 20914.076), stdev = 234.322
  CI (99.9%): [20206.951, 20707.961] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ConstantHeapMemoryOccupancyBenchmark.g1GC:·gc.churn.G1_Old_Gen.norm":
  10487962.481 ±(99.9%) 25205.074 B/op [Average]
  (min, avg, max) = (10453612.280, 10487962.481, 10529881.555), stdev = 23576.842
  CI (99.9%): [10462757.407, 10513167.555] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ConstantHeapMemoryOccupancyBenchmark.g1GC:·gc.churn.G1_Survivor_Space":
  0.006 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.004, 0.006, 0.008), stdev = 0.001
  CI (99.9%): [0.004, 0.007] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ConstantHeapMemoryOccupancyBenchmark.g1GC:·gc.churn.G1_Survivor_Space.norm":
  2.974 ±(99.9%) 0.674 B/op [Average]
  (min, avg, max) = (2.019, 2.974, 4.057), stdev = 0.630
  CI (99.9%): [2.300, 3.648] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ConstantHeapMemoryOccupancyBenchmark.g1GC:·gc.count":
  2883.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (188.000, 192.200, 197.000), stdev = 2.336
  CI (99.9%): [2883.000, 2883.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ConstantHeapMemoryOccupancyBenchmark.g1GC:·gc.time":
  3771.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (244.000, 251.400, 258.000), stdev = 3.582
  CI (99.9%): [3771.000, 3771.000] (assumes normal distribution)


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UseParallelOldGC -Xms4g -Xmx4g -XX:+AlwaysPreTouch
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.ConstantHeapMemoryOccupancyBenchmark.parallelOldGC

# Run progress: 33.33% complete, ETA 00:22:29
# Fork: 1 of 3
# Warmup Iteration   1: 34.884 ops/s
# Warmup Iteration   2: 41.434 ops/s
# Warmup Iteration   3: 43.455 ops/s
# Warmup Iteration   4: 42.229 ops/s
# Warmup Iteration   5: 48.267 ops/s
Iteration   1: 46.819 ops/s
                 ·gc.alloc.rate:               357.491 MB/sec
                 ·gc.alloc.rate.norm:          8388624.829 B/op
                 ·gc.churn.PS_Eden_Space:      358.962 MB/sec
                 ·gc.churn.PS_Eden_Space.norm: 8423133.707 B/op
                 ·gc.count:                    4.000 counts
                 ·gc.time:                     10349.000 ms

Iteration   2: 45.239 ops/s
                 ·gc.alloc.rate:               345.951 MB/sec
                 ·gc.alloc.rate.norm:          8388624.829 B/op
                 ·gc.churn.PS_Eden_Space:      347.509 MB/sec
                 ·gc.churn.PS_Eden_Space.norm: 8426393.707 B/op
                 ·gc.count:                    4.000 counts
                 ·gc.time:                     10706.000 ms

Iteration   3: 43.341 ops/s
                 ·gc.alloc.rate:               332.056 MB/sec
                 ·gc.alloc.rate.norm:          8388624.829 B/op
                 ·gc.churn.PS_Eden_Space:      333.434 MB/sec
                 ·gc.churn.PS_Eden_Space.norm: 8423417.659 B/op
                 ·gc.churn.PS_Old_Gen:         ≈ 10⁻⁶ MB/sec
                 ·gc.churn.PS_Old_Gen.norm:    0.049 B/op
                 ·gc.count:                    4.000 counts
                 ·gc.time:                     11175.000 ms

Iteration   4: 47.498 ops/s
                 ·gc.alloc.rate:               362.434 MB/sec
                 ·gc.alloc.rate.norm:          8388624.894 B/op
                 ·gc.churn.PS_Eden_Space:      363.866 MB/sec
                 ·gc.churn.PS_Eden_Space.norm: 8421765.659 B/op
                 ·gc.count:                    4.000 counts
                 ·gc.time:                     10201.000 ms

Iteration   5: 49.667 ops/s
                 ·gc.alloc.rate:               381.842 MB/sec
                 ·gc.alloc.rate.norm:          8388624.663 B/op
                 ·gc.churn.PS_Eden_Space:      383.333 MB/sec
                 ·gc.churn.PS_Eden_Space.norm: 8421371.031 B/op
                 ·gc.count:                    5.000 counts
                 ·gc.time:                     12189.000 ms


# Run progress: 38.89% complete, ETA 00:20:58
# Fork: 2 of 3
# Warmup Iteration   1: 35.586 ops/s
# Warmup Iteration   2: 43.382 ops/s
# Warmup Iteration   3: 45.521 ops/s
# Warmup Iteration   4: 44.323 ops/s
# Warmup Iteration   5: 47.050 ops/s
Iteration   1: 47.563 ops/s
                 ·gc.alloc.rate:               362.905 MB/sec
                 ·gc.alloc.rate.norm:          8388624.829 B/op
                 ·gc.churn.PS_Eden_Space:      364.398 MB/sec
                 ·gc.churn.PS_Eden_Space.norm: 8423133.220 B/op
                 ·gc.count:                    4.000 counts
                 ·gc.time:                     10173.000 ms

Iteration   2: 45.947 ops/s
                 ·gc.alloc.rate:               351.075 MB/sec
                 ·gc.alloc.rate.norm:          8388624.896 B/op
                 ·gc.churn.PS_Eden_Space:      352.752 MB/sec
                 ·gc.churn.PS_Eden_Space.norm: 8428692.790 B/op
                 ·gc.count:                    4.000 counts
                 ·gc.time:                     10500.000 ms

Iteration   3: 41.165 ops/s
                 ·gc.alloc.rate:               316.046 MB/sec
                 ·gc.alloc.rate.norm:          8388624.829 B/op
                 ·gc.churn.PS_Eden_Space:      317.392 MB/sec
                 ·gc.churn.PS_Eden_Space.norm: 8424347.545 B/op
                 ·gc.churn.PS_Old_Gen:         ≈ 10⁻⁶ MB/sec
                 ·gc.churn.PS_Old_Gen.norm:    0.049 B/op
                 ·gc.count:                    4.000 counts
                 ·gc.time:                     11792.000 ms

Iteration   4: 45.709 ops/s
                 ·gc.alloc.rate:               349.398 MB/sec
                 ·gc.alloc.rate.norm:          8388624.829 B/op
                 ·gc.churn.PS_Eden_Space:      350.788 MB/sec
                 ·gc.churn.PS_Eden_Space.norm: 8421995.350 B/op
                 ·gc.count:                    4.000 counts
                 ·gc.time:                     10606.000 ms

Iteration   5: 48.796 ops/s
                 ·gc.alloc.rate:               371.861 MB/sec
                 ·gc.alloc.rate.norm:          8388624.829 B/op
                 ·gc.churn.PS_Eden_Space:      373.319 MB/sec
                 ·gc.churn.PS_Eden_Space.norm: 8421536.618 B/op
                 ·gc.count:                    4.000 counts
                 ·gc.time:                     9919.000 ms


# Run progress: 44.44% complete, ETA 00:19:15
# Fork: 3 of 3
# Warmup Iteration   1: 34.270 ops/s
# Warmup Iteration   2: 42.474 ops/s
# Warmup Iteration   3: 42.395 ops/s
# Warmup Iteration   4: 41.914 ops/s
# Warmup Iteration   5: 46.708 ops/s
Iteration   1: 47.601 ops/s
                 ·gc.alloc.rate:               363.181 MB/sec
                 ·gc.alloc.rate.norm:          8388624.829 B/op
                 ·gc.churn.PS_Eden_Space:      364.675 MB/sec
                 ·gc.churn.PS_Eden_Space.norm: 8423133.285 B/op
                 ·gc.count:                    4.000 counts
                 ·gc.time:                     10167.000 ms

Iteration   2: 48.090 ops/s
                 ·gc.alloc.rate:               366.701 MB/sec
                 ·gc.alloc.rate.norm:          8388624.896 B/op
                 ·gc.churn.PS_Eden_Space:      368.452 MB/sec
                 ·gc.churn.PS_Eden_Space.norm: 8428692.790 B/op
                 ·gc.count:                    4.000 counts
                 ·gc.time:                     10021.000 ms

Iteration   3: 43.430 ops/s
                 ·gc.alloc.rate:               332.700 MB/sec
                 ·gc.alloc.rate.norm:          8388624.829 B/op
                 ·gc.churn.PS_Eden_Space:      334.117 MB/sec
                 ·gc.churn.PS_Eden_Space.norm: 8424347.772 B/op
                 ·gc.churn.PS_Old_Gen:         ≈ 10⁻⁶ MB/sec
                 ·gc.churn.PS_Old_Gen.norm:    0.049 B/op
                 ·gc.count:                    4.000 counts
                 ·gc.time:                     11161.000 ms

Iteration   4: 45.813 ops/s
                 ·gc.alloc.rate:               350.135 MB/sec
                 ·gc.alloc.rate.norm:          8388624.829 B/op
                 ·gc.churn.PS_Eden_Space:      351.528 MB/sec
                 ·gc.churn.PS_Eden_Space.norm: 8421995.350 B/op
                 ·gc.count:                    4.000 counts
                 ·gc.time:                     10584.000 ms

Iteration   5: 44.596 ops/s
                 ·gc.alloc.rate:               341.223 MB/sec
                 ·gc.alloc.rate.norm:          8388624.829 B/op
                 ·gc.churn.PS_Eden_Space:      342.573 MB/sec
                 ·gc.churn.PS_Eden_Space.norm: 8421827.122 B/op
                 ·gc.count:                    4.000 counts
                 ·gc.time:                     10858.000 ms



Result "com.ionutbalosin.jvm.jit.benchmark.gc.ConstantHeapMemoryOccupancyBenchmark.parallelOldGC":
  46.085 ±(99.9%) 2.444 ops/s [Average]
  (min, avg, max) = (41.165, 46.085, 49.667), stdev = 2.286
  CI (99.9%): [43.641, 48.529] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ConstantHeapMemoryOccupancyBenchmark.parallelOldGC:·gc.alloc.rate":
  352.333 ±(99.9%) 18.315 MB/sec [Average]
  (min, avg, max) = (316.046, 352.333, 381.842), stdev = 17.132
  CI (99.9%): [334.018, 370.649] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ConstantHeapMemoryOccupancyBenchmark.parallelOldGC:·gc.alloc.rate.norm":
  8388624.831 ±(99.9%) 0.058 B/op [Average]
  (min, avg, max) = (8388624.663, 8388624.831, 8388624.896), stdev = 0.054
  CI (99.9%): [8388624.774, 8388624.889] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ConstantHeapMemoryOccupancyBenchmark.parallelOldGC:·gc.churn.PS_Eden_Space":
  353.806 ±(99.9%) 18.373 MB/sec [Average]
  (min, avg, max) = (317.392, 353.806, 383.333), stdev = 17.186
  CI (99.9%): [335.433, 372.180] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ConstantHeapMemoryOccupancyBenchmark.parallelOldGC:·gc.churn.PS_Eden_Space.norm":
  8423718.907 ±(99.9%) 2589.714 B/op [Average]
  (min, avg, max) = (8421371.031, 8423718.907, 8428692.790), stdev = 2422.420
  CI (99.9%): [8421129.193, 8426308.621] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ConstantHeapMemoryOccupancyBenchmark.parallelOldGC:·gc.churn.PS_Old_Gen":
  ≈ 10⁻⁶ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ConstantHeapMemoryOccupancyBenchmark.parallelOldGC:·gc.churn.PS_Old_Gen.norm":
  0.010 ±(99.9%) 0.022 B/op [Average]
  (min, avg, max) = (≈ 0, 0.010, 0.049), stdev = 0.020
  CI (99.9%): [≈ 0, 0.031] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ConstantHeapMemoryOccupancyBenchmark.parallelOldGC:·gc.count":
  61.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (4.000, 4.067, 5.000), stdev = 0.258
  CI (99.9%): [61.000, 61.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ConstantHeapMemoryOccupancyBenchmark.parallelOldGC:·gc.time":
  160401.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (9919.000, 10693.400, 12189.000), stdev = 651.339
  CI (99.9%): [160401.000, 160401.000] (assumes normal distribution)


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UseSerialGC -Xms4g -Xmx4g -XX:+AlwaysPreTouch
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.ConstantHeapMemoryOccupancyBenchmark.serialGC

# Run progress: 50.00% complete, ETA 00:17:29
# Fork: 1 of 3
# Warmup Iteration   1: 26.641 ops/s
# Warmup Iteration   2: 32.557 ops/s
# Warmup Iteration   3: 32.982 ops/s
# Warmup Iteration   4: 35.866 ops/s
# Warmup Iteration   5: 36.184 ops/s
Iteration   1: 36.064 ops/s
                 ·gc.alloc.rate:                276.996 MB/sec
                 ·gc.alloc.rate.norm:           8388624.938 B/op
                 ·gc.churn.Eden_Space:          246.025 MB/sec
                 ·gc.churn.Eden_Space.norm:     7450699.347 B/op
                 ·gc.churn.Survivor_Space:      32.475 MB/sec
                 ·gc.churn.Survivor_Space.norm: 983493.848 B/op
                 ·gc.count:                     3.000 counts
                 ·gc.time:                      11923.000 ms

Iteration   2: 36.414 ops/s
                 ·gc.alloc.rate:                279.569 MB/sec
                 ·gc.alloc.rate.norm:           8388624.938 B/op
                 ·gc.churn.Eden_Space:          248.431 MB/sec
                 ·gc.churn.Eden_Space.norm:     7454318.198 B/op
                 ·gc.churn.Survivor_Space:      32.777 MB/sec
                 ·gc.churn.Survivor_Space.norm: 983493.848 B/op
                 ·gc.count:                     3.000 counts
                 ·gc.time:                      11814.000 ms

Iteration   3: 34.956 ops/s
                 ·gc.alloc.rate:                268.821 MB/sec
                 ·gc.alloc.rate.norm:           8388624.938 B/op
                 ·gc.churn.Eden_Space:          238.869 MB/sec
                 ·gc.churn.Eden_Space.norm:     7453963.752 B/op
                 ·gc.churn.Survivor_Space:      31.517 MB/sec
                 ·gc.churn.Survivor_Space.norm: 983493.848 B/op
                 ·gc.count:                     3.000 counts
                 ·gc.time:                      12313.000 ms

Iteration   4: 36.424 ops/s
                 ·gc.alloc.rate:                279.663 MB/sec
                 ·gc.alloc.rate.norm:           8388625.011 B/op
                 ·gc.churn.Eden_Space:          248.320 MB/sec
                 ·gc.churn.Eden_Space.norm:     7448480.644 B/op
                 ·gc.churn.Survivor_Space:      32.788 MB/sec
                 ·gc.churn.Survivor_Space.norm: 983493.848 B/op
                 ·gc.count:                     3.000 counts
                 ·gc.time:                      11808.000 ms

Iteration   5: 36.561 ops/s
                 ·gc.alloc.rate:                280.659 MB/sec
                 ·gc.alloc.rate.norm:           8388624.938 B/op
                 ·gc.churn.Eden_Space:          249.238 MB/sec
                 ·gc.churn.Eden_Space.norm:     7449481.618 B/op
                 ·gc.churn.Survivor_Space:      32.905 MB/sec
                 ·gc.churn.Survivor_Space.norm: 983493.848 B/op
                 ·gc.count:                     3.000 counts
                 ·gc.time:                      11767.000 ms


# Run progress: 55.56% complete, ETA 00:15:48
# Fork: 2 of 3
# Warmup Iteration   1: 30.515 ops/s
# Warmup Iteration   2: 36.817 ops/s
# Warmup Iteration   3: 36.637 ops/s
# Warmup Iteration   4: 39.852 ops/s
# Warmup Iteration   5: 39.889 ops/s
Iteration   1: 39.622 ops/s
                 ·gc.alloc.rate:                303.136 MB/sec
                 ·gc.alloc.rate.norm:           8388624.938 B/op
                 ·gc.churn.Eden_Space:          269.242 MB/sec
                 ·gc.churn.Eden_Space.norm:     7450698.832 B/op
                 ·gc.churn.Survivor_Space:      35.540 MB/sec
                 ·gc.churn.Survivor_Space.norm: 983493.848 B/op
                 ·gc.count:                     3.000 counts
                 ·gc.time:                      10840.000 ms

Iteration   2: 40.004 ops/s
                 ·gc.alloc.rate:                305.934 MB/sec
                 ·gc.alloc.rate.norm:           8388624.938 B/op
                 ·gc.churn.Eden_Space:          271.761 MB/sec
                 ·gc.churn.Eden_Space.norm:     7451603.697 B/op
                 ·gc.churn.Survivor_Space:      35.868 MB/sec
                 ·gc.churn.Survivor_Space.norm: 983493.848 B/op
                 ·gc.count:                     3.000 counts
                 ·gc.time:                      10742.000 ms

Iteration   3: 38.252 ops/s
                 ·gc.alloc.rate:                293.100 MB/sec
                 ·gc.alloc.rate.norm:           8388624.938 B/op
                 ·gc.churn.Eden_Space:          260.311 MB/sec
                 ·gc.churn.Eden_Space.norm:     7450213.701 B/op
                 ·gc.churn.Survivor_Space:      34.363 MB/sec
                 ·gc.churn.Survivor_Space.norm: 983493.848 B/op
                 ·gc.count:                     3.000 counts
                 ·gc.time:                      11245.000 ms

Iteration   4: 40.002 ops/s
                 ·gc.alloc.rate:                305.904 MB/sec
                 ·gc.alloc.rate.norm:           8388624.938 B/op
                 ·gc.churn.Eden_Space:          271.620 MB/sec
                 ·gc.churn.Eden_Space.norm:     7448480.699 B/op
                 ·gc.churn.Survivor_Space:      35.865 MB/sec
                 ·gc.churn.Survivor_Space.norm: 983493.848 B/op
                 ·gc.count:                     3.000 counts
                 ·gc.time:                      10741.000 ms

Iteration   5: 36.682 ops/s
                 ·gc.alloc.rate:                281.542 MB/sec
                 ·gc.alloc.rate.norm:           8388625.011 B/op
                 ·gc.churn.Eden_Space:          250.007 MB/sec
                 ·gc.churn.Eden_Space.norm:     7449030.860 B/op
                 ·gc.churn.Survivor_Space:      33.008 MB/sec
                 ·gc.churn.Survivor_Space.norm: 983493.848 B/op
                 ·gc.count:                     3.000 counts
                 ·gc.time:                      11714.000 ms


# Run progress: 61.11% complete, ETA 00:13:54
# Fork: 3 of 3
# Warmup Iteration   1: 28.128 ops/s
# Warmup Iteration   2: 34.151 ops/s
# Warmup Iteration   3: 34.220 ops/s
# Warmup Iteration   4: 37.411 ops/s
# Warmup Iteration   5: 37.108 ops/s
Iteration   1: 37.514 ops/s
                 ·gc.alloc.rate:                287.666 MB/sec
                 ·gc.alloc.rate.norm:           8388624.938 B/op
                 ·gc.churn.Eden_Space:          255.502 MB/sec
                 ·gc.churn.Eden_Space.norm:     7450698.832 B/op
                 ·gc.churn.Survivor_Space:      33.726 MB/sec
                 ·gc.churn.Survivor_Space.norm: 983493.848 B/op
                 ·gc.count:                     3.000 counts
                 ·gc.time:                      11461.000 ms

Iteration   2: 37.564 ops/s
                 ·gc.alloc.rate:                288.046 MB/sec
                 ·gc.alloc.rate.norm:           8388624.938 B/op
                 ·gc.churn.Eden_Space:          255.871 MB/sec
                 ·gc.churn.Eden_Space.norm:     7451603.697 B/op
                 ·gc.churn.Survivor_Space:      33.771 MB/sec
                 ·gc.churn.Survivor_Space.norm: 983493.848 B/op
                 ·gc.count:                     3.000 counts
                 ·gc.time:                      11440.000 ms

Iteration   3: 35.878 ops/s
                 ·gc.alloc.rate:                275.629 MB/sec
                 ·gc.alloc.rate.norm:           8388624.938 B/op
                 ·gc.churn.Eden_Space:          244.753 MB/sec
                 ·gc.churn.Eden_Space.norm:     7448923.053 B/op
                 ·gc.churn.Survivor_Space:      32.315 MB/sec
                 ·gc.churn.Survivor_Space.norm: 983493.848 B/op
                 ·gc.count:                     3.000 counts
                 ·gc.time:                      11990.000 ms

Iteration   4: 37.695 ops/s
                 ·gc.alloc.rate:                289.005 MB/sec
                 ·gc.alloc.rate.norm:           8388624.938 B/op
                 ·gc.churn.Eden_Space:          256.615 MB/sec
                 ·gc.churn.Eden_Space.norm:     7448480.699 B/op
                 ·gc.churn.Survivor_Space:      33.883 MB/sec
                 ·gc.churn.Survivor_Space.norm: 983493.848 B/op
                 ·gc.count:                     3.000 counts
                 ·gc.time:                      11415.000 ms

Iteration   5: 37.749 ops/s
                 ·gc.alloc.rate:                289.383 MB/sec
                 ·gc.alloc.rate.norm:           8388625.011 B/op
                 ·gc.churn.Eden_Space:          256.985 MB/sec
                 ·gc.churn.Eden_Space.norm:     7449476.359 B/op
                 ·gc.churn.Survivor_Space:      33.928 MB/sec
                 ·gc.churn.Survivor_Space.norm: 983493.848 B/op
                 ·gc.count:                     3.000 counts
                 ·gc.time:                      11392.000 ms



Result "com.ionutbalosin.jvm.jit.benchmark.gc.ConstantHeapMemoryOccupancyBenchmark.serialGC":
  37.425 ±(99.9%) 1.633 ops/s [Average]
  (min, avg, max) = (34.956, 37.425, 40.004), stdev = 1.528
  CI (99.9%): [35.792, 39.059] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ConstantHeapMemoryOccupancyBenchmark.serialGC:·gc.alloc.rate":
  287.004 ±(99.9%) 11.999 MB/sec [Average]
  (min, avg, max) = (268.821, 287.004, 305.934), stdev = 11.224
  CI (99.9%): [275.005, 299.002] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ConstantHeapMemoryOccupancyBenchmark.serialGC:·gc.alloc.rate.norm":
  8388624.953 ±(99.9%) 0.033 B/op [Average]
  (min, avg, max) = (8388624.938, 8388624.953, 8388625.011), stdev = 0.030
  CI (99.9%): [8388624.920, 8388624.985] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ConstantHeapMemoryOccupancyBenchmark.serialGC:·gc.churn.Eden_Space":
  254.903 ±(99.9%) 10.642 MB/sec [Average]
  (min, avg, max) = (238.869, 254.903, 271.761), stdev = 9.955
  CI (99.9%): [244.261, 265.545] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ConstantHeapMemoryOccupancyBenchmark.serialGC:·gc.churn.Eden_Space.norm":
  7450410.266 ±(99.9%) 1980.660 B/op [Average]
  (min, avg, max) = (7448480.644, 7450410.266, 7454318.198), stdev = 1852.711
  CI (99.9%): [7448429.605, 7452390.926] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ConstantHeapMemoryOccupancyBenchmark.serialGC:·gc.churn.Survivor_Space":
  33.649 ±(99.9%) 1.407 MB/sec [Average]
  (min, avg, max) = (31.517, 33.649, 35.868), stdev = 1.316
  CI (99.9%): [32.242, 35.055] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ConstantHeapMemoryOccupancyBenchmark.serialGC:·gc.churn.Survivor_Space.norm":
  983493.848 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (983493.848, 983493.848, 983493.848), stdev = 0.001
  CI (99.9%): [983493.848, 983493.848] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ConstantHeapMemoryOccupancyBenchmark.serialGC:·gc.count":
  45.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
  CI (99.9%): [45.000, 45.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ConstantHeapMemoryOccupancyBenchmark.serialGC:·gc.time":
  172605.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (10741.000, 11507.000, 12313.000), stdev = 467.905
  CI (99.9%): [172605.000, 172605.000] (assumes normal distribution)


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+UseShenandoahGC -Xms4g -Xmx4g -XX:+AlwaysPreTouch
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.ConstantHeapMemoryOccupancyBenchmark.shenandoahGC

# Run progress: 66.67% complete, ETA 00:12:01
# Fork: 1 of 3
# Warmup Iteration   1: 29.049 ops/s
# Warmup Iteration   2: 26.295 ops/s
# Warmup Iteration   3: 25.512 ops/s
# Warmup Iteration   4: 27.974 ops/s
# Warmup Iteration   5: 25.434 ops/s
Iteration   1: 25.492 ops/s
                 ·gc.alloc.rate:                        195.478 MB/sec
                 ·gc.alloc.rate.norm:                   8388625.383 B/op
                 ·gc.churn.Compressed_Class_Space:      ≈ 10⁻⁴ MB/sec
                 ·gc.churn.Compressed_Class_Space.norm: 7.593 B/op
                 ·gc.churn.Metaspace:                   0.001 MB/sec
                 ·gc.churn.Metaspace.norm:              27.553 B/op
                 ·gc.churn.Shenandoah:                  195.840 MB/sec
                 ·gc.churn.Shenandoah.norm:             8404165.071 B/op
                 ·gc.count:                             18.000 counts
                 ·gc.time:                              20723.000 ms

Iteration   2: 29.393 ops/s
                 ·gc.alloc.rate:                        224.082 MB/sec
                 ·gc.alloc.rate.norm:                   8388625.477 B/op
                 ·gc.churn.Compressed_Class_Space:      ≈ 10⁻⁴ MB/sec
                 ·gc.churn.Compressed_Class_Space.norm: 7.517 B/op
                 ·gc.churn.Metaspace:                   0.001 MB/sec
                 ·gc.churn.Metaspace.norm:              27.275 B/op
                 ·gc.churn.Shenandoah:                  153.773 MB/sec
                 ·gc.churn.Shenandoah.norm:             5756588.779 B/op
                 ·gc.count:                             14.000 counts
                 ·gc.time:                              17778.000 ms

Iteration   3: 27.848 ops/s
                 ·gc.alloc.rate:            211.954 MB/sec
                 ·gc.alloc.rate.norm:       8388625.462 B/op
                 ·gc.churn.Shenandoah:      232.759 MB/sec
                 ·gc.churn.Shenandoah.norm: 9212050.552 B/op
                 ·gc.count:                 18.000 counts
                 ·gc.time:                  17168.000 ms

Iteration   4: 31.450 ops/s
                 ·gc.alloc.rate:                        238.578 MB/sec
                 ·gc.alloc.rate.norm:                   8388625.295 B/op
                 ·gc.churn.Compressed_Class_Space:      ≈ 10⁻⁴ MB/sec
                 ·gc.churn.Compressed_Class_Space.norm: 7.111 B/op
                 ·gc.churn.Metaspace:                   0.001 MB/sec
                 ·gc.churn.Metaspace.norm:              25.803 B/op
                 ·gc.churn.Shenandoah:                  236.499 MB/sec
                 ·gc.churn.Shenandoah.norm:             8315528.508 B/op
                 ·gc.count:                             20.000 counts
                 ·gc.time:                              17454.000 ms

Iteration   5: 30.934 ops/s
                 ·gc.alloc.rate:                        234.681 MB/sec
                 ·gc.alloc.rate.norm:                   8388625.316 B/op
                 ·gc.churn.Compressed_Class_Space:      ≈ 10⁻⁴ MB/sec
                 ·gc.churn.Compressed_Class_Space.norm: 7.226 B/op
                 ·gc.churn.Metaspace:                   0.001 MB/sec
                 ·gc.churn.Metaspace.norm:              26.219 B/op
                 ·gc.churn.Shenandoah:                  232.605 MB/sec
                 ·gc.churn.Shenandoah.norm:             8314403.226 B/op
                 ·gc.count:                             20.000 counts
                 ·gc.time:                              17720.000 ms


# Run progress: 72.22% complete, ETA 00:09:58
# Fork: 2 of 3
# Warmup Iteration   1: 30.831 ops/s
# Warmup Iteration   2: 21.467 ops/s
# Warmup Iteration   3: 29.313 ops/s
# Warmup Iteration   4: 29.365 ops/s
# Warmup Iteration   5: 29.244 ops/s
Iteration   1: 31.244 ops/s
                 ·gc.alloc.rate:                        237.017 MB/sec
                 ·gc.alloc.rate.norm:                   8388625.304 B/op
                 ·gc.churn.Compressed_Class_Space:      ≈ 10⁻⁴ MB/sec
                 ·gc.churn.Compressed_Class_Space.norm: 7.157 B/op
                 ·gc.churn.Metaspace:                   0.001 MB/sec
                 ·gc.churn.Metaspace.norm:              25.968 B/op
                 ·gc.churn.Shenandoah:                  229.080 MB/sec
                 ·gc.churn.Shenandoah.norm:             8107743.719 B/op
                 ·gc.count:                             20.000 counts
                 ·gc.time:                              17542.000 ms

Iteration   2: 30.633 ops/s
                 ·gc.alloc.rate:                        232.384 MB/sec
                 ·gc.alloc.rate.norm:                   8388625.329 B/op
                 ·gc.churn.Compressed_Class_Space:      ≈ 10⁻⁴ MB/sec
                 ·gc.churn.Compressed_Class_Space.norm: 7.296 B/op
                 ·gc.churn.Metaspace:                   0.001 MB/sec
                 ·gc.churn.Metaspace.norm:              26.476 B/op
                 ·gc.churn.Shenandoah:                  227.514 MB/sec
                 ·gc.churn.Shenandoah.norm:             8212847.114 B/op
                 ·gc.count:                             21.000 counts
                 ·gc.time:                              16189.000 ms

Iteration   3: 28.277 ops/s
                 ·gc.alloc.rate:                        216.369 MB/sec
                 ·gc.alloc.rate.norm:                   8388625.312 B/op
                 ·gc.churn.Compressed_Class_Space:      ≈ 10⁻⁴ MB/sec
                 ·gc.churn.Compressed_Class_Space.norm: 7.203 B/op
                 ·gc.churn.Metaspace:                   0.001 MB/sec
                 ·gc.churn.Metaspace.norm:              26.135 B/op
                 ·gc.churn.Shenandoah:                  281.290 MB/sec
                 ·gc.churn.Shenandoah.norm:             10905591.794 B/op
                 ·gc.count:                             28.000 counts
                 ·gc.time:                              20717.000 ms

Iteration   4: 16.900 ops/s
                 ·gc.alloc.rate:                        129.635 MB/sec
                 ·gc.alloc.rate.norm:                   8388626.071 B/op
                 ·gc.churn.Compressed_Class_Space:      ≈ 10⁻⁴ MB/sec
                 ·gc.churn.Compressed_Class_Space.norm: 11.371 B/op
                 ·gc.churn.Metaspace:                   0.001 MB/sec
                 ·gc.churn.Metaspace.norm:              41.259 B/op
                 ·gc.churn.Shenandoah:                  129.814 MB/sec
                 ·gc.churn.Shenandoah.norm:             8400221.279 B/op
                 ·gc.count:                             10.000 counts
                 ·gc.time:                              21811.000 ms

Iteration   5: 21.375 ops/s
                 ·gc.alloc.rate:                                  165.118 MB/sec
                 ·gc.alloc.rate.norm:                             8388625.355 B/op
                 ·gc.churn.CodeHeap_'non-nmethods':               0.001 MB/sec
                 ·gc.churn.CodeHeap_'non-nmethods'.norm:          38.272 B/op
                 ·gc.churn.CodeHeap_'non-profiled_nmethods':      0.001 MB/sec
                 ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: 43.801 B/op
                 ·gc.churn.CodeHeap_'profiled_nmethods':          0.001 MB/sec
                 ·gc.churn.CodeHeap_'profiled_nmethods'.norm:     42.950 B/op
                 ·gc.churn.Shenandoah:                            364.699 MB/sec
                 ·gc.churn.Shenandoah.norm:                       18528143.708 B/op
                 ·gc.count:                                       318.000 counts
                 ·gc.time:                                        26094.000 ms


# Run progress: 77.78% complete, ETA 00:07:58
# Fork: 3 of 3
# Warmup Iteration   1: 27.672 ops/s
# Warmup Iteration   2: 25.454 ops/s
# Warmup Iteration   3: 25.158 ops/s
# Warmup Iteration   4: 28.160 ops/s
# Warmup Iteration   5: 29.336 ops/s
Iteration   1: 31.128 ops/s
                 ·gc.alloc.rate:                         236.135 MB/sec
                 ·gc.alloc.rate.norm:                    8388625.308 B/op
                 ·gc.churn.CodeHeap_'non-nmethods':      0.001 MB/sec
                 ·gc.churn.CodeHeap_'non-nmethods'.norm: 38.154 B/op
                 ·gc.churn.Compressed_Class_Space:       ≈ 10⁻⁴ MB/sec
                 ·gc.churn.Compressed_Class_Space.norm:  7.179 B/op
                 ·gc.churn.Metaspace:                    0.001 MB/sec
                 ·gc.churn.Metaspace.norm:               26.051 B/op
                 ·gc.churn.Shenandoah:                   230.271 MB/sec
                 ·gc.churn.Shenandoah.norm:              8180318.923 B/op
                 ·gc.count:                              20.000 counts
                 ·gc.time:                               17445.000 ms

Iteration   2: 27.847 ops/s
                 ·gc.alloc.rate:                        211.246 MB/sec
                 ·gc.alloc.rate.norm:                   8388625.577 B/op
                 ·gc.churn.Compressed_Class_Space:      ≈ 10⁻⁴ MB/sec
                 ·gc.churn.Compressed_Class_Space.norm: 8.029 B/op
                 ·gc.churn.Metaspace:                   0.001 MB/sec
                 ·gc.churn.Metaspace.norm:              29.133 B/op
                 ·gc.churn.Shenandoah:                  228.484 MB/sec
                 ·gc.churn.Shenandoah.norm:             9073157.563 B/op
                 ·gc.count:                             20.000 counts
                 ·gc.time:                              16799.000 ms

Iteration   3: 32.757 ops/s
                 ·gc.alloc.rate:                        248.489 MB/sec
                 ·gc.alloc.rate.norm:                   8388625.244 B/op
                 ·gc.churn.Compressed_Class_Space:      ≈ 10⁻⁴ MB/sec
                 ·gc.churn.Compressed_Class_Space.norm: 6.829 B/op
                 ·gc.churn.Metaspace:                   0.001 MB/sec
                 ·gc.churn.Metaspace.norm:              24.780 B/op
                 ·gc.churn.Shenandoah:                  224.475 MB/sec
                 ·gc.churn.Shenandoah.norm:             7577953.854 B/op
                 ·gc.count:                             18.000 counts
                 ·gc.time:                              17033.000 ms

Iteration   4: 29.670 ops/s
                 ·gc.alloc.rate:                        226.196 MB/sec
                 ·gc.alloc.rate.norm:                   8388625.355 B/op
                 ·gc.churn.Compressed_Class_Space:      ≈ 10⁻⁴ MB/sec
                 ·gc.churn.Compressed_Class_Space.norm: 7.442 B/op
                 ·gc.churn.Metaspace:                   0.001 MB/sec
                 ·gc.churn.Metaspace.norm:              27.003 B/op
                 ·gc.churn.Shenandoah:                  225.672 MB/sec
                 ·gc.churn.Shenandoah.norm:             8369196.199 B/op
                 ·gc.count:                             22.000 counts
                 ·gc.time:                              18989.000 ms

Iteration   5: 28.541 ops/s
                 ·gc.alloc.rate:                              218.102 MB/sec
                 ·gc.alloc.rate.norm:                         8388625.443 B/op
                 ·gc.churn.CodeHeap_'non-nmethods':           0.004 MB/sec
                 ·gc.churn.CodeHeap_'non-nmethods'.norm:      146.466 B/op
                 ·gc.churn.CodeHeap_'profiled_nmethods':      0.011 MB/sec
                 ·gc.churn.CodeHeap_'profiled_nmethods'.norm: 415.895 B/op
                 ·gc.churn.Compressed_Class_Space:            ≈ 10⁻⁴ MB/sec
                 ·gc.churn.Compressed_Class_Space.norm:       7.344 B/op
                 ·gc.churn.Metaspace:                         0.001 MB/sec
                 ·gc.churn.Metaspace.norm:                    26.649 B/op
                 ·gc.churn.Shenandoah:                        545.143 MB/sec
                 ·gc.churn.Shenandoah.norm:                   20967210.675 B/op
                 ·gc.count:                                   322.000 counts
                 ·gc.time:                                    19345.000 ms



Result "com.ionutbalosin.jvm.jit.benchmark.gc.ConstantHeapMemoryOccupancyBenchmark.shenandoahGC":
  28.233 ±(99.9%) 4.500 ops/s [Average]
  (min, avg, max) = (16.900, 28.233, 32.757), stdev = 4.210
  CI (99.9%): [23.732, 32.733] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ConstantHeapMemoryOccupancyBenchmark.shenandoahGC:·gc.alloc.rate":
  215.031 ±(99.9%) 33.440 MB/sec [Average]
  (min, avg, max) = (129.635, 215.031, 248.489), stdev = 31.279
  CI (99.9%): [181.591, 248.471] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ConstantHeapMemoryOccupancyBenchmark.shenandoahGC:·gc.alloc.rate.norm":
  8388625.415 ±(99.9%) 0.215 B/op [Average]
  (min, avg, max) = (8388625.244, 8388625.415, 8388626.071), stdev = 0.201
  CI (99.9%): [8388625.200, 8388625.631] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ConstantHeapMemoryOccupancyBenchmark.shenandoahGC:·gc.churn.CodeHeap_'non-nmethods'":
  ≈ 10⁻³ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ConstantHeapMemoryOccupancyBenchmark.shenandoahGC:·gc.churn.CodeHeap_'non-nmethods'.norm":
  14.859 ±(99.9%) 41.464 B/op [Average]
  (min, avg, max) = (≈ 0, 14.859, 146.466), stdev = 38.786
  CI (99.9%): [≈ 0, 56.324] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ConstantHeapMemoryOccupancyBenchmark.shenandoahGC:·gc.churn.CodeHeap_'non-profiled_nmethods'":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ConstantHeapMemoryOccupancyBenchmark.shenandoahGC:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
  2.920 ±(99.9%) 12.090 B/op [Average]
  (min, avg, max) = (≈ 0, 2.920, 43.801), stdev = 11.309
  CI (99.9%): [≈ 0, 15.010] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ConstantHeapMemoryOccupancyBenchmark.shenandoahGC:·gc.churn.CodeHeap_'profiled_nmethods'":
  0.001 ±(99.9%) 0.003 MB/sec [Average]
  (min, avg, max) = (≈ 0, 0.001, 0.011), stdev = 0.003
  CI (99.9%): [≈ 0, 0.004] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ConstantHeapMemoryOccupancyBenchmark.shenandoahGC:·gc.churn.CodeHeap_'profiled_nmethods'.norm":
  30.590 ±(99.9%) 114.565 B/op [Average]
  (min, avg, max) = (≈ 0, 30.590, 415.895), stdev = 107.164
  CI (99.9%): [≈ 0, 145.154] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ConstantHeapMemoryOccupancyBenchmark.shenandoahGC:·gc.churn.Compressed_Class_Space":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ConstantHeapMemoryOccupancyBenchmark.shenandoahGC:·gc.churn.Compressed_Class_Space.norm":
  6.620 ±(99.9%) 3.093 B/op [Average]
  (min, avg, max) = (≈ 0, 6.620, 11.371), stdev = 2.893
  CI (99.9%): [3.527, 9.713] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ConstantHeapMemoryOccupancyBenchmark.shenandoahGC:·gc.churn.Metaspace":
  0.001 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (≈ 0, 0.001, 0.001), stdev = 0.001
  CI (99.9%): [≈ 10⁻³, 0.001] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ConstantHeapMemoryOccupancyBenchmark.shenandoahGC:·gc.churn.Metaspace.norm":
  24.020 ±(99.9%) 11.224 B/op [Average]
  (min, avg, max) = (≈ 0, 24.020, 41.259), stdev = 10.499
  CI (99.9%): [12.796, 35.244] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ConstantHeapMemoryOccupancyBenchmark.shenandoahGC:·gc.churn.Shenandoah":
  249.195 ±(99.9%) 103.686 MB/sec [Average]
  (min, avg, max) = (129.814, 249.195, 545.143), stdev = 96.988
  CI (99.9%): [145.509, 352.881] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ConstantHeapMemoryOccupancyBenchmark.shenandoahGC:·gc.churn.Shenandoah.norm":
  9888341.398 ±(99.9%) 4449552.727 B/op [Average]
  (min, avg, max) = (5756588.779, 9888341.398, 20967210.675), stdev = 4162114.382
  CI (99.9%): [5438788.670, 14337894.125] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ConstantHeapMemoryOccupancyBenchmark.shenandoahGC:·gc.count":
  889.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (10.000, 59.267, 322.000), stdev = 105.930
  CI (99.9%): [889.000, 889.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ConstantHeapMemoryOccupancyBenchmark.shenandoahGC:·gc.time":
  282807.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (16189.000, 18853.800, 26094.000), stdev = 2590.903
  CI (99.9%): [282807.000, 282807.000] (assumes normal distribution)


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+UseZGC -Xms4g -Xmx4g -XX:+AlwaysPreTouch
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.ConstantHeapMemoryOccupancyBenchmark.zGC

# Run progress: 83.33% complete, ETA 00:05:57
# Fork: 1 of 3
# Warmup Iteration   1: 4.809 ops/s
# Warmup Iteration   2: 2.429 ops/s
# Warmup Iteration   3: 1.520 ops/s
# Warmup Iteration   4: 1.519 ops/s
# Warmup Iteration   5: 1.454 ops/s
Iteration   1: 2.434 ops/s
                 ·gc.alloc.rate:       18.715 MB/sec
                 ·gc.alloc.rate.norm:  8388651.467 B/op
                 ·gc.churn.ZHeap:      16.999 MB/sec
                 ·gc.churn.ZHeap.norm: 7619652.267 B/op
                 ·gc.count:            3.000 counts
                 ·gc.time:             1.000 ms

Iteration   2: 2.409 ops/s
                 ·gc.alloc.rate:       18.500 MB/sec
                 ·gc.alloc.rate.norm:  8388654.069 B/op
                 ·gc.churn.ZHeap:      15.629 MB/sec
                 ·gc.churn.ZHeap.norm: 7086927.448 B/op
                 ·gc.count:            3.000 counts
                 ·gc.time:             1.000 ms

Iteration   3: 2.385 ops/s
                 ·gc.alloc.rate:       18.325 MB/sec
                 ·gc.alloc.rate.norm:  8388653.793 B/op
                 ·gc.churn.ZHeap:      15.482 MB/sec
                 ·gc.churn.ZHeap.norm: 7086927.448 B/op
                 ·gc.count:            3.000 counts
                 ·gc.time:             ≈ 0 ms

Iteration   4: 2.400 ops/s
                 ·gc.alloc.rate:       18.434 MB/sec
                 ·gc.alloc.rate.norm:  8388652.138 B/op
                 ·gc.churn.ZHeap:      15.573 MB/sec
                 ·gc.churn.ZHeap.norm: 7086927.448 B/op
                 ·gc.count:            3.000 counts
                 ·gc.time:             1.000 ms

Iteration   5: 2.451 ops/s
                 ·gc.alloc.rate:       18.835 MB/sec
                 ·gc.alloc.rate.norm:  8388651.467 B/op
                 ·gc.churn.ZHeap:      320.661 MB/sec
                 ·gc.churn.ZHeap.norm: 142816051.200 B/op
                 ·gc.count:            4.000 counts
                 ·gc.time:             1.000 ms


# Run progress: 88.89% complete, ETA 00:03:59
# Fork: 2 of 3
# Warmup Iteration   1: 5.576 ops/s
# Warmup Iteration   2: 2.613 ops/s
# Warmup Iteration   3: 2.692 ops/s
# Warmup Iteration   4: 2.422 ops/s
# Warmup Iteration   5: 2.446 ops/s
Iteration   1: 2.425 ops/s
                 ·gc.alloc.rate:       18.623 MB/sec
                 ·gc.alloc.rate.norm:  8388652.138 B/op
                 ·gc.churn.ZHeap:      17.338 MB/sec
                 ·gc.churn.ZHeap.norm: 7810083.310 B/op
                 ·gc.count:            3.000 counts
                 ·gc.time:             1.000 ms

Iteration   2: 2.554 ops/s
                 ·gc.alloc.rate:       19.599 MB/sec
                 ·gc.alloc.rate.norm:  8388651.467 B/op
                 ·gc.churn.ZHeap:      17.639 MB/sec
                 ·gc.churn.ZHeap.norm: 7549747.200 B/op
                 ·gc.count:            3.000 counts
                 ·gc.time:             ≈ 0 ms

Iteration   3: 2.621 ops/s
                 ·gc.alloc.rate:       20.058 MB/sec
                 ·gc.alloc.rate.norm:  8388652.138 B/op
                 ·gc.churn.ZHeap:      18.848 MB/sec
                 ·gc.churn.ZHeap.norm: 7882398.897 B/op
                 ·gc.count:            3.000 counts
                 ·gc.time:             1.000 ms

Iteration   4: 2.678 ops/s
                 ·gc.alloc.rate:       20.506 MB/sec
                 ·gc.alloc.rate.norm:  8388653.067 B/op
                 ·gc.churn.ZHeap:      19.481 MB/sec
                 ·gc.churn.ZHeap.norm: 7969177.600 B/op
                 ·gc.count:            3.000 counts
                 ·gc.time:             1.000 ms

Iteration   5: 2.548 ops/s
                 ·gc.alloc.rate:       19.549 MB/sec
                 ·gc.alloc.rate.norm:  8388651.467 B/op
                 ·gc.churn.ZHeap:      333.303 MB/sec
                 ·gc.churn.ZHeap.norm: 143025766.400 B/op
                 ·gc.count:            4.000 counts
                 ·gc.time:             1.000 ms


# Run progress: 94.44% complete, ETA 00:01:59
# Fork: 3 of 3
# Warmup Iteration   1: 5.496 ops/s
# Warmup Iteration   2: 2.524 ops/s
# Warmup Iteration   3: 2.410 ops/s
# Warmup Iteration   4: 2.573 ops/s
# Warmup Iteration   5: 2.508 ops/s
Iteration   1: 2.380 ops/s
                 ·gc.alloc.rate:       18.291 MB/sec
                 ·gc.alloc.rate.norm:  8388653.793 B/op
                 ·gc.churn.ZHeap:      16.715 MB/sec
                 ·gc.churn.ZHeap.norm: 7665452.138 B/op
                 ·gc.count:            3.000 counts
                 ·gc.time:             1.000 ms

Iteration   2: 2.474 ops/s
                 ·gc.alloc.rate:       18.985 MB/sec
                 ·gc.alloc.rate.norm:  8388652.138 B/op
                 ·gc.churn.ZHeap:      17.184 MB/sec
                 ·gc.churn.ZHeap.norm: 7593136.552 B/op
                 ·gc.count:            3.000 counts
                 ·gc.time:             ≈ 0 ms

Iteration   3: 2.576 ops/s
                 ·gc.alloc.rate:       19.728 MB/sec
                 ·gc.alloc.rate.norm:  8388652.138 B/op
                 ·gc.churn.ZHeap:      18.707 MB/sec
                 ·gc.churn.ZHeap.norm: 7954714.483 B/op
                 ·gc.count:            3.000 counts
                 ·gc.time:             1.000 ms

Iteration   4: 2.434 ops/s
                 ·gc.alloc.rate:       18.685 MB/sec
                 ·gc.alloc.rate.norm:  8388652.138 B/op
                 ·gc.churn.ZHeap:      16.269 MB/sec
                 ·gc.churn.ZHeap.norm: 7303874.207 B/op
                 ·gc.count:            3.000 counts
                 ·gc.time:             1.000 ms

Iteration   5: 2.514 ops/s
                 ·gc.alloc.rate:       19.301 MB/sec
                 ·gc.alloc.rate.norm:  8388653.333 B/op
                 ·gc.churn.ZHeap:      329.078 MB/sec
                 ·gc.churn.ZHeap.norm: 143025766.400 B/op
                 ·gc.count:            4.000 counts
                 ·gc.time:             1.000 ms



Result "com.ionutbalosin.jvm.jit.benchmark.gc.ConstantHeapMemoryOccupancyBenchmark.zGC":
  2.486 ±(99.9%) 0.098 ops/s [Average]
  (min, avg, max) = (2.380, 2.486, 2.678), stdev = 0.092
  CI (99.9%): [2.388, 2.583] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ConstantHeapMemoryOccupancyBenchmark.zGC:·gc.alloc.rate":
  19.076 ±(99.9%) 0.726 MB/sec [Average]
  (min, avg, max) = (18.291, 19.076, 20.506), stdev = 0.679
  CI (99.9%): [18.349, 19.802] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ConstantHeapMemoryOccupancyBenchmark.zGC:·gc.alloc.rate.norm":
  8388652.450 ±(99.9%) 0.983 B/op [Average]
  (min, avg, max) = (8388651.467, 8388652.450, 8388654.069), stdev = 0.920
  CI (99.9%): [8388651.467, 8388653.433] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ConstantHeapMemoryOccupancyBenchmark.zGC:·gc.churn.ZHeap":
  79.260 ±(99.9%) 137.479 MB/sec [Average]
  (min, avg, max) = (15.482, 79.260, 333.303), stdev = 128.598
  CI (99.9%): [≈ 0, 216.740] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ConstantHeapMemoryOccupancyBenchmark.zGC:·gc.churn.ZHeap.norm":
  34631773.533 ±(99.9%) 59935657.557 B/op [Average]
  (min, avg, max) = (7086927.448, 34631773.533, 143025766.400), stdev = 56063851.270
  CI (99.9%): [≈ 0, 94567431.090] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ConstantHeapMemoryOccupancyBenchmark.zGC:·gc.count":
  48.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.414
  CI (99.9%): [48.000, 48.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ConstantHeapMemoryOccupancyBenchmark.zGC:·gc.time":
  12.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.414
  CI (99.9%): [12.000, 12.000] (assumes normal distribution)


# Run complete. Total time: 00:36:04

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                                                                           Mode  Cnt         Score          Error   Units
ConstantHeapMemoryOccupancyBenchmark.concMarkSweepGC                                               thrpt   15      3027.688 ±       47.046   ops/s
ConstantHeapMemoryOccupancyBenchmark.concMarkSweepGC:·gc.alloc.rate                                thrpt   15     23065.173 ±      358.496  MB/sec
ConstantHeapMemoryOccupancyBenchmark.concMarkSweepGC:·gc.alloc.rate.norm                           thrpt   15   8388624.014 ±        0.001    B/op
ConstantHeapMemoryOccupancyBenchmark.concMarkSweepGC:·gc.churn.Par_Eden_Space                      thrpt   15     23175.086 ±      352.466  MB/sec
ConstantHeapMemoryOccupancyBenchmark.concMarkSweepGC:·gc.churn.Par_Eden_Space.norm                 thrpt   15   8428635.941 ±     6500.603    B/op
ConstantHeapMemoryOccupancyBenchmark.concMarkSweepGC:·gc.churn.Par_Survivor_Space                  thrpt   15         0.005 ±        0.006  MB/sec
ConstantHeapMemoryOccupancyBenchmark.concMarkSweepGC:·gc.churn.Par_Survivor_Space.norm             thrpt   15         1.888 ±        2.096    B/op
ConstantHeapMemoryOccupancyBenchmark.concMarkSweepGC:·gc.count                                     thrpt   15      6880.000                 counts
ConstantHeapMemoryOccupancyBenchmark.concMarkSweepGC:·gc.time                                      thrpt   15     17302.000                     ms
ConstantHeapMemoryOccupancyBenchmark.g1GC                                                          thrpt   15      2147.723 ±       26.937   ops/s
ConstantHeapMemoryOccupancyBenchmark.g1GC:·gc.alloc.rate                                           thrpt   15     16362.647 ±      205.250  MB/sec
ConstantHeapMemoryOccupancyBenchmark.g1GC:·gc.alloc.rate.norm                                      thrpt   15   8388624.019 ±        0.001    B/op
ConstantHeapMemoryOccupancyBenchmark.g1GC:·gc.churn.G1_Old_Gen                                     thrpt   15     20457.456 ±      250.505  MB/sec
ConstantHeapMemoryOccupancyBenchmark.g1GC:·gc.churn.G1_Old_Gen.norm                                thrpt   15  10487962.481 ±    25205.074    B/op
ConstantHeapMemoryOccupancyBenchmark.g1GC:·gc.churn.G1_Survivor_Space                              thrpt   15         0.006 ±        0.001  MB/sec
ConstantHeapMemoryOccupancyBenchmark.g1GC:·gc.churn.G1_Survivor_Space.norm                         thrpt   15         2.974 ±        0.674    B/op
ConstantHeapMemoryOccupancyBenchmark.g1GC:·gc.count                                                thrpt   15      2883.000                 counts
ConstantHeapMemoryOccupancyBenchmark.g1GC:·gc.time                                                 thrpt   15      3771.000                     ms
ConstantHeapMemoryOccupancyBenchmark.parallelOldGC                                                 thrpt   15        46.085 ±        2.444   ops/s
ConstantHeapMemoryOccupancyBenchmark.parallelOldGC:·gc.alloc.rate                                  thrpt   15       352.333 ±       18.315  MB/sec
ConstantHeapMemoryOccupancyBenchmark.parallelOldGC:·gc.alloc.rate.norm                             thrpt   15   8388624.831 ±        0.058    B/op
ConstantHeapMemoryOccupancyBenchmark.parallelOldGC:·gc.churn.PS_Eden_Space                         thrpt   15       353.806 ±       18.373  MB/sec
ConstantHeapMemoryOccupancyBenchmark.parallelOldGC:·gc.churn.PS_Eden_Space.norm                    thrpt   15   8423718.907 ±     2589.714    B/op
ConstantHeapMemoryOccupancyBenchmark.parallelOldGC:·gc.churn.PS_Old_Gen                            thrpt   15        ≈ 10⁻⁶                 MB/sec
ConstantHeapMemoryOccupancyBenchmark.parallelOldGC:·gc.churn.PS_Old_Gen.norm                       thrpt   15         0.010 ±        0.022    B/op
ConstantHeapMemoryOccupancyBenchmark.parallelOldGC:·gc.count                                       thrpt   15        61.000                 counts
ConstantHeapMemoryOccupancyBenchmark.parallelOldGC:·gc.time                                        thrpt   15    160401.000                     ms
ConstantHeapMemoryOccupancyBenchmark.serialGC                                                      thrpt   15        37.425 ±        1.633   ops/s
ConstantHeapMemoryOccupancyBenchmark.serialGC:·gc.alloc.rate                                       thrpt   15       287.004 ±       11.999  MB/sec
ConstantHeapMemoryOccupancyBenchmark.serialGC:·gc.alloc.rate.norm                                  thrpt   15   8388624.953 ±        0.033    B/op
ConstantHeapMemoryOccupancyBenchmark.serialGC:·gc.churn.Eden_Space                                 thrpt   15       254.903 ±       10.642  MB/sec
ConstantHeapMemoryOccupancyBenchmark.serialGC:·gc.churn.Eden_Space.norm                            thrpt   15   7450410.266 ±     1980.660    B/op
ConstantHeapMemoryOccupancyBenchmark.serialGC:·gc.churn.Survivor_Space                             thrpt   15        33.649 ±        1.407  MB/sec
ConstantHeapMemoryOccupancyBenchmark.serialGC:·gc.churn.Survivor_Space.norm                        thrpt   15    983493.848 ±        0.001    B/op
ConstantHeapMemoryOccupancyBenchmark.serialGC:·gc.count                                            thrpt   15        45.000                 counts
ConstantHeapMemoryOccupancyBenchmark.serialGC:·gc.time                                             thrpt   15    172605.000                     ms
ConstantHeapMemoryOccupancyBenchmark.shenandoahGC                                                  thrpt   15        28.233 ±        4.500   ops/s
ConstantHeapMemoryOccupancyBenchmark.shenandoahGC:·gc.alloc.rate                                   thrpt   15       215.031 ±       33.440  MB/sec
ConstantHeapMemoryOccupancyBenchmark.shenandoahGC:·gc.alloc.rate.norm                              thrpt   15   8388625.415 ±        0.215    B/op
ConstantHeapMemoryOccupancyBenchmark.shenandoahGC:·gc.churn.CodeHeap_'non-nmethods'                thrpt   15        ≈ 10⁻³                 MB/sec
ConstantHeapMemoryOccupancyBenchmark.shenandoahGC:·gc.churn.CodeHeap_'non-nmethods'.norm           thrpt   15        14.859 ±       41.464    B/op
ConstantHeapMemoryOccupancyBenchmark.shenandoahGC:·gc.churn.CodeHeap_'non-profiled_nmethods'       thrpt   15        ≈ 10⁻⁴                 MB/sec
ConstantHeapMemoryOccupancyBenchmark.shenandoahGC:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm  thrpt   15         2.920 ±       12.090    B/op
ConstantHeapMemoryOccupancyBenchmark.shenandoahGC:·gc.churn.CodeHeap_'profiled_nmethods'           thrpt   15         0.001 ±        0.003  MB/sec
ConstantHeapMemoryOccupancyBenchmark.shenandoahGC:·gc.churn.CodeHeap_'profiled_nmethods'.norm      thrpt   15        30.590 ±      114.565    B/op
ConstantHeapMemoryOccupancyBenchmark.shenandoahGC:·gc.churn.Compressed_Class_Space                 thrpt   15        ≈ 10⁻⁴                 MB/sec
ConstantHeapMemoryOccupancyBenchmark.shenandoahGC:·gc.churn.Compressed_Class_Space.norm            thrpt   15         6.620 ±        3.093    B/op
ConstantHeapMemoryOccupancyBenchmark.shenandoahGC:·gc.churn.Metaspace                              thrpt   15         0.001 ±        0.001  MB/sec
ConstantHeapMemoryOccupancyBenchmark.shenandoahGC:·gc.churn.Metaspace.norm                         thrpt   15        24.020 ±       11.224    B/op
ConstantHeapMemoryOccupancyBenchmark.shenandoahGC:·gc.churn.Shenandoah                             thrpt   15       249.195 ±      103.686  MB/sec
ConstantHeapMemoryOccupancyBenchmark.shenandoahGC:·gc.churn.Shenandoah.norm                        thrpt   15   9888341.398 ±  4449552.727    B/op
ConstantHeapMemoryOccupancyBenchmark.shenandoahGC:·gc.count                                        thrpt   15       889.000                 counts
ConstantHeapMemoryOccupancyBenchmark.shenandoahGC:·gc.time                                         thrpt   15    282807.000                     ms
ConstantHeapMemoryOccupancyBenchmark.zGC                                                           thrpt   15         2.486 ±        0.098   ops/s
ConstantHeapMemoryOccupancyBenchmark.zGC:·gc.alloc.rate                                            thrpt   15        19.076 ±        0.726  MB/sec
ConstantHeapMemoryOccupancyBenchmark.zGC:·gc.alloc.rate.norm                                       thrpt   15   8388652.450 ±        0.983    B/op
ConstantHeapMemoryOccupancyBenchmark.zGC:·gc.churn.ZHeap                                           thrpt   15        79.260 ±      137.479  MB/sec
ConstantHeapMemoryOccupancyBenchmark.zGC:·gc.churn.ZHeap.norm                                      thrpt   15  34631773.533 ± 59935657.557    B/op
ConstantHeapMemoryOccupancyBenchmark.zGC:·gc.count                                                 thrpt   15        48.000                 counts
ConstantHeapMemoryOccupancyBenchmark.zGC:·gc.time                                                  thrpt   15        12.000                     ms

Benchmark result is saved to results/report-openjdk-13/hotspotvm_gc/ConstantHeapMemoryOccupancyBenchmark.json
Running java  -jar benchmarks/target/benchmarks.jar .*HeapMemoryBandwidthAllocatorBenchmark.* -prof gc -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_gc/HeapMemoryBandwidthAllocatorBenchmark.json
# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UseConcMarkSweepGC -Xmx4g
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.concMarkSweepGC
# Parameters: (objectsSize = _4_KB)

# Run progress: 0.00% complete, ETA 01:00:00
# Fork: 1 of 3
OpenJDK 64-Bit Server VM warning: Option UseConcMarkSweepGC was deprecated in version 9.0 and will likely be removed in a future release.
# Warmup Iteration   1: 259.724 ns/op
# Warmup Iteration   2: 258.432 ns/op
# Warmup Iteration   3: 256.343 ns/op
# Warmup Iteration   4: 261.043 ns/op
# Warmup Iteration   5: 254.843 ns/op
Iteration   1: 255.913 ns/op
                 ·gc.alloc.rate:                    14591.938 MB/sec
                 ·gc.alloc.rate.norm:               4112.000 B/op
                 ·gc.churn.Par_Eden_Space:          14615.056 MB/sec
                 ·gc.churn.Par_Eden_Space.norm:     4118.515 B/op
                 ·gc.churn.Par_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.Par_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                         1160.000 counts
                 ·gc.time:                          655.000 ms

Iteration   2: 255.977 ns/op
                 ·gc.alloc.rate:                    14588.034 MB/sec
                 ·gc.alloc.rate.norm:               4112.000 B/op
                 ·gc.churn.Par_Eden_Space:          14602.179 MB/sec
                 ·gc.churn.Par_Eden_Space.norm:     4115.987 B/op
                 ·gc.churn.Par_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.Par_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                         1159.000 counts
                 ·gc.time:                          664.000 ms

Iteration   3: 251.121 ns/op
                 ·gc.alloc.rate:                    14870.825 MB/sec
                 ·gc.alloc.rate.norm:               4112.000 B/op
                 ·gc.churn.Par_Eden_Space:          14892.627 MB/sec
                 ·gc.churn.Par_Eden_Space.norm:     4118.029 B/op
                 ·gc.churn.Par_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.Par_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                         1182.000 counts
                 ·gc.time:                          633.000 ms

Iteration   4: 255.781 ns/op
                 ·gc.alloc.rate:                    14599.433 MB/sec
                 ·gc.alloc.rate.norm:               4112.000 B/op
                 ·gc.churn.Par_Eden_Space:          14627.047 MB/sec
                 ·gc.churn.Par_Eden_Space.norm:     4119.778 B/op
                 ·gc.churn.Par_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.Par_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                         1161.000 counts
                 ·gc.time:                          623.000 ms

Iteration   5: 256.581 ns/op
                 ·gc.alloc.rate:                    14553.780 MB/sec
                 ·gc.alloc.rate.norm:               4112.000 B/op
                 ·gc.churn.Par_Eden_Space:          14564.511 MB/sec
                 ·gc.churn.Par_Eden_Space.norm:     4115.032 B/op
                 ·gc.churn.Par_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.Par_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                         1156.000 counts
                 ·gc.time:                          636.000 ms


# Run progress: 2.78% complete, ETA 01:01:26
# Fork: 2 of 3
OpenJDK 64-Bit Server VM warning: Option UseConcMarkSweepGC was deprecated in version 9.0 and will likely be removed in a future release.
# Warmup Iteration   1: 256.094 ns/op
# Warmup Iteration   2: 253.316 ns/op
# Warmup Iteration   3: 255.798 ns/op
# Warmup Iteration   4: 254.940 ns/op
# Warmup Iteration   5: 259.193 ns/op
Iteration   1: 258.966 ns/op
                 ·gc.alloc.rate:                    14420.298 MB/sec
                 ·gc.alloc.rate.norm:               4112.000 B/op
                 ·gc.churn.Par_Eden_Space:          14439.073 MB/sec
                 ·gc.churn.Par_Eden_Space.norm:     4117.354 B/op
                 ·gc.churn.Par_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.Par_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                         1146.000 counts
                 ·gc.time:                          632.000 ms

Iteration   2: 253.675 ns/op
                 ·gc.alloc.rate:                    14720.665 MB/sec
                 ·gc.alloc.rate.norm:               4112.000 B/op
                 ·gc.churn.Par_Eden_Space:          14740.904 MB/sec
                 ·gc.churn.Par_Eden_Space.norm:     4117.654 B/op
                 ·gc.churn.Par_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.Par_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                         1170.000 counts
                 ·gc.time:                          621.000 ms

Iteration   3: 253.445 ns/op
                 ·gc.alloc.rate:                    14734.689 MB/sec
                 ·gc.alloc.rate.norm:               4112.000 B/op
                 ·gc.churn.Par_Eden_Space:          14767.016 MB/sec
                 ·gc.churn.Par_Eden_Space.norm:     4121.022 B/op
                 ·gc.churn.Par_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.Par_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                         1172.000 counts
                 ·gc.time:                          654.000 ms

Iteration   4: 256.945 ns/op
                 ·gc.alloc.rate:                    14534.037 MB/sec
                 ·gc.alloc.rate.norm:               4112.000 B/op
                 ·gc.churn.Par_Eden_Space:          14552.798 MB/sec
                 ·gc.churn.Par_Eden_Space.norm:     4117.308 B/op
                 ·gc.churn.Par_Survivor_Space:      0.051 MB/sec
                 ·gc.churn.Par_Survivor_Space.norm: 0.014 B/op
                 ·gc.count:                         1155.000 counts
                 ·gc.time:                          625.000 ms

Iteration   5: 255.522 ns/op
                 ·gc.alloc.rate:                    14613.858 MB/sec
                 ·gc.alloc.rate.norm:               4112.000 B/op
                 ·gc.churn.Par_Eden_Space:          14627.124 MB/sec
                 ·gc.churn.Par_Eden_Space.norm:     4115.733 B/op
                 ·gc.churn.Par_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.Par_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                         1161.000 counts
                 ·gc.time:                          648.000 ms


# Run progress: 5.56% complete, ETA 00:59:40
# Fork: 3 of 3
OpenJDK 64-Bit Server VM warning: Option UseConcMarkSweepGC was deprecated in version 9.0 and will likely be removed in a future release.
# Warmup Iteration   1: 261.730 ns/op
# Warmup Iteration   2: 254.851 ns/op
# Warmup Iteration   3: 259.020 ns/op
# Warmup Iteration   4: 256.895 ns/op
# Warmup Iteration   5: 252.774 ns/op
Iteration   1: 253.514 ns/op
                 ·gc.alloc.rate:                    14730.540 MB/sec
                 ·gc.alloc.rate.norm:               4112.000 B/op
                 ·gc.churn.Par_Eden_Space:          14754.181 MB/sec
                 ·gc.churn.Par_Eden_Space.norm:     4118.599 B/op
                 ·gc.churn.Par_Survivor_Space:      0.041 MB/sec
                 ·gc.churn.Par_Survivor_Space.norm: 0.011 B/op
                 ·gc.count:                         1171.000 counts
                 ·gc.time:                          615.000 ms

Iteration   2: 257.709 ns/op
                 ·gc.alloc.rate:                    14490.134 MB/sec
                 ·gc.alloc.rate.norm:               4112.000 B/op
                 ·gc.churn.Par_Eden_Space:          14513.810 MB/sec
                 ·gc.churn.Par_Eden_Space.norm:     4118.719 B/op
                 ·gc.churn.Par_Survivor_Space:      0.032 MB/sec
                 ·gc.churn.Par_Survivor_Space.norm: 0.009 B/op
                 ·gc.count:                         1152.000 counts
                 ·gc.time:                          615.000 ms

Iteration   3: 256.442 ns/op
                 ·gc.alloc.rate:                    14561.770 MB/sec
                 ·gc.alloc.rate.norm:               4112.000 B/op
                 ·gc.churn.Par_Eden_Space:          14577.038 MB/sec
                 ·gc.churn.Par_Eden_Space.norm:     4116.311 B/op
                 ·gc.churn.Par_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.Par_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                         1157.000 counts
                 ·gc.time:                          655.000 ms

Iteration   4: 250.671 ns/op
                 ·gc.alloc.rate:                    14896.979 MB/sec
                 ·gc.alloc.rate.norm:               4112.000 B/op
                 ·gc.churn.Par_Eden_Space:          14917.280 MB/sec
                 ·gc.churn.Par_Eden_Space.norm:     4117.604 B/op
                 ·gc.churn.Par_Survivor_Space:      0.045 MB/sec
                 ·gc.churn.Par_Survivor_Space.norm: 0.013 B/op
                 ·gc.count:                         1184.000 counts
                 ·gc.time:                          667.000 ms

Iteration   5: 257.495 ns/op
                 ·gc.alloc.rate:                    14502.151 MB/sec
                 ·gc.alloc.rate.norm:               4112.000 B/op
                 ·gc.churn.Par_Eden_Space:          14526.764 MB/sec
                 ·gc.churn.Par_Eden_Space.norm:     4118.979 B/op
                 ·gc.churn.Par_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.Par_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                         1153.000 counts
                 ·gc.time:                          675.000 ms



Result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.concMarkSweepGC":
  255.317 ±(99.9%) 2.539 ns/op [Average]
  (min, avg, max) = (250.671, 255.317, 258.966), stdev = 2.375
  CI (99.9%): [252.778, 257.856] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.concMarkSweepGC:·gc.alloc.rate":
  14627.275 ±(99.9%) 146.363 MB/sec [Average]
  (min, avg, max) = (14420.298, 14627.275, 14896.979), stdev = 136.908
  CI (99.9%): [14480.913, 14773.638] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.concMarkSweepGC:·gc.alloc.rate.norm":
  4112.000 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (4112.000, 4112.000, 4112.000), stdev = 0.001
  CI (99.9%): [4112.000, 4112.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.concMarkSweepGC:·gc.churn.Par_Eden_Space":
  14647.827 ±(99.9%) 147.888 MB/sec [Average]
  (min, avg, max) = (14439.073, 14647.827, 14917.280), stdev = 138.334
  CI (99.9%): [14499.940, 14795.715] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.concMarkSweepGC:·gc.churn.Par_Eden_Space.norm":
  4117.775 ±(99.9%) 1.706 B/op [Average]
  (min, avg, max) = (4115.032, 4117.775, 4121.022), stdev = 1.596
  CI (99.9%): [4116.069, 4119.481] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.concMarkSweepGC:·gc.churn.Par_Survivor_Space":
  0.013 ±(99.9%) 0.020 MB/sec [Average]
  (min, avg, max) = (0.001, 0.013, 0.051), stdev = 0.019
  CI (99.9%): [≈ 0, 0.033] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.concMarkSweepGC:·gc.churn.Par_Survivor_Space.norm":
  0.004 ±(99.9%) 0.006 B/op [Average]
  (min, avg, max) = (≈ 10⁻³, 0.004, 0.014), stdev = 0.005
  CI (99.9%): [≈ 0, 0.009] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.concMarkSweepGC:·gc.count":
  17439.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (1146.000, 1162.600, 1184.000), stdev = 10.973
  CI (99.9%): [17439.000, 17439.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.concMarkSweepGC:·gc.time":
  9618.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (615.000, 641.200, 675.000), stdev = 19.771
  CI (99.9%): [9618.000, 9618.000] (assumes normal distribution)


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UseConcMarkSweepGC -Xmx4g
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.concMarkSweepGC
# Parameters: (objectsSize = _4_MB)

# Run progress: 8.33% complete, ETA 00:57:55
# Fork: 1 of 3
OpenJDK 64-Bit Server VM warning: Option UseConcMarkSweepGC was deprecated in version 9.0 and will likely be removed in a future release.
# Warmup Iteration   1: 189451.189 ns/op
# Warmup Iteration   2: 183274.806 ns/op
# Warmup Iteration   3: 184601.978 ns/op
# Warmup Iteration   4: 186797.396 ns/op
# Warmup Iteration   5: 184619.125 ns/op
Iteration   1: 183241.456 ns/op
                 ·gc.alloc.rate:                    20786.532 MB/sec
                 ·gc.alloc.rate.norm:               4194320.008 B/op
                 ·gc.churn.Par_Eden_Space:          21218.032 MB/sec
                 ·gc.churn.Par_Eden_Space.norm:     4281388.259 B/op
                 ·gc.churn.Par_Survivor_Space:      0.047 MB/sec
                 ·gc.churn.Par_Survivor_Space.norm: 9.455 B/op
                 ·gc.count:                         1706.000 counts
                 ·gc.time:                          890.000 ms

Iteration   2: 184263.940 ns/op
                 ·gc.alloc.rate:                    20670.359 MB/sec
                 ·gc.alloc.rate.norm:               4194320.008 B/op
                 ·gc.churn.Par_Eden_Space:          21093.641 MB/sec
                 ·gc.churn.Par_Eden_Space.norm:     4280210.278 B/op
                 ·gc.churn.Par_Survivor_Space:      0.050 MB/sec
                 ·gc.churn.Par_Survivor_Space.norm: 10.192 B/op
                 ·gc.count:                         1696.000 counts
                 ·gc.time:                          902.000 ms

Iteration   3: 183164.182 ns/op
                 ·gc.alloc.rate:                    20796.033 MB/sec
                 ·gc.alloc.rate.norm:               4194320.007 B/op
                 ·gc.churn.Par_Eden_Space:          21219.163 MB/sec
                 ·gc.churn.Par_Eden_Space.norm:     4279660.452 B/op
                 ·gc.churn.Par_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.Par_Survivor_Space.norm: 0.444 B/op
                 ·gc.count:                         1706.000 counts
                 ·gc.time:                          912.000 ms

Iteration   4: 191986.530 ns/op
                 ·gc.alloc.rate:                    19840.459 MB/sec
                 ·gc.alloc.rate.norm:               4194320.008 B/op
                 ·gc.churn.Par_Eden_Space:          20249.460 MB/sec
                 ·gc.churn.Par_Eden_Space.norm:     4280783.781 B/op
                 ·gc.churn.Par_Survivor_Space:      0.055 MB/sec
                 ·gc.churn.Par_Survivor_Space.norm: 11.570 B/op
                 ·gc.count:                         1628.000 counts
                 ·gc.time:                          904.000 ms

Iteration   5: 187107.237 ns/op
                 ·gc.alloc.rate:                    20356.336 MB/sec
                 ·gc.alloc.rate.norm:               4194320.008 B/op
                 ·gc.churn.Par_Eden_Space:          20770.068 MB/sec
                 ·gc.churn.Par_Eden_Space.norm:     4279567.441 B/op
                 ·gc.churn.Par_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.Par_Survivor_Space.norm: 0.386 B/op
                 ·gc.count:                         1670.000 counts
                 ·gc.time:                          906.000 ms


# Run progress: 11.11% complete, ETA 00:56:10
# Fork: 2 of 3
OpenJDK 64-Bit Server VM warning: Option UseConcMarkSweepGC was deprecated in version 9.0 and will likely be removed in a future release.
# Warmup Iteration   1: 188740.851 ns/op
# Warmup Iteration   2: 182729.761 ns/op
# Warmup Iteration   3: 188401.636 ns/op
# Warmup Iteration   4: 188215.926 ns/op
# Warmup Iteration   5: 183740.694 ns/op
Iteration   1: 188462.500 ns/op
                 ·gc.alloc.rate:                    20210.956 MB/sec
                 ·gc.alloc.rate.norm:               4194320.008 B/op
                 ·gc.churn.Par_Eden_Space:          20622.119 MB/sec
                 ·gc.churn.Par_Eden_Space.norm:     4279647.375 B/op
                 ·gc.churn.Par_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.Par_Survivor_Space.norm: 1.128 B/op
                 ·gc.count:                         1658.000 counts
                 ·gc.time:                          943.000 ms

Iteration   2: 186770.028 ns/op
                 ·gc.alloc.rate:                    20394.242 MB/sec
                 ·gc.alloc.rate.norm:               4194320.008 B/op
                 ·gc.churn.Par_Eden_Space:          20808.761 MB/sec
                 ·gc.churn.Par_Eden_Space.norm:     4279570.814 B/op
                 ·gc.churn.Par_Survivor_Space:      0.049 MB/sec
                 ·gc.churn.Par_Survivor_Space.norm: 10.022 B/op
                 ·gc.count:                         1673.000 counts
                 ·gc.time:                          963.000 ms

Iteration   3: 183296.882 ns/op
                 ·gc.alloc.rate:                    20779.635 MB/sec
                 ·gc.alloc.rate.norm:               4194320.008 B/op
                 ·gc.churn.Par_Eden_Space:          21205.927 MB/sec
                 ·gc.churn.Par_Eden_Space.norm:     4280366.113 B/op
                 ·gc.churn.Par_Survivor_Space:      0.047 MB/sec
                 ·gc.churn.Par_Survivor_Space.norm: 9.562 B/op
                 ·gc.count:                         1705.000 counts
                 ·gc.time:                          965.000 ms

Iteration   4: 184804.881 ns/op
                 ·gc.alloc.rate:                    20611.149 MB/sec
                 ·gc.alloc.rate.norm:               4194320.008 B/op
                 ·gc.churn.Par_Eden_Space:          21032.822 MB/sec
                 ·gc.churn.Par_Eden_Space.norm:     4280129.436 B/op
                 ·gc.churn.Par_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.Par_Survivor_Space.norm: 0.343 B/op
                 ·gc.count:                         1691.000 counts
                 ·gc.time:                          968.000 ms

Iteration   5: 185885.254 ns/op
                 ·gc.alloc.rate:                    20490.083 MB/sec
                 ·gc.alloc.rate.norm:               4194320.008 B/op
                 ·gc.churn.Par_Eden_Space:          20906.943 MB/sec
                 ·gc.churn.Par_Eden_Space.norm:     4279651.175 B/op
                 ·gc.churn.Par_Survivor_Space:      0.046 MB/sec
                 ·gc.churn.Par_Survivor_Space.norm: 9.438 B/op
                 ·gc.count:                         1681.000 counts
                 ·gc.time:                          957.000 ms


# Run progress: 13.89% complete, ETA 00:54:25
# Fork: 3 of 3
OpenJDK 64-Bit Server VM warning: Option UseConcMarkSweepGC was deprecated in version 9.0 and will likely be removed in a future release.
# Warmup Iteration   1: 190230.939 ns/op
# Warmup Iteration   2: 189570.051 ns/op
# Warmup Iteration   3: 182997.460 ns/op
# Warmup Iteration   4: 186909.222 ns/op
# Warmup Iteration   5: 184942.568 ns/op
Iteration   1: 183024.917 ns/op
                 ·gc.alloc.rate:                    20810.769 MB/sec
                 ·gc.alloc.rate.norm:               4194320.008 B/op
                 ·gc.churn.Par_Eden_Space:          21230.716 MB/sec
                 ·gc.churn.Par_Eden_Space.norm:     4278958.522 B/op
                 ·gc.churn.Par_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.Par_Survivor_Space.norm: 0.453 B/op
                 ·gc.count:                         1707.000 counts
                 ·gc.time:                          925.000 ms

Iteration   2: 185940.615 ns/op
                 ·gc.alloc.rate:                    20483.946 MB/sec
                 ·gc.alloc.rate.norm:               4194320.008 B/op
                 ·gc.churn.Par_Eden_Space:          20906.521 MB/sec
                 ·gc.churn.Par_Eden_Space.norm:     4280846.957 B/op
                 ·gc.churn.Par_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.Par_Survivor_Space.norm: 0.345 B/op
                 ·gc.count:                         1681.000 counts
                 ·gc.time:                          924.000 ms

Iteration   3: 189591.627 ns/op
                 ·gc.alloc.rate:                    20090.972 MB/sec
                 ·gc.alloc.rate.norm:               4194320.008 B/op
                 ·gc.churn.Par_Eden_Space:          20498.110 MB/sec
                 ·gc.churn.Par_Eden_Space.norm:     4279316.669 B/op
                 ·gc.churn.Par_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.Par_Survivor_Space.norm: 0.499 B/op
                 ·gc.count:                         1648.000 counts
                 ·gc.time:                          921.000 ms

Iteration   4: 188956.384 ns/op
                 ·gc.alloc.rate:                    20158.997 MB/sec
                 ·gc.alloc.rate.norm:               4194320.008 B/op
                 ·gc.churn.Par_Eden_Space:          20573.355 MB/sec
                 ·gc.churn.Par_Eden_Space.norm:     4280532.061 B/op
                 ·gc.churn.Par_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.Par_Survivor_Space.norm: 0.429 B/op
                 ·gc.count:                         1654.000 counts
                 ·gc.time:                          917.000 ms

Iteration   5: 188735.701 ns/op
                 ·gc.alloc.rate:                    20181.025 MB/sec
                 ·gc.alloc.rate.norm:               4194320.008 B/op
                 ·gc.churn.Par_Eden_Space:          20596.220 MB/sec
                 ·gc.churn.Par_Eden_Space.norm:     4280611.994 B/op
                 ·gc.churn.Par_Survivor_Space:      0.045 MB/sec
                 ·gc.churn.Par_Survivor_Space.norm: 9.427 B/op
                 ·gc.count:                         1656.000 counts
                 ·gc.time:                          939.000 ms



Result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.concMarkSweepGC":
  186348.809 ±(99.9%) 2959.479 ns/op [Average]
  (min, avg, max) = (183024.917, 186348.809, 191986.530), stdev = 2768.299
  CI (99.9%): [183389.330, 189308.288] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.concMarkSweepGC:·gc.alloc.rate":
  20444.100 ±(99.9%) 322.630 MB/sec [Average]
  (min, avg, max) = (19840.459, 20444.100, 20810.769), stdev = 301.788
  CI (99.9%): [20121.470, 20766.729] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.concMarkSweepGC:·gc.alloc.rate.norm":
  4194320.008 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (4194320.007, 4194320.008, 4194320.008), stdev = 0.001
  CI (99.9%): [4194320.008, 4194320.008] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.concMarkSweepGC:·gc.churn.Par_Eden_Space":
  20862.124 ±(99.9%) 328.987 MB/sec [Average]
  (min, avg, max) = (20249.460, 20862.124, 21230.716), stdev = 307.734
  CI (99.9%): [20533.137, 21191.110] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.concMarkSweepGC:·gc.churn.Par_Eden_Space.norm":
  4280082.755 ±(99.9%) 716.753 B/op [Average]
  (min, avg, max) = (4278958.522, 4280082.755, 4281388.259), stdev = 670.451
  CI (99.9%): [4279366.003, 4280799.508] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.concMarkSweepGC:·gc.churn.Par_Survivor_Space":
  0.024 ±(99.9%) 0.026 MB/sec [Average]
  (min, avg, max) = (0.002, 0.024, 0.055), stdev = 0.024
  CI (99.9%): [≈ 0, 0.049] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.concMarkSweepGC:·gc.churn.Par_Survivor_Space.norm":
  4.913 ±(99.9%) 5.248 B/op [Average]
  (min, avg, max) = (0.343, 4.913, 11.570), stdev = 4.909
  CI (99.9%): [≈ 0, 10.161] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.concMarkSweepGC:·gc.count":
  25160.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (1628.000, 1677.333, 1707.000), stdev = 24.772
  CI (99.9%): [25160.000, 25160.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.concMarkSweepGC:·gc.time":
  13936.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (890.000, 929.067, 968.000), stdev = 25.347
  CI (99.9%): [13936.000, 13936.000] (assumes normal distribution)


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UseG1GC -Xmx4g
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.g1GC
# Parameters: (objectsSize = _4_KB)

# Run progress: 16.67% complete, ETA 00:52:39
# Fork: 1 of 3
# Warmup Iteration   1: 241.174 ns/op
# Warmup Iteration   2: 233.340 ns/op
# Warmup Iteration   3: 230.765 ns/op
# Warmup Iteration   4: 229.575 ns/op
# Warmup Iteration   5: 230.311 ns/op
Iteration   1: 229.170 ns/op
                 ·gc.alloc.rate:                   16294.157 MB/sec
                 ·gc.alloc.rate.norm:              4112.000 B/op
                 ·gc.churn.G1_Eden_Space:          16384.677 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     4134.844 B/op
                 ·gc.churn.G1_Survivor_Space:      0.008 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.002 B/op
                 ·gc.count:                        238.000 counts
                 ·gc.time:                         237.000 ms

Iteration   2: 229.927 ns/op
                 ·gc.alloc.rate:                   16240.676 MB/sec
                 ·gc.alloc.rate.norm:              4112.000 B/op
                 ·gc.churn.G1_Eden_Space:          16315.968 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     4131.063 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        237.000 counts
                 ·gc.time:                         237.000 ms

Iteration   3: 230.694 ns/op
                 ·gc.alloc.rate:                   16186.963 MB/sec
                 ·gc.alloc.rate.norm:              4112.000 B/op
                 ·gc.churn.G1_Eden_Space:          16247.307 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     4127.329 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        236.000 counts
                 ·gc.time:                         239.000 ms

Iteration   4: 230.949 ns/op
                 ·gc.alloc.rate:                   16169.788 MB/sec
                 ·gc.alloc.rate.norm:              4112.000 B/op
                 ·gc.churn.G1_Eden_Space:          16247.086 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     4131.657 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        236.000 counts
                 ·gc.time:                         241.000 ms

Iteration   5: 231.807 ns/op
                 ·gc.alloc.rate:                   16109.060 MB/sec
                 ·gc.alloc.rate.norm:              4112.000 B/op
                 ·gc.churn.G1_Eden_Space:          16109.563 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     4112.128 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        234.000 counts
                 ·gc.time:                         243.000 ms


# Run progress: 19.44% complete, ETA 00:50:54
# Fork: 2 of 3
# Warmup Iteration   1: 239.450 ns/op
# Warmup Iteration   2: 229.953 ns/op
# Warmup Iteration   3: 229.317 ns/op
# Warmup Iteration   4: 230.907 ns/op
# Warmup Iteration   5: 229.447 ns/op
Iteration   1: 228.945 ns/op
                 ·gc.alloc.rate:                   16310.354 MB/sec
                 ·gc.alloc.rate.norm:              4112.000 B/op
                 ·gc.churn.G1_Eden_Space:          16384.859 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     4130.784 B/op
                 ·gc.churn.G1_Survivor_Space:      0.009 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.002 B/op
                 ·gc.count:                        241.000 counts
                 ·gc.time:                         245.000 ms

Iteration   2: 231.940 ns/op
                 ·gc.alloc.rate:                   16099.358 MB/sec
                 ·gc.alloc.rate.norm:              4112.000 B/op
                 ·gc.churn.G1_Eden_Space:          16180.513 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     4132.728 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        238.000 counts
                 ·gc.time:                         243.000 ms

Iteration   3: 232.876 ns/op
                 ·gc.alloc.rate:                   16035.358 MB/sec
                 ·gc.alloc.rate.norm:              4112.000 B/op
                 ·gc.churn.G1_Eden_Space:          16045.274 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     4114.543 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        236.000 counts
                 ·gc.time:                         242.000 ms

Iteration   4: 229.742 ns/op
                 ·gc.alloc.rate:                   16255.316 MB/sec
                 ·gc.alloc.rate.norm:              4112.000 B/op
                 ·gc.churn.G1_Eden_Space:          16318.560 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     4127.999 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        240.000 counts
                 ·gc.time:                         247.000 ms

Iteration   5: 231.767 ns/op
                 ·gc.alloc.rate:                   16111.641 MB/sec
                 ·gc.alloc.rate.norm:              4112.000 B/op
                 ·gc.churn.G1_Eden_Space:          16180.906 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     4129.678 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        238.000 counts
                 ·gc.time:                         247.000 ms


# Run progress: 22.22% complete, ETA 00:49:09
# Fork: 3 of 3
# Warmup Iteration   1: 241.200 ns/op
# Warmup Iteration   2: 230.174 ns/op
# Warmup Iteration   3: 228.906 ns/op
# Warmup Iteration   4: 231.626 ns/op
# Warmup Iteration   5: 231.089 ns/op
Iteration   1: 228.973 ns/op
                 ·gc.alloc.rate:                   16308.191 MB/sec
                 ·gc.alloc.rate.norm:              4112.000 B/op
                 ·gc.churn.G1_Eden_Space:          16328.765 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     4117.188 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        223.000 counts
                 ·gc.time:                         231.000 ms

Iteration   2: 231.165 ns/op
                 ·gc.alloc.rate:                   16154.359 MB/sec
                 ·gc.alloc.rate.norm:              4112.000 B/op
                 ·gc.churn.G1_Eden_Space:          16256.306 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     4137.950 B/op
                 ·gc.churn.G1_Survivor_Space:      0.007 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.002 B/op
                 ·gc.count:                        222.000 counts
                 ·gc.time:                         232.000 ms

Iteration   3: 229.662 ns/op
                 ·gc.alloc.rate:                   16259.740 MB/sec
                 ·gc.alloc.rate.norm:              4112.000 B/op
                 ·gc.churn.G1_Eden_Space:          16329.249 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     4129.578 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        223.000 counts
                 ·gc.time:                         232.000 ms

Iteration   4: 228.977 ns/op
                 ·gc.alloc.rate:                   16308.933 MB/sec
                 ·gc.alloc.rate.norm:              4112.000 B/op
                 ·gc.churn.G1_Eden_Space:          16329.879 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     4117.281 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        223.000 counts
                 ·gc.time:                         236.000 ms

Iteration   5: 229.038 ns/op
                 ·gc.alloc.rate:                   16303.364 MB/sec
                 ·gc.alloc.rate.norm:              4112.000 B/op
                 ·gc.churn.G1_Eden_Space:          16401.721 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     4136.807 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        224.000 counts
                 ·gc.time:                         236.000 ms



Result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.g1GC":
  230.375 ±(99.9%) 1.402 ns/op [Average]
  (min, avg, max) = (228.945, 230.375, 232.876), stdev = 1.311
  CI (99.9%): [228.974, 231.777] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.g1GC:·gc.alloc.rate":
  16209.817 ±(99.9%) 98.403 MB/sec [Average]
  (min, avg, max) = (16035.358, 16209.817, 16310.354), stdev = 92.046
  CI (99.9%): [16111.414, 16308.221] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.g1GC:·gc.alloc.rate.norm":
  4112.000 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (4112.000, 4112.000, 4112.000), stdev = 0.001
  CI (99.9%): [4112.000, 4112.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.g1GC:·gc.churn.G1_Eden_Space":
  16270.709 ±(99.9%) 111.438 MB/sec [Average]
  (min, avg, max) = (16045.274, 16270.709, 16401.721), stdev = 104.239
  CI (99.9%): [16159.271, 16382.147] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.g1GC:·gc.churn.G1_Eden_Space.norm":
  4127.437 ±(99.9%) 8.770 B/op [Average]
  (min, avg, max) = (4112.128, 4127.437, 4137.950), stdev = 8.203
  CI (99.9%): [4118.667, 4136.207] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.g1GC:·gc.churn.G1_Survivor_Space":
  0.005 ±(99.9%) 0.002 MB/sec [Average]
  (min, avg, max) = (0.004, 0.005, 0.009), stdev = 0.001
  CI (99.9%): [0.004, 0.007] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.g1GC:·gc.churn.G1_Survivor_Space.norm":
  0.001 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (0.001, 0.001, 0.002), stdev = 0.001
  CI (99.9%): [0.001, 0.002] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.g1GC:·gc.count":
  3489.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (222.000, 232.600, 241.000), stdev = 7.229
  CI (99.9%): [3489.000, 3489.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.g1GC:·gc.time":
  3588.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (231.000, 239.200, 247.000), stdev = 5.321
  CI (99.9%): [3588.000, 3588.000] (assumes normal distribution)


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UseG1GC -Xmx4g
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.g1GC
# Parameters: (objectsSize = _4_MB)

# Run progress: 25.00% complete, ETA 00:47:23
# Fork: 1 of 3
# Warmup Iteration   1: 541937.844 ns/op
# Warmup Iteration   2: 853078.070 ns/op
# Warmup Iteration   3: 885615.248 ns/op
# Warmup Iteration   4: 858409.918 ns/op
# Warmup Iteration   5: 853937.603 ns/op
Iteration   1: 802119.294 ns/op
                 ·gc.alloc.rate:                   4748.652 MB/sec
                 ·gc.alloc.rate.norm:              4194320.033 B/op
                 ·gc.churn.G1_Eden_Space:          0.095 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     84.074 B/op
                 ·gc.churn.G1_Old_Gen:             6297.496 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:        5562360.159 B/op
                 ·gc.churn.G1_Survivor_Space:      0.009 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 8.109 B/op
                 ·gc.count:                        31.000 counts
                 ·gc.time:                         79.000 ms

Iteration   2: 834944.589 ns/op
                 ·gc.alloc.rate:                   4562.112 MB/sec
                 ·gc.alloc.rate.norm:              4194320.037 B/op
                 ·gc.churn.G1_Eden_Space:          0.095 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     87.498 B/op
                 ·gc.churn.G1_Old_Gen:             5430.902 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:        4993069.800 B/op
                 ·gc.churn.G1_Survivor_Space:      0.008 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 7.449 B/op
                 ·gc.count:                        24.000 counts
                 ·gc.time:                         72.000 ms

Iteration   3: 781350.045 ns/op
                 ·gc.alloc.rate:                   4875.060 MB/sec
                 ·gc.alloc.rate.norm:              4194320.040 B/op
                 ·gc.churn.G1_Eden_Space:          0.095 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     81.920 B/op
                 ·gc.churn.G1_Old_Gen:             6321.840 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:        5439075.880 B/op
                 ·gc.churn.G1_Survivor_Space:      0.009 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 7.879 B/op
                 ·gc.count:                        31.000 counts
                 ·gc.time:                         82.000 ms

Iteration   4: 833035.376 ns/op
                 ·gc.alloc.rate:                   4572.708 MB/sec
                 ·gc.alloc.rate.norm:              4194320.034 B/op
                 ·gc.churn.G1_Eden_Space:          0.095 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     87.345 B/op
                 ·gc.churn.G1_Old_Gen:             5395.429 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:        4948961.719 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 4.642 B/op
                 ·gc.count:                        21.000 counts
                 ·gc.time:                         68.000 ms

Iteration   5: 778184.497 ns/op
                 ·gc.alloc.rate:                   4894.521 MB/sec
                 ·gc.alloc.rate.norm:              4194320.032 B/op
                 ·gc.churn.G1_Eden_Space:          0.095 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     81.589 B/op
                 ·gc.churn.G1_Old_Gen:             6165.730 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:        5283672.600 B/op
                 ·gc.churn.G1_Survivor_Space:      0.008 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 6.906 B/op
                 ·gc.count:                        24.000 counts
                 ·gc.time:                         72.000 ms


# Run progress: 27.78% complete, ETA 00:45:38
# Fork: 2 of 3
# Warmup Iteration   1: 542290.269 ns/op
# Warmup Iteration   2: 811628.692 ns/op
# Warmup Iteration   3: 836449.928 ns/op
# Warmup Iteration   4: 818240.697 ns/op
# Warmup Iteration   5: 827031.401 ns/op
Iteration   1: 850805.273 ns/op
                 ·gc.alloc.rate:                   4477.134 MB/sec
                 ·gc.alloc.rate.norm:              4194320.035 B/op
                 ·gc.churn.G1_Eden_Space:          0.095 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     89.210 B/op
                 ·gc.churn.G1_Old_Gen:             5454.031 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:        5109507.833 B/op
                 ·gc.churn.G1_Survivor_Space:      0.007 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 6.170 B/op
                 ·gc.count:                        24.000 counts
                 ·gc.time:                         68.000 ms

Iteration   2: 783012.866 ns/op
                 ·gc.alloc.rate:                   4865.535 MB/sec
                 ·gc.alloc.rate.norm:              4194320.034 B/op
                 ·gc.churn.G1_Eden_Space:          0.095 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     81.754 B/op
                 ·gc.churn.G1_Old_Gen:             6332.734 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:        5459115.292 B/op
                 ·gc.churn.G1_Survivor_Space:      0.010 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 8.971 B/op
                 ·gc.count:                        33.000 counts
                 ·gc.time:                         80.000 ms

Iteration   3: 828870.055 ns/op
                 ·gc.alloc.rate:                   4595.405 MB/sec
                 ·gc.alloc.rate.norm:              4194320.042 B/op
                 ·gc.churn.G1_Eden_Space:          0.095 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     86.911 B/op
                 ·gc.churn.G1_Old_Gen:             5408.100 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:        4936083.532 B/op
                 ·gc.churn.G1_Survivor_Space:      0.008 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 7.379 B/op
                 ·gc.count:                        21.000 counts
                 ·gc.time:                         64.000 ms

Iteration   4: 777263.343 ns/op
                 ·gc.alloc.rate:                   4900.458 MB/sec
                 ·gc.alloc.rate.norm:              4194320.034 B/op
                 ·gc.churn.G1_Eden_Space:          0.095 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     81.493 B/op
                 ·gc.churn.G1_Old_Gen:             6247.895 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:        5347596.316 B/op
                 ·gc.churn.G1_Survivor_Space:      0.009 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 7.518 B/op
                 ·gc.count:                        27.000 counts
                 ·gc.time:                         78.000 ms

Iteration   5: 786274.465 ns/op
                 ·gc.alloc.rate:                   4844.422 MB/sec
                 ·gc.alloc.rate.norm:              4194320.035 B/op
                 ·gc.churn.G1_Eden_Space:          0.095 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     82.435 B/op
                 ·gc.churn.G1_Old_Gen:             6179.754 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:        5350455.789 B/op
                 ·gc.churn.G1_Survivor_Space:      0.009 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 7.767 B/op
                 ·gc.count:                        24.000 counts
                 ·gc.time:                         76.000 ms


# Run progress: 30.56% complete, ETA 00:43:53
# Fork: 3 of 3
# Warmup Iteration   1: 609601.975 ns/op
# Warmup Iteration   2: 815746.298 ns/op
# Warmup Iteration   3: 904469.873 ns/op
# Warmup Iteration   4: 876600.051 ns/op
# Warmup Iteration   5: 849891.467 ns/op
Iteration   1: 787960.481 ns/op
                 ·gc.alloc.rate:                   4834.220 MB/sec
                 ·gc.alloc.rate.norm:              4194320.032 B/op
                 ·gc.churn.G1_Eden_Space:          0.095 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     82.617 B/op
                 ·gc.churn.G1_Old_Gen:             6294.134 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:        5460986.554 B/op
                 ·gc.churn.G1_Survivor_Space:      0.012 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 10.615 B/op
                 ·gc.count:                        31.000 counts
                 ·gc.time:                         79.000 ms

Iteration   2: 837520.559 ns/op
                 ·gc.alloc.rate:                   4548.059 MB/sec
                 ·gc.alloc.rate.norm:              4194320.034 B/op
                 ·gc.churn.G1_Eden_Space:          0.095 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     87.813 B/op
                 ·gc.churn.G1_Old_Gen:             5410.342 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:        4989536.431 B/op
                 ·gc.churn.G1_Survivor_Space:      0.011 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 10.154 B/op
                 ·gc.count:                        21.000 counts
                 ·gc.time:                         63.000 ms

Iteration   3: 794883.651 ns/op
                 ·gc.alloc.rate:                   4791.844 MB/sec
                 ·gc.alloc.rate.norm:              4194320.035 B/op
                 ·gc.churn.G1_Eden_Space:          0.095 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     83.346 B/op
                 ·gc.churn.G1_Old_Gen:             6189.264 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:        5417487.749 B/op
                 ·gc.churn.G1_Survivor_Space:      0.013 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 11.484 B/op
                 ·gc.count:                        40.000 counts
                 ·gc.time:                         85.000 ms

Iteration   4: 801082.609 ns/op
                 ·gc.alloc.rate:                   4755.107 MB/sec
                 ·gc.alloc.rate.norm:              4194320.041 B/op
                 ·gc.churn.G1_Eden_Space:          0.095 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     83.994 B/op
                 ·gc.churn.G1_Old_Gen:             5850.538 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:        5160563.778 B/op
                 ·gc.churn.G1_Survivor_Space:      0.007 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 5.974 B/op
                 ·gc.count:                        26.000 counts
                 ·gc.time:                         72.000 ms

Iteration   5: 772070.846 ns/op
                 ·gc.alloc.rate:                   4933.239 MB/sec
                 ·gc.alloc.rate.norm:              4194320.034 B/op
                 ·gc.churn.G1_Eden_Space:          0.095 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     80.952 B/op
                 ·gc.churn.G1_Old_Gen:             6193.182 MB/sec
                 ·gc.churn.G1_Old_Gen.norm:        5265543.337 B/op
                 ·gc.churn.G1_Survivor_Space:      0.007 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 5.642 B/op
                 ·gc.count:                        25.000 counts
                 ·gc.time:                         72.000 ms



Result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.g1GC":
  803291.863 ±(99.9%) 28207.862 ns/op [Average]
  (min, avg, max) = (772070.846, 803291.863, 850805.273), stdev = 26385.652
  CI (99.9%): [775084.001, 831499.725] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.g1GC:·gc.alloc.rate":
  4746.565 ±(99.9%) 164.026 MB/sec [Average]
  (min, avg, max) = (4477.134, 4746.565, 4933.239), stdev = 153.430
  CI (99.9%): [4582.539, 4910.591] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.g1GC:·gc.alloc.rate.norm":
  4194320.035 ±(99.9%) 0.003 B/op [Average]
  (min, avg, max) = (4194320.032, 4194320.035, 4194320.042), stdev = 0.003
  CI (99.9%): [4194320.032, 4194320.039] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.g1GC:·gc.churn.G1_Eden_Space":
  0.095 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.095, 0.095, 0.095), stdev = 0.001
  CI (99.9%): [0.095, 0.095] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.g1GC:·gc.churn.G1_Eden_Space.norm":
  84.197 ±(99.9%) 2.977 B/op [Average]
  (min, avg, max) = (80.952, 84.197, 89.210), stdev = 2.785
  CI (99.9%): [81.220, 87.174] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.g1GC:·gc.churn.G1_Old_Gen":
  5944.758 ±(99.9%) 428.173 MB/sec [Average]
  (min, avg, max) = (5395.429, 5944.758, 6332.734), stdev = 400.513
  CI (99.9%): [5516.586, 6372.931] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.g1GC:·gc.churn.G1_Old_Gen.norm":
  5248267.785 ±(99.9%) 225214.490 B/op [Average]
  (min, avg, max) = (4936083.532, 5248267.785, 5562360.159), stdev = 210665.773
  CI (99.9%): [5023053.295, 5473482.274] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.g1GC:·gc.churn.G1_Survivor_Space":
  0.009 ±(99.9%) 0.002 MB/sec [Average]
  (min, avg, max) = (0.005, 0.009, 0.013), stdev = 0.002
  CI (99.9%): [0.006, 0.011] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.g1GC:·gc.churn.G1_Survivor_Space.norm":
  7.777 ±(99.9%) 2.026 B/op [Average]
  (min, avg, max) = (4.642, 7.777, 11.484), stdev = 1.895
  CI (99.9%): [5.751, 9.804] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.g1GC:·gc.count":
  403.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (21.000, 26.867, 40.000), stdev = 5.357
  CI (99.9%): [403.000, 403.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.g1GC:·gc.time":
  1110.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (63.000, 74.000, 85.000), stdev = 6.547
  CI (99.9%): [1110.000, 1110.000] (assumes normal distribution)


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UseParallelOldGC -Xmx4g
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.parallelOldGC
# Parameters: (objectsSize = _4_KB)

# Run progress: 33.33% complete, ETA 00:42:08
# Fork: 1 of 3
# Warmup Iteration   1: 231.480 ns/op
# Warmup Iteration   2: 221.181 ns/op
# Warmup Iteration   3: 220.594 ns/op
# Warmup Iteration   4: 220.414 ns/op
# Warmup Iteration   5: 220.718 ns/op
Iteration   1: 222.318 ns/op
                 ·gc.alloc.rate:                   16796.448 MB/sec
                 ·gc.alloc.rate.norm:              4112.000 B/op
                 ·gc.churn.PS_Eden_Space:          16785.641 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     4109.354 B/op
                 ·gc.churn.PS_Survivor_Space:      0.030 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
                 ·gc.count:                        202.000 counts
                 ·gc.time:                         90.000 ms

Iteration   2: 222.328 ns/op
                 ·gc.alloc.rate:                   16795.366 MB/sec
                 ·gc.alloc.rate.norm:              4112.000 B/op
                 ·gc.churn.PS_Eden_Space:          16799.622 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     4113.042 B/op
                 ·gc.churn.PS_Survivor_Space:      0.036 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
                 ·gc.count:                        190.000 counts
                 ·gc.time:                         93.000 ms

Iteration   3: 221.585 ns/op
                 ·gc.alloc.rate:                   16852.384 MB/sec
                 ·gc.alloc.rate.norm:              4112.000 B/op
                 ·gc.churn.PS_Eden_Space:          16821.120 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     4104.372 B/op
                 ·gc.churn.PS_Survivor_Space:      0.027 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
                 ·gc.count:                        189.000 counts
                 ·gc.time:                         90.000 ms

Iteration   4: 221.659 ns/op
                 ·gc.alloc.rate:                   16847.466 MB/sec
                 ·gc.alloc.rate.norm:              4112.000 B/op
                 ·gc.churn.PS_Eden_Space:          16897.932 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     4124.317 B/op
                 ·gc.churn.PS_Survivor_Space:      0.015 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 0.004 B/op
                 ·gc.count:                        194.000 counts
                 ·gc.time:                         92.000 ms

Iteration   5: 220.508 ns/op
                 ·gc.alloc.rate:                   16934.607 MB/sec
                 ·gc.alloc.rate.norm:              4112.000 B/op
                 ·gc.churn.PS_Eden_Space:          16980.299 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     4123.095 B/op
                 ·gc.churn.PS_Survivor_Space:      0.015 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 0.004 B/op
                 ·gc.count:                        190.000 counts
                 ·gc.time:                         89.000 ms


# Run progress: 36.11% complete, ETA 00:40:22
# Fork: 2 of 3
# Warmup Iteration   1: 228.923 ns/op
# Warmup Iteration   2: 222.214 ns/op
# Warmup Iteration   3: 221.705 ns/op
# Warmup Iteration   4: 220.761 ns/op
# Warmup Iteration   5: 222.379 ns/op
Iteration   1: 222.543 ns/op
                 ·gc.alloc.rate:                   16780.390 MB/sec
                 ·gc.alloc.rate.norm:              4112.000 B/op
                 ·gc.churn.PS_Eden_Space:          16783.140 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     4112.674 B/op
                 ·gc.churn.PS_Survivor_Space:      0.012 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 0.003 B/op
                 ·gc.count:                        200.000 counts
                 ·gc.time:                         91.000 ms

Iteration   2: 222.669 ns/op
                 ·gc.alloc.rate:                   16769.861 MB/sec
                 ·gc.alloc.rate.norm:              4112.000 B/op
                 ·gc.churn.PS_Eden_Space:          16790.100 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     4116.963 B/op
                 ·gc.churn.PS_Survivor_Space:      0.051 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
                 ·gc.count:                        190.000 counts
                 ·gc.time:                         91.000 ms

Iteration   3: 221.475 ns/op
                 ·gc.alloc.rate:                   16861.565 MB/sec
                 ·gc.alloc.rate.norm:              4112.000 B/op
                 ·gc.churn.PS_Eden_Space:          16840.730 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     4106.919 B/op
                 ·gc.churn.PS_Survivor_Space:      0.036 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
                 ·gc.count:                        189.000 counts
                 ·gc.time:                         87.000 ms

Iteration   4: 221.455 ns/op
                 ·gc.alloc.rate:                   16863.008 MB/sec
                 ·gc.alloc.rate.norm:              4112.000 B/op
                 ·gc.churn.PS_Eden_Space:          16831.670 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     4104.358 B/op
                 ·gc.churn.PS_Survivor_Space:      0.012 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 0.003 B/op
                 ·gc.count:                        182.000 counts
                 ·gc.time:                         89.000 ms

Iteration   5: 223.218 ns/op
                 ·gc.alloc.rate:                   16728.461 MB/sec
                 ·gc.alloc.rate.norm:              4112.000 B/op
                 ·gc.churn.PS_Eden_Space:          16697.631 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     4104.422 B/op
                 ·gc.churn.PS_Survivor_Space:      0.015 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 0.004 B/op
                 ·gc.count:                        205.000 counts
                 ·gc.time:                         91.000 ms


# Run progress: 38.89% complete, ETA 00:38:37
# Fork: 3 of 3
# Warmup Iteration   1: 228.586 ns/op
# Warmup Iteration   2: 221.462 ns/op
# Warmup Iteration   3: 220.846 ns/op
# Warmup Iteration   4: 220.517 ns/op
# Warmup Iteration   5: 222.563 ns/op
Iteration   1: 222.408 ns/op
                 ·gc.alloc.rate:                   16790.483 MB/sec
                 ·gc.alloc.rate.norm:              4112.000 B/op
                 ·gc.churn.PS_Eden_Space:          16754.261 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     4103.129 B/op
                 ·gc.churn.PS_Survivor_Space:      0.027 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
                 ·gc.count:                        200.000 counts
                 ·gc.time:                         91.000 ms

Iteration   2: 221.521 ns/op
                 ·gc.alloc.rate:                   16857.281 MB/sec
                 ·gc.alloc.rate.norm:              4112.000 B/op
                 ·gc.churn.PS_Eden_Space:          16800.744 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     4098.209 B/op
                 ·gc.churn.PS_Survivor_Space:      0.030 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
                 ·gc.count:                        191.000 counts
                 ·gc.time:                         90.000 ms

Iteration   3: 220.780 ns/op
                 ·gc.alloc.rate:                   16913.657 MB/sec
                 ·gc.alloc.rate.norm:              4112.000 B/op
                 ·gc.churn.PS_Eden_Space:          16972.482 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     4126.301 B/op
                 ·gc.churn.PS_Survivor_Space:      0.018 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 0.004 B/op
                 ·gc.count:                        187.000 counts
                 ·gc.time:                         90.000 ms

Iteration   4: 222.490 ns/op
                 ·gc.alloc.rate:                   16784.024 MB/sec
                 ·gc.alloc.rate.norm:              4112.000 B/op
                 ·gc.churn.PS_Eden_Space:          16796.239 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     4114.993 B/op
                 ·gc.churn.PS_Survivor_Space:      0.119 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 0.029 B/op
                 ·gc.count:                        194.000 counts
                 ·gc.time:                         90.000 ms

Iteration   5: 221.683 ns/op
                 ·gc.alloc.rate:                   16844.704 MB/sec
                 ·gc.alloc.rate.norm:              4112.000 B/op
                 ·gc.churn.PS_Eden_Space:          16874.286 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     4119.221 B/op
                 ·gc.churn.PS_Survivor_Space:      0.012 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 0.003 B/op
                 ·gc.count:                        203.000 counts
                 ·gc.time:                         93.000 ms



Result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.parallelOldGC":
  221.909 ±(99.9%) 0.789 ns/op [Average]
  (min, avg, max) = (220.508, 221.909, 223.218), stdev = 0.738
  CI (99.9%): [221.120, 222.698] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.parallelOldGC:·gc.alloc.rate":
  16827.980 ±(99.9%) 60.015 MB/sec [Average]
  (min, avg, max) = (16728.461, 16827.980, 16934.607), stdev = 56.138
  CI (99.9%): [16767.965, 16887.996] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.parallelOldGC:·gc.alloc.rate.norm":
  4112.000 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (4112.000, 4112.000, 4112.000), stdev = 0.001
  CI (99.9%): [4112.000, 4112.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.parallelOldGC:·gc.churn.PS_Eden_Space":
  16828.393 ±(99.9%) 81.596 MB/sec [Average]
  (min, avg, max) = (16697.631, 16828.393, 16980.299), stdev = 76.325
  CI (99.9%): [16746.797, 16909.989] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.parallelOldGC:·gc.churn.PS_Eden_Space.norm":
  4112.091 ±(99.9%) 9.224 B/op [Average]
  (min, avg, max) = (4098.209, 4112.091, 4126.301), stdev = 8.628
  CI (99.9%): [4102.867, 4121.315] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.parallelOldGC:·gc.churn.PS_Survivor_Space":
  0.030 ±(99.9%) 0.029 MB/sec [Average]
  (min, avg, max) = (0.012, 0.030, 0.119), stdev = 0.027
  CI (99.9%): [0.001, 0.059] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.parallelOldGC:·gc.churn.PS_Survivor_Space.norm":
  0.007 ±(99.9%) 0.007 B/op [Average]
  (min, avg, max) = (0.003, 0.007, 0.029), stdev = 0.007
  CI (99.9%): [≈ 10⁻⁴, 0.014] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.parallelOldGC:·gc.count":
  2906.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (182.000, 193.733, 205.000), stdev = 6.745
  CI (99.9%): [2906.000, 2906.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.parallelOldGC:·gc.time":
  1357.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (87.000, 90.467, 93.000), stdev = 1.552
  CI (99.9%): [1357.000, 1357.000] (assumes normal distribution)


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UseParallelOldGC -Xmx4g
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.parallelOldGC
# Parameters: (objectsSize = _4_MB)

# Run progress: 41.67% complete, ETA 00:36:52
# Fork: 1 of 3
# Warmup Iteration   1: 153864.240 ns/op
# Warmup Iteration   2: 144981.186 ns/op
# Warmup Iteration   3: 146929.213 ns/op
# Warmup Iteration   4: 144399.508 ns/op
# Warmup Iteration   5: 146060.817 ns/op
Iteration   1: 145643.311 ns/op
                 ·gc.alloc.rate:                   26153.596 MB/sec
                 ·gc.alloc.rate.norm:              4194320.006 B/op
                 ·gc.churn.PS_Eden_Space:          26165.143 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     4196171.921 B/op
                 ·gc.churn.PS_Survivor_Space:      0.060 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 9.544 B/op
                 ·gc.count:                        224.000 counts
                 ·gc.time:                         104.000 ms

Iteration   2: 144495.794 ns/op
                 ·gc.alloc.rate:                   26360.253 MB/sec
                 ·gc.alloc.rate.norm:              4194320.006 B/op
                 ·gc.churn.PS_Eden_Space:          26402.647 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     4201065.686 B/op
                 ·gc.churn.PS_Survivor_Space:      0.030 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 4.735 B/op
                 ·gc.count:                        222.000 counts
                 ·gc.time:                         105.000 ms

Iteration   3: 147634.292 ns/op
                 ·gc.alloc.rate:                   25800.620 MB/sec
                 ·gc.alloc.rate.norm:              4194320.006 B/op
                 ·gc.churn.PS_Eden_Space:          25819.622 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     4197409.161 B/op
                 ·gc.churn.PS_Survivor_Space:      0.036 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 5.805 B/op
                 ·gc.count:                        231.000 counts
                 ·gc.time:                         101.000 ms

Iteration   4: 146293.107 ns/op
                 ·gc.alloc.rate:                   26037.980 MB/sec
                 ·gc.alloc.rate.norm:              4194320.006 B/op
                 ·gc.churn.PS_Eden_Space:          26115.652 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     4206831.714 B/op
                 ·gc.churn.PS_Survivor_Space:      0.015 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 2.397 B/op
                 ·gc.count:                        223.000 counts
                 ·gc.time:                         107.000 ms

Iteration   5: 145009.240 ns/op
                 ·gc.alloc.rate:                   26266.404 MB/sec
                 ·gc.alloc.rate.norm:              4194320.006 B/op
                 ·gc.churn.PS_Eden_Space:          26355.767 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     4208589.770 B/op
                 ·gc.churn.PS_Survivor_Space:      0.027 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 4.276 B/op
                 ·gc.count:                        226.000 counts
                 ·gc.time:                         105.000 ms


# Run progress: 44.44% complete, ETA 00:35:06
# Fork: 2 of 3
# Warmup Iteration   1: 153799.606 ns/op
# Warmup Iteration   2: 147411.625 ns/op
# Warmup Iteration   3: 144186.454 ns/op
# Warmup Iteration   4: 146328.046 ns/op
# Warmup Iteration   5: 144558.040 ns/op
Iteration   1: 146706.856 ns/op
                 ·gc.alloc.rate:                   25964.406 MB/sec
                 ·gc.alloc.rate.norm:              4194320.006 B/op
                 ·gc.churn.PS_Eden_Space:          25989.824 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     4198426.007 B/op
                 ·gc.churn.PS_Survivor_Space:      0.027 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 4.326 B/op
                 ·gc.count:                        221.000 counts
                 ·gc.time:                         106.000 ms

Iteration   2: 146115.355 ns/op
                 ·gc.alloc.rate:                   26067.685 MB/sec
                 ·gc.alloc.rate.norm:              4194320.006 B/op
                 ·gc.churn.PS_Eden_Space:          26121.592 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     4202993.690 B/op
                 ·gc.churn.PS_Survivor_Space:      0.024 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 3.830 B/op
                 ·gc.count:                        217.000 counts
                 ·gc.time:                         105.000 ms

Iteration   3: 146398.517 ns/op
                 ·gc.alloc.rate:                   26018.188 MB/sec
                 ·gc.alloc.rate.norm:              4194320.006 B/op
                 ·gc.churn.PS_Eden_Space:          26018.456 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     4194363.217 B/op
                 ·gc.churn.PS_Survivor_Space:      0.048 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 7.675 B/op
                 ·gc.count:                        216.000 counts
                 ·gc.time:                         108.000 ms

Iteration   4: 145961.830 ns/op
                 ·gc.alloc.rate:                   26096.815 MB/sec
                 ·gc.alloc.rate.norm:              4194320.006 B/op
                 ·gc.churn.PS_Eden_Space:          26242.941 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     4217805.604 B/op
                 ·gc.churn.PS_Survivor_Space:      0.015 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 2.391 B/op
                 ·gc.count:                        220.000 counts
                 ·gc.time:                         105.000 ms

Iteration   5: 147060.937 ns/op
                 ·gc.alloc.rate:                   25901.116 MB/sec
                 ·gc.alloc.rate.norm:              4194320.006 B/op
                 ·gc.churn.PS_Eden_Space:          25892.072 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     4192855.587 B/op
                 ·gc.churn.PS_Survivor_Space:      0.015 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 2.409 B/op
                 ·gc.count:                        223.000 counts
                 ·gc.time:                         104.000 ms


# Run progress: 47.22% complete, ETA 00:33:21
# Fork: 3 of 3
# Warmup Iteration   1: 155331.972 ns/op
# Warmup Iteration   2: 146712.809 ns/op
# Warmup Iteration   3: 145880.756 ns/op
# Warmup Iteration   4: 147062.628 ns/op
# Warmup Iteration   5: 144621.273 ns/op
Iteration   1: 146003.265 ns/op
                 ·gc.alloc.rate:                   26089.335 MB/sec
                 ·gc.alloc.rate.norm:              4194320.006 B/op
                 ·gc.churn.PS_Eden_Space:          26225.367 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     4216189.555 B/op
                 ·gc.churn.PS_Survivor_Space:      0.045 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 7.176 B/op
                 ·gc.count:                        224.000 counts
                 ·gc.time:                         106.000 ms

Iteration   2: 146501.826 ns/op
                 ·gc.alloc.rate:                   25998.753 MB/sec
                 ·gc.alloc.rate.norm:              4194320.006 B/op
                 ·gc.churn.PS_Eden_Space:          26012.798 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     4196585.823 B/op
                 ·gc.churn.PS_Survivor_Space:      0.024 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 3.840 B/op
                 ·gc.count:                        216.000 counts
                 ·gc.time:                         105.000 ms

Iteration   3: 145902.189 ns/op
                 ·gc.alloc.rate:                   26106.347 MB/sec
                 ·gc.alloc.rate.norm:              4194320.006 B/op
                 ·gc.churn.PS_Eden_Space:          26161.686 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     4203210.898 B/op
                 ·gc.churn.PS_Survivor_Space:      0.036 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 5.737 B/op
                 ·gc.count:                        218.000 counts
                 ·gc.time:                         106.000 ms

Iteration   4: 148186.066 ns/op
                 ·gc.alloc.rate:                   25705.027 MB/sec
                 ·gc.alloc.rate.norm:              4194320.006 B/op
                 ·gc.churn.PS_Eden_Space:          25759.972 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     4203285.463 B/op
                 ·gc.churn.PS_Survivor_Space:      0.015 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 2.428 B/op
                 ·gc.count:                        219.000 counts
                 ·gc.time:                         105.000 ms

Iteration   5: 145864.790 ns/op
                 ·gc.alloc.rate:                   26112.473 MB/sec
                 ·gc.alloc.rate.norm:              4194320.006 B/op
                 ·gc.churn.PS_Eden_Space:          26211.839 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     4210280.625 B/op
                 ·gc.churn.PS_Survivor_Space:      0.012 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 1.912 B/op
                 ·gc.count:                        225.000 counts
                 ·gc.time:                         107.000 ms



Result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.parallelOldGC":
  146251.825 ±(99.9%) 991.177 ns/op [Average]
  (min, avg, max) = (144495.794, 146251.825, 148186.066), stdev = 927.148
  CI (99.9%): [145260.648, 147243.002] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.parallelOldGC:·gc.alloc.rate":
  26045.267 ±(99.9%) 175.917 MB/sec [Average]
  (min, avg, max) = (25705.027, 26045.267, 26360.253), stdev = 164.553
  CI (99.9%): [25869.350, 26221.183] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.parallelOldGC:·gc.alloc.rate.norm":
  4194320.006 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (4194320.006, 4194320.006, 4194320.006), stdev = 0.001
  CI (99.9%): [4194320.006, 4194320.006] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.parallelOldGC:·gc.churn.PS_Eden_Space":
  26099.692 ±(99.9%) 197.598 MB/sec [Average]
  (min, avg, max) = (25759.972, 26099.692, 26402.647), stdev = 184.833
  CI (99.9%): [25902.094, 26297.289] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.parallelOldGC:·gc.churn.PS_Eden_Space.norm":
  4203070.981 ±(99.9%) 8148.457 B/op [Average]
  (min, avg, max) = (4192855.587, 4203070.981, 4217805.604), stdev = 7622.072
  CI (99.9%): [4194922.524, 4211219.438] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.parallelOldGC:·gc.churn.PS_Survivor_Space":
  0.028 ±(99.9%) 0.015 MB/sec [Average]
  (min, avg, max) = (0.012, 0.028, 0.060), stdev = 0.014
  CI (99.9%): [0.013, 0.043] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.parallelOldGC:·gc.churn.PS_Survivor_Space.norm":
  4.565 ±(99.9%) 2.409 B/op [Average]
  (min, avg, max) = (1.912, 4.565, 9.544), stdev = 2.254
  CI (99.9%): [2.156, 6.975] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.parallelOldGC:·gc.count":
  3325.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (216.000, 221.667, 231.000), stdev = 4.152
  CI (99.9%): [3325.000, 3325.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.parallelOldGC:·gc.time":
  1579.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (101.000, 105.267, 108.000), stdev = 1.624
  CI (99.9%): [1579.000, 1579.000] (assumes normal distribution)


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UseSerialGC -Xmx4g
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.serialGC
# Parameters: (objectsSize = _4_KB)

# Run progress: 50.00% complete, ETA 00:31:35
# Fork: 1 of 3
# Warmup Iteration   1: 236.964 ns/op
# Warmup Iteration   2: 231.745 ns/op
# Warmup Iteration   3: 230.008 ns/op
# Warmup Iteration   4: 229.044 ns/op
# Warmup Iteration   5: 229.553 ns/op
Iteration   1: 230.147 ns/op
                 ·gc.alloc.rate:                16225.491 MB/sec
                 ·gc.alloc.rate.norm:           4112.000 B/op
                 ·gc.churn.Eden_Space:          16240.251 MB/sec
                 ·gc.churn.Eden_Space.norm:     4115.741 B/op
                 ·gc.churn.Survivor_Space:      0.001 MB/sec
                 ·gc.churn.Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                     1289.000 counts
                 ·gc.time:                      163.000 ms

Iteration   2: 228.133 ns/op
                 ·gc.alloc.rate:                16368.786 MB/sec
                 ·gc.alloc.rate.norm:           4112.000 B/op
                 ·gc.churn.Eden_Space:          16391.420 MB/sec
                 ·gc.churn.Eden_Space.norm:     4117.686 B/op
                 ·gc.churn.Survivor_Space:      0.001 MB/sec
                 ·gc.churn.Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                     1301.000 counts
                 ·gc.time:                      157.000 ms

Iteration   3: 229.853 ns/op
                 ·gc.alloc.rate:                16246.693 MB/sec
                 ·gc.alloc.rate.norm:           4112.000 B/op
                 ·gc.churn.Eden_Space:          16278.410 MB/sec
                 ·gc.churn.Eden_Space.norm:     4120.027 B/op
                 ·gc.churn.Survivor_Space:      0.001 MB/sec
                 ·gc.churn.Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                     1292.000 counts
                 ·gc.time:                      163.000 ms

Iteration   4: 231.352 ns/op
                 ·gc.alloc.rate:                16141.097 MB/sec
                 ·gc.alloc.rate.norm:           4112.000 B/op
                 ·gc.churn.Eden_Space:          16164.744 MB/sec
                 ·gc.churn.Eden_Space.norm:     4118.024 B/op
                 ·gc.churn.Survivor_Space:      0.001 MB/sec
                 ·gc.churn.Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                     1283.000 counts
                 ·gc.time:                      164.000 ms

Iteration   5: 226.186 ns/op
                 ·gc.alloc.rate:                16509.865 MB/sec
                 ·gc.alloc.rate.norm:           4112.000 B/op
                 ·gc.churn.Eden_Space:          16530.247 MB/sec
                 ·gc.churn.Eden_Space.norm:     4117.076 B/op
                 ·gc.churn.Survivor_Space:      0.001 MB/sec
                 ·gc.churn.Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                     1312.000 counts
                 ·gc.time:                      164.000 ms


# Run progress: 52.78% complete, ETA 00:29:50
# Fork: 2 of 3
# Warmup Iteration   1: 236.818 ns/op
# Warmup Iteration   2: 225.817 ns/op
# Warmup Iteration   3: 228.530 ns/op
# Warmup Iteration   4: 226.744 ns/op
# Warmup Iteration   5: 228.905 ns/op
Iteration   1: 233.030 ns/op
                 ·gc.alloc.rate:                16025.253 MB/sec
                 ·gc.alloc.rate.norm:           4112.000 B/op
                 ·gc.churn.Eden_Space:          16051.696 MB/sec
                 ·gc.churn.Eden_Space.norm:     4118.785 B/op
                 ·gc.churn.Survivor_Space:      0.001 MB/sec
                 ·gc.churn.Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                     1274.000 counts
                 ·gc.time:                      160.000 ms

Iteration   2: 232.126 ns/op
                 ·gc.alloc.rate:                16086.862 MB/sec
                 ·gc.alloc.rate.norm:           4112.000 B/op
                 ·gc.churn.Eden_Space:          16113.361 MB/sec
                 ·gc.churn.Eden_Space.norm:     4118.773 B/op
                 ·gc.churn.Survivor_Space:      0.001 MB/sec
                 ·gc.churn.Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                     1279.000 counts
                 ·gc.time:                      163.000 ms

Iteration   3: 229.937 ns/op
                 ·gc.alloc.rate:                16241.115 MB/sec
                 ·gc.alloc.rate.norm:           4112.000 B/op
                 ·gc.churn.Eden_Space:          16253.559 MB/sec
                 ·gc.churn.Eden_Space.norm:     4115.151 B/op
                 ·gc.churn.Survivor_Space:      0.001 MB/sec
                 ·gc.churn.Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                     1290.000 counts
                 ·gc.time:                      165.000 ms

Iteration   4: 223.718 ns/op
                 ·gc.alloc.rate:                16691.921 MB/sec
                 ·gc.alloc.rate.norm:           4112.000 B/op
                 ·gc.churn.Eden_Space:          16719.272 MB/sec
                 ·gc.churn.Eden_Space.norm:     4118.738 B/op
                 ·gc.churn.Survivor_Space:      0.001 MB/sec
                 ·gc.churn.Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                     1327.000 counts
                 ·gc.time:                      170.000 ms

Iteration   5: 227.893 ns/op
                 ·gc.alloc.rate:                16385.453 MB/sec
                 ·gc.alloc.rate.norm:           4112.000 B/op
                 ·gc.churn.Eden_Space:          16416.215 MB/sec
                 ·gc.churn.Eden_Space.norm:     4119.720 B/op
                 ·gc.churn.Survivor_Space:      0.001 MB/sec
                 ·gc.churn.Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                     1303.000 counts
                 ·gc.time:                      167.000 ms


# Run progress: 55.56% complete, ETA 00:28:05
# Fork: 3 of 3
# Warmup Iteration   1: 228.865 ns/op
# Warmup Iteration   2: 230.202 ns/op
# Warmup Iteration   3: 226.116 ns/op
# Warmup Iteration   4: 223.550 ns/op
# Warmup Iteration   5: 232.672 ns/op
Iteration   1: 229.428 ns/op
                 ·gc.alloc.rate:                16276.705 MB/sec
                 ·gc.alloc.rate.norm:           4112.000 B/op
                 ·gc.churn.Eden_Space:          16303.499 MB/sec
                 ·gc.churn.Eden_Space.norm:     4118.769 B/op
                 ·gc.churn.Survivor_Space:      0.001 MB/sec
                 ·gc.churn.Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                     1294.000 counts
                 ·gc.time:                      163.000 ms

Iteration   2: 230.295 ns/op
                 ·gc.alloc.rate:                16214.757 MB/sec
                 ·gc.alloc.rate.norm:           4112.000 B/op
                 ·gc.churn.Eden_Space:          16239.869 MB/sec
                 ·gc.churn.Eden_Space.norm:     4118.368 B/op
                 ·gc.churn.Survivor_Space:      0.001 MB/sec
                 ·gc.churn.Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                     1289.000 counts
                 ·gc.time:                      163.000 ms

Iteration   3: 227.610 ns/op
                 ·gc.alloc.rate:                16405.901 MB/sec
                 ·gc.alloc.rate.norm:           4112.000 B/op
                 ·gc.churn.Eden_Space:          16428.712 MB/sec
                 ·gc.churn.Eden_Space.norm:     4117.718 B/op
                 ·gc.churn.Survivor_Space:      0.001 MB/sec
                 ·gc.churn.Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                     1304.000 counts
                 ·gc.time:                      163.000 ms

Iteration   4: 228.918 ns/op
                 ·gc.alloc.rate:                16313.175 MB/sec
                 ·gc.alloc.rate.norm:           4112.000 B/op
                 ·gc.churn.Eden_Space:          16328.767 MB/sec
                 ·gc.churn.Eden_Space.norm:     4115.930 B/op
                 ·gc.churn.Survivor_Space:      0.001 MB/sec
                 ·gc.churn.Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                     1296.000 counts
                 ·gc.time:                      164.000 ms

Iteration   5: 232.553 ns/op
                 ·gc.alloc.rate:                16057.835 MB/sec
                 ·gc.alloc.rate.norm:           4112.000 B/op
                 ·gc.churn.Eden_Space:          16089.291 MB/sec
                 ·gc.churn.Eden_Space.norm:     4120.055 B/op
                 ·gc.churn.Survivor_Space:      0.001 MB/sec
                 ·gc.churn.Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                     1277.000 counts
                 ·gc.time:                      161.000 ms



Result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.serialGC":
  229.412 ±(99.9%) 2.652 ns/op [Average]
  (min, avg, max) = (223.718, 229.412, 233.030), stdev = 2.481
  CI (99.9%): [226.760, 232.064] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.serialGC:·gc.alloc.rate":
  16279.394 ±(99.9%) 189.346 MB/sec [Average]
  (min, avg, max) = (16025.253, 16279.394, 16691.921), stdev = 177.115
  CI (99.9%): [16090.047, 16468.740] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.serialGC:·gc.alloc.rate.norm":
  4112.000 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (4112.000, 4112.000, 4112.000), stdev = 0.001
  CI (99.9%): [4112.000, 4112.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.serialGC:·gc.churn.Eden_Space":
  16303.288 ±(99.9%) 188.855 MB/sec [Average]
  (min, avg, max) = (16051.696, 16303.288, 16719.272), stdev = 176.655
  CI (99.9%): [16114.432, 16492.143] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.serialGC:·gc.churn.Eden_Space.norm":
  4118.037 ±(99.9%) 1.624 B/op [Average]
  (min, avg, max) = (4115.151, 4118.037, 4120.055), stdev = 1.519
  CI (99.9%): [4116.414, 4119.661] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.serialGC:·gc.churn.Survivor_Space":
  0.001 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
  CI (99.9%): [0.001, 0.001] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.serialGC:·gc.churn.Survivor_Space.norm":
  ≈ 10⁻⁴ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.serialGC:·gc.count":
  19410.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (1274.000, 1294.000, 1327.000), stdev = 14.020
  CI (99.9%): [19410.000, 19410.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.serialGC:·gc.time":
  2450.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (157.000, 163.333, 170.000), stdev = 2.920
  CI (99.9%): [2450.000, 2450.000] (assumes normal distribution)


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UseSerialGC -Xmx4g
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.serialGC
# Parameters: (objectsSize = _4_MB)

# Run progress: 58.33% complete, ETA 00:26:19
# Fork: 1 of 3
# Warmup Iteration   1: 156346.109 ns/op
# Warmup Iteration   2: 155488.527 ns/op
# Warmup Iteration   3: 158146.512 ns/op
# Warmup Iteration   4: 153308.533 ns/op
# Warmup Iteration   5: 150975.371 ns/op
Iteration   1: 154872.013 ns/op
                 ·gc.alloc.rate:                24594.686 MB/sec
                 ·gc.alloc.rate.norm:           4194320.007 B/op
                 ·gc.churn.Eden_Space:          25100.271 MB/sec
                 ·gc.churn.Eden_Space.norm:     4280541.231 B/op
                 ·gc.churn.Survivor_Space:      0.001 MB/sec
                 ·gc.churn.Survivor_Space.norm: 0.120 B/op
                 ·gc.count:                     2018.000 counts
                 ·gc.time:                      249.000 ms

Iteration   2: 156978.656 ns/op
                 ·gc.alloc.rate:                24264.702 MB/sec
                 ·gc.alloc.rate.norm:           4194320.006 B/op
                 ·gc.churn.Eden_Space:          24763.913 MB/sec
                 ·gc.churn.Eden_Space.norm:     4280612.049 B/op
                 ·gc.churn.Survivor_Space:      0.001 MB/sec
                 ·gc.churn.Survivor_Space.norm: 0.170 B/op
                 ·gc.count:                     1991.000 counts
                 ·gc.time:                      259.000 ms

Iteration   3: 155015.893 ns/op
                 ·gc.alloc.rate:                24572.032 MB/sec
                 ·gc.alloc.rate.norm:           4194320.006 B/op
                 ·gc.churn.Eden_Space:          25075.201 MB/sec
                 ·gc.churn.Eden_Space.norm:     4280208.327 B/op
                 ·gc.churn.Survivor_Space:      0.001 MB/sec
                 ·gc.churn.Survivor_Space.norm: 0.225 B/op
                 ·gc.count:                     2016.000 counts
                 ·gc.time:                      259.000 ms

Iteration   4: 154691.379 ns/op
                 ·gc.alloc.rate:                24624.239 MB/sec
                 ·gc.alloc.rate.norm:           4194320.006 B/op
                 ·gc.churn.Eden_Space:          25125.365 MB/sec
                 ·gc.churn.Eden_Space.norm:     4279678.286 B/op
                 ·gc.churn.Survivor_Space:      0.001 MB/sec
                 ·gc.churn.Survivor_Space.norm: 0.119 B/op
                 ·gc.count:                     2020.000 counts
                 ·gc.time:                      256.000 ms

Iteration   5: 151648.120 ns/op
                 ·gc.alloc.rate:                25116.379 MB/sec
                 ·gc.alloc.rate.norm:           4194320.007 B/op
                 ·gc.churn.Eden_Space:          25633.411 MB/sec
                 ·gc.churn.Eden_Space.norm:     4280662.035 B/op
                 ·gc.churn.Survivor_Space:      0.001 MB/sec
                 ·gc.churn.Survivor_Space.norm: 0.118 B/op
                 ·gc.count:                     2061.000 counts
                 ·gc.time:                      259.000 ms


# Run progress: 61.11% complete, ETA 00:24:34
# Fork: 2 of 3
# Warmup Iteration   1: 160942.274 ns/op
# Warmup Iteration   2: 160663.818 ns/op
# Warmup Iteration   3: 156625.611 ns/op
# Warmup Iteration   4: 150817.233 ns/op
# Warmup Iteration   5: 152822.193 ns/op
Iteration   1: 153831.263 ns/op
                 ·gc.alloc.rate:                24760.646 MB/sec
                 ·gc.alloc.rate.norm:           4194320.007 B/op
                 ·gc.churn.Eden_Space:          25261.082 MB/sec
                 ·gc.churn.Eden_Space.norm:     4279091.106 B/op
                 ·gc.churn.Survivor_Space:      0.001 MB/sec
                 ·gc.churn.Survivor_Space.norm: 0.119 B/op
                 ·gc.count:                     2031.000 counts
                 ·gc.time:                      259.000 ms

Iteration   2: 151327.795 ns/op
                 ·gc.alloc.rate:                25170.622 MB/sec
                 ·gc.alloc.rate.norm:           4194320.007 B/op
                 ·gc.churn.Eden_Space:          25693.835 MB/sec
                 ·gc.churn.Eden_Space.norm:     4281505.830 B/op
                 ·gc.churn.Survivor_Space:      0.001 MB/sec
                 ·gc.churn.Survivor_Space.norm: 0.165 B/op
                 ·gc.count:                     2066.000 counts
                 ·gc.time:                      264.000 ms

Iteration   3: 150533.935 ns/op
                 ·gc.alloc.rate:                25302.407 MB/sec
                 ·gc.alloc.rate.norm:           4194320.006 B/op
                 ·gc.churn.Eden_Space:          25820.139 MB/sec
                 ·gc.churn.Eden_Space.norm:     4280143.123 B/op
                 ·gc.churn.Survivor_Space:      0.001 MB/sec
                 ·gc.churn.Survivor_Space.norm: 0.219 B/op
                 ·gc.count:                     2076.000 counts
                 ·gc.time:                      258.000 ms

Iteration   4: 147002.056 ns/op
                 ·gc.alloc.rate:                25910.713 MB/sec
                 ·gc.alloc.rate.norm:           4194320.006 B/op
                 ·gc.churn.Eden_Space:          26442.453 MB/sec
                 ·gc.churn.Eden_Space.norm:     4280395.920 B/op
                 ·gc.churn.Survivor_Space:      0.001 MB/sec
                 ·gc.churn.Survivor_Space.norm: 0.116 B/op
                 ·gc.count:                     2126.000 counts
                 ·gc.time:                      267.000 ms

Iteration   5: 146889.626 ns/op
                 ·gc.alloc.rate:                25931.307 MB/sec
                 ·gc.alloc.rate.norm:           4194320.006 B/op
                 ·gc.churn.Eden_Space:          26455.305 MB/sec
                 ·gc.churn.Eden_Space.norm:     4279075.303 B/op
                 ·gc.churn.Survivor_Space:      0.001 MB/sec
                 ·gc.churn.Survivor_Space.norm: 0.115 B/op
                 ·gc.count:                     2127.000 counts
                 ·gc.time:                      269.000 ms


# Run progress: 63.89% complete, ETA 00:22:49
# Fork: 3 of 3
# Warmup Iteration   1: 161456.886 ns/op
# Warmup Iteration   2: 154024.206 ns/op
# Warmup Iteration   3: 157410.935 ns/op
# Warmup Iteration   4: 156287.769 ns/op
# Warmup Iteration   5: 152080.903 ns/op
Iteration   1: 154506.074 ns/op
                 ·gc.alloc.rate:                24653.155 MB/sec
                 ·gc.alloc.rate.norm:           4194320.006 B/op
                 ·gc.churn.Eden_Space:          25162.277 MB/sec
                 ·gc.churn.Eden_Space.norm:     4280938.576 B/op
                 ·gc.churn.Survivor_Space:      0.001 MB/sec
                 ·gc.churn.Survivor_Space.norm: 0.119 B/op
                 ·gc.count:                     2023.000 counts
                 ·gc.time:                      256.000 ms

Iteration   2: 152239.453 ns/op
                 ·gc.alloc.rate:                25019.638 MB/sec
                 ·gc.alloc.rate.norm:           4194320.007 B/op
                 ·gc.churn.Eden_Space:          25522.264 MB/sec
                 ·gc.churn.Eden_Space.norm:     4278580.785 B/op
                 ·gc.churn.Survivor_Space:      0.001 MB/sec
                 ·gc.churn.Survivor_Space.norm: 0.166 B/op
                 ·gc.count:                     2052.000 counts
                 ·gc.time:                      258.000 ms

Iteration   3: 154234.380 ns/op
                 ·gc.alloc.rate:                24696.219 MB/sec
                 ·gc.alloc.rate.norm:           4194320.006 B/op
                 ·gc.churn.Eden_Space:          25208.547 MB/sec
                 ·gc.churn.Eden_Space.norm:     4281332.048 B/op
                 ·gc.churn.Survivor_Space:      0.001 MB/sec
                 ·gc.churn.Survivor_Space.norm: 0.224 B/op
                 ·gc.count:                     2027.000 counts
                 ·gc.time:                      263.000 ms

Iteration   4: 152806.676 ns/op
                 ·gc.alloc.rate:                24927.307 MB/sec
                 ·gc.alloc.rate.norm:           4194320.006 B/op
                 ·gc.churn.Eden_Space:          25435.805 MB/sec
                 ·gc.churn.Eden_Space.norm:     4279880.936 B/op
                 ·gc.churn.Survivor_Space:      0.001 MB/sec
                 ·gc.churn.Survivor_Space.norm: 0.117 B/op
                 ·gc.count:                     2045.000 counts
                 ·gc.time:                      253.000 ms

Iteration   5: 150825.561 ns/op
                 ·gc.alloc.rate:                25254.116 MB/sec
                 ·gc.alloc.rate.norm:           4194320.006 B/op
                 ·gc.churn.Eden_Space:          25770.860 MB/sec
                 ·gc.churn.Eden_Space.norm:     4280143.142 B/op
                 ·gc.churn.Survivor_Space:      0.001 MB/sec
                 ·gc.churn.Survivor_Space.norm: 0.117 B/op
                 ·gc.count:                     2072.000 counts
                 ·gc.time:                      265.000 ms



Result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.serialGC":
  152493.525 ±(99.9%) 3080.666 ns/op [Average]
  (min, avg, max) = (146889.626, 152493.525, 156978.656), stdev = 2881.657
  CI (99.9%): [149412.859, 155574.191] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.serialGC:·gc.alloc.rate":
  24986.545 ±(99.9%) 510.912 MB/sec [Average]
  (min, avg, max) = (24264.702, 24986.545, 25931.307), stdev = 477.907
  CI (99.9%): [24475.633, 25497.457] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.serialGC:·gc.alloc.rate.norm":
  4194320.006 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (4194320.006, 4194320.006, 4194320.007), stdev = 0.001
  CI (99.9%): [4194320.006, 4194320.007] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.serialGC:·gc.churn.Eden_Space":
  25498.049 ±(99.9%) 520.220 MB/sec [Average]
  (min, avg, max) = (24763.913, 25498.049, 26455.305), stdev = 486.614
  CI (99.9%): [24977.829, 26018.269] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.serialGC:·gc.churn.Eden_Space.norm":
  4280185.913 ±(99.9%) 883.619 B/op [Average]
  (min, avg, max) = (4278580.785, 4280185.913, 4281505.830), stdev = 826.537
  CI (99.9%): [4279302.295, 4281069.532] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.serialGC:·gc.churn.Survivor_Space":
  0.001 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
  CI (99.9%): [0.001, 0.001] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.serialGC:·gc.churn.Survivor_Space.norm":
  0.149 ±(99.9%) 0.046 B/op [Average]
  (min, avg, max) = (0.115, 0.149, 0.225), stdev = 0.043
  CI (99.9%): [0.103, 0.195] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.serialGC:·gc.count":
  30751.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (1991.000, 2050.067, 2127.000), stdev = 39.143
  CI (99.9%): [30751.000, 30751.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.serialGC:·gc.time":
  3894.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (249.000, 259.600, 269.000), stdev = 5.289
  CI (99.9%): [3894.000, 3894.000] (assumes normal distribution)


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+UseShenandoahGC -Xmx4g
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.shenandoahGC
# Parameters: (objectsSize = _4_KB)

# Run progress: 66.67% complete, ETA 00:21:03
# Fork: 1 of 3
# Warmup Iteration   1: 244.107 ns/op
# Warmup Iteration   2: 213.644 ns/op
# Warmup Iteration   3: 210.830 ns/op
# Warmup Iteration   4: 216.011 ns/op
# Warmup Iteration   5: 216.397 ns/op
Iteration   1: 215.843 ns/op
                 ·gc.alloc.rate:                                  17301.301 MB/sec
                 ·gc.alloc.rate.norm:                             4112.000 B/op
                 ·gc.churn.CodeHeap_'non-profiled_nmethods':      ≈ 10⁻⁴ MB/sec
                 ·gc.churn.CodeHeap_'non-profiled_nmethods'.norm: ≈ 10⁻⁴ B/op
                 ·gc.churn.CodeHeap_'profiled_nmethods':          ≈ 10⁻⁴ MB/sec
                 ·gc.churn.CodeHeap_'profiled_nmethods'.norm:     ≈ 10⁻⁴ B/op
                 ·gc.churn.Shenandoah:                            17156.448 MB/sec
                 ·gc.churn.Shenandoah.norm:                       4077.573 B/op
                 ·gc.count:                                       162.000 counts
                 ·gc.time:                                        224.000 ms

Iteration   2: 215.186 ns/op
                 ·gc.alloc.rate:            17354.374 MB/sec
                 ·gc.alloc.rate.norm:       4112.000 B/op
                 ·gc.churn.Shenandoah:      17149.492 MB/sec
                 ·gc.churn.Shenandoah.norm: 4063.455 B/op
                 ·gc.count:                 162.000 counts
                 ·gc.time:                  221.000 ms

Iteration   3: 214.899 ns/op
                 ·gc.alloc.rate:            17377.668 MB/sec
                 ·gc.alloc.rate.norm:       4112.000 B/op
                 ·gc.churn.Shenandoah:      17129.474 MB/sec
                 ·gc.churn.Shenandoah.norm: 4053.271 B/op
                 ·gc.count:                 162.000 counts
                 ·gc.time:                  230.000 ms

Iteration   4: 215.051 ns/op
                 ·gc.alloc.rate:                              17365.362 MB/sec
                 ·gc.alloc.rate.norm:                         4112.000 B/op
                 ·gc.churn.CodeHeap_'profiled_nmethods':      ≈ 10⁻⁴ MB/sec
                 ·gc.churn.CodeHeap_'profiled_nmethods'.norm: ≈ 10⁻⁴ B/op
                 ·gc.churn.Shenandoah:                        17084.446 MB/sec
                 ·gc.churn.Shenandoah.norm:                   4045.481 B/op
                 ·gc.count:                                   162.000 counts
                 ·gc.time:                                    220.000 ms

Iteration   5: 214.758 ns/op
                 ·gc.alloc.rate:            17388.749 MB/sec
                 ·gc.alloc.rate.norm:       4112.000 B/op
                 ·gc.churn.Shenandoah:      17384.700 MB/sec
                 ·gc.churn.Shenandoah.norm: 4111.043 B/op
                 ·gc.count:                 165.000 counts
                 ·gc.time:                  233.000 ms


# Run progress: 69.44% complete, ETA 00:19:18
# Fork: 2 of 3
# Warmup Iteration   1: 245.798 ns/op
# Warmup Iteration   2: 214.607 ns/op
# Warmup Iteration   3: 215.789 ns/op
# Warmup Iteration   4: 213.802 ns/op
# Warmup Iteration   5: 216.347 ns/op
Iteration   1: 216.415 ns/op
                 ·gc.alloc.rate:            17255.214 MB/sec
                 ·gc.alloc.rate.norm:       4112.000 B/op
                 ·gc.churn.Shenandoah:      17126.372 MB/sec
                 ·gc.churn.Shenandoah.norm: 4081.296 B/op
                 ·gc.count:                 162.000 counts
                 ·gc.time:                  219.000 ms

Iteration   2: 213.600 ns/op
                 ·gc.alloc.rate:            17482.482 MB/sec
                 ·gc.alloc.rate.norm:       4112.000 B/op
                 ·gc.churn.Shenandoah:      17125.454 MB/sec
                 ·gc.churn.Shenandoah.norm: 4028.025 B/op
                 ·gc.count:                 162.000 counts
                 ·gc.time:                  222.000 ms

Iteration   3: 212.451 ns/op
                 ·gc.alloc.rate:            17576.533 MB/sec
                 ·gc.alloc.rate.norm:       4112.000 B/op
                 ·gc.churn.Shenandoah:      17410.584 MB/sec
                 ·gc.churn.Shenandoah.norm: 4073.177 B/op
                 ·gc.count:                 165.000 counts
                 ·gc.time:                  224.000 ms

Iteration   4: 216.328 ns/op
                 ·gc.alloc.rate:                              17262.199 MB/sec
                 ·gc.alloc.rate.norm:                         4112.000 B/op
                 ·gc.churn.CodeHeap_'profiled_nmethods':      ≈ 10⁻⁴ MB/sec
                 ·gc.churn.CodeHeap_'profiled_nmethods'.norm: ≈ 10⁻⁴ B/op
                 ·gc.churn.Shenandoah:                        17350.206 MB/sec
                 ·gc.churn.Shenandoah.norm:                   4132.964 B/op
                 ·gc.count:                                   165.000 counts
                 ·gc.time:                                    233.000 ms

Iteration   5: 213.201 ns/op
                 ·gc.alloc.rate:            17514.225 MB/sec
                 ·gc.alloc.rate.norm:       4112.000 B/op
                 ·gc.churn.Shenandoah:      17342.261 MB/sec
                 ·gc.churn.Shenandoah.norm: 4071.626 B/op
                 ·gc.count:                 165.000 counts
                 ·gc.time:                  228.000 ms


# Run progress: 72.22% complete, ETA 00:17:33
# Fork: 3 of 3
# Warmup Iteration   1: 244.434 ns/op
# Warmup Iteration   2: 214.381 ns/op
# Warmup Iteration   3: 211.708 ns/op
# Warmup Iteration   4: 215.411 ns/op
# Warmup Iteration   5: 214.105 ns/op
Iteration   1: 214.271 ns/op
                 ·gc.alloc.rate:            17428.024 MB/sec
                 ·gc.alloc.rate.norm:       4112.000 B/op
                 ·gc.churn.Shenandoah:      17459.957 MB/sec
                 ·gc.churn.Shenandoah.norm: 4119.534 B/op
                 ·gc.count:                 165.000 counts
                 ·gc.time:                  215.000 ms

Iteration   2: 215.471 ns/op
                 ·gc.alloc.rate:            17330.177 MB/sec
                 ·gc.alloc.rate.norm:       4112.000 B/op
                 ·gc.churn.Shenandoah:      17132.906 MB/sec
                 ·gc.churn.Shenandoah.norm: 4065.193 B/op
                 ·gc.count:                 162.000 counts
                 ·gc.time:                  224.000 ms

Iteration   3: 213.738 ns/op
                 ·gc.alloc.rate:            17471.461 MB/sec
                 ·gc.alloc.rate.norm:       4112.000 B/op
                 ·gc.churn.Shenandoah:      17433.243 MB/sec
                 ·gc.churn.Shenandoah.norm: 4103.005 B/op
                 ·gc.count:                 165.000 counts
                 ·gc.time:                  225.000 ms

Iteration   4: 213.001 ns/op
                 ·gc.alloc.rate:                              17531.704 MB/sec
                 ·gc.alloc.rate.norm:                         4112.000 B/op
                 ·gc.churn.CodeHeap_'profiled_nmethods':      ≈ 10⁻⁴ MB/sec
                 ·gc.churn.CodeHeap_'profiled_nmethods'.norm: ≈ 10⁻⁴ B/op
                 ·gc.churn.Shenandoah:                        17371.539 MB/sec
                 ·gc.churn.Shenandoah.norm:                   4074.434 B/op
                 ·gc.count:                                   165.000 counts
                 ·gc.time:                                    225.000 ms

Iteration   5: 213.328 ns/op
                 ·gc.alloc.rate:            17504.700 MB/sec
                 ·gc.alloc.rate.norm:       4112.000 B/op
                 ·gc.churn.Shenandoah:      17350.390 MB/sec
                 ·gc.churn.Shenandoah.norm: 4075.751 B/op
                 ·gc.count:                 165.000 counts
                 ·gc.time:                  227.000 ms



Result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.shenandoahGC":
  214.503 ±(99.9%) 1.331 ns/op [Average]
  (min, avg, max) = (212.451, 214.503, 216.415), stdev = 1.245
  CI (99.9%): [213.172, 215.834] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.shenandoahGC:·gc.alloc.rate":
  17409.611 ±(99.9%) 107.782 MB/sec [Average]
  (min, avg, max) = (17255.214, 17409.611, 17576.533), stdev = 100.820
  CI (99.9%): [17301.829, 17517.394] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.shenandoahGC:·gc.alloc.rate.norm":
  4112.000 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (4112.000, 4112.000, 4112.000), stdev = 0.001
  CI (99.9%): [4112.000, 4112.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.shenandoahGC:·gc.churn.CodeHeap_'non-profiled_nmethods'":
  ≈ 10⁻⁵ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.shenandoahGC:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm":
  ≈ 10⁻⁶ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.shenandoahGC:·gc.churn.CodeHeap_'profiled_nmethods'":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.shenandoahGC:·gc.churn.CodeHeap_'profiled_nmethods'.norm":
  ≈ 10⁻⁵ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.shenandoahGC:·gc.churn.Shenandoah":
  17267.165 ±(99.9%) 147.324 MB/sec [Average]
  (min, avg, max) = (17084.446, 17267.165, 17459.957), stdev = 137.807
  CI (99.9%): [17119.841, 17414.489] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.shenandoahGC:·gc.churn.Shenandoah.norm":
  4078.388 ±(99.9%) 30.097 B/op [Average]
  (min, avg, max) = (4028.025, 4078.388, 4132.964), stdev = 28.152
  CI (99.9%): [4048.292, 4108.485] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.shenandoahGC:·gc.count":
  2454.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (162.000, 163.600, 165.000), stdev = 1.549
  CI (99.9%): [2454.000, 2454.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.shenandoahGC:·gc.time":
  3370.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (215.000, 224.667, 233.000), stdev = 5.024
  CI (99.9%): [3370.000, 3370.000] (assumes normal distribution)


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+UseShenandoahGC -Xmx4g
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.shenandoahGC
# Parameters: (objectsSize = _4_MB)

# Run progress: 75.00% complete, ETA 00:15:47
# Fork: 1 of 3
# Warmup Iteration   1: 168300.331 ns/op
# Warmup Iteration   2: 152685.061 ns/op
# Warmup Iteration   3: 151200.546 ns/op
# Warmup Iteration   4: 151670.745 ns/op
# Warmup Iteration   5: 151409.740 ns/op
Iteration   1: 155595.406 ns/op
                 ·gc.alloc.rate:            24480.707 MB/sec
                 ·gc.alloc.rate.norm:       4194320.006 B/op
                 ·gc.churn.Shenandoah:      23826.227 MB/sec
                 ·gc.churn.Shenandoah.norm: 4082186.755 B/op
                 ·gc.count:                 336.000 counts
                 ·gc.time:                  515.000 ms

Iteration   2: 152423.929 ns/op
                 ·gc.alloc.rate:            24989.643 MB/sec
                 ·gc.alloc.rate.norm:       4194320.006 B/op
                 ·gc.churn.Shenandoah:      24181.479 MB/sec
                 ·gc.churn.Shenandoah.norm: 4058675.965 B/op
                 ·gc.count:                 342.000 counts
                 ·gc.time:                  532.000 ms

Iteration   3: 152429.398 ns/op
                 ·gc.alloc.rate:            24989.943 MB/sec
                 ·gc.alloc.rate.norm:       4194320.007 B/op
                 ·gc.churn.Shenandoah:      24383.251 MB/sec
                 ·gc.churn.Shenandoah.norm: 4092492.514 B/op
                 ·gc.count:                 345.000 counts
                 ·gc.time:                  547.000 ms

Iteration   4: 153500.933 ns/op
                 ·gc.alloc.rate:            24815.689 MB/sec
                 ·gc.alloc.rate.norm:       4194320.006 B/op
                 ·gc.churn.Shenandoah:      24145.784 MB/sec
                 ·gc.churn.Shenandoah.norm: 4081093.473 B/op
                 ·gc.count:                 342.000 counts
                 ·gc.time:                  541.000 ms

Iteration   5: 153540.294 ns/op
                 ·gc.alloc.rate:            24806.714 MB/sec
                 ·gc.alloc.rate.norm:       4194320.006 B/op
                 ·gc.churn.Shenandoah:      24113.630 MB/sec
                 ·gc.churn.Shenandoah.norm: 4077133.339 B/op
                 ·gc.count:                 342.000 counts
                 ·gc.time:                  537.000 ms


# Run progress: 77.78% complete, ETA 00:14:02
# Fork: 2 of 3
# Warmup Iteration   1: 174793.145 ns/op
# Warmup Iteration   2: 158897.535 ns/op
# Warmup Iteration   3: 153343.600 ns/op
# Warmup Iteration   4: 152685.125 ns/op
# Warmup Iteration   5: 154509.807 ns/op
Iteration   1: 150298.881 ns/op
                 ·gc.alloc.rate:            25342.447 MB/sec
                 ·gc.alloc.rate.norm:       4194320.006 B/op
                 ·gc.churn.Shenandoah:      24655.807 MB/sec
                 ·gc.churn.Shenandoah.norm: 4080677.117 B/op
                 ·gc.count:                 348.000 counts
                 ·gc.time:                  555.000 ms

Iteration   2: 154027.116 ns/op
                 ·gc.alloc.rate:            24729.888 MB/sec
                 ·gc.alloc.rate.norm:       4194320.007 B/op
                 ·gc.churn.Shenandoah:      23997.347 MB/sec
                 ·gc.churn.Shenandoah.norm: 4070077.171 B/op
                 ·gc.count:                 339.000 counts
                 ·gc.time:                  528.000 ms

Iteration   3: 152051.387 ns/op
                 ·gc.alloc.rate:            25049.736 MB/sec
                 ·gc.alloc.rate.norm:       4194320.006 B/op
                 ·gc.churn.Shenandoah:      24398.538 MB/sec
                 ·gc.churn.Shenandoah.norm: 4085283.619 B/op
                 ·gc.count:                 345.000 counts
                 ·gc.time:                  559.000 ms

Iteration   4: 158012.928 ns/op
                 ·gc.alloc.rate:            24106.316 MB/sec
                 ·gc.alloc.rate.norm:       4194320.006 B/op
                 ·gc.churn.Shenandoah:      23568.161 MB/sec
                 ·gc.churn.Shenandoah.norm: 4100684.953 B/op
                 ·gc.count:                 333.000 counts
                 ·gc.time:                  515.000 ms

Iteration   5: 155175.260 ns/op
                 ·gc.alloc.rate:            24546.660 MB/sec
                 ·gc.alloc.rate.norm:       4194320.006 B/op
                 ·gc.churn.Shenandoah:      23706.886 MB/sec
                 ·gc.churn.Shenandoah.norm: 4050826.697 B/op
                 ·gc.count:                 336.000 counts
                 ·gc.time:                  516.000 ms


# Run progress: 80.56% complete, ETA 00:12:17
# Fork: 3 of 3
# Warmup Iteration   1: 173135.963 ns/op
# Warmup Iteration   2: 155062.158 ns/op
# Warmup Iteration   3: 158352.547 ns/op
# Warmup Iteration   4: 154777.922 ns/op
# Warmup Iteration   5: 156171.182 ns/op
Iteration   1: 159080.863 ns/op
                 ·gc.alloc.rate:            23944.971 MB/sec
                 ·gc.alloc.rate.norm:       4194320.006 B/op
                 ·gc.churn.Shenandoah:      23385.529 MB/sec
                 ·gc.churn.Shenandoah.norm: 4096325.332 B/op
                 ·gc.count:                 330.000 counts
                 ·gc.time:                  506.000 ms

Iteration   2: 153515.893 ns/op
                 ·gc.alloc.rate:                              24812.504 MB/sec
                 ·gc.alloc.rate.norm:                         4194320.007 B/op
                 ·gc.churn.CodeHeap_'profiled_nmethods':      ≈ 10⁻³ MB/sec
                 ·gc.churn.CodeHeap_'profiled_nmethods'.norm: 0.061 B/op
                 ·gc.churn.Shenandoah:                        24179.445 MB/sec
                 ·gc.churn.Shenandoah.norm:                   4087307.415 B/op
                 ·gc.count:                                   342.000 counts
                 ·gc.time:                                    514.000 ms

Iteration   3: 153280.038 ns/op
                 ·gc.alloc.rate:            24850.819 MB/sec
                 ·gc.alloc.rate.norm:       4194320.006 B/op
                 ·gc.churn.Shenandoah:      24195.188 MB/sec
                 ·gc.churn.Shenandoah.norm: 4083662.645 B/op
                 ·gc.count:                 342.000 counts
                 ·gc.time:                  514.000 ms

Iteration   4: 156498.383 ns/op
                 ·gc.alloc.rate:            24339.900 MB/sec
                 ·gc.alloc.rate.norm:       4194320.006 B/op
                 ·gc.churn.Shenandoah:      23744.500 MB/sec
                 ·gc.churn.Shenandoah.norm: 4091719.053 B/op
                 ·gc.count:                 336.000 counts
                 ·gc.time:                  519.000 ms

Iteration   5: 152026.955 ns/op
                 ·gc.alloc.rate:            25055.621 MB/sec
                 ·gc.alloc.rate.norm:       4194320.006 B/op
                 ·gc.churn.Shenandoah:      24350.116 MB/sec
                 ·gc.churn.Shenandoah.norm: 4076218.339 B/op
                 ·gc.count:                 345.000 counts
                 ·gc.time:                  538.000 ms



Result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.shenandoahGC":
  154097.178 ±(99.9%) 2547.521 ns/op [Average]
  (min, avg, max) = (150298.881, 154097.178, 159080.863), stdev = 2382.953
  CI (99.9%): [151549.657, 156644.698] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.shenandoahGC:·gc.alloc.rate":
  24724.104 ±(99.9%) 404.636 MB/sec [Average]
  (min, avg, max) = (23944.971, 24724.104, 25342.447), stdev = 378.497
  CI (99.9%): [24319.468, 25128.740] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.shenandoahGC:·gc.alloc.rate.norm":
  4194320.006 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (4194320.006, 4194320.006, 4194320.007), stdev = 0.001
  CI (99.9%): [4194320.006, 4194320.007] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.shenandoahGC:·gc.churn.CodeHeap_'profiled_nmethods'":
  ≈ 10⁻⁵ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.shenandoahGC:·gc.churn.CodeHeap_'profiled_nmethods'.norm":
  0.004 ±(99.9%) 0.017 B/op [Average]
  (min, avg, max) = (≈ 0, 0.004, 0.061), stdev = 0.016
  CI (99.9%): [≈ 0, 0.021] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.shenandoahGC:·gc.churn.Shenandoah":
  24055.459 ±(99.9%) 371.994 MB/sec [Average]
  (min, avg, max) = (23385.529, 24055.459, 24655.807), stdev = 347.963
  CI (99.9%): [23683.465, 24427.453] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.shenandoahGC:·gc.churn.Shenandoah.norm":
  4080957.626 ±(99.9%) 14291.553 B/op [Average]
  (min, avg, max) = (4050826.697, 4080957.626, 4100684.953), stdev = 13368.327
  CI (99.9%): [4066666.073, 4095249.178] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.shenandoahGC:·gc.count":
  5103.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (330.000, 340.200, 348.000), stdev = 5.046
  CI (99.9%): [5103.000, 5103.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.shenandoahGC:·gc.time":
  7936.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (506.000, 529.067, 559.000), stdev = 16.559
  CI (99.9%): [7936.000, 7936.000] (assumes normal distribution)


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+UseZGC -Xmx4g
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.zGC
# Parameters: (objectsSize = _4_KB)

# Run progress: 83.33% complete, ETA 00:10:32
# Fork: 1 of 3
# Warmup Iteration   1: 265.337 ns/op
# Warmup Iteration   2: 233.249 ns/op
# Warmup Iteration   3: 231.420 ns/op
# Warmup Iteration   4: 230.321 ns/op
# Warmup Iteration   5: 232.204 ns/op
Iteration   1: 234.191 ns/op
                 ·gc.alloc.rate:       15975.956 MB/sec
                 ·gc.alloc.rate.norm:  4120.000 B/op
                 ·gc.churn.ZHeap:      14647.389 MB/sec
                 ·gc.churn.ZHeap.norm: 3777.379 B/op
                 ·gc.count:            101.000 counts
                 ·gc.time:             28.000 ms

Iteration   2: 233.286 ns/op
                 ·gc.alloc.rate:       16038.162 MB/sec
                 ·gc.alloc.rate.norm:  4120.000 B/op
                 ·gc.churn.ZHeap:      14683.503 MB/sec
                 ·gc.churn.ZHeap.norm: 3772.005 B/op
                 ·gc.count:            101.000 counts
                 ·gc.time:             31.000 ms

Iteration   3: 231.869 ns/op
                 ·gc.alloc.rate:       16136.358 MB/sec
                 ·gc.alloc.rate.norm:  4120.000 B/op
                 ·gc.churn.ZHeap:      14801.241 MB/sec
                 ·gc.churn.ZHeap.norm: 3779.113 B/op
                 ·gc.count:            100.000 counts
                 ·gc.time:             29.000 ms

Iteration   4: 226.789 ns/op
                 ·gc.alloc.rate:       16497.931 MB/sec
                 ·gc.alloc.rate.norm:  4120.000 B/op
                 ·gc.churn.ZHeap:      15205.880 MB/sec
                 ·gc.churn.ZHeap.norm: 3797.338 B/op
                 ·gc.count:            100.000 counts
                 ·gc.time:             35.000 ms

Iteration   5: 230.491 ns/op
                 ·gc.alloc.rate:       16231.844 MB/sec
                 ·gc.alloc.rate.norm:  4120.000 B/op
                 ·gc.churn.ZHeap:      14870.680 MB/sec
                 ·gc.churn.ZHeap.norm: 3774.507 B/op
                 ·gc.count:            100.000 counts
                 ·gc.time:             28.000 ms


# Run progress: 86.11% complete, ETA 00:08:46
# Fork: 2 of 3
# Warmup Iteration   1: 265.177 ns/op
# Warmup Iteration   2: 229.252 ns/op
# Warmup Iteration   3: 230.618 ns/op
# Warmup Iteration   4: 231.098 ns/op
# Warmup Iteration   5: 229.282 ns/op
Iteration   1: 230.360 ns/op
                 ·gc.alloc.rate:       16241.588 MB/sec
                 ·gc.alloc.rate.norm:  4120.000 B/op
                 ·gc.churn.ZHeap:      14918.164 MB/sec
                 ·gc.churn.ZHeap.norm: 3784.287 B/op
                 ·gc.count:            100.000 counts
                 ·gc.time:             30.000 ms

Iteration   2: 232.702 ns/op
                 ·gc.alloc.rate:       16077.953 MB/sec
                 ·gc.alloc.rate.norm:  4120.000 B/op
                 ·gc.churn.ZHeap:      14743.164 MB/sec
                 ·gc.churn.ZHeap.norm: 3777.958 B/op
                 ·gc.count:            100.000 counts
                 ·gc.time:             28.000 ms

Iteration   3: 231.597 ns/op
                 ·gc.alloc.rate:       16154.905 MB/sec
                 ·gc.alloc.rate.norm:  4120.000 B/op
                 ·gc.churn.ZHeap:      14789.706 MB/sec
                 ·gc.churn.ZHeap.norm: 3771.832 B/op
                 ·gc.count:            100.000 counts
                 ·gc.time:             27.000 ms

Iteration   4: 233.020 ns/op
                 ·gc.alloc.rate:       16057.198 MB/sec
                 ·gc.alloc.rate.norm:  4120.000 B/op
                 ·gc.churn.ZHeap:      14710.765 MB/sec
                 ·gc.churn.ZHeap.norm: 3774.528 B/op
                 ·gc.count:            100.000 counts
                 ·gc.time:             27.000 ms

Iteration   5: 230.120 ns/op
                 ·gc.alloc.rate:       16258.091 MB/sec
                 ·gc.alloc.rate.norm:  4120.000 B/op
                 ·gc.churn.ZHeap:      14925.124 MB/sec
                 ·gc.churn.ZHeap.norm: 3782.210 B/op
                 ·gc.count:            101.000 counts
                 ·gc.time:             32.000 ms


# Run progress: 88.89% complete, ETA 00:07:01
# Fork: 3 of 3
# Warmup Iteration   1: 265.057 ns/op
# Warmup Iteration   2: 231.094 ns/op
# Warmup Iteration   3: 230.789 ns/op
# Warmup Iteration   4: 229.603 ns/op
# Warmup Iteration   5: 229.291 ns/op
Iteration   1: 230.295 ns/op
                 ·gc.alloc.rate:       16246.367 MB/sec
                 ·gc.alloc.rate.norm:  4120.000 B/op
                 ·gc.churn.ZHeap:      15019.184 MB/sec
                 ·gc.churn.ZHeap.norm: 3808.792 B/op
                 ·gc.count:            100.000 counts
                 ·gc.time:             28.000 ms

Iteration   2: 229.703 ns/op
                 ·gc.alloc.rate:       16287.834 MB/sec
                 ·gc.alloc.rate.norm:  4120.000 B/op
                 ·gc.churn.ZHeap:      15062.079 MB/sec
                 ·gc.churn.ZHeap.norm: 3809.946 B/op
                 ·gc.count:            100.000 counts
                 ·gc.time:             30.000 ms

Iteration   3: 230.637 ns/op
                 ·gc.alloc.rate:       16222.183 MB/sec
                 ·gc.alloc.rate.norm:  4120.000 B/op
                 ·gc.churn.ZHeap:      14958.436 MB/sec
                 ·gc.churn.ZHeap.norm: 3799.042 B/op
                 ·gc.count:            100.000 counts
                 ·gc.time:             28.000 ms

Iteration   4: 228.235 ns/op
                 ·gc.alloc.rate:       16393.436 MB/sec
                 ·gc.alloc.rate.norm:  4120.000 B/op
                 ·gc.churn.ZHeap:      15135.225 MB/sec
                 ·gc.churn.ZHeap.norm: 3803.786 B/op
                 ·gc.count:            100.000 counts
                 ·gc.time:             29.000 ms

Iteration   5: 229.008 ns/op
                 ·gc.alloc.rate:       16337.182 MB/sec
                 ·gc.alloc.rate.norm:  4120.000 B/op
                 ·gc.churn.ZHeap:      15027.472 MB/sec
                 ·gc.churn.ZHeap.norm: 3789.710 B/op
                 ·gc.count:            100.000 counts
                 ·gc.time:             30.000 ms



Result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.zGC":
  230.820 ±(99.9%) 2.140 ns/op [Average]
  (min, avg, max) = (226.789, 230.820, 234.191), stdev = 2.002
  CI (99.9%): [228.680, 232.960] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.zGC:·gc.alloc.rate":
  16210.466 ±(99.9%) 150.536 MB/sec [Average]
  (min, avg, max) = (15975.956, 16210.466, 16497.931), stdev = 140.811
  CI (99.9%): [16059.930, 16361.002] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.zGC:·gc.alloc.rate.norm":
  4120.000 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (4120.000, 4120.000, 4120.000), stdev = 0.001
  CI (99.9%): [4120.000, 4120.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.zGC:·gc.churn.ZHeap":
  14899.867 ±(99.9%) 181.574 MB/sec [Average]
  (min, avg, max) = (14647.389, 14899.867, 15205.880), stdev = 169.845
  CI (99.9%): [14718.293, 15081.442] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.zGC:·gc.churn.ZHeap.norm":
  3786.829 ±(99.9%) 14.500 B/op [Average]
  (min, avg, max) = (3771.832, 3786.829, 3809.946), stdev = 13.563
  CI (99.9%): [3772.329, 3801.329] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.zGC:·gc.count":
  1503.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (100.000, 100.200, 101.000), stdev = 0.414
  CI (99.9%): [1503.000, 1503.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.zGC:·gc.time":
  440.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (27.000, 29.333, 35.000), stdev = 2.127
  CI (99.9%): [440.000, 440.000] (assumes normal distribution)


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+UseZGC -Xmx4g
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.zGC
# Parameters: (objectsSize = _4_MB)

# Run progress: 91.67% complete, ETA 00:05:16
# Fork: 1 of 3
# Warmup Iteration   1: 193800.377 ns/op
# Warmup Iteration   2: 162106.810 ns/op
# Warmup Iteration   3: 163549.084 ns/op
# Warmup Iteration   4: 162463.591 ns/op
# Warmup Iteration   5: 163344.437 ns/op
Iteration   1: 162272.980 ns/op
                 ·gc.alloc.rate:           23473.095 MB/sec
                 ·gc.alloc.rate.norm:      4194328.010 B/op
                 ·gc.churn.Metaspace:      0.001 MB/sec
                 ·gc.churn.Metaspace.norm: 0.135 B/op
                 ·gc.churn.ZHeap:          32685.680 MB/sec
                 ·gc.churn.ZHeap.norm:     5840493.625 B/op
                 ·gc.count:                105.000 counts
                 ·gc.time:                 32.000 ms

Iteration   2: 160929.344 ns/op
                 ·gc.alloc.rate:           23669.715 MB/sec
                 ·gc.alloc.rate.norm:      4194328.009 B/op
                 ·gc.churn.Metaspace:      0.001 MB/sec
                 ·gc.churn.Metaspace.norm: 0.134 B/op
                 ·gc.churn.ZHeap:          33265.124 MB/sec
                 ·gc.churn.ZHeap.norm:     5894656.470 B/op
                 ·gc.count:                105.000 counts
                 ·gc.time:                 31.000 ms

Iteration   3: 160653.640 ns/op
                 ·gc.alloc.rate:           23710.573 MB/sec
                 ·gc.alloc.rate.norm:      4194328.009 B/op
                 ·gc.churn.Metaspace:      0.001 MB/sec
                 ·gc.churn.Metaspace.norm: 0.134 B/op
                 ·gc.churn.ZHeap:          33278.525 MB/sec
                 ·gc.churn.ZHeap.norm:     5886869.533 B/op
                 ·gc.count:                105.000 counts
                 ·gc.time:                 32.000 ms

Iteration   4: 162989.571 ns/op
                 ·gc.alloc.rate:           23370.131 MB/sec
                 ·gc.alloc.rate.norm:      4194328.010 B/op
                 ·gc.churn.Metaspace:      0.001 MB/sec
                 ·gc.churn.Metaspace.norm: 0.136 B/op
                 ·gc.churn.ZHeap:          32486.494 MB/sec
                 ·gc.churn.ZHeap.norm:     5830476.992 B/op
                 ·gc.count:                105.000 counts
                 ·gc.time:                 34.000 ms

Iteration   5: 161740.926 ns/op
                 ·gc.alloc.rate:           23550.617 MB/sec
                 ·gc.alloc.rate.norm:      4194328.010 B/op
                 ·gc.churn.Metaspace:      0.001 MB/sec
                 ·gc.churn.Metaspace.norm: 0.135 B/op
                 ·gc.churn.ZHeap:          32912.970 MB/sec
                 ·gc.churn.ZHeap.norm:     5861748.436 B/op
                 ·gc.count:                105.000 counts
                 ·gc.time:                 30.000 ms


# Run progress: 94.44% complete, ETA 00:03:30
# Fork: 2 of 3
# Warmup Iteration   1: 196120.185 ns/op
# Warmup Iteration   2: 163478.800 ns/op
# Warmup Iteration   3: 162041.930 ns/op
# Warmup Iteration   4: 163896.306 ns/op
# Warmup Iteration   5: 162368.174 ns/op
Iteration   1: 162977.548 ns/op
                 ·gc.alloc.rate:           23371.784 MB/sec
                 ·gc.alloc.rate.norm:      4194328.010 B/op
                 ·gc.churn.Metaspace:      0.001 MB/sec
                 ·gc.churn.Metaspace.norm: 0.136 B/op
                 ·gc.churn.ZHeap:          32663.406 MB/sec
                 ·gc.churn.ZHeap.norm:     5861813.429 B/op
                 ·gc.count:                105.000 counts
                 ·gc.time:                 34.000 ms

Iteration   2: 161853.167 ns/op
                 ·gc.alloc.rate:           23532.412 MB/sec
                 ·gc.alloc.rate.norm:      4194328.009 B/op
                 ·gc.churn.Metaspace:      0.001 MB/sec
                 ·gc.churn.Metaspace.norm: 0.135 B/op
                 ·gc.churn.ZHeap:          32864.521 MB/sec
                 ·gc.churn.ZHeap.norm:     5857647.922 B/op
                 ·gc.count:                105.000 counts
                 ·gc.time:                 34.000 ms

Iteration   3: 161441.145 ns/op
                 ·gc.alloc.rate:           23594.870 MB/sec
                 ·gc.alloc.rate.norm:      4194328.009 B/op
                 ·gc.churn.Metaspace:      0.001 MB/sec
                 ·gc.churn.Metaspace.norm: 0.134 B/op
                 ·gc.churn.ZHeap:          33024.058 MB/sec
                 ·gc.churn.ZHeap.norm:     5870502.122 B/op
                 ·gc.count:                105.000 counts
                 ·gc.time:                 34.000 ms

Iteration   4: 162181.381 ns/op
                 ·gc.alloc.rate:           23487.148 MB/sec
                 ·gc.alloc.rate.norm:      4194328.009 B/op
                 ·gc.churn.Metaspace:      0.001 MB/sec
                 ·gc.churn.Metaspace.norm: 0.135 B/op
                 ·gc.churn.ZHeap:          32850.852 MB/sec
                 ·gc.churn.ZHeap.norm:     5866495.502 B/op
                 ·gc.count:                105.000 counts
                 ·gc.time:                 34.000 ms

Iteration   5: 162359.519 ns/op
                 ·gc.alloc.rate:           23460.065 MB/sec
                 ·gc.alloc.rate.norm:      4194328.009 B/op
                 ·gc.churn.Metaspace:      0.001 MB/sec
                 ·gc.churn.Metaspace.norm: 0.135 B/op
                 ·gc.churn.ZHeap:          32830.724 MB/sec
                 ·gc.churn.ZHeap.norm:     5869669.479 B/op
                 ·gc.count:                105.000 counts
                 ·gc.time:                 37.000 ms


# Run progress: 97.22% complete, ETA 00:01:45
# Fork: 3 of 3
# Warmup Iteration   1: 197254.144 ns/op
# Warmup Iteration   2: 162591.318 ns/op
# Warmup Iteration   3: 161882.612 ns/op
# Warmup Iteration   4: 162148.959 ns/op
# Warmup Iteration   5: 162078.540 ns/op
Iteration   1: 162124.755 ns/op
                 ·gc.alloc.rate:           23494.492 MB/sec
                 ·gc.alloc.rate.norm:      4194328.010 B/op
                 ·gc.churn.Metaspace:      0.001 MB/sec
                 ·gc.churn.Metaspace.norm: 0.135 B/op
                 ·gc.churn.ZHeap:          32855.308 MB/sec
                 ·gc.churn.ZHeap.norm:     5865457.126 B/op
                 ·gc.count:                105.000 counts
                 ·gc.time:                 32.000 ms

Iteration   2: 161179.360 ns/op
                 ·gc.alloc.rate:           23632.328 MB/sec
                 ·gc.alloc.rate.norm:      4194328.009 B/op
                 ·gc.churn.Metaspace:      0.001 MB/sec
                 ·gc.churn.Metaspace.norm: 0.134 B/op
                 ·gc.churn.ZHeap:          33172.139 MB/sec
                 ·gc.churn.ZHeap.norm:     5887478.939 B/op
                 ·gc.count:                105.000 counts
                 ·gc.time:                 33.000 ms

Iteration   3: 163785.057 ns/op
                 ·gc.alloc.rate:           23256.803 MB/sec
                 ·gc.alloc.rate.norm:      4194328.010 B/op
                 ·gc.churn.Metaspace:      0.001 MB/sec
                 ·gc.churn.Metaspace.norm: 0.136 B/op
                 ·gc.churn.ZHeap:          32293.016 MB/sec
                 ·gc.churn.ZHeap.norm:     5823994.918 B/op
                 ·gc.count:                105.000 counts
                 ·gc.time:                 34.000 ms

Iteration   4: 163578.531 ns/op
                 ·gc.alloc.rate:           23285.820 MB/sec
                 ·gc.alloc.rate.norm:      4194328.010 B/op
                 ·gc.churn.Metaspace:      0.001 MB/sec
                 ·gc.churn.Metaspace.norm: 0.136 B/op
                 ·gc.churn.ZHeap:          32377.182 MB/sec
                 ·gc.churn.ZHeap.norm:     5831897.878 B/op
                 ·gc.count:                105.000 counts
                 ·gc.time:                 35.000 ms

Iteration   5: 162851.004 ns/op
                 ·gc.alloc.rate:           23388.351 MB/sec
                 ·gc.alloc.rate.norm:      4194328.010 B/op
                 ·gc.churn.Metaspace:      0.001 MB/sec
                 ·gc.churn.Metaspace.norm: 0.135 B/op
                 ·gc.churn.ZHeap:          32543.514 MB/sec
                 ·gc.churn.ZHeap.norm:     5836160.677 B/op
                 ·gc.count:                105.000 counts
                 ·gc.time:                 32.000 ms



Result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.zGC":
  162194.528 ±(99.9%) 992.036 ns/op [Average]
  (min, avg, max) = (160653.640, 162194.528, 163785.057), stdev = 927.951
  CI (99.9%): [161202.493, 163186.564] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.zGC:·gc.alloc.rate":
  23485.214 ±(99.9%) 143.796 MB/sec [Average]
  (min, avg, max) = (23256.803, 23485.214, 23710.573), stdev = 134.507
  CI (99.9%): [23341.417, 23629.010] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.zGC:·gc.alloc.rate.norm":
  4194328.010 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (4194328.009, 4194328.010, 4194328.010), stdev = 0.001
  CI (99.9%): [4194328.009, 4194328.010] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.zGC:·gc.churn.Metaspace":
  0.001 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
  CI (99.9%): [0.001, 0.001] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.zGC:·gc.churn.Metaspace.norm":
  0.135 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (0.134, 0.135, 0.136), stdev = 0.001
  CI (99.9%): [0.134, 0.136] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.zGC:·gc.churn.ZHeap":
  32806.901 ±(99.9%) 324.315 MB/sec [Average]
  (min, avg, max) = (32293.016, 32806.901, 33278.525), stdev = 303.365
  CI (99.9%): [32482.586, 33131.216] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.zGC:·gc.churn.ZHeap.norm":
  5859024.203 ±(99.9%) 23661.234 B/op [Average]
  (min, avg, max) = (5823994.918, 5859024.203, 5894656.470), stdev = 22132.733
  CI (99.9%): [5835362.969, 5882685.437] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.zGC:·gc.count":
  1575.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (105.000, 105.000, 105.000), stdev = 0.001
  CI (99.9%): [1575.000, 1575.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.HeapMemoryBandwidthAllocatorBenchmark.zGC:·gc.time":
  498.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (30.000, 33.200, 37.000), stdev = 1.740
  CI (99.9%): [498.000, 498.000] (assumes normal distribution)


# Run complete. Total time: 01:03:14

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                                                                           (objectsSize)  Mode  Cnt        Score        Error   Units
HeapMemoryBandwidthAllocatorBenchmark.concMarkSweepGC                                                       _4_KB  avgt   15      255.317 ±      2.539   ns/op
HeapMemoryBandwidthAllocatorBenchmark.concMarkSweepGC:·gc.alloc.rate                                        _4_KB  avgt   15    14627.275 ±    146.363  MB/sec
HeapMemoryBandwidthAllocatorBenchmark.concMarkSweepGC:·gc.alloc.rate.norm                                   _4_KB  avgt   15     4112.000 ±      0.001    B/op
HeapMemoryBandwidthAllocatorBenchmark.concMarkSweepGC:·gc.churn.Par_Eden_Space                              _4_KB  avgt   15    14647.827 ±    147.888  MB/sec
HeapMemoryBandwidthAllocatorBenchmark.concMarkSweepGC:·gc.churn.Par_Eden_Space.norm                         _4_KB  avgt   15     4117.775 ±      1.706    B/op
HeapMemoryBandwidthAllocatorBenchmark.concMarkSweepGC:·gc.churn.Par_Survivor_Space                          _4_KB  avgt   15        0.013 ±      0.020  MB/sec
HeapMemoryBandwidthAllocatorBenchmark.concMarkSweepGC:·gc.churn.Par_Survivor_Space.norm                     _4_KB  avgt   15        0.004 ±      0.006    B/op
HeapMemoryBandwidthAllocatorBenchmark.concMarkSweepGC:·gc.count                                             _4_KB  avgt   15    17439.000               counts
HeapMemoryBandwidthAllocatorBenchmark.concMarkSweepGC:·gc.time                                              _4_KB  avgt   15     9618.000                   ms
HeapMemoryBandwidthAllocatorBenchmark.concMarkSweepGC                                                       _4_MB  avgt   15   186348.809 ±   2959.479   ns/op
HeapMemoryBandwidthAllocatorBenchmark.concMarkSweepGC:·gc.alloc.rate                                        _4_MB  avgt   15    20444.100 ±    322.630  MB/sec
HeapMemoryBandwidthAllocatorBenchmark.concMarkSweepGC:·gc.alloc.rate.norm                                   _4_MB  avgt   15  4194320.008 ±      0.001    B/op
HeapMemoryBandwidthAllocatorBenchmark.concMarkSweepGC:·gc.churn.Par_Eden_Space                              _4_MB  avgt   15    20862.124 ±    328.987  MB/sec
HeapMemoryBandwidthAllocatorBenchmark.concMarkSweepGC:·gc.churn.Par_Eden_Space.norm                         _4_MB  avgt   15  4280082.755 ±    716.753    B/op
HeapMemoryBandwidthAllocatorBenchmark.concMarkSweepGC:·gc.churn.Par_Survivor_Space                          _4_MB  avgt   15        0.024 ±      0.026  MB/sec
HeapMemoryBandwidthAllocatorBenchmark.concMarkSweepGC:·gc.churn.Par_Survivor_Space.norm                     _4_MB  avgt   15        4.913 ±      5.248    B/op
HeapMemoryBandwidthAllocatorBenchmark.concMarkSweepGC:·gc.count                                             _4_MB  avgt   15    25160.000               counts
HeapMemoryBandwidthAllocatorBenchmark.concMarkSweepGC:·gc.time                                              _4_MB  avgt   15    13936.000                   ms
HeapMemoryBandwidthAllocatorBenchmark.g1GC                                                                  _4_KB  avgt   15      230.375 ±      1.402   ns/op
HeapMemoryBandwidthAllocatorBenchmark.g1GC:·gc.alloc.rate                                                   _4_KB  avgt   15    16209.817 ±     98.403  MB/sec
HeapMemoryBandwidthAllocatorBenchmark.g1GC:·gc.alloc.rate.norm                                              _4_KB  avgt   15     4112.000 ±      0.001    B/op
HeapMemoryBandwidthAllocatorBenchmark.g1GC:·gc.churn.G1_Eden_Space                                          _4_KB  avgt   15    16270.709 ±    111.438  MB/sec
HeapMemoryBandwidthAllocatorBenchmark.g1GC:·gc.churn.G1_Eden_Space.norm                                     _4_KB  avgt   15     4127.437 ±      8.770    B/op
HeapMemoryBandwidthAllocatorBenchmark.g1GC:·gc.churn.G1_Survivor_Space                                      _4_KB  avgt   15        0.005 ±      0.002  MB/sec
HeapMemoryBandwidthAllocatorBenchmark.g1GC:·gc.churn.G1_Survivor_Space.norm                                 _4_KB  avgt   15        0.001 ±      0.001    B/op
HeapMemoryBandwidthAllocatorBenchmark.g1GC:·gc.count                                                        _4_KB  avgt   15     3489.000               counts
HeapMemoryBandwidthAllocatorBenchmark.g1GC:·gc.time                                                         _4_KB  avgt   15     3588.000                   ms
HeapMemoryBandwidthAllocatorBenchmark.g1GC                                                                  _4_MB  avgt   15   803291.863 ±  28207.862   ns/op
HeapMemoryBandwidthAllocatorBenchmark.g1GC:·gc.alloc.rate                                                   _4_MB  avgt   15     4746.565 ±    164.026  MB/sec
HeapMemoryBandwidthAllocatorBenchmark.g1GC:·gc.alloc.rate.norm                                              _4_MB  avgt   15  4194320.035 ±      0.003    B/op
HeapMemoryBandwidthAllocatorBenchmark.g1GC:·gc.churn.G1_Eden_Space                                          _4_MB  avgt   15        0.095 ±      0.001  MB/sec
HeapMemoryBandwidthAllocatorBenchmark.g1GC:·gc.churn.G1_Eden_Space.norm                                     _4_MB  avgt   15       84.197 ±      2.977    B/op
HeapMemoryBandwidthAllocatorBenchmark.g1GC:·gc.churn.G1_Old_Gen                                             _4_MB  avgt   15     5944.758 ±    428.173  MB/sec
HeapMemoryBandwidthAllocatorBenchmark.g1GC:·gc.churn.G1_Old_Gen.norm                                        _4_MB  avgt   15  5248267.785 ± 225214.490    B/op
HeapMemoryBandwidthAllocatorBenchmark.g1GC:·gc.churn.G1_Survivor_Space                                      _4_MB  avgt   15        0.009 ±      0.002  MB/sec
HeapMemoryBandwidthAllocatorBenchmark.g1GC:·gc.churn.G1_Survivor_Space.norm                                 _4_MB  avgt   15        7.777 ±      2.026    B/op
HeapMemoryBandwidthAllocatorBenchmark.g1GC:·gc.count                                                        _4_MB  avgt   15      403.000               counts
HeapMemoryBandwidthAllocatorBenchmark.g1GC:·gc.time                                                         _4_MB  avgt   15     1110.000                   ms
HeapMemoryBandwidthAllocatorBenchmark.parallelOldGC                                                         _4_KB  avgt   15      221.909 ±      0.789   ns/op
HeapMemoryBandwidthAllocatorBenchmark.parallelOldGC:·gc.alloc.rate                                          _4_KB  avgt   15    16827.980 ±     60.015  MB/sec
HeapMemoryBandwidthAllocatorBenchmark.parallelOldGC:·gc.alloc.rate.norm                                     _4_KB  avgt   15     4112.000 ±      0.001    B/op
HeapMemoryBandwidthAllocatorBenchmark.parallelOldGC:·gc.churn.PS_Eden_Space                                 _4_KB  avgt   15    16828.393 ±     81.596  MB/sec
HeapMemoryBandwidthAllocatorBenchmark.parallelOldGC:·gc.churn.PS_Eden_Space.norm                            _4_KB  avgt   15     4112.091 ±      9.224    B/op
HeapMemoryBandwidthAllocatorBenchmark.parallelOldGC:·gc.churn.PS_Survivor_Space                             _4_KB  avgt   15        0.030 ±      0.029  MB/sec
HeapMemoryBandwidthAllocatorBenchmark.parallelOldGC:·gc.churn.PS_Survivor_Space.norm                        _4_KB  avgt   15        0.007 ±      0.007    B/op
HeapMemoryBandwidthAllocatorBenchmark.parallelOldGC:·gc.count                                               _4_KB  avgt   15     2906.000               counts
HeapMemoryBandwidthAllocatorBenchmark.parallelOldGC:·gc.time                                                _4_KB  avgt   15     1357.000                   ms
HeapMemoryBandwidthAllocatorBenchmark.parallelOldGC                                                         _4_MB  avgt   15   146251.825 ±    991.177   ns/op
HeapMemoryBandwidthAllocatorBenchmark.parallelOldGC:·gc.alloc.rate                                          _4_MB  avgt   15    26045.267 ±    175.917  MB/sec
HeapMemoryBandwidthAllocatorBenchmark.parallelOldGC:·gc.alloc.rate.norm                                     _4_MB  avgt   15  4194320.006 ±      0.001    B/op
HeapMemoryBandwidthAllocatorBenchmark.parallelOldGC:·gc.churn.PS_Eden_Space                                 _4_MB  avgt   15    26099.692 ±    197.598  MB/sec
HeapMemoryBandwidthAllocatorBenchmark.parallelOldGC:·gc.churn.PS_Eden_Space.norm                            _4_MB  avgt   15  4203070.981 ±   8148.457    B/op
HeapMemoryBandwidthAllocatorBenchmark.parallelOldGC:·gc.churn.PS_Survivor_Space                             _4_MB  avgt   15        0.028 ±      0.015  MB/sec
HeapMemoryBandwidthAllocatorBenchmark.parallelOldGC:·gc.churn.PS_Survivor_Space.norm                        _4_MB  avgt   15        4.565 ±      2.409    B/op
HeapMemoryBandwidthAllocatorBenchmark.parallelOldGC:·gc.count                                               _4_MB  avgt   15     3325.000               counts
HeapMemoryBandwidthAllocatorBenchmark.parallelOldGC:·gc.time                                                _4_MB  avgt   15     1579.000                   ms
HeapMemoryBandwidthAllocatorBenchmark.serialGC                                                              _4_KB  avgt   15      229.412 ±      2.652   ns/op
HeapMemoryBandwidthAllocatorBenchmark.serialGC:·gc.alloc.rate                                               _4_KB  avgt   15    16279.394 ±    189.346  MB/sec
HeapMemoryBandwidthAllocatorBenchmark.serialGC:·gc.alloc.rate.norm                                          _4_KB  avgt   15     4112.000 ±      0.001    B/op
HeapMemoryBandwidthAllocatorBenchmark.serialGC:·gc.churn.Eden_Space                                         _4_KB  avgt   15    16303.288 ±    188.855  MB/sec
HeapMemoryBandwidthAllocatorBenchmark.serialGC:·gc.churn.Eden_Space.norm                                    _4_KB  avgt   15     4118.037 ±      1.624    B/op
HeapMemoryBandwidthAllocatorBenchmark.serialGC:·gc.churn.Survivor_Space                                     _4_KB  avgt   15        0.001 ±      0.001  MB/sec
HeapMemoryBandwidthAllocatorBenchmark.serialGC:·gc.churn.Survivor_Space.norm                                _4_KB  avgt   15       ≈ 10⁻⁴                 B/op
HeapMemoryBandwidthAllocatorBenchmark.serialGC:·gc.count                                                    _4_KB  avgt   15    19410.000               counts
HeapMemoryBandwidthAllocatorBenchmark.serialGC:·gc.time                                                     _4_KB  avgt   15     2450.000                   ms
HeapMemoryBandwidthAllocatorBenchmark.serialGC                                                              _4_MB  avgt   15   152493.525 ±   3080.666   ns/op
HeapMemoryBandwidthAllocatorBenchmark.serialGC:·gc.alloc.rate                                               _4_MB  avgt   15    24986.545 ±    510.912  MB/sec
HeapMemoryBandwidthAllocatorBenchmark.serialGC:·gc.alloc.rate.norm                                          _4_MB  avgt   15  4194320.006 ±      0.001    B/op
HeapMemoryBandwidthAllocatorBenchmark.serialGC:·gc.churn.Eden_Space                                         _4_MB  avgt   15    25498.049 ±    520.220  MB/sec
HeapMemoryBandwidthAllocatorBenchmark.serialGC:·gc.churn.Eden_Space.norm                                    _4_MB  avgt   15  4280185.913 ±    883.619    B/op
HeapMemoryBandwidthAllocatorBenchmark.serialGC:·gc.churn.Survivor_Space                                     _4_MB  avgt   15        0.001 ±      0.001  MB/sec
HeapMemoryBandwidthAllocatorBenchmark.serialGC:·gc.churn.Survivor_Space.norm                                _4_MB  avgt   15        0.149 ±      0.046    B/op
HeapMemoryBandwidthAllocatorBenchmark.serialGC:·gc.count                                                    _4_MB  avgt   15    30751.000               counts
HeapMemoryBandwidthAllocatorBenchmark.serialGC:·gc.time                                                     _4_MB  avgt   15     3894.000                   ms
HeapMemoryBandwidthAllocatorBenchmark.shenandoahGC                                                          _4_KB  avgt   15      214.503 ±      1.331   ns/op
HeapMemoryBandwidthAllocatorBenchmark.shenandoahGC:·gc.alloc.rate                                           _4_KB  avgt   15    17409.611 ±    107.782  MB/sec
HeapMemoryBandwidthAllocatorBenchmark.shenandoahGC:·gc.alloc.rate.norm                                      _4_KB  avgt   15     4112.000 ±      0.001    B/op
HeapMemoryBandwidthAllocatorBenchmark.shenandoahGC:·gc.churn.CodeHeap_'non-profiled_nmethods'               _4_KB  avgt   15       ≈ 10⁻⁵               MB/sec
HeapMemoryBandwidthAllocatorBenchmark.shenandoahGC:·gc.churn.CodeHeap_'non-profiled_nmethods'.norm          _4_KB  avgt   15       ≈ 10⁻⁶                 B/op
HeapMemoryBandwidthAllocatorBenchmark.shenandoahGC:·gc.churn.CodeHeap_'profiled_nmethods'                   _4_KB  avgt   15       ≈ 10⁻⁴               MB/sec
HeapMemoryBandwidthAllocatorBenchmark.shenandoahGC:·gc.churn.CodeHeap_'profiled_nmethods'.norm              _4_KB  avgt   15       ≈ 10⁻⁵                 B/op
HeapMemoryBandwidthAllocatorBenchmark.shenandoahGC:·gc.churn.Shenandoah                                     _4_KB  avgt   15    17267.165 ±    147.324  MB/sec
HeapMemoryBandwidthAllocatorBenchmark.shenandoahGC:·gc.churn.Shenandoah.norm                                _4_KB  avgt   15     4078.388 ±     30.097    B/op
HeapMemoryBandwidthAllocatorBenchmark.shenandoahGC:·gc.count                                                _4_KB  avgt   15     2454.000               counts
HeapMemoryBandwidthAllocatorBenchmark.shenandoahGC:·gc.time                                                 _4_KB  avgt   15     3370.000                   ms
HeapMemoryBandwidthAllocatorBenchmark.shenandoahGC                                                          _4_MB  avgt   15   154097.178 ±   2547.521   ns/op
HeapMemoryBandwidthAllocatorBenchmark.shenandoahGC:·gc.alloc.rate                                           _4_MB  avgt   15    24724.104 ±    404.636  MB/sec
HeapMemoryBandwidthAllocatorBenchmark.shenandoahGC:·gc.alloc.rate.norm                                      _4_MB  avgt   15  4194320.006 ±      0.001    B/op
HeapMemoryBandwidthAllocatorBenchmark.shenandoahGC:·gc.churn.CodeHeap_'profiled_nmethods'                   _4_MB  avgt   15       ≈ 10⁻⁵               MB/sec
HeapMemoryBandwidthAllocatorBenchmark.shenandoahGC:·gc.churn.CodeHeap_'profiled_nmethods'.norm              _4_MB  avgt   15        0.004 ±      0.017    B/op
HeapMemoryBandwidthAllocatorBenchmark.shenandoahGC:·gc.churn.Shenandoah                                     _4_MB  avgt   15    24055.459 ±    371.994  MB/sec
HeapMemoryBandwidthAllocatorBenchmark.shenandoahGC:·gc.churn.Shenandoah.norm                                _4_MB  avgt   15  4080957.626 ±  14291.553    B/op
HeapMemoryBandwidthAllocatorBenchmark.shenandoahGC:·gc.count                                                _4_MB  avgt   15     5103.000               counts
HeapMemoryBandwidthAllocatorBenchmark.shenandoahGC:·gc.time                                                 _4_MB  avgt   15     7936.000                   ms
HeapMemoryBandwidthAllocatorBenchmark.zGC                                                                   _4_KB  avgt   15      230.820 ±      2.140   ns/op
HeapMemoryBandwidthAllocatorBenchmark.zGC:·gc.alloc.rate                                                    _4_KB  avgt   15    16210.466 ±    150.536  MB/sec
HeapMemoryBandwidthAllocatorBenchmark.zGC:·gc.alloc.rate.norm                                               _4_KB  avgt   15     4120.000 ±      0.001    B/op
HeapMemoryBandwidthAllocatorBenchmark.zGC:·gc.churn.ZHeap                                                   _4_KB  avgt   15    14899.867 ±    181.574  MB/sec
HeapMemoryBandwidthAllocatorBenchmark.zGC:·gc.churn.ZHeap.norm                                              _4_KB  avgt   15     3786.829 ±     14.500    B/op
HeapMemoryBandwidthAllocatorBenchmark.zGC:·gc.count                                                         _4_KB  avgt   15     1503.000               counts
HeapMemoryBandwidthAllocatorBenchmark.zGC:·gc.time                                                          _4_KB  avgt   15      440.000                   ms
HeapMemoryBandwidthAllocatorBenchmark.zGC                                                                   _4_MB  avgt   15   162194.528 ±    992.036   ns/op
HeapMemoryBandwidthAllocatorBenchmark.zGC:·gc.alloc.rate                                                    _4_MB  avgt   15    23485.214 ±    143.796  MB/sec
HeapMemoryBandwidthAllocatorBenchmark.zGC:·gc.alloc.rate.norm                                               _4_MB  avgt   15  4194328.010 ±      0.001    B/op
HeapMemoryBandwidthAllocatorBenchmark.zGC:·gc.churn.Metaspace                                               _4_MB  avgt   15        0.001 ±      0.001  MB/sec
HeapMemoryBandwidthAllocatorBenchmark.zGC:·gc.churn.Metaspace.norm                                          _4_MB  avgt   15        0.135 ±      0.001    B/op
HeapMemoryBandwidthAllocatorBenchmark.zGC:·gc.churn.ZHeap                                                   _4_MB  avgt   15    32806.901 ±    324.315  MB/sec
HeapMemoryBandwidthAllocatorBenchmark.zGC:·gc.churn.ZHeap.norm                                              _4_MB  avgt   15  5859024.203 ±  23661.234    B/op
HeapMemoryBandwidthAllocatorBenchmark.zGC:·gc.count                                                         _4_MB  avgt   15     1575.000               counts
HeapMemoryBandwidthAllocatorBenchmark.zGC:·gc.time                                                          _4_MB  avgt   15      498.000                   ms

Benchmark result is saved to results/report-openjdk-13/hotspotvm_gc/HeapMemoryBandwidthAllocatorBenchmark.json
Running java  -jar benchmarks/target/benchmarks.jar .*ReadBarriersChainOfClassesBenchmark.* -prof gc -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_gc/ReadBarriersChainOfClassesBenchmark.json
# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UseConcMarkSweepGC
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.ReadBarriersChainOfClassesBenchmark.concMarkSweepGC

# Run progress: 0.00% complete, ETA 00:35:00
# Fork: 1 of 3
OpenJDK 64-Bit Server VM warning: Option UseConcMarkSweepGC was deprecated in version 9.0 and will likely be removed in a future release.
# Warmup Iteration   1: 37.532 ops/us
# Warmup Iteration   2: 33.992 ops/us
# Warmup Iteration   3: 36.878 ops/us
# Warmup Iteration   4: 42.019 ops/us
# Warmup Iteration   5: 40.111 ops/us
Iteration   1: 35.421 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 36.731 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 41.973 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 42.054 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 41.942 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 4.76% complete, ETA 00:35:06
# Fork: 2 of 3
OpenJDK 64-Bit Server VM warning: Option UseConcMarkSweepGC was deprecated in version 9.0 and will likely be removed in a future release.
# Warmup Iteration   1: 24.352 ops/us
# Warmup Iteration   2: 25.376 ops/us
# Warmup Iteration   3: 25.541 ops/us
# Warmup Iteration   4: 27.128 ops/us
# Warmup Iteration   5: 27.215 ops/us
Iteration   1: 23.016 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 25.593 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 27.225 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 27.213 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 27.126 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 9.52% complete, ETA 00:33:21
# Fork: 3 of 3
OpenJDK 64-Bit Server VM warning: Option UseConcMarkSweepGC was deprecated in version 9.0 and will likely be removed in a future release.
# Warmup Iteration   1: 32.258 ops/us
# Warmup Iteration   2: 29.346 ops/us
# Warmup Iteration   3: 34.699 ops/us
# Warmup Iteration   4: 34.531 ops/us
# Warmup Iteration   5: 34.725 ops/us
Iteration   1: 31.257 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 34.770 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 34.591 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 34.564 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 34.516 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.gc.ReadBarriersChainOfClassesBenchmark.concMarkSweepGC":
  33.199 ±(99.9%) 6.584 ops/us [Average]
  (min, avg, max) = (23.016, 33.199, 42.054), stdev = 6.158
  CI (99.9%): [26.616, 39.783] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReadBarriersChainOfClassesBenchmark.concMarkSweepGC:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReadBarriersChainOfClassesBenchmark.concMarkSweepGC:·gc.alloc.rate.norm":
  ≈ 10⁻⁶ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReadBarriersChainOfClassesBenchmark.concMarkSweepGC:·gc.count":
  ≈ 0 counts


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+UseEpsilonGC
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.ReadBarriersChainOfClassesBenchmark.epsilonGC

# Run progress: 14.29% complete, ETA 00:31:35
# Fork: 1 of 3
# Warmup Iteration   1: 45.255 ops/us
# Warmup Iteration   2: 42.491 ops/us
# Warmup Iteration   3: 43.443 ops/us
# Warmup Iteration   4: 47.601 ops/us
# Warmup Iteration   5: 47.526 ops/us
Iteration   1: 47.515 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 43.506 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 47.556 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 44.352 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 47.575 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 19.05% complete, ETA 00:29:50
# Fork: 2 of 3
# Warmup Iteration   1: 45.181 ops/us
# Warmup Iteration   2: 42.466 ops/us
# Warmup Iteration   3: 47.575 ops/us
# Warmup Iteration   4: 47.594 ops/us
# Warmup Iteration   5: 44.030 ops/us
Iteration   1: 47.691 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 47.485 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 47.516 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 44.427 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 47.567 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 23.81% complete, ETA 00:28:04
# Fork: 3 of 3
# Warmup Iteration   1: 45.318 ops/us
# Warmup Iteration   2: 42.361 ops/us
# Warmup Iteration   3: 43.194 ops/us
# Warmup Iteration   4: 47.498 ops/us
# Warmup Iteration   5: 47.697 ops/us
Iteration   1: 47.524 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 43.004 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 47.354 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 43.745 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 47.485 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.gc.ReadBarriersChainOfClassesBenchmark.epsilonGC":
  46.287 ±(99.9%) 1.972 ops/us [Average]
  (min, avg, max) = (43.004, 46.287, 47.691), stdev = 1.844
  CI (99.9%): [44.315, 48.258] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReadBarriersChainOfClassesBenchmark.epsilonGC:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReadBarriersChainOfClassesBenchmark.epsilonGC:·gc.alloc.rate.norm":
  ≈ 10⁻⁶ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReadBarriersChainOfClassesBenchmark.epsilonGC:·gc.count":
  ≈ 0 counts


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UseG1GC
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.ReadBarriersChainOfClassesBenchmark.g1GC

# Run progress: 28.57% complete, ETA 00:26:19
# Fork: 1 of 3
# Warmup Iteration   1: 30.052 ops/us
# Warmup Iteration   2: 30.142 ops/us
# Warmup Iteration   3: 31.358 ops/us
# Warmup Iteration   4: 29.216 ops/us
# Warmup Iteration   5: 31.207 ops/us
Iteration   1: 28.115 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 28.765 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 30.954 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 31.212 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 31.340 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 33.33% complete, ETA 00:24:34
# Fork: 2 of 3
# Warmup Iteration   1: 27.377 ops/us
# Warmup Iteration   2: 30.676 ops/us
# Warmup Iteration   3: 30.138 ops/us
# Warmup Iteration   4: 29.621 ops/us
# Warmup Iteration   5: 30.038 ops/us
Iteration   1: 30.039 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 29.570 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 26.433 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 30.066 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 30.116 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 38.10% complete, ETA 00:22:48
# Fork: 3 of 3
# Warmup Iteration   1: 30.691 ops/us
# Warmup Iteration   2: 31.020 ops/us
# Warmup Iteration   3: 35.855 ops/us
# Warmup Iteration   4: 35.848 ops/us
# Warmup Iteration   5: 35.643 ops/us
Iteration   1: 30.584 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 35.699 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 30.581 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 35.019 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 35.684 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.gc.ReadBarriersChainOfClassesBenchmark.g1GC":
  30.945 ±(99.9%) 2.849 ops/us [Average]
  (min, avg, max) = (26.433, 30.945, 35.699), stdev = 2.665
  CI (99.9%): [28.096, 33.794] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReadBarriersChainOfClassesBenchmark.g1GC:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReadBarriersChainOfClassesBenchmark.g1GC:·gc.alloc.rate.norm":
  ≈ 10⁻⁶ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReadBarriersChainOfClassesBenchmark.g1GC:·gc.count":
  ≈ 0 counts


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UseParallelOldGC
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.ReadBarriersChainOfClassesBenchmark.parallelOldGC

# Run progress: 42.86% complete, ETA 00:21:03
# Fork: 1 of 3
# Warmup Iteration   1: 32.395 ops/us
# Warmup Iteration   2: 32.391 ops/us
# Warmup Iteration   3: 32.243 ops/us
# Warmup Iteration   4: 29.145 ops/us
# Warmup Iteration   5: 32.154 ops/us
Iteration   1: 30.131 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 30.248 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 29.142 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 30.734 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 32.399 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 47.62% complete, ETA 00:19:18
# Fork: 2 of 3
# Warmup Iteration   1: 24.802 ops/us
# Warmup Iteration   2: 24.821 ops/us
# Warmup Iteration   3: 24.228 ops/us
# Warmup Iteration   4: 24.323 ops/us
# Warmup Iteration   5: 24.266 ops/us
Iteration   1: 21.831 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 24.356 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 24.294 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 22.790 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 24.384 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 52.38% complete, ETA 00:17:33
# Fork: 3 of 3
# Warmup Iteration   1: 24.789 ops/us
# Warmup Iteration   2: 24.799 ops/us
# Warmup Iteration   3: 24.995 ops/us
# Warmup Iteration   4: 24.334 ops/us
# Warmup Iteration   5: 25.099 ops/us
Iteration   1: 22.455 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 25.042 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 24.259 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 23.016 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 24.960 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.gc.ReadBarriersChainOfClassesBenchmark.parallelOldGC":
  26.003 ±(99.9%) 3.734 ops/us [Average]
  (min, avg, max) = (21.831, 26.003, 32.399), stdev = 3.492
  CI (99.9%): [22.269, 29.736] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReadBarriersChainOfClassesBenchmark.parallelOldGC:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReadBarriersChainOfClassesBenchmark.parallelOldGC:·gc.alloc.rate.norm":
  ≈ 10⁻⁶ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReadBarriersChainOfClassesBenchmark.parallelOldGC:·gc.count":
  ≈ 0 counts


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UseSerialGC
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.ReadBarriersChainOfClassesBenchmark.serialGC

# Run progress: 57.14% complete, ETA 00:15:47
# Fork: 1 of 3
# Warmup Iteration   1: 33.800 ops/us
# Warmup Iteration   2: 31.158 ops/us
# Warmup Iteration   3: 31.757 ops/us
# Warmup Iteration   4: 34.863 ops/us
# Warmup Iteration   5: 35.045 ops/us
Iteration   1: 31.717 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 31.729 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 34.899 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 34.916 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 34.918 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 61.90% complete, ETA 00:14:02
# Fork: 2 of 3
# Warmup Iteration   1: 33.625 ops/us
# Warmup Iteration   2: 33.619 ops/us
# Warmup Iteration   3: 31.296 ops/us
# Warmup Iteration   4: 35.996 ops/us
# Warmup Iteration   5: 35.963 ops/us
Iteration   1: 31.688 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 31.446 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 35.945 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 35.925 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 35.906 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 66.67% complete, ETA 00:12:17
# Fork: 3 of 3
# Warmup Iteration   1: 37.569 ops/us
# Warmup Iteration   2: 34.776 ops/us
# Warmup Iteration   3: 36.773 ops/us
# Warmup Iteration   4: 42.184 ops/us
# Warmup Iteration   5: 39.794 ops/us
Iteration   1: 35.511 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 36.798 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 41.997 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 42.143 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 42.006 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.gc.ReadBarriersChainOfClassesBenchmark.serialGC":
  35.836 ±(99.9%) 3.936 ops/us [Average]
  (min, avg, max) = (31.446, 35.836, 42.143), stdev = 3.681
  CI (99.9%): [31.901, 39.772] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReadBarriersChainOfClassesBenchmark.serialGC:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReadBarriersChainOfClassesBenchmark.serialGC:·gc.alloc.rate.norm":
  ≈ 10⁻⁶ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReadBarriersChainOfClassesBenchmark.serialGC:·gc.count":
  ≈ 0 counts


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+UseShenandoahGC
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.ReadBarriersChainOfClassesBenchmark.shenandoahGC

# Run progress: 71.43% complete, ETA 00:10:31
# Fork: 1 of 3
# Warmup Iteration   1: 26.204 ops/us
# Warmup Iteration   2: 26.833 ops/us
# Warmup Iteration   3: 26.397 ops/us
# Warmup Iteration   4: 23.449 ops/us
# Warmup Iteration   5: 26.371 ops/us
Iteration   1: 26.388 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 26.419 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 26.456 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 25.608 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 26.400 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 76.19% complete, ETA 00:08:46
# Fork: 2 of 3
# Warmup Iteration   1: 27.189 ops/us
# Warmup Iteration   2: 26.845 ops/us
# Warmup Iteration   3: 27.418 ops/us
# Warmup Iteration   4: 27.283 ops/us
# Warmup Iteration   5: 27.323 ops/us
Iteration   1: 27.243 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 27.579 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 27.540 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 27.658 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 27.539 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 80.95% complete, ETA 00:07:01
# Fork: 3 of 3
# Warmup Iteration   1: 28.677 ops/us
# Warmup Iteration   2: 27.966 ops/us
# Warmup Iteration   3: 29.345 ops/us
# Warmup Iteration   4: 29.351 ops/us
# Warmup Iteration   5: 29.347 ops/us
Iteration   1: 29.645 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 29.677 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 29.692 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 29.650 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 29.682 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.gc.ReadBarriersChainOfClassesBenchmark.shenandoahGC":
  27.812 ±(99.9%) 1.577 ops/us [Average]
  (min, avg, max) = (25.608, 27.812, 29.692), stdev = 1.475
  CI (99.9%): [26.235, 29.389] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReadBarriersChainOfClassesBenchmark.shenandoahGC:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReadBarriersChainOfClassesBenchmark.shenandoahGC:·gc.alloc.rate.norm":
  ≈ 10⁻⁶ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReadBarriersChainOfClassesBenchmark.shenandoahGC:·gc.count":
  ≈ 0 counts


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+UseZGC
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.ReadBarriersChainOfClassesBenchmark.zGC

# Run progress: 85.71% complete, ETA 00:05:15
# Fork: 1 of 3
# Warmup Iteration   1: 26.900 ops/us
# Warmup Iteration   2: 31.197 ops/us
# Warmup Iteration   3: 32.158 ops/us
# Warmup Iteration   4: 32.071 ops/us
# Warmup Iteration   5: 31.660 ops/us
Iteration   1: 31.707 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 31.734 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 31.657 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 31.409 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 31.661 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 90.48% complete, ETA 00:03:30
# Fork: 2 of 3
# Warmup Iteration   1: 26.894 ops/us
# Warmup Iteration   2: 31.107 ops/us
# Warmup Iteration   3: 32.076 ops/us
# Warmup Iteration   4: 32.094 ops/us
# Warmup Iteration   5: 32.138 ops/us
Iteration   1: 32.176 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 32.073 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 32.204 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 32.115 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 32.083 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 95.24% complete, ETA 00:01:45
# Fork: 3 of 3
# Warmup Iteration   1: 26.882 ops/us
# Warmup Iteration   2: 31.000 ops/us
# Warmup Iteration   3: 32.030 ops/us
# Warmup Iteration   4: 32.026 ops/us
# Warmup Iteration   5: 32.073 ops/us
Iteration   1: 32.100 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 32.059 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 32.054 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 32.047 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 32.087 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.gc.ReadBarriersChainOfClassesBenchmark.zGC":
  31.944 ±(99.9%) 0.258 ops/us [Average]
  (min, avg, max) = (31.409, 31.944, 32.204), stdev = 0.241
  CI (99.9%): [31.687, 32.202] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReadBarriersChainOfClassesBenchmark.zGC:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReadBarriersChainOfClassesBenchmark.zGC:·gc.alloc.rate.norm":
  ≈ 10⁻⁶ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReadBarriersChainOfClassesBenchmark.zGC:·gc.count":
  ≈ 0 counts


# Run complete. Total time: 00:36:51

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                                                 Mode  Cnt   Score    Error   Units
ReadBarriersChainOfClassesBenchmark.concMarkSweepGC                      thrpt   15  33.199 ±  6.584  ops/us
ReadBarriersChainOfClassesBenchmark.concMarkSweepGC:·gc.alloc.rate       thrpt   15  ≈ 10⁻⁴           MB/sec
ReadBarriersChainOfClassesBenchmark.concMarkSweepGC:·gc.alloc.rate.norm  thrpt   15  ≈ 10⁻⁶             B/op
ReadBarriersChainOfClassesBenchmark.concMarkSweepGC:·gc.count            thrpt   15     ≈ 0           counts
ReadBarriersChainOfClassesBenchmark.epsilonGC                            thrpt   15  46.287 ±  1.972  ops/us
ReadBarriersChainOfClassesBenchmark.epsilonGC:·gc.alloc.rate             thrpt   15  ≈ 10⁻⁴           MB/sec
ReadBarriersChainOfClassesBenchmark.epsilonGC:·gc.alloc.rate.norm        thrpt   15  ≈ 10⁻⁶             B/op
ReadBarriersChainOfClassesBenchmark.epsilonGC:·gc.count                  thrpt   15     ≈ 0           counts
ReadBarriersChainOfClassesBenchmark.g1GC                                 thrpt   15  30.945 ±  2.849  ops/us
ReadBarriersChainOfClassesBenchmark.g1GC:·gc.alloc.rate                  thrpt   15  ≈ 10⁻⁴           MB/sec
ReadBarriersChainOfClassesBenchmark.g1GC:·gc.alloc.rate.norm             thrpt   15  ≈ 10⁻⁶             B/op
ReadBarriersChainOfClassesBenchmark.g1GC:·gc.count                       thrpt   15     ≈ 0           counts
ReadBarriersChainOfClassesBenchmark.parallelOldGC                        thrpt   15  26.003 ±  3.734  ops/us
ReadBarriersChainOfClassesBenchmark.parallelOldGC:·gc.alloc.rate         thrpt   15  ≈ 10⁻⁴           MB/sec
ReadBarriersChainOfClassesBenchmark.parallelOldGC:·gc.alloc.rate.norm    thrpt   15  ≈ 10⁻⁶             B/op
ReadBarriersChainOfClassesBenchmark.parallelOldGC:·gc.count              thrpt   15     ≈ 0           counts
ReadBarriersChainOfClassesBenchmark.serialGC                             thrpt   15  35.836 ±  3.936  ops/us
ReadBarriersChainOfClassesBenchmark.serialGC:·gc.alloc.rate              thrpt   15  ≈ 10⁻⁴           MB/sec
ReadBarriersChainOfClassesBenchmark.serialGC:·gc.alloc.rate.norm         thrpt   15  ≈ 10⁻⁶             B/op
ReadBarriersChainOfClassesBenchmark.serialGC:·gc.count                   thrpt   15     ≈ 0           counts
ReadBarriersChainOfClassesBenchmark.shenandoahGC                         thrpt   15  27.812 ±  1.577  ops/us
ReadBarriersChainOfClassesBenchmark.shenandoahGC:·gc.alloc.rate          thrpt   15  ≈ 10⁻⁴           MB/sec
ReadBarriersChainOfClassesBenchmark.shenandoahGC:·gc.alloc.rate.norm     thrpt   15  ≈ 10⁻⁶             B/op
ReadBarriersChainOfClassesBenchmark.shenandoahGC:·gc.count               thrpt   15     ≈ 0           counts
ReadBarriersChainOfClassesBenchmark.zGC                                  thrpt   15  31.944 ±  0.258  ops/us
ReadBarriersChainOfClassesBenchmark.zGC:·gc.alloc.rate                   thrpt   15  ≈ 10⁻⁴           MB/sec
ReadBarriersChainOfClassesBenchmark.zGC:·gc.alloc.rate.norm              thrpt   15  ≈ 10⁻⁶             B/op
ReadBarriersChainOfClassesBenchmark.zGC:·gc.count                        thrpt   15     ≈ 0           counts

Benchmark result is saved to results/report-openjdk-13/hotspotvm_gc/ReadBarriersChainOfClassesBenchmark.json
Running java  -jar benchmarks/target/benchmarks.jar .*ReadBarriersLoopingOverArrayBenchmark.* -prof gc -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_gc/ReadBarriersLoopingOverArrayBenchmark.json
# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UseConcMarkSweepGC
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.ReadBarriersLoopingOverArrayBenchmark.concMarkSweepGC
# Parameters: (size = 262144)

# Run progress: 0.00% complete, ETA 00:35:00
# Fork: 1 of 3
OpenJDK 64-Bit Server VM warning: Option UseConcMarkSweepGC was deprecated in version 9.0 and will likely be removed in a future release.
# Warmup Iteration   1: 6191.451 ops/s
# Warmup Iteration   2: 6135.936 ops/s
# Warmup Iteration   3: 6150.856 ops/s
# Warmup Iteration   4: 6149.816 ops/s
# Warmup Iteration   5: 6145.199 ops/s
Iteration   1: 6197.600 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 6195.197 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 6193.538 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 6202.269 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 6186.590 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 4.76% complete, ETA 00:35:07
# Fork: 2 of 3
OpenJDK 64-Bit Server VM warning: Option UseConcMarkSweepGC was deprecated in version 9.0 and will likely be removed in a future release.
# Warmup Iteration   1: 6229.676 ops/s
# Warmup Iteration   2: 6252.067 ops/s
# Warmup Iteration   3: 6182.286 ops/s
# Warmup Iteration   4: 6057.470 ops/s
# Warmup Iteration   5: 6153.905 ops/s
Iteration   1: 6187.923 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 6187.301 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 6185.510 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 6106.354 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 6188.456 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 9.52% complete, ETA 00:33:21
# Fork: 3 of 3
OpenJDK 64-Bit Server VM warning: Option UseConcMarkSweepGC was deprecated in version 9.0 and will likely be removed in a future release.
# Warmup Iteration   1: 6230.009 ops/s
# Warmup Iteration   2: 6272.936 ops/s
# Warmup Iteration   3: 6269.814 ops/s
# Warmup Iteration   4: 6247.570 ops/s
# Warmup Iteration   5: 6240.581 ops/s
Iteration   1: 6239.520 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 6212.584 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 6227.964 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 6230.435 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 6239.475 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.gc.ReadBarriersLoopingOverArrayBenchmark.concMarkSweepGC":
  6198.714 ±(99.9%) 34.568 ops/s [Average]
  (min, avg, max) = (6106.354, 6198.714, 6239.520), stdev = 32.335
  CI (99.9%): [6164.147, 6233.282] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReadBarriersLoopingOverArrayBenchmark.concMarkSweepGC:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReadBarriersLoopingOverArrayBenchmark.concMarkSweepGC:·gc.alloc.rate.norm":
  0.007 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (0.007, 0.007, 0.007), stdev = 0.001
  CI (99.9%): [0.007, 0.007] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReadBarriersLoopingOverArrayBenchmark.concMarkSweepGC:·gc.count":
  ≈ 0 counts


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+UseEpsilonGC
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.ReadBarriersLoopingOverArrayBenchmark.epsilonGC
# Parameters: (size = 262144)

# Run progress: 14.29% complete, ETA 00:31:35
# Fork: 1 of 3
# Warmup Iteration   1: 6220.825 ops/s
# Warmup Iteration   2: 6114.454 ops/s
# Warmup Iteration   3: 6119.658 ops/s
# Warmup Iteration   4: 6113.479 ops/s
# Warmup Iteration   5: 6127.611 ops/s
Iteration   1: 6047.881 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 6107.515 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 6116.246 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 6115.196 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 6113.338 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 19.05% complete, ETA 00:29:50
# Fork: 2 of 3
# Warmup Iteration   1: 6108.260 ops/s
# Warmup Iteration   2: 6106.198 ops/s
# Warmup Iteration   3: 6110.635 ops/s
# Warmup Iteration   4: 6117.072 ops/s
# Warmup Iteration   5: 6120.499 ops/s
Iteration   1: 6141.428 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 6115.503 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 6110.163 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 6140.847 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 6107.031 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 23.81% complete, ETA 00:28:05
# Fork: 3 of 3
# Warmup Iteration   1: 6177.651 ops/s
# Warmup Iteration   2: 6083.689 ops/s
# Warmup Iteration   3: 6010.988 ops/s
# Warmup Iteration   4: 6095.847 ops/s
# Warmup Iteration   5: 6094.122 ops/s
Iteration   1: 6080.445 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 6075.116 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 6076.533 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 6272.211 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 6242.176 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.gc.ReadBarriersLoopingOverArrayBenchmark.epsilonGC":
  6124.109 ±(99.9%) 63.843 ops/s [Average]
  (min, avg, max) = (6047.881, 6124.109, 6272.211), stdev = 59.718
  CI (99.9%): [6060.266, 6187.951] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReadBarriersLoopingOverArrayBenchmark.epsilonGC:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReadBarriersLoopingOverArrayBenchmark.epsilonGC:·gc.alloc.rate.norm":
  0.007 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (0.007, 0.007, 0.007), stdev = 0.001
  CI (99.9%): [0.007, 0.007] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReadBarriersLoopingOverArrayBenchmark.epsilonGC:·gc.count":
  ≈ 0 counts


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UseG1GC
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.ReadBarriersLoopingOverArrayBenchmark.g1GC
# Parameters: (size = 262144)

# Run progress: 28.57% complete, ETA 00:26:19
# Fork: 1 of 3
# Warmup Iteration   1: 6261.969 ops/s
# Warmup Iteration   2: 6261.022 ops/s
# Warmup Iteration   3: 6254.909 ops/s
# Warmup Iteration   4: 6276.946 ops/s
# Warmup Iteration   5: 6196.810 ops/s
Iteration   1: 6258.439 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 6256.264 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 6265.142 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 6269.487 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 6209.288 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 33.33% complete, ETA 00:24:34
# Fork: 2 of 3
# Warmup Iteration   1: 6314.240 ops/s
# Warmup Iteration   2: 6334.120 ops/s
# Warmup Iteration   3: 6310.641 ops/s
# Warmup Iteration   4: 6325.318 ops/s
# Warmup Iteration   5: 6330.370 ops/s
Iteration   1: 6333.688 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.006 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 6358.021 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.006 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 6314.693 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.006 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 6090.092 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 6323.710 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.006 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 38.10% complete, ETA 00:22:49
# Fork: 3 of 3
# Warmup Iteration   1: 6126.765 ops/s
# Warmup Iteration   2: 6071.942 ops/s
# Warmup Iteration   3: 6122.147 ops/s
# Warmup Iteration   4: 6142.110 ops/s
# Warmup Iteration   5: 6141.571 ops/s
Iteration   1: 6137.207 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 6117.306 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 6128.248 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 6132.735 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 6139.097 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.gc.ReadBarriersLoopingOverArrayBenchmark.g1GC":
  6222.228 ±(99.9%) 97.259 ops/s [Average]
  (min, avg, max) = (6090.092, 6222.228, 6358.021), stdev = 90.976
  CI (99.9%): [6124.969, 6319.487] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReadBarriersLoopingOverArrayBenchmark.g1GC:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReadBarriersLoopingOverArrayBenchmark.g1GC:·gc.alloc.rate.norm":
  0.007 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (0.006, 0.007, 0.007), stdev = 0.001
  CI (99.9%): [0.006, 0.007] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReadBarriersLoopingOverArrayBenchmark.g1GC:·gc.count":
  ≈ 0 counts


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UseParallelOldGC
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.ReadBarriersLoopingOverArrayBenchmark.parallelOldGC
# Parameters: (size = 262144)

# Run progress: 42.86% complete, ETA 00:21:03
# Fork: 1 of 3
# Warmup Iteration   1: 6284.570 ops/s
# Warmup Iteration   2: 6322.116 ops/s
# Warmup Iteration   3: 6339.937 ops/s
# Warmup Iteration   4: 6361.431 ops/s
# Warmup Iteration   5: 6361.282 ops/s
Iteration   1: 6365.483 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.006 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 6371.936 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.006 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 6375.526 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.006 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 6288.099 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.006 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 6309.992 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.006 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 47.62% complete, ETA 00:19:18
# Fork: 2 of 3
# Warmup Iteration   1: 6276.499 ops/s
# Warmup Iteration   2: 6298.819 ops/s
# Warmup Iteration   3: 6318.221 ops/s
# Warmup Iteration   4: 6294.827 ops/s
# Warmup Iteration   5: 6302.039 ops/s
Iteration   1: 6305.115 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.006 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 6105.961 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 6072.814 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 6122.960 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 6061.858 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 52.38% complete, ETA 00:17:33
# Fork: 3 of 3
# Warmup Iteration   1: 6406.269 ops/s
# Warmup Iteration   2: 6411.234 ops/s
# Warmup Iteration   3: 6427.124 ops/s
# Warmup Iteration   4: 6489.149 ops/s
# Warmup Iteration   5: 6502.527 ops/s
Iteration   1: 6490.412 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.006 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 6484.396 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.006 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 6491.861 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.006 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 6490.996 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.006 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 6315.529 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.gc.ReadBarriersLoopingOverArrayBenchmark.parallelOldGC":
  6310.196 ±(99.9%) 165.368 ops/s [Average]
  (min, avg, max) = (6061.858, 6310.196, 6491.861), stdev = 154.685
  CI (99.9%): [6144.828, 6475.564] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReadBarriersLoopingOverArrayBenchmark.parallelOldGC:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReadBarriersLoopingOverArrayBenchmark.parallelOldGC:·gc.alloc.rate.norm":
  0.007 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (0.006, 0.007, 0.007), stdev = 0.001
  CI (99.9%): [0.006, 0.007] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReadBarriersLoopingOverArrayBenchmark.parallelOldGC:·gc.count":
  ≈ 0 counts


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UseSerialGC
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.ReadBarriersLoopingOverArrayBenchmark.serialGC
# Parameters: (size = 262144)

# Run progress: 57.14% complete, ETA 00:15:47
# Fork: 1 of 3
# Warmup Iteration   1: 6278.340 ops/s
# Warmup Iteration   2: 6257.424 ops/s
# Warmup Iteration   3: 6241.270 ops/s
# Warmup Iteration   4: 6243.547 ops/s
# Warmup Iteration   5: 6240.599 ops/s
Iteration   1: 6246.407 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 6239.056 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 6243.395 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 6238.871 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 6293.939 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 61.90% complete, ETA 00:14:02
# Fork: 2 of 3
# Warmup Iteration   1: 6241.586 ops/s
# Warmup Iteration   2: 6229.556 ops/s
# Warmup Iteration   3: 6186.230 ops/s
# Warmup Iteration   4: 6224.576 ops/s
# Warmup Iteration   5: 6267.155 ops/s
Iteration   1: 6142.578 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 6259.135 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 6256.475 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 6444.685 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.006 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 6260.827 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 66.67% complete, ETA 00:12:17
# Fork: 3 of 3
# Warmup Iteration   1: 6094.591 ops/s
# Warmup Iteration   2: 6099.164 ops/s
# Warmup Iteration   3: 5995.836 ops/s
# Warmup Iteration   4: 5956.629 ops/s
# Warmup Iteration   5: 5979.732 ops/s
Iteration   1: 6133.015 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 6108.239 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 6103.309 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 6098.577 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 6095.836 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.gc.ReadBarriersLoopingOverArrayBenchmark.serialGC":
  6210.956 ±(99.9%) 103.430 ops/s [Average]
  (min, avg, max) = (6095.836, 6210.956, 6444.685), stdev = 96.749
  CI (99.9%): [6107.526, 6314.386] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReadBarriersLoopingOverArrayBenchmark.serialGC:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReadBarriersLoopingOverArrayBenchmark.serialGC:·gc.alloc.rate.norm":
  0.007 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (0.006, 0.007, 0.007), stdev = 0.001
  CI (99.9%): [0.006, 0.007] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReadBarriersLoopingOverArrayBenchmark.serialGC:·gc.count":
  ≈ 0 counts


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+UseShenandoahGC
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.ReadBarriersLoopingOverArrayBenchmark.shenandoahGC
# Parameters: (size = 262144)

# Run progress: 71.43% complete, ETA 00:10:31
# Fork: 1 of 3
# Warmup Iteration   1: 6074.704 ops/s
# Warmup Iteration   2: 6138.748 ops/s
# Warmup Iteration   3: 6120.483 ops/s
# Warmup Iteration   4: 6127.088 ops/s
# Warmup Iteration   5: 6130.823 ops/s
Iteration   1: 6127.657 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 6119.917 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 6129.938 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 6160.197 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 6114.477 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 76.19% complete, ETA 00:08:46
# Fork: 2 of 3
# Warmup Iteration   1: 6270.330 ops/s
# Warmup Iteration   2: 6361.532 ops/s
# Warmup Iteration   3: 6390.505 ops/s
# Warmup Iteration   4: 6396.628 ops/s
# Warmup Iteration   5: 6409.766 ops/s
Iteration   1: 6377.649 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.006 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 6375.893 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.006 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 6361.909 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.006 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 6370.366 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.006 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 6431.805 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.006 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 80.95% complete, ETA 00:07:01
# Fork: 3 of 3
# Warmup Iteration   1: 6041.733 ops/s
# Warmup Iteration   2: 6076.290 ops/s
# Warmup Iteration   3: 6038.096 ops/s
# Warmup Iteration   4: 6063.318 ops/s
# Warmup Iteration   5: 6113.534 ops/s
Iteration   1: 6115.278 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 6087.705 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 6083.851 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 6092.480 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 6062.437 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.gc.ReadBarriersLoopingOverArrayBenchmark.shenandoahGC":
  6200.771 ±(99.9%) 145.878 ops/s [Average]
  (min, avg, max) = (6062.437, 6200.771, 6431.805), stdev = 136.455
  CI (99.9%): [6054.892, 6346.649] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReadBarriersLoopingOverArrayBenchmark.shenandoahGC:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReadBarriersLoopingOverArrayBenchmark.shenandoahGC:·gc.alloc.rate.norm":
  0.007 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (0.006, 0.007, 0.007), stdev = 0.001
  CI (99.9%): [0.006, 0.007] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReadBarriersLoopingOverArrayBenchmark.shenandoahGC:·gc.count":
  ≈ 0 counts


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+UseZGC
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.ReadBarriersLoopingOverArrayBenchmark.zGC
# Parameters: (size = 262144)

# Run progress: 85.71% complete, ETA 00:05:15
# Fork: 1 of 3
# Warmup Iteration   1: 3467.190 ops/s
# Warmup Iteration   2: 3469.717 ops/s
# Warmup Iteration   3: 3484.134 ops/s
# Warmup Iteration   4: 3447.106 ops/s
# Warmup Iteration   5: 3459.854 ops/s
Iteration   1: 3454.050 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.017 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 3468.896 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.017 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 3456.727 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.017 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 3380.834 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.017 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 3568.904 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.016 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 90.48% complete, ETA 00:03:30
# Fork: 2 of 3
# Warmup Iteration   1: 3539.551 ops/s
# Warmup Iteration   2: 3494.566 ops/s
# Warmup Iteration   3: 3420.286 ops/s
# Warmup Iteration   4: 3443.453 ops/s
# Warmup Iteration   5: 3441.964 ops/s
Iteration   1: 3429.848 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.017 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 3435.148 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.017 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 3438.115 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.017 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 3439.442 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.017 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 3402.792 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.017 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 95.24% complete, ETA 00:01:45
# Fork: 3 of 3
# Warmup Iteration   1: 3480.308 ops/s
# Warmup Iteration   2: 3712.188 ops/s
# Warmup Iteration   3: 3727.595 ops/s
# Warmup Iteration   4: 3733.861 ops/s
# Warmup Iteration   5: 3741.593 ops/s
Iteration   1: 3733.029 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.016 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 3730.699 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.016 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 3567.586 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.016 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 3569.798 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.016 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 3575.894 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.016 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.gc.ReadBarriersLoopingOverArrayBenchmark.zGC":
  3510.117 ±(99.9%) 118.206 ops/s [Average]
  (min, avg, max) = (3380.834, 3510.117, 3733.029), stdev = 110.570
  CI (99.9%): [3391.911, 3628.324] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReadBarriersLoopingOverArrayBenchmark.zGC:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReadBarriersLoopingOverArrayBenchmark.zGC:·gc.alloc.rate.norm":
  0.017 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (0.016, 0.017, 0.017), stdev = 0.001
  CI (99.9%): [0.016, 0.017] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReadBarriersLoopingOverArrayBenchmark.zGC:·gc.count":
  ≈ 0 counts


# Run complete. Total time: 00:36:51

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                                                  (size)   Mode  Cnt     Score     Error   Units
ReadBarriersLoopingOverArrayBenchmark.concMarkSweepGC                      262144  thrpt   15  6198.714 ±  34.568   ops/s
ReadBarriersLoopingOverArrayBenchmark.concMarkSweepGC:·gc.alloc.rate       262144  thrpt   15    ≈ 10⁻⁴            MB/sec
ReadBarriersLoopingOverArrayBenchmark.concMarkSweepGC:·gc.alloc.rate.norm  262144  thrpt   15     0.007 ±   0.001    B/op
ReadBarriersLoopingOverArrayBenchmark.concMarkSweepGC:·gc.count            262144  thrpt   15       ≈ 0            counts
ReadBarriersLoopingOverArrayBenchmark.epsilonGC                            262144  thrpt   15  6124.109 ±  63.843   ops/s
ReadBarriersLoopingOverArrayBenchmark.epsilonGC:·gc.alloc.rate             262144  thrpt   15    ≈ 10⁻⁴            MB/sec
ReadBarriersLoopingOverArrayBenchmark.epsilonGC:·gc.alloc.rate.norm        262144  thrpt   15     0.007 ±   0.001    B/op
ReadBarriersLoopingOverArrayBenchmark.epsilonGC:·gc.count                  262144  thrpt   15       ≈ 0            counts
ReadBarriersLoopingOverArrayBenchmark.g1GC                                 262144  thrpt   15  6222.228 ±  97.259   ops/s
ReadBarriersLoopingOverArrayBenchmark.g1GC:·gc.alloc.rate                  262144  thrpt   15    ≈ 10⁻⁴            MB/sec
ReadBarriersLoopingOverArrayBenchmark.g1GC:·gc.alloc.rate.norm             262144  thrpt   15     0.007 ±   0.001    B/op
ReadBarriersLoopingOverArrayBenchmark.g1GC:·gc.count                       262144  thrpt   15       ≈ 0            counts
ReadBarriersLoopingOverArrayBenchmark.parallelOldGC                        262144  thrpt   15  6310.196 ± 165.368   ops/s
ReadBarriersLoopingOverArrayBenchmark.parallelOldGC:·gc.alloc.rate         262144  thrpt   15    ≈ 10⁻⁴            MB/sec
ReadBarriersLoopingOverArrayBenchmark.parallelOldGC:·gc.alloc.rate.norm    262144  thrpt   15     0.007 ±   0.001    B/op
ReadBarriersLoopingOverArrayBenchmark.parallelOldGC:·gc.count              262144  thrpt   15       ≈ 0            counts
ReadBarriersLoopingOverArrayBenchmark.serialGC                             262144  thrpt   15  6210.956 ± 103.430   ops/s
ReadBarriersLoopingOverArrayBenchmark.serialGC:·gc.alloc.rate              262144  thrpt   15    ≈ 10⁻⁴            MB/sec
ReadBarriersLoopingOverArrayBenchmark.serialGC:·gc.alloc.rate.norm         262144  thrpt   15     0.007 ±   0.001    B/op
ReadBarriersLoopingOverArrayBenchmark.serialGC:·gc.count                   262144  thrpt   15       ≈ 0            counts
ReadBarriersLoopingOverArrayBenchmark.shenandoahGC                         262144  thrpt   15  6200.771 ± 145.878   ops/s
ReadBarriersLoopingOverArrayBenchmark.shenandoahGC:·gc.alloc.rate          262144  thrpt   15    ≈ 10⁻⁴            MB/sec
ReadBarriersLoopingOverArrayBenchmark.shenandoahGC:·gc.alloc.rate.norm     262144  thrpt   15     0.007 ±   0.001    B/op
ReadBarriersLoopingOverArrayBenchmark.shenandoahGC:·gc.count               262144  thrpt   15       ≈ 0            counts
ReadBarriersLoopingOverArrayBenchmark.zGC                                  262144  thrpt   15  3510.117 ± 118.206   ops/s
ReadBarriersLoopingOverArrayBenchmark.zGC:·gc.alloc.rate                   262144  thrpt   15    ≈ 10⁻⁴            MB/sec
ReadBarriersLoopingOverArrayBenchmark.zGC:·gc.alloc.rate.norm              262144  thrpt   15     0.017 ±   0.001    B/op
ReadBarriersLoopingOverArrayBenchmark.zGC:·gc.count                        262144  thrpt   15       ≈ 0            counts

Benchmark result is saved to results/report-openjdk-13/hotspotvm_gc/ReadBarriersLoopingOverArrayBenchmark.json
Running java  -jar benchmarks/target/benchmarks.jar .*ReadWriteBarriersBenchmark.* -prof gc -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_gc/ReadWriteBarriersBenchmark.json
# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UseConcMarkSweepGC
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.ReadWriteBarriersBenchmark.concMarkSweepGC
# Parameters: (size = 262144)

# Run progress: 0.00% complete, ETA 00:35:00
# Fork: 1 of 3
OpenJDK 64-Bit Server VM warning: Option UseConcMarkSweepGC was deprecated in version 9.0 and will likely be removed in a future release.
# Warmup Iteration   1: 2248.854 ops/s
# Warmup Iteration   2: 2273.516 ops/s
# Warmup Iteration   3: 2269.125 ops/s
# Warmup Iteration   4: 2289.587 ops/s
# Warmup Iteration   5: 2294.487 ops/s
Iteration   1: 2299.176 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.018 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2300.815 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.018 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2294.491 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.019 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2295.870 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.018 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2307.841 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.019 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 4.76% complete, ETA 00:35:06
# Fork: 2 of 3
OpenJDK 64-Bit Server VM warning: Option UseConcMarkSweepGC was deprecated in version 9.0 and will likely be removed in a future release.
# Warmup Iteration   1: 2566.878 ops/s
# Warmup Iteration   2: 2536.253 ops/s
# Warmup Iteration   3: 2546.359 ops/s
# Warmup Iteration   4: 2523.248 ops/s
# Warmup Iteration   5: 2532.812 ops/s
Iteration   1: 2537.312 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.016 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2536.204 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.016 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2533.123 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.016 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2537.225 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.016 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2506.556 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.016 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 9.52% complete, ETA 00:33:20
# Fork: 3 of 3
OpenJDK 64-Bit Server VM warning: Option UseConcMarkSweepGC was deprecated in version 9.0 and will likely be removed in a future release.
# Warmup Iteration   1: 2529.525 ops/s
# Warmup Iteration   2: 2522.072 ops/s
# Warmup Iteration   3: 2520.141 ops/s
# Warmup Iteration   4: 2517.387 ops/s
# Warmup Iteration   5: 2532.216 ops/s
Iteration   1: 2261.649 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.018 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2541.787 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.016 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2539.344 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.016 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2298.955 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.018 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2320.309 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.018 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.gc.ReadWriteBarriersBenchmark.concMarkSweepGC":
  2407.377 ±(99.9%) 130.992 ops/s [Average]
  (min, avg, max) = (2261.649, 2407.377, 2541.787), stdev = 122.530
  CI (99.9%): [2276.385, 2538.369] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReadWriteBarriersBenchmark.concMarkSweepGC:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReadWriteBarriersBenchmark.concMarkSweepGC:·gc.alloc.rate.norm":
  0.017 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (0.016, 0.017, 0.019), stdev = 0.001
  CI (99.9%): [0.016, 0.018] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReadWriteBarriersBenchmark.concMarkSweepGC:·gc.count":
  ≈ 0 counts


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+UseEpsilonGC
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.ReadWriteBarriersBenchmark.epsilonGC
# Parameters: (size = 262144)

# Run progress: 14.29% complete, ETA 00:31:35
# Fork: 1 of 3
# Warmup Iteration   1: 4993.777 ops/s
# Warmup Iteration   2: 5519.386 ops/s
# Warmup Iteration   3: 5047.609 ops/s
# Warmup Iteration   4: 5037.459 ops/s
# Warmup Iteration   5: 5061.562 ops/s
Iteration   1: 5080.238 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.008 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 5040.736 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.008 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 5059.471 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.008 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 5060.577 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.008 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 5035.155 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.008 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 19.05% complete, ETA 00:29:50
# Fork: 2 of 3
# Warmup Iteration   1: 5537.010 ops/s
# Warmup Iteration   2: 5479.702 ops/s
# Warmup Iteration   3: 5428.640 ops/s
# Warmup Iteration   4: 5471.758 ops/s
# Warmup Iteration   5: 5472.569 ops/s
Iteration   1: 5448.963 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 5434.812 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.008 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 5406.551 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.008 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 5435.843 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.008 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 5438.566 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.008 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 23.81% complete, ETA 00:28:04
# Fork: 3 of 3
# Warmup Iteration   1: 4977.725 ops/s
# Warmup Iteration   2: 5024.727 ops/s
# Warmup Iteration   3: 5047.014 ops/s
# Warmup Iteration   4: 5021.247 ops/s
# Warmup Iteration   5: 5071.865 ops/s
Iteration   1: 5087.835 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.008 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 5065.094 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.008 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 5068.423 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.008 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 5063.294 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.008 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 5002.399 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.009 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.gc.ReadWriteBarriersBenchmark.epsilonGC":
  5181.864 ±(99.9%) 197.803 ops/s [Average]
  (min, avg, max) = (5002.399, 5181.864, 5448.963), stdev = 185.025
  CI (99.9%): [4984.060, 5379.667] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReadWriteBarriersBenchmark.epsilonGC:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReadWriteBarriersBenchmark.epsilonGC:·gc.alloc.rate.norm":
  0.008 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (0.007, 0.008, 0.009), stdev = 0.001
  CI (99.9%): [0.008, 0.008] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReadWriteBarriersBenchmark.epsilonGC:·gc.count":
  ≈ 0 counts


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UseG1GC
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.ReadWriteBarriersBenchmark.g1GC
# Parameters: (size = 262144)

# Run progress: 28.57% complete, ETA 00:26:19
# Fork: 1 of 3
# Warmup Iteration   1: 295.345 ops/s
# Warmup Iteration   2: 296.898 ops/s
# Warmup Iteration   3: 297.766 ops/s
# Warmup Iteration   4: 298.349 ops/s
# Warmup Iteration   5: 297.390 ops/s
Iteration   1: 297.715 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.137 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 297.736 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.137 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 294.692 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.138 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 294.787 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.138 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 295.677 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.138 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 33.33% complete, ETA 00:24:34
# Fork: 2 of 3
# Warmup Iteration   1: 260.523 ops/s
# Warmup Iteration   2: 261.642 ops/s
# Warmup Iteration   3: 261.207 ops/s
# Warmup Iteration   4: 262.571 ops/s
# Warmup Iteration   5: 261.334 ops/s
Iteration   1: 261.209 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.156 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 259.517 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.157 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 261.324 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.156 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 261.381 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.156 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 260.734 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.156 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 38.10% complete, ETA 00:22:48
# Fork: 3 of 3
# Warmup Iteration   1: 262.782 ops/s
# Warmup Iteration   2: 261.462 ops/s
# Warmup Iteration   3: 261.367 ops/s
# Warmup Iteration   4: 262.373 ops/s
# Warmup Iteration   5: 261.740 ops/s
Iteration   1: 261.916 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.156 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 261.209 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.156 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 260.869 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.156 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 262.499 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.155 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 261.967 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.156 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.gc.ReadWriteBarriersBenchmark.g1GC":
  272.882 ±(99.9%) 18.218 ops/s [Average]
  (min, avg, max) = (259.517, 272.882, 297.736), stdev = 17.041
  CI (99.9%): [254.664, 291.100] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReadWriteBarriersBenchmark.g1GC:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReadWriteBarriersBenchmark.g1GC:·gc.alloc.rate.norm":
  0.150 ±(99.9%) 0.010 B/op [Average]
  (min, avg, max) = (0.137, 0.150, 0.157), stdev = 0.009
  CI (99.9%): [0.140, 0.160] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReadWriteBarriersBenchmark.g1GC:·gc.count":
  ≈ 0 counts


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UseParallelOldGC
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.ReadWriteBarriersBenchmark.parallelOldGC
# Parameters: (size = 262144)

# Run progress: 42.86% complete, ETA 00:21:03
# Fork: 1 of 3
# Warmup Iteration   1: 3146.587 ops/s
# Warmup Iteration   2: 3131.221 ops/s
# Warmup Iteration   3: 3120.968 ops/s
# Warmup Iteration   4: 3086.029 ops/s
# Warmup Iteration   5: 3098.604 ops/s
Iteration   1: 3090.186 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.013 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 3077.311 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.013 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 3119.003 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.013 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 3116.630 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.013 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 3060.914 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.013 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 47.62% complete, ETA 00:19:18
# Fork: 2 of 3
# Warmup Iteration   1: 3084.731 ops/s
# Warmup Iteration   2: 3103.787 ops/s
# Warmup Iteration   3: 3102.048 ops/s
# Warmup Iteration   4: 3089.062 ops/s
# Warmup Iteration   5: 3079.955 ops/s
Iteration   1: 3083.264 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.013 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 3095.162 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.013 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 3111.200 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.013 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 3114.958 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.013 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 3097.008 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.014 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 52.38% complete, ETA 00:17:33
# Fork: 3 of 3
# Warmup Iteration   1: 3055.373 ops/s
# Warmup Iteration   2: 3061.964 ops/s
# Warmup Iteration   3: 3055.830 ops/s
# Warmup Iteration   4: 3062.224 ops/s
# Warmup Iteration   5: 3055.593 ops/s
Iteration   1: 3059.724 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.013 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2769.311 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.015 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2820.203 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.014 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2842.920 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.014 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2846.419 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.015 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.gc.ReadWriteBarriersBenchmark.parallelOldGC":
  3020.281 ±(99.9%) 136.359 ops/s [Average]
  (min, avg, max) = (2769.311, 3020.281, 3119.003), stdev = 127.551
  CI (99.9%): [2883.922, 3156.640] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReadWriteBarriersBenchmark.parallelOldGC:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReadWriteBarriersBenchmark.parallelOldGC:·gc.alloc.rate.norm":
  0.014 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (0.013, 0.014, 0.015), stdev = 0.001
  CI (99.9%): [0.013, 0.014] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReadWriteBarriersBenchmark.parallelOldGC:·gc.count":
  ≈ 0 counts


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UseSerialGC
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.ReadWriteBarriersBenchmark.serialGC
# Parameters: (size = 262144)

# Run progress: 57.14% complete, ETA 00:15:47
# Fork: 1 of 3
# Warmup Iteration   1: 2874.452 ops/s
# Warmup Iteration   2: 2856.606 ops/s
# Warmup Iteration   3: 2862.908 ops/s
# Warmup Iteration   4: 2868.180 ops/s
# Warmup Iteration   5: 2856.723 ops/s
Iteration   1: 2858.448 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.014 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2868.801 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.014 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 3097.337 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.013 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2856.806 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.014 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2837.025 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.014 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 61.90% complete, ETA 00:14:02
# Fork: 2 of 3
# Warmup Iteration   1: 3137.235 ops/s
# Warmup Iteration   2: 2849.488 ops/s
# Warmup Iteration   3: 2858.515 ops/s
# Warmup Iteration   4: 2847.727 ops/s
# Warmup Iteration   5: 2868.192 ops/s
Iteration   1: 2874.372 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.014 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2876.729 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.014 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2885.674 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.014 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2883.782 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.014 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2882.660 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.014 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 66.67% complete, ETA 00:12:17
# Fork: 3 of 3
# Warmup Iteration   1: 3157.337 ops/s
# Warmup Iteration   2: 2855.415 ops/s
# Warmup Iteration   3: 2863.070 ops/s
# Warmup Iteration   4: 2865.357 ops/s
# Warmup Iteration   5: 2847.870 ops/s
Iteration   1: 2864.281 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.014 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2869.265 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.014 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2877.729 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.015 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2891.118 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.014 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2890.638 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.014 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.gc.ReadWriteBarriersBenchmark.serialGC":
  2887.644 ±(99.9%) 63.910 ops/s [Average]
  (min, avg, max) = (2837.025, 2887.644, 3097.337), stdev = 59.782
  CI (99.9%): [2823.734, 2951.555] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReadWriteBarriersBenchmark.serialGC:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReadWriteBarriersBenchmark.serialGC:·gc.alloc.rate.norm":
  0.014 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (0.013, 0.014, 0.015), stdev = 0.001
  CI (99.9%): [0.014, 0.015] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReadWriteBarriersBenchmark.serialGC:·gc.count":
  ≈ 0 counts


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+UseShenandoahGC
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.ReadWriteBarriersBenchmark.shenandoahGC
# Parameters: (size = 262144)

# Run progress: 71.43% complete, ETA 00:10:31
# Fork: 1 of 3
# Warmup Iteration   1: 4011.739 ops/s
# Warmup Iteration   2: 4001.920 ops/s
# Warmup Iteration   3: 4001.929 ops/s
# Warmup Iteration   4: 3965.046 ops/s
# Warmup Iteration   5: 3993.035 ops/s
Iteration   1: 3987.063 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.010 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 3976.059 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.010 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 3982.018 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.010 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 3976.052 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.010 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 3975.359 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.010 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 76.19% complete, ETA 00:08:46
# Fork: 2 of 3
# Warmup Iteration   1: 3906.341 ops/s
# Warmup Iteration   2: 3927.691 ops/s
# Warmup Iteration   3: 3945.876 ops/s
# Warmup Iteration   4: 3945.893 ops/s
# Warmup Iteration   5: 3936.493 ops/s
Iteration   1: 3941.729 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.010 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 3953.305 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.010 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 3927.108 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.010 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 3949.950 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.010 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 3952.088 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.011 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 80.95% complete, ETA 00:07:01
# Fork: 3 of 3
# Warmup Iteration   1: 3601.331 ops/s
# Warmup Iteration   2: 3624.457 ops/s
# Warmup Iteration   3: 3637.354 ops/s
# Warmup Iteration   4: 3627.650 ops/s
# Warmup Iteration   5: 3659.132 ops/s
Iteration   1: 3664.123 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.011 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 3684.858 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.011 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 3690.696 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.011 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 3661.285 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.011 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 3665.570 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.011 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.gc.ReadWriteBarriersBenchmark.shenandoahGC":
  3865.818 ±(99.9%) 151.788 ops/s [Average]
  (min, avg, max) = (3661.285, 3865.818, 3987.063), stdev = 141.983
  CI (99.9%): [3714.029, 4017.606] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReadWriteBarriersBenchmark.shenandoahGC:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReadWriteBarriersBenchmark.shenandoahGC:·gc.alloc.rate.norm":
  0.011 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (0.010, 0.011, 0.011), stdev = 0.001
  CI (99.9%): [0.010, 0.011] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReadWriteBarriersBenchmark.shenandoahGC:·gc.count":
  ≈ 0 counts


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+UseZGC
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.ReadWriteBarriersBenchmark.zGC
# Parameters: (size = 262144)

# Run progress: 85.71% complete, ETA 00:05:15
# Fork: 1 of 3
# Warmup Iteration   1: 3100.699 ops/s
# Warmup Iteration   2: 3435.077 ops/s
# Warmup Iteration   3: 3418.544 ops/s
# Warmup Iteration   4: 3405.623 ops/s
# Warmup Iteration   5: 3373.572 ops/s
Iteration   1: 3391.212 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.017 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 3386.113 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.017 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 3393.836 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.017 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 3391.565 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.017 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 3387.734 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.017 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 90.48% complete, ETA 00:03:30
# Fork: 2 of 3
# Warmup Iteration   1: 3381.694 ops/s
# Warmup Iteration   2: 3397.861 ops/s
# Warmup Iteration   3: 3398.875 ops/s
# Warmup Iteration   4: 3399.020 ops/s
# Warmup Iteration   5: 3394.766 ops/s
Iteration   1: 3383.291 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.017 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 3380.182 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.017 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 3417.332 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.017 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 3404.620 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.017 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 3391.185 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.017 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 95.24% complete, ETA 00:01:45
# Fork: 3 of 3
# Warmup Iteration   1: 3069.196 ops/s
# Warmup Iteration   2: 3075.627 ops/s
# Warmup Iteration   3: 3104.321 ops/s
# Warmup Iteration   4: 3451.731 ops/s
# Warmup Iteration   5: 3437.762 ops/s
Iteration   1: 3041.565 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.019 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 3069.215 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.019 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 3062.909 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.019 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 3100.896 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.019 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 3085.646 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.019 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.gc.ReadWriteBarriersBenchmark.zGC":
  3285.820 ±(99.9%) 168.029 ops/s [Average]
  (min, avg, max) = (3041.565, 3285.820, 3417.332), stdev = 157.174
  CI (99.9%): [3117.792, 3453.849] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReadWriteBarriersBenchmark.zGC:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReadWriteBarriersBenchmark.zGC:·gc.alloc.rate.norm":
  0.018 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (0.017, 0.018, 0.019), stdev = 0.001
  CI (99.9%): [0.017, 0.019] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReadWriteBarriersBenchmark.zGC:·gc.count":
  ≈ 0 counts


# Run complete. Total time: 00:36:51

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                                       (size)   Mode  Cnt     Score     Error   Units
ReadWriteBarriersBenchmark.concMarkSweepGC                      262144  thrpt   15  2407.377 ± 130.992   ops/s
ReadWriteBarriersBenchmark.concMarkSweepGC:·gc.alloc.rate       262144  thrpt   15    ≈ 10⁻⁴            MB/sec
ReadWriteBarriersBenchmark.concMarkSweepGC:·gc.alloc.rate.norm  262144  thrpt   15     0.017 ±   0.001    B/op
ReadWriteBarriersBenchmark.concMarkSweepGC:·gc.count            262144  thrpt   15       ≈ 0            counts
ReadWriteBarriersBenchmark.epsilonGC                            262144  thrpt   15  5181.864 ± 197.803   ops/s
ReadWriteBarriersBenchmark.epsilonGC:·gc.alloc.rate             262144  thrpt   15    ≈ 10⁻⁴            MB/sec
ReadWriteBarriersBenchmark.epsilonGC:·gc.alloc.rate.norm        262144  thrpt   15     0.008 ±   0.001    B/op
ReadWriteBarriersBenchmark.epsilonGC:·gc.count                  262144  thrpt   15       ≈ 0            counts
ReadWriteBarriersBenchmark.g1GC                                 262144  thrpt   15   272.882 ±  18.218   ops/s
ReadWriteBarriersBenchmark.g1GC:·gc.alloc.rate                  262144  thrpt   15    ≈ 10⁻⁴            MB/sec
ReadWriteBarriersBenchmark.g1GC:·gc.alloc.rate.norm             262144  thrpt   15     0.150 ±   0.010    B/op
ReadWriteBarriersBenchmark.g1GC:·gc.count                       262144  thrpt   15       ≈ 0            counts
ReadWriteBarriersBenchmark.parallelOldGC                        262144  thrpt   15  3020.281 ± 136.359   ops/s
ReadWriteBarriersBenchmark.parallelOldGC:·gc.alloc.rate         262144  thrpt   15    ≈ 10⁻⁴            MB/sec
ReadWriteBarriersBenchmark.parallelOldGC:·gc.alloc.rate.norm    262144  thrpt   15     0.014 ±   0.001    B/op
ReadWriteBarriersBenchmark.parallelOldGC:·gc.count              262144  thrpt   15       ≈ 0            counts
ReadWriteBarriersBenchmark.serialGC                             262144  thrpt   15  2887.644 ±  63.910   ops/s
ReadWriteBarriersBenchmark.serialGC:·gc.alloc.rate              262144  thrpt   15    ≈ 10⁻⁴            MB/sec
ReadWriteBarriersBenchmark.serialGC:·gc.alloc.rate.norm         262144  thrpt   15     0.014 ±   0.001    B/op
ReadWriteBarriersBenchmark.serialGC:·gc.count                   262144  thrpt   15       ≈ 0            counts
ReadWriteBarriersBenchmark.shenandoahGC                         262144  thrpt   15  3865.818 ± 151.788   ops/s
ReadWriteBarriersBenchmark.shenandoahGC:·gc.alloc.rate          262144  thrpt   15    ≈ 10⁻⁴            MB/sec
ReadWriteBarriersBenchmark.shenandoahGC:·gc.alloc.rate.norm     262144  thrpt   15     0.011 ±   0.001    B/op
ReadWriteBarriersBenchmark.shenandoahGC:·gc.count               262144  thrpt   15       ≈ 0            counts
ReadWriteBarriersBenchmark.zGC                                  262144  thrpt   15  3285.820 ± 168.029   ops/s
ReadWriteBarriersBenchmark.zGC:·gc.alloc.rate                   262144  thrpt   15    ≈ 10⁻⁴            MB/sec
ReadWriteBarriersBenchmark.zGC:·gc.alloc.rate.norm              262144  thrpt   15     0.018 ±   0.001    B/op
ReadWriteBarriersBenchmark.zGC:·gc.count                        262144  thrpt   15       ≈ 0            counts

Benchmark result is saved to results/report-openjdk-13/hotspotvm_gc/ReadWriteBarriersBenchmark.json
Running java  -jar benchmarks/target/benchmarks.jar .*ReferenceComparisonBenchmark.* -prof gc -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_gc/ReferenceComparisonBenchmark.json
# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UseConcMarkSweepGC
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.concMarkSweepGC
# Parameters: (percentageOfEqualNumbers = _0, size = 262140)

# Run progress: 0.00% complete, ETA 02:55:00
# Fork: 1 of 3
OpenJDK 64-Bit Server VM warning: Option UseConcMarkSweepGC was deprecated in version 9.0 and will likely be removed in a future release.
# Warmup Iteration   1: 11874.244 ops/s
# Warmup Iteration   2: 12041.736 ops/s
# Warmup Iteration   3: 11989.538 ops/s
# Warmup Iteration   4: 12015.348 ops/s
# Warmup Iteration   5: 13217.824 ops/s
Iteration   1: 13240.671 ops/s
                 ·gc.alloc.rate:      0.476 MB/sec
                 ·gc.alloc.rate.norm: 39.583 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 11747.722 ops/s
                 ·gc.alloc.rate:      0.476 MB/sec
                 ·gc.alloc.rate.norm: 44.613 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 11866.816 ops/s
                 ·gc.alloc.rate:      0.476 MB/sec
                 ·gc.alloc.rate.norm: 44.166 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 11804.838 ops/s
                 ·gc.alloc.rate:      0.475 MB/sec
                 ·gc.alloc.rate.norm: 44.398 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 13231.985 ops/s
                 ·gc.alloc.rate:      0.476 MB/sec
                 ·gc.alloc.rate.norm: 39.609 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 0.95% complete, ETA 03:02:47
# Fork: 2 of 3
OpenJDK 64-Bit Server VM warning: Option UseConcMarkSweepGC was deprecated in version 9.0 and will likely be removed in a future release.
# Warmup Iteration   1: 13001.177 ops/s
# Warmup Iteration   2: 11873.200 ops/s
# Warmup Iteration   3: 11973.463 ops/s
# Warmup Iteration   4: 11876.048 ops/s
# Warmup Iteration   5: 11832.251 ops/s
Iteration   1: 11942.454 ops/s
                 ·gc.alloc.rate:      0.476 MB/sec
                 ·gc.alloc.rate.norm: 43.886 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 11947.007 ops/s
                 ·gc.alloc.rate:      0.476 MB/sec
                 ·gc.alloc.rate.norm: 43.869 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 11940.374 ops/s
                 ·gc.alloc.rate:      0.476 MB/sec
                 ·gc.alloc.rate.norm: 43.894 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 12062.474 ops/s
                 ·gc.alloc.rate:      0.476 MB/sec
                 ·gc.alloc.rate.norm: 43.449 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 12038.511 ops/s
                 ·gc.alloc.rate:      0.476 MB/sec
                 ·gc.alloc.rate.norm: 43.536 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 1.90% complete, ETA 03:00:56
# Fork: 3 of 3
OpenJDK 64-Bit Server VM warning: Option UseConcMarkSweepGC was deprecated in version 9.0 and will likely be removed in a future release.
# Warmup Iteration   1: 11873.795 ops/s
# Warmup Iteration   2: 13192.168 ops/s
# Warmup Iteration   3: 13101.668 ops/s
# Warmup Iteration   4: 13049.126 ops/s
# Warmup Iteration   5: 12978.393 ops/s
Iteration   1: 12864.979 ops/s
                 ·gc.alloc.rate:      0.476 MB/sec
                 ·gc.alloc.rate.norm: 40.739 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 12975.391 ops/s
                 ·gc.alloc.rate:      0.476 MB/sec
                 ·gc.alloc.rate.norm: 40.392 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 11876.975 ops/s
                 ·gc.alloc.rate:      0.476 MB/sec
                 ·gc.alloc.rate.norm: 44.128 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 11891.201 ops/s
                 ·gc.alloc.rate:      0.476 MB/sec
                 ·gc.alloc.rate.norm: 44.075 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 13176.536 ops/s
                 ·gc.alloc.rate:      0.476 MB/sec
                 ·gc.alloc.rate.norm: 39.776 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.concMarkSweepGC":
  12307.196 ±(99.9%) 631.615 ops/s [Average]
  (min, avg, max) = (11747.722, 12307.196, 13240.671), stdev = 590.813
  CI (99.9%): [11675.581, 12938.810] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.concMarkSweepGC:·gc.alloc.rate":
  0.476 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.475, 0.476, 0.476), stdev = 0.001
  CI (99.9%): [0.476, 0.476] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.concMarkSweepGC:·gc.alloc.rate.norm":
  42.674 ±(99.9%) 2.120 B/op [Average]
  (min, avg, max) = (39.583, 42.674, 44.613), stdev = 1.983
  CI (99.9%): [40.554, 44.794] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.concMarkSweepGC:·gc.count":
  ≈ 0 counts


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UseConcMarkSweepGC
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.concMarkSweepGC
# Parameters: (percentageOfEqualNumbers = _25, size = 262140)

# Run progress: 2.86% complete, ETA 02:59:10
# Fork: 1 of 3
OpenJDK 64-Bit Server VM warning: Option UseConcMarkSweepGC was deprecated in version 9.0 and will likely be removed in a future release.
# Warmup Iteration   1: 7068.660 ops/s
# Warmup Iteration   2: 7431.698 ops/s
# Warmup Iteration   3: 7449.347 ops/s
# Warmup Iteration   4: 7442.207 ops/s
# Warmup Iteration   5: 7447.018 ops/s
Iteration   1: 7446.009 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.089 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 7448.317 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.085 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 7437.378 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.105 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 7459.177 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.064 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 7445.009 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.091 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 3.81% complete, ETA 02:57:22
# Fork: 2 of 3
OpenJDK 64-Bit Server VM warning: Option UseConcMarkSweepGC was deprecated in version 9.0 and will likely be removed in a future release.
# Warmup Iteration   1: 7432.429 ops/s
# Warmup Iteration   2: 7432.006 ops/s
# Warmup Iteration   3: 7439.098 ops/s
# Warmup Iteration   4: 7053.663 ops/s
# Warmup Iteration   5: 7065.418 ops/s
Iteration   1: 7072.432 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.833 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 7134.343 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.704 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 7075.735 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.826 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 7040.179 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.901 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 7073.401 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.831 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 4.76% complete, ETA 02:55:36
# Fork: 3 of 3
OpenJDK 64-Bit Server VM warning: Option UseConcMarkSweepGC was deprecated in version 9.0 and will likely be removed in a future release.
# Warmup Iteration   1: 7087.806 ops/s
# Warmup Iteration   2: 7447.910 ops/s
# Warmup Iteration   3: 7442.347 ops/s
# Warmup Iteration   4: 7445.740 ops/s
# Warmup Iteration   5: 7446.392 ops/s
Iteration   1: 7116.699 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.741 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 7489.494 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 7453.991 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.074 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 7445.672 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.090 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 7477.903 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.029 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.concMarkSweepGC":
  7307.716 ±(99.9%) 202.463 ops/s [Average]
  (min, avg, max) = (7040.179, 7307.716, 7489.494), stdev = 189.384
  CI (99.9%): [7105.253, 7510.179] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.concMarkSweepGC:·gc.alloc.rate":
  0.095 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.095, 0.095, 0.095), stdev = 0.001
  CI (99.9%): [0.095, 0.095] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.concMarkSweepGC:·gc.alloc.rate.norm":
  14.365 ±(99.9%) 0.402 B/op [Average]
  (min, avg, max) = (14.007, 14.365, 14.901), stdev = 0.376
  CI (99.9%): [13.962, 14.767] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.concMarkSweepGC:·gc.count":
  ≈ 0 counts


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UseConcMarkSweepGC
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.concMarkSweepGC
# Parameters: (percentageOfEqualNumbers = _50, size = 262140)

# Run progress: 5.71% complete, ETA 02:53:50
# Fork: 1 of 3
OpenJDK 64-Bit Server VM warning: Option UseConcMarkSweepGC was deprecated in version 9.0 and will likely be removed in a future release.
# Warmup Iteration   1: 7455.976 ops/s
# Warmup Iteration   2: 7463.168 ops/s
# Warmup Iteration   3: 7488.031 ops/s
# Warmup Iteration   4: 7487.077 ops/s
# Warmup Iteration   5: 7458.513 ops/s
Iteration   1: 7058.454 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.862 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 7471.702 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.040 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 7476.754 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.031 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 7163.349 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.644 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 7066.074 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.846 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 6.67% complete, ETA 02:52:05
# Fork: 2 of 3
OpenJDK 64-Bit Server VM warning: Option UseConcMarkSweepGC was deprecated in version 9.0 and will likely be removed in a future release.
# Warmup Iteration   1: 7133.699 ops/s
# Warmup Iteration   2: 7435.911 ops/s
# Warmup Iteration   3: 7440.777 ops/s
# Warmup Iteration   4: 7444.166 ops/s
# Warmup Iteration   5: 7448.722 ops/s
Iteration   1: 7453.365 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.075 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 7456.176 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.069 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 7440.672 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.099 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 7437.560 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.105 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 7101.936 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.771 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 7.62% complete, ETA 02:50:19
# Fork: 3 of 3
OpenJDK 64-Bit Server VM warning: Option UseConcMarkSweepGC was deprecated in version 9.0 and will likely be removed in a future release.
# Warmup Iteration   1: 7439.283 ops/s
# Warmup Iteration   2: 7060.612 ops/s
# Warmup Iteration   3: 7041.995 ops/s
# Warmup Iteration   4: 7077.122 ops/s
# Warmup Iteration   5: 7087.041 ops/s
Iteration   1: 7045.265 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.890 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 7122.237 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.729 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 7097.337 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.781 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 7071.206 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.835 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 7119.108 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.735 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.concMarkSweepGC":
  7238.746 ±(99.9%) 198.911 ops/s [Average]
  (min, avg, max) = (7045.265, 7238.746, 7476.754), stdev = 186.062
  CI (99.9%): [7039.835, 7437.658] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.concMarkSweepGC:·gc.alloc.rate":
  0.095 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.095, 0.095, 0.095), stdev = 0.001
  CI (99.9%): [0.095, 0.095] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.concMarkSweepGC:·gc.alloc.rate.norm":
  14.501 ±(99.9%) 0.395 B/op [Average]
  (min, avg, max) = (14.031, 14.501, 14.890), stdev = 0.370
  CI (99.9%): [14.106, 14.896] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.concMarkSweepGC:·gc.count":
  ≈ 0 counts


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UseConcMarkSweepGC
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.concMarkSweepGC
# Parameters: (percentageOfEqualNumbers = _75, size = 262140)

# Run progress: 8.57% complete, ETA 02:48:33
# Fork: 1 of 3
OpenJDK 64-Bit Server VM warning: Option UseConcMarkSweepGC was deprecated in version 9.0 and will likely be removed in a future release.
# Warmup Iteration   1: 7434.168 ops/s
# Warmup Iteration   2: 7446.286 ops/s
# Warmup Iteration   3: 7436.068 ops/s
# Warmup Iteration   4: 7436.764 ops/s
# Warmup Iteration   5: 7423.193 ops/s
Iteration   1: 7457.228 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.067 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 7479.134 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.026 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 7473.175 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.037 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 7471.475 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.041 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 7083.400 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.810 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 9.52% complete, ETA 02:46:47
# Fork: 2 of 3
OpenJDK 64-Bit Server VM warning: Option UseConcMarkSweepGC was deprecated in version 9.0 and will likely be removed in a future release.
# Warmup Iteration   1: 7082.018 ops/s
# Warmup Iteration   2: 7087.718 ops/s
# Warmup Iteration   3: 7105.390 ops/s
# Warmup Iteration   4: 7086.278 ops/s
# Warmup Iteration   5: 7455.762 ops/s
Iteration   1: 7441.941 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.096 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 7168.855 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.633 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 7173.590 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.623 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 7168.839 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.633 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 7183.138 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.604 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 10.48% complete, ETA 02:45:01
# Fork: 3 of 3
OpenJDK 64-Bit Server VM warning: Option UseConcMarkSweepGC was deprecated in version 9.0 and will likely be removed in a future release.
# Warmup Iteration   1: 7212.684 ops/s
# Warmup Iteration   2: 7155.715 ops/s
# Warmup Iteration   3: 7222.906 ops/s
# Warmup Iteration   4: 7232.652 ops/s
# Warmup Iteration   5: 7173.156 ops/s
Iteration   1: 7241.322 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.487 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 7190.847 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.588 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 7217.388 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.535 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 7235.480 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.499 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 7229.764 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.510 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.concMarkSweepGC":
  7281.038 ±(99.9%) 149.338 ops/s [Average]
  (min, avg, max) = (7083.400, 7281.038, 7479.134), stdev = 139.691
  CI (99.9%): [7131.700, 7430.376] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.concMarkSweepGC:·gc.alloc.rate":
  0.095 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.095, 0.095, 0.095), stdev = 0.001
  CI (99.9%): [0.095, 0.095] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.concMarkSweepGC:·gc.alloc.rate.norm":
  14.413 ±(99.9%) 0.293 B/op [Average]
  (min, avg, max) = (14.026, 14.413, 14.810), stdev = 0.274
  CI (99.9%): [14.120, 14.706] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.concMarkSweepGC:·gc.count":
  ≈ 0 counts


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UseConcMarkSweepGC
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.concMarkSweepGC
# Parameters: (percentageOfEqualNumbers = _100, size = 262140)

# Run progress: 11.43% complete, ETA 02:43:16
# Fork: 1 of 3
OpenJDK 64-Bit Server VM warning: Option UseConcMarkSweepGC was deprecated in version 9.0 and will likely be removed in a future release.
# Warmup Iteration   1: 16636.373 ops/s
# Warmup Iteration   2: 16452.661 ops/s
# Warmup Iteration   3: 16288.456 ops/s
# Warmup Iteration   4: 16437.170 ops/s
# Warmup Iteration   5: 16453.252 ops/s
Iteration   1: 16433.989 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 6.383 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 16386.694 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 6.402 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 16388.364 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 6.401 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 16179.876 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 6.483 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 14842.297 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 7.068 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 12.38% complete, ETA 02:41:31
# Fork: 2 of 3
OpenJDK 64-Bit Server VM warning: Option UseConcMarkSweepGC was deprecated in version 9.0 and will likely be removed in a future release.
# Warmup Iteration   1: 16400.951 ops/s
# Warmup Iteration   2: 16466.262 ops/s
# Warmup Iteration   3: 16400.821 ops/s
# Warmup Iteration   4: 16288.748 ops/s
# Warmup Iteration   5: 16266.132 ops/s
Iteration   1: 16295.010 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 6.438 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 16330.675 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 6.424 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 16280.766 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 6.443 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 16293.167 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 6.438 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 16134.486 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 6.502 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 13.33% complete, ETA 02:39:45
# Fork: 3 of 3
OpenJDK 64-Bit Server VM warning: Option UseConcMarkSweepGC was deprecated in version 9.0 and will likely be removed in a future release.
# Warmup Iteration   1: 14504.713 ops/s
# Warmup Iteration   2: 14734.658 ops/s
# Warmup Iteration   3: 14665.487 ops/s
# Warmup Iteration   4: 14819.391 ops/s
# Warmup Iteration   5: 15070.261 ops/s
Iteration   1: 14975.754 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 7.005 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 15091.499 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 6.951 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 15118.591 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 6.939 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 16518.514 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 6.351 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 15000.240 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 6.993 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.concMarkSweepGC":
  15884.661 ±(99.9%) 697.571 ops/s [Average]
  (min, avg, max) = (14842.297, 15884.661, 16518.514), stdev = 652.509
  CI (99.9%): [15187.090, 16582.233] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.concMarkSweepGC:·gc.alloc.rate":
  0.095 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.095, 0.095, 0.095), stdev = 0.001
  CI (99.9%): [0.095, 0.095] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.concMarkSweepGC:·gc.alloc.rate.norm":
  6.615 ±(99.9%) 0.299 B/op [Average]
  (min, avg, max) = (6.351, 6.615, 7.068), stdev = 0.279
  CI (99.9%): [6.316, 6.913] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.concMarkSweepGC:·gc.count":
  ≈ 0 counts


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+UseEpsilonGC
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.epsilonGC
# Parameters: (percentageOfEqualNumbers = _0, size = 262140)

# Run progress: 14.29% complete, ETA 02:38:00
# Fork: 1 of 3
# Warmup Iteration   1: 16952.670 ops/s
# Warmup Iteration   2: 17044.422 ops/s
# Warmup Iteration   3: 17107.804 ops/s
# Warmup Iteration   4: 17104.816 ops/s
# Warmup Iteration   5: 17226.181 ops/s
Iteration   1: 16333.528 ops/s
                 ·gc.alloc.rate:      0.476 MB/sec
                 ·gc.alloc.rate.norm: 32.088 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 15405.372 ops/s
                 ·gc.alloc.rate:      0.476 MB/sec
                 ·gc.alloc.rate.norm: 34.021 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 16886.256 ops/s
                 ·gc.alloc.rate:      0.476 MB/sec
                 ·gc.alloc.rate.norm: 31.037 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 17056.466 ops/s
                 ·gc.alloc.rate:      0.476 MB/sec
                 ·gc.alloc.rate.norm: 30.728 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 17110.562 ops/s
                 ·gc.alloc.rate:      0.476 MB/sec
                 ·gc.alloc.rate.norm: 30.630 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 15.24% complete, ETA 02:36:14
# Fork: 2 of 3
# Warmup Iteration   1: 16944.660 ops/s
# Warmup Iteration   2: 17070.565 ops/s
# Warmup Iteration   3: 16909.751 ops/s
# Warmup Iteration   4: 17040.310 ops/s
# Warmup Iteration   5: 17163.492 ops/s
Iteration   1: 17097.483 ops/s
                 ·gc.alloc.rate:      0.476 MB/sec
                 ·gc.alloc.rate.norm: 30.654 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 17142.889 ops/s
                 ·gc.alloc.rate:      0.476 MB/sec
                 ·gc.alloc.rate.norm: 30.573 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 17085.963 ops/s
                 ·gc.alloc.rate:      0.476 MB/sec
                 ·gc.alloc.rate.norm: 30.675 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 17037.462 ops/s
                 ·gc.alloc.rate:      0.476 MB/sec
                 ·gc.alloc.rate.norm: 30.762 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 18835.996 ops/s
                 ·gc.alloc.rate:      0.476 MB/sec
                 ·gc.alloc.rate.norm: 27.825 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 16.19% complete, ETA 02:34:29
# Fork: 3 of 3
# Warmup Iteration   1: 16946.324 ops/s
# Warmup Iteration   2: 18708.903 ops/s
# Warmup Iteration   3: 18683.967 ops/s
# Warmup Iteration   4: 18436.818 ops/s
# Warmup Iteration   5: 18589.900 ops/s
Iteration   1: 18535.807 ops/s
                 ·gc.alloc.rate:      0.476 MB/sec
                 ·gc.alloc.rate.norm: 28.275 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 18571.476 ops/s
                 ·gc.alloc.rate:      0.476 MB/sec
                 ·gc.alloc.rate.norm: 28.221 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 18529.768 ops/s
                 ·gc.alloc.rate:      0.476 MB/sec
                 ·gc.alloc.rate.norm: 28.284 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 18539.242 ops/s
                 ·gc.alloc.rate:      0.476 MB/sec
                 ·gc.alloc.rate.norm: 28.270 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 18392.494 ops/s
                 ·gc.alloc.rate:      0.476 MB/sec
                 ·gc.alloc.rate.norm: 28.496 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.epsilonGC":
  17504.051 ±(99.9%) 1072.518 ops/s [Average]
  (min, avg, max) = (15405.372, 17504.051, 18835.996), stdev = 1003.234
  CI (99.9%): [16431.533, 18576.569] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.epsilonGC:·gc.alloc.rate":
  0.476 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.476, 0.476, 0.476), stdev = 0.001
  CI (99.9%): [0.475, 0.476] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.epsilonGC:·gc.alloc.rate.norm":
  30.036 ±(99.9%) 1.882 B/op [Average]
  (min, avg, max) = (27.825, 30.036, 34.021), stdev = 1.760
  CI (99.9%): [28.154, 31.918] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.epsilonGC:·gc.count":
  ≈ 0 counts


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+UseEpsilonGC
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.epsilonGC
# Parameters: (percentageOfEqualNumbers = _25, size = 262140)

# Run progress: 17.14% complete, ETA 02:32:44
# Fork: 1 of 3
# Warmup Iteration   1: 6977.236 ops/s
# Warmup Iteration   2: 7439.176 ops/s
# Warmup Iteration   3: 7437.509 ops/s
# Warmup Iteration   4: 7450.635 ops/s
# Warmup Iteration   5: 7442.768 ops/s
Iteration   1: 7426.710 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.126 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 7434.410 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.111 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 7453.631 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.075 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 7445.124 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.091 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 7437.473 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.105 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 18.10% complete, ETA 02:30:58
# Fork: 2 of 3
# Warmup Iteration   1: 7025.437 ops/s
# Warmup Iteration   2: 7468.366 ops/s
# Warmup Iteration   3: 7445.504 ops/s
# Warmup Iteration   4: 7484.134 ops/s
# Warmup Iteration   5: 7434.951 ops/s
Iteration   1: 7446.416 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.088 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 7436.591 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.107 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 7442.242 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.096 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 7489.493 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 7442.206 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.097 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 19.05% complete, ETA 02:29:13
# Fork: 3 of 3
# Warmup Iteration   1: 7431.003 ops/s
# Warmup Iteration   2: 7446.950 ops/s
# Warmup Iteration   3: 7439.000 ops/s
# Warmup Iteration   4: 7440.707 ops/s
# Warmup Iteration   5: 7443.226 ops/s
Iteration   1: 7478.897 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.027 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 7434.370 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.111 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 7429.461 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.120 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 7429.871 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.119 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 7435.446 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.109 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.epsilonGC":
  7444.156 ±(99.9%) 19.078 ops/s [Average]
  (min, avg, max) = (7426.710, 7444.156, 7489.493), stdev = 17.846
  CI (99.9%): [7425.078, 7463.234] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.epsilonGC:·gc.alloc.rate":
  0.095 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.095, 0.095, 0.095), stdev = 0.001
  CI (99.9%): [0.095, 0.095] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.epsilonGC:·gc.alloc.rate.norm":
  14.093 ±(99.9%) 0.036 B/op [Average]
  (min, avg, max) = (14.007, 14.093, 14.126), stdev = 0.034
  CI (99.9%): [14.057, 14.129] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.epsilonGC:·gc.count":
  ≈ 0 counts


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+UseEpsilonGC
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.epsilonGC
# Parameters: (percentageOfEqualNumbers = _50, size = 262140)

# Run progress: 20.00% complete, ETA 02:27:28
# Fork: 1 of 3
# Warmup Iteration   1: 7074.178 ops/s
# Warmup Iteration   2: 7123.420 ops/s
# Warmup Iteration   3: 7127.949 ops/s
# Warmup Iteration   4: 7085.421 ops/s
# Warmup Iteration   5: 7124.683 ops/s
Iteration   1: 7149.253 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.673 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 7146.667 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.679 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 7154.078 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.664 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 7163.210 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.645 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 7193.859 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.582 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 20.95% complete, ETA 02:25:42
# Fork: 2 of 3
# Warmup Iteration   1: 7437.724 ops/s
# Warmup Iteration   2: 7451.920 ops/s
# Warmup Iteration   3: 7474.144 ops/s
# Warmup Iteration   4: 7466.001 ops/s
# Warmup Iteration   5: 7449.823 ops/s
Iteration   1: 7437.700 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.104 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 7441.459 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.097 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 7444.158 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.092 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 7462.456 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.057 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 7436.429 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.107 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 21.90% complete, ETA 02:23:57
# Fork: 3 of 3
# Warmup Iteration   1: 7461.931 ops/s
# Warmup Iteration   2: 7439.597 ops/s
# Warmup Iteration   3: 7442.826 ops/s
# Warmup Iteration   4: 7439.992 ops/s
# Warmup Iteration   5: 7438.357 ops/s
Iteration   1: 7439.889 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.100 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 7457.112 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.068 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 7479.120 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.027 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 7482.146 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.021 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 7451.418 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.078 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.epsilonGC":
  7355.930 ±(99.9%) 153.275 ops/s [Average]
  (min, avg, max) = (7146.667, 7355.930, 7482.146), stdev = 143.373
  CI (99.9%): [7202.655, 7509.205] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.epsilonGC:·gc.alloc.rate":
  0.095 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.095, 0.095, 0.095), stdev = 0.001
  CI (99.9%): [0.095, 0.095] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.epsilonGC:·gc.alloc.rate.norm":
  14.266 ±(99.9%) 0.301 B/op [Average]
  (min, avg, max) = (14.021, 14.266, 14.679), stdev = 0.282
  CI (99.9%): [13.965, 14.567] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.epsilonGC:·gc.count":
  ≈ 0 counts


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+UseEpsilonGC
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.epsilonGC
# Parameters: (percentageOfEqualNumbers = _75, size = 262140)

# Run progress: 22.86% complete, ETA 02:22:11
# Fork: 1 of 3
# Warmup Iteration   1: 7107.748 ops/s
# Warmup Iteration   2: 7471.702 ops/s
# Warmup Iteration   3: 7382.501 ops/s
# Warmup Iteration   4: 7475.559 ops/s
# Warmup Iteration   5: 7443.127 ops/s
Iteration   1: 7449.266 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.082 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 7454.324 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.073 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 7075.255 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.827 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 7089.665 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.797 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 7148.720 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.674 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 23.81% complete, ETA 02:20:26
# Fork: 2 of 3
# Warmup Iteration   1: 7459.671 ops/s
# Warmup Iteration   2: 7478.842 ops/s
# Warmup Iteration   3: 7448.086 ops/s
# Warmup Iteration   4: 7434.580 ops/s
# Warmup Iteration   5: 7436.119 ops/s
Iteration   1: 7449.288 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.082 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 7439.546 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.101 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 7478.471 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.027 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 7251.061 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.467 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 7441.966 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.096 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 24.76% complete, ETA 02:18:41
# Fork: 3 of 3
# Warmup Iteration   1: 7440.026 ops/s
# Warmup Iteration   2: 7452.817 ops/s
# Warmup Iteration   3: 7448.674 ops/s
# Warmup Iteration   4: 7442.795 ops/s
# Warmup Iteration   5: 7440.731 ops/s
Iteration   1: 7462.073 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.058 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 7438.272 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.103 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 7456.625 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.068 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 7474.396 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.035 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 7450.087 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.081 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.epsilonGC":
  7370.601 ±(99.9%) 158.563 ops/s [Average]
  (min, avg, max) = (7075.255, 7370.601, 7478.471), stdev = 148.320
  CI (99.9%): [7212.038, 7529.164] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.epsilonGC:·gc.alloc.rate":
  0.095 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.095, 0.095, 0.095), stdev = 0.001
  CI (99.9%): [0.095, 0.095] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.epsilonGC:·gc.alloc.rate.norm":
  14.238 ±(99.9%) 0.314 B/op [Average]
  (min, avg, max) = (14.027, 14.238, 14.827), stdev = 0.294
  CI (99.9%): [13.924, 14.552] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.epsilonGC:·gc.count":
  ≈ 0 counts


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+UseEpsilonGC
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.epsilonGC
# Parameters: (percentageOfEqualNumbers = _100, size = 262140)

# Run progress: 25.71% complete, ETA 02:16:55
# Fork: 1 of 3
# Warmup Iteration   1: 17001.072 ops/s
# Warmup Iteration   2: 17153.092 ops/s
# Warmup Iteration   3: 17139.944 ops/s
# Warmup Iteration   4: 17154.849 ops/s
# Warmup Iteration   5: 17160.426 ops/s
Iteration   1: 17181.543 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 6.106 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 17061.577 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 6.148 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 17144.737 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 6.119 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 17173.431 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 6.108 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 17215.250 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 6.094 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 26.67% complete, ETA 02:15:10
# Fork: 2 of 3
# Warmup Iteration   1: 18820.678 ops/s
# Warmup Iteration   2: 18716.120 ops/s
# Warmup Iteration   3: 18557.111 ops/s
# Warmup Iteration   4: 18632.119 ops/s
# Warmup Iteration   5: 18457.787 ops/s
Iteration   1: 18441.653 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 5.688 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 18593.566 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 5.642 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 18439.460 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 5.689 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 18506.953 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 5.668 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 18537.757 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 5.659 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 27.62% complete, ETA 02:13:24
# Fork: 3 of 3
# Warmup Iteration   1: 18578.276 ops/s
# Warmup Iteration   2: 18560.036 ops/s
# Warmup Iteration   3: 18466.444 ops/s
# Warmup Iteration   4: 18241.333 ops/s
# Warmup Iteration   5: 18422.104 ops/s
Iteration   1: 18261.025 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 5.745 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 18253.091 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 5.747 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 18405.935 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 5.699 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 18389.551 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 5.704 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 18233.253 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 5.753 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.epsilonGC":
  17989.252 ±(99.9%) 662.049 ops/s [Average]
  (min, avg, max) = (17061.577, 17989.252, 18593.566), stdev = 619.281
  CI (99.9%): [17327.204, 18651.301] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.epsilonGC:·gc.alloc.rate":
  0.095 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.095, 0.095, 0.095), stdev = 0.001
  CI (99.9%): [0.095, 0.095] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.epsilonGC:·gc.alloc.rate.norm":
  5.838 ±(99.9%) 0.220 B/op [Average]
  (min, avg, max) = (5.642, 5.838, 6.148), stdev = 0.205
  CI (99.9%): [5.618, 6.057] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.epsilonGC:·gc.count":
  ≈ 0 counts


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UseG1GC
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.g1GC
# Parameters: (percentageOfEqualNumbers = _0, size = 262140)

# Run progress: 28.57% complete, ETA 02:11:39
# Fork: 1 of 3
# Warmup Iteration   1: 16473.184 ops/s
# Warmup Iteration   2: 16738.845 ops/s
# Warmup Iteration   3: 16841.860 ops/s
# Warmup Iteration   4: 16870.162 ops/s
# Warmup Iteration   5: 16925.445 ops/s
Iteration   1: 17051.278 ops/s
                 ·gc.alloc.rate:      0.476 MB/sec
                 ·gc.alloc.rate.norm: 30.737 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 17080.310 ops/s
                 ·gc.alloc.rate:      0.476 MB/sec
                 ·gc.alloc.rate.norm: 30.685 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 17131.525 ops/s
                 ·gc.alloc.rate:      0.476 MB/sec
                 ·gc.alloc.rate.norm: 30.593 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 17125.187 ops/s
                 ·gc.alloc.rate:      0.476 MB/sec
                 ·gc.alloc.rate.norm: 30.604 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 17126.359 ops/s
                 ·gc.alloc.rate:      0.476 MB/sec
                 ·gc.alloc.rate.norm: 30.603 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 29.52% complete, ETA 02:09:54
# Fork: 2 of 3
# Warmup Iteration   1: 18577.541 ops/s
# Warmup Iteration   2: 18614.968 ops/s
# Warmup Iteration   3: 18554.774 ops/s
# Warmup Iteration   4: 18355.746 ops/s
# Warmup Iteration   5: 18456.678 ops/s
Iteration   1: 18419.886 ops/s
                 ·gc.alloc.rate:      0.476 MB/sec
                 ·gc.alloc.rate.norm: 28.453 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 18236.562 ops/s
                 ·gc.alloc.rate:      0.476 MB/sec
                 ·gc.alloc.rate.norm: 28.739 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 18380.334 ops/s
                 ·gc.alloc.rate:      0.476 MB/sec
                 ·gc.alloc.rate.norm: 28.514 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 18374.915 ops/s
                 ·gc.alloc.rate:      0.476 MB/sec
                 ·gc.alloc.rate.norm: 28.523 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 18370.691 ops/s
                 ·gc.alloc.rate:      0.476 MB/sec
                 ·gc.alloc.rate.norm: 28.529 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 30.48% complete, ETA 02:08:09
# Fork: 3 of 3
# Warmup Iteration   1: 18442.980 ops/s
# Warmup Iteration   2: 18379.297 ops/s
# Warmup Iteration   3: 18443.772 ops/s
# Warmup Iteration   4: 18468.467 ops/s
# Warmup Iteration   5: 18403.501 ops/s
Iteration   1: 18436.043 ops/s
                 ·gc.alloc.rate:      0.476 MB/sec
                 ·gc.alloc.rate.norm: 28.428 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 18275.046 ops/s
                 ·gc.alloc.rate:      0.476 MB/sec
                 ·gc.alloc.rate.norm: 28.679 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 18193.777 ops/s
                 ·gc.alloc.rate:      0.476 MB/sec
                 ·gc.alloc.rate.norm: 28.807 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 18279.464 ops/s
                 ·gc.alloc.rate:      0.476 MB/sec
                 ·gc.alloc.rate.norm: 28.672 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 18301.523 ops/s
                 ·gc.alloc.rate:      0.476 MB/sec
                 ·gc.alloc.rate.norm: 28.637 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.g1GC":
  17918.860 ±(99.9%) 642.529 ops/s [Average]
  (min, avg, max) = (17051.278, 17918.860, 18436.043), stdev = 601.022
  CI (99.9%): [17276.331, 18561.389] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.g1GC:·gc.alloc.rate":
  0.476 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.476, 0.476, 0.476), stdev = 0.001
  CI (99.9%): [0.476, 0.476] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.g1GC:·gc.alloc.rate.norm":
  29.280 ±(99.9%) 1.074 B/op [Average]
  (min, avg, max) = (28.428, 29.280, 30.737), stdev = 1.004
  CI (99.9%): [28.207, 30.354] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.g1GC:·gc.count":
  ≈ 0 counts


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UseG1GC
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.g1GC
# Parameters: (percentageOfEqualNumbers = _25, size = 262140)

# Run progress: 31.43% complete, ETA 02:06:23
# Fork: 1 of 3
# Warmup Iteration   1: 6957.912 ops/s
# Warmup Iteration   2: 7443.387 ops/s
# Warmup Iteration   3: 7447.329 ops/s
# Warmup Iteration   4: 7456.057 ops/s
# Warmup Iteration   5: 7452.443 ops/s
Iteration   1: 7138.944 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.695 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 7131.138 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.711 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 7154.706 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.663 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 7174.453 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.622 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 7139.210 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.694 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 32.38% complete, ETA 02:04:38
# Fork: 2 of 3
# Warmup Iteration   1: 7124.146 ops/s
# Warmup Iteration   2: 7114.633 ops/s
# Warmup Iteration   3: 7083.880 ops/s
# Warmup Iteration   4: 7137.848 ops/s
# Warmup Iteration   5: 7090.849 ops/s
Iteration   1: 7112.591 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.750 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 7236.989 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.496 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 7252.097 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.466 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 7244.741 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.481 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 7266.792 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.437 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 33.33% complete, ETA 02:02:53
# Fork: 3 of 3
# Warmup Iteration   1: 7061.390 ops/s
# Warmup Iteration   2: 7436.008 ops/s
# Warmup Iteration   3: 7139.336 ops/s
# Warmup Iteration   4: 7098.089 ops/s
# Warmup Iteration   5: 7120.576 ops/s
Iteration   1: 7128.324 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.717 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 7065.959 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.847 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 7124.522 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.725 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 7128.219 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.717 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 7136.224 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.701 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.g1GC":
  7162.327 ±(99.9%) 63.753 ops/s [Average]
  (min, avg, max) = (7065.959, 7162.327, 7266.792), stdev = 59.634
  CI (99.9%): [7098.574, 7226.080] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.g1GC:·gc.alloc.rate":
  0.095 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.095, 0.095, 0.095), stdev = 0.001
  CI (99.9%): [0.095, 0.095] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.g1GC:·gc.alloc.rate.norm":
  14.648 ±(99.9%) 0.130 B/op [Average]
  (min, avg, max) = (14.437, 14.648, 14.847), stdev = 0.121
  CI (99.9%): [14.518, 14.778] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.g1GC:·gc.count":
  ≈ 0 counts


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UseG1GC
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.g1GC
# Parameters: (percentageOfEqualNumbers = _50, size = 262140)

# Run progress: 34.29% complete, ETA 02:01:07
# Fork: 1 of 3
# Warmup Iteration   1: 7251.675 ops/s
# Warmup Iteration   2: 7455.105 ops/s
# Warmup Iteration   3: 7431.295 ops/s
# Warmup Iteration   4: 7454.359 ops/s
# Warmup Iteration   5: 7476.607 ops/s
Iteration   1: 7445.291 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.090 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 7432.848 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.114 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 7437.256 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.105 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 7433.124 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.113 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 7484.014 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.017 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 35.24% complete, ETA 01:59:22
# Fork: 2 of 3
# Warmup Iteration   1: 7447.509 ops/s
# Warmup Iteration   2: 7436.201 ops/s
# Warmup Iteration   3: 7450.708 ops/s
# Warmup Iteration   4: 7433.756 ops/s
# Warmup Iteration   5: 7455.062 ops/s
Iteration   1: 7468.426 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.046 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 7447.062 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.087 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 7483.803 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.017 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 7474.699 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.034 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 7471.134 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.041 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 36.19% complete, ETA 01:57:36
# Fork: 3 of 3
# Warmup Iteration   1: 7181.777 ops/s
# Warmup Iteration   2: 7479.863 ops/s
# Warmup Iteration   3: 7476.410 ops/s
# Warmup Iteration   4: 7441.180 ops/s
# Warmup Iteration   5: 7158.851 ops/s
Iteration   1: 7251.228 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.467 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 7252.952 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.464 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 7255.341 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.459 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 7257.270 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.455 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 7248.181 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.473 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.g1GC":
  7389.509 ±(99.9%) 108.304 ops/s [Average]
  (min, avg, max) = (7248.181, 7389.509, 7484.014), stdev = 101.308
  CI (99.9%): [7281.204, 7497.813] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.g1GC:·gc.alloc.rate":
  0.095 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.095, 0.095, 0.095), stdev = 0.001
  CI (99.9%): [0.095, 0.095] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.g1GC:·gc.alloc.rate.norm":
  14.199 ±(99.9%) 0.210 B/op [Average]
  (min, avg, max) = (14.017, 14.199, 14.473), stdev = 0.196
  CI (99.9%): [13.989, 14.409] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.g1GC:·gc.count":
  ≈ 0 counts


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UseG1GC
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.g1GC
# Parameters: (percentageOfEqualNumbers = _75, size = 262140)

# Run progress: 37.14% complete, ETA 01:55:51
# Fork: 1 of 3
# Warmup Iteration   1: 7465.369 ops/s
# Warmup Iteration   2: 7448.797 ops/s
# Warmup Iteration   3: 7440.469 ops/s
# Warmup Iteration   4: 7445.097 ops/s
# Warmup Iteration   5: 7479.015 ops/s
Iteration   1: 7440.025 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.100 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 7433.177 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.113 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 7439.855 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.100 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 7438.251 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.103 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 7473.805 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.036 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 38.10% complete, ETA 01:54:06
# Fork: 2 of 3
# Warmup Iteration   1: 7196.870 ops/s
# Warmup Iteration   2: 7184.364 ops/s
# Warmup Iteration   3: 7231.115 ops/s
# Warmup Iteration   4: 7224.717 ops/s
# Warmup Iteration   5: 7232.990 ops/s
Iteration   1: 7234.409 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.501 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 7247.503 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.474 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 7196.680 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.577 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 7227.861 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.514 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 7229.886 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.510 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 39.05% complete, ETA 01:52:20
# Fork: 3 of 3
# Warmup Iteration   1: 7425.871 ops/s
# Warmup Iteration   2: 7110.406 ops/s
# Warmup Iteration   3: 7110.396 ops/s
# Warmup Iteration   4: 7076.943 ops/s
# Warmup Iteration   5: 7145.449 ops/s
Iteration   1: 7119.094 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.735 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 7156.110 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.659 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 7132.977 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.707 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 7436.623 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.106 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 7443.749 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.093 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.g1GC":
  7310.000 ±(99.9%) 143.780 ops/s [Average]
  (min, avg, max) = (7119.094, 7310.000, 7473.805), stdev = 134.492
  CI (99.9%): [7166.220, 7453.781] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.g1GC:·gc.alloc.rate":
  0.095 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.095, 0.095, 0.095), stdev = 0.001
  CI (99.9%): [0.095, 0.095] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.g1GC:·gc.alloc.rate.norm":
  14.355 ±(99.9%) 0.283 B/op [Average]
  (min, avg, max) = (14.036, 14.355, 14.735), stdev = 0.264
  CI (99.9%): [14.073, 14.638] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.g1GC:·gc.count":
  ≈ 0 counts


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UseG1GC
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.g1GC
# Parameters: (percentageOfEqualNumbers = _100, size = 262140)

# Run progress: 40.00% complete, ETA 01:50:35
# Fork: 1 of 3
# Warmup Iteration   1: 17143.215 ops/s
# Warmup Iteration   2: 16927.801 ops/s
# Warmup Iteration   3: 16963.580 ops/s
# Warmup Iteration   4: 16961.167 ops/s
# Warmup Iteration   5: 16865.526 ops/s
Iteration   1: 16969.369 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 6.182 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 16963.971 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 6.184 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 16823.824 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 6.235 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 16953.898 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 6.188 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 16977.308 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 6.179 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 40.95% complete, ETA 01:48:50
# Fork: 2 of 3
# Warmup Iteration   1: 17108.305 ops/s
# Warmup Iteration   2: 17241.605 ops/s
# Warmup Iteration   3: 17232.826 ops/s
# Warmup Iteration   4: 17221.080 ops/s
# Warmup Iteration   5: 17191.617 ops/s
Iteration   1: 17069.381 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 6.146 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 17132.660 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 6.123 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 17170.066 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 6.110 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 17212.219 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 6.095 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 17175.901 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 6.108 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 41.90% complete, ETA 01:47:04
# Fork: 3 of 3
# Warmup Iteration   1: 18781.257 ops/s
# Warmup Iteration   2: 18572.622 ops/s
# Warmup Iteration   3: 18624.450 ops/s
# Warmup Iteration   4: 18550.035 ops/s
# Warmup Iteration   5: 18448.681 ops/s
Iteration   1: 18439.283 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 5.689 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 18426.516 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 5.693 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 18260.664 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 5.745 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 18360.277 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 5.714 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 18321.876 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 5.726 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.g1GC":
  17483.814 ±(99.9%) 696.682 ops/s [Average]
  (min, avg, max) = (16823.824, 17483.814, 18439.283), stdev = 651.677
  CI (99.9%): [16787.132, 18180.496] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.g1GC:·gc.alloc.rate":
  0.095 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.095, 0.095, 0.095), stdev = 0.001
  CI (99.9%): [0.095, 0.095] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.g1GC:·gc.alloc.rate.norm":
  6.008 ±(99.9%) 0.234 B/op [Average]
  (min, avg, max) = (5.689, 6.008, 6.235), stdev = 0.219
  CI (99.9%): [5.774, 6.242] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.g1GC:·gc.count":
  ≈ 0 counts


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UseParallelOldGC
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.parallelOldGC
# Parameters: (percentageOfEqualNumbers = _0, size = 262140)

# Run progress: 42.86% complete, ETA 01:45:19
# Fork: 1 of 3
# Warmup Iteration   1: 11654.155 ops/s
# Warmup Iteration   2: 11991.181 ops/s
# Warmup Iteration   3: 11964.311 ops/s
# Warmup Iteration   4: 11973.618 ops/s
# Warmup Iteration   5: 12038.206 ops/s
Iteration   1: 12056.258 ops/s
                 ·gc.alloc.rate:      0.476 MB/sec
                 ·gc.alloc.rate.norm: 43.472 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 11930.190 ops/s
                 ·gc.alloc.rate:      0.476 MB/sec
                 ·gc.alloc.rate.norm: 43.931 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 12049.345 ops/s
                 ·gc.alloc.rate:      0.476 MB/sec
                 ·gc.alloc.rate.norm: 43.497 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 11951.972 ops/s
                 ·gc.alloc.rate:      0.476 MB/sec
                 ·gc.alloc.rate.norm: 43.851 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 12050.652 ops/s
                 ·gc.alloc.rate:      0.476 MB/sec
                 ·gc.alloc.rate.norm: 43.492 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 43.81% complete, ETA 01:43:34
# Fork: 2 of 3
# Warmup Iteration   1: 13154.294 ops/s
# Warmup Iteration   2: 13058.971 ops/s
# Warmup Iteration   3: 13021.165 ops/s
# Warmup Iteration   4: 12954.235 ops/s
# Warmup Iteration   5: 12871.292 ops/s
Iteration   1: 12955.273 ops/s
                 ·gc.alloc.rate:      0.476 MB/sec
                 ·gc.alloc.rate.norm: 40.455 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 12949.339 ops/s
                 ·gc.alloc.rate:      0.476 MB/sec
                 ·gc.alloc.rate.norm: 40.474 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 12942.560 ops/s
                 ·gc.alloc.rate:      0.476 MB/sec
                 ·gc.alloc.rate.norm: 40.494 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 12965.796 ops/s
                 ·gc.alloc.rate:      0.476 MB/sec
                 ·gc.alloc.rate.norm: 40.422 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 12975.736 ops/s
                 ·gc.alloc.rate:      0.476 MB/sec
                 ·gc.alloc.rate.norm: 40.391 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 44.76% complete, ETA 01:41:48
# Fork: 3 of 3
# Warmup Iteration   1: 12875.958 ops/s
# Warmup Iteration   2: 12949.220 ops/s
# Warmup Iteration   3: 12985.436 ops/s
# Warmup Iteration   4: 11655.208 ops/s
# Warmup Iteration   5: 11744.216 ops/s
Iteration   1: 11706.790 ops/s
                 ·gc.alloc.rate:      0.476 MB/sec
                 ·gc.alloc.rate.norm: 44.769 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 12969.044 ops/s
                 ·gc.alloc.rate:      0.475 MB/sec
                 ·gc.alloc.rate.norm: 40.412 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 12993.453 ops/s
                 ·gc.alloc.rate:      0.476 MB/sec
                 ·gc.alloc.rate.norm: 40.336 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 12985.776 ops/s
                 ·gc.alloc.rate:      0.476 MB/sec
                 ·gc.alloc.rate.norm: 40.360 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 12955.763 ops/s
                 ·gc.alloc.rate:      0.476 MB/sec
                 ·gc.alloc.rate.norm: 40.453 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.parallelOldGC":
  12562.530 ±(99.9%) 553.512 ops/s [Average]
  (min, avg, max) = (11706.790, 12562.530, 12993.453), stdev = 517.755
  CI (99.9%): [12009.018, 13116.041] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.parallelOldGC:·gc.alloc.rate":
  0.476 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.475, 0.476, 0.476), stdev = 0.001
  CI (99.9%): [0.475, 0.476] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.parallelOldGC:·gc.alloc.rate.norm":
  41.787 ±(99.9%) 1.878 B/op [Average]
  (min, avg, max) = (40.336, 41.787, 44.769), stdev = 1.757
  CI (99.9%): [39.909, 43.665] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.parallelOldGC:·gc.count":
  ≈ 0 counts


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UseParallelOldGC
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.parallelOldGC
# Parameters: (percentageOfEqualNumbers = _25, size = 262140)

# Run progress: 45.71% complete, ETA 01:40:03
# Fork: 1 of 3
# Warmup Iteration   1: 7432.365 ops/s
# Warmup Iteration   2: 7450.856 ops/s
# Warmup Iteration   3: 7434.042 ops/s
# Warmup Iteration   4: 7437.471 ops/s
# Warmup Iteration   5: 7429.863 ops/s
Iteration   1: 7447.339 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.086 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 7434.178 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.111 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 7427.718 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.124 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 7476.613 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.031 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 7480.991 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.023 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 46.67% complete, ETA 01:38:18
# Fork: 2 of 3
# Warmup Iteration   1: 7432.402 ops/s
# Warmup Iteration   2: 7441.090 ops/s
# Warmup Iteration   3: 7434.317 ops/s
# Warmup Iteration   4: 7440.966 ops/s
# Warmup Iteration   5: 7442.493 ops/s
Iteration   1: 7440.611 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.099 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 7458.890 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.065 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 7475.753 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.033 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 7448.152 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.085 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 7459.249 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.064 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 47.62% complete, ETA 01:36:33
# Fork: 3 of 3
# Warmup Iteration   1: 7426.311 ops/s
# Warmup Iteration   2: 7090.246 ops/s
# Warmup Iteration   3: 7088.926 ops/s
# Warmup Iteration   4: 7106.126 ops/s
# Warmup Iteration   5: 7057.917 ops/s
Iteration   1: 7101.215 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.773 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 7484.458 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.017 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 7078.679 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.820 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 7098.243 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.779 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 7474.048 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.036 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.parallelOldGC":
  7385.743 ±(99.9%) 163.244 ops/s [Average]
  (min, avg, max) = (7078.679, 7385.743, 7484.458), stdev = 152.698
  CI (99.9%): [7222.499, 7548.986] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.parallelOldGC:·gc.alloc.rate":
  0.095 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.095, 0.095, 0.095), stdev = 0.001
  CI (99.9%): [0.095, 0.095] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.parallelOldGC:·gc.alloc.rate.norm":
  14.210 ±(99.9%) 0.323 B/op [Average]
  (min, avg, max) = (14.017, 14.210, 14.820), stdev = 0.303
  CI (99.9%): [13.886, 14.533] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.parallelOldGC:·gc.count":
  ≈ 0 counts


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UseParallelOldGC
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.parallelOldGC
# Parameters: (percentageOfEqualNumbers = _50, size = 262140)

# Run progress: 48.57% complete, ETA 01:34:47
# Fork: 1 of 3
# Warmup Iteration   1: 7059.453 ops/s
# Warmup Iteration   2: 7093.311 ops/s
# Warmup Iteration   3: 7115.779 ops/s
# Warmup Iteration   4: 7037.127 ops/s
# Warmup Iteration   5: 7121.365 ops/s
Iteration   1: 7088.347 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.799 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 7140.157 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.692 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 7057.757 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.864 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 7047.002 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.886 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 7052.470 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.875 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 49.52% complete, ETA 01:33:02
# Fork: 2 of 3
# Warmup Iteration   1: 7438.845 ops/s
# Warmup Iteration   2: 7481.380 ops/s
# Warmup Iteration   3: 7436.614 ops/s
# Warmup Iteration   4: 7441.118 ops/s
# Warmup Iteration   5: 7446.958 ops/s
Iteration   1: 7445.249 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.090 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 7446.878 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.087 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 7443.381 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.094 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 7441.087 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.098 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 7480.563 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.024 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 50.48% complete, ETA 01:31:16
# Fork: 3 of 3
# Warmup Iteration   1: 7430.439 ops/s
# Warmup Iteration   2: 7443.572 ops/s
# Warmup Iteration   3: 7031.930 ops/s
# Warmup Iteration   4: 7103.544 ops/s
# Warmup Iteration   5: 7107.672 ops/s
Iteration   1: 7114.990 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.744 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 7150.555 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.671 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 7132.782 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.707 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 7436.581 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.106 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 7471.335 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.041 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.parallelOldGC":
  7263.276 ±(99.9%) 198.435 ops/s [Average]
  (min, avg, max) = (7047.002, 7263.276, 7480.563), stdev = 185.616
  CI (99.9%): [7064.840, 7461.711] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.parallelOldGC:·gc.alloc.rate":
  0.095 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.095, 0.095, 0.095), stdev = 0.001
  CI (99.9%): [0.095, 0.095] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.parallelOldGC:·gc.alloc.rate.norm":
  14.452 ±(99.9%) 0.394 B/op [Average]
  (min, avg, max) = (14.024, 14.452, 14.886), stdev = 0.369
  CI (99.9%): [14.058, 14.846] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.parallelOldGC:·gc.count":
  ≈ 0 counts


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UseParallelOldGC
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.parallelOldGC
# Parameters: (percentageOfEqualNumbers = _75, size = 262140)

# Run progress: 51.43% complete, ETA 01:29:31
# Fork: 1 of 3
# Warmup Iteration   1: 7447.126 ops/s
# Warmup Iteration   2: 7040.354 ops/s
# Warmup Iteration   3: 7092.150 ops/s
# Warmup Iteration   4: 7107.500 ops/s
# Warmup Iteration   5: 7070.093 ops/s
Iteration   1: 7141.063 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.690 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 7178.643 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.613 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 7169.791 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.631 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 7184.720 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.601 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 7119.136 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.735 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 52.38% complete, ETA 01:27:46
# Fork: 2 of 3
# Warmup Iteration   1: 7421.670 ops/s
# Warmup Iteration   2: 7482.825 ops/s
# Warmup Iteration   3: 7434.939 ops/s
# Warmup Iteration   4: 7429.660 ops/s
# Warmup Iteration   5: 7453.486 ops/s
Iteration   1: 6954.047 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 15.085 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 7037.363 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.907 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 7054.227 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.871 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 7069.249 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.839 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 7092.981 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.790 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 53.33% complete, ETA 01:26:01
# Fork: 3 of 3
# Warmup Iteration   1: 7460.099 ops/s
# Warmup Iteration   2: 7443.063 ops/s
# Warmup Iteration   3: 7439.988 ops/s
# Warmup Iteration   4: 7461.475 ops/s
# Warmup Iteration   5: 7443.996 ops/s
Iteration   1: 7468.307 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.046 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 7447.812 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.085 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 7473.662 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.036 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 7438.874 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.102 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 7432.988 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.113 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.parallelOldGC":
  7217.524 ±(99.9%) 194.496 ops/s [Average]
  (min, avg, max) = (6954.047, 7217.524, 7473.662), stdev = 181.931
  CI (99.9%): [7023.029, 7412.020] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.parallelOldGC:·gc.alloc.rate":
  0.095 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.095, 0.095, 0.095), stdev = 0.001
  CI (99.9%): [0.095, 0.095] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.parallelOldGC:·gc.alloc.rate.norm":
  14.543 ±(99.9%) 0.389 B/op [Average]
  (min, avg, max) = (14.036, 14.543, 15.085), stdev = 0.363
  CI (99.9%): [14.155, 14.932] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.parallelOldGC:·gc.count":
  ≈ 0 counts


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UseParallelOldGC
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.parallelOldGC
# Parameters: (percentageOfEqualNumbers = _100, size = 262140)

# Run progress: 54.29% complete, ETA 01:24:15
# Fork: 1 of 3
# Warmup Iteration   1: 14856.300 ops/s
# Warmup Iteration   2: 15065.677 ops/s
# Warmup Iteration   3: 14951.483 ops/s
# Warmup Iteration   4: 15089.791 ops/s
# Warmup Iteration   5: 15098.694 ops/s
Iteration   1: 15071.953 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 6.960 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 15120.617 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 6.938 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 16534.853 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 6.344 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 16236.336 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 6.461 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 16362.222 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 6.411 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 55.24% complete, ETA 01:22:30
# Fork: 2 of 3
# Warmup Iteration   1: 16263.092 ops/s
# Warmup Iteration   2: 16359.101 ops/s
# Warmup Iteration   3: 16316.439 ops/s
# Warmup Iteration   4: 16230.961 ops/s
# Warmup Iteration   5: 16170.396 ops/s
Iteration   1: 16195.969 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 6.477 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 14403.450 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 7.283 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 14605.896 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 7.182 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 14681.621 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 7.145 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 16254.743 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 6.454 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 56.19% complete, ETA 01:20:45
# Fork: 3 of 3
# Warmup Iteration   1: 14530.438 ops/s
# Warmup Iteration   2: 14703.880 ops/s
# Warmup Iteration   3: 14788.466 ops/s
# Warmup Iteration   4: 14812.781 ops/s
# Warmup Iteration   5: 14817.887 ops/s
Iteration   1: 14725.690 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 7.124 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 14832.869 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 7.072 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 14845.811 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 7.066 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 14733.774 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 7.120 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 14826.666 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 7.075 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.parallelOldGC":
  15295.498 ±(99.9%) 822.901 ops/s [Average]
  (min, avg, max) = (14403.450, 15295.498, 16534.853), stdev = 769.742
  CI (99.9%): [14472.597, 16118.399] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.parallelOldGC:·gc.alloc.rate":
  0.095 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.095, 0.095, 0.095), stdev = 0.001
  CI (99.9%): [0.095, 0.095] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.parallelOldGC:·gc.alloc.rate.norm":
  6.874 ±(99.9%) 0.360 B/op [Average]
  (min, avg, max) = (6.344, 6.874, 7.283), stdev = 0.337
  CI (99.9%): [6.514, 7.234] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.parallelOldGC:·gc.count":
  ≈ 0 counts


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UseSerialGC
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.serialGC
# Parameters: (percentageOfEqualNumbers = _0, size = 262140)

# Run progress: 57.14% complete, ETA 01:18:59
# Fork: 1 of 3
# Warmup Iteration   1: 11844.474 ops/s
# Warmup Iteration   2: 11825.753 ops/s
# Warmup Iteration   3: 11884.756 ops/s
# Warmup Iteration   4: 11894.661 ops/s
# Warmup Iteration   5: 11896.504 ops/s
Iteration   1: 11906.666 ops/s
                 ·gc.alloc.rate:      0.475 MB/sec
                 ·gc.alloc.rate.norm: 44.018 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 11851.240 ops/s
                 ·gc.alloc.rate:      0.476 MB/sec
                 ·gc.alloc.rate.norm: 44.224 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 11906.199 ops/s
                 ·gc.alloc.rate:      0.475 MB/sec
                 ·gc.alloc.rate.norm: 44.019 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 11931.341 ops/s
                 ·gc.alloc.rate:      0.476 MB/sec
                 ·gc.alloc.rate.norm: 43.927 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 11939.914 ops/s
                 ·gc.alloc.rate:      0.476 MB/sec
                 ·gc.alloc.rate.norm: 43.895 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 58.10% complete, ETA 01:17:14
# Fork: 2 of 3
# Warmup Iteration   1: 12084.764 ops/s
# Warmup Iteration   2: 12105.000 ops/s
# Warmup Iteration   3: 11977.230 ops/s
# Warmup Iteration   4: 12068.041 ops/s
# Warmup Iteration   5: 12065.012 ops/s
Iteration   1: 12072.136 ops/s
                 ·gc.alloc.rate:      0.476 MB/sec
                 ·gc.alloc.rate.norm: 43.414 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 12063.990 ops/s
                 ·gc.alloc.rate:      0.476 MB/sec
                 ·gc.alloc.rate.norm: 43.444 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 12055.836 ops/s
                 ·gc.alloc.rate:      0.476 MB/sec
                 ·gc.alloc.rate.norm: 43.473 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 11934.047 ops/s
                 ·gc.alloc.rate:      0.476 MB/sec
                 ·gc.alloc.rate.norm: 43.917 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 12049.876 ops/s
                 ·gc.alloc.rate:      0.476 MB/sec
                 ·gc.alloc.rate.norm: 43.494 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 59.05% complete, ETA 01:15:29
# Fork: 3 of 3
# Warmup Iteration   1: 13192.849 ops/s
# Warmup Iteration   2: 11769.101 ops/s
# Warmup Iteration   3: 11872.892 ops/s
# Warmup Iteration   4: 11984.700 ops/s
# Warmup Iteration   5: 12037.461 ops/s
Iteration   1: 12069.668 ops/s
                 ·gc.alloc.rate:      0.476 MB/sec
                 ·gc.alloc.rate.norm: 43.423 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 12066.225 ops/s
                 ·gc.alloc.rate:      0.476 MB/sec
                 ·gc.alloc.rate.norm: 43.436 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 13121.882 ops/s
                 ·gc.alloc.rate:      0.475 MB/sec
                 ·gc.alloc.rate.norm: 39.941 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 12962.088 ops/s
                 ·gc.alloc.rate:      0.476 MB/sec
                 ·gc.alloc.rate.norm: 40.434 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 12783.693 ops/s
                 ·gc.alloc.rate:      0.475 MB/sec
                 ·gc.alloc.rate.norm: 40.998 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.serialGC":
  12180.987 ±(99.9%) 441.111 ops/s [Average]
  (min, avg, max) = (11851.240, 12180.987, 13121.882), stdev = 412.615
  CI (99.9%): [11739.876, 12622.098] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.serialGC:·gc.alloc.rate":
  0.476 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.475, 0.476, 0.476), stdev = 0.001
  CI (99.9%): [0.475, 0.476] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.serialGC:·gc.alloc.rate.norm":
  43.070 ±(99.9%) 1.489 B/op [Average]
  (min, avg, max) = (39.941, 43.070, 44.224), stdev = 1.393
  CI (99.9%): [41.581, 44.559] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.serialGC:·gc.count":
  ≈ 0 counts


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UseSerialGC
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.serialGC
# Parameters: (percentageOfEqualNumbers = _25, size = 262140)

# Run progress: 60.00% complete, ETA 01:13:43
# Fork: 1 of 3
# Warmup Iteration   1: 6980.470 ops/s
# Warmup Iteration   2: 7471.013 ops/s
# Warmup Iteration   3: 7473.908 ops/s
# Warmup Iteration   4: 7477.374 ops/s
# Warmup Iteration   5: 7441.823 ops/s
Iteration   1: 7420.520 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.138 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 7411.937 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.154 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 7428.328 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.122 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 7448.650 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.084 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 7437.058 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.106 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 60.95% complete, ETA 01:11:58
# Fork: 2 of 3
# Warmup Iteration   1: 7028.257 ops/s
# Warmup Iteration   2: 7063.194 ops/s
# Warmup Iteration   3: 7120.101 ops/s
# Warmup Iteration   4: 7159.724 ops/s
# Warmup Iteration   5: 7168.255 ops/s
Iteration   1: 7135.378 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.702 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 7058.633 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.862 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 7009.490 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.966 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 7445.952 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.089 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 7447.628 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.086 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 61.90% complete, ETA 01:10:13
# Fork: 3 of 3
# Warmup Iteration   1: 7426.619 ops/s
# Warmup Iteration   2: 7444.223 ops/s
# Warmup Iteration   3: 7437.924 ops/s
# Warmup Iteration   4: 7434.566 ops/s
# Warmup Iteration   5: 7432.759 ops/s
Iteration   1: 7448.857 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.084 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 7457.966 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.066 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 7475.612 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.033 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 7468.799 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.046 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 7439.573 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.101 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.serialGC":
  7368.959 ±(99.9%) 169.480 ops/s [Average]
  (min, avg, max) = (7009.490, 7368.959, 7475.612), stdev = 158.531
  CI (99.9%): [7199.479, 7538.438] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.serialGC:·gc.alloc.rate":
  0.095 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.095, 0.095, 0.095), stdev = 0.001
  CI (99.9%): [0.095, 0.095] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.serialGC:·gc.alloc.rate.norm":
  14.243 ±(99.9%) 0.338 B/op [Average]
  (min, avg, max) = (14.033, 14.243, 14.966), stdev = 0.317
  CI (99.9%): [13.904, 14.581] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.serialGC:·gc.count":
  ≈ 0 counts


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UseSerialGC
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.serialGC
# Parameters: (percentageOfEqualNumbers = _50, size = 262140)

# Run progress: 62.86% complete, ETA 01:08:27
# Fork: 1 of 3
# Warmup Iteration   1: 7072.173 ops/s
# Warmup Iteration   2: 7104.313 ops/s
# Warmup Iteration   3: 7162.379 ops/s
# Warmup Iteration   4: 7088.902 ops/s
# Warmup Iteration   5: 7141.706 ops/s
Iteration   1: 7159.495 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.652 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 7150.447 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.671 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 7182.327 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.606 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 7176.342 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.618 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 7133.867 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.705 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 63.81% complete, ETA 01:06:42
# Fork: 2 of 3
# Warmup Iteration   1: 7428.465 ops/s
# Warmup Iteration   2: 7096.949 ops/s
# Warmup Iteration   3: 7472.614 ops/s
# Warmup Iteration   4: 7449.649 ops/s
# Warmup Iteration   5: 7445.744 ops/s
Iteration   1: 7432.643 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.114 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 7011.315 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.962 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 7019.772 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.944 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 7440.317 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.099 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 7459.337 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.063 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 64.76% complete, ETA 01:04:57
# Fork: 3 of 3
# Warmup Iteration   1: 6969.353 ops/s
# Warmup Iteration   2: 7105.459 ops/s
# Warmup Iteration   3: 7112.276 ops/s
# Warmup Iteration   4: 7130.109 ops/s
# Warmup Iteration   5: 7074.344 ops/s
Iteration   1: 7146.250 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.680 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 7079.692 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.818 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 7128.414 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.717 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 7135.739 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.701 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 7134.295 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.704 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.serialGC":
  7186.017 ±(99.9%) 152.414 ops/s [Average]
  (min, avg, max) = (7011.315, 7186.017, 7459.337), stdev = 142.568
  CI (99.9%): [7033.603, 7338.431] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.serialGC:·gc.alloc.rate":
  0.095 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.095, 0.095, 0.095), stdev = 0.001
  CI (99.9%): [0.095, 0.095] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.serialGC:·gc.alloc.rate.norm":
  14.604 ±(99.9%) 0.304 B/op [Average]
  (min, avg, max) = (14.063, 14.604, 14.962), stdev = 0.284
  CI (99.9%): [14.300, 14.908] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.serialGC:·gc.count":
  ≈ 0 counts


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UseSerialGC
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.serialGC
# Parameters: (percentageOfEqualNumbers = _75, size = 262140)

# Run progress: 65.71% complete, ETA 01:03:11
# Fork: 1 of 3
# Warmup Iteration   1: 7433.052 ops/s
# Warmup Iteration   2: 7440.659 ops/s
# Warmup Iteration   3: 7440.214 ops/s
# Warmup Iteration   4: 7431.731 ops/s
# Warmup Iteration   5: 7458.562 ops/s
Iteration   1: 7453.875 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.074 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 7440.995 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.098 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 7443.040 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.094 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 7438.473 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.103 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 7455.834 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.070 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 66.67% complete, ETA 01:01:26
# Fork: 2 of 3
# Warmup Iteration   1: 7437.162 ops/s
# Warmup Iteration   2: 7483.025 ops/s
# Warmup Iteration   3: 7478.610 ops/s
# Warmup Iteration   4: 7431.651 ops/s
# Warmup Iteration   5: 7440.255 ops/s
Iteration   1: 7435.624 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.108 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 7424.821 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.129 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 7474.881 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.034 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 7474.934 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.034 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 7467.336 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.048 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 67.62% complete, ETA 00:59:41
# Fork: 3 of 3
# Warmup Iteration   1: 7468.628 ops/s
# Warmup Iteration   2: 7479.506 ops/s
# Warmup Iteration   3: 7457.101 ops/s
# Warmup Iteration   4: 7444.313 ops/s
# Warmup Iteration   5: 7437.707 ops/s
Iteration   1: 7432.990 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.113 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 7487.127 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.011 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 7448.421 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.084 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 7444.688 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.091 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 7443.020 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.094 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.serialGC":
  7451.071 ±(99.9%) 19.003 ops/s [Average]
  (min, avg, max) = (7424.821, 7451.071, 7487.127), stdev = 17.775
  CI (99.9%): [7432.068, 7470.073] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.serialGC:·gc.alloc.rate":
  0.095 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.095, 0.095, 0.095), stdev = 0.001
  CI (99.9%): [0.095, 0.095] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.serialGC:·gc.alloc.rate.norm":
  14.079 ±(99.9%) 0.036 B/op [Average]
  (min, avg, max) = (14.011, 14.079, 14.129), stdev = 0.034
  CI (99.9%): [14.043, 14.115] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.serialGC:·gc.count":
  ≈ 0 counts


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UseSerialGC
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.serialGC
# Parameters: (percentageOfEqualNumbers = _100, size = 262140)

# Run progress: 68.57% complete, ETA 00:57:55
# Fork: 1 of 3
# Warmup Iteration   1: 14790.372 ops/s
# Warmup Iteration   2: 14982.134 ops/s
# Warmup Iteration   3: 16439.655 ops/s
# Warmup Iteration   4: 16328.653 ops/s
# Warmup Iteration   5: 16256.173 ops/s
Iteration   1: 16176.367 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 6.485 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 15994.161 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 6.559 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 16114.818 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 6.510 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 14802.952 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 7.086 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 14905.059 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 7.038 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 69.52% complete, ETA 00:56:10
# Fork: 2 of 3
# Warmup Iteration   1: 16373.513 ops/s
# Warmup Iteration   2: 16262.287 ops/s
# Warmup Iteration   3: 15994.087 ops/s
# Warmup Iteration   4: 16137.660 ops/s
# Warmup Iteration   5: 16069.519 ops/s
Iteration   1: 16128.712 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 6.504 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 16096.122 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 6.517 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 15997.702 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 6.557 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 16112.959 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 6.510 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 16058.850 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 6.532 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 70.48% complete, ETA 00:54:25
# Fork: 3 of 3
# Warmup Iteration   1: 14620.818 ops/s
# Warmup Iteration   2: 14788.394 ops/s
# Warmup Iteration   3: 14930.609 ops/s
# Warmup Iteration   4: 14814.577 ops/s
# Warmup Iteration   5: 14962.422 ops/s
Iteration   1: 14963.541 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 7.011 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 14980.557 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 7.002 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 15007.096 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 6.990 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 15057.301 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 6.967 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 14890.296 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 7.045 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.serialGC":
  15552.433 ±(99.9%) 634.586 ops/s [Average]
  (min, avg, max) = (14802.952, 15552.433, 16176.367), stdev = 593.592
  CI (99.9%): [14917.847, 16187.019] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.serialGC:·gc.alloc.rate":
  0.095 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.095, 0.095, 0.095), stdev = 0.001
  CI (99.9%): [0.095, 0.095] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.serialGC:·gc.alloc.rate.norm":
  6.754 ±(99.9%) 0.277 B/op [Average]
  (min, avg, max) = (6.485, 6.754, 7.086), stdev = 0.259
  CI (99.9%): [6.477, 7.031] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.serialGC:·gc.count":
  ≈ 0 counts


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+UseShenandoahGC
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.shenandoahGC
# Parameters: (percentageOfEqualNumbers = _0, size = 262140)

# Run progress: 71.43% complete, ETA 00:52:39
# Fork: 1 of 3
# Warmup Iteration   1: 8089.242 ops/s
# Warmup Iteration   2: 8132.781 ops/s
# Warmup Iteration   3: 8148.954 ops/s
# Warmup Iteration   4: 8163.001 ops/s
# Warmup Iteration   5: 8126.190 ops/s
Iteration   1: 8177.874 ops/s
                 ·gc.alloc.rate:      0.476 MB/sec
                 ·gc.alloc.rate.norm: 64.087 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 8180.935 ops/s
                 ·gc.alloc.rate:      0.476 MB/sec
                 ·gc.alloc.rate.norm: 64.064 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 8172.142 ops/s
                 ·gc.alloc.rate:      0.476 MB/sec
                 ·gc.alloc.rate.norm: 64.133 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 8180.047 ops/s
                 ·gc.alloc.rate:      0.476 MB/sec
                 ·gc.alloc.rate.norm: 64.070 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 8924.821 ops/s
                 ·gc.alloc.rate:      0.476 MB/sec
                 ·gc.alloc.rate.norm: 58.724 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 72.38% complete, ETA 00:50:54
# Fork: 2 of 3
# Warmup Iteration   1: 8778.886 ops/s
# Warmup Iteration   2: 8817.284 ops/s
# Warmup Iteration   3: 8812.593 ops/s
# Warmup Iteration   4: 8780.850 ops/s
# Warmup Iteration   5: 8769.844 ops/s
Iteration   1: 8776.741 ops/s
                 ·gc.alloc.rate:      0.476 MB/sec
                 ·gc.alloc.rate.norm: 59.715 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 8703.195 ops/s
                 ·gc.alloc.rate:      0.475 MB/sec
                 ·gc.alloc.rate.norm: 60.219 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 8763.503 ops/s
                 ·gc.alloc.rate:      0.476 MB/sec
                 ·gc.alloc.rate.norm: 59.805 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 8765.336 ops/s
                 ·gc.alloc.rate:      0.476 MB/sec
                 ·gc.alloc.rate.norm: 59.793 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 8716.376 ops/s
                 ·gc.alloc.rate:      0.475 MB/sec
                 ·gc.alloc.rate.norm: 60.129 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 73.33% complete, ETA 00:49:09
# Fork: 3 of 3
# Warmup Iteration   1: 8803.522 ops/s
# Warmup Iteration   2: 8805.871 ops/s
# Warmup Iteration   3: 8796.342 ops/s
# Warmup Iteration   4: 8835.147 ops/s
# Warmup Iteration   5: 8842.252 ops/s
Iteration   1: 8831.413 ops/s
                 ·gc.alloc.rate:      0.476 MB/sec
                 ·gc.alloc.rate.norm: 59.345 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 8816.092 ops/s
                 ·gc.alloc.rate:      0.476 MB/sec
                 ·gc.alloc.rate.norm: 59.448 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 7891.394 ops/s
                 ·gc.alloc.rate:      0.476 MB/sec
                 ·gc.alloc.rate.norm: 66.415 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 8004.414 ops/s
                 ·gc.alloc.rate:      0.475 MB/sec
                 ·gc.alloc.rate.norm: 65.477 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 8916.889 ops/s
                 ·gc.alloc.rate:      0.475 MB/sec
                 ·gc.alloc.rate.norm: 58.776 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.shenandoahGC":
  8521.412 ±(99.9%) 393.121 ops/s [Average]
  (min, avg, max) = (7891.394, 8521.412, 8924.821), stdev = 367.725
  CI (99.9%): [8128.291, 8914.532] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.shenandoahGC:·gc.alloc.rate":
  0.476 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.475, 0.476, 0.476), stdev = 0.001
  CI (99.9%): [0.475, 0.476] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.shenandoahGC:·gc.alloc.rate.norm":
  61.613 ±(99.9%) 2.900 B/op [Average]
  (min, avg, max) = (58.724, 61.613, 66.415), stdev = 2.713
  CI (99.9%): [58.713, 64.514] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.shenandoahGC:·gc.count":
  ≈ 0 counts


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+UseShenandoahGC
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.shenandoahGC
# Parameters: (percentageOfEqualNumbers = _25, size = 262140)

# Run progress: 74.29% complete, ETA 00:47:23
# Fork: 1 of 3
# Warmup Iteration   1: 7422.964 ops/s
# Warmup Iteration   2: 7429.106 ops/s
# Warmup Iteration   3: 7430.871 ops/s
# Warmup Iteration   4: 7455.276 ops/s
# Warmup Iteration   5: 7468.947 ops/s
Iteration   1: 7424.078 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.131 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 7452.166 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.077 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 7458.572 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.065 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 7470.528 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.043 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 7406.507 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.164 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 75.24% complete, ETA 00:45:38
# Fork: 2 of 3
# Warmup Iteration   1: 6913.286 ops/s
# Warmup Iteration   2: 6964.271 ops/s
# Warmup Iteration   3: 6997.326 ops/s
# Warmup Iteration   4: 7004.761 ops/s
# Warmup Iteration   5: 6982.114 ops/s
Iteration   1: 6993.915 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 15.000 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 7008.902 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.968 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 6996.127 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.995 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 6992.888 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 15.002 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 7026.172 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.931 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 76.19% complete, ETA 00:43:53
# Fork: 3 of 3
# Warmup Iteration   1: 7075.889 ops/s
# Warmup Iteration   2: 7127.757 ops/s
# Warmup Iteration   3: 7138.682 ops/s
# Warmup Iteration   4: 7129.355 ops/s
# Warmup Iteration   5: 7144.450 ops/s
Iteration   1: 7428.302 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.123 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 7470.128 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.043 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 7411.765 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.154 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 6987.588 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 15.013 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 7001.694 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.983 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.shenandoahGC":
  7235.289 ±(99.9%) 243.424 ops/s [Average]
  (min, avg, max) = (6987.588, 7235.289, 7470.528), stdev = 227.699
  CI (99.9%): [6991.865, 7478.713] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.shenandoahGC:·gc.alloc.rate":
  0.095 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.095, 0.095, 0.095), stdev = 0.001
  CI (99.9%): [0.095, 0.095] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.shenandoahGC:·gc.alloc.rate.norm":
  14.513 ±(99.9%) 0.490 B/op [Average]
  (min, avg, max) = (14.043, 14.513, 15.013), stdev = 0.458
  CI (99.9%): [14.023, 15.003] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.shenandoahGC:·gc.count":
  ≈ 0 counts


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+UseShenandoahGC
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.shenandoahGC
# Parameters: (percentageOfEqualNumbers = _50, size = 262140)

# Run progress: 77.14% complete, ETA 00:42:07
# Fork: 1 of 3
# Warmup Iteration   1: 7393.479 ops/s
# Warmup Iteration   2: 7457.422 ops/s
# Warmup Iteration   3: 7451.171 ops/s
# Warmup Iteration   4: 7433.195 ops/s
# Warmup Iteration   5: 7448.533 ops/s
Iteration   1: 7430.872 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.117 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 7448.889 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.083 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 7420.443 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.137 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 7441.515 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.097 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 7425.484 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.127 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 78.10% complete, ETA 00:40:22
# Fork: 2 of 3
# Warmup Iteration   1: 7022.306 ops/s
# Warmup Iteration   2: 7055.393 ops/s
# Warmup Iteration   3: 7071.342 ops/s
# Warmup Iteration   4: 6949.713 ops/s
# Warmup Iteration   5: 7019.353 ops/s
Iteration   1: 7056.165 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.867 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 7043.816 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.893 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 7040.291 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.901 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 6983.709 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 15.021 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 6977.046 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 15.036 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 79.05% complete, ETA 00:38:37
# Fork: 3 of 3
# Warmup Iteration   1: 6994.364 ops/s
# Warmup Iteration   2: 7099.968 ops/s
# Warmup Iteration   3: 7069.151 ops/s
# Warmup Iteration   4: 7110.092 ops/s
# Warmup Iteration   5: 6966.678 ops/s
Iteration   1: 6982.088 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 15.025 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 7032.212 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.917 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 7089.609 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.797 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 7092.886 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.790 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 7094.155 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.787 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.shenandoahGC":
  7170.612 ±(99.9%) 209.500 ops/s [Average]
  (min, avg, max) = (6977.046, 7170.612, 7448.889), stdev = 195.967
  CI (99.9%): [6961.112, 7380.112] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.shenandoahGC:·gc.alloc.rate":
  0.095 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.095, 0.095, 0.095), stdev = 0.001
  CI (99.9%): [0.095, 0.095] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.shenandoahGC:·gc.alloc.rate.norm":
  14.640 ±(99.9%) 0.421 B/op [Average]
  (min, avg, max) = (14.083, 14.640, 15.036), stdev = 0.394
  CI (99.9%): [14.218, 15.061] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.shenandoahGC:·gc.count":
  ≈ 0 counts


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+UseShenandoahGC
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.shenandoahGC
# Parameters: (percentageOfEqualNumbers = _75, size = 262140)

# Run progress: 80.00% complete, ETA 00:36:51
# Fork: 1 of 3
# Warmup Iteration   1: 7377.019 ops/s
# Warmup Iteration   2: 7436.519 ops/s
# Warmup Iteration   3: 7429.307 ops/s
# Warmup Iteration   4: 7455.946 ops/s
# Warmup Iteration   5: 7426.997 ops/s
Iteration   1: 7409.237 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.158 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 7448.331 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.084 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 7416.784 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.144 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 7468.045 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.047 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 7422.811 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.133 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 80.95% complete, ETA 00:35:06
# Fork: 2 of 3
# Warmup Iteration   1: 7406.890 ops/s
# Warmup Iteration   2: 7429.802 ops/s
# Warmup Iteration   3: 7437.448 ops/s
# Warmup Iteration   4: 7434.011 ops/s
# Warmup Iteration   5: 7440.724 ops/s
Iteration   1: 7435.508 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.108 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 7432.114 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.115 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 7466.946 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.049 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 7438.400 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.103 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 7421.439 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.135 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 81.90% complete, ETA 00:33:21
# Fork: 3 of 3
# Warmup Iteration   1: 7407.094 ops/s
# Warmup Iteration   2: 7462.847 ops/s
# Warmup Iteration   3: 7438.192 ops/s
# Warmup Iteration   4: 7430.193 ops/s
# Warmup Iteration   5: 7436.395 ops/s
Iteration   1: 7426.200 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.126 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 7446.183 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.088 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 7432.658 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.114 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 7472.111 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.039 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 7426.575 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 14.125 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.shenandoahGC":
  7437.556 ±(99.9%) 20.597 ops/s [Average]
  (min, avg, max) = (7409.237, 7437.556, 7472.111), stdev = 19.266
  CI (99.9%): [7416.959, 7458.153] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.shenandoahGC:·gc.alloc.rate":
  0.095 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.095, 0.095, 0.095), stdev = 0.001
  CI (99.9%): [0.095, 0.095] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.shenandoahGC:·gc.alloc.rate.norm":
  14.105 ±(99.9%) 0.039 B/op [Average]
  (min, avg, max) = (14.039, 14.105, 14.158), stdev = 0.037
  CI (99.9%): [14.066, 14.144] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.shenandoahGC:·gc.count":
  ≈ 0 counts


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+UseShenandoahGC
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.shenandoahGC
# Parameters: (percentageOfEqualNumbers = _100, size = 262140)

# Run progress: 82.86% complete, ETA 00:31:35
# Fork: 1 of 3
# Warmup Iteration   1: 8867.077 ops/s
# Warmup Iteration   2: 8865.976 ops/s
# Warmup Iteration   3: 8831.011 ops/s
# Warmup Iteration   4: 8825.904 ops/s
# Warmup Iteration   5: 8787.710 ops/s
Iteration   1: 8786.935 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 11.938 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 8796.150 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 11.926 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 7972.864 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 13.157 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 8046.706 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 13.037 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 8045.308 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 13.039 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 83.81% complete, ETA 00:29:50
# Fork: 2 of 3
# Warmup Iteration   1: 8669.460 ops/s
# Warmup Iteration   2: 8753.714 ops/s
# Warmup Iteration   3: 8777.297 ops/s
# Warmup Iteration   4: 8713.937 ops/s
# Warmup Iteration   5: 8783.593 ops/s
Iteration   1: 8733.746 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 12.011 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 8718.661 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 12.032 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 8709.191 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 12.045 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 8725.255 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 12.023 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 8731.323 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 12.014 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 84.76% complete, ETA 00:28:05
# Fork: 3 of 3
# Warmup Iteration   1: 8704.130 ops/s
# Warmup Iteration   2: 8680.290 ops/s
# Warmup Iteration   3: 8727.513 ops/s
# Warmup Iteration   4: 8733.732 ops/s
# Warmup Iteration   5: 8765.633 ops/s
Iteration   1: 8750.690 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 11.988 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 8782.881 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 11.944 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 8683.722 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 12.080 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 8794.386 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 11.928 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 8771.765 ops/s
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: 11.959 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.shenandoahGC":
  8603.306 ±(99.9%) 324.218 ops/s [Average]
  (min, avg, max) = (7972.864, 8603.306, 8796.150), stdev = 303.274
  CI (99.9%): [8279.088, 8927.524] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.shenandoahGC:·gc.alloc.rate":
  0.095 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.095, 0.095, 0.095), stdev = 0.001
  CI (99.9%): [0.095, 0.095] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.shenandoahGC:·gc.alloc.rate.norm":
  12.208 ±(99.9%) 0.484 B/op [Average]
  (min, avg, max) = (11.926, 12.208, 13.157), stdev = 0.453
  CI (99.9%): [11.724, 12.692] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.shenandoahGC:·gc.count":
  ≈ 0 counts


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+UseZGC
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.zGC
# Parameters: (percentageOfEqualNumbers = _0, size = 262140)

# Run progress: 85.71% complete, ETA 00:26:19
# Fork: 1 of 3
# Warmup Iteration   1: 6438.146 ops/s
# Warmup Iteration   2: 6528.477 ops/s
# Warmup Iteration   3: 6547.629 ops/s
# Warmup Iteration   4: 6568.053 ops/s
# Warmup Iteration   5: 6584.459 ops/s
Iteration   1: 6593.690 ops/s
                 ·gc.alloc.rate:      0.761 MB/sec
                 ·gc.alloc.rate.norm: 127.179 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 6607.839 ops/s
                 ·gc.alloc.rate:      0.761 MB/sec
                 ·gc.alloc.rate.norm: 126.905 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 6597.993 ops/s
                 ·gc.alloc.rate:      0.761 MB/sec
                 ·gc.alloc.rate.norm: 127.096 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 6535.307 ops/s
                 ·gc.alloc.rate:      0.761 MB/sec
                 ·gc.alloc.rate.norm: 128.315 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 6594.460 ops/s
                 ·gc.alloc.rate:      0.761 MB/sec
                 ·gc.alloc.rate.norm: 127.163 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 86.67% complete, ETA 00:24:34
# Fork: 2 of 3
# Warmup Iteration   1: 7205.780 ops/s
# Warmup Iteration   2: 7131.032 ops/s
# Warmup Iteration   3: 7094.597 ops/s
# Warmup Iteration   4: 7089.310 ops/s
# Warmup Iteration   5: 7031.424 ops/s
Iteration   1: 7071.875 ops/s
                 ·gc.alloc.rate:      0.761 MB/sec
                 ·gc.alloc.rate.norm: 118.579 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 7077.989 ops/s
                 ·gc.alloc.rate:      0.761 MB/sec
                 ·gc.alloc.rate.norm: 118.477 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 7071.961 ops/s
                 ·gc.alloc.rate:      0.761 MB/sec
                 ·gc.alloc.rate.norm: 118.578 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 7069.041 ops/s
                 ·gc.alloc.rate:      0.761 MB/sec
                 ·gc.alloc.rate.norm: 118.626 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 7067.128 ops/s
                 ·gc.alloc.rate:      0.761 MB/sec
                 ·gc.alloc.rate.norm: 118.658 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 87.62% complete, ETA 00:22:49
# Fork: 3 of 3
# Warmup Iteration   1: 6980.714 ops/s
# Warmup Iteration   2: 7076.924 ops/s
# Warmup Iteration   3: 7081.498 ops/s
# Warmup Iteration   4: 7083.191 ops/s
# Warmup Iteration   5: 7084.860 ops/s
Iteration   1: 7035.457 ops/s
                 ·gc.alloc.rate:      0.761 MB/sec
                 ·gc.alloc.rate.norm: 119.193 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 7113.218 ops/s
                 ·gc.alloc.rate:      0.761 MB/sec
                 ·gc.alloc.rate.norm: 117.889 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 7084.362 ops/s
                 ·gc.alloc.rate:      0.761 MB/sec
                 ·gc.alloc.rate.norm: 118.370 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 7089.763 ops/s
                 ·gc.alloc.rate:      0.761 MB/sec
                 ·gc.alloc.rate.norm: 118.280 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 7090.584 ops/s
                 ·gc.alloc.rate:      0.761 MB/sec
                 ·gc.alloc.rate.norm: 118.265 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.zGC":
  6913.378 ±(99.9%) 257.383 ops/s [Average]
  (min, avg, max) = (6535.307, 6913.378, 7113.218), stdev = 240.757
  CI (99.9%): [6655.994, 7170.761] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.zGC:·gc.alloc.rate":
  0.761 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.761, 0.761, 0.761), stdev = 0.001
  CI (99.9%): [0.761, 0.761] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.zGC:·gc.alloc.rate.norm":
  121.438 ±(99.9%) 4.632 B/op [Average]
  (min, avg, max) = (117.889, 121.438, 128.315), stdev = 4.332
  CI (99.9%): [116.807, 126.070] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.zGC:·gc.count":
  ≈ 0 counts


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+UseZGC
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.zGC
# Parameters: (percentageOfEqualNumbers = _25, size = 262140)

# Run progress: 88.57% complete, ETA 00:21:04
# Fork: 1 of 3
# Warmup Iteration   1: 5596.214 ops/s
# Warmup Iteration   2: 5613.276 ops/s
# Warmup Iteration   3: 6222.186 ops/s
# Warmup Iteration   4: 6182.498 ops/s
# Warmup Iteration   5: 6160.071 ops/s
Iteration   1: 6153.632 ops/s
                 ·gc.alloc.rate:      0.190 MB/sec
                 ·gc.alloc.rate.norm: 34.090 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 6145.046 ops/s
                 ·gc.alloc.rate:      0.190 MB/sec
                 ·gc.alloc.rate.norm: 34.139 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 6103.147 ops/s
                 ·gc.alloc.rate:      0.190 MB/sec
                 ·gc.alloc.rate.norm: 34.372 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 6133.128 ops/s
                 ·gc.alloc.rate:      0.190 MB/sec
                 ·gc.alloc.rate.norm: 34.204 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 6123.061 ops/s
                 ·gc.alloc.rate:      0.190 MB/sec
                 ·gc.alloc.rate.norm: 34.261 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 89.52% complete, ETA 00:19:18
# Fork: 2 of 3
# Warmup Iteration   1: 5462.747 ops/s
# Warmup Iteration   2: 5570.092 ops/s
# Warmup Iteration   3: 5569.172 ops/s
# Warmup Iteration   4: 5614.255 ops/s
# Warmup Iteration   5: 5636.302 ops/s
Iteration   1: 5642.407 ops/s
                 ·gc.alloc.rate:      0.190 MB/sec
                 ·gc.alloc.rate.norm: 37.179 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 5651.915 ops/s
                 ·gc.alloc.rate:      0.190 MB/sec
                 ·gc.alloc.rate.norm: 37.117 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 5654.736 ops/s
                 ·gc.alloc.rate:      0.190 MB/sec
                 ·gc.alloc.rate.norm: 37.099 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 5604.300 ops/s
                 ·gc.alloc.rate:      0.190 MB/sec
                 ·gc.alloc.rate.norm: 37.433 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 5648.722 ops/s
                 ·gc.alloc.rate:      0.190 MB/sec
                 ·gc.alloc.rate.norm: 37.138 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 90.48% complete, ETA 00:17:33
# Fork: 3 of 3
# Warmup Iteration   1: 5741.171 ops/s
# Warmup Iteration   2: 5739.935 ops/s
# Warmup Iteration   3: 5667.632 ops/s
# Warmup Iteration   4: 5669.752 ops/s
# Warmup Iteration   5: 5621.882 ops/s
Iteration   1: 5678.993 ops/s
                 ·gc.alloc.rate:      0.190 MB/sec
                 ·gc.alloc.rate.norm: 36.940 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 5679.776 ops/s
                 ·gc.alloc.rate:      0.190 MB/sec
                 ·gc.alloc.rate.norm: 36.934 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 5678.258 ops/s
                 ·gc.alloc.rate:      0.190 MB/sec
                 ·gc.alloc.rate.norm: 36.945 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 5755.444 ops/s
                 ·gc.alloc.rate:      0.190 MB/sec
                 ·gc.alloc.rate.norm: 36.449 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 5713.031 ops/s
                 ·gc.alloc.rate:      0.190 MB/sec
                 ·gc.alloc.rate.norm: 36.720 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.zGC":
  5824.373 ±(99.9%) 243.274 ops/s [Average]
  (min, avg, max) = (5604.300, 5824.373, 6153.632), stdev = 227.558
  CI (99.9%): [5581.099, 6067.647] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.zGC:·gc.alloc.rate":
  0.190 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.190, 0.190, 0.190), stdev = 0.001
  CI (99.9%): [0.190, 0.190] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.zGC:·gc.alloc.rate.norm":
  36.068 ±(99.9%) 1.471 B/op [Average]
  (min, avg, max) = (34.090, 36.068, 37.433), stdev = 1.376
  CI (99.9%): [34.597, 37.539] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.zGC:·gc.count":
  ≈ 0 counts


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+UseZGC
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.zGC
# Parameters: (percentageOfEqualNumbers = _50, size = 262140)

# Run progress: 91.43% complete, ETA 00:15:48
# Fork: 1 of 3
# Warmup Iteration   1: 5758.092 ops/s
# Warmup Iteration   2: 6247.085 ops/s
# Warmup Iteration   3: 6174.611 ops/s
# Warmup Iteration   4: 6204.247 ops/s
# Warmup Iteration   5: 6174.048 ops/s
Iteration   1: 6082.529 ops/s
                 ·gc.alloc.rate:      0.190 MB/sec
                 ·gc.alloc.rate.norm: 34.488 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 5691.603 ops/s
                 ·gc.alloc.rate:      0.190 MB/sec
                 ·gc.alloc.rate.norm: 36.857 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 6185.464 ops/s
                 ·gc.alloc.rate:      0.190 MB/sec
                 ·gc.alloc.rate.norm: 33.914 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 6128.917 ops/s
                 ·gc.alloc.rate:      0.190 MB/sec
                 ·gc.alloc.rate.norm: 34.228 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 6173.934 ops/s
                 ·gc.alloc.rate:      0.190 MB/sec
                 ·gc.alloc.rate.norm: 33.978 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 92.38% complete, ETA 00:14:02
# Fork: 2 of 3
# Warmup Iteration   1: 6143.939 ops/s
# Warmup Iteration   2: 6069.811 ops/s
# Warmup Iteration   3: 6140.479 ops/s
# Warmup Iteration   4: 6168.093 ops/s
# Warmup Iteration   5: 6155.904 ops/s
Iteration   1: 6165.663 ops/s
                 ·gc.alloc.rate:      0.190 MB/sec
                 ·gc.alloc.rate.norm: 34.023 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 6125.083 ops/s
                 ·gc.alloc.rate:      0.190 MB/sec
                 ·gc.alloc.rate.norm: 34.249 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 6119.773 ops/s
                 ·gc.alloc.rate:      0.190 MB/sec
                 ·gc.alloc.rate.norm: 34.278 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 6161.298 ops/s
                 ·gc.alloc.rate:      0.190 MB/sec
                 ·gc.alloc.rate.norm: 34.048 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 6143.899 ops/s
                 ·gc.alloc.rate:      0.190 MB/sec
                 ·gc.alloc.rate.norm: 34.144 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 93.33% complete, ETA 00:12:17
# Fork: 3 of 3
# Warmup Iteration   1: 6121.450 ops/s
# Warmup Iteration   2: 5645.107 ops/s
# Warmup Iteration   3: 5619.954 ops/s
# Warmup Iteration   4: 5685.835 ops/s
# Warmup Iteration   5: 5702.985 ops/s
Iteration   1: 5707.621 ops/s
                 ·gc.alloc.rate:      0.190 MB/sec
                 ·gc.alloc.rate.norm: 36.754 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 6209.328 ops/s
                 ·gc.alloc.rate:      0.190 MB/sec
                 ·gc.alloc.rate.norm: 33.784 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 5606.223 ops/s
                 ·gc.alloc.rate:      0.190 MB/sec
                 ·gc.alloc.rate.norm: 37.419 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 6215.315 ops/s
                 ·gc.alloc.rate:      0.190 MB/sec
                 ·gc.alloc.rate.norm: 33.751 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 5679.447 ops/s
                 ·gc.alloc.rate:      0.190 MB/sec
                 ·gc.alloc.rate.norm: 36.936 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.zGC":
  6026.406 ±(99.9%) 240.813 ops/s [Average]
  (min, avg, max) = (5606.223, 6026.406, 6215.315), stdev = 225.257
  CI (99.9%): [5785.593, 6267.220] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.zGC:·gc.alloc.rate":
  0.190 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.190, 0.190, 0.190), stdev = 0.001
  CI (99.9%): [0.190, 0.190] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.zGC:·gc.alloc.rate.norm":
  34.857 ±(99.9%) 1.446 B/op [Average]
  (min, avg, max) = (33.751, 34.857, 37.419), stdev = 1.353
  CI (99.9%): [33.411, 36.303] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.zGC:·gc.count":
  ≈ 0 counts


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+UseZGC
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.zGC
# Parameters: (percentageOfEqualNumbers = _75, size = 262140)

# Run progress: 94.29% complete, ETA 00:10:32
# Fork: 1 of 3
# Warmup Iteration   1: 5686.899 ops/s
# Warmup Iteration   2: 5707.742 ops/s
# Warmup Iteration   3: 5729.833 ops/s
# Warmup Iteration   4: 5713.383 ops/s
# Warmup Iteration   5: 6193.353 ops/s
Iteration   1: 6189.494 ops/s
                 ·gc.alloc.rate:      0.190 MB/sec
                 ·gc.alloc.rate.norm: 33.892 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 6175.859 ops/s
                 ·gc.alloc.rate:      0.190 MB/sec
                 ·gc.alloc.rate.norm: 33.967 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 6105.647 ops/s
                 ·gc.alloc.rate:      0.190 MB/sec
                 ·gc.alloc.rate.norm: 34.358 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 6163.274 ops/s
                 ·gc.alloc.rate:      0.190 MB/sec
                 ·gc.alloc.rate.norm: 34.037 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 6104.393 ops/s
                 ·gc.alloc.rate:      0.190 MB/sec
                 ·gc.alloc.rate.norm: 34.365 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 95.24% complete, ETA 00:08:46
# Fork: 2 of 3
# Warmup Iteration   1: 5522.451 ops/s
# Warmup Iteration   2: 5614.077 ops/s
# Warmup Iteration   3: 5635.684 ops/s
# Warmup Iteration   4: 5653.713 ops/s
# Warmup Iteration   5: 5667.942 ops/s
Iteration   1: 5628.964 ops/s
                 ·gc.alloc.rate:      0.190 MB/sec
                 ·gc.alloc.rate.norm: 37.267 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 5680.757 ops/s
                 ·gc.alloc.rate:      0.190 MB/sec
                 ·gc.alloc.rate.norm: 36.928 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 5680.093 ops/s
                 ·gc.alloc.rate:      0.190 MB/sec
                 ·gc.alloc.rate.norm: 36.932 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 5678.916 ops/s
                 ·gc.alloc.rate:      0.190 MB/sec
                 ·gc.alloc.rate.norm: 36.939 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 5680.444 ops/s
                 ·gc.alloc.rate:      0.190 MB/sec
                 ·gc.alloc.rate.norm: 36.930 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 96.19% complete, ETA 00:07:01
# Fork: 3 of 3
# Warmup Iteration   1: 6244.530 ops/s
# Warmup Iteration   2: 5625.888 ops/s
# Warmup Iteration   3: 5673.345 ops/s
# Warmup Iteration   4: 5683.261 ops/s
# Warmup Iteration   5: 5684.361 ops/s
Iteration   1: 6226.393 ops/s
                 ·gc.alloc.rate:      0.190 MB/sec
                 ·gc.alloc.rate.norm: 33.692 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 6210.685 ops/s
                 ·gc.alloc.rate:      0.190 MB/sec
                 ·gc.alloc.rate.norm: 33.776 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 6234.699 ops/s
                 ·gc.alloc.rate:      0.190 MB/sec
                 ·gc.alloc.rate.norm: 33.647 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 6226.072 ops/s
                 ·gc.alloc.rate:      0.190 MB/sec
                 ·gc.alloc.rate.norm: 33.693 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 6174.984 ops/s
                 ·gc.alloc.rate:      0.190 MB/sec
                 ·gc.alloc.rate.norm: 33.972 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.zGC":
  6010.712 ±(99.9%) 270.064 ops/s [Average]
  (min, avg, max) = (5628.964, 6010.712, 6234.699), stdev = 252.618
  CI (99.9%): [5740.648, 6280.775] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.zGC:·gc.alloc.rate":
  0.190 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.190, 0.190, 0.190), stdev = 0.001
  CI (99.9%): [0.190, 0.190] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.zGC:·gc.alloc.rate.norm":
  34.960 ±(99.9%) 1.614 B/op [Average]
  (min, avg, max) = (33.647, 34.960, 37.267), stdev = 1.509
  CI (99.9%): [33.346, 36.573] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.zGC:·gc.count":
  ≈ 0 counts


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+UseZGC
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.zGC
# Parameters: (percentageOfEqualNumbers = _100, size = 262140)

# Run progress: 97.14% complete, ETA 00:05:16
# Fork: 1 of 3
# Warmup Iteration   1: 7200.669 ops/s
# Warmup Iteration   2: 8037.777 ops/s
# Warmup Iteration   3: 7997.940 ops/s
# Warmup Iteration   4: 8056.440 ops/s
# Warmup Iteration   5: 8010.796 ops/s
Iteration   1: 7971.002 ops/s
                 ·gc.alloc.rate:      0.190 MB/sec
                 ·gc.alloc.rate.norm: 26.317 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 8016.008 ops/s
                 ·gc.alloc.rate:      0.190 MB/sec
                 ·gc.alloc.rate.norm: 26.169 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 8001.704 ops/s
                 ·gc.alloc.rate:      0.190 MB/sec
                 ·gc.alloc.rate.norm: 26.216 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 7947.874 ops/s
                 ·gc.alloc.rate:      0.190 MB/sec
                 ·gc.alloc.rate.norm: 26.394 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 7180.685 ops/s
                 ·gc.alloc.rate:      0.190 MB/sec
                 ·gc.alloc.rate.norm: 29.214 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 98.10% complete, ETA 00:03:30
# Fork: 2 of 3
# Warmup Iteration   1: 6446.898 ops/s
# Warmup Iteration   2: 6530.321 ops/s
# Warmup Iteration   3: 6540.638 ops/s
# Warmup Iteration   4: 6512.483 ops/s
# Warmup Iteration   5: 6554.848 ops/s
Iteration   1: 6562.034 ops/s
                 ·gc.alloc.rate:      0.190 MB/sec
                 ·gc.alloc.rate.norm: 31.968 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 6554.662 ops/s
                 ·gc.alloc.rate:      0.190 MB/sec
                 ·gc.alloc.rate.norm: 32.004 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 6555.974 ops/s
                 ·gc.alloc.rate:      0.190 MB/sec
                 ·gc.alloc.rate.norm: 31.997 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 6564.139 ops/s
                 ·gc.alloc.rate:      0.190 MB/sec
                 ·gc.alloc.rate.norm: 31.958 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 6511.792 ops/s
                 ·gc.alloc.rate:      0.190 MB/sec
                 ·gc.alloc.rate.norm: 32.215 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 99.05% complete, ETA 00:01:45
# Fork: 3 of 3
# Warmup Iteration   1: 7285.544 ops/s
# Warmup Iteration   2: 6500.233 ops/s
# Warmup Iteration   3: 6527.693 ops/s
# Warmup Iteration   4: 6552.371 ops/s
# Warmup Iteration   5: 6553.786 ops/s
Iteration   1: 6505.725 ops/s
                 ·gc.alloc.rate:      0.190 MB/sec
                 ·gc.alloc.rate.norm: 32.245 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 6559.179 ops/s
                 ·gc.alloc.rate:      0.190 MB/sec
                 ·gc.alloc.rate.norm: 31.982 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 6566.853 ops/s
                 ·gc.alloc.rate:      0.190 MB/sec
                 ·gc.alloc.rate.norm: 31.944 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 6562.777 ops/s
                 ·gc.alloc.rate:      0.190 MB/sec
                 ·gc.alloc.rate.norm: 31.964 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 7254.201 ops/s
                 ·gc.alloc.rate:      0.190 MB/sec
                 ·gc.alloc.rate.norm: 28.918 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.zGC":
  7020.974 ±(99.9%) 688.142 ops/s [Average]
  (min, avg, max) = (6505.725, 7020.974, 8016.008), stdev = 643.689
  CI (99.9%): [6332.832, 7709.116] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.zGC:·gc.alloc.rate":
  0.190 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.190, 0.190, 0.190), stdev = 0.001
  CI (99.9%): [0.190, 0.190] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.zGC:·gc.alloc.rate.norm":
  30.100 ±(99.9%) 2.776 B/op [Average]
  (min, avg, max) = (26.169, 30.100, 32.245), stdev = 2.597
  CI (99.9%): [27.324, 32.877] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.ReferenceComparisonBenchmark.zGC:·gc.count":
  ≈ 0 counts


# Run complete. Total time: 03:04:21

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                                         (percentageOfEqualNumbers)  (size)   Mode  Cnt      Score      Error   Units
ReferenceComparisonBenchmark.concMarkSweepGC                                              _0  262140  thrpt   15  12307.196 ±  631.615   ops/s
ReferenceComparisonBenchmark.concMarkSweepGC:·gc.alloc.rate                               _0  262140  thrpt   15      0.476 ±    0.001  MB/sec
ReferenceComparisonBenchmark.concMarkSweepGC:·gc.alloc.rate.norm                          _0  262140  thrpt   15     42.674 ±    2.120    B/op
ReferenceComparisonBenchmark.concMarkSweepGC:·gc.count                                    _0  262140  thrpt   15        ≈ 0             counts
ReferenceComparisonBenchmark.concMarkSweepGC                                             _25  262140  thrpt   15   7307.716 ±  202.463   ops/s
ReferenceComparisonBenchmark.concMarkSweepGC:·gc.alloc.rate                              _25  262140  thrpt   15      0.095 ±    0.001  MB/sec
ReferenceComparisonBenchmark.concMarkSweepGC:·gc.alloc.rate.norm                         _25  262140  thrpt   15     14.365 ±    0.402    B/op
ReferenceComparisonBenchmark.concMarkSweepGC:·gc.count                                   _25  262140  thrpt   15        ≈ 0             counts
ReferenceComparisonBenchmark.concMarkSweepGC                                             _50  262140  thrpt   15   7238.746 ±  198.911   ops/s
ReferenceComparisonBenchmark.concMarkSweepGC:·gc.alloc.rate                              _50  262140  thrpt   15      0.095 ±    0.001  MB/sec
ReferenceComparisonBenchmark.concMarkSweepGC:·gc.alloc.rate.norm                         _50  262140  thrpt   15     14.501 ±    0.395    B/op
ReferenceComparisonBenchmark.concMarkSweepGC:·gc.count                                   _50  262140  thrpt   15        ≈ 0             counts
ReferenceComparisonBenchmark.concMarkSweepGC                                             _75  262140  thrpt   15   7281.038 ±  149.338   ops/s
ReferenceComparisonBenchmark.concMarkSweepGC:·gc.alloc.rate                              _75  262140  thrpt   15      0.095 ±    0.001  MB/sec
ReferenceComparisonBenchmark.concMarkSweepGC:·gc.alloc.rate.norm                         _75  262140  thrpt   15     14.413 ±    0.293    B/op
ReferenceComparisonBenchmark.concMarkSweepGC:·gc.count                                   _75  262140  thrpt   15        ≈ 0             counts
ReferenceComparisonBenchmark.concMarkSweepGC                                            _100  262140  thrpt   15  15884.661 ±  697.571   ops/s
ReferenceComparisonBenchmark.concMarkSweepGC:·gc.alloc.rate                             _100  262140  thrpt   15      0.095 ±    0.001  MB/sec
ReferenceComparisonBenchmark.concMarkSweepGC:·gc.alloc.rate.norm                        _100  262140  thrpt   15      6.615 ±    0.299    B/op
ReferenceComparisonBenchmark.concMarkSweepGC:·gc.count                                  _100  262140  thrpt   15        ≈ 0             counts
ReferenceComparisonBenchmark.epsilonGC                                                    _0  262140  thrpt   15  17504.051 ± 1072.518   ops/s
ReferenceComparisonBenchmark.epsilonGC:·gc.alloc.rate                                     _0  262140  thrpt   15      0.476 ±    0.001  MB/sec
ReferenceComparisonBenchmark.epsilonGC:·gc.alloc.rate.norm                                _0  262140  thrpt   15     30.036 ±    1.882    B/op
ReferenceComparisonBenchmark.epsilonGC:·gc.count                                          _0  262140  thrpt   15        ≈ 0             counts
ReferenceComparisonBenchmark.epsilonGC                                                   _25  262140  thrpt   15   7444.156 ±   19.078   ops/s
ReferenceComparisonBenchmark.epsilonGC:·gc.alloc.rate                                    _25  262140  thrpt   15      0.095 ±    0.001  MB/sec
ReferenceComparisonBenchmark.epsilonGC:·gc.alloc.rate.norm                               _25  262140  thrpt   15     14.093 ±    0.036    B/op
ReferenceComparisonBenchmark.epsilonGC:·gc.count                                         _25  262140  thrpt   15        ≈ 0             counts
ReferenceComparisonBenchmark.epsilonGC                                                   _50  262140  thrpt   15   7355.930 ±  153.275   ops/s
ReferenceComparisonBenchmark.epsilonGC:·gc.alloc.rate                                    _50  262140  thrpt   15      0.095 ±    0.001  MB/sec
ReferenceComparisonBenchmark.epsilonGC:·gc.alloc.rate.norm                               _50  262140  thrpt   15     14.266 ±    0.301    B/op
ReferenceComparisonBenchmark.epsilonGC:·gc.count                                         _50  262140  thrpt   15        ≈ 0             counts
ReferenceComparisonBenchmark.epsilonGC                                                   _75  262140  thrpt   15   7370.601 ±  158.563   ops/s
ReferenceComparisonBenchmark.epsilonGC:·gc.alloc.rate                                    _75  262140  thrpt   15      0.095 ±    0.001  MB/sec
ReferenceComparisonBenchmark.epsilonGC:·gc.alloc.rate.norm                               _75  262140  thrpt   15     14.238 ±    0.314    B/op
ReferenceComparisonBenchmark.epsilonGC:·gc.count                                         _75  262140  thrpt   15        ≈ 0             counts
ReferenceComparisonBenchmark.epsilonGC                                                  _100  262140  thrpt   15  17989.252 ±  662.049   ops/s
ReferenceComparisonBenchmark.epsilonGC:·gc.alloc.rate                                   _100  262140  thrpt   15      0.095 ±    0.001  MB/sec
ReferenceComparisonBenchmark.epsilonGC:·gc.alloc.rate.norm                              _100  262140  thrpt   15      5.838 ±    0.220    B/op
ReferenceComparisonBenchmark.epsilonGC:·gc.count                                        _100  262140  thrpt   15        ≈ 0             counts
ReferenceComparisonBenchmark.g1GC                                                         _0  262140  thrpt   15  17918.860 ±  642.529   ops/s
ReferenceComparisonBenchmark.g1GC:·gc.alloc.rate                                          _0  262140  thrpt   15      0.476 ±    0.001  MB/sec
ReferenceComparisonBenchmark.g1GC:·gc.alloc.rate.norm                                     _0  262140  thrpt   15     29.280 ±    1.074    B/op
ReferenceComparisonBenchmark.g1GC:·gc.count                                               _0  262140  thrpt   15        ≈ 0             counts
ReferenceComparisonBenchmark.g1GC                                                        _25  262140  thrpt   15   7162.327 ±   63.753   ops/s
ReferenceComparisonBenchmark.g1GC:·gc.alloc.rate                                         _25  262140  thrpt   15      0.095 ±    0.001  MB/sec
ReferenceComparisonBenchmark.g1GC:·gc.alloc.rate.norm                                    _25  262140  thrpt   15     14.648 ±    0.130    B/op
ReferenceComparisonBenchmark.g1GC:·gc.count                                              _25  262140  thrpt   15        ≈ 0             counts
ReferenceComparisonBenchmark.g1GC                                                        _50  262140  thrpt   15   7389.509 ±  108.304   ops/s
ReferenceComparisonBenchmark.g1GC:·gc.alloc.rate                                         _50  262140  thrpt   15      0.095 ±    0.001  MB/sec
ReferenceComparisonBenchmark.g1GC:·gc.alloc.rate.norm                                    _50  262140  thrpt   15     14.199 ±    0.210    B/op
ReferenceComparisonBenchmark.g1GC:·gc.count                                              _50  262140  thrpt   15        ≈ 0             counts
ReferenceComparisonBenchmark.g1GC                                                        _75  262140  thrpt   15   7310.000 ±  143.780   ops/s
ReferenceComparisonBenchmark.g1GC:·gc.alloc.rate                                         _75  262140  thrpt   15      0.095 ±    0.001  MB/sec
ReferenceComparisonBenchmark.g1GC:·gc.alloc.rate.norm                                    _75  262140  thrpt   15     14.355 ±    0.283    B/op
ReferenceComparisonBenchmark.g1GC:·gc.count                                              _75  262140  thrpt   15        ≈ 0             counts
ReferenceComparisonBenchmark.g1GC                                                       _100  262140  thrpt   15  17483.814 ±  696.682   ops/s
ReferenceComparisonBenchmark.g1GC:·gc.alloc.rate                                        _100  262140  thrpt   15      0.095 ±    0.001  MB/sec
ReferenceComparisonBenchmark.g1GC:·gc.alloc.rate.norm                                   _100  262140  thrpt   15      6.008 ±    0.234    B/op
ReferenceComparisonBenchmark.g1GC:·gc.count                                             _100  262140  thrpt   15        ≈ 0             counts
ReferenceComparisonBenchmark.parallelOldGC                                                _0  262140  thrpt   15  12562.530 ±  553.512   ops/s
ReferenceComparisonBenchmark.parallelOldGC:·gc.alloc.rate                                 _0  262140  thrpt   15      0.476 ±    0.001  MB/sec
ReferenceComparisonBenchmark.parallelOldGC:·gc.alloc.rate.norm                            _0  262140  thrpt   15     41.787 ±    1.878    B/op
ReferenceComparisonBenchmark.parallelOldGC:·gc.count                                      _0  262140  thrpt   15        ≈ 0             counts
ReferenceComparisonBenchmark.parallelOldGC                                               _25  262140  thrpt   15   7385.743 ±  163.244   ops/s
ReferenceComparisonBenchmark.parallelOldGC:·gc.alloc.rate                                _25  262140  thrpt   15      0.095 ±    0.001  MB/sec
ReferenceComparisonBenchmark.parallelOldGC:·gc.alloc.rate.norm                           _25  262140  thrpt   15     14.210 ±    0.323    B/op
ReferenceComparisonBenchmark.parallelOldGC:·gc.count                                     _25  262140  thrpt   15        ≈ 0             counts
ReferenceComparisonBenchmark.parallelOldGC                                               _50  262140  thrpt   15   7263.276 ±  198.435   ops/s
ReferenceComparisonBenchmark.parallelOldGC:·gc.alloc.rate                                _50  262140  thrpt   15      0.095 ±    0.001  MB/sec
ReferenceComparisonBenchmark.parallelOldGC:·gc.alloc.rate.norm                           _50  262140  thrpt   15     14.452 ±    0.394    B/op
ReferenceComparisonBenchmark.parallelOldGC:·gc.count                                     _50  262140  thrpt   15        ≈ 0             counts
ReferenceComparisonBenchmark.parallelOldGC                                               _75  262140  thrpt   15   7217.524 ±  194.496   ops/s
ReferenceComparisonBenchmark.parallelOldGC:·gc.alloc.rate                                _75  262140  thrpt   15      0.095 ±    0.001  MB/sec
ReferenceComparisonBenchmark.parallelOldGC:·gc.alloc.rate.norm                           _75  262140  thrpt   15     14.543 ±    0.389    B/op
ReferenceComparisonBenchmark.parallelOldGC:·gc.count                                     _75  262140  thrpt   15        ≈ 0             counts
ReferenceComparisonBenchmark.parallelOldGC                                              _100  262140  thrpt   15  15295.498 ±  822.901   ops/s
ReferenceComparisonBenchmark.parallelOldGC:·gc.alloc.rate                               _100  262140  thrpt   15      0.095 ±    0.001  MB/sec
ReferenceComparisonBenchmark.parallelOldGC:·gc.alloc.rate.norm                          _100  262140  thrpt   15      6.874 ±    0.360    B/op
ReferenceComparisonBenchmark.parallelOldGC:·gc.count                                    _100  262140  thrpt   15        ≈ 0             counts
ReferenceComparisonBenchmark.serialGC                                                     _0  262140  thrpt   15  12180.987 ±  441.111   ops/s
ReferenceComparisonBenchmark.serialGC:·gc.alloc.rate                                      _0  262140  thrpt   15      0.476 ±    0.001  MB/sec
ReferenceComparisonBenchmark.serialGC:·gc.alloc.rate.norm                                 _0  262140  thrpt   15     43.070 ±    1.489    B/op
ReferenceComparisonBenchmark.serialGC:·gc.count                                           _0  262140  thrpt   15        ≈ 0             counts
ReferenceComparisonBenchmark.serialGC                                                    _25  262140  thrpt   15   7368.959 ±  169.480   ops/s
ReferenceComparisonBenchmark.serialGC:·gc.alloc.rate                                     _25  262140  thrpt   15      0.095 ±    0.001  MB/sec
ReferenceComparisonBenchmark.serialGC:·gc.alloc.rate.norm                                _25  262140  thrpt   15     14.243 ±    0.338    B/op
ReferenceComparisonBenchmark.serialGC:·gc.count                                          _25  262140  thrpt   15        ≈ 0             counts
ReferenceComparisonBenchmark.serialGC                                                    _50  262140  thrpt   15   7186.017 ±  152.414   ops/s
ReferenceComparisonBenchmark.serialGC:·gc.alloc.rate                                     _50  262140  thrpt   15      0.095 ±    0.001  MB/sec
ReferenceComparisonBenchmark.serialGC:·gc.alloc.rate.norm                                _50  262140  thrpt   15     14.604 ±    0.304    B/op
ReferenceComparisonBenchmark.serialGC:·gc.count                                          _50  262140  thrpt   15        ≈ 0             counts
ReferenceComparisonBenchmark.serialGC                                                    _75  262140  thrpt   15   7451.071 ±   19.003   ops/s
ReferenceComparisonBenchmark.serialGC:·gc.alloc.rate                                     _75  262140  thrpt   15      0.095 ±    0.001  MB/sec
ReferenceComparisonBenchmark.serialGC:·gc.alloc.rate.norm                                _75  262140  thrpt   15     14.079 ±    0.036    B/op
ReferenceComparisonBenchmark.serialGC:·gc.count                                          _75  262140  thrpt   15        ≈ 0             counts
ReferenceComparisonBenchmark.serialGC                                                   _100  262140  thrpt   15  15552.433 ±  634.586   ops/s
ReferenceComparisonBenchmark.serialGC:·gc.alloc.rate                                    _100  262140  thrpt   15      0.095 ±    0.001  MB/sec
ReferenceComparisonBenchmark.serialGC:·gc.alloc.rate.norm                               _100  262140  thrpt   15      6.754 ±    0.277    B/op
ReferenceComparisonBenchmark.serialGC:·gc.count                                         _100  262140  thrpt   15        ≈ 0             counts
ReferenceComparisonBenchmark.shenandoahGC                                                 _0  262140  thrpt   15   8521.412 ±  393.121   ops/s
ReferenceComparisonBenchmark.shenandoahGC:·gc.alloc.rate                                  _0  262140  thrpt   15      0.476 ±    0.001  MB/sec
ReferenceComparisonBenchmark.shenandoahGC:·gc.alloc.rate.norm                             _0  262140  thrpt   15     61.613 ±    2.900    B/op
ReferenceComparisonBenchmark.shenandoahGC:·gc.count                                       _0  262140  thrpt   15        ≈ 0             counts
ReferenceComparisonBenchmark.shenandoahGC                                                _25  262140  thrpt   15   7235.289 ±  243.424   ops/s
ReferenceComparisonBenchmark.shenandoahGC:·gc.alloc.rate                                 _25  262140  thrpt   15      0.095 ±    0.001  MB/sec
ReferenceComparisonBenchmark.shenandoahGC:·gc.alloc.rate.norm                            _25  262140  thrpt   15     14.513 ±    0.490    B/op
ReferenceComparisonBenchmark.shenandoahGC:·gc.count                                      _25  262140  thrpt   15        ≈ 0             counts
ReferenceComparisonBenchmark.shenandoahGC                                                _50  262140  thrpt   15   7170.612 ±  209.500   ops/s
ReferenceComparisonBenchmark.shenandoahGC:·gc.alloc.rate                                 _50  262140  thrpt   15      0.095 ±    0.001  MB/sec
ReferenceComparisonBenchmark.shenandoahGC:·gc.alloc.rate.norm                            _50  262140  thrpt   15     14.640 ±    0.421    B/op
ReferenceComparisonBenchmark.shenandoahGC:·gc.count                                      _50  262140  thrpt   15        ≈ 0             counts
ReferenceComparisonBenchmark.shenandoahGC                                                _75  262140  thrpt   15   7437.556 ±   20.597   ops/s
ReferenceComparisonBenchmark.shenandoahGC:·gc.alloc.rate                                 _75  262140  thrpt   15      0.095 ±    0.001  MB/sec
ReferenceComparisonBenchmark.shenandoahGC:·gc.alloc.rate.norm                            _75  262140  thrpt   15     14.105 ±    0.039    B/op
ReferenceComparisonBenchmark.shenandoahGC:·gc.count                                      _75  262140  thrpt   15        ≈ 0             counts
ReferenceComparisonBenchmark.shenandoahGC                                               _100  262140  thrpt   15   8603.306 ±  324.218   ops/s
ReferenceComparisonBenchmark.shenandoahGC:·gc.alloc.rate                                _100  262140  thrpt   15      0.095 ±    0.001  MB/sec
ReferenceComparisonBenchmark.shenandoahGC:·gc.alloc.rate.norm                           _100  262140  thrpt   15     12.208 ±    0.484    B/op
ReferenceComparisonBenchmark.shenandoahGC:·gc.count                                     _100  262140  thrpt   15        ≈ 0             counts
ReferenceComparisonBenchmark.zGC                                                          _0  262140  thrpt   15   6913.378 ±  257.383   ops/s
ReferenceComparisonBenchmark.zGC:·gc.alloc.rate                                           _0  262140  thrpt   15      0.761 ±    0.001  MB/sec
ReferenceComparisonBenchmark.zGC:·gc.alloc.rate.norm                                      _0  262140  thrpt   15    121.438 ±    4.632    B/op
ReferenceComparisonBenchmark.zGC:·gc.count                                                _0  262140  thrpt   15        ≈ 0             counts
ReferenceComparisonBenchmark.zGC                                                         _25  262140  thrpt   15   5824.373 ±  243.274   ops/s
ReferenceComparisonBenchmark.zGC:·gc.alloc.rate                                          _25  262140  thrpt   15      0.190 ±    0.001  MB/sec
ReferenceComparisonBenchmark.zGC:·gc.alloc.rate.norm                                     _25  262140  thrpt   15     36.068 ±    1.471    B/op
ReferenceComparisonBenchmark.zGC:·gc.count                                               _25  262140  thrpt   15        ≈ 0             counts
ReferenceComparisonBenchmark.zGC                                                         _50  262140  thrpt   15   6026.406 ±  240.813   ops/s
ReferenceComparisonBenchmark.zGC:·gc.alloc.rate                                          _50  262140  thrpt   15      0.190 ±    0.001  MB/sec
ReferenceComparisonBenchmark.zGC:·gc.alloc.rate.norm                                     _50  262140  thrpt   15     34.857 ±    1.446    B/op
ReferenceComparisonBenchmark.zGC:·gc.count                                               _50  262140  thrpt   15        ≈ 0             counts
ReferenceComparisonBenchmark.zGC                                                         _75  262140  thrpt   15   6010.712 ±  270.064   ops/s
ReferenceComparisonBenchmark.zGC:·gc.alloc.rate                                          _75  262140  thrpt   15      0.190 ±    0.001  MB/sec
ReferenceComparisonBenchmark.zGC:·gc.alloc.rate.norm                                     _75  262140  thrpt   15     34.960 ±    1.614    B/op
ReferenceComparisonBenchmark.zGC:·gc.count                                               _75  262140  thrpt   15        ≈ 0             counts
ReferenceComparisonBenchmark.zGC                                                        _100  262140  thrpt   15   7020.974 ±  688.142   ops/s
ReferenceComparisonBenchmark.zGC:·gc.alloc.rate                                         _100  262140  thrpt   15      0.190 ±    0.001  MB/sec
ReferenceComparisonBenchmark.zGC:·gc.alloc.rate.norm                                    _100  262140  thrpt   15     30.100 ±    2.776    B/op
ReferenceComparisonBenchmark.zGC:·gc.count                                              _100  262140  thrpt   15        ≈ 0             counts

Benchmark result is saved to results/report-openjdk-13/hotspotvm_gc/ReferenceComparisonBenchmark.json
Running java  -jar benchmarks/target/benchmarks.jar .*WriteBarriersLoopingOverArrayBenchmark.* -prof gc -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_gc/WriteBarriersLoopingOverArrayBenchmark.json
# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UseConcMarkSweepGC
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.WriteBarriersLoopingOverArrayBenchmark.concMarkSweepGC
# Parameters: (size = 262144)

# Run progress: 0.00% complete, ETA 00:35:00
# Fork: 1 of 3
OpenJDK 64-Bit Server VM warning: Option UseConcMarkSweepGC was deprecated in version 9.0 and will likely be removed in a future release.
# Warmup Iteration   1: 6015.864 ops/s
# Warmup Iteration   2: 6052.707 ops/s
# Warmup Iteration   3: 6108.124 ops/s
# Warmup Iteration   4: 6108.215 ops/s
# Warmup Iteration   5: 6092.236 ops/s
Iteration   1: 6104.458 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 6057.021 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 6001.139 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 6102.121 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 6094.788 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 4.76% complete, ETA 00:35:05
# Fork: 2 of 3
OpenJDK 64-Bit Server VM warning: Option UseConcMarkSweepGC was deprecated in version 9.0 and will likely be removed in a future release.
# Warmup Iteration   1: 6106.636 ops/s
# Warmup Iteration   2: 6111.694 ops/s
# Warmup Iteration   3: 6109.105 ops/s
# Warmup Iteration   4: 6074.158 ops/s
# Warmup Iteration   5: 6081.803 ops/s
Iteration   1: 6092.090 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 6047.117 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 6065.372 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 5954.406 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 6069.850 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 9.52% complete, ETA 00:33:20
# Fork: 3 of 3
OpenJDK 64-Bit Server VM warning: Option UseConcMarkSweepGC was deprecated in version 9.0 and will likely be removed in a future release.
# Warmup Iteration   1: 6134.589 ops/s
# Warmup Iteration   2: 6142.587 ops/s
# Warmup Iteration   3: 6036.310 ops/s
# Warmup Iteration   4: 5946.656 ops/s
# Warmup Iteration   5: 6023.058 ops/s
Iteration   1: 6040.608 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 6098.055 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 6080.659 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 6107.126 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 6041.744 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.gc.WriteBarriersLoopingOverArrayBenchmark.concMarkSweepGC":
  6063.770 ±(99.9%) 45.624 ops/s [Average]
  (min, avg, max) = (5954.406, 6063.770, 6107.126), stdev = 42.677
  CI (99.9%): [6018.146, 6109.394] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.WriteBarriersLoopingOverArrayBenchmark.concMarkSweepGC:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.WriteBarriersLoopingOverArrayBenchmark.concMarkSweepGC:·gc.alloc.rate.norm":
  0.007 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (0.007, 0.007, 0.007), stdev = 0.001
  CI (99.9%): [0.007, 0.007] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.WriteBarriersLoopingOverArrayBenchmark.concMarkSweepGC:·gc.count":
  ≈ 0 counts


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+UseEpsilonGC
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.WriteBarriersLoopingOverArrayBenchmark.epsilonGC
# Parameters: (size = 262144)

# Run progress: 14.29% complete, ETA 00:31:35
# Fork: 1 of 3
# Warmup Iteration   1: 12547.384 ops/s
# Warmup Iteration   2: 12503.379 ops/s
# Warmup Iteration   3: 12509.958 ops/s
# Warmup Iteration   4: 12494.382 ops/s
# Warmup Iteration   5: 12557.100 ops/s
Iteration   1: 12521.241 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.003 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 12526.918 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.004 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 12490.925 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.003 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 12545.682 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.003 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 12504.143 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.003 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 19.05% complete, ETA 00:29:50
# Fork: 2 of 3
# Warmup Iteration   1: 12476.349 ops/s
# Warmup Iteration   2: 12492.388 ops/s
# Warmup Iteration   3: 12491.322 ops/s
# Warmup Iteration   4: 12540.224 ops/s
# Warmup Iteration   5: 12492.161 ops/s
Iteration   1: 12492.223 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.003 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 12483.603 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.003 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 12588.193 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.003 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 12571.835 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.003 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 12541.295 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.003 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 23.81% complete, ETA 00:28:04
# Fork: 3 of 3
# Warmup Iteration   1: 12516.387 ops/s
# Warmup Iteration   2: 12545.029 ops/s
# Warmup Iteration   3: 12552.095 ops/s
# Warmup Iteration   4: 12539.198 ops/s
# Warmup Iteration   5: 12532.530 ops/s
Iteration   1: 12544.069 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.003 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 12552.788 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.003 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 12517.114 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.003 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 12515.915 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.003 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 12543.291 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.003 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.gc.WriteBarriersLoopingOverArrayBenchmark.epsilonGC":
  12529.282 ±(99.9%) 32.100 ops/s [Average]
  (min, avg, max) = (12483.603, 12529.282, 12588.193), stdev = 30.026
  CI (99.9%): [12497.182, 12561.382] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.WriteBarriersLoopingOverArrayBenchmark.epsilonGC:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.WriteBarriersLoopingOverArrayBenchmark.epsilonGC:·gc.alloc.rate.norm":
  0.003 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (0.003, 0.003, 0.004), stdev = 0.001
  CI (99.9%): [0.003, 0.003] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.WriteBarriersLoopingOverArrayBenchmark.epsilonGC:·gc.count":
  ≈ 0 counts


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UseG1GC
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.WriteBarriersLoopingOverArrayBenchmark.g1GC
# Parameters: (size = 262144)

# Run progress: 28.57% complete, ETA 00:26:19
# Fork: 1 of 3
# Warmup Iteration   1: 589.264 ops/s
# Warmup Iteration   2: 586.374 ops/s
# Warmup Iteration   3: 593.992 ops/s
# Warmup Iteration   4: 587.765 ops/s
# Warmup Iteration   5: 584.222 ops/s
Iteration   1: 595.644 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.068 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 594.795 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.069 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 594.415 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.069 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 594.613 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.069 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 591.463 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.069 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 33.33% complete, ETA 00:24:34
# Fork: 2 of 3
# Warmup Iteration   1: 581.686 ops/s
# Warmup Iteration   2: 595.075 ops/s
# Warmup Iteration   3: 595.068 ops/s
# Warmup Iteration   4: 591.805 ops/s
# Warmup Iteration   5: 512.312 ops/s
Iteration   1: 468.234 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.087 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 547.637 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.074 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 590.922 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.069 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 588.119 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.069 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 593.691 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.069 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 38.10% complete, ETA 00:22:48
# Fork: 3 of 3
# Warmup Iteration   1: 583.491 ops/s
# Warmup Iteration   2: 591.144 ops/s
# Warmup Iteration   3: 587.620 ops/s
# Warmup Iteration   4: 594.326 ops/s
# Warmup Iteration   5: 594.729 ops/s
Iteration   1: 594.069 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.069 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 596.787 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.068 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 595.362 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.069 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 595.763 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.068 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 596.399 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.068 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.gc.WriteBarriersLoopingOverArrayBenchmark.g1GC":
  582.528 ±(99.9%) 36.215 ops/s [Average]
  (min, avg, max) = (468.234, 582.528, 596.787), stdev = 33.875
  CI (99.9%): [546.313, 618.742] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.WriteBarriersLoopingOverArrayBenchmark.g1GC:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.WriteBarriersLoopingOverArrayBenchmark.g1GC:·gc.alloc.rate.norm":
  0.070 ±(99.9%) 0.005 B/op [Average]
  (min, avg, max) = (0.068, 0.070, 0.087), stdev = 0.005
  CI (99.9%): [0.065, 0.076] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.WriteBarriersLoopingOverArrayBenchmark.g1GC:·gc.count":
  ≈ 0 counts


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UseParallelOldGC
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.WriteBarriersLoopingOverArrayBenchmark.parallelOldGC
# Parameters: (size = 262144)

# Run progress: 42.86% complete, ETA 00:21:03
# Fork: 1 of 3
# Warmup Iteration   1: 5871.412 ops/s
# Warmup Iteration   2: 5917.689 ops/s
# Warmup Iteration   3: 5818.676 ops/s
# Warmup Iteration   4: 5848.170 ops/s
# Warmup Iteration   5: 5835.679 ops/s
Iteration   1: 5850.240 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 5863.969 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 5856.562 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 5930.586 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 5956.399 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 47.62% complete, ETA 00:19:18
# Fork: 2 of 3
# Warmup Iteration   1: 5964.419 ops/s
# Warmup Iteration   2: 5950.284 ops/s
# Warmup Iteration   3: 5804.181 ops/s
# Warmup Iteration   4: 5690.065 ops/s
# Warmup Iteration   5: 5776.075 ops/s
Iteration   1: 5688.620 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 5694.630 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 5918.745 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 5920.473 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 5916.586 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 52.38% complete, ETA 00:17:33
# Fork: 3 of 3
# Warmup Iteration   1: 5820.696 ops/s
# Warmup Iteration   2: 5848.579 ops/s
# Warmup Iteration   3: 5765.571 ops/s
# Warmup Iteration   4: 5847.626 ops/s
# Warmup Iteration   5: 5799.332 ops/s
Iteration   1: 5833.233 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 5857.388 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 5915.924 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 5922.242 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 5925.001 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.gc.WriteBarriersLoopingOverArrayBenchmark.parallelOldGC":
  5870.040 ±(99.9%) 86.599 ops/s [Average]
  (min, avg, max) = (5688.620, 5870.040, 5956.399), stdev = 81.005
  CI (99.9%): [5783.441, 5956.639] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.WriteBarriersLoopingOverArrayBenchmark.parallelOldGC:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.WriteBarriersLoopingOverArrayBenchmark.parallelOldGC:·gc.alloc.rate.norm":
  0.007 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (0.007, 0.007, 0.007), stdev = 0.001
  CI (99.9%): [0.007, 0.007] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.WriteBarriersLoopingOverArrayBenchmark.parallelOldGC:·gc.count":
  ≈ 0 counts


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UseSerialGC
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.WriteBarriersLoopingOverArrayBenchmark.serialGC
# Parameters: (size = 262144)

# Run progress: 57.14% complete, ETA 00:15:47
# Fork: 1 of 3
# Warmup Iteration   1: 5591.982 ops/s
# Warmup Iteration   2: 5584.449 ops/s
# Warmup Iteration   3: 5706.920 ops/s
# Warmup Iteration   4: 5682.630 ops/s
# Warmup Iteration   5: 5683.962 ops/s
Iteration   1: 5703.301 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 5682.109 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 5694.947 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 5697.020 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 5678.428 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 61.90% complete, ETA 00:14:02
# Fork: 2 of 3
# Warmup Iteration   1: 5907.410 ops/s
# Warmup Iteration   2: 5905.039 ops/s
# Warmup Iteration   3: 5925.597 ops/s
# Warmup Iteration   4: 5913.864 ops/s
# Warmup Iteration   5: 5907.033 ops/s
Iteration   1: 5919.878 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 5910.770 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 5901.516 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 5913.802 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 5823.463 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.008 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 66.67% complete, ETA 00:12:17
# Fork: 3 of 3
# Warmup Iteration   1: 5852.992 ops/s
# Warmup Iteration   2: 5850.337 ops/s
# Warmup Iteration   3: 5820.284 ops/s
# Warmup Iteration   4: 5816.905 ops/s
# Warmup Iteration   5: 5817.303 ops/s
Iteration   1: 5818.900 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 5826.705 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 5825.799 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 5769.769 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 5738.149 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.gc.WriteBarriersLoopingOverArrayBenchmark.serialGC":
  5793.637 ±(99.9%) 97.306 ops/s [Average]
  (min, avg, max) = (5678.428, 5793.637, 5919.878), stdev = 91.020
  CI (99.9%): [5696.331, 5890.943] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.WriteBarriersLoopingOverArrayBenchmark.serialGC:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.WriteBarriersLoopingOverArrayBenchmark.serialGC:·gc.alloc.rate.norm":
  0.007 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (0.007, 0.007, 0.008), stdev = 0.001
  CI (99.9%): [0.007, 0.007] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.WriteBarriersLoopingOverArrayBenchmark.serialGC:·gc.count":
  ≈ 0 counts


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+UseShenandoahGC
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.WriteBarriersLoopingOverArrayBenchmark.shenandoahGC
# Parameters: (size = 262144)

# Run progress: 71.43% complete, ETA 00:10:31
# Fork: 1 of 3
# Warmup Iteration   1: 11691.252 ops/s
# Warmup Iteration   2: 10711.527 ops/s
# Warmup Iteration   3: 10774.151 ops/s
# Warmup Iteration   4: 10794.271 ops/s
# Warmup Iteration   5: 10728.727 ops/s
Iteration   1: 10798.371 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.004 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 10816.744 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.004 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 10828.628 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.004 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 10842.874 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.004 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 10711.881 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.004 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 76.19% complete, ETA 00:08:46
# Fork: 2 of 3
# Warmup Iteration   1: 10515.294 ops/s
# Warmup Iteration   2: 10656.331 ops/s
# Warmup Iteration   3: 10622.115 ops/s
# Warmup Iteration   4: 10669.932 ops/s
# Warmup Iteration   5: 10728.361 ops/s
Iteration   1: 10722.158 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.004 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 10688.695 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.004 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 10719.467 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.004 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 10743.219 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.004 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 10755.854 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.004 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 80.95% complete, ETA 00:07:01
# Fork: 3 of 3
# Warmup Iteration   1: 12049.617 ops/s
# Warmup Iteration   2: 11811.955 ops/s
# Warmup Iteration   3: 11825.580 ops/s
# Warmup Iteration   4: 11820.019 ops/s
# Warmup Iteration   5: 11802.538 ops/s
Iteration   1: 11730.232 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.003 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 11787.352 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.003 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 10630.840 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.004 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 10771.973 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.004 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 10812.626 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.004 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.gc.WriteBarriersLoopingOverArrayBenchmark.shenandoahGC":
  10890.728 ±(99.9%) 381.955 ops/s [Average]
  (min, avg, max) = (10630.840, 10890.728, 11787.352), stdev = 357.281
  CI (99.9%): [10508.773, 11272.683] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.WriteBarriersLoopingOverArrayBenchmark.shenandoahGC:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.WriteBarriersLoopingOverArrayBenchmark.shenandoahGC:·gc.alloc.rate.norm":
  0.004 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (0.003, 0.004, 0.004), stdev = 0.001
  CI (99.9%): [0.004, 0.004] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.WriteBarriersLoopingOverArrayBenchmark.shenandoahGC:·gc.count":
  ≈ 0 counts


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+UseZGC
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.WriteBarriersLoopingOverArrayBenchmark.zGC
# Parameters: (size = 262144)

# Run progress: 85.71% complete, ETA 00:05:15
# Fork: 1 of 3
# Warmup Iteration   1: 11894.240 ops/s
# Warmup Iteration   2: 11969.106 ops/s
# Warmup Iteration   3: 11901.609 ops/s
# Warmup Iteration   4: 11876.141 ops/s
# Warmup Iteration   5: 11900.149 ops/s
Iteration   1: 11917.546 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.005 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 11931.736 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.005 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 11891.227 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.005 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 11898.258 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.005 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 11883.578 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.005 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 90.48% complete, ETA 00:03:30
# Fork: 2 of 3
# Warmup Iteration   1: 11374.506 ops/s
# Warmup Iteration   2: 11447.805 ops/s
# Warmup Iteration   3: 11418.281 ops/s
# Warmup Iteration   4: 11555.088 ops/s
# Warmup Iteration   5: 11400.691 ops/s
Iteration   1: 11332.745 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.005 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 11555.122 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.005 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 11573.199 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.005 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 11595.219 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.005 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 11584.942 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.005 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 95.24% complete, ETA 00:01:45
# Fork: 3 of 3
# Warmup Iteration   1: 11766.778 ops/s
# Warmup Iteration   2: 11885.221 ops/s
# Warmup Iteration   3: 11877.028 ops/s
# Warmup Iteration   4: 11714.510 ops/s
# Warmup Iteration   5: 11830.668 ops/s
Iteration   1: 11932.848 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.005 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 11526.974 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.005 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 11434.516 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.005 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 11455.650 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.005 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 11518.380 ops/s
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: 0.005 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.gc.WriteBarriersLoopingOverArrayBenchmark.zGC":
  11668.796 ±(99.9%) 228.484 ops/s [Average]
  (min, avg, max) = (11332.745, 11668.796, 11932.848), stdev = 213.724
  CI (99.9%): [11440.312, 11897.279] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.WriteBarriersLoopingOverArrayBenchmark.zGC:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.WriteBarriersLoopingOverArrayBenchmark.zGC:·gc.alloc.rate.norm":
  0.005 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (0.005, 0.005, 0.005), stdev = 0.001
  CI (99.9%): [0.005, 0.005] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.WriteBarriersLoopingOverArrayBenchmark.zGC:·gc.count":
  ≈ 0 counts


# Run complete. Total time: 00:36:51

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                                                   (size)   Mode  Cnt      Score     Error   Units
WriteBarriersLoopingOverArrayBenchmark.concMarkSweepGC                      262144  thrpt   15   6063.770 ±  45.624   ops/s
WriteBarriersLoopingOverArrayBenchmark.concMarkSweepGC:·gc.alloc.rate       262144  thrpt   15     ≈ 10⁻⁴            MB/sec
WriteBarriersLoopingOverArrayBenchmark.concMarkSweepGC:·gc.alloc.rate.norm  262144  thrpt   15      0.007 ±   0.001    B/op
WriteBarriersLoopingOverArrayBenchmark.concMarkSweepGC:·gc.count            262144  thrpt   15        ≈ 0            counts
WriteBarriersLoopingOverArrayBenchmark.epsilonGC                            262144  thrpt   15  12529.282 ±  32.100   ops/s
WriteBarriersLoopingOverArrayBenchmark.epsilonGC:·gc.alloc.rate             262144  thrpt   15     ≈ 10⁻⁴            MB/sec
WriteBarriersLoopingOverArrayBenchmark.epsilonGC:·gc.alloc.rate.norm        262144  thrpt   15      0.003 ±   0.001    B/op
WriteBarriersLoopingOverArrayBenchmark.epsilonGC:·gc.count                  262144  thrpt   15        ≈ 0            counts
WriteBarriersLoopingOverArrayBenchmark.g1GC                                 262144  thrpt   15    582.528 ±  36.215   ops/s
WriteBarriersLoopingOverArrayBenchmark.g1GC:·gc.alloc.rate                  262144  thrpt   15     ≈ 10⁻⁴            MB/sec
WriteBarriersLoopingOverArrayBenchmark.g1GC:·gc.alloc.rate.norm             262144  thrpt   15      0.070 ±   0.005    B/op
WriteBarriersLoopingOverArrayBenchmark.g1GC:·gc.count                       262144  thrpt   15        ≈ 0            counts
WriteBarriersLoopingOverArrayBenchmark.parallelOldGC                        262144  thrpt   15   5870.040 ±  86.599   ops/s
WriteBarriersLoopingOverArrayBenchmark.parallelOldGC:·gc.alloc.rate         262144  thrpt   15     ≈ 10⁻⁴            MB/sec
WriteBarriersLoopingOverArrayBenchmark.parallelOldGC:·gc.alloc.rate.norm    262144  thrpt   15      0.007 ±   0.001    B/op
WriteBarriersLoopingOverArrayBenchmark.parallelOldGC:·gc.count              262144  thrpt   15        ≈ 0            counts
WriteBarriersLoopingOverArrayBenchmark.serialGC                             262144  thrpt   15   5793.637 ±  97.306   ops/s
WriteBarriersLoopingOverArrayBenchmark.serialGC:·gc.alloc.rate              262144  thrpt   15     ≈ 10⁻⁴            MB/sec
WriteBarriersLoopingOverArrayBenchmark.serialGC:·gc.alloc.rate.norm         262144  thrpt   15      0.007 ±   0.001    B/op
WriteBarriersLoopingOverArrayBenchmark.serialGC:·gc.count                   262144  thrpt   15        ≈ 0            counts
WriteBarriersLoopingOverArrayBenchmark.shenandoahGC                         262144  thrpt   15  10890.728 ± 381.955   ops/s
WriteBarriersLoopingOverArrayBenchmark.shenandoahGC:·gc.alloc.rate          262144  thrpt   15     ≈ 10⁻⁴            MB/sec
WriteBarriersLoopingOverArrayBenchmark.shenandoahGC:·gc.alloc.rate.norm     262144  thrpt   15      0.004 ±   0.001    B/op
WriteBarriersLoopingOverArrayBenchmark.shenandoahGC:·gc.count               262144  thrpt   15        ≈ 0            counts
WriteBarriersLoopingOverArrayBenchmark.zGC                                  262144  thrpt   15  11668.796 ± 228.484   ops/s
WriteBarriersLoopingOverArrayBenchmark.zGC:·gc.alloc.rate                   262144  thrpt   15     ≈ 10⁻⁴            MB/sec
WriteBarriersLoopingOverArrayBenchmark.zGC:·gc.alloc.rate.norm              262144  thrpt   15      0.005 ±   0.001    B/op
WriteBarriersLoopingOverArrayBenchmark.zGC:·gc.count                        262144  thrpt   15        ≈ 0            counts

Benchmark result is saved to results/report-openjdk-13/hotspotvm_gc/WriteBarriersLoopingOverArrayBenchmark.json
Running java  -jar benchmarks/target/benchmarks.jar .*WriteBarriersSequentialReferencesBenchmark.* -prof gc -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_gc/WriteBarriersSequentialReferencesBenchmark.json
# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UseConcMarkSweepGC
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.WriteBarriersSequentialReferencesBenchmark.concMarkSweepGC

# Run progress: 0.00% complete, ETA 00:35:00
# Fork: 1 of 3
OpenJDK 64-Bit Server VM warning: Option UseConcMarkSweepGC was deprecated in version 9.0 and will likely be removed in a future release.
# Warmup Iteration   1: 106.320 ops/us
# Warmup Iteration   2: 109.134 ops/us
# Warmup Iteration   3: 111.522 ops/us
# Warmup Iteration   4: 111.605 ops/us
# Warmup Iteration   5: 111.492 ops/us
Iteration   1: 111.586 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 111.999 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 112.210 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 111.691 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 111.569 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 4.76% complete, ETA 00:35:07
# Fork: 2 of 3
OpenJDK 64-Bit Server VM warning: Option UseConcMarkSweepGC was deprecated in version 9.0 and will likely be removed in a future release.
# Warmup Iteration   1: 105.536 ops/us
# Warmup Iteration   2: 108.772 ops/us
# Warmup Iteration   3: 112.266 ops/us
# Warmup Iteration   4: 112.013 ops/us
# Warmup Iteration   5: 111.780 ops/us
Iteration   1: 111.034 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 111.051 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 111.648 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 111.390 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 111.685 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 9.52% complete, ETA 00:33:21
# Fork: 3 of 3
OpenJDK 64-Bit Server VM warning: Option UseConcMarkSweepGC was deprecated in version 9.0 and will likely be removed in a future release.
# Warmup Iteration   1: 105.693 ops/us
# Warmup Iteration   2: 108.785 ops/us
# Warmup Iteration   3: 111.547 ops/us
# Warmup Iteration   4: 111.854 ops/us
# Warmup Iteration   5: 112.136 ops/us
Iteration   1: 111.697 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 112.007 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 110.983 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 110.411 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 112.094 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.gc.WriteBarriersSequentialReferencesBenchmark.concMarkSweepGC":
  111.537 ±(99.9%) 0.524 ops/us [Average]
  (min, avg, max) = (110.411, 111.537, 112.210), stdev = 0.490
  CI (99.9%): [111.013, 112.061] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.WriteBarriersSequentialReferencesBenchmark.concMarkSweepGC:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.WriteBarriersSequentialReferencesBenchmark.concMarkSweepGC:·gc.alloc.rate.norm":
  ≈ 10⁻⁶ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.WriteBarriersSequentialReferencesBenchmark.concMarkSweepGC:·gc.count":
  ≈ 0 counts


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+UseEpsilonGC
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.WriteBarriersSequentialReferencesBenchmark.epsilonGC

# Run progress: 14.29% complete, ETA 00:31:35
# Fork: 1 of 3
# Warmup Iteration   1: 108.530 ops/us
# Warmup Iteration   2: 111.758 ops/us
# Warmup Iteration   3: 115.268 ops/us
# Warmup Iteration   4: 114.932 ops/us
# Warmup Iteration   5: 115.322 ops/us
Iteration   1: 114.932 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 114.812 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 115.574 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 114.989 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 115.034 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 19.05% complete, ETA 00:29:50
# Fork: 2 of 3
# Warmup Iteration   1: 108.606 ops/us
# Warmup Iteration   2: 110.347 ops/us
# Warmup Iteration   3: 114.042 ops/us
# Warmup Iteration   4: 115.381 ops/us
# Warmup Iteration   5: 115.022 ops/us
Iteration   1: 114.989 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 115.567 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 114.673 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 114.794 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 114.918 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 23.81% complete, ETA 00:28:04
# Fork: 3 of 3
# Warmup Iteration   1: 108.561 ops/us
# Warmup Iteration   2: 112.186 ops/us
# Warmup Iteration   3: 115.195 ops/us
# Warmup Iteration   4: 115.082 ops/us
# Warmup Iteration   5: 114.976 ops/us
Iteration   1: 115.510 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 114.769 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 115.026 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 115.255 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 114.924 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.gc.WriteBarriersSequentialReferencesBenchmark.epsilonGC":
  115.051 ±(99.9%) 0.312 ops/us [Average]
  (min, avg, max) = (114.673, 115.051, 115.574), stdev = 0.292
  CI (99.9%): [114.739, 115.363] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.WriteBarriersSequentialReferencesBenchmark.epsilonGC:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.WriteBarriersSequentialReferencesBenchmark.epsilonGC:·gc.alloc.rate.norm":
  ≈ 10⁻⁶ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.WriteBarriersSequentialReferencesBenchmark.epsilonGC:·gc.count":
  ≈ 0 counts


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UseG1GC
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.WriteBarriersSequentialReferencesBenchmark.g1GC

# Run progress: 28.57% complete, ETA 00:26:19
# Fork: 1 of 3
# Warmup Iteration   1: 47.150 ops/us
# Warmup Iteration   2: 47.369 ops/us
# Warmup Iteration   3: 47.077 ops/us
# Warmup Iteration   4: 47.021 ops/us
# Warmup Iteration   5: 46.826 ops/us
Iteration   1: 47.116 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 47.306 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 46.839 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 46.731 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 42.222 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 33.33% complete, ETA 00:24:34
# Fork: 2 of 3
# Warmup Iteration   1: 42.406 ops/us
# Warmup Iteration   2: 47.375 ops/us
# Warmup Iteration   3: 46.666 ops/us
# Warmup Iteration   4: 46.463 ops/us
# Warmup Iteration   5: 46.448 ops/us
Iteration   1: 46.275 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 46.456 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 46.399 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 46.468 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 46.267 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 38.10% complete, ETA 00:22:48
# Fork: 3 of 3
# Warmup Iteration   1: 46.751 ops/us
# Warmup Iteration   2: 46.411 ops/us
# Warmup Iteration   3: 46.806 ops/us
# Warmup Iteration   4: 46.891 ops/us
# Warmup Iteration   5: 42.742 ops/us
Iteration   1: 46.572 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 46.699 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 46.580 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 46.938 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 46.794 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.gc.WriteBarriersSequentialReferencesBenchmark.g1GC":
  46.377 ±(99.9%) 1.269 ops/us [Average]
  (min, avg, max) = (42.222, 46.377, 47.306), stdev = 1.187
  CI (99.9%): [45.109, 47.646] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.WriteBarriersSequentialReferencesBenchmark.g1GC:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.WriteBarriersSequentialReferencesBenchmark.g1GC:·gc.alloc.rate.norm":
  ≈ 10⁻⁶ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.WriteBarriersSequentialReferencesBenchmark.g1GC:·gc.count":
  ≈ 0 counts


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UseParallelOldGC
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.WriteBarriersSequentialReferencesBenchmark.parallelOldGC

# Run progress: 42.86% complete, ETA 00:21:03
# Fork: 1 of 3
# Warmup Iteration   1: 103.204 ops/us
# Warmup Iteration   2: 107.774 ops/us
# Warmup Iteration   3: 110.169 ops/us
# Warmup Iteration   4: 111.951 ops/us
# Warmup Iteration   5: 111.743 ops/us
Iteration   1: 110.107 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 110.999 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 109.666 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 109.196 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 111.883 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 47.62% complete, ETA 00:19:18
# Fork: 2 of 3
# Warmup Iteration   1: 105.580 ops/us
# Warmup Iteration   2: 108.704 ops/us
# Warmup Iteration   3: 111.491 ops/us
# Warmup Iteration   4: 112.061 ops/us
# Warmup Iteration   5: 111.603 ops/us
Iteration   1: 111.572 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 111.890 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 111.542 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 111.585 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 111.468 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 52.38% complete, ETA 00:17:32
# Fork: 3 of 3
# Warmup Iteration   1: 105.266 ops/us
# Warmup Iteration   2: 107.215 ops/us
# Warmup Iteration   3: 109.401 ops/us
# Warmup Iteration   4: 111.536 ops/us
# Warmup Iteration   5: 111.735 ops/us
Iteration   1: 111.983 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 111.688 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 111.695 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 111.752 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 111.494 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.gc.WriteBarriersSequentialReferencesBenchmark.parallelOldGC":
  111.235 ±(99.9%) 0.926 ops/us [Average]
  (min, avg, max) = (109.196, 111.235, 111.983), stdev = 0.866
  CI (99.9%): [110.309, 112.160] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.WriteBarriersSequentialReferencesBenchmark.parallelOldGC:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.WriteBarriersSequentialReferencesBenchmark.parallelOldGC:·gc.alloc.rate.norm":
  ≈ 10⁻⁶ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.WriteBarriersSequentialReferencesBenchmark.parallelOldGC:·gc.count":
  ≈ 0 counts


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UseSerialGC
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.WriteBarriersSequentialReferencesBenchmark.serialGC

# Run progress: 57.14% complete, ETA 00:15:47
# Fork: 1 of 3
# Warmup Iteration   1: 105.918 ops/us
# Warmup Iteration   2: 109.010 ops/us
# Warmup Iteration   3: 112.142 ops/us
# Warmup Iteration   4: 111.693 ops/us
# Warmup Iteration   5: 111.607 ops/us
Iteration   1: 111.806 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 111.634 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 111.880 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 111.856 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 111.987 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 61.90% complete, ETA 00:14:02
# Fork: 2 of 3
# Warmup Iteration   1: 104.714 ops/us
# Warmup Iteration   2: 107.672 ops/us
# Warmup Iteration   3: 109.907 ops/us
# Warmup Iteration   4: 111.252 ops/us
# Warmup Iteration   5: 110.193 ops/us
Iteration   1: 110.282 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 109.358 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 111.359 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 110.558 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 110.917 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 66.67% complete, ETA 00:12:17
# Fork: 3 of 3
# Warmup Iteration   1: 104.191 ops/us
# Warmup Iteration   2: 107.678 ops/us
# Warmup Iteration   3: 110.576 ops/us
# Warmup Iteration   4: 111.504 ops/us
# Warmup Iteration   5: 111.592 ops/us
Iteration   1: 111.958 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 110.872 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 111.099 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 111.158 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 110.294 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.gc.WriteBarriersSequentialReferencesBenchmark.serialGC":
  111.134 ±(99.9%) 0.822 ops/us [Average]
  (min, avg, max) = (109.358, 111.134, 111.987), stdev = 0.769
  CI (99.9%): [110.313, 111.956] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.WriteBarriersSequentialReferencesBenchmark.serialGC:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.WriteBarriersSequentialReferencesBenchmark.serialGC:·gc.alloc.rate.norm":
  ≈ 10⁻⁶ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.WriteBarriersSequentialReferencesBenchmark.serialGC:·gc.count":
  ≈ 0 counts


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+UseShenandoahGC
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.WriteBarriersSequentialReferencesBenchmark.shenandoahGC

# Run progress: 71.43% complete, ETA 00:10:31
# Fork: 1 of 3
# Warmup Iteration   1: 86.196 ops/us
# Warmup Iteration   2: 86.663 ops/us
# Warmup Iteration   3: 88.013 ops/us
# Warmup Iteration   4: 87.958 ops/us
# Warmup Iteration   5: 88.258 ops/us
Iteration   1: 87.564 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 88.338 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 89.162 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 89.257 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 89.279 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 76.19% complete, ETA 00:08:46
# Fork: 2 of 3
# Warmup Iteration   1: 86.816 ops/us
# Warmup Iteration   2: 94.595 ops/us
# Warmup Iteration   3: 97.810 ops/us
# Warmup Iteration   4: 97.956 ops/us
# Warmup Iteration   5: 96.497 ops/us
Iteration   1: 96.949 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 97.652 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 97.197 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 96.905 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 86.775 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 80.95% complete, ETA 00:07:01
# Fork: 3 of 3
# Warmup Iteration   1: 95.343 ops/us
# Warmup Iteration   2: 94.849 ops/us
# Warmup Iteration   3: 96.858 ops/us
# Warmup Iteration   4: 96.413 ops/us
# Warmup Iteration   5: 95.472 ops/us
Iteration   1: 96.838 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 96.680 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 95.631 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 94.711 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 95.189 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.gc.WriteBarriersSequentialReferencesBenchmark.shenandoahGC":
  93.208 ±(99.9%) 4.472 ops/us [Average]
  (min, avg, max) = (86.775, 93.208, 97.652), stdev = 4.183
  CI (99.9%): [88.737, 97.680] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.WriteBarriersSequentialReferencesBenchmark.shenandoahGC:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.WriteBarriersSequentialReferencesBenchmark.shenandoahGC:·gc.alloc.rate.norm":
  ≈ 10⁻⁶ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.WriteBarriersSequentialReferencesBenchmark.shenandoahGC:·gc.count":
  ≈ 0 counts


# JMH version: 1.22
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/adopt-openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+UseZGC
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.gc.WriteBarriersSequentialReferencesBenchmark.zGC

# Run progress: 85.71% complete, ETA 00:05:15
# Fork: 1 of 3
# Warmup Iteration   1: 102.895 ops/us
# Warmup Iteration   2: 103.123 ops/us
# Warmup Iteration   3: 109.466 ops/us
# Warmup Iteration   4: 109.176 ops/us
# Warmup Iteration   5: 109.521 ops/us
Iteration   1: 108.529 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 109.218 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 111.708 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 111.701 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 111.512 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 90.48% complete, ETA 00:03:30
# Fork: 2 of 3
# Warmup Iteration   1: 102.805 ops/us
# Warmup Iteration   2: 102.915 ops/us
# Warmup Iteration   3: 111.685 ops/us
# Warmup Iteration   4: 111.661 ops/us
# Warmup Iteration   5: 111.756 ops/us
Iteration   1: 111.948 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 111.588 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 111.784 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 111.700 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 111.970 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 95.24% complete, ETA 00:01:45
# Fork: 3 of 3
# Warmup Iteration   1: 102.877 ops/us
# Warmup Iteration   2: 100.375 ops/us
# Warmup Iteration   3: 110.919 ops/us
# Warmup Iteration   4: 111.111 ops/us
# Warmup Iteration   5: 111.496 ops/us
Iteration   1: 111.413 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 110.767 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 111.523 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 111.331 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 110.250 ops/us
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.gc.WriteBarriersSequentialReferencesBenchmark.zGC":
  111.129 ±(99.9%) 1.097 ops/us [Average]
  (min, avg, max) = (108.529, 111.129, 111.970), stdev = 1.026
  CI (99.9%): [110.032, 112.227] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.WriteBarriersSequentialReferencesBenchmark.zGC:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.WriteBarriersSequentialReferencesBenchmark.zGC:·gc.alloc.rate.norm":
  ≈ 10⁻⁶ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.gc.WriteBarriersSequentialReferencesBenchmark.zGC:·gc.count":
  ≈ 0 counts


# Run complete. Total time: 00:36:51

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                                                        Mode  Cnt    Score    Error   Units
WriteBarriersSequentialReferencesBenchmark.concMarkSweepGC                      thrpt   15  111.537 ±  0.524  ops/us
WriteBarriersSequentialReferencesBenchmark.concMarkSweepGC:·gc.alloc.rate       thrpt   15   ≈ 10⁻⁴           MB/sec
WriteBarriersSequentialReferencesBenchmark.concMarkSweepGC:·gc.alloc.rate.norm  thrpt   15   ≈ 10⁻⁶             B/op
WriteBarriersSequentialReferencesBenchmark.concMarkSweepGC:·gc.count            thrpt   15      ≈ 0           counts
WriteBarriersSequentialReferencesBenchmark.epsilonGC                            thrpt   15  115.051 ±  0.312  ops/us
WriteBarriersSequentialReferencesBenchmark.epsilonGC:·gc.alloc.rate             thrpt   15   ≈ 10⁻⁴           MB/sec
WriteBarriersSequentialReferencesBenchmark.epsilonGC:·gc.alloc.rate.norm        thrpt   15   ≈ 10⁻⁶             B/op
WriteBarriersSequentialReferencesBenchmark.epsilonGC:·gc.count                  thrpt   15      ≈ 0           counts
WriteBarriersSequentialReferencesBenchmark.g1GC                                 thrpt   15   46.377 ±  1.269  ops/us
WriteBarriersSequentialReferencesBenchmark.g1GC:·gc.alloc.rate                  thrpt   15   ≈ 10⁻⁴           MB/sec
WriteBarriersSequentialReferencesBenchmark.g1GC:·gc.alloc.rate.norm             thrpt   15   ≈ 10⁻⁶             B/op
WriteBarriersSequentialReferencesBenchmark.g1GC:·gc.count                       thrpt   15      ≈ 0           counts
WriteBarriersSequentialReferencesBenchmark.parallelOldGC                        thrpt   15  111.235 ±  0.926  ops/us
WriteBarriersSequentialReferencesBenchmark.parallelOldGC:·gc.alloc.rate         thrpt   15   ≈ 10⁻⁴           MB/sec
WriteBarriersSequentialReferencesBenchmark.parallelOldGC:·gc.alloc.rate.norm    thrpt   15   ≈ 10⁻⁶             B/op
WriteBarriersSequentialReferencesBenchmark.parallelOldGC:·gc.count              thrpt   15      ≈ 0           counts
WriteBarriersSequentialReferencesBenchmark.serialGC                             thrpt   15  111.134 ±  0.822  ops/us
WriteBarriersSequentialReferencesBenchmark.serialGC:·gc.alloc.rate              thrpt   15   ≈ 10⁻⁴           MB/sec
WriteBarriersSequentialReferencesBenchmark.serialGC:·gc.alloc.rate.norm         thrpt   15   ≈ 10⁻⁶             B/op
WriteBarriersSequentialReferencesBenchmark.serialGC:·gc.count                   thrpt   15      ≈ 0           counts
WriteBarriersSequentialReferencesBenchmark.shenandoahGC                         thrpt   15   93.208 ±  4.472  ops/us
WriteBarriersSequentialReferencesBenchmark.shenandoahGC:·gc.alloc.rate          thrpt   15   ≈ 10⁻⁴           MB/sec
WriteBarriersSequentialReferencesBenchmark.shenandoahGC:·gc.alloc.rate.norm     thrpt   15   ≈ 10⁻⁶             B/op
WriteBarriersSequentialReferencesBenchmark.shenandoahGC:·gc.count               thrpt   15      ≈ 0           counts
WriteBarriersSequentialReferencesBenchmark.zGC                                  thrpt   15  111.129 ±  1.097  ops/us
WriteBarriersSequentialReferencesBenchmark.zGC:·gc.alloc.rate                   thrpt   15   ≈ 10⁻⁴           MB/sec
WriteBarriersSequentialReferencesBenchmark.zGC:·gc.alloc.rate.norm              thrpt   15   ≈ 10⁻⁶             B/op
WriteBarriersSequentialReferencesBenchmark.zGC:·gc.count                        thrpt   15      ≈ 0           counts

Benchmark result is saved to results/report-openjdk-13/hotspotvm_gc/WriteBarriersSequentialReferencesBenchmark.json
Finished hotspotvm_gc JMH Tests Suite!
Time Elapsed : 537 minutes and 8 seconds.
