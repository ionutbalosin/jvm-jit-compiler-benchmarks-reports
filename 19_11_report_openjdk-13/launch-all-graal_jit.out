Welcome to JMH Tests Suites
##################################################################################################
############################       HotSpot Graal JIT Test Suite       ############################
##################################################################################################
Launching hotspotvm_graal_jit JMH Tests Suite ...
Create results/report-openjdk-13/hotspotvm_graal_jit folder
Running java -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler -jar benchmarks/target/benchmarks.jar .*LockCoarseningBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_graal_jit/LockCoarseningBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.locks.LockCoarseningBenchmark.lock_baseline
# Parameters: (value = 42)

# Run progress: 0.00% complete, ETA 00:10:00
# Fork: 1 of 3
# Warmup Iteration   1: 4.629 ns/op
# Warmup Iteration   2: 4.224 ns/op
# Warmup Iteration   3: 4.205 ns/op
# Warmup Iteration   4: 4.192 ns/op
# Warmup Iteration   5: 4.169 ns/op
Iteration   1: 4.158 ns/op
Iteration   2: 4.179 ns/op
Iteration   3: 4.099 ns/op
Iteration   4: 4.117 ns/op
Iteration   5: 4.014 ns/op

# Run progress: 16.67% complete, ETA 00:08:21
# Fork: 2 of 3
# Warmup Iteration   1: 4.378 ns/op
# Warmup Iteration   2: 4.108 ns/op
# Warmup Iteration   3: 3.935 ns/op
# Warmup Iteration   4: 3.936 ns/op
# Warmup Iteration   5: 3.931 ns/op
Iteration   1: 3.938 ns/op
Iteration   2: 3.938 ns/op
Iteration   3: 3.935 ns/op
Iteration   4: 3.927 ns/op
Iteration   5: 3.939 ns/op

# Run progress: 33.33% complete, ETA 00:06:41
# Fork: 3 of 3
# Warmup Iteration   1: 4.570 ns/op
# Warmup Iteration   2: 4.350 ns/op
# Warmup Iteration   3: 4.148 ns/op
# Warmup Iteration   4: 4.146 ns/op
# Warmup Iteration   5: 4.132 ns/op
Iteration   1: 4.134 ns/op
Iteration   2: 4.154 ns/op
Iteration   3: 4.135 ns/op
Iteration   4: 3.926 ns/op
Iteration   5: 3.932 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.locks.LockCoarseningBenchmark.lock_baseline":
  4.035 ±(99.9%) 0.112 ns/op [Average]
  (min, avg, max) = (3.926, 4.035, 4.179), stdev = 0.105
  CI (99.9%): [3.923, 4.147] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.locks.LockCoarseningBenchmark.lock_coarsening_10x
# Parameters: (value = 42)

# Run progress: 50.00% complete, ETA 00:05:00
# Fork: 1 of 3
# Warmup Iteration   1: 4.642 ns/op
# Warmup Iteration   2: 4.333 ns/op
# Warmup Iteration   3: 4.143 ns/op
# Warmup Iteration   4: 4.010 ns/op
# Warmup Iteration   5: 4.022 ns/op
Iteration   1: 4.028 ns/op
Iteration   2: 4.019 ns/op
Iteration   3: 4.027 ns/op
Iteration   4: 4.021 ns/op
Iteration   5: 3.944 ns/op

# Run progress: 66.67% complete, ETA 00:03:20
# Fork: 2 of 3
# Warmup Iteration   1: 4.543 ns/op
# Warmup Iteration   2: 4.232 ns/op
# Warmup Iteration   3: 4.037 ns/op
# Warmup Iteration   4: 4.032 ns/op
# Warmup Iteration   5: 4.160 ns/op
Iteration   1: 4.011 ns/op
Iteration   2: 4.025 ns/op
Iteration   3: 4.022 ns/op
Iteration   4: 4.097 ns/op
Iteration   5: 4.155 ns/op

# Run progress: 83.33% complete, ETA 00:01:40
# Fork: 3 of 3
# Warmup Iteration   1: 4.540 ns/op
# Warmup Iteration   2: 4.370 ns/op
# Warmup Iteration   3: 3.926 ns/op
# Warmup Iteration   4: 3.941 ns/op
# Warmup Iteration   5: 3.940 ns/op
Iteration   1: 3.941 ns/op
Iteration   2: 3.940 ns/op
Iteration   3: 3.938 ns/op
Iteration   4: 3.936 ns/op
Iteration   5: 4.025 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.locks.LockCoarseningBenchmark.lock_coarsening_10x":
  4.009 ±(99.9%) 0.067 ns/op [Average]
  (min, avg, max) = (3.936, 4.009, 4.155), stdev = 0.063
  CI (99.9%): [3.942, 4.075] (assumes normal distribution)


# Run complete. Total time: 00:10:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    (value)  Mode  Cnt  Score   Error  Units
LockCoarseningBenchmark.lock_baseline             42  avgt   15  4.035 ± 0.112  ns/op
LockCoarseningBenchmark.lock_coarsening_10x       42  avgt   15  4.009 ± 0.067  ns/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_graal_jit/LockCoarseningBenchmark.json
Running java -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler -jar benchmarks/target/benchmarks.jar .*LockElisionBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_graal_jit/LockElisionBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.locks.LockElisionBenchmark.lock_baseline
# Parameters: (value = 42)

# Run progress: 0.00% complete, ETA 00:10:00
# Fork: 1 of 3
# Warmup Iteration   1: 3.678 ns/op
# Warmup Iteration   2: 3.389 ns/op
# Warmup Iteration   3: 3.483 ns/op
# Warmup Iteration   4: 3.281 ns/op
# Warmup Iteration   5: 3.287 ns/op
Iteration   1: 3.291 ns/op
Iteration   2: 3.291 ns/op
Iteration   3: 3.289 ns/op
Iteration   4: 3.292 ns/op
Iteration   5: 3.294 ns/op

# Run progress: 16.67% complete, ETA 00:08:21
# Fork: 2 of 3
# Warmup Iteration   1: 3.594 ns/op
# Warmup Iteration   2: 3.362 ns/op
# Warmup Iteration   3: 3.517 ns/op
# Warmup Iteration   4: 3.482 ns/op
# Warmup Iteration   5: 3.291 ns/op
Iteration   1: 3.489 ns/op
Iteration   2: 3.371 ns/op
Iteration   3: 3.384 ns/op
Iteration   4: 3.375 ns/op
Iteration   5: 3.372 ns/op

# Run progress: 33.33% complete, ETA 00:06:41
# Fork: 3 of 3
# Warmup Iteration   1: 3.588 ns/op
# Warmup Iteration   2: 3.361 ns/op
# Warmup Iteration   3: 3.473 ns/op
# Warmup Iteration   4: 3.495 ns/op
# Warmup Iteration   5: 3.468 ns/op
Iteration   1: 3.465 ns/op
Iteration   2: 3.350 ns/op
Iteration   3: 3.359 ns/op
Iteration   4: 3.363 ns/op
Iteration   5: 3.369 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.locks.LockElisionBenchmark.lock_baseline":
  3.357 ±(99.9%) 0.065 ns/op [Average]
  (min, avg, max) = (3.289, 3.357, 3.489), stdev = 0.061
  CI (99.9%): [3.292, 3.422] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.locks.LockElisionBenchmark.lock_elision_10x
# Parameters: (value = 42)

# Run progress: 50.00% complete, ETA 00:05:00
# Fork: 1 of 3
# Warmup Iteration   1: 3.629 ns/op
# Warmup Iteration   2: 3.190 ns/op
# Warmup Iteration   3: 3.290 ns/op
# Warmup Iteration   4: 3.293 ns/op
# Warmup Iteration   5: 3.295 ns/op
Iteration   1: 3.301 ns/op
Iteration   2: 3.297 ns/op
Iteration   3: 3.503 ns/op
Iteration   4: 3.489 ns/op
Iteration   5: 3.478 ns/op

# Run progress: 66.67% complete, ETA 00:03:20
# Fork: 2 of 3
# Warmup Iteration   1: 3.492 ns/op
# Warmup Iteration   2: 3.380 ns/op
# Warmup Iteration   3: 3.284 ns/op
# Warmup Iteration   4: 3.293 ns/op
# Warmup Iteration   5: 3.291 ns/op
Iteration   1: 3.508 ns/op
Iteration   2: 3.381 ns/op
Iteration   3: 3.380 ns/op
Iteration   4: 3.384 ns/op
Iteration   5: 3.379 ns/op

# Run progress: 83.33% complete, ETA 00:01:40
# Fork: 3 of 3
# Warmup Iteration   1: 3.434 ns/op
# Warmup Iteration   2: 3.403 ns/op
# Warmup Iteration   3: 3.486 ns/op
# Warmup Iteration   4: 3.488 ns/op
# Warmup Iteration   5: 3.474 ns/op
Iteration   1: 3.471 ns/op
Iteration   2: 3.468 ns/op
Iteration   3: 3.523 ns/op
Iteration   4: 3.396 ns/op
Iteration   5: 3.313 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.locks.LockElisionBenchmark.lock_elision_10x":
  3.418 ±(99.9%) 0.084 ns/op [Average]
  (min, avg, max) = (3.297, 3.418, 3.523), stdev = 0.078
  CI (99.9%): [3.335, 3.502] (assumes normal distribution)


# Run complete. Total time: 00:10:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                              (value)  Mode  Cnt  Score   Error  Units
LockElisionBenchmark.lock_baseline          42  avgt   15  3.357 ± 0.065  ns/op
LockElisionBenchmark.lock_elision_10x       42  avgt   15  3.418 ± 0.084  ns/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_graal_jit/LockElisionBenchmark.json
Running java -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler -jar benchmarks/target/benchmarks.jar .*LocksBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_graal_jit/LocksBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.locks.LocksBenchmark.fair_reentrant_lock

# Run progress: 0.00% complete, ETA 00:35:00
# Fork: 1 of 3
# Warmup Iteration   1: 34507.987 ±(99.9%) 12796.950 ns/op
# Warmup Iteration   2: 35320.407 ±(99.9%) 51838.002 ns/op
# Warmup Iteration   3: 42540.412 ±(99.9%) 3.047 ns/op
# Warmup Iteration   4: 45941.973 ±(99.9%) 3.532 ns/op
# Warmup Iteration   5: 43696.612 ±(99.9%) 2.944 ns/op
Iteration   1: 44202.873 ±(99.9%) 1.650 ns/op
Iteration   2: 45342.321 ±(99.9%) 3.285 ns/op
Iteration   3: 45318.072 ±(99.9%) 1.927 ns/op
Iteration   4: 45557.712 ±(99.9%) 2.018 ns/op
Iteration   5: 46525.312 ±(99.9%) 1.162 ns/op

# Run progress: 4.76% complete, ETA 00:33:28
# Fork: 2 of 3
# Warmup Iteration   1: 37421.856 ±(99.9%) 17.677 ns/op
# Warmup Iteration   2: 44837.439 ±(99.9%) 2.837 ns/op
# Warmup Iteration   3: 45532.164 ±(99.9%) 1.766 ns/op
# Warmup Iteration   4: 45569.343 ±(99.9%) 0.722 ns/op
# Warmup Iteration   5: 43723.242 ±(99.9%) 25.730 ns/op
Iteration   1: 46176.288 ±(99.9%) 2.075 ns/op
Iteration   2: 45543.274 ±(99.9%) 2.066 ns/op
Iteration   3: 45252.940 ±(99.9%) 2.542 ns/op
Iteration   4: 44862.681 ±(99.9%) 1.161 ns/op
Iteration   5: 46116.499 ±(99.9%) 1.269 ns/op

# Run progress: 9.52% complete, ETA 00:31:46
# Fork: 3 of 3
# Warmup Iteration   1: 37742.636 ±(99.9%) 4.970 ns/op
# Warmup Iteration   2: 45613.248 ±(99.9%) 142.496 ns/op
# Warmup Iteration   3: 46473.714 ±(99.9%) 2.060 ns/op
# Warmup Iteration   4: 44527.841 ±(99.9%) 2.495 ns/op
# Warmup Iteration   5: 46223.943 ±(99.9%) 3.435 ns/op
Iteration   1: 45468.761 ±(99.9%) 1.479 ns/op
Iteration   2: 45249.988 ±(99.9%) 3.264 ns/op
Iteration   3: 45567.068 ±(99.9%) 2.604 ns/op
Iteration   4: 44825.873 ±(99.9%) 6.010 ns/op
Iteration   5: 44952.245 ±(99.9%) 7.365 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.locks.LocksBenchmark.fair_reentrant_lock":
  45397.460 ±(99.9%) 623.781 ns/op [Average]
  (min, avg, max) = (44202.873, 45397.460, 46525.312), stdev = 583.485
  CI (99.9%): [44773.680, 46021.241] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.locks.LocksBenchmark.fair_reentrant_read_write_lock

# Run progress: 14.29% complete, ETA 00:30:05
# Fork: 1 of 3
# Warmup Iteration   1: 71142.383 ±(99.9%) 40.871 ns/op
# Warmup Iteration   2: 83231.473 ±(99.9%) 15.864 ns/op
# Warmup Iteration   3: 91091.257 ±(99.9%) 5.075 ns/op
# Warmup Iteration   4: 90552.891 ±(99.9%) 8.811 ns/op
# Warmup Iteration   5: 90753.170 ±(99.9%) 6.830 ns/op
Iteration   1: 88460.902 ±(99.9%) 4.315 ns/op
Iteration   2: 90858.570 ±(99.9%) 1.265 ns/op
Iteration   3: 89553.422 ±(99.9%) 6.383 ns/op
Iteration   4: 92380.728 ±(99.9%) 2.160 ns/op
Iteration   5: 90948.147 ±(99.9%) 5.722 ns/op

# Run progress: 19.05% complete, ETA 00:28:25
# Fork: 2 of 3
# Warmup Iteration   1: 72499.028 ±(99.9%) 52.804 ns/op
# Warmup Iteration   2: 85444.114 ±(99.9%) 7.171 ns/op
# Warmup Iteration   3: 92244.312 ±(99.9%) 11.407 ns/op
# Warmup Iteration   4: 89064.777 ±(99.9%) 8.119 ns/op
# Warmup Iteration   5: 91363.773 ±(99.9%) 2.409 ns/op
Iteration   1: 89067.230 ±(99.9%) 8.217 ns/op
Iteration   2: 91535.873 ±(99.9%) 4.971 ns/op
Iteration   3: 91048.174 ±(99.9%) 6.143 ns/op
Iteration   4: 91715.129 ±(99.9%) 6.018 ns/op
Iteration   5: 91493.853 ±(99.9%) 1.826 ns/op

# Run progress: 23.81% complete, ETA 00:26:44
# Fork: 3 of 3
# Warmup Iteration   1: 69232.940 ±(99.9%) 17.698 ns/op
# Warmup Iteration   2: 80691.825 ±(99.9%) 27.451 ns/op
# Warmup Iteration   3: 92373.415 ±(99.9%) 2.797 ns/op
# Warmup Iteration   4: 88963.848 ±(99.9%) 672.336 ns/op
# Warmup Iteration   5: 91969.704 ±(99.9%) 10.106 ns/op
Iteration   1: 91111.604 ±(99.9%) 7.983 ns/op
Iteration   2: 90508.185 ±(99.9%) 3.607 ns/op
Iteration   3: 92285.702 ±(99.9%) 4.183 ns/op
Iteration   4: 87137.179 ±(99.9%) 7.528 ns/op
Iteration   5: 91046.094 ±(99.9%) 3.261 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.locks.LocksBenchmark.fair_reentrant_read_write_lock":
  90610.053 ±(99.9%) 1559.695 ns/op [Average]
  (min, avg, max) = (87137.179, 90610.053, 92380.728), stdev = 1458.940
  CI (99.9%): [89050.358, 92169.748] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.locks.LocksBenchmark.fair_semaphore

# Run progress: 28.57% complete, ETA 00:25:04
# Fork: 1 of 3
# Warmup Iteration   1: 657.536 ±(99.9%) 241.095 ns/op
# Warmup Iteration   2: 616.040 ±(99.9%) 844.909 ns/op
# Warmup Iteration   3: 630.549 ±(99.9%) 870.691 ns/op
# Warmup Iteration   4: 636.774 ±(99.9%) 806.506 ns/op
# Warmup Iteration   5: 643.295 ±(99.9%) 829.635 ns/op
Iteration   1: 642.340 ±(99.9%) 747.624 ns/op
Iteration   2: 637.412 ±(99.9%) 796.054 ns/op
Iteration   3: 638.657 ±(99.9%) 878.282 ns/op
Iteration   4: 637.798 ±(99.9%) 824.970 ns/op
Iteration   5: 634.669 ±(99.9%) 796.969 ns/op

# Run progress: 33.33% complete, ETA 00:23:24
# Fork: 2 of 3
# Warmup Iteration   1: 710.277 ±(99.9%) 315.135 ns/op
# Warmup Iteration   2: 671.956 ±(99.9%) 328.973 ns/op
# Warmup Iteration   3: 673.270 ±(99.9%) 346.955 ns/op
# Warmup Iteration   4: 673.354 ±(99.9%) 344.587 ns/op
# Warmup Iteration   5: 666.902 ±(99.9%) 329.966 ns/op
Iteration   1: 674.074 ±(99.9%) 354.326 ns/op
Iteration   2: 676.386 ±(99.9%) 348.166 ns/op
Iteration   3: 673.312 ±(99.9%) 328.674 ns/op
Iteration   4: 675.016 ±(99.9%) 213.377 ns/op
Iteration   5: 676.875 ±(99.9%) 347.030 ns/op

# Run progress: 38.10% complete, ETA 00:21:43
# Fork: 3 of 3
# Warmup Iteration   1: 758.462 ±(99.9%) 372.608 ns/op
# Warmup Iteration   2: 728.876 ±(99.9%) 424.717 ns/op
# Warmup Iteration   3: 723.768 ±(99.9%) 440.828 ns/op
# Warmup Iteration   4: 720.023 ±(99.9%) 303.124 ns/op
# Warmup Iteration   5: 724.134 ±(99.9%) 452.662 ns/op
Iteration   1: 722.740 ±(99.9%) 438.837 ns/op
Iteration   2: 722.833 ±(99.9%) 447.626 ns/op
Iteration   3: 728.576 ±(99.9%) 479.087 ns/op
Iteration   4: 725.753 ±(99.9%) 444.895 ns/op
Iteration   5: 725.714 ±(99.9%) 479.103 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.locks.LocksBenchmark.fair_semaphore":
  679.477 ±(99.9%) 39.492 ns/op [Average]
  (min, avg, max) = (634.669, 679.477, 728.576), stdev = 36.941
  CI (99.9%): [639.985, 718.969] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.locks.LocksBenchmark.reentrant_lock

# Run progress: 42.86% complete, ETA 00:20:03
# Fork: 1 of 3
# Warmup Iteration   1: 596.027 ±(99.9%) 504.450 ns/op
# Warmup Iteration   2: 632.766 ±(99.9%) 640.194 ns/op
# Warmup Iteration   3: 642.006 ±(99.9%) 828.595 ns/op
# Warmup Iteration   4: 643.915 ±(99.9%) 774.762 ns/op
# Warmup Iteration   5: 649.466 ±(99.9%) 717.676 ns/op
Iteration   1: 623.480 ±(99.9%) 652.846 ns/op
Iteration   2: 647.290 ±(99.9%) 651.697 ns/op
Iteration   3: 624.331 ±(99.9%) 656.879 ns/op
Iteration   4: 647.407 ±(99.9%) 758.793 ns/op
Iteration   5: 623.123 ±(99.9%) 679.176 ns/op

# Run progress: 47.62% complete, ETA 00:18:23
# Fork: 2 of 3
# Warmup Iteration   1: 579.253 ±(99.9%) 142.200 ns/op
# Warmup Iteration   2: 594.918 ±(99.9%) 101.057 ns/op
# Warmup Iteration   3: 576.506 ±(99.9%) 79.060 ns/op
# Warmup Iteration   4: 616.889 ±(99.9%) 47.766 ns/op
# Warmup Iteration   5: 596.575 ±(99.9%) 57.599 ns/op
Iteration   1: 587.361 ±(99.9%) 181.599 ns/op
Iteration   2: 593.952 ±(99.9%) 141.302 ns/op
Iteration   3: 604.078 ±(99.9%) 163.934 ns/op
Iteration   4: 599.091 ±(99.9%) 212.684 ns/op
Iteration   5: 598.194 ±(99.9%) 186.230 ns/op

# Run progress: 52.38% complete, ETA 00:16:42
# Fork: 3 of 3
# Warmup Iteration   1: 568.034 ±(99.9%) 312.917 ns/op
# Warmup Iteration   2: 604.867 ±(99.9%) 348.318 ns/op
# Warmup Iteration   3: 598.950 ±(99.9%) 417.929 ns/op
# Warmup Iteration   4: 611.253 ±(99.9%) 439.413 ns/op
# Warmup Iteration   5: 587.880 ±(99.9%) 394.184 ns/op
Iteration   1: 589.596 ±(99.9%) 169.651 ns/op
Iteration   2: 595.955 ±(99.9%) 186.215 ns/op
Iteration   3: 590.449 ±(99.9%) 128.992 ns/op
Iteration   4: 598.197 ±(99.9%) 242.182 ns/op
Iteration   5: 594.684 ±(99.9%) 150.545 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.locks.LocksBenchmark.reentrant_lock":
  607.812 ±(99.9%) 21.591 ns/op [Average]
  (min, avg, max) = (587.361, 607.812, 647.407), stdev = 20.196
  CI (99.9%): [586.221, 629.404] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.locks.LocksBenchmark.reentrant_read_write_lock

# Run progress: 57.14% complete, ETA 00:15:02
# Fork: 1 of 3
# Warmup Iteration   1: 5652.215 ±(99.9%) 2647.779 ns/op
# Warmup Iteration   2: 6086.392 ±(99.9%) 475.215 ns/op
# Warmup Iteration   3: 6446.391 ±(99.9%) 413.678 ns/op
# Warmup Iteration   4: 6556.739 ±(99.9%) 442.821 ns/op
# Warmup Iteration   5: 6620.781 ±(99.9%) 661.968 ns/op
Iteration   1: 6759.768 ±(99.9%) 428.656 ns/op
Iteration   2: 6736.449 ±(99.9%) 364.272 ns/op
Iteration   3: 6804.734 ±(99.9%) 287.352 ns/op
Iteration   4: 6822.192 ±(99.9%) 185.822 ns/op
Iteration   5: 6775.497 ±(99.9%) 442.101 ns/op

# Run progress: 61.90% complete, ETA 00:13:22
# Fork: 2 of 3
# Warmup Iteration   1: 5308.568 ±(99.9%) 1825.506 ns/op
# Warmup Iteration   2: 6399.358 ±(99.9%) 625.005 ns/op
# Warmup Iteration   3: 6710.537 ±(99.9%) 705.882 ns/op
# Warmup Iteration   4: 6580.990 ±(99.9%) 271.665 ns/op
# Warmup Iteration   5: 6730.502 ±(99.9%) 396.000 ns/op
Iteration   1: 6665.057 ±(99.9%) 361.892 ns/op
Iteration   2: 6704.542 ±(99.9%) 494.290 ns/op
Iteration   3: 6601.612 ±(99.9%) 597.069 ns/op
Iteration   4: 6799.959 ±(99.9%) 782.072 ns/op
Iteration   5: 6682.323 ±(99.9%) 541.081 ns/op

# Run progress: 66.67% complete, ETA 00:11:42
# Fork: 3 of 3
# Warmup Iteration   1: 5466.904 ±(99.9%) 749.577 ns/op
# Warmup Iteration   2: 6373.828 ±(99.9%) 1131.478 ns/op
# Warmup Iteration   3: 6774.837 ±(99.9%) 582.365 ns/op
# Warmup Iteration   4: 6889.025 ±(99.9%) 1088.321 ns/op
# Warmup Iteration   5: 6866.832 ±(99.9%) 338.921 ns/op
Iteration   1: 6939.954 ±(99.9%) 67.964 ns/op
Iteration   2: 6707.760 ±(99.9%) 963.412 ns/op
Iteration   3: 6748.047 ±(99.9%) 897.417 ns/op
Iteration   4: 6714.456 ±(99.9%) 371.537 ns/op
Iteration   5: 6636.567 ±(99.9%) 233.136 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.locks.LocksBenchmark.reentrant_read_write_lock":
  6739.928 ±(99.9%) 89.441 ns/op [Average]
  (min, avg, max) = (6601.612, 6739.928, 6939.954), stdev = 83.663
  CI (99.9%): [6650.487, 6829.369] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.locks.LocksBenchmark.semaphore

# Run progress: 71.43% complete, ETA 00:10:01
# Fork: 1 of 3
# Warmup Iteration   1: 640.504 ±(99.9%) 385.461 ns/op
# Warmup Iteration   2: 611.118 ±(99.9%) 420.375 ns/op
# Warmup Iteration   3: 620.753 ±(99.9%) 427.233 ns/op
# Warmup Iteration   4: 631.036 ±(99.9%) 436.765 ns/op
# Warmup Iteration   5: 624.158 ±(99.9%) 414.774 ns/op
Iteration   1: 620.893 ±(99.9%) 415.463 ns/op
Iteration   2: 626.231 ±(99.9%) 428.646 ns/op
Iteration   3: 627.879 ±(99.9%) 432.309 ns/op
Iteration   4: 632.829 ±(99.9%) 416.410 ns/op
Iteration   5: 633.810 ±(99.9%) 416.140 ns/op

# Run progress: 76.19% complete, ETA 00:08:21
# Fork: 2 of 3
# Warmup Iteration   1: 651.055 ±(99.9%) 791.735 ns/op
# Warmup Iteration   2: 630.922 ±(99.9%) 412.808 ns/op
# Warmup Iteration   3: 628.650 ±(99.9%) 389.535 ns/op
# Warmup Iteration   4: 625.666 ±(99.9%) 203.327 ns/op
# Warmup Iteration   5: 627.925 ±(99.9%) 330.401 ns/op
Iteration   1: 630.093 ±(99.9%) 407.860 ns/op
Iteration   2: 627.141 ±(99.9%) 246.774 ns/op
Iteration   3: 631.958 ±(99.9%) 401.776 ns/op
Iteration   4: 631.592 ±(99.9%) 409.422 ns/op
Iteration   5: 630.495 ±(99.9%) 328.050 ns/op

# Run progress: 80.95% complete, ETA 00:06:41
# Fork: 3 of 3
# Warmup Iteration   1: 664.237 ±(99.9%) 800.762 ns/op
# Warmup Iteration   2: 616.699 ±(99.9%) 966.184 ns/op
# Warmup Iteration   3: 619.644 ±(99.9%) 1025.472 ns/op
# Warmup Iteration   4: 623.285 ±(99.9%) 1046.063 ns/op
# Warmup Iteration   5: 614.807 ±(99.9%) 966.053 ns/op
Iteration   1: 618.974 ±(99.9%) 1022.252 ns/op
Iteration   2: 621.142 ±(99.9%) 1012.493 ns/op
Iteration   3: 619.076 ±(99.9%) 1002.073 ns/op
Iteration   4: 620.099 ±(99.9%) 1012.324 ns/op
Iteration   5: 619.800 ±(99.9%) 1008.360 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.locks.LocksBenchmark.semaphore":
  626.134 ±(99.9%) 5.967 ns/op [Average]
  (min, avg, max) = (618.974, 626.134, 633.810), stdev = 5.582
  CI (99.9%): [620.167, 632.101] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.locks.LocksBenchmark.synchronized

# Run progress: 85.71% complete, ETA 00:05:00
# Fork: 1 of 3
# Warmup Iteration   1: 957.173 ±(99.9%) 140.338 ns/op
# Warmup Iteration   2: 911.845 ±(99.9%) 149.434 ns/op
# Warmup Iteration   3: 904.100 ±(99.9%) 59.927 ns/op
# Warmup Iteration   4: 907.716 ±(99.9%) 139.575 ns/op
# Warmup Iteration   5: 902.818 ±(99.9%) 163.377 ns/op
Iteration   1: 908.408 ±(99.9%) 110.755 ns/op
Iteration   2: 908.867 ±(99.9%) 155.390 ns/op
Iteration   3: 908.229 ±(99.9%) 32.418 ns/op
Iteration   4: 910.351 ±(99.9%) 205.456 ns/op
Iteration   5: 908.754 ±(99.9%) 101.271 ns/op

# Run progress: 90.48% complete, ETA 00:03:20
# Fork: 2 of 3
# Warmup Iteration   1: 937.430 ±(99.9%) 148.629 ns/op
# Warmup Iteration   2: 902.343 ±(99.9%) 85.430 ns/op
# Warmup Iteration   3: 899.285 ±(99.9%) 93.861 ns/op
# Warmup Iteration   4: 896.661 ±(99.9%) 120.785 ns/op
# Warmup Iteration   5: 891.370 ±(99.9%) 80.523 ns/op
Iteration   1: 901.909 ±(99.9%) 135.247 ns/op
Iteration   2: 901.334 ±(99.9%) 52.128 ns/op
Iteration   3: 905.699 ±(99.9%) 157.262 ns/op
Iteration   4: 905.012 ±(99.9%) 132.665 ns/op
Iteration   5: 903.866 ±(99.9%) 130.737 ns/op

# Run progress: 95.24% complete, ETA 00:01:40
# Fork: 3 of 3
# Warmup Iteration   1: 971.989 ±(99.9%) 75.084 ns/op
# Warmup Iteration   2: 916.531 ±(99.9%) 295.973 ns/op
# Warmup Iteration   3: 911.398 ±(99.9%) 93.989 ns/op
# Warmup Iteration   4: 908.796 ±(99.9%) 142.885 ns/op
# Warmup Iteration   5: 913.965 ±(99.9%) 121.824 ns/op
Iteration   1: 930.106 ±(99.9%) 114.982 ns/op
Iteration   2: 933.232 ±(99.9%) 179.857 ns/op
Iteration   3: 933.446 ±(99.9%) 250.716 ns/op
Iteration   4: 931.921 ±(99.9%) 207.208 ns/op
Iteration   5: 931.271 ±(99.9%) 196.745 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.locks.LocksBenchmark.synchronized":
  914.827 ±(99.9%) 13.725 ns/op [Average]
  (min, avg, max) = (901.334, 914.827, 933.446), stdev = 12.838
  CI (99.9%): [901.102, 928.551] (assumes normal distribution)


# Run complete. Total time: 00:35:05

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
LocksBenchmark.fair_reentrant_lock             avgt   15  45397.460 ±  623.781  ns/op
LocksBenchmark.fair_reentrant_read_write_lock  avgt   15  90610.053 ± 1559.695  ns/op
LocksBenchmark.fair_semaphore                  avgt   15    679.477 ±   39.492  ns/op
LocksBenchmark.reentrant_lock                  avgt   15    607.812 ±   21.591  ns/op
LocksBenchmark.reentrant_read_write_lock       avgt   15   6739.928 ±   89.441  ns/op
LocksBenchmark.semaphore                       avgt   15    626.134 ±    5.967  ns/op
LocksBenchmark.synchronized                    avgt   15    914.827 ±   13.725  ns/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_graal_jit/LocksBenchmark.json
Running java -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler -jar benchmarks/target/benchmarks.jar .*CounterBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_graal_jit/CounterBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 8 threads (1 group; 4x "get", 4x "increment" in each group), will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.CounterBenchmark.read_write_counter
# Parameters: (counterType = LAC)

# Run progress: 0.00% complete, ETA 00:35:00
# Fork: 1 of 3
# Warmup Iteration   1: 0.078 ops/ns
# Warmup Iteration   2: 0.093 ops/ns
# Warmup Iteration   3: 0.100 ops/ns
# Warmup Iteration   4: 0.095 ops/ns
# Warmup Iteration   5: 0.096 ops/ns
Iteration   1: 0.095 ops/ns
                 get:       0.030 ops/ns
                 increment: 0.066 ops/ns

Iteration   2: 0.099 ops/ns
                 get:       0.029 ops/ns
                 increment: 0.070 ops/ns

Iteration   3: 0.095 ops/ns
                 get:       0.029 ops/ns
                 increment: 0.066 ops/ns

Iteration   4: 0.104 ops/ns
                 get:       0.030 ops/ns
                 increment: 0.074 ops/ns

Iteration   5: 0.103 ops/ns
                 get:       0.031 ops/ns
                 increment: 0.072 ops/ns


# Run progress: 4.76% complete, ETA 00:33:31
# Fork: 2 of 3
# Warmup Iteration   1: 0.090 ops/ns
# Warmup Iteration   2: 0.092 ops/ns
# Warmup Iteration   3: 0.095 ops/ns
# Warmup Iteration   4: 0.093 ops/ns
# Warmup Iteration   5: 0.089 ops/ns
Iteration   1: 0.100 ops/ns
                 get:       0.029 ops/ns
                 increment: 0.071 ops/ns

Iteration   2: 0.099 ops/ns
                 get:       0.029 ops/ns
                 increment: 0.070 ops/ns

Iteration   3: 0.095 ops/ns
                 get:       0.028 ops/ns
                 increment: 0.067 ops/ns

Iteration   4: 0.089 ops/ns
                 get:       0.027 ops/ns
                 increment: 0.063 ops/ns

Iteration   5: 0.098 ops/ns
                 get:       0.029 ops/ns
                 increment: 0.069 ops/ns


# Run progress: 9.52% complete, ETA 00:31:49
# Fork: 3 of 3
# Warmup Iteration   1: 0.085 ops/ns
# Warmup Iteration   2: 0.099 ops/ns
# Warmup Iteration   3: 0.098 ops/ns
# Warmup Iteration   4: 0.103 ops/ns
# Warmup Iteration   5: 0.103 ops/ns
Iteration   1: 0.106 ops/ns
                 get:       0.031 ops/ns
                 increment: 0.075 ops/ns

Iteration   2: 0.103 ops/ns
                 get:       0.031 ops/ns
                 increment: 0.072 ops/ns

Iteration   3: 0.100 ops/ns
                 get:       0.027 ops/ns
                 increment: 0.073 ops/ns

Iteration   4: 0.103 ops/ns
                 get:       0.030 ops/ns
                 increment: 0.073 ops/ns

Iteration   5: 0.107 ops/ns
                 get:       0.030 ops/ns
                 increment: 0.077 ops/ns



Result "com.ionutbalosin.jvm.jit.benchmark.CounterBenchmark.read_write_counter":
  0.100 ±(99.9%) 0.005 ops/ns [Average]
  (min, avg, max) = (0.089, 0.100, 0.107), stdev = 0.005
  CI (99.9%): [0.095, 0.105] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.CounterBenchmark.read_write_counter:get":
  0.029 ±(99.9%) 0.001 ops/ns [Average]
  (min, avg, max) = (0.027, 0.029, 0.031), stdev = 0.001
  CI (99.9%): [0.028, 0.031] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.CounterBenchmark.read_write_counter:increment":
  0.070 ±(99.9%) 0.004 ops/ns [Average]
  (min, avg, max) = (0.063, 0.070, 0.077), stdev = 0.004
  CI (99.9%): [0.066, 0.074] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 8 threads (1 group; 4x "get", 4x "increment" in each group), will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.CounterBenchmark.read_write_counter
# Parameters: (counterType = ALC)

# Run progress: 14.29% complete, ETA 00:30:08
# Fork: 1 of 3
# Warmup Iteration   1: 0.072 ops/ns
# Warmup Iteration   2: 0.069 ops/ns
# Warmup Iteration   3: 0.079 ops/ns
# Warmup Iteration   4: 0.080 ops/ns
# Warmup Iteration   5: 0.078 ops/ns
Iteration   1: 0.079 ops/ns
                 get:       0.052 ops/ns
                 increment: 0.027 ops/ns

Iteration   2: 0.075 ops/ns
                 get:       0.050 ops/ns
                 increment: 0.026 ops/ns

Iteration   3: 0.078 ops/ns
                 get:       0.051 ops/ns
                 increment: 0.027 ops/ns

Iteration   4: 0.076 ops/ns
                 get:       0.049 ops/ns
                 increment: 0.028 ops/ns

Iteration   5: 0.069 ops/ns
                 get:       0.041 ops/ns
                 increment: 0.028 ops/ns


# Run progress: 19.05% complete, ETA 00:28:27
# Fork: 2 of 3
# Warmup Iteration   1: 0.080 ops/ns
# Warmup Iteration   2: 0.103 ops/ns
# Warmup Iteration   3: 0.107 ops/ns
# Warmup Iteration   4: 0.070 ops/ns
# Warmup Iteration   5: 0.092 ops/ns
Iteration   1: 0.112 ops/ns
                 get:       0.072 ops/ns
                 increment: 0.040 ops/ns

Iteration   2: 0.103 ops/ns
                 get:       0.064 ops/ns
                 increment: 0.039 ops/ns

Iteration   3: 0.112 ops/ns
                 get:       0.070 ops/ns
                 increment: 0.042 ops/ns

Iteration   4: 0.071 ops/ns
                 get:       0.023 ops/ns
                 increment: 0.048 ops/ns

Iteration   5: 0.069 ops/ns
                 get:       0.021 ops/ns
                 increment: 0.048 ops/ns


# Run progress: 23.81% complete, ETA 00:26:46
# Fork: 3 of 3
# Warmup Iteration   1: 0.087 ops/ns
# Warmup Iteration   2: 0.086 ops/ns
# Warmup Iteration   3: 0.084 ops/ns
# Warmup Iteration   4: 0.111 ops/ns
# Warmup Iteration   5: 0.082 ops/ns
Iteration   1: 0.084 ops/ns
                 get:       0.060 ops/ns
                 increment: 0.024 ops/ns

Iteration   2: 0.068 ops/ns
                 get:       0.042 ops/ns
                 increment: 0.026 ops/ns

Iteration   3: 0.068 ops/ns
                 get:       0.042 ops/ns
                 increment: 0.026 ops/ns

Iteration   4: 0.086 ops/ns
                 get:       0.061 ops/ns
                 increment: 0.026 ops/ns

Iteration   5: 0.084 ops/ns
                 get:       0.061 ops/ns
                 increment: 0.024 ops/ns



Result "com.ionutbalosin.jvm.jit.benchmark.CounterBenchmark.read_write_counter":
  0.082 ±(99.9%) 0.016 ops/ns [Average]
  (min, avg, max) = (0.068, 0.082, 0.112), stdev = 0.015
  CI (99.9%): [0.066, 0.099] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.CounterBenchmark.read_write_counter:get":
  0.051 ±(99.9%) 0.016 ops/ns [Average]
  (min, avg, max) = (0.021, 0.051, 0.072), stdev = 0.015
  CI (99.9%): [0.035, 0.067] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.CounterBenchmark.read_write_counter:increment":
  0.032 ±(99.9%) 0.009 ops/ns [Average]
  (min, avg, max) = (0.024, 0.032, 0.048), stdev = 0.009
  CI (99.9%): [0.023, 0.041] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 8 threads (1 group; 4x "get", 4x "increment" in each group), will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.CounterBenchmark.read_write_counter
# Parameters: (counterType = SC)

# Run progress: 28.57% complete, ETA 00:25:06
# Fork: 1 of 3
# Warmup Iteration   1: 0.318 ops/ns
# Warmup Iteration   2: 0.390 ops/ns
# Warmup Iteration   3: 0.381 ops/ns
# Warmup Iteration   4: 0.419 ops/ns
# Warmup Iteration   5: 0.366 ops/ns
Iteration   1: 0.313 ops/ns
                 get:       0.309 ops/ns
                 increment: 0.004 ops/ns

Iteration   2: 0.360 ops/ns
                 get:       0.357 ops/ns
                 increment: 0.003 ops/ns

Iteration   3: 0.352 ops/ns
                 get:       0.349 ops/ns
                 increment: 0.003 ops/ns

Iteration   4: 0.361 ops/ns
                 get:       0.358 ops/ns
                 increment: 0.003 ops/ns

Iteration   5: 0.310 ops/ns
                 get:       0.307 ops/ns
                 increment: 0.003 ops/ns


# Run progress: 33.33% complete, ETA 00:23:25
# Fork: 2 of 3
# Warmup Iteration   1: 0.334 ops/ns
# Warmup Iteration   2: 0.347 ops/ns
# Warmup Iteration   3: 0.380 ops/ns
# Warmup Iteration   4: 0.426 ops/ns
# Warmup Iteration   5: 0.337 ops/ns
Iteration   1: 0.407 ops/ns
                 get:       0.405 ops/ns
                 increment: 0.003 ops/ns

Iteration   2: 0.330 ops/ns
                 get:       0.327 ops/ns
                 increment: 0.003 ops/ns

Iteration   3: 0.311 ops/ns
                 get:       0.307 ops/ns
                 increment: 0.004 ops/ns

Iteration   4: 0.410 ops/ns
                 get:       0.407 ops/ns
                 increment: 0.003 ops/ns

Iteration   5: 0.412 ops/ns
                 get:       0.409 ops/ns
                 increment: 0.003 ops/ns


# Run progress: 38.10% complete, ETA 00:21:45
# Fork: 3 of 3
# Warmup Iteration   1: 0.321 ops/ns
# Warmup Iteration   2: 0.355 ops/ns
# Warmup Iteration   3: 0.403 ops/ns
# Warmup Iteration   4: 0.472 ops/ns
# Warmup Iteration   5: 0.480 ops/ns
Iteration   1: 0.448 ops/ns
                 get:       0.443 ops/ns
                 increment: 0.004 ops/ns

Iteration   2: 0.496 ops/ns
                 get:       0.493 ops/ns
                 increment: 0.004 ops/ns

Iteration   3: 0.502 ops/ns
                 get:       0.499 ops/ns
                 increment: 0.004 ops/ns

Iteration   4: 0.480 ops/ns
                 get:       0.477 ops/ns
                 increment: 0.004 ops/ns

Iteration   5: 0.450 ops/ns
                 get:       0.446 ops/ns
                 increment: 0.004 ops/ns



Result "com.ionutbalosin.jvm.jit.benchmark.CounterBenchmark.read_write_counter":
  0.396 ±(99.9%) 0.073 ops/ns [Average]
  (min, avg, max) = (0.310, 0.396, 0.502), stdev = 0.068
  CI (99.9%): [0.323, 0.469] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.CounterBenchmark.read_write_counter:get":
  0.393 ±(99.9%) 0.073 ops/ns [Average]
  (min, avg, max) = (0.307, 0.393, 0.499), stdev = 0.068
  CI (99.9%): [0.320, 0.465] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.CounterBenchmark.read_write_counter:increment":
  0.003 ±(99.9%) 0.001 ops/ns [Average]
  (min, avg, max) = (0.003, 0.003, 0.004), stdev = 0.001
  CI (99.9%): [0.003, 0.004] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 8 threads (1 group; 4x "get", 4x "increment" in each group), will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.CounterBenchmark.read_write_counter
# Parameters: (counterType = VC)

# Run progress: 42.86% complete, ETA 00:20:04
# Fork: 1 of 3
# Warmup Iteration   1: 0.124 ops/ns
# Warmup Iteration   2: 0.141 ops/ns
# Warmup Iteration   3: 0.140 ops/ns
# Warmup Iteration   4: 0.157 ops/ns
# Warmup Iteration   5: 0.150 ops/ns
Iteration   1: 0.136 ops/ns
                 get:       0.100 ops/ns
                 increment: 0.036 ops/ns

Iteration   2: 0.138 ops/ns
                 get:       0.102 ops/ns
                 increment: 0.036 ops/ns

Iteration   3: 0.137 ops/ns
                 get:       0.099 ops/ns
                 increment: 0.038 ops/ns

Iteration   4: 0.140 ops/ns
                 get:       0.102 ops/ns
                 increment: 0.037 ops/ns

Iteration   5: 0.141 ops/ns
                 get:       0.104 ops/ns
                 increment: 0.037 ops/ns


# Run progress: 47.62% complete, ETA 00:18:24
# Fork: 2 of 3
# Warmup Iteration   1: 0.143 ops/ns
# Warmup Iteration   2: 0.156 ops/ns
# Warmup Iteration   3: 0.136 ops/ns
# Warmup Iteration   4: 0.138 ops/ns
# Warmup Iteration   5: 0.181 ops/ns
Iteration   1: 0.161 ops/ns
                 get:       0.128 ops/ns
                 increment: 0.033 ops/ns

Iteration   2: 0.137 ops/ns
                 get:       0.102 ops/ns
                 increment: 0.035 ops/ns

Iteration   3: 0.157 ops/ns
                 get:       0.123 ops/ns
                 increment: 0.034 ops/ns

Iteration   4: 0.133 ops/ns
                 get:       0.097 ops/ns
                 increment: 0.036 ops/ns

Iteration   5: 0.130 ops/ns
                 get:       0.094 ops/ns
                 increment: 0.036 ops/ns


# Run progress: 52.38% complete, ETA 00:16:43
# Fork: 3 of 3
# Warmup Iteration   1: 0.100 ops/ns
# Warmup Iteration   2: 0.153 ops/ns
# Warmup Iteration   3: 0.109 ops/ns
# Warmup Iteration   4: 0.157 ops/ns
# Warmup Iteration   5: 0.133 ops/ns
Iteration   1: 0.145 ops/ns
                 get:       0.103 ops/ns
                 increment: 0.041 ops/ns

Iteration   2: 0.128 ops/ns
                 get:       0.090 ops/ns
                 increment: 0.037 ops/ns

Iteration   3: 0.145 ops/ns
                 get:       0.110 ops/ns
                 increment: 0.035 ops/ns

Iteration   4: 0.144 ops/ns
                 get:       0.108 ops/ns
                 increment: 0.035 ops/ns

Iteration   5: 0.124 ops/ns
                 get:       0.089 ops/ns
                 increment: 0.035 ops/ns



Result "com.ionutbalosin.jvm.jit.benchmark.CounterBenchmark.read_write_counter":
  0.140 ±(99.9%) 0.011 ops/ns [Average]
  (min, avg, max) = (0.124, 0.140, 0.161), stdev = 0.010
  CI (99.9%): [0.129, 0.150] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.CounterBenchmark.read_write_counter:get":
  0.103 ±(99.9%) 0.012 ops/ns [Average]
  (min, avg, max) = (0.089, 0.103, 0.128), stdev = 0.011
  CI (99.9%): [0.092, 0.115] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.CounterBenchmark.read_write_counter:increment":
  0.036 ±(99.9%) 0.002 ops/ns [Average]
  (min, avg, max) = (0.033, 0.036, 0.041), stdev = 0.002
  CI (99.9%): [0.034, 0.038] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 8 threads (1 group; 4x "get", 4x "increment" in each group), will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.CounterBenchmark.read_write_counter
# Parameters: (counterType = OSLC)

# Run progress: 57.14% complete, ETA 00:15:03
# Fork: 1 of 3
# Warmup Iteration   1: 0.031 ops/ns
# Warmup Iteration   2: 0.030 ops/ns
# Warmup Iteration   3: 0.025 ops/ns
# Warmup Iteration   4: 0.027 ops/ns
# Warmup Iteration   5: 0.026 ops/ns
Iteration   1: 0.026 ops/ns
                 get:       0.016 ops/ns
                 increment: 0.010 ops/ns

Iteration   2: 0.026 ops/ns
                 get:       0.016 ops/ns
                 increment: 0.010 ops/ns

Iteration   3: 0.025 ops/ns
                 get:       0.015 ops/ns
                 increment: 0.009 ops/ns

Iteration   4: 0.025 ops/ns
                 get:       0.016 ops/ns
                 increment: 0.010 ops/ns

Iteration   5: 0.025 ops/ns
                 get:       0.016 ops/ns
                 increment: 0.009 ops/ns


# Run progress: 61.90% complete, ETA 00:13:23
# Fork: 2 of 3
# Warmup Iteration   1: 0.033 ops/ns
# Warmup Iteration   2: 0.029 ops/ns
# Warmup Iteration   3: 0.024 ops/ns
# Warmup Iteration   4: 0.025 ops/ns
# Warmup Iteration   5: 0.026 ops/ns
Iteration   1: 0.024 ops/ns
                 get:       0.015 ops/ns
                 increment: 0.009 ops/ns

Iteration   2: 0.025 ops/ns
                 get:       0.016 ops/ns
                 increment: 0.009 ops/ns

Iteration   3: 0.027 ops/ns
                 get:       0.018 ops/ns
                 increment: 0.010 ops/ns

Iteration   4: 0.031 ops/ns
                 get:       0.021 ops/ns
                 increment: 0.010 ops/ns

Iteration   5: 0.025 ops/ns
                 get:       0.016 ops/ns
                 increment: 0.009 ops/ns


# Run progress: 66.67% complete, ETA 00:11:42
# Fork: 3 of 3
# Warmup Iteration   1: 0.032 ops/ns
# Warmup Iteration   2: 0.028 ops/ns
# Warmup Iteration   3: 0.024 ops/ns
# Warmup Iteration   4: 0.024 ops/ns
# Warmup Iteration   5: 0.024 ops/ns
Iteration   1: 0.024 ops/ns
                 get:       0.015 ops/ns
                 increment: 0.009 ops/ns

Iteration   2: 0.024 ops/ns
                 get:       0.015 ops/ns
                 increment: 0.009 ops/ns

Iteration   3: 0.023 ops/ns
                 get:       0.014 ops/ns
                 increment: 0.009 ops/ns

Iteration   4: 0.023 ops/ns
                 get:       0.014 ops/ns
                 increment: 0.009 ops/ns

Iteration   5: 0.023 ops/ns
                 get:       0.014 ops/ns
                 increment: 0.009 ops/ns



Result "com.ionutbalosin.jvm.jit.benchmark.CounterBenchmark.read_write_counter":
  0.025 ±(99.9%) 0.002 ops/ns [Average]
  (min, avg, max) = (0.023, 0.025, 0.031), stdev = 0.002
  CI (99.9%): [0.023, 0.027] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.CounterBenchmark.read_write_counter:get":
  0.016 ±(99.9%) 0.002 ops/ns [Average]
  (min, avg, max) = (0.014, 0.016, 0.021), stdev = 0.002
  CI (99.9%): [0.014, 0.018] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.CounterBenchmark.read_write_counter:increment":
  0.009 ±(99.9%) 0.001 ops/ns [Average]
  (min, avg, max) = (0.009, 0.009, 0.010), stdev = 0.001
  CI (99.9%): [0.009, 0.010] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 8 threads (1 group; 4x "get", 4x "increment" in each group), will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.CounterBenchmark.read_write_counter
# Parameters: (counterType = RLC)

# Run progress: 71.43% complete, ETA 00:10:02
# Fork: 1 of 3
# Warmup Iteration   1: 0.012 ops/ns
# Warmup Iteration   2: 0.013 ops/ns
# Warmup Iteration   3: 0.011 ops/ns
# Warmup Iteration   4: 0.011 ops/ns
# Warmup Iteration   5: 0.011 ops/ns
Iteration   1: 0.011 ops/ns
                 get:       0.005 ops/ns
                 increment: 0.006 ops/ns

Iteration   2: 0.011 ops/ns
                 get:       0.005 ops/ns
                 increment: 0.006 ops/ns

Iteration   3: 0.011 ops/ns
                 get:       0.005 ops/ns
                 increment: 0.006 ops/ns

Iteration   4: 0.011 ops/ns
                 get:       0.005 ops/ns
                 increment: 0.006 ops/ns

Iteration   5: 0.011 ops/ns
                 get:       0.005 ops/ns
                 increment: 0.006 ops/ns


# Run progress: 76.19% complete, ETA 00:08:21
# Fork: 2 of 3
# Warmup Iteration   1: 0.013 ops/ns
# Warmup Iteration   2: 0.014 ops/ns
# Warmup Iteration   3: 0.013 ops/ns
# Warmup Iteration   4: 0.013 ops/ns
# Warmup Iteration   5: 0.013 ops/ns
Iteration   1: 0.013 ops/ns
                 get:       0.006 ops/ns
                 increment: 0.007 ops/ns

Iteration   2: 0.013 ops/ns
                 get:       0.006 ops/ns
                 increment: 0.007 ops/ns

Iteration   3: 0.014 ops/ns
                 get:       0.006 ops/ns
                 increment: 0.008 ops/ns

Iteration   4: 0.014 ops/ns
                 get:       0.006 ops/ns
                 increment: 0.008 ops/ns

Iteration   5: 0.013 ops/ns
                 get:       0.006 ops/ns
                 increment: 0.008 ops/ns


# Run progress: 80.95% complete, ETA 00:06:41
# Fork: 3 of 3
# Warmup Iteration   1: 0.013 ops/ns
# Warmup Iteration   2: 0.013 ops/ns
# Warmup Iteration   3: 0.012 ops/ns
# Warmup Iteration   4: 0.013 ops/ns
# Warmup Iteration   5: 0.012 ops/ns
Iteration   1: 0.013 ops/ns
                 get:       0.005 ops/ns
                 increment: 0.007 ops/ns

Iteration   2: 0.013 ops/ns
                 get:       0.006 ops/ns
                 increment: 0.007 ops/ns

Iteration   3: 0.013 ops/ns
                 get:       0.005 ops/ns
                 increment: 0.007 ops/ns

Iteration   4: 0.013 ops/ns
                 get:       0.005 ops/ns
                 increment: 0.007 ops/ns

Iteration   5: 0.013 ops/ns
                 get:       0.005 ops/ns
                 increment: 0.007 ops/ns



Result "com.ionutbalosin.jvm.jit.benchmark.CounterBenchmark.read_write_counter":
  0.012 ±(99.9%) 0.001 ops/ns [Average]
  (min, avg, max) = (0.011, 0.012, 0.014), stdev = 0.001
  CI (99.9%): [0.011, 0.013] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.CounterBenchmark.read_write_counter:get":
  0.005 ±(99.9%) 0.001 ops/ns [Average]
  (min, avg, max) = (0.005, 0.005, 0.006), stdev = 0.001
  CI (99.9%): [0.005, 0.006] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.CounterBenchmark.read_write_counter:increment":
  0.007 ±(99.9%) 0.001 ops/ns [Average]
  (min, avg, max) = (0.006, 0.007, 0.008), stdev = 0.001
  CI (99.9%): [0.006, 0.008] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 8 threads (1 group; 4x "get", 4x "increment" in each group), will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.CounterBenchmark.read_write_counter
# Parameters: (counterType = CASC)

# Run progress: 85.71% complete, ETA 00:05:01
# Fork: 1 of 3
# Warmup Iteration   1: 0.092 ops/ns
# Warmup Iteration   2: 0.098 ops/ns
# Warmup Iteration   3: 0.122 ops/ns
# Warmup Iteration   4: 0.101 ops/ns
# Warmup Iteration   5: 0.098 ops/ns
Iteration   1: 0.099 ops/ns
                 get:       0.090 ops/ns
                 increment: 0.009 ops/ns

Iteration   2: 0.101 ops/ns
                 get:       0.091 ops/ns
                 increment: 0.010 ops/ns

Iteration   3: 0.094 ops/ns
                 get:       0.085 ops/ns
                 increment: 0.009 ops/ns

Iteration   4: 0.101 ops/ns
                 get:       0.091 ops/ns
                 increment: 0.010 ops/ns

Iteration   5: 0.095 ops/ns
                 get:       0.087 ops/ns
                 increment: 0.009 ops/ns


# Run progress: 90.48% complete, ETA 00:03:20
# Fork: 2 of 3
# Warmup Iteration   1: 0.065 ops/ns
# Warmup Iteration   2: 0.080 ops/ns
# Warmup Iteration   3: 0.078 ops/ns
# Warmup Iteration   4: 0.068 ops/ns
# Warmup Iteration   5: 0.068 ops/ns
Iteration   1: 0.080 ops/ns
                 get:       0.071 ops/ns
                 increment: 0.009 ops/ns

Iteration   2: 0.084 ops/ns
                 get:       0.075 ops/ns
                 increment: 0.010 ops/ns

Iteration   3: 0.076 ops/ns
                 get:       0.066 ops/ns
                 increment: 0.009 ops/ns

Iteration   4: 0.097 ops/ns
                 get:       0.087 ops/ns
                 increment: 0.009 ops/ns

Iteration   5: 0.096 ops/ns
                 get:       0.087 ops/ns
                 increment: 0.009 ops/ns


# Run progress: 95.24% complete, ETA 00:01:40
# Fork: 3 of 3
# Warmup Iteration   1: 0.088 ops/ns
# Warmup Iteration   2: 0.097 ops/ns
# Warmup Iteration   3: 0.096 ops/ns
# Warmup Iteration   4: 0.096 ops/ns
# Warmup Iteration   5: 0.130 ops/ns
Iteration   1: 0.092 ops/ns
                 get:       0.082 ops/ns
                 increment: 0.010 ops/ns

Iteration   2: 0.078 ops/ns
                 get:       0.068 ops/ns
                 increment: 0.010 ops/ns

Iteration   3: 0.107 ops/ns
                 get:       0.099 ops/ns
                 increment: 0.009 ops/ns

Iteration   4: 0.087 ops/ns
                 get:       0.077 ops/ns
                 increment: 0.010 ops/ns

Iteration   5: 0.108 ops/ns
                 get:       0.099 ops/ns
                 increment: 0.009 ops/ns



Result "com.ionutbalosin.jvm.jit.benchmark.CounterBenchmark.read_write_counter":
  0.093 ±(99.9%) 0.011 ops/ns [Average]
  (min, avg, max) = (0.076, 0.093, 0.108), stdev = 0.010
  CI (99.9%): [0.082, 0.104] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.CounterBenchmark.read_write_counter:get":
  0.084 ±(99.9%) 0.011 ops/ns [Average]
  (min, avg, max) = (0.066, 0.084, 0.099), stdev = 0.010
  CI (99.9%): [0.073, 0.095] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.CounterBenchmark.read_write_counter:increment":
  0.009 ±(99.9%) 0.001 ops/ns [Average]
  (min, avg, max) = (0.009, 0.009, 0.010), stdev = 0.001
  CI (99.9%): [0.009, 0.010] (assumes normal distribution)


# Run complete. Total time: 00:35:07

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      (counterType)   Mode  Cnt  Score    Error   Units
CounterBenchmark.read_write_counter                      LAC  thrpt   15  0.100 ±  0.005  ops/ns
CounterBenchmark.read_write_counter:get                  LAC  thrpt   15  0.029 ±  0.001  ops/ns
CounterBenchmark.read_write_counter:increment            LAC  thrpt   15  0.070 ±  0.004  ops/ns
CounterBenchmark.read_write_counter                      ALC  thrpt   15  0.082 ±  0.016  ops/ns
CounterBenchmark.read_write_counter:get                  ALC  thrpt   15  0.051 ±  0.016  ops/ns
CounterBenchmark.read_write_counter:increment            ALC  thrpt   15  0.032 ±  0.009  ops/ns
CounterBenchmark.read_write_counter                       SC  thrpt   15  0.396 ±  0.073  ops/ns
CounterBenchmark.read_write_counter:get                   SC  thrpt   15  0.393 ±  0.073  ops/ns
CounterBenchmark.read_write_counter:increment             SC  thrpt   15  0.003 ±  0.001  ops/ns
CounterBenchmark.read_write_counter                       VC  thrpt   15  0.140 ±  0.011  ops/ns
CounterBenchmark.read_write_counter:get                   VC  thrpt   15  0.103 ±  0.012  ops/ns
CounterBenchmark.read_write_counter:increment             VC  thrpt   15  0.036 ±  0.002  ops/ns
CounterBenchmark.read_write_counter                     OSLC  thrpt   15  0.025 ±  0.002  ops/ns
CounterBenchmark.read_write_counter:get                 OSLC  thrpt   15  0.016 ±  0.002  ops/ns
CounterBenchmark.read_write_counter:increment           OSLC  thrpt   15  0.009 ±  0.001  ops/ns
CounterBenchmark.read_write_counter                      RLC  thrpt   15  0.012 ±  0.001  ops/ns
CounterBenchmark.read_write_counter:get                  RLC  thrpt   15  0.005 ±  0.001  ops/ns
CounterBenchmark.read_write_counter:increment            RLC  thrpt   15  0.007 ±  0.001  ops/ns
CounterBenchmark.read_write_counter                     CASC  thrpt   15  0.093 ±  0.011  ops/ns
CounterBenchmark.read_write_counter:get                 CASC  thrpt   15  0.084 ±  0.011  ops/ns
CounterBenchmark.read_write_counter:increment           CASC  thrpt   15  0.009 ±  0.001  ops/ns

Benchmark result is saved to results/report-openjdk-13/hotspotvm_graal_jit/CounterBenchmark.json
Running java -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler -jar benchmarks/target/benchmarks.jar .*RecursiveLockBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_graal_jit/RecursiveLockBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.locks.RecursiveLockBenchmark.lock_baseline
# Parameters: (value = 42)

# Run progress: 0.00% complete, ETA 00:10:00
# Fork: 1 of 3
# Warmup Iteration   1: 5.188 ns/op
# Warmup Iteration   2: 4.571 ns/op
# Warmup Iteration   3: 4.321 ns/op
# Warmup Iteration   4: 4.273 ns/op
# Warmup Iteration   5: 4.232 ns/op
Iteration   1: 4.010 ns/op
Iteration   2: 4.222 ns/op
Iteration   3: 4.196 ns/op
Iteration   4: 3.984 ns/op
Iteration   5: 3.991 ns/op

# Run progress: 16.67% complete, ETA 00:08:21
# Fork: 2 of 3
# Warmup Iteration   1: 4.421 ns/op
# Warmup Iteration   2: 4.143 ns/op
# Warmup Iteration   3: 4.001 ns/op
# Warmup Iteration   4: 3.984 ns/op
# Warmup Iteration   5: 3.996 ns/op
Iteration   1: 4.272 ns/op
Iteration   2: 4.238 ns/op
Iteration   3: 4.065 ns/op
Iteration   4: 4.162 ns/op
Iteration   5: 4.162 ns/op

# Run progress: 33.33% complete, ETA 00:06:41
# Fork: 3 of 3
# Warmup Iteration   1: 4.677 ns/op
# Warmup Iteration   2: 4.144 ns/op
# Warmup Iteration   3: 4.074 ns/op
# Warmup Iteration   4: 4.058 ns/op
# Warmup Iteration   5: 4.057 ns/op
Iteration   1: 4.053 ns/op
Iteration   2: 4.147 ns/op
Iteration   3: 4.146 ns/op
Iteration   4: 4.139 ns/op
Iteration   5: 4.137 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.locks.RecursiveLockBenchmark.lock_baseline":
  4.128 ±(99.9%) 0.096 ns/op [Average]
  (min, avg, max) = (3.984, 4.128, 4.272), stdev = 0.090
  CI (99.9%): [4.033, 4.224] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.locks.RecursiveLockBenchmark.lock_recursive_10x
# Parameters: (value = 42)

# Run progress: 50.00% complete, ETA 00:05:00
# Fork: 1 of 3
# Warmup Iteration   1: 12.743 ns/op
# Warmup Iteration   2: 10.891 ns/op
# Warmup Iteration   3: 11.390 ns/op
# Warmup Iteration   4: 11.375 ns/op
# Warmup Iteration   5: 11.298 ns/op
Iteration   1: 10.657 ns/op
Iteration   2: 10.693 ns/op
Iteration   3: 10.710 ns/op
Iteration   4: 10.961 ns/op
Iteration   5: 10.706 ns/op

# Run progress: 66.67% complete, ETA 00:03:20
# Fork: 2 of 3
# Warmup Iteration   1: 12.321 ns/op
# Warmup Iteration   2: 10.891 ns/op
# Warmup Iteration   3: 10.722 ns/op
# Warmup Iteration   4: 10.740 ns/op
# Warmup Iteration   5: 11.377 ns/op
Iteration   1: 11.328 ns/op
Iteration   2: 11.137 ns/op
Iteration   3: 11.139 ns/op
Iteration   4: 11.105 ns/op
Iteration   5: 11.049 ns/op

# Run progress: 83.33% complete, ETA 00:01:40
# Fork: 3 of 3
# Warmup Iteration   1: 12.277 ns/op
# Warmup Iteration   2: 11.161 ns/op
# Warmup Iteration   3: 10.964 ns/op
# Warmup Iteration   4: 10.968 ns/op
# Warmup Iteration   5: 10.933 ns/op
Iteration   1: 10.945 ns/op
Iteration   2: 10.932 ns/op
Iteration   3: 10.920 ns/op
Iteration   4: 10.906 ns/op
Iteration   5: 10.925 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.locks.RecursiveLockBenchmark.lock_recursive_10x":
  10.941 ±(99.9%) 0.206 ns/op [Average]
  (min, avg, max) = (10.657, 10.941, 11.328), stdev = 0.193
  CI (99.9%): [10.735, 11.147] (assumes normal distribution)


# Run complete. Total time: 00:10:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                  (value)  Mode  Cnt   Score   Error  Units
RecursiveLockBenchmark.lock_baseline            42  avgt   15   4.128 ± 0.096  ns/op
RecursiveLockBenchmark.lock_recursive_10x       42  avgt   15  10.941 ± 0.206  ns/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_graal_jit/RecursiveLockBenchmark.json
Running java -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler -jar benchmarks/target/benchmarks.jar .*ArrayCopyBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_graal_jit/ArrayCopyBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.array_clone
# Parameters: (size = 16384, stride = 256)

# Run progress: 0.00% complete, ETA 02:20:00
# Fork: 1 of 3
# Warmup Iteration   1: 1429.208 ns/op
# Warmup Iteration   2: 1242.344 ns/op
# Warmup Iteration   3: 1232.964 ns/op
# Warmup Iteration   4: 1232.891 ns/op
# Warmup Iteration   5: 1230.324 ns/op
Iteration   1: 1229.131 ns/op
Iteration   2: 1232.625 ns/op
Iteration   3: 1233.147 ns/op
Iteration   4: 1231.381 ns/op
Iteration   5: 1233.319 ns/op

# Run progress: 1.19% complete, ETA 02:18:50
# Fork: 2 of 3
# Warmup Iteration   1: 1369.020 ns/op
# Warmup Iteration   2: 1233.521 ns/op
# Warmup Iteration   3: 1231.212 ns/op
# Warmup Iteration   4: 1232.569 ns/op
# Warmup Iteration   5: 1229.990 ns/op
Iteration   1: 1234.527 ns/op
Iteration   2: 1230.486 ns/op
Iteration   3: 1230.743 ns/op
Iteration   4: 1232.974 ns/op
Iteration   5: 1237.653 ns/op

# Run progress: 2.38% complete, ETA 02:17:06
# Fork: 3 of 3
# Warmup Iteration   1: 1377.261 ns/op
# Warmup Iteration   2: 1242.311 ns/op
# Warmup Iteration   3: 1235.642 ns/op
# Warmup Iteration   4: 1234.766 ns/op
# Warmup Iteration   5: 1232.428 ns/op
Iteration   1: 1232.840 ns/op
Iteration   2: 1236.307 ns/op
Iteration   3: 1229.016 ns/op
Iteration   4: 1232.453 ns/op
Iteration   5: 1235.999 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.array_clone":
  1232.840 ±(99.9%) 2.695 ns/op [Average]
  (min, avg, max) = (1229.016, 1232.840, 1237.653), stdev = 2.521
  CI (99.9%): [1230.144, 1235.535] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.array_clone
# Parameters: (size = 16384, stride = 512)

# Run progress: 3.57% complete, ETA 02:15:24
# Fork: 1 of 3
# Warmup Iteration   1: 1396.645 ns/op
# Warmup Iteration   2: 1241.375 ns/op
# Warmup Iteration   3: 1236.500 ns/op
# Warmup Iteration   4: 1232.482 ns/op
# Warmup Iteration   5: 1227.572 ns/op
Iteration   1: 1234.211 ns/op
Iteration   2: 1233.617 ns/op
Iteration   3: 1231.759 ns/op
Iteration   4: 1233.737 ns/op
Iteration   5: 1236.059 ns/op

# Run progress: 4.76% complete, ETA 02:13:43
# Fork: 2 of 3
# Warmup Iteration   1: 1390.028 ns/op
# Warmup Iteration   2: 1245.000 ns/op
# Warmup Iteration   3: 1237.360 ns/op
# Warmup Iteration   4: 1234.641 ns/op
# Warmup Iteration   5: 1236.761 ns/op
Iteration   1: 1236.243 ns/op
Iteration   2: 1237.991 ns/op
Iteration   3: 1239.120 ns/op
Iteration   4: 1238.475 ns/op
Iteration   5: 1239.410 ns/op

# Run progress: 5.95% complete, ETA 02:12:02
# Fork: 3 of 3
# Warmup Iteration   1: 1382.093 ns/op
# Warmup Iteration   2: 1245.353 ns/op
# Warmup Iteration   3: 1230.072 ns/op
# Warmup Iteration   4: 1237.674 ns/op
# Warmup Iteration   5: 1229.501 ns/op
Iteration   1: 1230.332 ns/op
Iteration   2: 1233.846 ns/op
Iteration   3: 1235.915 ns/op
Iteration   4: 1233.525 ns/op
Iteration   5: 1235.240 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.array_clone":
  1235.299 ±(99.9%) 2.851 ns/op [Average]
  (min, avg, max) = (1230.332, 1235.299, 1239.410), stdev = 2.667
  CI (99.9%): [1232.447, 1238.150] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.array_clone
# Parameters: (size = 32768, stride = 256)

# Run progress: 7.14% complete, ETA 02:10:22
# Fork: 1 of 3
# Warmup Iteration   1: 2866.344 ns/op
# Warmup Iteration   2: 2531.598 ns/op
# Warmup Iteration   3: 2523.123 ns/op
# Warmup Iteration   4: 2519.776 ns/op
# Warmup Iteration   5: 2517.099 ns/op
Iteration   1: 2518.256 ns/op
Iteration   2: 2509.081 ns/op
Iteration   3: 2522.317 ns/op
Iteration   4: 2517.580 ns/op
Iteration   5: 2505.981 ns/op

# Run progress: 8.33% complete, ETA 02:08:41
# Fork: 2 of 3
# Warmup Iteration   1: 2793.522 ns/op
# Warmup Iteration   2: 2506.687 ns/op
# Warmup Iteration   3: 2491.891 ns/op
# Warmup Iteration   4: 2489.723 ns/op
# Warmup Iteration   5: 2473.990 ns/op
Iteration   1: 2464.335 ns/op
Iteration   2: 2472.430 ns/op
Iteration   3: 2472.244 ns/op
Iteration   4: 2488.398 ns/op
Iteration   5: 2479.149 ns/op

# Run progress: 9.52% complete, ETA 02:07:01
# Fork: 3 of 3
# Warmup Iteration   1: 2826.399 ns/op
# Warmup Iteration   2: 2499.637 ns/op
# Warmup Iteration   3: 2491.333 ns/op
# Warmup Iteration   4: 2480.263 ns/op
# Warmup Iteration   5: 2482.692 ns/op
Iteration   1: 2460.832 ns/op
Iteration   2: 2484.947 ns/op
Iteration   3: 2479.578 ns/op
Iteration   4: 2466.568 ns/op
Iteration   5: 2480.894 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.array_clone":
  2488.173 ±(99.9%) 22.484 ns/op [Average]
  (min, avg, max) = (2460.832, 2488.173, 2522.317), stdev = 21.032
  CI (99.9%): [2465.688, 2510.657] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.array_clone
# Parameters: (size = 32768, stride = 512)

# Run progress: 10.71% complete, ETA 02:05:21
# Fork: 1 of 3
# Warmup Iteration   1: 2796.386 ns/op
# Warmup Iteration   2: 2499.748 ns/op
# Warmup Iteration   3: 2479.775 ns/op
# Warmup Iteration   4: 2473.707 ns/op
# Warmup Iteration   5: 2472.996 ns/op
Iteration   1: 2474.038 ns/op
Iteration   2: 2480.997 ns/op
Iteration   3: 2485.374 ns/op
Iteration   4: 2470.357 ns/op
Iteration   5: 2487.760 ns/op

# Run progress: 11.90% complete, ETA 02:03:40
# Fork: 2 of 3
# Warmup Iteration   1: 2842.361 ns/op
# Warmup Iteration   2: 2489.479 ns/op
# Warmup Iteration   3: 2491.290 ns/op
# Warmup Iteration   4: 2498.034 ns/op
# Warmup Iteration   5: 2464.692 ns/op
Iteration   1: 2506.333 ns/op
Iteration   2: 2474.631 ns/op
Iteration   3: 2456.543 ns/op
Iteration   4: 2494.782 ns/op
Iteration   5: 2476.831 ns/op

# Run progress: 13.10% complete, ETA 02:02:00
# Fork: 3 of 3
# Warmup Iteration   1: 2819.324 ns/op
# Warmup Iteration   2: 2494.684 ns/op
# Warmup Iteration   3: 2477.112 ns/op
# Warmup Iteration   4: 2461.118 ns/op
# Warmup Iteration   5: 2474.843 ns/op
Iteration   1: 2477.348 ns/op
Iteration   2: 2487.942 ns/op
Iteration   3: 2482.811 ns/op
Iteration   4: 2477.782 ns/op
Iteration   5: 2495.890 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.array_clone":
  2481.961 ±(99.9%) 12.769 ns/op [Average]
  (min, avg, max) = (2456.543, 2481.961, 2506.333), stdev = 11.944
  CI (99.9%): [2469.192, 2494.730] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.arrays_compare
# Parameters: (size = 16384, stride = 256)

# Run progress: 14.29% complete, ETA 02:00:20
# Fork: 1 of 3
# Warmup Iteration   1: 402.721 ns/op
# Warmup Iteration   2: 369.629 ns/op
# Warmup Iteration   3: 364.782 ns/op
# Warmup Iteration   4: 360.646 ns/op
# Warmup Iteration   5: 358.281 ns/op
Iteration   1: 356.008 ns/op
Iteration   2: 356.455 ns/op
Iteration   3: 356.402 ns/op
Iteration   4: 348.578 ns/op
Iteration   5: 336.054 ns/op

# Run progress: 15.48% complete, ETA 01:58:39
# Fork: 2 of 3
# Warmup Iteration   1: 388.130 ns/op
# Warmup Iteration   2: 375.219 ns/op
# Warmup Iteration   3: 371.577 ns/op
# Warmup Iteration   4: 370.720 ns/op
# Warmup Iteration   5: 365.900 ns/op
Iteration   1: 366.090 ns/op
Iteration   2: 347.177 ns/op
Iteration   3: 359.666 ns/op
Iteration   4: 360.574 ns/op
Iteration   5: 363.484 ns/op

# Run progress: 16.67% complete, ETA 01:56:59
# Fork: 3 of 3
# Warmup Iteration   1: 406.913 ns/op
# Warmup Iteration   2: 382.039 ns/op
# Warmup Iteration   3: 383.935 ns/op
# Warmup Iteration   4: 388.636 ns/op
# Warmup Iteration   5: 390.579 ns/op
Iteration   1: 389.446 ns/op
Iteration   2: 389.699 ns/op
Iteration   3: 387.799 ns/op
Iteration   4: 388.799 ns/op
Iteration   5: 388.380 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.arrays_compare":
  366.307 ±(99.9%) 19.208 ns/op [Average]
  (min, avg, max) = (336.054, 366.307, 389.699), stdev = 17.967
  CI (99.9%): [347.100, 385.515] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.arrays_compare
# Parameters: (size = 16384, stride = 512)

# Run progress: 17.86% complete, ETA 01:55:18
# Fork: 1 of 3
# Warmup Iteration   1: 350.885 ns/op
# Warmup Iteration   2: 335.567 ns/op
# Warmup Iteration   3: 329.983 ns/op
# Warmup Iteration   4: 330.072 ns/op
# Warmup Iteration   5: 332.152 ns/op
Iteration   1: 330.317 ns/op
Iteration   2: 330.786 ns/op
Iteration   3: 324.279 ns/op
Iteration   4: 319.134 ns/op
Iteration   5: 315.727 ns/op

# Run progress: 19.05% complete, ETA 01:53:38
# Fork: 2 of 3
# Warmup Iteration   1: 339.144 ns/op
# Warmup Iteration   2: 340.958 ns/op
# Warmup Iteration   3: 334.320 ns/op
# Warmup Iteration   4: 315.250 ns/op
# Warmup Iteration   5: 315.847 ns/op
Iteration   1: 315.193 ns/op
Iteration   2: 335.524 ns/op
Iteration   3: 314.586 ns/op
Iteration   4: 321.555 ns/op
Iteration   5: 327.275 ns/op

# Run progress: 20.24% complete, ETA 01:51:57
# Fork: 3 of 3
# Warmup Iteration   1: 376.850 ns/op
# Warmup Iteration   2: 358.617 ns/op
# Warmup Iteration   3: 353.624 ns/op
# Warmup Iteration   4: 353.250 ns/op
# Warmup Iteration   5: 342.107 ns/op
Iteration   1: 343.570 ns/op
Iteration   2: 332.237 ns/op
Iteration   3: 351.569 ns/op
Iteration   4: 359.517 ns/op
Iteration   5: 347.699 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.arrays_compare":
  331.265 ±(99.9%) 14.946 ns/op [Average]
  (min, avg, max) = (314.586, 331.265, 359.517), stdev = 13.980
  CI (99.9%): [316.319, 346.210] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.arrays_compare
# Parameters: (size = 32768, stride = 256)

# Run progress: 21.43% complete, ETA 01:50:17
# Fork: 1 of 3
# Warmup Iteration   1: 1072.435 ns/op
# Warmup Iteration   2: 1088.849 ns/op
# Warmup Iteration   3: 1075.728 ns/op
# Warmup Iteration   4: 1072.066 ns/op
# Warmup Iteration   5: 1069.791 ns/op
Iteration   1: 1065.570 ns/op
Iteration   2: 1053.958 ns/op
Iteration   3: 1036.731 ns/op
Iteration   4: 1006.447 ns/op
Iteration   5: 1075.204 ns/op

# Run progress: 22.62% complete, ETA 01:48:37
# Fork: 2 of 3
# Warmup Iteration   1: 1096.836 ns/op
# Warmup Iteration   2: 1019.037 ns/op
# Warmup Iteration   3: 1041.134 ns/op
# Warmup Iteration   4: 1037.880 ns/op
# Warmup Iteration   5: 1048.887 ns/op
Iteration   1: 1045.438 ns/op
Iteration   2: 983.237 ns/op
Iteration   3: 984.461 ns/op
Iteration   4: 998.286 ns/op
Iteration   5: 1054.603 ns/op

# Run progress: 23.81% complete, ETA 01:46:56
# Fork: 3 of 3
# Warmup Iteration   1: 1044.400 ns/op
# Warmup Iteration   2: 962.828 ns/op
# Warmup Iteration   3: 956.487 ns/op
# Warmup Iteration   4: 955.268 ns/op
# Warmup Iteration   5: 957.209 ns/op
Iteration   1: 955.821 ns/op
Iteration   2: 986.638 ns/op
Iteration   3: 980.922 ns/op
Iteration   4: 1015.678 ns/op
Iteration   5: 1012.014 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.arrays_compare":
  1017.000 ±(99.9%) 38.733 ns/op [Average]
  (min, avg, max) = (955.821, 1017.000, 1075.204), stdev = 36.231
  CI (99.9%): [978.267, 1055.734] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.arrays_compare
# Parameters: (size = 32768, stride = 512)

# Run progress: 25.00% complete, ETA 01:45:16
# Fork: 1 of 3
# Warmup Iteration   1: 1078.200 ns/op
# Warmup Iteration   2: 1072.032 ns/op
# Warmup Iteration   3: 1047.734 ns/op
# Warmup Iteration   4: 1044.554 ns/op
# Warmup Iteration   5: 1044.524 ns/op
Iteration   1: 1043.156 ns/op
Iteration   2: 1042.703 ns/op
Iteration   3: 1043.727 ns/op
Iteration   4: 1044.415 ns/op
Iteration   5: 1046.956 ns/op

# Run progress: 26.19% complete, ETA 01:43:36
# Fork: 2 of 3
# Warmup Iteration   1: 1094.569 ns/op
# Warmup Iteration   2: 1051.994 ns/op
# Warmup Iteration   3: 1044.996 ns/op
# Warmup Iteration   4: 1042.291 ns/op
# Warmup Iteration   5: 1040.838 ns/op
Iteration   1: 1039.656 ns/op
Iteration   2: 1043.302 ns/op
Iteration   3: 1039.080 ns/op
Iteration   4: 1039.981 ns/op
Iteration   5: 1038.212 ns/op

# Run progress: 27.38% complete, ETA 01:41:55
# Fork: 3 of 3
# Warmup Iteration   1: 1048.198 ns/op
# Warmup Iteration   2: 1021.568 ns/op
# Warmup Iteration   3: 1012.869 ns/op
# Warmup Iteration   4: 1008.296 ns/op
# Warmup Iteration   5: 1006.578 ns/op
Iteration   1: 1007.828 ns/op
Iteration   2: 976.271 ns/op
Iteration   3: 983.337 ns/op
Iteration   4: 980.094 ns/op
Iteration   5: 982.975 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.arrays_compare":
  1023.446 ±(99.9%) 30.172 ns/op [Average]
  (min, avg, max) = (976.271, 1023.446, 1046.956), stdev = 28.223
  CI (99.9%): [993.274, 1053.618] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.arrays_copyOf
# Parameters: (size = 16384, stride = 256)

# Run progress: 28.57% complete, ETA 01:40:15
# Fork: 1 of 3
# Warmup Iteration   1: 2354.382 ns/op
# Warmup Iteration   2: 2100.896 ns/op
# Warmup Iteration   3: 2096.338 ns/op
# Warmup Iteration   4: 2093.620 ns/op
# Warmup Iteration   5: 2099.822 ns/op
Iteration   1: 2095.000 ns/op
Iteration   2: 2106.930 ns/op
Iteration   3: 2104.987 ns/op
Iteration   4: 2109.706 ns/op
Iteration   5: 2106.777 ns/op

# Run progress: 29.76% complete, ETA 01:38:35
# Fork: 2 of 3
# Warmup Iteration   1: 2407.339 ns/op
# Warmup Iteration   2: 2129.835 ns/op
# Warmup Iteration   3: 2124.325 ns/op
# Warmup Iteration   4: 2106.682 ns/op
# Warmup Iteration   5: 2111.560 ns/op
Iteration   1: 2113.964 ns/op
Iteration   2: 2118.445 ns/op
Iteration   3: 2115.774 ns/op
Iteration   4: 2115.322 ns/op
Iteration   5: 2122.270 ns/op

# Run progress: 30.95% complete, ETA 01:36:55
# Fork: 3 of 3
# Warmup Iteration   1: 2439.903 ns/op
# Warmup Iteration   2: 2142.951 ns/op
# Warmup Iteration   3: 2127.850 ns/op
# Warmup Iteration   4: 2126.117 ns/op
# Warmup Iteration   5: 2134.912 ns/op
Iteration   1: 2119.601 ns/op
Iteration   2: 2127.013 ns/op
Iteration   3: 2128.334 ns/op
Iteration   4: 2134.688 ns/op
Iteration   5: 2124.614 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.arrays_copyOf":
  2116.228 ±(99.9%) 11.169 ns/op [Average]
  (min, avg, max) = (2095.000, 2116.228, 2134.688), stdev = 10.448
  CI (99.9%): [2105.059, 2127.398] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.arrays_copyOf
# Parameters: (size = 16384, stride = 512)

# Run progress: 32.14% complete, ETA 01:35:14
# Fork: 1 of 3
# Warmup Iteration   1: 2569.688 ns/op
# Warmup Iteration   2: 2084.983 ns/op
# Warmup Iteration   3: 2060.604 ns/op
# Warmup Iteration   4: 2066.522 ns/op
# Warmup Iteration   5: 2059.888 ns/op
Iteration   1: 2064.496 ns/op
Iteration   2: 2070.135 ns/op
Iteration   3: 2066.352 ns/op
Iteration   4: 2069.789 ns/op
Iteration   5: 2074.097 ns/op

# Run progress: 33.33% complete, ETA 01:33:34
# Fork: 2 of 3
# Warmup Iteration   1: 2569.075 ns/op
# Warmup Iteration   2: 2088.113 ns/op
# Warmup Iteration   3: 2069.809 ns/op
# Warmup Iteration   4: 2065.097 ns/op
# Warmup Iteration   5: 2067.357 ns/op
Iteration   1: 2061.641 ns/op
Iteration   2: 2078.317 ns/op
Iteration   3: 2065.791 ns/op
Iteration   4: 2064.443 ns/op
Iteration   5: 2065.564 ns/op

# Run progress: 34.52% complete, ETA 01:31:54
# Fork: 3 of 3
# Warmup Iteration   1: 2689.009 ns/op
# Warmup Iteration   2: 2112.028 ns/op
# Warmup Iteration   3: 2074.072 ns/op
# Warmup Iteration   4: 2085.368 ns/op
# Warmup Iteration   5: 2072.090 ns/op
Iteration   1: 2073.928 ns/op
Iteration   2: 2071.992 ns/op
Iteration   3: 2075.190 ns/op
Iteration   4: 2074.235 ns/op
Iteration   5: 2066.782 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.arrays_copyOf":
  2069.517 ±(99.9%) 5.260 ns/op [Average]
  (min, avg, max) = (2061.641, 2069.517, 2078.317), stdev = 4.920
  CI (99.9%): [2064.257, 2074.777] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.arrays_copyOf
# Parameters: (size = 32768, stride = 256)

# Run progress: 35.71% complete, ETA 01:30:14
# Fork: 1 of 3
# Warmup Iteration   1: 4840.846 ns/op
# Warmup Iteration   2: 5321.528 ns/op
# Warmup Iteration   3: 4174.793 ns/op
# Warmup Iteration   4: 4182.022 ns/op
# Warmup Iteration   5: 4162.582 ns/op
Iteration   1: 4190.778 ns/op
Iteration   2: 4204.961 ns/op
Iteration   3: 4176.263 ns/op
Iteration   4: 4180.825 ns/op
Iteration   5: 4211.397 ns/op

# Run progress: 36.90% complete, ETA 01:28:33
# Fork: 2 of 3
# Warmup Iteration   1: 5597.336 ns/op
# Warmup Iteration   2: 4238.716 ns/op
# Warmup Iteration   3: 4183.909 ns/op
# Warmup Iteration   4: 4205.061 ns/op
# Warmup Iteration   5: 4211.638 ns/op
Iteration   1: 4195.878 ns/op
Iteration   2: 4181.423 ns/op
Iteration   3: 4190.232 ns/op
Iteration   4: 4179.524 ns/op
Iteration   5: 4215.659 ns/op

# Run progress: 38.10% complete, ETA 01:26:53
# Fork: 3 of 3
# Warmup Iteration   1: 4795.389 ns/op
# Warmup Iteration   2: 4283.053 ns/op
# Warmup Iteration   3: 4231.208 ns/op
# Warmup Iteration   4: 4221.768 ns/op
# Warmup Iteration   5: 4210.985 ns/op
Iteration   1: 4197.624 ns/op
Iteration   2: 4227.930 ns/op
Iteration   3: 4193.944 ns/op
Iteration   4: 4220.415 ns/op
Iteration   5: 4230.585 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.arrays_copyOf":
  4199.829 ±(99.9%) 19.096 ns/op [Average]
  (min, avg, max) = (4176.263, 4199.829, 4230.585), stdev = 17.862
  CI (99.9%): [4180.733, 4218.925] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.arrays_copyOf
# Parameters: (size = 32768, stride = 512)

# Run progress: 39.29% complete, ETA 01:25:13
# Fork: 1 of 3
# Warmup Iteration   1: 4662.243 ns/op
# Warmup Iteration   2: 4127.372 ns/op
# Warmup Iteration   3: 4230.380 ns/op
# Warmup Iteration   4: 4224.617 ns/op
# Warmup Iteration   5: 4238.316 ns/op
Iteration   1: 4217.213 ns/op
Iteration   2: 4226.327 ns/op
Iteration   3: 4234.844 ns/op
Iteration   4: 4217.871 ns/op
Iteration   5: 4217.157 ns/op

# Run progress: 40.48% complete, ETA 01:23:33
# Fork: 2 of 3
# Warmup Iteration   1: 4684.618 ns/op
# Warmup Iteration   2: 4234.114 ns/op
# Warmup Iteration   3: 4087.207 ns/op
# Warmup Iteration   4: 4091.856 ns/op
# Warmup Iteration   5: 4084.078 ns/op
Iteration   1: 4087.466 ns/op
Iteration   2: 4060.845 ns/op
Iteration   3: 4054.628 ns/op
Iteration   4: 4081.224 ns/op
Iteration   5: 4077.988 ns/op

# Run progress: 41.67% complete, ETA 01:21:52
# Fork: 3 of 3
# Warmup Iteration   1: 4710.899 ns/op
# Warmup Iteration   2: 4106.706 ns/op
# Warmup Iteration   3: 4093.684 ns/op
# Warmup Iteration   4: 4092.746 ns/op
# Warmup Iteration   5: 4102.915 ns/op
Iteration   1: 4085.828 ns/op
Iteration   2: 4110.309 ns/op
Iteration   3: 4097.820 ns/op
Iteration   4: 4094.202 ns/op
Iteration   5: 4102.519 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.arrays_copyOf":
  4131.083 ±(99.9%) 73.372 ns/op [Average]
  (min, avg, max) = (4054.628, 4131.083, 4234.844), stdev = 68.632
  CI (99.9%): [4057.711, 4204.455] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.arrays_equals
# Parameters: (size = 16384, stride = 256)

# Run progress: 42.86% complete, ETA 01:20:12
# Fork: 1 of 3
# Warmup Iteration   1: 367.221 ns/op
# Warmup Iteration   2: 340.024 ns/op
# Warmup Iteration   3: 335.020 ns/op
# Warmup Iteration   4: 333.880 ns/op
# Warmup Iteration   5: 331.222 ns/op
Iteration   1: 329.994 ns/op
Iteration   2: 328.524 ns/op
Iteration   3: 329.204 ns/op
Iteration   4: 327.999 ns/op
Iteration   5: 327.212 ns/op

# Run progress: 44.05% complete, ETA 01:18:32
# Fork: 2 of 3
# Warmup Iteration   1: 346.425 ns/op
# Warmup Iteration   2: 327.666 ns/op
# Warmup Iteration   3: 324.854 ns/op
# Warmup Iteration   4: 318.564 ns/op
# Warmup Iteration   5: 318.638 ns/op
Iteration   1: 318.329 ns/op
Iteration   2: 307.232 ns/op
Iteration   3: 325.170 ns/op
Iteration   4: 324.161 ns/op
Iteration   5: 323.437 ns/op

# Run progress: 45.24% complete, ETA 01:16:52
# Fork: 3 of 3
# Warmup Iteration   1: 334.825 ns/op
# Warmup Iteration   2: 324.119 ns/op
# Warmup Iteration   3: 307.376 ns/op
# Warmup Iteration   4: 307.351 ns/op
# Warmup Iteration   5: 308.565 ns/op
Iteration   1: 325.494 ns/op
Iteration   2: 306.322 ns/op
Iteration   3: 307.028 ns/op
Iteration   4: 307.548 ns/op
Iteration   5: 308.329 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.arrays_equals":
  319.732 ±(99.9%) 10.185 ns/op [Average]
  (min, avg, max) = (306.322, 319.732, 329.994), stdev = 9.527
  CI (99.9%): [309.547, 329.917] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.arrays_equals
# Parameters: (size = 16384, stride = 512)

# Run progress: 46.43% complete, ETA 01:15:11
# Fork: 1 of 3
# Warmup Iteration   1: 343.113 ns/op
# Warmup Iteration   2: 323.371 ns/op
# Warmup Iteration   3: 323.855 ns/op
# Warmup Iteration   4: 322.693 ns/op
# Warmup Iteration   5: 321.954 ns/op
Iteration   1: 321.700 ns/op
Iteration   2: 321.560 ns/op
Iteration   3: 321.632 ns/op
Iteration   4: 321.804 ns/op
Iteration   5: 321.188 ns/op

# Run progress: 47.62% complete, ETA 01:13:31
# Fork: 2 of 3
# Warmup Iteration   1: 358.134 ns/op
# Warmup Iteration   2: 335.395 ns/op
# Warmup Iteration   3: 333.278 ns/op
# Warmup Iteration   4: 326.974 ns/op
# Warmup Iteration   5: 322.405 ns/op
Iteration   1: 323.154 ns/op
Iteration   2: 332.070 ns/op
Iteration   3: 333.609 ns/op
Iteration   4: 334.590 ns/op
Iteration   5: 332.614 ns/op

# Run progress: 48.81% complete, ETA 01:11:51
# Fork: 3 of 3
# Warmup Iteration   1: 342.333 ns/op
# Warmup Iteration   2: 326.092 ns/op
# Warmup Iteration   3: 326.377 ns/op
# Warmup Iteration   4: 324.383 ns/op
# Warmup Iteration   5: 323.482 ns/op
Iteration   1: 322.124 ns/op
Iteration   2: 322.499 ns/op
Iteration   3: 322.082 ns/op
Iteration   4: 321.770 ns/op
Iteration   5: 322.440 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.arrays_equals":
  324.989 ±(99.9%) 5.542 ns/op [Average]
  (min, avg, max) = (321.188, 324.989, 334.590), stdev = 5.184
  CI (99.9%): [319.447, 330.532] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.arrays_equals
# Parameters: (size = 32768, stride = 256)

# Run progress: 50.00% complete, ETA 01:10:10
# Fork: 1 of 3
# Warmup Iteration   1: 1081.643 ns/op
# Warmup Iteration   2: 1034.215 ns/op
# Warmup Iteration   3: 1030.666 ns/op
# Warmup Iteration   4: 1030.067 ns/op
# Warmup Iteration   5: 1033.509 ns/op
Iteration   1: 1031.946 ns/op
Iteration   2: 1030.591 ns/op
Iteration   3: 1031.239 ns/op
Iteration   4: 1031.380 ns/op
Iteration   5: 1031.351 ns/op

# Run progress: 51.19% complete, ETA 01:08:30
# Fork: 2 of 3
# Warmup Iteration   1: 999.896 ns/op
# Warmup Iteration   2: 951.745 ns/op
# Warmup Iteration   3: 1003.909 ns/op
# Warmup Iteration   4: 996.487 ns/op
# Warmup Iteration   5: 994.448 ns/op
Iteration   1: 990.534 ns/op
Iteration   2: 939.936 ns/op
Iteration   3: 945.792 ns/op
Iteration   4: 944.891 ns/op
Iteration   5: 998.767 ns/op

# Run progress: 52.38% complete, ETA 01:06:50
# Fork: 3 of 3
# Warmup Iteration   1: 1031.936 ns/op
# Warmup Iteration   2: 985.419 ns/op
# Warmup Iteration   3: 982.718 ns/op
# Warmup Iteration   4: 980.268 ns/op
# Warmup Iteration   5: 978.686 ns/op
Iteration   1: 972.608 ns/op
Iteration   2: 1008.461 ns/op
Iteration   3: 1005.288 ns/op
Iteration   4: 996.198 ns/op
Iteration   5: 974.545 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.arrays_equals":
  995.568 ±(99.9%) 35.905 ns/op [Average]
  (min, avg, max) = (939.936, 995.568, 1031.946), stdev = 33.586
  CI (99.9%): [959.663, 1031.473] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.arrays_equals
# Parameters: (size = 32768, stride = 512)

# Run progress: 53.57% complete, ETA 01:05:10
# Fork: 1 of 3
# Warmup Iteration   1: 1024.457 ns/op
# Warmup Iteration   2: 992.774 ns/op
# Warmup Iteration   3: 990.613 ns/op
# Warmup Iteration   4: 989.581 ns/op
# Warmup Iteration   5: 1026.480 ns/op
Iteration   1: 1051.768 ns/op
Iteration   2: 1010.589 ns/op
Iteration   3: 1011.015 ns/op
Iteration   4: 1009.199 ns/op
Iteration   5: 1008.544 ns/op

# Run progress: 54.76% complete, ETA 01:03:29
# Fork: 2 of 3
# Warmup Iteration   1: 1105.773 ns/op
# Warmup Iteration   2: 1039.962 ns/op
# Warmup Iteration   3: 1033.215 ns/op
# Warmup Iteration   4: 1034.227 ns/op
# Warmup Iteration   5: 1036.612 ns/op
Iteration   1: 1035.327 ns/op
Iteration   2: 1068.716 ns/op
Iteration   3: 1063.613 ns/op
Iteration   4: 1060.968 ns/op
Iteration   5: 1061.985 ns/op

# Run progress: 55.95% complete, ETA 01:01:49
# Fork: 3 of 3
# Warmup Iteration   1: 1032.280 ns/op
# Warmup Iteration   2: 971.680 ns/op
# Warmup Iteration   3: 971.789 ns/op
# Warmup Iteration   4: 972.656 ns/op
# Warmup Iteration   5: 969.071 ns/op
Iteration   1: 967.998 ns/op
Iteration   2: 967.960 ns/op
Iteration   3: 968.253 ns/op
Iteration   4: 968.708 ns/op
Iteration   5: 942.671 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.arrays_equals":
  1013.154 ±(99.9%) 45.514 ns/op [Average]
  (min, avg, max) = (942.671, 1013.154, 1068.716), stdev = 42.574
  CI (99.9%): [967.640, 1058.668] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.arrays_mismatch
# Parameters: (size = 16384, stride = 256)

# Run progress: 57.14% complete, ETA 01:00:09
# Fork: 1 of 3
# Warmup Iteration   1: 367.859 ns/op
# Warmup Iteration   2: 356.599 ns/op
# Warmup Iteration   3: 336.973 ns/op
# Warmup Iteration   4: 335.967 ns/op
# Warmup Iteration   5: 337.019 ns/op
Iteration   1: 336.486 ns/op
Iteration   2: 335.122 ns/op
Iteration   3: 334.663 ns/op
Iteration   4: 334.439 ns/op
Iteration   5: 343.989 ns/op

# Run progress: 58.33% complete, ETA 00:58:28
# Fork: 2 of 3
# Warmup Iteration   1: 384.732 ns/op
# Warmup Iteration   2: 365.515 ns/op
# Warmup Iteration   3: 375.067 ns/op
# Warmup Iteration   4: 370.910 ns/op
# Warmup Iteration   5: 371.478 ns/op
Iteration   1: 372.806 ns/op
Iteration   2: 361.847 ns/op
Iteration   3: 362.018 ns/op
Iteration   4: 364.032 ns/op
Iteration   5: 363.150 ns/op

# Run progress: 59.52% complete, ETA 00:56:48
# Fork: 3 of 3
# Warmup Iteration   1: 361.396 ns/op
# Warmup Iteration   2: 330.673 ns/op
# Warmup Iteration   3: 325.078 ns/op
# Warmup Iteration   4: 324.635 ns/op
# Warmup Iteration   5: 326.173 ns/op
Iteration   1: 324.450 ns/op
Iteration   2: 326.369 ns/op
Iteration   3: 330.807 ns/op
Iteration   4: 331.869 ns/op
Iteration   5: 331.458 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.arrays_mismatch":
  343.567 ±(99.9%) 17.435 ns/op [Average]
  (min, avg, max) = (324.450, 343.567, 372.806), stdev = 16.308
  CI (99.9%): [326.132, 361.002] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.arrays_mismatch
# Parameters: (size = 16384, stride = 512)

# Run progress: 60.71% complete, ETA 00:55:08
# Fork: 1 of 3
# Warmup Iteration   1: 363.309 ns/op
# Warmup Iteration   2: 353.065 ns/op
# Warmup Iteration   3: 347.277 ns/op
# Warmup Iteration   4: 328.559 ns/op
# Warmup Iteration   5: 329.953 ns/op
Iteration   1: 349.452 ns/op
Iteration   2: 346.786 ns/op
Iteration   3: 344.810 ns/op
Iteration   4: 345.672 ns/op
Iteration   5: 345.344 ns/op

# Run progress: 61.90% complete, ETA 00:53:28
# Fork: 2 of 3
# Warmup Iteration   1: 383.965 ns/op
# Warmup Iteration   2: 350.202 ns/op
# Warmup Iteration   3: 346.142 ns/op
# Warmup Iteration   4: 346.595 ns/op
# Warmup Iteration   5: 346.804 ns/op
Iteration   1: 346.196 ns/op
Iteration   2: 365.860 ns/op
Iteration   3: 341.711 ns/op
Iteration   4: 345.677 ns/op
Iteration   5: 345.144 ns/op

# Run progress: 63.10% complete, ETA 00:51:47
# Fork: 3 of 3
# Warmup Iteration   1: 362.467 ns/op
# Warmup Iteration   2: 344.835 ns/op
# Warmup Iteration   3: 325.618 ns/op
# Warmup Iteration   4: 320.548 ns/op
# Warmup Iteration   5: 321.849 ns/op
Iteration   1: 325.961 ns/op
Iteration   2: 322.393 ns/op
Iteration   3: 327.720 ns/op
Iteration   4: 334.015 ns/op
Iteration   5: 316.364 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.arrays_mismatch":
  340.207 ±(99.9%) 13.522 ns/op [Average]
  (min, avg, max) = (316.364, 340.207, 365.860), stdev = 12.648
  CI (99.9%): [326.685, 353.729] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.arrays_mismatch
# Parameters: (size = 32768, stride = 256)

# Run progress: 64.29% complete, ETA 00:50:07
# Fork: 1 of 3
# Warmup Iteration   1: 1081.977 ns/op
# Warmup Iteration   2: 983.678 ns/op
# Warmup Iteration   3: 1029.601 ns/op
# Warmup Iteration   4: 980.724 ns/op
# Warmup Iteration   5: 983.184 ns/op
Iteration   1: 984.581 ns/op
Iteration   2: 984.482 ns/op
Iteration   3: 982.998 ns/op
Iteration   4: 979.389 ns/op
Iteration   5: 1006.736 ns/op

# Run progress: 65.48% complete, ETA 00:48:27
# Fork: 2 of 3
# Warmup Iteration   1: 1121.386 ns/op
# Warmup Iteration   2: 1077.300 ns/op
# Warmup Iteration   3: 1063.243 ns/op
# Warmup Iteration   4: 1060.086 ns/op
# Warmup Iteration   5: 1058.745 ns/op
Iteration   1: 1059.245 ns/op
Iteration   2: 1051.241 ns/op
Iteration   3: 1051.781 ns/op
Iteration   4: 1050.090 ns/op
Iteration   5: 1050.321 ns/op

# Run progress: 66.67% complete, ETA 00:46:47
# Fork: 3 of 3
# Warmup Iteration   1: 1113.716 ns/op
# Warmup Iteration   2: 1047.646 ns/op
# Warmup Iteration   3: 1035.664 ns/op
# Warmup Iteration   4: 1063.153 ns/op
# Warmup Iteration   5: 1064.682 ns/op
Iteration   1: 1061.911 ns/op
Iteration   2: 1010.121 ns/op
Iteration   3: 1013.737 ns/op
Iteration   4: 1013.088 ns/op
Iteration   5: 1014.062 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.arrays_mismatch":
  1020.919 ±(99.9%) 32.608 ns/op [Average]
  (min, avg, max) = (979.389, 1020.919, 1061.911), stdev = 30.502
  CI (99.9%): [988.311, 1053.527] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.arrays_mismatch
# Parameters: (size = 32768, stride = 512)

# Run progress: 67.86% complete, ETA 00:45:06
# Fork: 1 of 3
# Warmup Iteration   1: 1034.732 ns/op
# Warmup Iteration   2: 996.014 ns/op
# Warmup Iteration   3: 984.985 ns/op
# Warmup Iteration   4: 1048.030 ns/op
# Warmup Iteration   5: 1041.218 ns/op
Iteration   1: 1038.292 ns/op
Iteration   2: 1034.202 ns/op
Iteration   3: 1034.199 ns/op
Iteration   4: 1029.598 ns/op
Iteration   5: 1027.442 ns/op

# Run progress: 69.05% complete, ETA 00:43:26
# Fork: 2 of 3
# Warmup Iteration   1: 1024.542 ns/op
# Warmup Iteration   2: 982.442 ns/op
# Warmup Iteration   3: 972.397 ns/op
# Warmup Iteration   4: 979.024 ns/op
# Warmup Iteration   5: 979.401 ns/op
Iteration   1: 1005.711 ns/op
Iteration   2: 954.051 ns/op
Iteration   3: 1015.368 ns/op
Iteration   4: 1012.649 ns/op
Iteration   5: 950.390 ns/op

# Run progress: 70.24% complete, ETA 00:41:46
# Fork: 3 of 3
# Warmup Iteration   1: 1009.235 ns/op
# Warmup Iteration   2: 994.218 ns/op
# Warmup Iteration   3: 1021.166 ns/op
# Warmup Iteration   4: 1017.741 ns/op
# Warmup Iteration   5: 1012.348 ns/op
Iteration   1: 1008.646 ns/op
Iteration   2: 1007.229 ns/op
Iteration   3: 1001.319 ns/op
Iteration   4: 1002.519 ns/op
Iteration   5: 1005.433 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.arrays_mismatch":
  1008.470 ±(99.9%) 27.884 ns/op [Average]
  (min, avg, max) = (950.390, 1008.470, 1038.292), stdev = 26.083
  CI (99.9%): [980.586, 1036.354] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.manual_array_copy
# Parameters: (size = 16384, stride = 256)

# Run progress: 71.43% complete, ETA 00:40:06
# Fork: 1 of 3
# Warmup Iteration   1: 11674.708 ns/op
# Warmup Iteration   2: 10472.950 ns/op
# Warmup Iteration   3: 10471.689 ns/op
# Warmup Iteration   4: 10363.982 ns/op
# Warmup Iteration   5: 10558.667 ns/op
Iteration   1: 10414.376 ns/op
Iteration   2: 10396.559 ns/op
Iteration   3: 10383.695 ns/op
Iteration   4: 10533.559 ns/op
Iteration   5: 10409.975 ns/op

# Run progress: 72.62% complete, ETA 00:38:25
# Fork: 2 of 3
# Warmup Iteration   1: 11731.697 ns/op
# Warmup Iteration   2: 10451.864 ns/op
# Warmup Iteration   3: 10357.645 ns/op
# Warmup Iteration   4: 10447.339 ns/op
# Warmup Iteration   5: 10456.622 ns/op
Iteration   1: 10457.733 ns/op
Iteration   2: 10477.183 ns/op
Iteration   3: 10356.789 ns/op
Iteration   4: 10313.624 ns/op
Iteration   5: 10397.880 ns/op

# Run progress: 73.81% complete, ETA 00:36:45
# Fork: 3 of 3
# Warmup Iteration   1: 11534.964 ns/op
# Warmup Iteration   2: 10401.777 ns/op
# Warmup Iteration   3: 10341.976 ns/op
# Warmup Iteration   4: 10389.783 ns/op
# Warmup Iteration   5: 10538.056 ns/op
Iteration   1: 10523.276 ns/op
Iteration   2: 10544.416 ns/op
Iteration   3: 10379.050 ns/op
Iteration   4: 10397.953 ns/op
Iteration   5: 10456.662 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.manual_array_copy":
  10429.515 ±(99.9%) 72.103 ns/op [Average]
  (min, avg, max) = (10313.624, 10429.515, 10544.416), stdev = 67.445
  CI (99.9%): [10357.412, 10501.618] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.manual_array_copy
# Parameters: (size = 16384, stride = 512)

# Run progress: 75.00% complete, ETA 00:35:05
# Fork: 1 of 3
# Warmup Iteration   1: 11163.336 ns/op
# Warmup Iteration   2: 10274.406 ns/op
# Warmup Iteration   3: 10346.649 ns/op
# Warmup Iteration   4: 10211.449 ns/op
# Warmup Iteration   5: 10068.092 ns/op
Iteration   1: 10272.648 ns/op
Iteration   2: 10138.689 ns/op
Iteration   3: 10147.830 ns/op
Iteration   4: 10097.995 ns/op
Iteration   5: 10130.834 ns/op

# Run progress: 76.19% complete, ETA 00:33:25
# Fork: 2 of 3
# Warmup Iteration   1: 11278.564 ns/op
# Warmup Iteration   2: 10205.367 ns/op
# Warmup Iteration   3: 10137.221 ns/op
# Warmup Iteration   4: 10098.467 ns/op
# Warmup Iteration   5: 10171.311 ns/op
Iteration   1: 10165.434 ns/op
Iteration   2: 10299.505 ns/op
Iteration   3: 10180.922 ns/op
Iteration   4: 10057.603 ns/op
Iteration   5: 10111.448 ns/op

# Run progress: 77.38% complete, ETA 00:31:44
# Fork: 3 of 3
# Warmup Iteration   1: 11475.113 ns/op
# Warmup Iteration   2: 10098.110 ns/op
# Warmup Iteration   3: 10308.829 ns/op
# Warmup Iteration   4: 10077.412 ns/op
# Warmup Iteration   5: 10135.762 ns/op
Iteration   1: 10185.835 ns/op
Iteration   2: 10079.508 ns/op
Iteration   3: 10118.333 ns/op
Iteration   4: 10235.700 ns/op
Iteration   5: 10148.117 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.manual_array_copy":
  10158.027 ±(99.9%) 73.098 ns/op [Average]
  (min, avg, max) = (10057.603, 10158.027, 10299.505), stdev = 68.376
  CI (99.9%): [10084.928, 10231.125] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.manual_array_copy
# Parameters: (size = 32768, stride = 256)

# Run progress: 78.57% complete, ETA 00:30:04
# Fork: 1 of 3
# Warmup Iteration   1: 23088.730 ns/op
# Warmup Iteration   2: 21253.132 ns/op
# Warmup Iteration   3: 21080.309 ns/op
# Warmup Iteration   4: 21222.603 ns/op
# Warmup Iteration   5: 21068.465 ns/op
Iteration   1: 20742.637 ns/op
Iteration   2: 21017.603 ns/op
Iteration   3: 20971.258 ns/op
Iteration   4: 20994.786 ns/op
Iteration   5: 21154.993 ns/op

# Run progress: 79.76% complete, ETA 00:28:24
# Fork: 2 of 3
# Warmup Iteration   1: 23110.193 ns/op
# Warmup Iteration   2: 20810.434 ns/op
# Warmup Iteration   3: 20858.031 ns/op
# Warmup Iteration   4: 21108.784 ns/op
# Warmup Iteration   5: 20984.954 ns/op
Iteration   1: 21232.206 ns/op
Iteration   2: 20760.711 ns/op
Iteration   3: 21043.721 ns/op
Iteration   4: 20876.727 ns/op
Iteration   5: 20792.265 ns/op

# Run progress: 80.95% complete, ETA 00:26:44
# Fork: 3 of 3
# Warmup Iteration   1: 23343.364 ns/op
# Warmup Iteration   2: 21106.844 ns/op
# Warmup Iteration   3: 21107.525 ns/op
# Warmup Iteration   4: 21085.725 ns/op
# Warmup Iteration   5: 21128.607 ns/op
Iteration   1: 20929.705 ns/op
Iteration   2: 20941.556 ns/op
Iteration   3: 21275.526 ns/op
Iteration   4: 20858.781 ns/op
Iteration   5: 20685.192 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.manual_array_copy":
  20951.845 ±(99.9%) 187.662 ns/op [Average]
  (min, avg, max) = (20685.192, 20951.845, 21275.526), stdev = 175.539
  CI (99.9%): [20764.182, 21139.507] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.manual_array_copy
# Parameters: (size = 32768, stride = 512)

# Run progress: 82.14% complete, ETA 00:25:03
# Fork: 1 of 3
# Warmup Iteration   1: 22897.098 ns/op
# Warmup Iteration   2: 20582.516 ns/op
# Warmup Iteration   3: 20559.990 ns/op
# Warmup Iteration   4: 20600.275 ns/op
# Warmup Iteration   5: 20543.594 ns/op
Iteration   1: 20226.233 ns/op
Iteration   2: 20685.272 ns/op
Iteration   3: 20271.366 ns/op
Iteration   4: 20476.652 ns/op
Iteration   5: 20550.542 ns/op

# Run progress: 83.33% complete, ETA 00:23:23
# Fork: 2 of 3
# Warmup Iteration   1: 22480.562 ns/op
# Warmup Iteration   2: 20852.875 ns/op
# Warmup Iteration   3: 20525.667 ns/op
# Warmup Iteration   4: 20579.195 ns/op
# Warmup Iteration   5: 20500.869 ns/op
Iteration   1: 20893.106 ns/op
Iteration   2: 20397.007 ns/op
Iteration   3: 20638.906 ns/op
Iteration   4: 20291.461 ns/op
Iteration   5: 20502.018 ns/op

# Run progress: 84.52% complete, ETA 00:21:43
# Fork: 3 of 3
# Warmup Iteration   1: 22741.520 ns/op
# Warmup Iteration   2: 20570.867 ns/op
# Warmup Iteration   3: 20425.822 ns/op
# Warmup Iteration   4: 20474.846 ns/op
# Warmup Iteration   5: 20525.223 ns/op
Iteration   1: 20631.718 ns/op
Iteration   2: 20475.347 ns/op
Iteration   3: 20316.517 ns/op
Iteration   4: 20411.230 ns/op
Iteration   5: 20285.882 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.manual_array_copy":
  20470.217 ±(99.9%) 198.902 ns/op [Average]
  (min, avg, max) = (20226.233, 20470.217, 20893.106), stdev = 186.053
  CI (99.9%): [20271.316, 20669.119] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.system_array_copy
# Parameters: (size = 16384, stride = 256)

# Run progress: 85.71% complete, ETA 00:20:03
# Fork: 1 of 3
# Warmup Iteration   1: 1319.668 ns/op
# Warmup Iteration   2: 1196.915 ns/op
# Warmup Iteration   3: 1199.308 ns/op
# Warmup Iteration   4: 1210.827 ns/op
# Warmup Iteration   5: 1203.668 ns/op
Iteration   1: 1202.765 ns/op
Iteration   2: 1221.312 ns/op
Iteration   3: 1206.697 ns/op
Iteration   4: 1201.088 ns/op
Iteration   5: 1201.370 ns/op

# Run progress: 86.90% complete, ETA 00:18:22
# Fork: 2 of 3
# Warmup Iteration   1: 1338.826 ns/op
# Warmup Iteration   2: 1191.260 ns/op
# Warmup Iteration   3: 1187.042 ns/op
# Warmup Iteration   4: 1187.281 ns/op
# Warmup Iteration   5: 1187.788 ns/op
Iteration   1: 1186.848 ns/op
Iteration   2: 1190.216 ns/op
Iteration   3: 1186.078 ns/op
Iteration   4: 1190.840 ns/op
Iteration   5: 1193.106 ns/op

# Run progress: 88.10% complete, ETA 00:16:42
# Fork: 3 of 3
# Warmup Iteration   1: 1346.539 ns/op
# Warmup Iteration   2: 1201.697 ns/op
# Warmup Iteration   3: 1191.036 ns/op
# Warmup Iteration   4: 1192.347 ns/op
# Warmup Iteration   5: 1185.980 ns/op
Iteration   1: 1187.147 ns/op
Iteration   2: 1194.662 ns/op
Iteration   3: 1188.757 ns/op
Iteration   4: 1190.424 ns/op
Iteration   5: 1185.712 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.system_array_copy":
  1195.135 ±(99.9%) 10.554 ns/op [Average]
  (min, avg, max) = (1185.712, 1195.135, 1221.312), stdev = 9.873
  CI (99.9%): [1184.580, 1205.689] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.system_array_copy
# Parameters: (size = 16384, stride = 512)

# Run progress: 89.29% complete, ETA 00:15:02
# Fork: 1 of 3
# Warmup Iteration   1: 1268.542 ns/op
# Warmup Iteration   2: 1146.016 ns/op
# Warmup Iteration   3: 1138.364 ns/op
# Warmup Iteration   4: 1138.178 ns/op
# Warmup Iteration   5: 1132.121 ns/op
Iteration   1: 1126.323 ns/op
Iteration   2: 1138.832 ns/op
Iteration   3: 1127.998 ns/op
Iteration   4: 1133.707 ns/op
Iteration   5: 1136.917 ns/op

# Run progress: 90.48% complete, ETA 00:13:22
# Fork: 2 of 3
# Warmup Iteration   1: 1247.545 ns/op
# Warmup Iteration   2: 1103.461 ns/op
# Warmup Iteration   3: 1094.221 ns/op
# Warmup Iteration   4: 1089.154 ns/op
# Warmup Iteration   5: 1087.628 ns/op
Iteration   1: 1088.311 ns/op
Iteration   2: 1089.899 ns/op
Iteration   3: 1087.220 ns/op
Iteration   4: 1088.903 ns/op
Iteration   5: 1094.191 ns/op

# Run progress: 91.67% complete, ETA 00:11:41
# Fork: 3 of 3
# Warmup Iteration   1: 1348.093 ns/op
# Warmup Iteration   2: 1182.731 ns/op
# Warmup Iteration   3: 1174.838 ns/op
# Warmup Iteration   4: 1179.665 ns/op
# Warmup Iteration   5: 1170.383 ns/op
Iteration   1: 1177.374 ns/op
Iteration   2: 1179.402 ns/op
Iteration   3: 1173.916 ns/op
Iteration   4: 1173.489 ns/op
Iteration   5: 1176.384 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.system_array_copy":
  1132.858 ±(99.9%) 39.216 ns/op [Average]
  (min, avg, max) = (1087.220, 1132.858, 1179.402), stdev = 36.682
  CI (99.9%): [1093.642, 1172.073] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.system_array_copy
# Parameters: (size = 32768, stride = 256)

# Run progress: 92.86% complete, ETA 00:10:01
# Fork: 1 of 3
# Warmup Iteration   1: 3205.526 ns/op
# Warmup Iteration   2: 2832.971 ns/op
# Warmup Iteration   3: 2824.795 ns/op
# Warmup Iteration   4: 2822.994 ns/op
# Warmup Iteration   5: 2811.433 ns/op
Iteration   1: 2819.244 ns/op
Iteration   2: 2818.555 ns/op
Iteration   3: 2827.988 ns/op
Iteration   4: 2786.789 ns/op
Iteration   5: 2795.569 ns/op

# Run progress: 94.05% complete, ETA 00:08:21
# Fork: 2 of 3
# Warmup Iteration   1: 3137.791 ns/op
# Warmup Iteration   2: 2859.303 ns/op
# Warmup Iteration   3: 2832.176 ns/op
# Warmup Iteration   4: 2800.861 ns/op
# Warmup Iteration   5: 2825.542 ns/op
Iteration   1: 2804.235 ns/op
Iteration   2: 2843.843 ns/op
Iteration   3: 2813.833 ns/op
Iteration   4: 2832.817 ns/op
Iteration   5: 2827.188 ns/op

# Run progress: 95.24% complete, ETA 00:06:41
# Fork: 3 of 3
# Warmup Iteration   1: 3183.856 ns/op
# Warmup Iteration   2: 2816.151 ns/op
# Warmup Iteration   3: 2817.985 ns/op
# Warmup Iteration   4: 2815.682 ns/op
# Warmup Iteration   5: 2814.122 ns/op
Iteration   1: 2808.577 ns/op
Iteration   2: 2802.535 ns/op
Iteration   3: 2816.928 ns/op
Iteration   4: 2811.817 ns/op
Iteration   5: 2829.161 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.system_array_copy":
  2815.939 ±(99.9%) 16.127 ns/op [Average]
  (min, avg, max) = (2786.789, 2815.939, 2843.843), stdev = 15.085
  CI (99.9%): [2799.812, 2832.065] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.system_array_copy
# Parameters: (size = 32768, stride = 512)

# Run progress: 96.43% complete, ETA 00:05:00
# Fork: 1 of 3
# Warmup Iteration   1: 2978.915 ns/op
# Warmup Iteration   2: 2678.855 ns/op
# Warmup Iteration   3: 2642.742 ns/op
# Warmup Iteration   4: 2668.709 ns/op
# Warmup Iteration   5: 2646.091 ns/op
Iteration   1: 2622.554 ns/op
Iteration   2: 2656.705 ns/op
Iteration   3: 2636.831 ns/op
Iteration   4: 2672.738 ns/op
Iteration   5: 2662.185 ns/op

# Run progress: 97.62% complete, ETA 00:03:20
# Fork: 2 of 3
# Warmup Iteration   1: 3017.673 ns/op
# Warmup Iteration   2: 2673.682 ns/op
# Warmup Iteration   3: 2645.339 ns/op
# Warmup Iteration   4: 2662.893 ns/op
# Warmup Iteration   5: 2657.647 ns/op
Iteration   1: 2649.969 ns/op
Iteration   2: 2662.421 ns/op
Iteration   3: 2674.496 ns/op
Iteration   4: 2661.913 ns/op
Iteration   5: 2670.348 ns/op

# Run progress: 98.81% complete, ETA 00:01:40
# Fork: 3 of 3
# Warmup Iteration   1: 3049.388 ns/op
# Warmup Iteration   2: 2716.883 ns/op
# Warmup Iteration   3: 2704.614 ns/op
# Warmup Iteration   4: 2711.234 ns/op
# Warmup Iteration   5: 2724.467 ns/op
Iteration   1: 2707.047 ns/op
Iteration   2: 2713.864 ns/op
Iteration   3: 2715.763 ns/op
Iteration   4: 2702.956 ns/op
Iteration   5: 2697.736 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.system_array_copy":
  2673.835 ±(99.9%) 30.193 ns/op [Average]
  (min, avg, max) = (2622.554, 2673.835, 2715.763), stdev = 28.242
  CI (99.9%): [2643.643, 2704.028] (assumes normal distribution)


# Run complete. Total time: 02:20:21

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                             (size)  (stride)  Mode  Cnt      Score     Error  Units
ArrayCopyBenchmark.array_clone         16384       256  avgt   15   1232.840 ±   2.695  ns/op
ArrayCopyBenchmark.array_clone         16384       512  avgt   15   1235.299 ±   2.851  ns/op
ArrayCopyBenchmark.array_clone         32768       256  avgt   15   2488.173 ±  22.484  ns/op
ArrayCopyBenchmark.array_clone         32768       512  avgt   15   2481.961 ±  12.769  ns/op
ArrayCopyBenchmark.arrays_compare      16384       256  avgt   15    366.307 ±  19.208  ns/op
ArrayCopyBenchmark.arrays_compare      16384       512  avgt   15    331.265 ±  14.946  ns/op
ArrayCopyBenchmark.arrays_compare      32768       256  avgt   15   1017.000 ±  38.733  ns/op
ArrayCopyBenchmark.arrays_compare      32768       512  avgt   15   1023.446 ±  30.172  ns/op
ArrayCopyBenchmark.arrays_copyOf       16384       256  avgt   15   2116.228 ±  11.169  ns/op
ArrayCopyBenchmark.arrays_copyOf       16384       512  avgt   15   2069.517 ±   5.260  ns/op
ArrayCopyBenchmark.arrays_copyOf       32768       256  avgt   15   4199.829 ±  19.096  ns/op
ArrayCopyBenchmark.arrays_copyOf       32768       512  avgt   15   4131.083 ±  73.372  ns/op
ArrayCopyBenchmark.arrays_equals       16384       256  avgt   15    319.732 ±  10.185  ns/op
ArrayCopyBenchmark.arrays_equals       16384       512  avgt   15    324.989 ±   5.542  ns/op
ArrayCopyBenchmark.arrays_equals       32768       256  avgt   15    995.568 ±  35.905  ns/op
ArrayCopyBenchmark.arrays_equals       32768       512  avgt   15   1013.154 ±  45.514  ns/op
ArrayCopyBenchmark.arrays_mismatch     16384       256  avgt   15    343.567 ±  17.435  ns/op
ArrayCopyBenchmark.arrays_mismatch     16384       512  avgt   15    340.207 ±  13.522  ns/op
ArrayCopyBenchmark.arrays_mismatch     32768       256  avgt   15   1020.919 ±  32.608  ns/op
ArrayCopyBenchmark.arrays_mismatch     32768       512  avgt   15   1008.470 ±  27.884  ns/op
ArrayCopyBenchmark.manual_array_copy   16384       256  avgt   15  10429.515 ±  72.103  ns/op
ArrayCopyBenchmark.manual_array_copy   16384       512  avgt   15  10158.027 ±  73.098  ns/op
ArrayCopyBenchmark.manual_array_copy   32768       256  avgt   15  20951.845 ± 187.662  ns/op
ArrayCopyBenchmark.manual_array_copy   32768       512  avgt   15  20470.217 ± 198.902  ns/op
ArrayCopyBenchmark.system_array_copy   16384       256  avgt   15   1195.135 ±  10.554  ns/op
ArrayCopyBenchmark.system_array_copy   16384       512  avgt   15   1132.858 ±  39.216  ns/op
ArrayCopyBenchmark.system_array_copy   32768       256  avgt   15   2815.939 ±  16.127  ns/op
ArrayCopyBenchmark.system_array_copy   32768       512  avgt   15   2673.835 ±  30.193  ns/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_graal_jit/ArrayCopyBenchmark.json
Running java -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler -jar benchmarks/target/benchmarks.jar .*ListToArrayBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_graal_jit/ListToArrayBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ListToArrayBenchmark.defensive_copy
# Parameters: (size = 128)

# Run progress: 0.00% complete, ETA 00:50:00
# Fork: 1 of 3
# Warmup Iteration   1: 0.067 us/op
# Warmup Iteration   2: 0.058 us/op
# Warmup Iteration   3: 0.057 us/op
# Warmup Iteration   4: 0.057 us/op
# Warmup Iteration   5: 0.057 us/op
Iteration   1: 0.057 us/op
Iteration   2: 0.057 us/op
Iteration   3: 0.057 us/op
Iteration   4: 0.057 us/op
Iteration   5: 0.057 us/op

# Run progress: 3.33% complete, ETA 00:48:30
# Fork: 2 of 3
# Warmup Iteration   1: 0.062 us/op
# Warmup Iteration   2: 0.057 us/op
# Warmup Iteration   3: 0.056 us/op
# Warmup Iteration   4: 0.056 us/op
# Warmup Iteration   5: 0.056 us/op
Iteration   1: 0.056 us/op
Iteration   2: 0.056 us/op
Iteration   3: 0.056 us/op
Iteration   4: 0.058 us/op
Iteration   5: 0.059 us/op

# Run progress: 6.67% complete, ETA 00:46:48
# Fork: 3 of 3
# Warmup Iteration   1: 0.063 us/op
# Warmup Iteration   2: 0.057 us/op
# Warmup Iteration   3: 0.057 us/op
# Warmup Iteration   4: 0.057 us/op
# Warmup Iteration   5: 0.057 us/op
Iteration   1: 0.057 us/op
Iteration   2: 0.058 us/op
Iteration   3: 0.057 us/op
Iteration   4: 0.056 us/op
Iteration   5: 0.057 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.ListToArrayBenchmark.defensive_copy":
  0.057 ±(99.9%) 0.001 us/op [Average]
  (min, avg, max) = (0.056, 0.057, 0.059), stdev = 0.001
  CI (99.9%): [0.056, 0.058] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ListToArrayBenchmark.defensive_copy
# Parameters: (size = 8192)

# Run progress: 10.00% complete, ETA 00:45:07
# Fork: 1 of 3
# Warmup Iteration   1: 2.866 us/op
# Warmup Iteration   2: 2.580 us/op
# Warmup Iteration   3: 2.559 us/op
# Warmup Iteration   4: 2.559 us/op
# Warmup Iteration   5: 2.571 us/op
Iteration   1: 2.593 us/op
Iteration   2: 2.586 us/op
Iteration   3: 2.585 us/op
Iteration   4: 2.563 us/op
Iteration   5: 2.584 us/op

# Run progress: 13.33% complete, ETA 00:43:27
# Fork: 2 of 3
# Warmup Iteration   1: 2.936 us/op
# Warmup Iteration   2: 2.597 us/op
# Warmup Iteration   3: 2.576 us/op
# Warmup Iteration   4: 2.585 us/op
# Warmup Iteration   5: 2.562 us/op
Iteration   1: 2.582 us/op
Iteration   2: 2.572 us/op
Iteration   3: 2.597 us/op
Iteration   4: 2.558 us/op
Iteration   5: 2.630 us/op

# Run progress: 16.67% complete, ETA 00:41:47
# Fork: 3 of 3
# Warmup Iteration   1: 2.949 us/op
# Warmup Iteration   2: 2.571 us/op
# Warmup Iteration   3: 2.552 us/op
# Warmup Iteration   4: 2.546 us/op
# Warmup Iteration   5: 2.551 us/op
Iteration   1: 2.559 us/op
Iteration   2: 2.553 us/op
Iteration   3: 2.550 us/op
Iteration   4: 2.559 us/op
Iteration   5: 2.543 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.ListToArrayBenchmark.defensive_copy":
  2.574 ±(99.9%) 0.024 us/op [Average]
  (min, avg, max) = (2.543, 2.574, 2.630), stdev = 0.023
  CI (99.9%): [2.550, 2.599] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ListToArrayBenchmark.sized_array_fixed_size
# Parameters: (size = 128)

# Run progress: 20.00% complete, ETA 00:40:06
# Fork: 1 of 3
# Warmup Iteration   1: 0.191 us/op
# Warmup Iteration   2: 0.181 us/op
# Warmup Iteration   3: 0.171 us/op
# Warmup Iteration   4: 0.169 us/op
# Warmup Iteration   5: 0.169 us/op
Iteration   1: 0.169 us/op
Iteration   2: 0.171 us/op
Iteration   3: 0.168 us/op
Iteration   4: 0.167 us/op
Iteration   5: 0.169 us/op

# Run progress: 23.33% complete, ETA 00:38:26
# Fork: 2 of 3
# Warmup Iteration   1: 0.191 us/op
# Warmup Iteration   2: 0.176 us/op
# Warmup Iteration   3: 0.168 us/op
# Warmup Iteration   4: 0.166 us/op
# Warmup Iteration   5: 0.168 us/op
Iteration   1: 0.168 us/op
Iteration   2: 0.169 us/op
Iteration   3: 0.167 us/op
Iteration   4: 0.168 us/op
Iteration   5: 0.167 us/op

# Run progress: 26.67% complete, ETA 00:36:46
# Fork: 3 of 3
# Warmup Iteration   1: 0.189 us/op
# Warmup Iteration   2: 0.177 us/op
# Warmup Iteration   3: 0.169 us/op
# Warmup Iteration   4: 0.169 us/op
# Warmup Iteration   5: 0.167 us/op
Iteration   1: 0.166 us/op
Iteration   2: 0.166 us/op
Iteration   3: 0.166 us/op
Iteration   4: 0.165 us/op
Iteration   5: 0.165 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.ListToArrayBenchmark.sized_array_fixed_size":
  0.168 ±(99.9%) 0.002 us/op [Average]
  (min, avg, max) = (0.165, 0.168, 0.171), stdev = 0.002
  CI (99.9%): [0.166, 0.169] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ListToArrayBenchmark.sized_array_fixed_size
# Parameters: (size = 8192)

# Run progress: 30.00% complete, ETA 00:35:05
# Fork: 1 of 3
# Warmup Iteration   1: 10.646 us/op
# Warmup Iteration   2: 9.816 us/op
# Warmup Iteration   3: 9.997 us/op
# Warmup Iteration   4: 9.950 us/op
# Warmup Iteration   5: 9.910 us/op
Iteration   1: 9.910 us/op
Iteration   2: 9.887 us/op
Iteration   3: 9.890 us/op
Iteration   4: 9.883 us/op
Iteration   5: 9.851 us/op

# Run progress: 33.33% complete, ETA 00:33:25
# Fork: 2 of 3
# Warmup Iteration   1: 10.750 us/op
# Warmup Iteration   2: 9.765 us/op
# Warmup Iteration   3: 9.898 us/op
# Warmup Iteration   4: 9.912 us/op
# Warmup Iteration   5: 9.954 us/op
Iteration   1: 9.876 us/op
Iteration   2: 9.936 us/op
Iteration   3: 9.868 us/op
Iteration   4: 9.911 us/op
Iteration   5: 9.932 us/op

# Run progress: 36.67% complete, ETA 00:31:45
# Fork: 3 of 3
# Warmup Iteration   1: 10.511 us/op
# Warmup Iteration   2: 9.851 us/op
# Warmup Iteration   3: 9.905 us/op
# Warmup Iteration   4: 9.830 us/op
# Warmup Iteration   5: 9.931 us/op
Iteration   1: 9.823 us/op
Iteration   2: 9.815 us/op
Iteration   3: 10.011 us/op
Iteration   4: 9.909 us/op
Iteration   5: 9.887 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.ListToArrayBenchmark.sized_array_fixed_size":
  9.893 ±(99.9%) 0.051 us/op [Average]
  (min, avg, max) = (9.815, 9.893, 10.011), stdev = 0.048
  CI (99.9%): [9.842, 9.944] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ListToArrayBenchmark.sized_array_from_list
# Parameters: (size = 128)

# Run progress: 40.00% complete, ETA 00:30:04
# Fork: 1 of 3
# Warmup Iteration   1: 0.180 us/op
# Warmup Iteration   2: 0.196 us/op
# Warmup Iteration   3: 0.169 us/op
# Warmup Iteration   4: 0.168 us/op
# Warmup Iteration   5: 0.168 us/op
Iteration   1: 0.167 us/op
Iteration   2: 0.168 us/op
Iteration   3: 0.169 us/op
Iteration   4: 0.167 us/op
Iteration   5: 0.169 us/op

# Run progress: 43.33% complete, ETA 00:28:24
# Fork: 2 of 3
# Warmup Iteration   1: 0.191 us/op
# Warmup Iteration   2: 0.196 us/op
# Warmup Iteration   3: 0.177 us/op
# Warmup Iteration   4: 0.178 us/op
# Warmup Iteration   5: 0.177 us/op
Iteration   1: 0.178 us/op
Iteration   2: 0.176 us/op
Iteration   3: 0.176 us/op
Iteration   4: 0.180 us/op
Iteration   5: 0.179 us/op

# Run progress: 46.67% complete, ETA 00:26:44
# Fork: 3 of 3
# Warmup Iteration   1: 0.181 us/op
# Warmup Iteration   2: 0.184 us/op
# Warmup Iteration   3: 0.169 us/op
# Warmup Iteration   4: 0.167 us/op
# Warmup Iteration   5: 0.167 us/op
Iteration   1: 0.167 us/op
Iteration   2: 0.167 us/op
Iteration   3: 0.170 us/op
Iteration   4: 0.168 us/op
Iteration   5: 0.168 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.ListToArrayBenchmark.sized_array_from_list":
  0.171 ±(99.9%) 0.005 us/op [Average]
  (min, avg, max) = (0.167, 0.171, 0.180), stdev = 0.005
  CI (99.9%): [0.166, 0.176] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ListToArrayBenchmark.sized_array_from_list
# Parameters: (size = 8192)

# Run progress: 50.00% complete, ETA 00:25:03
# Fork: 1 of 3
# Warmup Iteration   1: 10.481 us/op
# Warmup Iteration   2: 9.893 us/op
# Warmup Iteration   3: 9.777 us/op
# Warmup Iteration   4: 9.774 us/op
# Warmup Iteration   5: 9.694 us/op
Iteration   1: 9.739 us/op
Iteration   2: 9.644 us/op
Iteration   3: 9.748 us/op
Iteration   4: 9.755 us/op
Iteration   5: 9.685 us/op

# Run progress: 53.33% complete, ETA 00:23:23
# Fork: 2 of 3
# Warmup Iteration   1: 10.536 us/op
# Warmup Iteration   2: 9.797 us/op
# Warmup Iteration   3: 9.754 us/op
# Warmup Iteration   4: 9.776 us/op
# Warmup Iteration   5: 9.770 us/op
Iteration   1: 9.668 us/op
Iteration   2: 9.758 us/op
Iteration   3: 9.751 us/op
Iteration   4: 9.821 us/op
Iteration   5: 9.731 us/op

# Run progress: 56.67% complete, ETA 00:21:43
# Fork: 3 of 3
# Warmup Iteration   1: 10.405 us/op
# Warmup Iteration   2: 9.711 us/op
# Warmup Iteration   3: 9.685 us/op
# Warmup Iteration   4: 9.706 us/op
# Warmup Iteration   5: 9.638 us/op
Iteration   1: 9.687 us/op
Iteration   2: 9.672 us/op
Iteration   3: 9.708 us/op
Iteration   4: 9.668 us/op
Iteration   5: 9.609 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.ListToArrayBenchmark.sized_array_from_list":
  9.710 ±(99.9%) 0.058 us/op [Average]
  (min, avg, max) = (9.609, 9.710, 9.821), stdev = 0.055
  CI (99.9%): [9.651, 9.768] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ListToArrayBenchmark.to_array
# Parameters: (size = 128)

# Run progress: 60.00% complete, ETA 00:20:03
# Fork: 1 of 3
# Warmup Iteration   1: 0.055 us/op
# Warmup Iteration   2: 0.052 us/op
# Warmup Iteration   3: 0.052 us/op
# Warmup Iteration   4: 0.052 us/op
# Warmup Iteration   5: 0.052 us/op
Iteration   1: 0.051 us/op
Iteration   2: 0.052 us/op
Iteration   3: 0.052 us/op
Iteration   4: 0.052 us/op
Iteration   5: 0.052 us/op

# Run progress: 63.33% complete, ETA 00:18:22
# Fork: 2 of 3
# Warmup Iteration   1: 0.056 us/op
# Warmup Iteration   2: 0.052 us/op
# Warmup Iteration   3: 0.052 us/op
# Warmup Iteration   4: 0.052 us/op
# Warmup Iteration   5: 0.053 us/op
Iteration   1: 0.052 us/op
Iteration   2: 0.052 us/op
Iteration   3: 0.052 us/op
Iteration   4: 0.052 us/op
Iteration   5: 0.052 us/op

# Run progress: 66.67% complete, ETA 00:16:42
# Fork: 3 of 3
# Warmup Iteration   1: 0.057 us/op
# Warmup Iteration   2: 0.052 us/op
# Warmup Iteration   3: 0.053 us/op
# Warmup Iteration   4: 0.052 us/op
# Warmup Iteration   5: 0.052 us/op
Iteration   1: 0.052 us/op
Iteration   2: 0.052 us/op
Iteration   3: 0.052 us/op
Iteration   4: 0.052 us/op
Iteration   5: 0.052 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.ListToArrayBenchmark.to_array":
  0.052 ±(99.9%) 0.001 us/op [Average]
  (min, avg, max) = (0.051, 0.052, 0.052), stdev = 0.001
  CI (99.9%): [0.052, 0.052] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ListToArrayBenchmark.to_array
# Parameters: (size = 8192)

# Run progress: 70.00% complete, ETA 00:15:02
# Fork: 1 of 3
# Warmup Iteration   1: 2.820 us/op
# Warmup Iteration   2: 2.517 us/op
# Warmup Iteration   3: 2.504 us/op
# Warmup Iteration   4: 2.505 us/op
# Warmup Iteration   5: 2.508 us/op
Iteration   1: 2.508 us/op
Iteration   2: 2.512 us/op
Iteration   3: 2.515 us/op
Iteration   4: 2.505 us/op
Iteration   5: 2.515 us/op

# Run progress: 73.33% complete, ETA 00:13:22
# Fork: 2 of 3
# Warmup Iteration   1: 2.864 us/op
# Warmup Iteration   2: 2.545 us/op
# Warmup Iteration   3: 2.522 us/op
# Warmup Iteration   4: 2.525 us/op
# Warmup Iteration   5: 2.522 us/op
Iteration   1: 2.516 us/op
Iteration   2: 2.530 us/op
Iteration   3: 2.516 us/op
Iteration   4: 2.527 us/op
Iteration   5: 2.524 us/op

# Run progress: 76.67% complete, ETA 00:11:41
# Fork: 3 of 3
# Warmup Iteration   1: 2.842 us/op
# Warmup Iteration   2: 2.530 us/op
# Warmup Iteration   3: 2.532 us/op
# Warmup Iteration   4: 2.541 us/op
# Warmup Iteration   5: 2.523 us/op
Iteration   1: 2.514 us/op
Iteration   2: 2.509 us/op
Iteration   3: 2.513 us/op
Iteration   4: 2.514 us/op
Iteration   5: 2.543 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.ListToArrayBenchmark.to_array":
  2.517 ±(99.9%) 0.011 us/op [Average]
  (min, avg, max) = (2.505, 2.517, 2.543), stdev = 0.010
  CI (99.9%): [2.507, 2.528] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ListToArrayBenchmark.zero_sized_array
# Parameters: (size = 128)

# Run progress: 80.00% complete, ETA 00:10:01
# Fork: 1 of 3
# Warmup Iteration   1: 0.201 us/op
# Warmup Iteration   2: 0.195 us/op
# Warmup Iteration   3: 0.199 us/op
# Warmup Iteration   4: 0.198 us/op
# Warmup Iteration   5: 0.197 us/op
Iteration   1: 0.197 us/op
Iteration   2: 0.196 us/op
Iteration   3: 0.195 us/op
Iteration   4: 0.194 us/op
Iteration   5: 0.194 us/op

# Run progress: 83.33% complete, ETA 00:08:21
# Fork: 2 of 3
# Warmup Iteration   1: 0.198 us/op
# Warmup Iteration   2: 0.181 us/op
# Warmup Iteration   3: 0.181 us/op
# Warmup Iteration   4: 0.181 us/op
# Warmup Iteration   5: 0.180 us/op
Iteration   1: 0.181 us/op
Iteration   2: 0.183 us/op
Iteration   3: 0.181 us/op
Iteration   4: 0.181 us/op
Iteration   5: 0.180 us/op

# Run progress: 86.67% complete, ETA 00:06:41
# Fork: 3 of 3
# Warmup Iteration   1: 0.181 us/op
# Warmup Iteration   2: 0.190 us/op
# Warmup Iteration   3: 0.192 us/op
# Warmup Iteration   4: 0.189 us/op
# Warmup Iteration   5: 0.191 us/op
Iteration   1: 0.188 us/op
Iteration   2: 0.189 us/op
Iteration   3: 0.190 us/op
Iteration   4: 0.189 us/op
Iteration   5: 0.189 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.ListToArrayBenchmark.zero_sized_array":
  0.189 ±(99.9%) 0.006 us/op [Average]
  (min, avg, max) = (0.180, 0.189, 0.197), stdev = 0.006
  CI (99.9%): [0.182, 0.195] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ListToArrayBenchmark.zero_sized_array
# Parameters: (size = 8192)

# Run progress: 90.00% complete, ETA 00:05:00
# Fork: 1 of 3
# Warmup Iteration   1: 10.747 us/op
# Warmup Iteration   2: 9.907 us/op
# Warmup Iteration   3: 9.839 us/op
# Warmup Iteration   4: 9.845 us/op
# Warmup Iteration   5: 9.903 us/op
Iteration   1: 9.755 us/op
Iteration   2: 9.827 us/op
Iteration   3: 9.795 us/op
Iteration   4: 9.816 us/op
Iteration   5: 9.870 us/op

# Run progress: 93.33% complete, ETA 00:03:20
# Fork: 2 of 3
# Warmup Iteration   1: 10.499 us/op
# Warmup Iteration   2: 9.909 us/op
# Warmup Iteration   3: 9.770 us/op
# Warmup Iteration   4: 9.743 us/op
# Warmup Iteration   5: 9.801 us/op
Iteration   1: 9.783 us/op
Iteration   2: 9.794 us/op
Iteration   3: 9.799 us/op
Iteration   4: 9.793 us/op
Iteration   5: 9.822 us/op

# Run progress: 96.67% complete, ETA 00:01:40
# Fork: 3 of 3
# Warmup Iteration   1: 10.516 us/op
# Warmup Iteration   2: 9.683 us/op
# Warmup Iteration   3: 9.652 us/op
# Warmup Iteration   4: 9.666 us/op
# Warmup Iteration   5: 9.697 us/op
Iteration   1: 9.708 us/op
Iteration   2: 9.676 us/op
Iteration   3: 9.625 us/op
Iteration   4: 9.706 us/op
Iteration   5: 9.627 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.ListToArrayBenchmark.zero_sized_array":
  9.760 ±(99.9%) 0.080 us/op [Average]
  (min, avg, max) = (9.625, 9.760, 9.870), stdev = 0.075
  CI (99.9%): [9.680, 9.839] (assumes normal distribution)


# Run complete. Total time: 00:50:07

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    (size)  Mode  Cnt  Score    Error  Units
ListToArrayBenchmark.defensive_copy             128  avgt   15  0.057 ±  0.001  us/op
ListToArrayBenchmark.defensive_copy            8192  avgt   15  2.574 ±  0.024  us/op
ListToArrayBenchmark.sized_array_fixed_size     128  avgt   15  0.168 ±  0.002  us/op
ListToArrayBenchmark.sized_array_fixed_size    8192  avgt   15  9.893 ±  0.051  us/op
ListToArrayBenchmark.sized_array_from_list      128  avgt   15  0.171 ±  0.005  us/op
ListToArrayBenchmark.sized_array_from_list     8192  avgt   15  9.710 ±  0.058  us/op
ListToArrayBenchmark.to_array                   128  avgt   15  0.052 ±  0.001  us/op
ListToArrayBenchmark.to_array                  8192  avgt   15  2.517 ±  0.011  us/op
ListToArrayBenchmark.zero_sized_array           128  avgt   15  0.189 ±  0.006  us/op
ListToArrayBenchmark.zero_sized_array          8192  avgt   15  9.760 ±  0.080  us/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_graal_jit/ListToArrayBenchmark.json
Running java -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler -jar benchmarks/target/benchmarks.jar .*IfConditionalBranchBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_graal_jit/IfConditionalBranchBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.IfConditionalBranchBenchmark.branchless_baseline
# Parameters: (thresholdLimit = 4096)

# Run progress: 0.00% complete, ETA 00:15:00
# Fork: 1 of 3
# Warmup Iteration   1: 6857.134 ns/op
# Warmup Iteration   2: 6160.677 ns/op
# Warmup Iteration   3: 6099.750 ns/op
# Warmup Iteration   4: 6074.492 ns/op
# Warmup Iteration   5: 6075.059 ns/op
Iteration   1: 6077.325 ns/op
Iteration   2: 6203.653 ns/op
Iteration   3: 6054.003 ns/op
Iteration   4: 6059.855 ns/op
Iteration   5: 6045.876 ns/op

# Run progress: 11.11% complete, ETA 00:13:22
# Fork: 2 of 3
# Warmup Iteration   1: 6387.039 ns/op
# Warmup Iteration   2: 6048.747 ns/op
# Warmup Iteration   3: 6011.176 ns/op
# Warmup Iteration   4: 6015.756 ns/op
# Warmup Iteration   5: 6014.690 ns/op
Iteration   1: 6016.301 ns/op
Iteration   2: 6011.762 ns/op
Iteration   3: 6019.840 ns/op
Iteration   4: 6010.042 ns/op
Iteration   5: 6006.673 ns/op

# Run progress: 22.22% complete, ETA 00:11:42
# Fork: 3 of 3
# Warmup Iteration   1: 6695.778 ns/op
# Warmup Iteration   2: 6250.643 ns/op
# Warmup Iteration   3: 6182.950 ns/op
# Warmup Iteration   4: 6173.247 ns/op
# Warmup Iteration   5: 6170.328 ns/op
Iteration   1: 6164.781 ns/op
Iteration   2: 6015.131 ns/op
Iteration   3: 6010.997 ns/op
Iteration   4: 6005.187 ns/op
Iteration   5: 6006.905 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.IfConditionalBranchBenchmark.branchless_baseline":
  6047.222 ±(99.9%) 64.606 ns/op [Average]
  (min, avg, max) = (6005.187, 6047.222, 6203.653), stdev = 60.432
  CI (99.9%): [5982.616, 6111.828] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.IfConditionalBranchBenchmark.predictable_branch
# Parameters: (thresholdLimit = 4096)

# Run progress: 33.33% complete, ETA 00:10:01
# Fork: 1 of 3
# Warmup Iteration   1: 9764.509 ns/op
# Warmup Iteration   2: 9031.814 ns/op
# Warmup Iteration   3: 8998.396 ns/op
# Warmup Iteration   4: 8974.498 ns/op
# Warmup Iteration   5: 8962.248 ns/op
Iteration   1: 8977.286 ns/op
Iteration   2: 8974.016 ns/op
Iteration   3: 8971.619 ns/op
Iteration   4: 8689.460 ns/op
Iteration   5: 8516.349 ns/op

# Run progress: 44.44% complete, ETA 00:08:21
# Fork: 2 of 3
# Warmup Iteration   1: 9487.148 ns/op
# Warmup Iteration   2: 8906.564 ns/op
# Warmup Iteration   3: 9029.009 ns/op
# Warmup Iteration   4: 9012.420 ns/op
# Warmup Iteration   5: 9004.578 ns/op
Iteration   1: 8512.827 ns/op
Iteration   2: 9007.767 ns/op
Iteration   3: 8994.681 ns/op
Iteration   4: 8991.501 ns/op
Iteration   5: 8968.253 ns/op

# Run progress: 55.56% complete, ETA 00:06:41
# Fork: 3 of 3
# Warmup Iteration   1: 9368.333 ns/op
# Warmup Iteration   2: 9010.352 ns/op
# Warmup Iteration   3: 8979.186 ns/op
# Warmup Iteration   4: 8969.793 ns/op
# Warmup Iteration   5: 8946.572 ns/op
Iteration   1: 8943.786 ns/op
Iteration   2: 8942.296 ns/op
Iteration   3: 8929.474 ns/op
Iteration   4: 8933.870 ns/op
Iteration   5: 8931.133 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.IfConditionalBranchBenchmark.predictable_branch":
  8885.621 ±(99.9%) 179.616 ns/op [Average]
  (min, avg, max) = (8512.827, 8885.621, 9007.767), stdev = 168.013
  CI (99.9%): [8706.005, 9065.238] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.IfConditionalBranchBenchmark.unpredictable_branch
# Parameters: (thresholdLimit = 4096)

# Run progress: 66.67% complete, ETA 00:05:00
# Fork: 1 of 3
# Warmup Iteration   1: 56482.502 ns/op
# Warmup Iteration   2: 53647.053 ns/op
# Warmup Iteration   3: 53548.934 ns/op
# Warmup Iteration   4: 53430.631 ns/op
# Warmup Iteration   5: 53682.137 ns/op
Iteration   1: 53541.457 ns/op
Iteration   2: 53498.161 ns/op
Iteration   3: 53483.562 ns/op
Iteration   4: 53510.591 ns/op
Iteration   5: 53556.550 ns/op

# Run progress: 77.78% complete, ETA 00:03:20
# Fork: 2 of 3
# Warmup Iteration   1: 56565.708 ns/op
# Warmup Iteration   2: 53770.495 ns/op
# Warmup Iteration   3: 53595.500 ns/op
# Warmup Iteration   4: 53390.226 ns/op
# Warmup Iteration   5: 53497.911 ns/op
Iteration   1: 53358.579 ns/op
Iteration   2: 53268.278 ns/op
Iteration   3: 53299.035 ns/op
Iteration   4: 53445.212 ns/op
Iteration   5: 53628.070 ns/op

# Run progress: 88.89% complete, ETA 00:01:40
# Fork: 3 of 3
# Warmup Iteration   1: 56711.027 ns/op
# Warmup Iteration   2: 53730.846 ns/op
# Warmup Iteration   3: 53553.412 ns/op
# Warmup Iteration   4: 53443.326 ns/op
# Warmup Iteration   5: 53571.678 ns/op
Iteration   1: 53563.744 ns/op
Iteration   2: 53572.553 ns/op
Iteration   3: 53455.585 ns/op
Iteration   4: 53313.660 ns/op
Iteration   5: 53512.865 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.IfConditionalBranchBenchmark.unpredictable_branch":
  53467.193 ±(99.9%) 117.399 ns/op [Average]
  (min, avg, max) = (53268.278, 53467.193, 53628.070), stdev = 109.815
  CI (99.9%): [53349.794, 53584.593] (assumes normal distribution)


# Run complete. Total time: 00:15:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                          (thresholdLimit)  Mode  Cnt      Score     Error  Units
IfConditionalBranchBenchmark.branchless_baseline               4096  avgt   15   6047.222 ±  64.606  ns/op
IfConditionalBranchBenchmark.predictable_branch                4096  avgt   15   8885.621 ± 179.616  ns/op
IfConditionalBranchBenchmark.unpredictable_branch              4096  avgt   15  53467.193 ± 117.399  ns/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_graal_jit/IfConditionalBranchBenchmark.json
Running java -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler -jar benchmarks/target/benchmarks.jar .*NullChecksBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_graal_jit/NullChecksBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.NullChecksBenchmark.explicit_null_check
# Parameters: (size = 1024, upperNullThreshold = 0.0)

# Run progress: 0.00% complete, ETA 00:30:00
# Fork: 1 of 3
# Warmup Iteration   1: 2599.059 ns/op
# Warmup Iteration   2: 2260.318 ns/op
# Warmup Iteration   3: 2385.804 ns/op
# Warmup Iteration   4: 2380.159 ns/op
# Warmup Iteration   5: 2365.535 ns/op
Iteration   1: 2358.145 ns/op
Iteration   2: 2238.591 ns/op
Iteration   3: 2371.145 ns/op
Iteration   4: 2364.749 ns/op
Iteration   5: 2361.059 ns/op

# Run progress: 5.56% complete, ETA 00:28:26
# Fork: 2 of 3
# Warmup Iteration   1: 2520.478 ns/op
# Warmup Iteration   2: 2374.046 ns/op
# Warmup Iteration   3: 2365.554 ns/op
# Warmup Iteration   4: 2363.000 ns/op
# Warmup Iteration   5: 2360.978 ns/op
Iteration   1: 2354.810 ns/op
Iteration   2: 2356.012 ns/op
Iteration   3: 2245.272 ns/op
Iteration   4: 2251.439 ns/op
Iteration   5: 2248.506 ns/op

# Run progress: 11.11% complete, ETA 00:26:44
# Fork: 3 of 3
# Warmup Iteration   1: 2516.440 ns/op
# Warmup Iteration   2: 2386.028 ns/op
# Warmup Iteration   3: 2375.999 ns/op
# Warmup Iteration   4: 2373.716 ns/op
# Warmup Iteration   5: 2365.855 ns/op
Iteration   1: 2363.496 ns/op
Iteration   2: 2363.537 ns/op
Iteration   3: 2361.923 ns/op
Iteration   4: 2309.874 ns/op
Iteration   5: 2244.838 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.NullChecksBenchmark.explicit_null_check":
  2319.560 ±(99.9%) 59.650 ns/op [Average]
  (min, avg, max) = (2238.591, 2319.560, 2371.145), stdev = 55.796
  CI (99.9%): [2259.910, 2379.210] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.NullChecksBenchmark.explicit_null_check
# Parameters: (size = 1024, upperNullThreshold = 0.5)

# Run progress: 16.67% complete, ETA 00:25:04
# Fork: 1 of 3
# Warmup Iteration   1: 641401.054 ns/op
# Warmup Iteration   2: 614962.871 ns/op
# Warmup Iteration   3: 605362.621 ns/op
# Warmup Iteration   4: 597488.347 ns/op
# Warmup Iteration   5: 582263.737 ns/op
Iteration   1: 594636.135 ns/op
Iteration   2: 590327.513 ns/op
Iteration   3: 581900.528 ns/op
Iteration   4: 588669.262 ns/op
Iteration   5: 580247.992 ns/op

# Run progress: 22.22% complete, ETA 00:23:23
# Fork: 2 of 3
# Warmup Iteration   1: 666813.985 ns/op
# Warmup Iteration   2: 624816.466 ns/op
# Warmup Iteration   3: 629598.235 ns/op
# Warmup Iteration   4: 632312.179 ns/op
# Warmup Iteration   5: 601316.092 ns/op
Iteration   1: 595389.081 ns/op
Iteration   2: 597031.243 ns/op
Iteration   3: 604939.775 ns/op
Iteration   4: 600307.762 ns/op
Iteration   5: 607270.199 ns/op

# Run progress: 27.78% complete, ETA 00:21:43
# Fork: 3 of 3
# Warmup Iteration   1: 699693.047 ns/op
# Warmup Iteration   2: 655367.683 ns/op
# Warmup Iteration   3: 656383.609 ns/op
# Warmup Iteration   4: 657186.385 ns/op
# Warmup Iteration   5: 646562.695 ns/op
Iteration   1: 616794.791 ns/op
Iteration   2: 638245.254 ns/op
Iteration   3: 614242.549 ns/op
Iteration   4: 617830.811 ns/op
Iteration   5: 630083.823 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.NullChecksBenchmark.explicit_null_check":
  603861.115 ±(99.9%) 18121.937 ns/op [Average]
  (min, avg, max) = (580247.992, 603861.115, 638245.254), stdev = 16951.271
  CI (99.9%): [585739.178, 621983.051] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.NullChecksBenchmark.explicit_null_check
# Parameters: (size = 1024, upperNullThreshold = 1.0)

# Run progress: 33.33% complete, ETA 00:20:03
# Fork: 1 of 3
# Warmup Iteration   1: 1296118.744 ns/op
# Warmup Iteration   2: 1245511.862 ns/op
# Warmup Iteration   3: 1214859.292 ns/op
# Warmup Iteration   4: 1208173.463 ns/op
# Warmup Iteration   5: 1251873.356 ns/op
Iteration   1: 1204617.597 ns/op
Iteration   2: 1220976.506 ns/op
Iteration   3: 1243887.116 ns/op
Iteration   4: 1243788.633 ns/op
Iteration   5: 1234902.873 ns/op

# Run progress: 38.89% complete, ETA 00:18:22
# Fork: 2 of 3
# Warmup Iteration   1: 1326624.656 ns/op
# Warmup Iteration   2: 1288621.883 ns/op
# Warmup Iteration   3: 1271856.722 ns/op
# Warmup Iteration   4: 1256236.575 ns/op
# Warmup Iteration   5: 1298603.650 ns/op
Iteration   1: 1294946.209 ns/op
Iteration   2: 1262120.911 ns/op
Iteration   3: 1255229.946 ns/op
Iteration   4: 1285458.310 ns/op
Iteration   5: 1286375.929 ns/op

# Run progress: 44.44% complete, ETA 00:16:42
# Fork: 3 of 3
# Warmup Iteration   1: 1306495.038 ns/op
# Warmup Iteration   2: 1256624.376 ns/op
# Warmup Iteration   3: 1272341.667 ns/op
# Warmup Iteration   4: 1235690.559 ns/op
# Warmup Iteration   5: 1255429.732 ns/op
Iteration   1: 1225187.005 ns/op
Iteration   2: 1258846.488 ns/op
Iteration   3: 1277277.842 ns/op
Iteration   4: 1264098.317 ns/op
Iteration   5: 1250077.296 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.NullChecksBenchmark.explicit_null_check":
  1253852.732 ±(99.9%) 27693.873 ns/op [Average]
  (min, avg, max) = (1204617.597, 1253852.732, 1294946.209), stdev = 25904.866
  CI (99.9%): [1226158.859, 1281546.605] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.NullChecksBenchmark.implicit_null_check
# Parameters: (size = 1024, upperNullThreshold = 0.0)

# Run progress: 50.00% complete, ETA 00:15:02
# Fork: 1 of 3
# Warmup Iteration   1: 2527.167 ns/op
# Warmup Iteration   2: 2391.870 ns/op
# Warmup Iteration   3: 2376.785 ns/op
# Warmup Iteration   4: 2375.079 ns/op
# Warmup Iteration   5: 2374.048 ns/op
Iteration   1: 2369.708 ns/op
Iteration   2: 2371.220 ns/op
Iteration   3: 2373.846 ns/op
Iteration   4: 2370.672 ns/op
Iteration   5: 2368.038 ns/op

# Run progress: 55.56% complete, ETA 00:13:22
# Fork: 2 of 3
# Warmup Iteration   1: 2517.614 ns/op
# Warmup Iteration   2: 2317.142 ns/op
# Warmup Iteration   3: 2309.911 ns/op
# Warmup Iteration   4: 2312.045 ns/op
# Warmup Iteration   5: 2313.349 ns/op
Iteration   1: 2313.641 ns/op
Iteration   2: 2368.439 ns/op
Iteration   3: 2248.268 ns/op
Iteration   4: 2249.609 ns/op
Iteration   5: 2324.928 ns/op

# Run progress: 61.11% complete, ETA 00:11:41
# Fork: 3 of 3
# Warmup Iteration   1: 2399.731 ns/op
# Warmup Iteration   2: 2250.298 ns/op
# Warmup Iteration   3: 2243.190 ns/op
# Warmup Iteration   4: 2245.516 ns/op
# Warmup Iteration   5: 2243.874 ns/op
Iteration   1: 2243.435 ns/op
Iteration   2: 2243.741 ns/op
Iteration   3: 2245.575 ns/op
Iteration   4: 2250.626 ns/op
Iteration   5: 2252.601 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.NullChecksBenchmark.implicit_null_check":
  2306.290 ±(99.9%) 63.332 ns/op [Average]
  (min, avg, max) = (2243.435, 2306.290, 2373.846), stdev = 59.241
  CI (99.9%): [2242.957, 2369.622] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.NullChecksBenchmark.implicit_null_check
# Parameters: (size = 1024, upperNullThreshold = 0.5)

# Run progress: 66.67% complete, ETA 00:10:01
# Fork: 1 of 3
# Warmup Iteration   1: 2314232.740 ns/op
# Warmup Iteration   2: 2062918.929 ns/op
# Warmup Iteration   3: 2021999.004 ns/op
# Warmup Iteration   4: 2024114.946 ns/op
# Warmup Iteration   5: 2021958.100 ns/op
Iteration   1: 2099634.345 ns/op
Iteration   2: 2153120.916 ns/op
Iteration   3: 2146034.947 ns/op
Iteration   4: 2137271.275 ns/op
Iteration   5: 2049235.310 ns/op

# Run progress: 72.22% complete, ETA 00:08:21
# Fork: 2 of 3
# Warmup Iteration   1: 2342611.920 ns/op
# Warmup Iteration   2: 2192797.585 ns/op
# Warmup Iteration   3: 2171209.919 ns/op
# Warmup Iteration   4: 2170010.401 ns/op
# Warmup Iteration   5: 2169380.190 ns/op
Iteration   1: 2118255.300 ns/op
Iteration   2: 2167283.970 ns/op
Iteration   3: 2060912.680 ns/op
Iteration   4: 2119614.325 ns/op
Iteration   5: 2157284.871 ns/op

# Run progress: 77.78% complete, ETA 00:06:41
# Fork: 3 of 3
# Warmup Iteration   1: 2218524.764 ns/op
# Warmup Iteration   2: 2098413.804 ns/op
# Warmup Iteration   3: 2085872.330 ns/op
# Warmup Iteration   4: 2081022.158 ns/op
# Warmup Iteration   5: 2144192.000 ns/op
Iteration   1: 2142994.199 ns/op
Iteration   2: 2139282.628 ns/op
Iteration   3: 2133081.072 ns/op
Iteration   4: 2086203.322 ns/op
Iteration   5: 2076842.204 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.NullChecksBenchmark.implicit_null_check":
  2119136.758 ±(99.9%) 39051.823 ns/op [Average]
  (min, avg, max) = (2049235.310, 2119136.758, 2167283.970), stdev = 36529.100
  CI (99.9%): [2080084.935, 2158188.581] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.NullChecksBenchmark.implicit_null_check
# Parameters: (size = 1024, upperNullThreshold = 1.0)

# Run progress: 83.33% complete, ETA 00:05:00
# Fork: 1 of 3
# Warmup Iteration   1: 4487003.831 ns/op
# Warmup Iteration   2: 4032687.831 ns/op
# Warmup Iteration   3: 4105665.673 ns/op
# Warmup Iteration   4: 4148212.634 ns/op
# Warmup Iteration   5: 4247799.882 ns/op
Iteration   1: 4251570.333 ns/op
Iteration   2: 4189800.186 ns/op
Iteration   3: 4132314.352 ns/op
Iteration   4: 4266005.206 ns/op
Iteration   5: 4263317.650 ns/op

# Run progress: 88.89% complete, ETA 00:03:20
# Fork: 2 of 3
# Warmup Iteration   1: 4429662.678 ns/op
# Warmup Iteration   2: 4164068.883 ns/op
# Warmup Iteration   3: 4081164.512 ns/op
# Warmup Iteration   4: 4170112.352 ns/op
# Warmup Iteration   5: 4163762.664 ns/op
Iteration   1: 4064401.210 ns/op
Iteration   2: 4047797.478 ns/op
Iteration   3: 4169942.663 ns/op
Iteration   4: 4170121.900 ns/op
Iteration   5: 4159872.139 ns/op

# Run progress: 94.44% complete, ETA 00:01:40
# Fork: 3 of 3
# Warmup Iteration   1: 4480251.818 ns/op
# Warmup Iteration   2: 4095462.636 ns/op
# Warmup Iteration   3: 4081306.383 ns/op
# Warmup Iteration   4: 3920386.171 ns/op
# Warmup Iteration   5: 4147627.719 ns/op
Iteration   1: 4148944.829 ns/op
Iteration   2: 4000308.128 ns/op
Iteration   3: 3897240.328 ns/op
Iteration   4: 4114820.350 ns/op
Iteration   5: 4134179.674 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.NullChecksBenchmark.implicit_null_check":
  4134042.428 ±(99.9%) 107343.670 ns/op [Average]
  (min, avg, max) = (3897240.328, 4134042.428, 4266005.206), stdev = 100409.336
  CI (99.9%): [4026698.758, 4241386.099] (assumes normal distribution)


# Run complete. Total time: 00:30:04

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                (size)  (upperNullThreshold)  Mode  Cnt        Score        Error  Units
NullChecksBenchmark.explicit_null_check    1024                   0.0  avgt   15     2319.560 ±     59.650  ns/op
NullChecksBenchmark.explicit_null_check    1024                   0.5  avgt   15   603861.115 ±  18121.937  ns/op
NullChecksBenchmark.explicit_null_check    1024                   1.0  avgt   15  1253852.732 ±  27693.873  ns/op
NullChecksBenchmark.implicit_null_check    1024                   0.0  avgt   15     2306.290 ±     63.332  ns/op
NullChecksBenchmark.implicit_null_check    1024                   0.5  avgt   15  2119136.758 ±  39051.823  ns/op
NullChecksBenchmark.implicit_null_check    1024                   1.0  avgt   15  4134042.428 ± 107343.670  ns/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_graal_jit/NullChecksBenchmark.json
Running java -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler -jar benchmarks/target/benchmarks.jar .*CodeCacheBusterBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_graal_jit/CodeCacheBusterBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.CodeCacheBusterBenchmark.code_cache_buster

# Run progress: 0.00% complete, ETA 00:05:00
# Fork: 1 of 3
# Warmup Iteration   1: 657.426 us/op
# Warmup Iteration   2: 485.645 us/op
# Warmup Iteration   3: 416.490 us/op
# Warmup Iteration   4: 305.567 us/op
# Warmup Iteration   5: 178.618 us/op
Iteration   1: 124.869 us/op
Iteration   2: 287.917 us/op
Iteration   3: 166.795 us/op
Iteration   4: 124.332 us/op
Iteration   5: 124.104 us/op

# Run progress: 33.33% complete, ETA 00:03:20
# Fork: 2 of 3
# Warmup Iteration   1: 641.956 us/op
# Warmup Iteration   2: 492.121 us/op
# Warmup Iteration   3: 410.062 us/op
# Warmup Iteration   4: 316.591 us/op
# Warmup Iteration   5: 185.644 us/op
Iteration   1: 124.334 us/op
Iteration   2: 302.064 us/op
Iteration   3: 180.257 us/op
Iteration   4: 128.896 us/op
Iteration   5: 128.259 us/op

# Run progress: 66.67% complete, ETA 00:01:40
# Fork: 3 of 3
# Warmup Iteration   1: 624.044 us/op
# Warmup Iteration   2: 445.185 us/op
# Warmup Iteration   3: 367.320 us/op
# Warmup Iteration   4: 280.176 us/op
# Warmup Iteration   5: 147.604 us/op
Iteration   1: 124.276 us/op
Iteration   2: 123.858 us/op
Iteration   3: 123.845 us/op
Iteration   4: 123.911 us/op
Iteration   5: 121.866 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.CodeCacheBusterBenchmark.code_cache_buster":
  153.972 ±(99.9%) 63.981 us/op [Average]
  (min, avg, max) = (121.866, 153.972, 302.064), stdev = 59.848
  CI (99.9%): [89.991, 217.953] (assumes normal distribution)


# Run complete. Total time: 00:05:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                   Mode  Cnt    Score    Error  Units
CodeCacheBusterBenchmark.code_cache_buster  avgt   15  153.972 ± 63.981  us/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_graal_jit/CodeCacheBusterBenchmark.json
Running java -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler -jar benchmarks/target/benchmarks.jar .*MethodArgsBusterBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_graal_jit/MethodArgsBusterBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MethodArgsBusterBenchmark.method_args_buster

# Run progress: 0.00% complete, ETA 00:05:00
# Fork: 1 of 3
# Warmup Iteration   1: 3.086 ns/op
# Warmup Iteration   2: 2.666 ns/op
# Warmup Iteration   3: 2.597 ns/op
# Warmup Iteration   4: 2.594 ns/op
# Warmup Iteration   5: 2.587 ns/op
Iteration   1: 2.584 ns/op
Iteration   2: 2.659 ns/op
Iteration   3: 2.635 ns/op
Iteration   4: 2.633 ns/op
Iteration   5: 2.553 ns/op

# Run progress: 33.33% complete, ETA 00:03:20
# Fork: 2 of 3
# Warmup Iteration   1: 2.888 ns/op
# Warmup Iteration   2: 2.644 ns/op
# Warmup Iteration   3: 2.592 ns/op
# Warmup Iteration   4: 2.597 ns/op
# Warmup Iteration   5: 2.594 ns/op
Iteration   1: 2.588 ns/op
Iteration   2: 2.663 ns/op
Iteration   3: 2.578 ns/op
Iteration   4: 2.589 ns/op
Iteration   5: 2.596 ns/op

# Run progress: 66.67% complete, ETA 00:01:40
# Fork: 3 of 3
# Warmup Iteration   1: 2.842 ns/op
# Warmup Iteration   2: 2.535 ns/op
# Warmup Iteration   3: 2.494 ns/op
# Warmup Iteration   4: 2.500 ns/op
# Warmup Iteration   5: 2.499 ns/op
Iteration   1: 2.501 ns/op
Iteration   2: 2.576 ns/op
Iteration   3: 2.574 ns/op
Iteration   4: 2.571 ns/op
Iteration   5: 2.566 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MethodArgsBusterBenchmark.method_args_buster":
  2.591 ±(99.9%) 0.045 ns/op [Average]
  (min, avg, max) = (2.501, 2.591, 2.663), stdev = 0.042
  CI (99.9%): [2.546, 2.636] (assumes normal distribution)


# Run complete. Total time: 00:05:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                     Mode  Cnt  Score   Error  Units
MethodArgsBusterBenchmark.method_args_buster  avgt   15  2.591 ± 0.045  ns/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_graal_jit/MethodArgsBusterBenchmark.json
Running java -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler -jar benchmarks/target/benchmarks.jar .*CanonicalizeInductionVariableBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_graal_jit/CanonicalizeInductionVariableBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.CanonicalizeInductionVariableBenchmark.baseline

# Run progress: 0.00% complete, ETA 00:10:00
# Fork: 1 of 3
# Warmup Iteration   1: 6690.240 us/op
# Warmup Iteration   2: 6001.159 us/op
# Warmup Iteration   3: 5950.135 us/op
# Warmup Iteration   4: 5943.244 us/op
# Warmup Iteration   5: 5943.371 us/op
Iteration   1: 5932.909 us/op
Iteration   2: 5919.999 us/op
Iteration   3: 5922.515 us/op
Iteration   4: 5631.819 us/op
Iteration   5: 5658.687 us/op

# Run progress: 16.67% complete, ETA 00:08:21
# Fork: 2 of 3
# Warmup Iteration   1: 6264.382 us/op
# Warmup Iteration   2: 5878.614 us/op
# Warmup Iteration   3: 5835.296 us/op
# Warmup Iteration   4: 5923.551 us/op
# Warmup Iteration   5: 5963.972 us/op
Iteration   1: 5949.295 us/op
Iteration   2: 5784.127 us/op
Iteration   3: 5805.465 us/op
Iteration   4: 5811.699 us/op
Iteration   5: 5801.725 us/op

# Run progress: 33.33% complete, ETA 00:06:41
# Fork: 3 of 3
# Warmup Iteration   1: 6177.169 us/op
# Warmup Iteration   2: 5664.245 us/op
# Warmup Iteration   3: 5641.905 us/op
# Warmup Iteration   4: 5796.539 us/op
# Warmup Iteration   5: 5956.386 us/op
Iteration   1: 5934.264 us/op
Iteration   2: 5778.099 us/op
Iteration   3: 5934.411 us/op
Iteration   4: 5767.639 us/op
Iteration   5: 5794.967 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.CanonicalizeInductionVariableBenchmark.baseline":
  5828.508 ±(99.9%) 108.232 us/op [Average]
  (min, avg, max) = (5631.819, 5828.508, 5949.295), stdev = 101.240
  CI (99.9%): [5720.276, 5936.740] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.CanonicalizeInductionVariableBenchmark.canonicalize_induction_var

# Run progress: 50.00% complete, ETA 00:05:00
# Fork: 1 of 3
# Warmup Iteration   1: 6872.823 us/op
# Warmup Iteration   2: 6025.521 us/op
# Warmup Iteration   3: 6417.699 us/op
# Warmup Iteration   4: 6380.416 us/op
# Warmup Iteration   5: 6351.132 us/op
Iteration   1: 6182.097 us/op
Iteration   2: 6199.112 us/op
Iteration   3: 6357.695 us/op
Iteration   4: 6351.349 us/op
Iteration   5: 6345.683 us/op

# Run progress: 66.67% complete, ETA 00:03:20
# Fork: 2 of 3
# Warmup Iteration   1: 6794.640 us/op
# Warmup Iteration   2: 6044.301 us/op
# Warmup Iteration   3: 6008.371 us/op
# Warmup Iteration   4: 6012.041 us/op
# Warmup Iteration   5: 6011.459 us/op
Iteration   1: 6018.065 us/op
Iteration   2: 6012.049 us/op
Iteration   3: 6018.113 us/op
Iteration   4: 6023.696 us/op
Iteration   5: 6035.501 us/op

# Run progress: 83.33% complete, ETA 00:01:40
# Fork: 3 of 3
# Warmup Iteration   1: 6864.660 us/op
# Warmup Iteration   2: 6293.996 us/op
# Warmup Iteration   3: 6256.481 us/op
# Warmup Iteration   4: 6245.016 us/op
# Warmup Iteration   5: 6240.391 us/op
Iteration   1: 6232.100 us/op
Iteration   2: 6249.745 us/op
Iteration   3: 6405.276 us/op
Iteration   4: 6385.276 us/op
Iteration   5: 6366.154 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.CanonicalizeInductionVariableBenchmark.canonicalize_induction_var":
  6212.127 ±(99.9%) 165.209 us/op [Average]
  (min, avg, max) = (6012.049, 6212.127, 6405.276), stdev = 154.537
  CI (99.9%): [6046.918, 6377.336] (assumes normal distribution)


# Run complete. Total time: 00:10:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                                          Mode  Cnt     Score     Error  Units
CanonicalizeInductionVariableBenchmark.baseline                    avgt   15  5828.508 ± 108.232  us/op
CanonicalizeInductionVariableBenchmark.canonicalize_induction_var  avgt   15  6212.127 ± 165.209  us/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_graal_jit/CanonicalizeInductionVariableBenchmark.json
Running java -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler -jar benchmarks/target/benchmarks.jar .*DeadCodeEliminationBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_graal_jit/DeadCodeEliminationBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.DeadCodeEliminationBenchmark.baseline
# Parameters: (circleRadius = 42, iterations = 32768)

# Run progress: 0.00% complete, ETA 00:15:00
# Fork: 1 of 3
# Warmup Iteration   1: 1.091 ns/op
# Warmup Iteration   2: 1.025 ns/op
# Warmup Iteration   3: 1.021 ns/op
# Warmup Iteration   4: 1.020 ns/op
# Warmup Iteration   5: 1.021 ns/op
Iteration   1: 1.022 ns/op
Iteration   2: 1.022 ns/op
Iteration   3: 1.020 ns/op
Iteration   4: 1.021 ns/op
Iteration   5: 1.022 ns/op

# Run progress: 11.11% complete, ETA 00:13:23
# Fork: 2 of 3
# Warmup Iteration   1: 1.065 ns/op
# Warmup Iteration   2: 1.022 ns/op
# Warmup Iteration   3: 1.022 ns/op
# Warmup Iteration   4: 1.022 ns/op
# Warmup Iteration   5: 1.017 ns/op
Iteration   1: 1.020 ns/op
Iteration   2: 1.017 ns/op
Iteration   3: 1.022 ns/op
Iteration   4: 1.022 ns/op
Iteration   5: 1.022 ns/op

# Run progress: 22.22% complete, ETA 00:11:42
# Fork: 3 of 3
# Warmup Iteration   1: 1.065 ns/op
# Warmup Iteration   2: 1.024 ns/op
# Warmup Iteration   3: 1.020 ns/op
# Warmup Iteration   4: 1.022 ns/op
# Warmup Iteration   5: 1.022 ns/op
Iteration   1: 1.022 ns/op
Iteration   2: 1.023 ns/op
Iteration   3: 1.022 ns/op
Iteration   4: 1.021 ns/op
Iteration   5: 1.022 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.DeadCodeEliminationBenchmark.baseline":
  1.021 ±(99.9%) 0.002 ns/op [Average]
  (min, avg, max) = (1.017, 1.021, 1.023), stdev = 0.002
  CI (99.9%): [1.020, 1.023] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.DeadCodeEliminationBenchmark.dead_native_method_calls
# Parameters: (circleRadius = 42, iterations = 32768)

# Run progress: 33.33% complete, ETA 00:10:01
# Fork: 1 of 3
# Warmup Iteration   1: 146.577 ns/op
# Warmup Iteration   2: 143.193 ns/op
# Warmup Iteration   3: 143.179 ns/op
# Warmup Iteration   4: 142.775 ns/op
# Warmup Iteration   5: 143.168 ns/op
Iteration   1: 142.800 ns/op
Iteration   2: 143.397 ns/op
Iteration   3: 143.213 ns/op
Iteration   4: 143.125 ns/op
Iteration   5: 143.259 ns/op

# Run progress: 44.44% complete, ETA 00:08:21
# Fork: 2 of 3
# Warmup Iteration   1: 147.329 ns/op
# Warmup Iteration   2: 143.266 ns/op
# Warmup Iteration   3: 142.860 ns/op
# Warmup Iteration   4: 142.668 ns/op
# Warmup Iteration   5: 143.188 ns/op
Iteration   1: 142.757 ns/op
Iteration   2: 142.944 ns/op
Iteration   3: 143.280 ns/op
Iteration   4: 143.291 ns/op
Iteration   5: 143.252 ns/op

# Run progress: 55.56% complete, ETA 00:06:41
# Fork: 3 of 3
# Warmup Iteration   1: 147.330 ns/op
# Warmup Iteration   2: 143.457 ns/op
# Warmup Iteration   3: 143.220 ns/op
# Warmup Iteration   4: 143.190 ns/op
# Warmup Iteration   5: 143.206 ns/op
Iteration   1: 143.167 ns/op
Iteration   2: 143.175 ns/op
Iteration   3: 143.150 ns/op
Iteration   4: 143.166 ns/op
Iteration   5: 143.166 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.DeadCodeEliminationBenchmark.dead_native_method_calls":
  143.143 ±(99.9%) 0.191 ns/op [Average]
  (min, avg, max) = (142.757, 143.143, 143.397), stdev = 0.178
  CI (99.9%): [142.952, 143.333] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.DeadCodeEliminationBenchmark.dead_user_defined_method_calls
# Parameters: (circleRadius = 42, iterations = 32768)

# Run progress: 66.67% complete, ETA 00:05:00
# Fork: 1 of 3
# Warmup Iteration   1: 7019.612 ns/op
# Warmup Iteration   2: 6906.929 ns/op
# Warmup Iteration   3: 6905.077 ns/op
# Warmup Iteration   4: 6878.990 ns/op
# Warmup Iteration   5: 6901.820 ns/op
Iteration   1: 6892.457 ns/op
Iteration   2: 6909.736 ns/op
Iteration   3: 6900.806 ns/op
Iteration   4: 6902.716 ns/op
Iteration   5: 6902.560 ns/op

# Run progress: 77.78% complete, ETA 00:03:21
# Fork: 2 of 3
# Warmup Iteration   1: 7045.011 ns/op
# Warmup Iteration   2: 6899.643 ns/op
# Warmup Iteration   3: 6899.066 ns/op
# Warmup Iteration   4: 6902.188 ns/op
# Warmup Iteration   5: 6901.958 ns/op
Iteration   1: 6897.006 ns/op
Iteration   2: 6902.511 ns/op
Iteration   3: 6907.439 ns/op
Iteration   4: 6871.572 ns/op
Iteration   5: 6895.650 ns/op

# Run progress: 88.89% complete, ETA 00:01:40
# Fork: 3 of 3
# Warmup Iteration   1: 7050.539 ns/op
# Warmup Iteration   2: 6895.582 ns/op
# Warmup Iteration   3: 6905.398 ns/op
# Warmup Iteration   4: 6906.057 ns/op
# Warmup Iteration   5: 6902.377 ns/op
Iteration   1: 6904.073 ns/op
Iteration   2: 6891.266 ns/op
Iteration   3: 6892.037 ns/op
Iteration   4: 6903.622 ns/op
Iteration   5: 6888.834 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.DeadCodeEliminationBenchmark.dead_user_defined_method_calls":
  6897.486 ±(99.9%) 10.155 ns/op [Average]
  (min, avg, max) = (6871.572, 6897.486, 6909.736), stdev = 9.499
  CI (99.9%): [6887.331, 6907.641] (assumes normal distribution)


# Run complete. Total time: 00:15:07

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                                    (circleRadius)  (iterations)  Mode  Cnt     Score    Error  Units
DeadCodeEliminationBenchmark.baseline                                    42         32768  avgt   15     1.021 ±  0.002  ns/op
DeadCodeEliminationBenchmark.dead_native_method_calls                    42         32768  avgt   15   143.143 ±  0.191  ns/op
DeadCodeEliminationBenchmark.dead_user_defined_method_calls              42         32768  avgt   15  6897.486 ± 10.155  ns/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_graal_jit/DeadCodeEliminationBenchmark.json
Running java -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler -jar benchmarks/target/benchmarks.jar .*LoopControlFlowBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_graal_jit/LoopControlFlowBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.LoopControlFlowBenchmark.loop_continue
# Parameters: (size = 262144, upperNullThreshold = 0)

# Run progress: 0.00% complete, ETA 00:40:00
# Fork: 1 of 3
# Warmup Iteration   1: 205.733 us/op
# Warmup Iteration   2: 186.963 us/op
# Warmup Iteration   3: 185.229 us/op
# Warmup Iteration   4: 183.595 us/op
# Warmup Iteration   5: 183.871 us/op
Iteration   1: 183.509 us/op
Iteration   2: 184.546 us/op
Iteration   3: 183.435 us/op
Iteration   4: 173.129 us/op
Iteration   5: 173.518 us/op

# Run progress: 4.17% complete, ETA 00:38:28
# Fork: 2 of 3
# Warmup Iteration   1: 202.876 us/op
# Warmup Iteration   2: 197.264 us/op
# Warmup Iteration   3: 195.165 us/op
# Warmup Iteration   4: 183.475 us/op
# Warmup Iteration   5: 193.142 us/op
Iteration   1: 192.543 us/op
Iteration   2: 192.626 us/op
Iteration   3: 193.154 us/op
Iteration   4: 192.359 us/op
Iteration   5: 192.678 us/op

# Run progress: 8.33% complete, ETA 00:36:47
# Fork: 3 of 3
# Warmup Iteration   1: 200.066 us/op
# Warmup Iteration   2: 182.848 us/op
# Warmup Iteration   3: 193.086 us/op
# Warmup Iteration   4: 190.103 us/op
# Warmup Iteration   5: 188.786 us/op
Iteration   1: 189.130 us/op
Iteration   2: 181.445 us/op
Iteration   3: 177.477 us/op
Iteration   4: 178.997 us/op
Iteration   5: 179.137 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.LoopControlFlowBenchmark.loop_continue":
  184.512 ±(99.9%) 7.695 us/op [Average]
  (min, avg, max) = (173.129, 184.512, 193.154), stdev = 7.198
  CI (99.9%): [176.817, 192.208] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.LoopControlFlowBenchmark.loop_continue
# Parameters: (size = 262144, upperNullThreshold = 16)

# Run progress: 12.50% complete, ETA 00:35:06
# Fork: 1 of 3
# Warmup Iteration   1: 943.298 us/op
# Warmup Iteration   2: 882.495 us/op
# Warmup Iteration   3: 884.135 us/op
# Warmup Iteration   4: 889.058 us/op
# Warmup Iteration   5: 889.070 us/op
Iteration   1: 886.926 us/op
Iteration   2: 889.351 us/op
Iteration   3: 885.090 us/op
Iteration   4: 877.973 us/op
Iteration   5: 877.428 us/op

# Run progress: 16.67% complete, ETA 00:33:25
# Fork: 2 of 3
# Warmup Iteration   1: 933.392 us/op
# Warmup Iteration   2: 879.107 us/op
# Warmup Iteration   3: 881.109 us/op
# Warmup Iteration   4: 882.189 us/op
# Warmup Iteration   5: 881.098 us/op
Iteration   1: 880.804 us/op
Iteration   2: 878.138 us/op
Iteration   3: 876.926 us/op
Iteration   4: 881.905 us/op
Iteration   5: 879.794 us/op

# Run progress: 20.83% complete, ETA 00:31:45
# Fork: 3 of 3
# Warmup Iteration   1: 935.731 us/op
# Warmup Iteration   2: 881.181 us/op
# Warmup Iteration   3: 881.919 us/op
# Warmup Iteration   4: 881.360 us/op
# Warmup Iteration   5: 881.053 us/op
Iteration   1: 881.906 us/op
Iteration   2: 875.650 us/op
Iteration   3: 881.252 us/op
Iteration   4: 882.274 us/op
Iteration   5: 874.234 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.LoopControlFlowBenchmark.loop_continue":
  880.643 ±(99.9%) 4.478 us/op [Average]
  (min, avg, max) = (874.234, 880.643, 889.351), stdev = 4.189
  CI (99.9%): [876.166, 885.121] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.LoopControlFlowBenchmark.loop_if_comparison
# Parameters: (size = 262144, upperNullThreshold = 0)

# Run progress: 25.00% complete, ETA 00:30:05
# Fork: 1 of 3
# Warmup Iteration   1: 201.454 us/op
# Warmup Iteration   2: 187.707 us/op
# Warmup Iteration   3: 185.369 us/op
# Warmup Iteration   4: 184.231 us/op
# Warmup Iteration   5: 182.083 us/op
Iteration   1: 181.631 us/op
Iteration   2: 181.994 us/op
Iteration   3: 182.204 us/op
Iteration   4: 182.526 us/op
Iteration   5: 182.792 us/op

# Run progress: 29.17% complete, ETA 00:28:24
# Fork: 2 of 3
# Warmup Iteration   1: 225.633 us/op
# Warmup Iteration   2: 197.948 us/op
# Warmup Iteration   3: 192.979 us/op
# Warmup Iteration   4: 195.493 us/op
# Warmup Iteration   5: 195.466 us/op
Iteration   1: 195.202 us/op
Iteration   2: 195.092 us/op
Iteration   3: 195.577 us/op
Iteration   4: 195.327 us/op
Iteration   5: 195.139 us/op

# Run progress: 33.33% complete, ETA 00:26:44
# Fork: 3 of 3
# Warmup Iteration   1: 205.338 us/op
# Warmup Iteration   2: 195.691 us/op
# Warmup Iteration   3: 185.571 us/op
# Warmup Iteration   4: 183.195 us/op
# Warmup Iteration   5: 183.027 us/op
Iteration   1: 182.226 us/op
Iteration   2: 181.991 us/op
Iteration   3: 182.480 us/op
Iteration   4: 182.617 us/op
Iteration   5: 182.990 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.LoopControlFlowBenchmark.loop_if_comparison":
  186.653 ±(99.9%) 6.751 us/op [Average]
  (min, avg, max) = (181.631, 186.653, 195.577), stdev = 6.315
  CI (99.9%): [179.902, 193.404] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.LoopControlFlowBenchmark.loop_if_comparison
# Parameters: (size = 262144, upperNullThreshold = 16)

# Run progress: 37.50% complete, ETA 00:25:04
# Fork: 1 of 3
# Warmup Iteration   1: 949.979 us/op
# Warmup Iteration   2: 881.822 us/op
# Warmup Iteration   3: 880.294 us/op
# Warmup Iteration   4: 880.629 us/op
# Warmup Iteration   5: 884.450 us/op
Iteration   1: 886.226 us/op
Iteration   2: 886.376 us/op
Iteration   3: 883.321 us/op
Iteration   4: 883.387 us/op
Iteration   5: 878.465 us/op

# Run progress: 41.67% complete, ETA 00:23:23
# Fork: 2 of 3
# Warmup Iteration   1: 941.653 us/op
# Warmup Iteration   2: 890.973 us/op
# Warmup Iteration   3: 881.005 us/op
# Warmup Iteration   4: 882.321 us/op
# Warmup Iteration   5: 885.678 us/op
Iteration   1: 882.927 us/op
Iteration   2: 884.466 us/op
Iteration   3: 882.639 us/op
Iteration   4: 889.045 us/op
Iteration   5: 885.154 us/op

# Run progress: 45.83% complete, ETA 00:21:43
# Fork: 3 of 3
# Warmup Iteration   1: 948.139 us/op
# Warmup Iteration   2: 889.220 us/op
# Warmup Iteration   3: 886.424 us/op
# Warmup Iteration   4: 885.927 us/op
# Warmup Iteration   5: 887.547 us/op
Iteration   1: 886.670 us/op
Iteration   2: 877.702 us/op
Iteration   3: 879.908 us/op
Iteration   4: 880.182 us/op
Iteration   5: 876.596 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.LoopControlFlowBenchmark.loop_if_comparison":
  882.871 ±(99.9%) 3.896 us/op [Average]
  (min, avg, max) = (876.596, 882.871, 889.045), stdev = 3.644
  CI (99.9%): [878.975, 886.766] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.LoopControlFlowBenchmark.loop_try_catch
# Parameters: (size = 262144, upperNullThreshold = 0)

# Run progress: 50.00% complete, ETA 00:20:03
# Fork: 1 of 3
# Warmup Iteration   1: 210.267 us/op
# Warmup Iteration   2: 194.838 us/op
# Warmup Iteration   3: 191.790 us/op
# Warmup Iteration   4: 190.502 us/op
# Warmup Iteration   5: 191.466 us/op
Iteration   1: 191.589 us/op
Iteration   2: 191.338 us/op
Iteration   3: 201.072 us/op
Iteration   4: 200.728 us/op
Iteration   5: 200.492 us/op

# Run progress: 54.17% complete, ETA 00:18:22
# Fork: 2 of 3
# Warmup Iteration   1: 209.828 us/op
# Warmup Iteration   2: 191.461 us/op
# Warmup Iteration   3: 195.355 us/op
# Warmup Iteration   4: 194.065 us/op
# Warmup Iteration   5: 194.063 us/op
Iteration   1: 193.660 us/op
Iteration   2: 188.506 us/op
Iteration   3: 188.602 us/op
Iteration   4: 188.341 us/op
Iteration   5: 187.999 us/op

# Run progress: 58.33% complete, ETA 00:16:42
# Fork: 3 of 3
# Warmup Iteration   1: 198.459 us/op
# Warmup Iteration   2: 185.127 us/op
# Warmup Iteration   3: 192.615 us/op
# Warmup Iteration   4: 190.293 us/op
# Warmup Iteration   5: 180.832 us/op
Iteration   1: 177.278 us/op
Iteration   2: 177.747 us/op
Iteration   3: 178.162 us/op
Iteration   4: 178.133 us/op
Iteration   5: 177.916 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.LoopControlFlowBenchmark.loop_try_catch":
  188.104 ±(99.9%) 9.309 us/op [Average]
  (min, avg, max) = (177.278, 188.104, 201.072), stdev = 8.708
  CI (99.9%): [178.795, 197.413] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.LoopControlFlowBenchmark.loop_try_catch
# Parameters: (size = 262144, upperNullThreshold = 16)

# Run progress: 62.50% complete, ETA 00:15:02
# Fork: 1 of 3
# Warmup Iteration   1: 500701.258 us/op
# Warmup Iteration   2: 469718.722 us/op
# Warmup Iteration   3: 466836.372 us/op
# Warmup Iteration   4: 459299.918 us/op
# Warmup Iteration   5: 461034.895 us/op
Iteration   1: 462758.795 us/op
Iteration   2: 460735.750 us/op
Iteration   3: 468912.011 us/op
Iteration   4: 473659.955 us/op
Iteration   5: 472418.487 us/op

# Run progress: 66.67% complete, ETA 00:13:23
# Fork: 2 of 3
# Warmup Iteration   1: 506581.777 us/op
# Warmup Iteration   2: 477791.217 us/op
# Warmup Iteration   3: 475922.299 us/op
# Warmup Iteration   4: 475073.911 us/op
# Warmup Iteration   5: 474221.758 us/op
Iteration   1: 473388.672 us/op
Iteration   2: 472471.491 us/op
Iteration   3: 469897.110 us/op
Iteration   4: 474465.646 us/op
Iteration   5: 472001.747 us/op

# Run progress: 70.83% complete, ETA 00:11:44
# Fork: 3 of 3
# Warmup Iteration   1: 486988.210 us/op
# Warmup Iteration   2: 471714.502 us/op
# Warmup Iteration   3: 472655.884 us/op
# Warmup Iteration   4: 472623.245 us/op
# Warmup Iteration   5: 442114.608 us/op
Iteration   1: 444417.744 us/op
Iteration   2: 444696.151 us/op
Iteration   3: 476971.592 us/op
Iteration   4: 474581.373 us/op
Iteration   5: 473446.577 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.LoopControlFlowBenchmark.loop_try_catch":
  467654.873 ±(99.9%) 11043.504 us/op [Average]
  (min, avg, max) = (444417.744, 467654.873, 476971.592), stdev = 10330.100
  CI (99.9%): [456611.369, 478698.377] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.LoopControlFlowBenchmark.stream
# Parameters: (size = 262144, upperNullThreshold = 0)

# Run progress: 75.00% complete, ETA 00:10:04
# Fork: 1 of 3
# Warmup Iteration   1: 1207.615 us/op
# Warmup Iteration   2: 2130.141 us/op
# Warmup Iteration   3: 2097.952 us/op
# Warmup Iteration   4: 2035.283 us/op
# Warmup Iteration   5: 2088.983 us/op
Iteration   1: 2083.418 us/op
Iteration   2: 2098.685 us/op
Iteration   3: 2064.011 us/op
Iteration   4: 2096.493 us/op
Iteration   5: 2068.550 us/op

# Run progress: 79.17% complete, ETA 00:08:23
# Fork: 2 of 3
# Warmup Iteration   1: 1206.260 us/op
# Warmup Iteration   2: 2095.098 us/op
# Warmup Iteration   3: 2128.075 us/op
# Warmup Iteration   4: 2129.065 us/op
# Warmup Iteration   5: 2094.198 us/op
Iteration   1: 2115.621 us/op
Iteration   2: 2124.668 us/op
Iteration   3: 2119.463 us/op
Iteration   4: 2116.276 us/op
Iteration   5: 2124.208 us/op

# Run progress: 83.33% complete, ETA 00:06:42
# Fork: 3 of 3
# Warmup Iteration   1: 1215.814 us/op
# Warmup Iteration   2: 2104.957 us/op
# Warmup Iteration   3: 2122.442 us/op
# Warmup Iteration   4: 2094.471 us/op
# Warmup Iteration   5: 2089.051 us/op
Iteration   1: 2097.173 us/op
Iteration   2: 2096.099 us/op
Iteration   3: 2117.606 us/op
Iteration   4: 2112.318 us/op
Iteration   5: 2102.299 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.LoopControlFlowBenchmark.stream":
  2102.459 ±(99.9%) 20.314 us/op [Average]
  (min, avg, max) = (2064.011, 2102.459, 2124.668), stdev = 19.002
  CI (99.9%): [2082.145, 2122.774] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.LoopControlFlowBenchmark.stream
# Parameters: (size = 262144, upperNullThreshold = 16)

# Run progress: 87.50% complete, ETA 00:05:02
# Fork: 1 of 3
# Warmup Iteration   1: 2629.354 us/op
# Warmup Iteration   2: 2855.296 us/op
# Warmup Iteration   3: 2797.453 us/op
# Warmup Iteration   4: 2805.740 us/op
# Warmup Iteration   5: 2869.878 us/op
Iteration   1: 2839.178 us/op
Iteration   2: 2757.325 us/op
Iteration   3: 2833.413 us/op
Iteration   4: 2793.917 us/op
Iteration   5: 2859.731 us/op

# Run progress: 91.67% complete, ETA 00:03:21
# Fork: 2 of 3
# Warmup Iteration   1: 2565.128 us/op
# Warmup Iteration   2: 2686.170 us/op
# Warmup Iteration   3: 2723.600 us/op
# Warmup Iteration   4: 2705.471 us/op
# Warmup Iteration   5: 2673.477 us/op
Iteration   1: 2682.463 us/op
Iteration   2: 2698.392 us/op
Iteration   3: 2734.734 us/op
Iteration   4: 2688.420 us/op
Iteration   5: 2690.041 us/op

# Run progress: 95.83% complete, ETA 00:01:40
# Fork: 3 of 3
# Warmup Iteration   1: 3152.040 us/op
# Warmup Iteration   2: 2795.171 us/op
# Warmup Iteration   3: 2840.083 us/op
# Warmup Iteration   4: 2800.973 us/op
# Warmup Iteration   5: 2802.266 us/op
Iteration   1: 2805.342 us/op
Iteration   2: 2831.359 us/op
Iteration   3: 2839.858 us/op
Iteration   4: 2824.750 us/op
Iteration   5: 2801.786 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.LoopControlFlowBenchmark.stream":
  2778.714 ±(99.9%) 68.476 us/op [Average]
  (min, avg, max) = (2682.463, 2778.714, 2859.731), stdev = 64.052
  CI (99.9%): [2710.238, 2847.189] (assumes normal distribution)


# Run complete. Total time: 00:40:15

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    (size)  (upperNullThreshold)  Mode  Cnt       Score       Error  Units
LoopControlFlowBenchmark.loop_continue       262144                     0  avgt   15     184.512 ±     7.695  us/op
LoopControlFlowBenchmark.loop_continue       262144                    16  avgt   15     880.643 ±     4.478  us/op
LoopControlFlowBenchmark.loop_if_comparison  262144                     0  avgt   15     186.653 ±     6.751  us/op
LoopControlFlowBenchmark.loop_if_comparison  262144                    16  avgt   15     882.871 ±     3.896  us/op
LoopControlFlowBenchmark.loop_try_catch      262144                     0  avgt   15     188.104 ±     9.309  us/op
LoopControlFlowBenchmark.loop_try_catch      262144                    16  avgt   15  467654.873 ± 11043.504  us/op
LoopControlFlowBenchmark.stream              262144                     0  avgt   15    2102.459 ±    20.314  us/op
LoopControlFlowBenchmark.stream              262144                    16  avgt   15    2778.714 ±    68.476  us/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_graal_jit/LoopControlFlowBenchmark.json
Running java -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler -jar benchmarks/target/benchmarks.jar .*LoopFusionBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_graal_jit/LoopFusionBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.LoopFusionBenchmark.baseline
# Parameters: (size = 262144)

# Run progress: 0.00% complete, ETA 00:10:00
# Fork: 1 of 3
# Warmup Iteration   1: 437.737 us/op
# Warmup Iteration   2: 404.237 us/op
# Warmup Iteration   3: 401.785 us/op
# Warmup Iteration   4: 402.108 us/op
# Warmup Iteration   5: 412.936 us/op
Iteration   1: 422.466 us/op
Iteration   2: 423.579 us/op
Iteration   3: 421.348 us/op
Iteration   4: 421.182 us/op
Iteration   5: 410.972 us/op

# Run progress: 16.67% complete, ETA 00:08:21
# Fork: 2 of 3
# Warmup Iteration   1: 424.654 us/op
# Warmup Iteration   2: 428.249 us/op
# Warmup Iteration   3: 422.741 us/op
# Warmup Iteration   4: 421.380 us/op
# Warmup Iteration   5: 421.578 us/op
Iteration   1: 398.767 us/op
Iteration   2: 400.774 us/op
Iteration   3: 400.195 us/op
Iteration   4: 401.417 us/op
Iteration   5: 401.700 us/op

# Run progress: 33.33% complete, ETA 00:06:41
# Fork: 3 of 3
# Warmup Iteration   1: 424.196 us/op
# Warmup Iteration   2: 402.640 us/op
# Warmup Iteration   3: 401.574 us/op
# Warmup Iteration   4: 401.202 us/op
# Warmup Iteration   5: 401.212 us/op
Iteration   1: 401.541 us/op
Iteration   2: 401.478 us/op
Iteration   3: 400.988 us/op
Iteration   4: 401.265 us/op
Iteration   5: 401.228 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.LoopFusionBenchmark.baseline":
  407.260 ±(99.9%) 10.344 us/op [Average]
  (min, avg, max) = (398.767, 407.260, 423.579), stdev = 9.675
  CI (99.9%): [396.916, 417.603] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.LoopFusionBenchmark.loop_fusion
# Parameters: (size = 262144)

# Run progress: 50.00% complete, ETA 00:05:00
# Fork: 1 of 3
# Warmup Iteration   1: 834.599 us/op
# Warmup Iteration   2: 749.251 us/op
# Warmup Iteration   3: 740.992 us/op
# Warmup Iteration   4: 744.649 us/op
# Warmup Iteration   5: 784.465 us/op
Iteration   1: 786.459 us/op
Iteration   2: 750.152 us/op
Iteration   3: 786.907 us/op
Iteration   4: 777.428 us/op
Iteration   5: 772.959 us/op

# Run progress: 66.67% complete, ETA 00:03:20
# Fork: 2 of 3
# Warmup Iteration   1: 781.429 us/op
# Warmup Iteration   2: 745.719 us/op
# Warmup Iteration   3: 744.156 us/op
# Warmup Iteration   4: 744.686 us/op
# Warmup Iteration   5: 743.044 us/op
Iteration   1: 744.981 us/op
Iteration   2: 749.213 us/op
Iteration   3: 747.818 us/op
Iteration   4: 778.591 us/op
Iteration   5: 745.027 us/op

# Run progress: 83.33% complete, ETA 00:01:40
# Fork: 3 of 3
# Warmup Iteration   1: 783.196 us/op
# Warmup Iteration   2: 782.706 us/op
# Warmup Iteration   3: 780.015 us/op
# Warmup Iteration   4: 774.472 us/op
# Warmup Iteration   5: 775.072 us/op
Iteration   1: 781.173 us/op
Iteration   2: 779.891 us/op
Iteration   3: 780.385 us/op
Iteration   4: 775.393 us/op
Iteration   5: 771.557 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.LoopFusionBenchmark.loop_fusion":
  768.529 ±(99.9%) 17.123 us/op [Average]
  (min, avg, max) = (744.981, 768.529, 786.907), stdev = 16.017
  CI (99.9%): [751.406, 785.652] (assumes normal distribution)


# Run complete. Total time: 00:10:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                        (size)  Mode  Cnt    Score    Error  Units
LoopFusionBenchmark.baseline     262144  avgt   15  407.260 ± 10.344  us/op
LoopFusionBenchmark.loop_fusion  262144  avgt   15  768.529 ± 17.123  us/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_graal_jit/LoopFusionBenchmark.json
Running java -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler -jar benchmarks/target/benchmarks.jar .*LoopInterchangeBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_graal_jit/LoopInterchangeBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.LoopInterchangeBenchmark.loop
# Parameters: (size = 512)

# Run progress: 0.00% complete, ETA 00:10:00
# Fork: 1 of 3
# Warmup Iteration   1: 384.136 us/op
# Warmup Iteration   2: 356.064 us/op
# Warmup Iteration   3: 377.192 us/op
# Warmup Iteration   4: 350.638 us/op
# Warmup Iteration   5: 351.094 us/op
Iteration   1: 352.782 us/op
Iteration   2: 352.820 us/op
Iteration   3: 354.821 us/op
Iteration   4: 357.104 us/op
Iteration   5: 359.143 us/op

# Run progress: 16.67% complete, ETA 00:08:21
# Fork: 2 of 3
# Warmup Iteration   1: 398.221 us/op
# Warmup Iteration   2: 376.550 us/op
# Warmup Iteration   3: 373.135 us/op
# Warmup Iteration   4: 373.189 us/op
# Warmup Iteration   5: 376.081 us/op
Iteration   1: 372.233 us/op
Iteration   2: 356.789 us/op
Iteration   3: 352.719 us/op
Iteration   4: 357.764 us/op
Iteration   5: 358.453 us/op

# Run progress: 33.33% complete, ETA 00:06:41
# Fork: 3 of 3
# Warmup Iteration   1: 396.843 us/op
# Warmup Iteration   2: 380.813 us/op
# Warmup Iteration   3: 370.416 us/op
# Warmup Iteration   4: 372.943 us/op
# Warmup Iteration   5: 369.470 us/op
Iteration   1: 371.438 us/op
Iteration   2: 372.404 us/op
Iteration   3: 372.398 us/op
Iteration   4: 369.549 us/op
Iteration   5: 369.377 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.LoopInterchangeBenchmark.loop":
  361.986 ±(99.9%) 8.658 us/op [Average]
  (min, avg, max) = (352.719, 361.986, 372.404), stdev = 8.099
  CI (99.9%): [353.328, 370.644] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.LoopInterchangeBenchmark.manual_interchange
# Parameters: (size = 512)

# Run progress: 50.00% complete, ETA 00:05:00
# Fork: 1 of 3
# Warmup Iteration   1: 159.878 us/op
# Warmup Iteration   2: 145.292 us/op
# Warmup Iteration   3: 143.842 us/op
# Warmup Iteration   4: 143.087 us/op
# Warmup Iteration   5: 143.816 us/op
Iteration   1: 143.452 us/op
Iteration   2: 143.538 us/op
Iteration   3: 143.787 us/op
Iteration   4: 143.528 us/op
Iteration   5: 143.249 us/op

# Run progress: 66.67% complete, ETA 00:03:20
# Fork: 2 of 3
# Warmup Iteration   1: 159.351 us/op
# Warmup Iteration   2: 144.033 us/op
# Warmup Iteration   3: 143.750 us/op
# Warmup Iteration   4: 144.042 us/op
# Warmup Iteration   5: 151.219 us/op
Iteration   1: 150.971 us/op
Iteration   2: 150.555 us/op
Iteration   3: 150.249 us/op
Iteration   4: 149.971 us/op
Iteration   5: 150.072 us/op

# Run progress: 83.33% complete, ETA 00:01:40
# Fork: 3 of 3
# Warmup Iteration   1: 161.136 us/op
# Warmup Iteration   2: 146.870 us/op
# Warmup Iteration   3: 146.264 us/op
# Warmup Iteration   4: 146.247 us/op
# Warmup Iteration   5: 146.149 us/op
Iteration   1: 146.097 us/op
Iteration   2: 141.854 us/op
Iteration   3: 141.904 us/op
Iteration   4: 142.283 us/op
Iteration   5: 142.621 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.LoopInterchangeBenchmark.manual_interchange":
  145.609 ±(99.9%) 3.875 us/op [Average]
  (min, avg, max) = (141.854, 145.609, 150.971), stdev = 3.624
  CI (99.9%): [141.734, 149.483] (assumes normal distribution)


# Run complete. Total time: 00:10:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    (size)  Mode  Cnt    Score   Error  Units
LoopInterchangeBenchmark.loop                   512  avgt   15  361.986 ± 8.658  us/op
LoopInterchangeBenchmark.manual_interchange     512  avgt   15  145.609 ± 3.875  us/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_graal_jit/LoopInterchangeBenchmark.json
Running java -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler -jar benchmarks/target/benchmarks.jar .*LoopInvariantCodeMotionBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_graal_jit/LoopInvariantCodeMotionBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.LoopInvariantCodeMotionBenchmark.loop_with_invariant_code
# Parameters: (iterations = 16384, value = 42)

# Run progress: 0.00% complete, ETA 00:10:00
# Fork: 1 of 3
# Warmup Iteration   1: 2128.849 us/op
# Warmup Iteration   2: 1996.820 us/op
# Warmup Iteration   3: 1996.624 us/op
# Warmup Iteration   4: 1994.199 us/op
# Warmup Iteration   5: 1993.545 us/op
Iteration   1: 1991.974 us/op
Iteration   2: 1996.311 us/op
Iteration   3: 1993.529 us/op
Iteration   4: 1994.381 us/op
Iteration   5: 1997.162 us/op

# Run progress: 16.67% complete, ETA 00:08:21
# Fork: 2 of 3
# Warmup Iteration   1: 2075.530 us/op
# Warmup Iteration   2: 2002.034 us/op
# Warmup Iteration   3: 1991.358 us/op
# Warmup Iteration   4: 1996.074 us/op
# Warmup Iteration   5: 1990.953 us/op
Iteration   1: 1996.006 us/op
Iteration   2: 1988.250 us/op
Iteration   3: 1993.420 us/op
Iteration   4: 1993.918 us/op
Iteration   5: 1989.211 us/op

# Run progress: 33.33% complete, ETA 00:06:41
# Fork: 3 of 3
# Warmup Iteration   1: 2064.778 us/op
# Warmup Iteration   2: 1995.592 us/op
# Warmup Iteration   3: 1993.069 us/op
# Warmup Iteration   4: 1990.174 us/op
# Warmup Iteration   5: 1989.581 us/op
Iteration   1: 1988.916 us/op
Iteration   2: 1992.437 us/op
Iteration   3: 1984.985 us/op
Iteration   4: 1990.539 us/op
Iteration   5: 1991.282 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.LoopInvariantCodeMotionBenchmark.loop_with_invariant_code":
  1992.155 ±(99.9%) 3.592 us/op [Average]
  (min, avg, max) = (1984.985, 1992.155, 1997.162), stdev = 3.360
  CI (99.9%): [1988.563, 1995.746] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.LoopInvariantCodeMotionBenchmark.manual_hoisting_and_sinking
# Parameters: (iterations = 16384, value = 42)

# Run progress: 50.00% complete, ETA 00:05:00
# Fork: 1 of 3
# Warmup Iteration   1: 756.130 us/op
# Warmup Iteration   2: 734.099 us/op
# Warmup Iteration   3: 735.575 us/op
# Warmup Iteration   4: 735.462 us/op
# Warmup Iteration   5: 728.319 us/op
Iteration   1: 717.511 us/op
Iteration   2: 718.669 us/op
Iteration   3: 719.255 us/op
Iteration   4: 716.147 us/op
Iteration   5: 716.340 us/op

# Run progress: 66.67% complete, ETA 00:03:20
# Fork: 2 of 3
# Warmup Iteration   1: 738.892 us/op
# Warmup Iteration   2: 717.464 us/op
# Warmup Iteration   3: 716.480 us/op
# Warmup Iteration   4: 716.211 us/op
# Warmup Iteration   5: 716.233 us/op
Iteration   1: 716.883 us/op
Iteration   2: 716.269 us/op
Iteration   3: 716.743 us/op
Iteration   4: 716.509 us/op
Iteration   5: 716.681 us/op

# Run progress: 83.33% complete, ETA 00:01:40
# Fork: 3 of 3
# Warmup Iteration   1: 738.694 us/op
# Warmup Iteration   2: 717.253 us/op
# Warmup Iteration   3: 716.633 us/op
# Warmup Iteration   4: 716.423 us/op
# Warmup Iteration   5: 716.247 us/op
Iteration   1: 717.889 us/op
Iteration   2: 716.909 us/op
Iteration   3: 717.609 us/op
Iteration   4: 714.293 us/op
Iteration   5: 715.927 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.LoopInvariantCodeMotionBenchmark.manual_hoisting_and_sinking":
  716.909 ±(99.9%) 1.271 us/op [Average]
  (min, avg, max) = (714.293, 716.909, 719.255), stdev = 1.189
  CI (99.9%): [715.638, 718.179] (assumes normal distribution)


# Run complete. Total time: 00:10:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                                     (iterations)  (value)  Mode  Cnt     Score   Error  Units
LoopInvariantCodeMotionBenchmark.loop_with_invariant_code            16384       42  avgt   15  1992.155 ± 3.592  us/op
LoopInvariantCodeMotionBenchmark.manual_hoisting_and_sinking         16384       42  avgt   15   716.909 ± 1.271  us/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_graal_jit/LoopInvariantCodeMotionBenchmark.json
Running java -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler -jar benchmarks/target/benchmarks.jar .*LoopReductionBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_graal_jit/LoopReductionBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.LoopReductionBenchmark.baseline
# Parameters: (iterations = 1048576, offset = 128)

# Run progress: 0.00% complete, ETA 00:10:00
# Fork: 1 of 3
# Warmup Iteration   1: 4.099 ns/op
# Warmup Iteration   2: 3.801 ns/op
# Warmup Iteration   3: 3.772 ns/op
# Warmup Iteration   4: 3.765 ns/op
# Warmup Iteration   5: 3.764 ns/op
Iteration   1: 3.749 ns/op
Iteration   2: 3.554 ns/op
Iteration   3: 3.556 ns/op
Iteration   4: 3.565 ns/op
Iteration   5: 3.566 ns/op

# Run progress: 16.67% complete, ETA 00:08:21
# Fork: 2 of 3
# Warmup Iteration   1: 4.045 ns/op
# Warmup Iteration   2: 3.590 ns/op
# Warmup Iteration   3: 3.557 ns/op
# Warmup Iteration   4: 3.557 ns/op
# Warmup Iteration   5: 3.560 ns/op
Iteration   1: 3.559 ns/op
Iteration   2: 3.659 ns/op
Iteration   3: 3.653 ns/op
Iteration   4: 3.650 ns/op
Iteration   5: 3.671 ns/op

# Run progress: 33.33% complete, ETA 00:06:41
# Fork: 3 of 3
# Warmup Iteration   1: 3.966 ns/op
# Warmup Iteration   2: 3.667 ns/op
# Warmup Iteration   3: 3.754 ns/op
# Warmup Iteration   4: 3.762 ns/op
# Warmup Iteration   5: 3.741 ns/op
Iteration   1: 3.554 ns/op
Iteration   2: 3.565 ns/op
Iteration   3: 3.564 ns/op
Iteration   4: 3.562 ns/op
Iteration   5: 3.567 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.LoopReductionBenchmark.baseline":
  3.600 ±(99.9%) 0.065 ns/op [Average]
  (min, avg, max) = (3.554, 3.600, 3.749), stdev = 0.061
  CI (99.9%): [3.535, 3.665] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.LoopReductionBenchmark.loop_reduction
# Parameters: (iterations = 1048576, offset = 128)

# Run progress: 50.00% complete, ETA 00:05:00
# Fork: 1 of 3
# Warmup Iteration   1: 18347.369 ns/op
# Warmup Iteration   2: 16809.084 ns/op
# Warmup Iteration   3: 16789.366 ns/op
# Warmup Iteration   4: 16809.190 ns/op
# Warmup Iteration   5: 16790.665 ns/op
Iteration   1: 16791.248 ns/op
Iteration   2: 16805.411 ns/op
Iteration   3: 16763.222 ns/op
Iteration   4: 16747.110 ns/op
Iteration   5: 16792.649 ns/op

# Run progress: 66.67% complete, ETA 00:03:20
# Fork: 2 of 3
# Warmup Iteration   1: 17963.701 ns/op
# Warmup Iteration   2: 16864.246 ns/op
# Warmup Iteration   3: 16784.887 ns/op
# Warmup Iteration   4: 16770.293 ns/op
# Warmup Iteration   5: 16715.236 ns/op
Iteration   1: 16790.773 ns/op
Iteration   2: 16803.725 ns/op
Iteration   3: 16712.202 ns/op
Iteration   4: 16768.586 ns/op
Iteration   5: 16786.793 ns/op

# Run progress: 83.33% complete, ETA 00:01:40
# Fork: 3 of 3
# Warmup Iteration   1: 17942.379 ns/op
# Warmup Iteration   2: 16856.301 ns/op
# Warmup Iteration   3: 16765.338 ns/op
# Warmup Iteration   4: 16778.950 ns/op
# Warmup Iteration   5: 16779.071 ns/op
Iteration   1: 16784.662 ns/op
Iteration   2: 16806.478 ns/op
Iteration   3: 16798.168 ns/op
Iteration   4: 16792.636 ns/op
Iteration   5: 16756.062 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.LoopReductionBenchmark.loop_reduction":
  16779.982 ±(99.9%) 27.897 ns/op [Average]
  (min, avg, max) = (16712.202, 16779.982, 16806.478), stdev = 26.095
  CI (99.9%): [16752.085, 16807.878] (assumes normal distribution)


# Run complete. Total time: 00:10:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                              (iterations)  (offset)  Mode  Cnt      Score    Error  Units
LoopReductionBenchmark.baseline             1048576       128  avgt   15      3.600 ±  0.065  ns/op
LoopReductionBenchmark.loop_reduction       1048576       128  avgt   15  16779.982 ± 27.897  ns/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_graal_jit/LoopReductionBenchmark.json
Running java -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler -jar benchmarks/target/benchmarks.jar .*LoopUnswitchBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_graal_jit/LoopUnswitchBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.LoopUnswitchBenchmark.baseline
# Parameters: (magicNumber = 64, size = 262144)

# Run progress: 0.00% complete, ETA 00:10:00
# Fork: 1 of 3
# Warmup Iteration   1: 555.758 us/op
# Warmup Iteration   2: 502.317 us/op
# Warmup Iteration   3: 500.170 us/op
# Warmup Iteration   4: 501.412 us/op
# Warmup Iteration   5: 499.310 us/op
Iteration   1: 492.813 us/op
Iteration   2: 518.686 us/op
Iteration   3: 484.796 us/op
Iteration   4: 485.324 us/op
Iteration   5: 486.017 us/op

# Run progress: 16.67% complete, ETA 00:08:21
# Fork: 2 of 3
# Warmup Iteration   1: 583.521 us/op
# Warmup Iteration   2: 542.584 us/op
# Warmup Iteration   3: 537.597 us/op
# Warmup Iteration   4: 535.687 us/op
# Warmup Iteration   5: 505.033 us/op
Iteration   1: 502.976 us/op
Iteration   2: 525.794 us/op
Iteration   3: 526.880 us/op
Iteration   4: 524.436 us/op
Iteration   5: 524.825 us/op

# Run progress: 33.33% complete, ETA 00:06:41
# Fork: 3 of 3
# Warmup Iteration   1: 572.853 us/op
# Warmup Iteration   2: 536.397 us/op
# Warmup Iteration   3: 534.293 us/op
# Warmup Iteration   4: 533.945 us/op
# Warmup Iteration   5: 530.445 us/op
Iteration   1: 527.075 us/op
Iteration   2: 489.293 us/op
Iteration   3: 490.699 us/op
Iteration   4: 491.670 us/op
Iteration   5: 492.709 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.LoopUnswitchBenchmark.baseline":
  504.266 ±(99.9%) 19.032 us/op [Average]
  (min, avg, max) = (484.796, 504.266, 527.075), stdev = 17.802
  CI (99.9%): [485.235, 523.298] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.LoopUnswitchBenchmark.loop_unswitch
# Parameters: (magicNumber = 64, size = 262144)

# Run progress: 50.00% complete, ETA 00:05:00
# Fork: 1 of 3
# Warmup Iteration   1: 1282.425 us/op
# Warmup Iteration   2: 1251.885 us/op
# Warmup Iteration   3: 1240.344 us/op
# Warmup Iteration   4: 1237.617 us/op
# Warmup Iteration   5: 1235.707 us/op
Iteration   1: 1232.555 us/op
Iteration   2: 1190.271 us/op
Iteration   3: 1196.153 us/op
Iteration   4: 1196.595 us/op
Iteration   5: 1198.060 us/op

# Run progress: 66.67% complete, ETA 00:03:20
# Fork: 2 of 3
# Warmup Iteration   1: 1330.788 us/op
# Warmup Iteration   2: 1231.152 us/op
# Warmup Iteration   3: 1222.530 us/op
# Warmup Iteration   4: 1227.692 us/op
# Warmup Iteration   5: 1224.250 us/op
Iteration   1: 1225.256 us/op
Iteration   2: 1154.385 us/op
Iteration   3: 1148.761 us/op
Iteration   4: 1232.566 us/op
Iteration   5: 1225.422 us/op

# Run progress: 83.33% complete, ETA 00:01:40
# Fork: 3 of 3
# Warmup Iteration   1: 1313.599 us/op
# Warmup Iteration   2: 1170.443 us/op
# Warmup Iteration   3: 1162.801 us/op
# Warmup Iteration   4: 1165.636 us/op
# Warmup Iteration   5: 1163.886 us/op
Iteration   1: 1238.043 us/op
Iteration   2: 1193.790 us/op
Iteration   3: 1192.687 us/op
Iteration   4: 1196.077 us/op
Iteration   5: 1194.504 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.LoopUnswitchBenchmark.loop_unswitch":
  1201.008 ±(99.9%) 28.292 us/op [Average]
  (min, avg, max) = (1148.761, 1201.008, 1238.043), stdev = 26.465
  CI (99.9%): [1172.716, 1229.301] (assumes normal distribution)


# Run complete. Total time: 00:10:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                            (magicNumber)  (size)  Mode  Cnt     Score    Error  Units
LoopUnswitchBenchmark.baseline                  64  262144  avgt   15   504.266 ± 19.032  us/op
LoopUnswitchBenchmark.loop_unswitch             64  262144  avgt   15  1201.008 ± 28.292  us/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_graal_jit/LoopUnswitchBenchmark.json
Running java -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler -jar benchmarks/target/benchmarks.jar .*ListLoopIteratorBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_graal_jit/ListLoopIteratorBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ListLoopIteratorBenchmark.counted_loop
# Parameters: (size = 262144)

# Run progress: 0.00% complete, ETA 00:30:00
# Fork: 1 of 3
# Warmup Iteration   1: 974.664 us/op
# Warmup Iteration   2: 882.209 us/op
# Warmup Iteration   3: 826.021 us/op
# Warmup Iteration   4: 827.796 us/op
# Warmup Iteration   5: 828.559 us/op
Iteration   1: 828.493 us/op
Iteration   2: 829.508 us/op
Iteration   3: 828.674 us/op
Iteration   4: 851.444 us/op
Iteration   5: 847.121 us/op

# Run progress: 5.56% complete, ETA 00:28:26
# Fork: 2 of 3
# Warmup Iteration   1: 942.658 us/op
# Warmup Iteration   2: 879.191 us/op
# Warmup Iteration   3: 872.672 us/op
# Warmup Iteration   4: 870.523 us/op
# Warmup Iteration   5: 871.745 us/op
Iteration   1: 871.755 us/op
Iteration   2: 872.023 us/op
Iteration   3: 844.952 us/op
Iteration   4: 846.773 us/op
Iteration   5: 844.172 us/op

# Run progress: 11.11% complete, ETA 00:26:44
# Fork: 3 of 3
# Warmup Iteration   1: 924.202 us/op
# Warmup Iteration   2: 876.813 us/op
# Warmup Iteration   3: 874.818 us/op
# Warmup Iteration   4: 872.157 us/op
# Warmup Iteration   5: 869.102 us/op
Iteration   1: 871.095 us/op
Iteration   2: 823.555 us/op
Iteration   3: 825.455 us/op
Iteration   4: 826.742 us/op
Iteration   5: 826.400 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.ListLoopIteratorBenchmark.counted_loop":
  842.544 ±(99.9%) 18.924 us/op [Average]
  (min, avg, max) = (823.555, 842.544, 872.023), stdev = 17.701
  CI (99.9%): [823.620, 861.468] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ListLoopIteratorBenchmark.do_while_loop
# Parameters: (size = 262144)

# Run progress: 16.67% complete, ETA 00:25:04
# Fork: 1 of 3
# Warmup Iteration   1: 1030.561 us/op
# Warmup Iteration   2: 940.652 us/op
# Warmup Iteration   3: 932.697 us/op
# Warmup Iteration   4: 933.631 us/op
# Warmup Iteration   5: 934.137 us/op
Iteration   1: 988.530 us/op
Iteration   2: 987.081 us/op
Iteration   3: 985.214 us/op
Iteration   4: 983.363 us/op
Iteration   5: 983.124 us/op

# Run progress: 22.22% complete, ETA 00:23:24
# Fork: 2 of 3
# Warmup Iteration   1: 1050.031 us/op
# Warmup Iteration   2: 939.845 us/op
# Warmup Iteration   3: 933.810 us/op
# Warmup Iteration   4: 934.750 us/op
# Warmup Iteration   5: 935.287 us/op
Iteration   1: 935.788 us/op
Iteration   2: 935.770 us/op
Iteration   3: 935.021 us/op
Iteration   4: 934.316 us/op
Iteration   5: 950.684 us/op

# Run progress: 27.78% complete, ETA 00:21:43
# Fork: 3 of 3
# Warmup Iteration   1: 1042.516 us/op
# Warmup Iteration   2: 1001.495 us/op
# Warmup Iteration   3: 990.693 us/op
# Warmup Iteration   4: 987.169 us/op
# Warmup Iteration   5: 988.827 us/op
Iteration   1: 986.231 us/op
Iteration   2: 983.962 us/op
Iteration   3: 953.142 us/op
Iteration   4: 956.597 us/op
Iteration   5: 958.958 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.ListLoopIteratorBenchmark.do_while_loop":
  963.852 ±(99.9%) 23.745 us/op [Average]
  (min, avg, max) = (934.316, 963.852, 988.530), stdev = 22.211
  CI (99.9%): [940.107, 987.597] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ListLoopIteratorBenchmark.for_each
# Parameters: (size = 262144)

# Run progress: 33.33% complete, ETA 00:20:03
# Fork: 1 of 3
# Warmup Iteration   1: 1118.658 us/op
# Warmup Iteration   2: 1037.146 us/op
# Warmup Iteration   3: 992.960 us/op
# Warmup Iteration   4: 995.024 us/op
# Warmup Iteration   5: 993.809 us/op
Iteration   1: 995.113 us/op
Iteration   2: 995.666 us/op
Iteration   3: 968.427 us/op
Iteration   4: 967.958 us/op
Iteration   5: 973.211 us/op

# Run progress: 38.89% complete, ETA 00:18:23
# Fork: 2 of 3
# Warmup Iteration   1: 1069.125 us/op
# Warmup Iteration   2: 987.138 us/op
# Warmup Iteration   3: 980.038 us/op
# Warmup Iteration   4: 981.313 us/op
# Warmup Iteration   5: 980.461 us/op
Iteration   1: 981.075 us/op
Iteration   2: 981.151 us/op
Iteration   3: 981.652 us/op
Iteration   4: 981.378 us/op
Iteration   5: 980.816 us/op

# Run progress: 44.44% complete, ETA 00:16:42
# Fork: 3 of 3
# Warmup Iteration   1: 1107.637 us/op
# Warmup Iteration   2: 1043.165 us/op
# Warmup Iteration   3: 980.445 us/op
# Warmup Iteration   4: 982.457 us/op
# Warmup Iteration   5: 1003.340 us/op
Iteration   1: 1002.727 us/op
Iteration   2: 1005.928 us/op
Iteration   3: 1036.758 us/op
Iteration   4: 1028.033 us/op
Iteration   5: 997.249 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.ListLoopIteratorBenchmark.for_each":
  991.810 ±(99.9%) 21.627 us/op [Average]
  (min, avg, max) = (967.958, 991.810, 1036.758), stdev = 20.230
  CI (99.9%): [970.182, 1013.437] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ListLoopIteratorBenchmark.for_each_with_consumer
# Parameters: (size = 262144)

# Run progress: 50.00% complete, ETA 00:15:02
# Fork: 1 of 3
# Warmup Iteration   1: 1157.325 us/op
# Warmup Iteration   2: 1063.074 us/op
# Warmup Iteration   3: 1057.961 us/op
# Warmup Iteration   4: 1056.468 us/op
# Warmup Iteration   5: 1053.927 us/op
Iteration   1: 1050.346 us/op
Iteration   2: 1011.942 us/op
Iteration   3: 1017.848 us/op
Iteration   4: 1018.225 us/op
Iteration   5: 1020.063 us/op

# Run progress: 55.56% complete, ETA 00:13:22
# Fork: 2 of 3
# Warmup Iteration   1: 1106.966 us/op
# Warmup Iteration   2: 1004.315 us/op
# Warmup Iteration   3: 1052.378 us/op
# Warmup Iteration   4: 1055.866 us/op
# Warmup Iteration   5: 1055.625 us/op
Iteration   1: 1053.126 us/op
Iteration   2: 1048.072 us/op
Iteration   3: 1046.920 us/op
Iteration   4: 1046.929 us/op
Iteration   5: 1047.695 us/op

# Run progress: 61.11% complete, ETA 00:11:41
# Fork: 3 of 3
# Warmup Iteration   1: 1126.518 us/op
# Warmup Iteration   2: 996.152 us/op
# Warmup Iteration   3: 1014.226 us/op
# Warmup Iteration   4: 1044.514 us/op
# Warmup Iteration   5: 1045.043 us/op
Iteration   1: 1040.928 us/op
Iteration   2: 1055.930 us/op
Iteration   3: 982.664 us/op
Iteration   4: 985.451 us/op
Iteration   5: 984.559 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.ListLoopIteratorBenchmark.for_each_with_consumer":
  1027.380 ±(99.9%) 28.359 us/op [Average]
  (min, avg, max) = (982.664, 1027.380, 1055.930), stdev = 26.527
  CI (99.9%): [999.021, 1055.739] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ListLoopIteratorBenchmark.loop_iterator
# Parameters: (size = 262144)

# Run progress: 66.67% complete, ETA 00:10:01
# Fork: 1 of 3
# Warmup Iteration   1: 978.818 us/op
# Warmup Iteration   2: 913.518 us/op
# Warmup Iteration   3: 908.240 us/op
# Warmup Iteration   4: 907.268 us/op
# Warmup Iteration   5: 904.562 us/op
Iteration   1: 902.624 us/op
Iteration   2: 904.193 us/op
Iteration   3: 904.171 us/op
Iteration   4: 903.212 us/op
Iteration   5: 908.040 us/op

# Run progress: 72.22% complete, ETA 00:08:21
# Fork: 2 of 3
# Warmup Iteration   1: 972.751 us/op
# Warmup Iteration   2: 911.587 us/op
# Warmup Iteration   3: 907.245 us/op
# Warmup Iteration   4: 905.357 us/op
# Warmup Iteration   5: 903.285 us/op
Iteration   1: 905.645 us/op
Iteration   2: 853.512 us/op
Iteration   3: 856.098 us/op
Iteration   4: 859.698 us/op
Iteration   5: 862.779 us/op

# Run progress: 77.78% complete, ETA 00:06:41
# Fork: 3 of 3
# Warmup Iteration   1: 986.231 us/op
# Warmup Iteration   2: 923.712 us/op
# Warmup Iteration   3: 911.565 us/op
# Warmup Iteration   4: 878.471 us/op
# Warmup Iteration   5: 881.209 us/op
Iteration   1: 880.596 us/op
Iteration   2: 909.113 us/op
Iteration   3: 905.595 us/op
Iteration   4: 913.108 us/op
Iteration   5: 908.560 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.ListLoopIteratorBenchmark.loop_iterator":
  891.796 ±(99.9%) 23.859 us/op [Average]
  (min, avg, max) = (853.512, 891.796, 913.108), stdev = 22.318
  CI (99.9%): [867.937, 915.655] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ListLoopIteratorBenchmark.while_loop
# Parameters: (size = 262144)

# Run progress: 83.33% complete, ETA 00:05:00
# Fork: 1 of 3
# Warmup Iteration   1: 925.533 us/op
# Warmup Iteration   2: 878.071 us/op
# Warmup Iteration   3: 871.920 us/op
# Warmup Iteration   4: 869.919 us/op
# Warmup Iteration   5: 868.984 us/op
Iteration   1: 869.423 us/op
Iteration   2: 820.030 us/op
Iteration   3: 822.924 us/op
Iteration   4: 874.739 us/op
Iteration   5: 842.191 us/op

# Run progress: 88.89% complete, ETA 00:03:20
# Fork: 2 of 3
# Warmup Iteration   1: 888.083 us/op
# Warmup Iteration   2: 875.958 us/op
# Warmup Iteration   3: 847.719 us/op
# Warmup Iteration   4: 845.272 us/op
# Warmup Iteration   5: 845.781 us/op
Iteration   1: 847.407 us/op
Iteration   2: 874.562 us/op
Iteration   3: 874.231 us/op
Iteration   4: 872.122 us/op
Iteration   5: 839.707 us/op

# Run progress: 94.44% complete, ETA 00:01:40
# Fork: 3 of 3
# Warmup Iteration   1: 920.320 us/op
# Warmup Iteration   2: 855.458 us/op
# Warmup Iteration   3: 848.200 us/op
# Warmup Iteration   4: 845.796 us/op
# Warmup Iteration   5: 873.518 us/op
Iteration   1: 871.396 us/op
Iteration   2: 824.680 us/op
Iteration   3: 826.258 us/op
Iteration   4: 827.669 us/op
Iteration   5: 838.710 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.ListLoopIteratorBenchmark.while_loop":
  848.403 ±(99.9%) 23.430 us/op [Average]
  (min, avg, max) = (820.030, 848.403, 874.739), stdev = 21.916
  CI (99.9%): [824.973, 871.833] (assumes normal distribution)


# Run complete. Total time: 00:30:04

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                         (size)  Mode  Cnt     Score    Error  Units
ListLoopIteratorBenchmark.counted_loop            262144  avgt   15   842.544 ± 18.924  us/op
ListLoopIteratorBenchmark.do_while_loop           262144  avgt   15   963.852 ± 23.745  us/op
ListLoopIteratorBenchmark.for_each                262144  avgt   15   991.810 ± 21.627  us/op
ListLoopIteratorBenchmark.for_each_with_consumer  262144  avgt   15  1027.380 ± 28.359  us/op
ListLoopIteratorBenchmark.loop_iterator           262144  avgt   15   891.796 ± 23.859  us/op
ListLoopIteratorBenchmark.while_loop              262144  avgt   15   848.403 ± 23.430  us/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_graal_jit/ListLoopIteratorBenchmark.json
Running java -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler -jar benchmarks/target/benchmarks.jar .*ScalarEvolutionAndLoopOptimizationBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_graal_jit/ScalarEvolutionAndLoopOptimizationBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ScalarEvolutionAndLoopOptimizationBenchmark.reduction_formula
# Parameters: (size = 16384)

# Run progress: 0.00% complete, ETA 00:10:00
# Fork: 1 of 3
# Warmup Iteration   1: 3.365 ns/op
# Warmup Iteration   2: 3.056 ns/op
# Warmup Iteration   3: 3.135 ns/op
# Warmup Iteration   4: 3.123 ns/op
# Warmup Iteration   5: 3.116 ns/op
Iteration   1: 3.108 ns/op
Iteration   2: 3.115 ns/op
Iteration   3: 3.117 ns/op
Iteration   4: 2.967 ns/op
Iteration   5: 2.975 ns/op

# Run progress: 16.67% complete, ETA 00:08:21
# Fork: 2 of 3
# Warmup Iteration   1: 3.250 ns/op
# Warmup Iteration   2: 2.942 ns/op
# Warmup Iteration   3: 3.057 ns/op
# Warmup Iteration   4: 3.059 ns/op
# Warmup Iteration   5: 2.999 ns/op
Iteration   1: 2.989 ns/op
Iteration   2: 3.159 ns/op
Iteration   3: 3.138 ns/op
Iteration   4: 3.117 ns/op
Iteration   5: 3.114 ns/op

# Run progress: 33.33% complete, ETA 00:06:41
# Fork: 3 of 3
# Warmup Iteration   1: 3.219 ns/op
# Warmup Iteration   2: 2.969 ns/op
# Warmup Iteration   3: 3.164 ns/op
# Warmup Iteration   4: 3.168 ns/op
# Warmup Iteration   5: 3.168 ns/op
Iteration   1: 3.147 ns/op
Iteration   2: 3.049 ns/op
Iteration   3: 3.067 ns/op
Iteration   4: 3.065 ns/op
Iteration   5: 2.979 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ScalarEvolutionAndLoopOptimizationBenchmark.reduction_formula":
  3.074 ±(99.9%) 0.072 ns/op [Average]
  (min, avg, max) = (2.967, 3.074, 3.159), stdev = 0.067
  CI (99.9%): [3.002, 3.145] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ScalarEvolutionAndLoopOptimizationBenchmark.sum_from_0_to_N
# Parameters: (size = 16384)

# Run progress: 50.00% complete, ETA 00:05:00
# Fork: 1 of 3
# Warmup Iteration   1: 4418.930 ns/op
# Warmup Iteration   2: 4196.986 ns/op
# Warmup Iteration   3: 4189.954 ns/op
# Warmup Iteration   4: 4190.987 ns/op
# Warmup Iteration   5: 4191.418 ns/op
Iteration   1: 4190.513 ns/op
Iteration   2: 4187.571 ns/op
Iteration   3: 4189.954 ns/op
Iteration   4: 4190.700 ns/op
Iteration   5: 4180.948 ns/op

# Run progress: 66.67% complete, ETA 00:03:20
# Fork: 2 of 3
# Warmup Iteration   1: 4410.428 ns/op
# Warmup Iteration   2: 4196.521 ns/op
# Warmup Iteration   3: 4177.882 ns/op
# Warmup Iteration   4: 4188.945 ns/op
# Warmup Iteration   5: 4193.162 ns/op
Iteration   1: 4191.921 ns/op
Iteration   2: 4185.607 ns/op
Iteration   3: 4171.723 ns/op
Iteration   4: 4188.488 ns/op
Iteration   5: 4182.518 ns/op

# Run progress: 83.33% complete, ETA 00:01:40
# Fork: 3 of 3
# Warmup Iteration   1: 4402.747 ns/op
# Warmup Iteration   2: 4202.125 ns/op
# Warmup Iteration   3: 4188.265 ns/op
# Warmup Iteration   4: 4189.371 ns/op
# Warmup Iteration   5: 4181.735 ns/op
Iteration   1: 4186.990 ns/op
Iteration   2: 4185.256 ns/op
Iteration   3: 4188.096 ns/op
Iteration   4: 4188.515 ns/op
Iteration   5: 4192.023 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ScalarEvolutionAndLoopOptimizationBenchmark.sum_from_0_to_N":
  4186.721 ±(99.9%) 5.600 ns/op [Average]
  (min, avg, max) = (4171.723, 4186.721, 4192.023), stdev = 5.238
  CI (99.9%): [4181.121, 4192.322] (assumes normal distribution)


# Run complete. Total time: 00:10:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                                      (size)  Mode  Cnt     Score   Error  Units
ScalarEvolutionAndLoopOptimizationBenchmark.reduction_formula   16384  avgt   15     3.074 ± 0.072  ns/op
ScalarEvolutionAndLoopOptimizationBenchmark.sum_from_0_to_N     16384  avgt   15  4186.721 ± 5.600  ns/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_graal_jit/ScalarEvolutionAndLoopOptimizationBenchmark.json
Running java -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler -jar benchmarks/target/benchmarks.jar .*StraightenCodeBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_graal_jit/StraightenCodeBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StraightenCodeBenchmark.straighten_1_int
# Parameters: (size = 65536)

# Run progress: 0.00% complete, ETA 00:30:00
# Fork: 1 of 3
# Warmup Iteration   1: 188.463 us/op
# Warmup Iteration   2: 178.785 us/op
# Warmup Iteration   3: 174.994 us/op
# Warmup Iteration   4: 181.356 us/op
# Warmup Iteration   5: 181.827 us/op
Iteration   1: 181.272 us/op
Iteration   2: 181.333 us/op
Iteration   3: 181.029 us/op
Iteration   4: 181.248 us/op
Iteration   5: 181.214 us/op

# Run progress: 5.56% complete, ETA 00:28:26
# Fork: 2 of 3
# Warmup Iteration   1: 190.747 us/op
# Warmup Iteration   2: 174.412 us/op
# Warmup Iteration   3: 174.713 us/op
# Warmup Iteration   4: 181.350 us/op
# Warmup Iteration   5: 181.387 us/op
Iteration   1: 180.833 us/op
Iteration   2: 180.294 us/op
Iteration   3: 183.999 us/op
Iteration   4: 181.104 us/op
Iteration   5: 182.749 us/op

# Run progress: 11.11% complete, ETA 00:26:45
# Fork: 3 of 3
# Warmup Iteration   1: 196.980 us/op
# Warmup Iteration   2: 180.477 us/op
# Warmup Iteration   3: 178.623 us/op
# Warmup Iteration   4: 181.528 us/op
# Warmup Iteration   5: 184.795 us/op
Iteration   1: 184.898 us/op
Iteration   2: 181.373 us/op
Iteration   3: 180.113 us/op
Iteration   4: 181.236 us/op
Iteration   5: 180.668 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.StraightenCodeBenchmark.straighten_1_int":
  181.558 ±(99.9%) 1.414 us/op [Average]
  (min, avg, max) = (180.113, 181.558, 184.898), stdev = 1.323
  CI (99.9%): [180.143, 182.972] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StraightenCodeBenchmark.straighten_1_long
# Parameters: (size = 65536)

# Run progress: 16.67% complete, ETA 00:25:04
# Fork: 1 of 3
# Warmup Iteration   1: 189.227 us/op
# Warmup Iteration   2: 179.400 us/op
# Warmup Iteration   3: 181.533 us/op
# Warmup Iteration   4: 185.204 us/op
# Warmup Iteration   5: 176.930 us/op
Iteration   1: 176.620 us/op
Iteration   2: 183.105 us/op
Iteration   3: 176.829 us/op
Iteration   4: 176.169 us/op
Iteration   5: 176.355 us/op

# Run progress: 22.22% complete, ETA 00:23:23
# Fork: 2 of 3
# Warmup Iteration   1: 199.103 us/op
# Warmup Iteration   2: 191.586 us/op
# Warmup Iteration   3: 186.984 us/op
# Warmup Iteration   4: 187.889 us/op
# Warmup Iteration   5: 182.549 us/op
Iteration   1: 182.951 us/op
Iteration   2: 183.847 us/op
Iteration   3: 177.010 us/op
Iteration   4: 176.464 us/op
Iteration   5: 176.530 us/op

# Run progress: 27.78% complete, ETA 00:21:43
# Fork: 3 of 3
# Warmup Iteration   1: 198.606 us/op
# Warmup Iteration   2: 178.969 us/op
# Warmup Iteration   3: 178.715 us/op
# Warmup Iteration   4: 183.353 us/op
# Warmup Iteration   5: 176.206 us/op
Iteration   1: 176.260 us/op
Iteration   2: 176.681 us/op
Iteration   3: 176.367 us/op
Iteration   4: 176.636 us/op
Iteration   5: 177.230 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.StraightenCodeBenchmark.straighten_1_long":
  177.937 ±(99.9%) 2.989 us/op [Average]
  (min, avg, max) = (176.169, 177.937, 183.847), stdev = 2.796
  CI (99.9%): [174.948, 180.926] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StraightenCodeBenchmark.straighten_2_int
# Parameters: (size = 65536)

# Run progress: 33.33% complete, ETA 00:20:03
# Fork: 1 of 3
# Warmup Iteration   1: 279.955 us/op
# Warmup Iteration   2: 269.375 us/op
# Warmup Iteration   3: 265.220 us/op
# Warmup Iteration   4: 250.820 us/op
# Warmup Iteration   5: 252.675 us/op
Iteration   1: 249.781 us/op
Iteration   2: 249.896 us/op
Iteration   3: 251.105 us/op
Iteration   4: 251.244 us/op
Iteration   5: 251.406 us/op

# Run progress: 38.89% complete, ETA 00:18:22
# Fork: 2 of 3
# Warmup Iteration   1: 275.992 us/op
# Warmup Iteration   2: 259.730 us/op
# Warmup Iteration   3: 260.813 us/op
# Warmup Iteration   4: 256.979 us/op
# Warmup Iteration   5: 257.778 us/op
Iteration   1: 257.375 us/op
Iteration   2: 257.783 us/op
Iteration   3: 257.017 us/op
Iteration   4: 257.669 us/op
Iteration   5: 258.781 us/op

# Run progress: 44.44% complete, ETA 00:16:42
# Fork: 3 of 3
# Warmup Iteration   1: 282.371 us/op
# Warmup Iteration   2: 269.161 us/op
# Warmup Iteration   3: 266.216 us/op
# Warmup Iteration   4: 257.670 us/op
# Warmup Iteration   5: 257.170 us/op
Iteration   1: 257.299 us/op
Iteration   2: 257.416 us/op
Iteration   3: 257.438 us/op
Iteration   4: 256.808 us/op
Iteration   5: 257.247 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.StraightenCodeBenchmark.straighten_2_int":
  255.218 ±(99.9%) 3.603 us/op [Average]
  (min, avg, max) = (249.781, 255.218, 258.781), stdev = 3.370
  CI (99.9%): [251.614, 258.821] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StraightenCodeBenchmark.straighten_2_long
# Parameters: (size = 65536)

# Run progress: 50.00% complete, ETA 00:15:02
# Fork: 1 of 3
# Warmup Iteration   1: 286.400 us/op
# Warmup Iteration   2: 272.612 us/op
# Warmup Iteration   3: 270.590 us/op
# Warmup Iteration   4: 248.570 us/op
# Warmup Iteration   5: 247.795 us/op
Iteration   1: 247.016 us/op
Iteration   2: 247.220 us/op
Iteration   3: 247.639 us/op
Iteration   4: 248.578 us/op
Iteration   5: 247.020 us/op

# Run progress: 55.56% complete, ETA 00:13:22
# Fork: 2 of 3
# Warmup Iteration   1: 287.462 us/op
# Warmup Iteration   2: 272.133 us/op
# Warmup Iteration   3: 271.481 us/op
# Warmup Iteration   4: 247.622 us/op
# Warmup Iteration   5: 249.429 us/op
Iteration   1: 248.781 us/op
Iteration   2: 248.058 us/op
Iteration   3: 247.969 us/op
Iteration   4: 249.016 us/op
Iteration   5: 248.489 us/op

# Run progress: 61.11% complete, ETA 00:11:41
# Fork: 3 of 3
# Warmup Iteration   1: 287.381 us/op
# Warmup Iteration   2: 271.240 us/op
# Warmup Iteration   3: 271.162 us/op
# Warmup Iteration   4: 248.700 us/op
# Warmup Iteration   5: 248.334 us/op
Iteration   1: 248.173 us/op
Iteration   2: 248.487 us/op
Iteration   3: 247.944 us/op
Iteration   4: 246.363 us/op
Iteration   5: 248.361 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.StraightenCodeBenchmark.straighten_2_long":
  247.941 ±(99.9%) 0.804 us/op [Average]
  (min, avg, max) = (246.363, 247.941, 249.016), stdev = 0.752
  CI (99.9%): [247.137, 248.745] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StraightenCodeBenchmark.straighten_3_int
# Parameters: (size = 65536)

# Run progress: 66.67% complete, ETA 00:10:01
# Fork: 1 of 3
# Warmup Iteration   1: 232.484 us/op
# Warmup Iteration   2: 218.819 us/op
# Warmup Iteration   3: 213.164 us/op
# Warmup Iteration   4: 218.394 us/op
# Warmup Iteration   5: 218.314 us/op
Iteration   1: 218.453 us/op
Iteration   2: 219.285 us/op
Iteration   3: 218.296 us/op
Iteration   4: 218.507 us/op
Iteration   5: 218.597 us/op

# Run progress: 72.22% complete, ETA 00:08:21
# Fork: 2 of 3
# Warmup Iteration   1: 232.386 us/op
# Warmup Iteration   2: 221.189 us/op
# Warmup Iteration   3: 210.950 us/op
# Warmup Iteration   4: 220.642 us/op
# Warmup Iteration   5: 220.926 us/op
Iteration   1: 220.178 us/op
Iteration   2: 217.748 us/op
Iteration   3: 218.268 us/op
Iteration   4: 218.293 us/op
Iteration   5: 219.060 us/op

# Run progress: 77.78% complete, ETA 00:06:41
# Fork: 3 of 3
# Warmup Iteration   1: 234.517 us/op
# Warmup Iteration   2: 221.131 us/op
# Warmup Iteration   3: 212.152 us/op
# Warmup Iteration   4: 216.439 us/op
# Warmup Iteration   5: 218.197 us/op
Iteration   1: 219.411 us/op
Iteration   2: 218.161 us/op
Iteration   3: 217.991 us/op
Iteration   4: 218.271 us/op
Iteration   5: 217.874 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.StraightenCodeBenchmark.straighten_3_int":
  218.559 ±(99.9%) 0.703 us/op [Average]
  (min, avg, max) = (217.748, 218.559, 220.178), stdev = 0.658
  CI (99.9%): [217.856, 219.262] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StraightenCodeBenchmark.straighten_3_long
# Parameters: (size = 65536)

# Run progress: 83.33% complete, ETA 00:05:00
# Fork: 1 of 3
# Warmup Iteration   1: 232.851 us/op
# Warmup Iteration   2: 219.973 us/op
# Warmup Iteration   3: 218.006 us/op
# Warmup Iteration   4: 217.367 us/op
# Warmup Iteration   5: 217.029 us/op
Iteration   1: 217.199 us/op
Iteration   2: 217.345 us/op
Iteration   3: 217.094 us/op
Iteration   4: 217.359 us/op
Iteration   5: 217.395 us/op

# Run progress: 88.89% complete, ETA 00:03:20
# Fork: 2 of 3
# Warmup Iteration   1: 242.101 us/op
# Warmup Iteration   2: 221.194 us/op
# Warmup Iteration   3: 218.520 us/op
# Warmup Iteration   4: 222.302 us/op
# Warmup Iteration   5: 222.133 us/op
Iteration   1: 221.477 us/op
Iteration   2: 221.889 us/op
Iteration   3: 221.308 us/op
Iteration   4: 221.817 us/op
Iteration   5: 222.726 us/op

# Run progress: 94.44% complete, ETA 00:01:40
# Fork: 3 of 3
# Warmup Iteration   1: 239.893 us/op
# Warmup Iteration   2: 220.879 us/op
# Warmup Iteration   3: 218.340 us/op
# Warmup Iteration   4: 222.991 us/op
# Warmup Iteration   5: 222.007 us/op
Iteration   1: 222.222 us/op
Iteration   2: 222.145 us/op
Iteration   3: 221.879 us/op
Iteration   4: 221.952 us/op
Iteration   5: 221.152 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.StraightenCodeBenchmark.straighten_3_long":
  220.331 ±(99.9%) 2.422 us/op [Average]
  (min, avg, max) = (217.094, 220.331, 222.726), stdev = 2.266
  CI (99.9%): [217.909, 222.753] (assumes normal distribution)


# Run complete. Total time: 00:30:04

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                  (size)  Mode  Cnt    Score   Error  Units
StraightenCodeBenchmark.straighten_1_int    65536  avgt   15  181.558 ± 1.414  us/op
StraightenCodeBenchmark.straighten_1_long   65536  avgt   15  177.937 ± 2.989  us/op
StraightenCodeBenchmark.straighten_2_int    65536  avgt   15  255.218 ± 3.603  us/op
StraightenCodeBenchmark.straighten_2_long   65536  avgt   15  247.941 ± 0.804  us/op
StraightenCodeBenchmark.straighten_3_int    65536  avgt   15  218.559 ± 0.703  us/op
StraightenCodeBenchmark.straighten_3_long   65536  avgt   15  220.331 ± 2.422  us/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_graal_jit/StraightenCodeBenchmark.json
Running java -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler -jar benchmarks/target/benchmarks.jar .*StrengthReductionBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_graal_jit/StrengthReductionBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StrengthReductionBenchmark.addition
# Parameters: (heavyComputation = true, value = 179426549)

# Run progress: 0.00% complete, ETA 00:15:00
# Fork: 1 of 3
# Warmup Iteration   1: 10.993 ns/op
# Warmup Iteration   2: 10.206 ns/op
# Warmup Iteration   3: 10.186 ns/op
# Warmup Iteration   4: 10.171 ns/op
# Warmup Iteration   5: 10.135 ns/op
Iteration   1: 10.170 ns/op
Iteration   2: 10.172 ns/op
Iteration   3: 10.179 ns/op
Iteration   4: 10.182 ns/op
Iteration   5: 10.168 ns/op

# Run progress: 11.11% complete, ETA 00:13:22
# Fork: 2 of 3
# Warmup Iteration   1: 10.716 ns/op
# Warmup Iteration   2: 10.220 ns/op
# Warmup Iteration   3: 10.147 ns/op
# Warmup Iteration   4: 10.117 ns/op
# Warmup Iteration   5: 10.161 ns/op
Iteration   1: 10.134 ns/op
Iteration   2: 10.174 ns/op
Iteration   3: 10.144 ns/op
Iteration   4: 10.157 ns/op
Iteration   5: 10.152 ns/op

# Run progress: 22.22% complete, ETA 00:11:41
# Fork: 3 of 3
# Warmup Iteration   1: 10.957 ns/op
# Warmup Iteration   2: 10.488 ns/op
# Warmup Iteration   3: 10.477 ns/op
# Warmup Iteration   4: 10.497 ns/op
# Warmup Iteration   5: 10.498 ns/op
Iteration   1: 10.483 ns/op
Iteration   2: 10.465 ns/op
Iteration   3: 10.496 ns/op
Iteration   4: 10.482 ns/op
Iteration   5: 10.495 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StrengthReductionBenchmark.addition":
  10.270 ±(99.9%) 0.168 ns/op [Average]
  (min, avg, max) = (10.134, 10.270, 10.496), stdev = 0.157
  CI (99.9%): [10.102, 10.438] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StrengthReductionBenchmark.multiplication
# Parameters: (heavyComputation = true, value = 179426549)

# Run progress: 33.33% complete, ETA 00:10:01
# Fork: 1 of 3
# Warmup Iteration   1: 2.501 ns/op
# Warmup Iteration   2: 2.329 ns/op
# Warmup Iteration   3: 2.318 ns/op
# Warmup Iteration   4: 2.315 ns/op
# Warmup Iteration   5: 2.310 ns/op
Iteration   1: 2.242 ns/op
Iteration   2: 2.248 ns/op
Iteration   3: 2.246 ns/op
Iteration   4: 2.287 ns/op
Iteration   5: 2.313 ns/op

# Run progress: 44.44% complete, ETA 00:08:21
# Fork: 2 of 3
# Warmup Iteration   1: 2.455 ns/op
# Warmup Iteration   2: 2.312 ns/op
# Warmup Iteration   3: 2.325 ns/op
# Warmup Iteration   4: 2.244 ns/op
# Warmup Iteration   5: 2.248 ns/op
Iteration   1: 2.250 ns/op
Iteration   2: 2.249 ns/op
Iteration   3: 2.248 ns/op
Iteration   4: 2.252 ns/op
Iteration   5: 2.318 ns/op

# Run progress: 55.56% complete, ETA 00:06:40
# Fork: 3 of 3
# Warmup Iteration   1: 2.467 ns/op
# Warmup Iteration   2: 2.338 ns/op
# Warmup Iteration   3: 2.316 ns/op
# Warmup Iteration   4: 2.314 ns/op
# Warmup Iteration   5: 2.307 ns/op
Iteration   1: 2.309 ns/op
Iteration   2: 2.175 ns/op
Iteration   3: 2.185 ns/op
Iteration   4: 2.187 ns/op
Iteration   5: 2.195 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StrengthReductionBenchmark.multiplication":
  2.247 ±(99.9%) 0.050 ns/op [Average]
  (min, avg, max) = (2.175, 2.247, 2.318), stdev = 0.046
  CI (99.9%): [2.197, 2.297] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StrengthReductionBenchmark.shift
# Parameters: (heavyComputation = true, value = 179426549)

# Run progress: 66.67% complete, ETA 00:05:00
# Fork: 1 of 3
# Warmup Iteration   1: 2.471 ns/op
# Warmup Iteration   2: 2.220 ns/op
# Warmup Iteration   3: 2.193 ns/op
# Warmup Iteration   4: 2.323 ns/op
# Warmup Iteration   5: 2.319 ns/op
Iteration   1: 2.313 ns/op
Iteration   2: 2.312 ns/op
Iteration   3: 2.310 ns/op
Iteration   4: 2.307 ns/op
Iteration   5: 2.547 ns/op

# Run progress: 77.78% complete, ETA 00:03:20
# Fork: 2 of 3
# Warmup Iteration   1: 2.335 ns/op
# Warmup Iteration   2: 2.269 ns/op
# Warmup Iteration   3: 2.253 ns/op
# Warmup Iteration   4: 2.252 ns/op
# Warmup Iteration   5: 2.186 ns/op
Iteration   1: 2.190 ns/op
Iteration   2: 2.250 ns/op
Iteration   3: 2.253 ns/op
Iteration   4: 2.253 ns/op
Iteration   5: 2.252 ns/op

# Run progress: 88.89% complete, ETA 00:01:40
# Fork: 3 of 3
# Warmup Iteration   1: 2.451 ns/op
# Warmup Iteration   2: 2.330 ns/op
# Warmup Iteration   3: 2.186 ns/op
# Warmup Iteration   4: 2.192 ns/op
# Warmup Iteration   5: 2.193 ns/op
Iteration   1: 2.192 ns/op
Iteration   2: 2.327 ns/op
Iteration   3: 2.321 ns/op
Iteration   4: 2.317 ns/op
Iteration   5: 2.313 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StrengthReductionBenchmark.shift":
  2.297 ±(99.9%) 0.089 ns/op [Average]
  (min, avg, max) = (2.190, 2.297, 2.547), stdev = 0.083
  CI (99.9%): [2.208, 2.386] (assumes normal distribution)


# Run complete. Total time: 00:15:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                  (heavyComputation)    (value)  Mode  Cnt   Score   Error  Units
StrengthReductionBenchmark.addition                      true  179426549  avgt   15  10.270 ± 0.168  ns/op
StrengthReductionBenchmark.multiplication                true  179426549  avgt   15   2.247 ± 0.050  ns/op
StrengthReductionBenchmark.shift                         true  179426549  avgt   15   2.297 ± 0.089  ns/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_graal_jit/StrengthReductionBenchmark.json
Running java -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler -jar benchmarks/target/benchmarks.jar .*TailRecursionBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_graal_jit/TailRecursionBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler -Xss20M
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.TailRecursionBenchmark.fibonacci_baseline
# Parameters: (param = 32768)

# Run progress: 0.00% complete, ETA 00:10:00
# Fork: 1 of 3
# Warmup Iteration   1: 43.250 us/op
# Warmup Iteration   2: 40.632 us/op
# Warmup Iteration   3: 39.894 us/op
# Warmup Iteration   4: 39.796 us/op
# Warmup Iteration   5: 39.882 us/op
Iteration   1: 39.925 us/op
Iteration   2: 39.893 us/op
Iteration   3: 39.864 us/op
Iteration   4: 39.909 us/op
Iteration   5: 39.913 us/op

# Run progress: 16.67% complete, ETA 00:08:21
# Fork: 2 of 3
# Warmup Iteration   1: 41.532 us/op
# Warmup Iteration   2: 40.816 us/op
# Warmup Iteration   3: 39.904 us/op
# Warmup Iteration   4: 39.937 us/op
# Warmup Iteration   5: 39.786 us/op
Iteration   1: 39.662 us/op
Iteration   2: 39.786 us/op
Iteration   3: 39.878 us/op
Iteration   4: 39.905 us/op
Iteration   5: 40.222 us/op

# Run progress: 33.33% complete, ETA 00:06:41
# Fork: 3 of 3
# Warmup Iteration   1: 42.752 us/op
# Warmup Iteration   2: 40.752 us/op
# Warmup Iteration   3: 40.388 us/op
# Warmup Iteration   4: 40.479 us/op
# Warmup Iteration   5: 40.339 us/op
Iteration   1: 39.852 us/op
Iteration   2: 40.367 us/op
Iteration   3: 39.728 us/op
Iteration   4: 39.878 us/op
Iteration   5: 39.900 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.TailRecursionBenchmark.fibonacci_baseline":
  39.912 ±(99.9%) 0.186 us/op [Average]
  (min, avg, max) = (39.662, 39.912, 40.367), stdev = 0.174
  CI (99.9%): [39.726, 40.098] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler -Xss20M
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.TailRecursionBenchmark.fibonacci_tail_recursive
# Parameters: (param = 32768)

# Run progress: 50.00% complete, ETA 00:05:00
# Fork: 1 of 3
# Warmup Iteration   1: 18.046 us/op
# Warmup Iteration   2: 16.735 us/op
# Warmup Iteration   3: 16.654 us/op
# Warmup Iteration   4: 16.700 us/op
# Warmup Iteration   5: 18.129 us/op
Iteration   1: 17.244 us/op
Iteration   2: 16.832 us/op
Iteration   3: 16.945 us/op
Iteration   4: 16.985 us/op
Iteration   5: 16.956 us/op

# Run progress: 66.67% complete, ETA 00:03:20
# Fork: 2 of 3
# Warmup Iteration   1: 17.228 us/op
# Warmup Iteration   2: 16.014 us/op
# Warmup Iteration   3: 15.690 us/op
# Warmup Iteration   4: 15.958 us/op
# Warmup Iteration   5: 15.965 us/op
Iteration   1: 15.752 us/op
Iteration   2: 15.647 us/op
Iteration   3: 15.537 us/op
Iteration   4: 15.498 us/op
Iteration   5: 15.508 us/op

# Run progress: 83.33% complete, ETA 00:01:40
# Fork: 3 of 3
# Warmup Iteration   1: 19.966 us/op
# Warmup Iteration   2: 18.453 us/op
# Warmup Iteration   3: 17.963 us/op
# Warmup Iteration   4: 17.963 us/op
# Warmup Iteration   5: 17.975 us/op
Iteration   1: 17.970 us/op
Iteration   2: 17.987 us/op
Iteration   3: 17.977 us/op
Iteration   4: 17.982 us/op
Iteration   5: 17.977 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.TailRecursionBenchmark.fibonacci_tail_recursive":
  16.853 ±(99.9%) 1.091 us/op [Average]
  (min, avg, max) = (15.498, 16.853, 17.987), stdev = 1.020
  CI (99.9%): [15.763, 17.944] (assumes normal distribution)


# Run complete. Total time: 00:10:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        (param)  Mode  Cnt   Score   Error  Units
TailRecursionBenchmark.fibonacci_baseline          32768  avgt   15  39.912 ± 0.186  us/op
TailRecursionBenchmark.fibonacci_tail_recursive    32768  avgt   15  16.853 ± 1.091  us/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_graal_jit/TailRecursionBenchmark.json
Running java -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler -jar benchmarks/target/benchmarks.jar .*StoreAfterStoreBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_graal_jit/StoreAfterStoreBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StoreAfterStoreBenchmark.redundant_non_zero_volatile_stores

# Run progress: 0.00% complete, ETA 00:10:00
# Fork: 1 of 3
# Warmup Iteration   1: 7.934 ns/op
# Warmup Iteration   2: 6.902 ns/op
# Warmup Iteration   3: 6.895 ns/op
# Warmup Iteration   4: 6.810 ns/op
# Warmup Iteration   5: 6.920 ns/op
Iteration   1: 6.818 ns/op
Iteration   2: 6.805 ns/op
Iteration   3: 6.797 ns/op
Iteration   4: 6.881 ns/op
Iteration   5: 6.888 ns/op

# Run progress: 16.67% complete, ETA 00:08:21
# Fork: 2 of 3
# Warmup Iteration   1: 7.806 ns/op
# Warmup Iteration   2: 7.058 ns/op
# Warmup Iteration   3: 7.020 ns/op
# Warmup Iteration   4: 6.926 ns/op
# Warmup Iteration   5: 6.903 ns/op
Iteration   1: 6.901 ns/op
Iteration   2: 6.974 ns/op
Iteration   3: 6.955 ns/op
Iteration   4: 6.949 ns/op
Iteration   5: 6.989 ns/op

# Run progress: 33.33% complete, ETA 00:06:41
# Fork: 3 of 3
# Warmup Iteration   1: 7.855 ns/op
# Warmup Iteration   2: 7.041 ns/op
# Warmup Iteration   3: 7.006 ns/op
# Warmup Iteration   4: 6.894 ns/op
# Warmup Iteration   5: 6.995 ns/op
Iteration   1: 6.959 ns/op
Iteration   2: 6.980 ns/op
Iteration   3: 6.963 ns/op
Iteration   4: 6.914 ns/op
Iteration   5: 6.993 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StoreAfterStoreBenchmark.redundant_non_zero_volatile_stores":
  6.918 ±(99.9%) 0.072 ns/op [Average]
  (min, avg, max) = (6.797, 6.918, 6.993), stdev = 0.067
  CI (99.9%): [6.846, 6.990] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StoreAfterStoreBenchmark.redundant_zero_volatile_stores

# Run progress: 50.00% complete, ETA 00:05:00
# Fork: 1 of 3
# Warmup Iteration   1: 8.367 ns/op
# Warmup Iteration   2: 7.519 ns/op
# Warmup Iteration   3: 7.492 ns/op
# Warmup Iteration   4: 7.413 ns/op
# Warmup Iteration   5: 7.405 ns/op
Iteration   1: 7.504 ns/op
Iteration   2: 7.429 ns/op
Iteration   3: 7.411 ns/op
Iteration   4: 7.470 ns/op
Iteration   5: 7.555 ns/op

# Run progress: 66.67% complete, ETA 00:03:20
# Fork: 2 of 3
# Warmup Iteration   1: 8.370 ns/op
# Warmup Iteration   2: 7.638 ns/op
# Warmup Iteration   3: 7.573 ns/op
# Warmup Iteration   4: 7.464 ns/op
# Warmup Iteration   5: 7.514 ns/op
Iteration   1: 7.471 ns/op
Iteration   2: 7.555 ns/op
Iteration   3: 7.548 ns/op
Iteration   4: 7.476 ns/op
Iteration   5: 7.509 ns/op

# Run progress: 83.33% complete, ETA 00:01:40
# Fork: 3 of 3
# Warmup Iteration   1: 8.333 ns/op
# Warmup Iteration   2: 7.556 ns/op
# Warmup Iteration   3: 7.445 ns/op
# Warmup Iteration   4: 7.508 ns/op
# Warmup Iteration   5: 7.461 ns/op
Iteration   1: 7.545 ns/op
Iteration   2: 7.480 ns/op
Iteration   3: 7.459 ns/op
Iteration   4: 7.514 ns/op
Iteration   5: 7.455 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StoreAfterStoreBenchmark.redundant_zero_volatile_stores":
  7.492 ±(99.9%) 0.049 ns/op [Average]
  (min, avg, max) = (7.411, 7.492, 7.555), stdev = 0.046
  CI (99.9%): [7.443, 7.541] (assumes normal distribution)


# Run complete. Total time: 00:10:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                                    Mode  Cnt  Score   Error  Units
StoreAfterStoreBenchmark.redundant_non_zero_volatile_stores  avgt   15  6.918 ± 0.072  ns/op
StoreAfterStoreBenchmark.redundant_zero_volatile_stores      avgt   15  7.492 ± 0.049  ns/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_graal_jit/StoreAfterStoreBenchmark.json
Running java -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler -jar benchmarks/target/benchmarks.jar .*PostAllocationStoresBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_graal_jit/PostAllocationStoresBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.PostAllocationStoresBenchmark.no_store

# Run progress: 0.00% complete, ETA 00:20:00
# Fork: 1 of 3
# Warmup Iteration   1: 13.699 ns/op
# Warmup Iteration   2: 11.926 ns/op
# Warmup Iteration   3: 10.428 ns/op
# Warmup Iteration   4: 10.394 ns/op
# Warmup Iteration   5: 10.433 ns/op
Iteration   1: 10.393 ns/op
Iteration   2: 10.417 ns/op
Iteration   3: 10.424 ns/op
Iteration   4: 10.477 ns/op
Iteration   5: 10.444 ns/op

# Run progress: 8.33% complete, ETA 00:18:23
# Fork: 2 of 3
# Warmup Iteration   1: 13.186 ns/op
# Warmup Iteration   2: 12.031 ns/op
# Warmup Iteration   3: 10.402 ns/op
# Warmup Iteration   4: 10.387 ns/op
# Warmup Iteration   5: 10.417 ns/op
Iteration   1: 10.435 ns/op
Iteration   2: 10.389 ns/op
Iteration   3: 10.409 ns/op
Iteration   4: 10.391 ns/op
Iteration   5: 10.393 ns/op

# Run progress: 16.67% complete, ETA 00:16:43
# Fork: 3 of 3
# Warmup Iteration   1: 13.339 ns/op
# Warmup Iteration   2: 12.067 ns/op
# Warmup Iteration   3: 10.509 ns/op
# Warmup Iteration   4: 10.430 ns/op
# Warmup Iteration   5: 10.418 ns/op
Iteration   1: 10.419 ns/op
Iteration   2: 10.452 ns/op
Iteration   3: 10.441 ns/op
Iteration   4: 10.438 ns/op
Iteration   5: 10.468 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.PostAllocationStoresBenchmark.no_store":
  10.426 ±(99.9%) 0.030 ns/op [Average]
  (min, avg, max) = (10.389, 10.426, 10.477), stdev = 0.028
  CI (99.9%): [10.396, 10.456] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.PostAllocationStoresBenchmark.non_null_or_zero_store

# Run progress: 25.00% complete, ETA 00:15:02
# Fork: 1 of 3
# Warmup Iteration   1: 17.434 ns/op
# Warmup Iteration   2: 17.396 ns/op
# Warmup Iteration   3: 17.171 ns/op
# Warmup Iteration   4: 17.123 ns/op
# Warmup Iteration   5: 17.174 ns/op
Iteration   1: 17.009 ns/op
Iteration   2: 17.064 ns/op
Iteration   3: 17.162 ns/op
Iteration   4: 17.146 ns/op
Iteration   5: 17.140 ns/op

# Run progress: 33.33% complete, ETA 00:13:22
# Fork: 2 of 3
# Warmup Iteration   1: 17.265 ns/op
# Warmup Iteration   2: 17.296 ns/op
# Warmup Iteration   3: 17.237 ns/op
# Warmup Iteration   4: 17.048 ns/op
# Warmup Iteration   5: 16.967 ns/op
Iteration   1: 17.140 ns/op
Iteration   2: 16.978 ns/op
Iteration   3: 17.057 ns/op
Iteration   4: 17.117 ns/op
Iteration   5: 17.279 ns/op

# Run progress: 41.67% complete, ETA 00:11:42
# Fork: 3 of 3
# Warmup Iteration   1: 17.295 ns/op
# Warmup Iteration   2: 17.268 ns/op
# Warmup Iteration   3: 17.417 ns/op
# Warmup Iteration   4: 17.278 ns/op
# Warmup Iteration   5: 17.025 ns/op
Iteration   1: 17.169 ns/op
Iteration   2: 17.235 ns/op
Iteration   3: 17.206 ns/op
Iteration   4: 17.176 ns/op
Iteration   5: 17.106 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.PostAllocationStoresBenchmark.non_null_or_zero_store":
  17.132 ±(99.9%) 0.087 ns/op [Average]
  (min, avg, max) = (16.978, 17.132, 17.279), stdev = 0.081
  CI (99.9%): [17.046, 17.219] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.PostAllocationStoresBenchmark.redundant_null_or_zero_store

# Run progress: 50.00% complete, ETA 00:10:01
# Fork: 1 of 3
# Warmup Iteration   1: 13.333 ns/op
# Warmup Iteration   2: 12.030 ns/op
# Warmup Iteration   3: 10.378 ns/op
# Warmup Iteration   4: 10.379 ns/op
# Warmup Iteration   5: 10.395 ns/op
Iteration   1: 10.403 ns/op
Iteration   2: 10.435 ns/op
Iteration   3: 10.408 ns/op
Iteration   4: 10.426 ns/op
Iteration   5: 10.459 ns/op

# Run progress: 58.33% complete, ETA 00:08:21
# Fork: 2 of 3
# Warmup Iteration   1: 13.326 ns/op
# Warmup Iteration   2: 12.043 ns/op
# Warmup Iteration   3: 10.428 ns/op
# Warmup Iteration   4: 10.499 ns/op
# Warmup Iteration   5: 10.474 ns/op
Iteration   1: 10.496 ns/op
Iteration   2: 10.405 ns/op
Iteration   3: 10.520 ns/op
Iteration   4: 10.442 ns/op
Iteration   5: 10.494 ns/op

# Run progress: 66.67% complete, ETA 00:06:41
# Fork: 3 of 3
# Warmup Iteration   1: 13.311 ns/op
# Warmup Iteration   2: 12.294 ns/op
# Warmup Iteration   3: 10.516 ns/op
# Warmup Iteration   4: 10.519 ns/op
# Warmup Iteration   5: 10.462 ns/op
Iteration   1: 10.492 ns/op
Iteration   2: 10.503 ns/op
Iteration   3: 10.427 ns/op
Iteration   4: 10.398 ns/op
Iteration   5: 10.417 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.PostAllocationStoresBenchmark.redundant_null_or_zero_store":
  10.448 ±(99.9%) 0.045 ns/op [Average]
  (min, avg, max) = (10.398, 10.448, 10.520), stdev = 0.042
  CI (99.9%): [10.403, 10.493] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.PostAllocationStoresBenchmark.redundant_null_or_zero_volatile_store

# Run progress: 75.00% complete, ETA 00:05:00
# Fork: 1 of 3
# Warmup Iteration   1: 13.483 ns/op
# Warmup Iteration   2: 12.060 ns/op
# Warmup Iteration   3: 10.466 ns/op
# Warmup Iteration   4: 10.453 ns/op
# Warmup Iteration   5: 10.501 ns/op
Iteration   1: 10.526 ns/op
Iteration   2: 10.472 ns/op
Iteration   3: 10.471 ns/op
Iteration   4: 10.487 ns/op
Iteration   5: 10.539 ns/op

# Run progress: 83.33% complete, ETA 00:03:20
# Fork: 2 of 3
# Warmup Iteration   1: 13.505 ns/op
# Warmup Iteration   2: 12.073 ns/op
# Warmup Iteration   3: 10.475 ns/op
# Warmup Iteration   4: 10.534 ns/op
# Warmup Iteration   5: 10.489 ns/op
Iteration   1: 10.490 ns/op
Iteration   2: 10.468 ns/op
Iteration   3: 10.476 ns/op
Iteration   4: 10.468 ns/op
Iteration   5: 10.509 ns/op

# Run progress: 91.67% complete, ETA 00:01:40
# Fork: 3 of 3
# Warmup Iteration   1: 13.588 ns/op
# Warmup Iteration   2: 12.195 ns/op
# Warmup Iteration   3: 10.499 ns/op
# Warmup Iteration   4: 10.439 ns/op
# Warmup Iteration   5: 10.435 ns/op
Iteration   1: 10.532 ns/op
Iteration   2: 10.612 ns/op
Iteration   3: 10.490 ns/op
Iteration   4: 10.491 ns/op
Iteration   5: 10.485 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.PostAllocationStoresBenchmark.redundant_null_or_zero_volatile_store":
  10.501 ±(99.9%) 0.041 ns/op [Average]
  (min, avg, max) = (10.468, 10.501, 10.612), stdev = 0.038
  CI (99.9%): [10.460, 10.542] (assumes normal distribution)


# Run complete. Total time: 00:20:03

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                                            Mode  Cnt   Score   Error  Units
PostAllocationStoresBenchmark.no_store                               avgt   15  10.426 ± 0.030  ns/op
PostAllocationStoresBenchmark.non_null_or_zero_store                 avgt   15  17.132 ± 0.087  ns/op
PostAllocationStoresBenchmark.redundant_null_or_zero_store           avgt   15  10.448 ± 0.045  ns/op
PostAllocationStoresBenchmark.redundant_null_or_zero_volatile_store  avgt   15  10.501 ± 0.041  ns/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_graal_jit/PostAllocationStoresBenchmark.json
Running java -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler -jar benchmarks/target/benchmarks.jar .*ExceptionStackTraceBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_graal_jit/ExceptionStackTraceBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ExceptionStackTraceBenchmark.constant_exc
# Parameters: (message = Something wrong happened., stackDepth = 1)

# Run progress: 0.00% complete, ETA 01:15:00
# Fork: 1 of 3
# Warmup Iteration   1: 3.428 ns/op
# Warmup Iteration   2: 3.175 ns/op
# Warmup Iteration   3: 2.824 ns/op
# Warmup Iteration   4: 2.824 ns/op
# Warmup Iteration   5: 2.822 ns/op
Iteration   1: 2.887 ns/op
Iteration   2: 2.905 ns/op
Iteration   3: 2.900 ns/op
Iteration   4: 2.892 ns/op
Iteration   5: 2.885 ns/op

# Run progress: 2.22% complete, ETA 01:13:34
# Fork: 2 of 3
# Warmup Iteration   1: 3.083 ns/op
# Warmup Iteration   2: 3.088 ns/op
# Warmup Iteration   3: 2.891 ns/op
# Warmup Iteration   4: 2.886 ns/op
# Warmup Iteration   5: 2.878 ns/op
Iteration   1: 2.868 ns/op
Iteration   2: 2.874 ns/op
Iteration   3: 2.873 ns/op
Iteration   4: 2.864 ns/op
Iteration   5: 2.862 ns/op

# Run progress: 4.44% complete, ETA 01:11:51
# Fork: 3 of 3
# Warmup Iteration   1: 3.021 ns/op
# Warmup Iteration   2: 2.921 ns/op
# Warmup Iteration   3: 2.795 ns/op
# Warmup Iteration   4: 2.783 ns/op
# Warmup Iteration   5: 2.775 ns/op
Iteration   1: 2.776 ns/op
Iteration   2: 2.785 ns/op
Iteration   3: 2.773 ns/op
Iteration   4: 2.768 ns/op
Iteration   5: 2.767 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ExceptionStackTraceBenchmark.constant_exc":
  2.845 ±(99.9%) 0.057 ns/op [Average]
  (min, avg, max) = (2.767, 2.845, 2.905), stdev = 0.054
  CI (99.9%): [2.788, 2.903] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ExceptionStackTraceBenchmark.constant_exc
# Parameters: (message = Something wrong happened., stackDepth = 64)

# Run progress: 6.67% complete, ETA 01:10:10
# Fork: 1 of 3
# Warmup Iteration   1: 25.388 ns/op
# Warmup Iteration   2: 24.002 ns/op
# Warmup Iteration   3: 22.317 ns/op
# Warmup Iteration   4: 23.108 ns/op
# Warmup Iteration   5: 23.093 ns/op
Iteration   1: 23.066 ns/op
Iteration   2: 23.051 ns/op
Iteration   3: 23.048 ns/op
Iteration   4: 23.002 ns/op
Iteration   5: 23.470 ns/op

# Run progress: 8.89% complete, ETA 01:08:30
# Fork: 2 of 3
# Warmup Iteration   1: 25.216 ns/op
# Warmup Iteration   2: 23.993 ns/op
# Warmup Iteration   3: 22.436 ns/op
# Warmup Iteration   4: 22.568 ns/op
# Warmup Iteration   5: 22.572 ns/op
Iteration   1: 22.558 ns/op
Iteration   2: 22.528 ns/op
Iteration   3: 22.537 ns/op
Iteration   4: 22.913 ns/op
Iteration   5: 22.537 ns/op

# Run progress: 11.11% complete, ETA 01:06:50
# Fork: 3 of 3
# Warmup Iteration   1: 25.582 ns/op
# Warmup Iteration   2: 22.484 ns/op
# Warmup Iteration   3: 23.728 ns/op
# Warmup Iteration   4: 23.983 ns/op
# Warmup Iteration   5: 23.392 ns/op
Iteration   1: 23.397 ns/op
Iteration   2: 22.869 ns/op
Iteration   3: 22.998 ns/op
Iteration   4: 22.864 ns/op
Iteration   5: 22.938 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ExceptionStackTraceBenchmark.constant_exc":
  22.918 ±(99.9%) 0.310 ns/op [Average]
  (min, avg, max) = (22.528, 22.918, 23.470), stdev = 0.290
  CI (99.9%): [22.608, 23.229] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ExceptionStackTraceBenchmark.constant_exc
# Parameters: (message = Something wrong happened., stackDepth = 128)

# Run progress: 13.33% complete, ETA 01:05:09
# Fork: 1 of 3
# Warmup Iteration   1: 47.559 ns/op
# Warmup Iteration   2: 47.520 ns/op
# Warmup Iteration   3: 47.267 ns/op
# Warmup Iteration   4: 47.106 ns/op
# Warmup Iteration   5: 47.042 ns/op
Iteration   1: 46.943 ns/op
Iteration   2: 46.843 ns/op
Iteration   3: 46.933 ns/op
Iteration   4: 44.168 ns/op
Iteration   5: 44.265 ns/op

# Run progress: 15.56% complete, ETA 01:03:29
# Fork: 2 of 3
# Warmup Iteration   1: 50.007 ns/op
# Warmup Iteration   2: 46.905 ns/op
# Warmup Iteration   3: 46.701 ns/op
# Warmup Iteration   4: 46.635 ns/op
# Warmup Iteration   5: 46.621 ns/op
Iteration   1: 46.611 ns/op
Iteration   2: 46.597 ns/op
Iteration   3: 46.557 ns/op
Iteration   4: 46.546 ns/op
Iteration   5: 46.505 ns/op

# Run progress: 17.78% complete, ETA 01:01:49
# Fork: 3 of 3
# Warmup Iteration   1: 48.269 ns/op
# Warmup Iteration   2: 46.453 ns/op
# Warmup Iteration   3: 46.595 ns/op
# Warmup Iteration   4: 46.496 ns/op
# Warmup Iteration   5: 46.668 ns/op
Iteration   1: 46.628 ns/op
Iteration   2: 46.596 ns/op
Iteration   3: 46.610 ns/op
Iteration   4: 46.656 ns/op
Iteration   5: 46.599 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ExceptionStackTraceBenchmark.constant_exc":
  46.337 ±(99.9%) 0.932 ns/op [Average]
  (min, avg, max) = (44.168, 46.337, 46.943), stdev = 0.872
  CI (99.9%): [45.405, 47.269] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ExceptionStackTraceBenchmark.get_stack_trace
# Parameters: (message = Something wrong happened., stackDepth = 1)

# Run progress: 20.00% complete, ETA 01:00:09
# Fork: 1 of 3
# Warmup Iteration   1: 6715.620 ns/op
# Warmup Iteration   2: 6337.631 ns/op
# Warmup Iteration   3: 6257.397 ns/op
# Warmup Iteration   4: 6332.266 ns/op
# Warmup Iteration   5: 6315.944 ns/op
Iteration   1: 6307.239 ns/op
Iteration   2: 6127.472 ns/op
Iteration   3: 6301.796 ns/op
Iteration   4: 6147.639 ns/op
Iteration   5: 6102.250 ns/op

# Run progress: 22.22% complete, ETA 00:58:28
# Fork: 2 of 3
# Warmup Iteration   1: 6708.777 ns/op
# Warmup Iteration   2: 6028.787 ns/op
# Warmup Iteration   3: 6055.219 ns/op
# Warmup Iteration   4: 6294.507 ns/op
# Warmup Iteration   5: 6070.042 ns/op
Iteration   1: 5989.727 ns/op
Iteration   2: 5994.875 ns/op
Iteration   3: 5995.252 ns/op
Iteration   4: 6042.161 ns/op
Iteration   5: 6327.631 ns/op

# Run progress: 24.44% complete, ETA 00:56:48
# Fork: 3 of 3
# Warmup Iteration   1: 6787.072 ns/op
# Warmup Iteration   2: 6247.252 ns/op
# Warmup Iteration   3: 6064.736 ns/op
# Warmup Iteration   4: 6008.871 ns/op
# Warmup Iteration   5: 5995.734 ns/op
Iteration   1: 6005.497 ns/op
Iteration   2: 6331.026 ns/op
Iteration   3: 6364.016 ns/op
Iteration   4: 6248.013 ns/op
Iteration   5: 6033.761 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ExceptionStackTraceBenchmark.get_stack_trace":
  6154.557 ±(99.9%) 153.784 ns/op [Average]
  (min, avg, max) = (5989.727, 6154.557, 6364.016), stdev = 143.850
  CI (99.9%): [6000.773, 6308.342] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ExceptionStackTraceBenchmark.get_stack_trace
# Parameters: (message = Something wrong happened., stackDepth = 64)

# Run progress: 26.67% complete, ETA 00:55:08
# Fork: 1 of 3
# Warmup Iteration   1: 22069.060 ns/op
# Warmup Iteration   2: 21137.233 ns/op
# Warmup Iteration   3: 20409.451 ns/op
# Warmup Iteration   4: 20762.963 ns/op
# Warmup Iteration   5: 20434.377 ns/op
Iteration   1: 20960.651 ns/op
Iteration   2: 20972.775 ns/op
Iteration   3: 20351.367 ns/op
Iteration   4: 19845.328 ns/op
Iteration   5: 19954.832 ns/op

# Run progress: 28.89% complete, ETA 00:53:27
# Fork: 2 of 3
# Warmup Iteration   1: 22133.073 ns/op
# Warmup Iteration   2: 20674.443 ns/op
# Warmup Iteration   3: 20661.385 ns/op
# Warmup Iteration   4: 21244.910 ns/op
# Warmup Iteration   5: 21144.902 ns/op
Iteration   1: 20954.786 ns/op
Iteration   2: 21104.180 ns/op
Iteration   3: 21100.440 ns/op
Iteration   4: 21148.544 ns/op
Iteration   5: 20765.944 ns/op

# Run progress: 31.11% complete, ETA 00:51:47
# Fork: 3 of 3
# Warmup Iteration   1: 22257.771 ns/op
# Warmup Iteration   2: 20503.084 ns/op
# Warmup Iteration   3: 20364.312 ns/op
# Warmup Iteration   4: 20344.368 ns/op
# Warmup Iteration   5: 20091.361 ns/op
Iteration   1: 20067.541 ns/op
Iteration   2: 21162.442 ns/op
Iteration   3: 21089.079 ns/op
Iteration   4: 21027.119 ns/op
Iteration   5: 21066.282 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ExceptionStackTraceBenchmark.get_stack_trace":
  20771.421 ±(99.9%) 500.920 ns/op [Average]
  (min, avg, max) = (19845.328, 20771.421, 21162.442), stdev = 468.561
  CI (99.9%): [20270.500, 21272.341] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ExceptionStackTraceBenchmark.get_stack_trace
# Parameters: (message = Something wrong happened., stackDepth = 128)

# Run progress: 33.33% complete, ETA 00:50:07
# Fork: 1 of 3
# Warmup Iteration   1: 38832.467 ns/op
# Warmup Iteration   2: 34717.866 ns/op
# Warmup Iteration   3: 34344.774 ns/op
# Warmup Iteration   4: 36043.234 ns/op
# Warmup Iteration   5: 36195.969 ns/op
Iteration   1: 36054.851 ns/op
Iteration   2: 34380.047 ns/op
Iteration   3: 35966.523 ns/op
Iteration   4: 36151.963 ns/op
Iteration   5: 35595.702 ns/op

# Run progress: 35.56% complete, ETA 00:48:27
# Fork: 2 of 3
# Warmup Iteration   1: 38962.179 ns/op
# Warmup Iteration   2: 36444.374 ns/op
# Warmup Iteration   3: 36237.381 ns/op
# Warmup Iteration   4: 34611.168 ns/op
# Warmup Iteration   5: 36058.476 ns/op
Iteration   1: 35383.896 ns/op
Iteration   2: 35559.147 ns/op
Iteration   3: 36024.048 ns/op
Iteration   4: 34894.109 ns/op
Iteration   5: 34914.290 ns/op

# Run progress: 37.78% complete, ETA 00:46:47
# Fork: 3 of 3
# Warmup Iteration   1: 36998.822 ns/op
# Warmup Iteration   2: 36344.508 ns/op
# Warmup Iteration   3: 36322.539 ns/op
# Warmup Iteration   4: 35503.226 ns/op
# Warmup Iteration   5: 36269.109 ns/op
Iteration   1: 36167.813 ns/op
Iteration   2: 35865.540 ns/op
Iteration   3: 36150.874 ns/op
Iteration   4: 34139.746 ns/op
Iteration   5: 34065.541 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ExceptionStackTraceBenchmark.get_stack_trace":
  35420.939 ±(99.9%) 809.810 ns/op [Average]
  (min, avg, max) = (34065.541, 35420.939, 36167.813), stdev = 757.496
  CI (99.9%): [34611.130, 36230.749] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ExceptionStackTraceBenchmark.lambda_function_exc
# Parameters: (message = Something wrong happened., stackDepth = 1)

# Run progress: 40.00% complete, ETA 00:45:06
# Fork: 1 of 3
# Warmup Iteration   1: 1117.798 ns/op
# Warmup Iteration   2: 1037.332 ns/op
# Warmup Iteration   3: 1065.191 ns/op
# Warmup Iteration   4: 1048.090 ns/op
# Warmup Iteration   5: 1052.508 ns/op
Iteration   1: 1085.049 ns/op
Iteration   2: 1090.028 ns/op
Iteration   3: 1088.606 ns/op
Iteration   4: 1087.467 ns/op
Iteration   5: 1049.472 ns/op

# Run progress: 42.22% complete, ETA 00:43:26
# Fork: 2 of 3
# Warmup Iteration   1: 1117.773 ns/op
# Warmup Iteration   2: 1048.914 ns/op
# Warmup Iteration   3: 1085.897 ns/op
# Warmup Iteration   4: 1087.167 ns/op
# Warmup Iteration   5: 1032.338 ns/op
Iteration   1: 1056.363 ns/op
Iteration   2: 1028.019 ns/op
Iteration   3: 1025.515 ns/op
Iteration   4: 1072.593 ns/op
Iteration   5: 1089.256 ns/op

# Run progress: 44.44% complete, ETA 00:41:46
# Fork: 3 of 3
# Warmup Iteration   1: 1093.517 ns/op
# Warmup Iteration   2: 1101.445 ns/op
# Warmup Iteration   3: 1059.266 ns/op
# Warmup Iteration   4: 1102.398 ns/op
# Warmup Iteration   5: 1055.720 ns/op
Iteration   1: 1090.866 ns/op
Iteration   2: 1097.396 ns/op
Iteration   3: 1057.793 ns/op
Iteration   4: 1063.382 ns/op
Iteration   5: 1051.536 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ExceptionStackTraceBenchmark.lambda_function_exc":
  1068.889 ±(99.9%) 25.082 ns/op [Average]
  (min, avg, max) = (1025.515, 1068.889, 1097.396), stdev = 23.462
  CI (99.9%): [1043.808, 1093.971] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ExceptionStackTraceBenchmark.lambda_function_exc
# Parameters: (message = Something wrong happened., stackDepth = 64)

# Run progress: 46.67% complete, ETA 00:40:06
# Fork: 1 of 3
# Warmup Iteration   1: 3010.031 ns/op
# Warmup Iteration   2: 2840.114 ns/op
# Warmup Iteration   3: 2845.401 ns/op
# Warmup Iteration   4: 2807.913 ns/op
# Warmup Iteration   5: 2738.504 ns/op
Iteration   1: 2871.889 ns/op
Iteration   2: 2733.016 ns/op
Iteration   3: 2849.998 ns/op
Iteration   4: 2854.081 ns/op
Iteration   5: 2827.374 ns/op

# Run progress: 48.89% complete, ETA 00:38:25
# Fork: 2 of 3
# Warmup Iteration   1: 3064.434 ns/op
# Warmup Iteration   2: 2847.017 ns/op
# Warmup Iteration   3: 2720.204 ns/op
# Warmup Iteration   4: 2825.537 ns/op
# Warmup Iteration   5: 2840.121 ns/op
Iteration   1: 2795.486 ns/op
Iteration   2: 2873.950 ns/op
Iteration   3: 2840.039 ns/op
Iteration   4: 2827.629 ns/op
Iteration   5: 2836.184 ns/op

# Run progress: 51.11% complete, ETA 00:36:45
# Fork: 3 of 3
# Warmup Iteration   1: 3080.963 ns/op
# Warmup Iteration   2: 2719.205 ns/op
# Warmup Iteration   3: 2810.265 ns/op
# Warmup Iteration   4: 2823.090 ns/op
# Warmup Iteration   5: 2896.650 ns/op
Iteration   1: 2895.063 ns/op
Iteration   2: 2722.873 ns/op
Iteration   3: 2785.162 ns/op
Iteration   4: 2800.875 ns/op
Iteration   5: 2733.245 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ExceptionStackTraceBenchmark.lambda_function_exc":
  2816.458 ±(99.9%) 57.566 ns/op [Average]
  (min, avg, max) = (2722.873, 2816.458, 2895.063), stdev = 53.847
  CI (99.9%): [2758.892, 2874.024] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ExceptionStackTraceBenchmark.lambda_function_exc
# Parameters: (message = Something wrong happened., stackDepth = 128)

# Run progress: 53.33% complete, ETA 00:35:05
# Fork: 1 of 3
# Warmup Iteration   1: 4954.044 ns/op
# Warmup Iteration   2: 4694.133 ns/op
# Warmup Iteration   3: 4439.779 ns/op
# Warmup Iteration   4: 4728.819 ns/op
# Warmup Iteration   5: 4672.311 ns/op
Iteration   1: 4717.799 ns/op
Iteration   2: 4690.223 ns/op
Iteration   3: 4633.497 ns/op
Iteration   4: 4473.842 ns/op
Iteration   5: 4430.345 ns/op

# Run progress: 55.56% complete, ETA 00:33:24
# Fork: 2 of 3
# Warmup Iteration   1: 5271.957 ns/op
# Warmup Iteration   2: 4732.119 ns/op
# Warmup Iteration   3: 4729.872 ns/op
# Warmup Iteration   4: 4650.461 ns/op
# Warmup Iteration   5: 4690.266 ns/op
Iteration   1: 4669.839 ns/op
Iteration   2: 4824.896 ns/op
Iteration   3: 4760.126 ns/op
Iteration   4: 4780.755 ns/op
Iteration   5: 4744.297 ns/op

# Run progress: 57.78% complete, ETA 00:31:44
# Fork: 3 of 3
# Warmup Iteration   1: 4968.215 ns/op
# Warmup Iteration   2: 4626.921 ns/op
# Warmup Iteration   3: 4608.806 ns/op
# Warmup Iteration   4: 4780.272 ns/op
# Warmup Iteration   5: 4606.414 ns/op
Iteration   1: 4654.501 ns/op
Iteration   2: 4750.983 ns/op
Iteration   3: 4616.281 ns/op
Iteration   4: 4758.684 ns/op
Iteration   5: 4566.926 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ExceptionStackTraceBenchmark.lambda_function_exc":
  4671.533 ±(99.9%) 120.538 ns/op [Average]
  (min, avg, max) = (4430.345, 4671.533, 4824.896), stdev = 112.751
  CI (99.9%): [4550.995, 4792.071] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ExceptionStackTraceBenchmark.new_exc
# Parameters: (message = Something wrong happened., stackDepth = 1)

# Run progress: 60.00% complete, ETA 00:30:04
# Fork: 1 of 3
# Warmup Iteration   1: 1075.165 ns/op
# Warmup Iteration   2: 1033.552 ns/op
# Warmup Iteration   3: 996.947 ns/op
# Warmup Iteration   4: 980.005 ns/op
# Warmup Iteration   5: 971.609 ns/op
Iteration   1: 1006.587 ns/op
Iteration   2: 971.552 ns/op
Iteration   3: 1022.575 ns/op
Iteration   4: 994.303 ns/op
Iteration   5: 992.784 ns/op

# Run progress: 62.22% complete, ETA 00:28:24
# Fork: 2 of 3
# Warmup Iteration   1: 1104.955 ns/op
# Warmup Iteration   2: 1030.765 ns/op
# Warmup Iteration   3: 1038.719 ns/op
# Warmup Iteration   4: 995.231 ns/op
# Warmup Iteration   5: 1009.701 ns/op
Iteration   1: 999.225 ns/op
Iteration   2: 990.325 ns/op
Iteration   3: 993.654 ns/op
Iteration   4: 1002.009 ns/op
Iteration   5: 1044.091 ns/op

# Run progress: 64.44% complete, ETA 00:26:43
# Fork: 3 of 3
# Warmup Iteration   1: 1098.874 ns/op
# Warmup Iteration   2: 1033.418 ns/op
# Warmup Iteration   3: 1022.306 ns/op
# Warmup Iteration   4: 1042.057 ns/op
# Warmup Iteration   5: 1039.304 ns/op
Iteration   1: 1020.150 ns/op
Iteration   2: 1028.273 ns/op
Iteration   3: 1009.448 ns/op
Iteration   4: 1040.652 ns/op
Iteration   5: 1054.925 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ExceptionStackTraceBenchmark.new_exc":
  1011.370 ±(99.9%) 24.833 ns/op [Average]
  (min, avg, max) = (971.552, 1011.370, 1054.925), stdev = 23.229
  CI (99.9%): [986.537, 1036.203] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ExceptionStackTraceBenchmark.new_exc
# Parameters: (message = Something wrong happened., stackDepth = 64)

# Run progress: 66.67% complete, ETA 00:25:03
# Fork: 1 of 3
# Warmup Iteration   1: 2996.168 ns/op
# Warmup Iteration   2: 2805.545 ns/op
# Warmup Iteration   3: 2729.037 ns/op
# Warmup Iteration   4: 2806.756 ns/op
# Warmup Iteration   5: 2799.983 ns/op
Iteration   1: 2811.714 ns/op
Iteration   2: 2786.740 ns/op
Iteration   3: 2835.693 ns/op
Iteration   4: 2730.144 ns/op
Iteration   5: 2722.597 ns/op

# Run progress: 68.89% complete, ETA 00:23:23
# Fork: 2 of 3
# Warmup Iteration   1: 2967.297 ns/op
# Warmup Iteration   2: 2843.540 ns/op
# Warmup Iteration   3: 2787.998 ns/op
# Warmup Iteration   4: 2865.850 ns/op
# Warmup Iteration   5: 2852.619 ns/op
Iteration   1: 2830.145 ns/op
Iteration   2: 2861.808 ns/op
Iteration   3: 2855.515 ns/op
Iteration   4: 2861.661 ns/op
Iteration   5: 2815.546 ns/op

# Run progress: 71.11% complete, ETA 00:21:43
# Fork: 3 of 3
# Warmup Iteration   1: 3068.274 ns/op
# Warmup Iteration   2: 2845.740 ns/op
# Warmup Iteration   3: 2778.913 ns/op
# Warmup Iteration   4: 2746.918 ns/op
# Warmup Iteration   5: 2778.702 ns/op
Iteration   1: 2769.070 ns/op
Iteration   2: 2846.919 ns/op
Iteration   3: 2829.298 ns/op
Iteration   4: 2700.302 ns/op
Iteration   5: 2785.981 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ExceptionStackTraceBenchmark.new_exc":
  2802.875 ±(99.9%) 55.946 ns/op [Average]
  (min, avg, max) = (2700.302, 2802.875, 2861.808), stdev = 52.332
  CI (99.9%): [2746.929, 2858.822] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ExceptionStackTraceBenchmark.new_exc
# Parameters: (message = Something wrong happened., stackDepth = 128)

# Run progress: 73.33% complete, ETA 00:20:02
# Fork: 1 of 3
# Warmup Iteration   1: 5088.547 ns/op
# Warmup Iteration   2: 4678.107 ns/op
# Warmup Iteration   3: 4665.831 ns/op
# Warmup Iteration   4: 4706.320 ns/op
# Warmup Iteration   5: 4751.347 ns/op
Iteration   1: 4737.689 ns/op
Iteration   2: 4683.845 ns/op
Iteration   3: 4698.718 ns/op
Iteration   4: 4621.127 ns/op
Iteration   5: 4761.764 ns/op

# Run progress: 75.56% complete, ETA 00:18:22
# Fork: 2 of 3
# Warmup Iteration   1: 5029.937 ns/op
# Warmup Iteration   2: 4748.684 ns/op
# Warmup Iteration   3: 4628.671 ns/op
# Warmup Iteration   4: 4643.073 ns/op
# Warmup Iteration   5: 4570.260 ns/op
Iteration   1: 4591.887 ns/op
Iteration   2: 4591.040 ns/op
Iteration   3: 4700.508 ns/op
Iteration   4: 4628.715 ns/op
Iteration   5: 4626.165 ns/op

# Run progress: 77.78% complete, ETA 00:16:42
# Fork: 3 of 3
# Warmup Iteration   1: 5045.515 ns/op
# Warmup Iteration   2: 4835.517 ns/op
# Warmup Iteration   3: 4787.869 ns/op
# Warmup Iteration   4: 4611.243 ns/op
# Warmup Iteration   5: 4672.954 ns/op
Iteration   1: 4693.371 ns/op
Iteration   2: 4618.448 ns/op
Iteration   3: 4559.748 ns/op
Iteration   4: 4736.817 ns/op
Iteration   5: 4813.807 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ExceptionStackTraceBenchmark.new_exc":
  4670.910 ±(99.9%) 77.615 ns/op [Average]
  (min, avg, max) = (4559.748, 4670.910, 4813.807), stdev = 72.601
  CI (99.9%): [4593.295, 4748.525] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ExceptionStackTraceBenchmark.new_exc_override_fillInStackTrace
# Parameters: (message = Something wrong happened., stackDepth = 1)

# Run progress: 80.00% complete, ETA 00:15:02
# Fork: 1 of 3
# Warmup Iteration   1: 8.145 ns/op
# Warmup Iteration   2: 7.142 ns/op
# Warmup Iteration   3: 7.088 ns/op
# Warmup Iteration   4: 7.102 ns/op
# Warmup Iteration   5: 7.025 ns/op
Iteration   1: 6.992 ns/op
Iteration   2: 7.017 ns/op
Iteration   3: 7.077 ns/op
Iteration   4: 7.039 ns/op
Iteration   5: 7.159 ns/op

# Run progress: 82.22% complete, ETA 00:13:21
# Fork: 2 of 3
# Warmup Iteration   1: 8.197 ns/op
# Warmup Iteration   2: 7.325 ns/op
# Warmup Iteration   3: 7.051 ns/op
# Warmup Iteration   4: 7.131 ns/op
# Warmup Iteration   5: 7.112 ns/op
Iteration   1: 7.028 ns/op
Iteration   2: 7.117 ns/op
Iteration   3: 7.041 ns/op
Iteration   4: 7.093 ns/op
Iteration   5: 7.171 ns/op

# Run progress: 84.44% complete, ETA 00:11:41
# Fork: 3 of 3
# Warmup Iteration   1: 7.992 ns/op
# Warmup Iteration   2: 7.286 ns/op
# Warmup Iteration   3: 7.129 ns/op
# Warmup Iteration   4: 7.087 ns/op
# Warmup Iteration   5: 7.127 ns/op
Iteration   1: 7.081 ns/op
Iteration   2: 7.125 ns/op
Iteration   3: 7.051 ns/op
Iteration   4: 7.124 ns/op
Iteration   5: 7.052 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ExceptionStackTraceBenchmark.new_exc_override_fillInStackTrace":
  7.078 ±(99.9%) 0.056 ns/op [Average]
  (min, avg, max) = (6.992, 7.078, 7.171), stdev = 0.053
  CI (99.9%): [7.021, 7.134] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ExceptionStackTraceBenchmark.new_exc_override_fillInStackTrace
# Parameters: (message = Something wrong happened., stackDepth = 64)

# Run progress: 86.67% complete, ETA 00:10:01
# Fork: 1 of 3
# Warmup Iteration   1: 36.306 ns/op
# Warmup Iteration   2: 33.708 ns/op
# Warmup Iteration   3: 33.207 ns/op
# Warmup Iteration   4: 32.736 ns/op
# Warmup Iteration   5: 33.705 ns/op
Iteration   1: 33.104 ns/op
Iteration   2: 32.776 ns/op
Iteration   3: 32.908 ns/op
Iteration   4: 32.826 ns/op
Iteration   5: 32.969 ns/op

# Run progress: 88.89% complete, ETA 00:08:21
# Fork: 2 of 3
# Warmup Iteration   1: 36.533 ns/op
# Warmup Iteration   2: 32.833 ns/op
# Warmup Iteration   3: 33.068 ns/op
# Warmup Iteration   4: 32.627 ns/op
# Warmup Iteration   5: 33.307 ns/op
Iteration   1: 33.021 ns/op
Iteration   2: 33.693 ns/op
Iteration   3: 33.204 ns/op
Iteration   4: 32.488 ns/op
Iteration   5: 32.104 ns/op

# Run progress: 91.11% complete, ETA 00:06:40
# Fork: 3 of 3
# Warmup Iteration   1: 36.532 ns/op
# Warmup Iteration   2: 32.929 ns/op
# Warmup Iteration   3: 32.397 ns/op
# Warmup Iteration   4: 33.326 ns/op
# Warmup Iteration   5: 32.087 ns/op
Iteration   1: 32.500 ns/op
Iteration   2: 33.365 ns/op
Iteration   3: 32.300 ns/op
Iteration   4: 33.095 ns/op
Iteration   5: 32.697 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ExceptionStackTraceBenchmark.new_exc_override_fillInStackTrace":
  32.870 ±(99.9%) 0.443 ns/op [Average]
  (min, avg, max) = (32.104, 32.870, 33.693), stdev = 0.415
  CI (99.9%): [32.427, 33.313] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ExceptionStackTraceBenchmark.new_exc_override_fillInStackTrace
# Parameters: (message = Something wrong happened., stackDepth = 128)

# Run progress: 93.33% complete, ETA 00:05:00
# Fork: 1 of 3
# Warmup Iteration   1: 62.804 ns/op
# Warmup Iteration   2: 57.195 ns/op
# Warmup Iteration   3: 57.343 ns/op
# Warmup Iteration   4: 55.858 ns/op
# Warmup Iteration   5: 57.518 ns/op
Iteration   1: 55.545 ns/op
Iteration   2: 55.250 ns/op
Iteration   3: 56.049 ns/op
Iteration   4: 57.414 ns/op
Iteration   5: 56.617 ns/op

# Run progress: 95.56% complete, ETA 00:03:20
# Fork: 2 of 3
# Warmup Iteration   1: 61.440 ns/op
# Warmup Iteration   2: 56.484 ns/op
# Warmup Iteration   3: 55.215 ns/op
# Warmup Iteration   4: 55.828 ns/op
# Warmup Iteration   5: 56.016 ns/op
Iteration   1: 56.407 ns/op
Iteration   2: 55.752 ns/op
Iteration   3: 55.344 ns/op
Iteration   4: 55.658 ns/op
Iteration   5: 55.741 ns/op

# Run progress: 97.78% complete, ETA 00:01:40
# Fork: 3 of 3
# Warmup Iteration   1: 61.387 ns/op
# Warmup Iteration   2: 56.013 ns/op
# Warmup Iteration   3: 56.504 ns/op
# Warmup Iteration   4: 56.256 ns/op
# Warmup Iteration   5: 56.922 ns/op
Iteration   1: 57.191 ns/op
Iteration   2: 57.130 ns/op
Iteration   3: 57.162 ns/op
Iteration   4: 56.146 ns/op
Iteration   5: 55.701 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ExceptionStackTraceBenchmark.new_exc_override_fillInStackTrace":
  56.207 ±(99.9%) 0.783 ns/op [Average]
  (min, avg, max) = (55.250, 56.207, 57.414), stdev = 0.732
  CI (99.9%): [55.424, 56.990] (assumes normal distribution)


# Run complete. Total time: 01:15:11

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                                                       (message)  (stackDepth)  Mode  Cnt      Score     Error  Units
ExceptionStackTraceBenchmark.constant_exc                       Something wrong happened.             1  avgt   15      2.845 ±   0.057  ns/op
ExceptionStackTraceBenchmark.constant_exc                       Something wrong happened.            64  avgt   15     22.918 ±   0.310  ns/op
ExceptionStackTraceBenchmark.constant_exc                       Something wrong happened.           128  avgt   15     46.337 ±   0.932  ns/op
ExceptionStackTraceBenchmark.get_stack_trace                    Something wrong happened.             1  avgt   15   6154.557 ± 153.784  ns/op
ExceptionStackTraceBenchmark.get_stack_trace                    Something wrong happened.            64  avgt   15  20771.421 ± 500.920  ns/op
ExceptionStackTraceBenchmark.get_stack_trace                    Something wrong happened.           128  avgt   15  35420.939 ± 809.810  ns/op
ExceptionStackTraceBenchmark.lambda_function_exc                Something wrong happened.             1  avgt   15   1068.889 ±  25.082  ns/op
ExceptionStackTraceBenchmark.lambda_function_exc                Something wrong happened.            64  avgt   15   2816.458 ±  57.566  ns/op
ExceptionStackTraceBenchmark.lambda_function_exc                Something wrong happened.           128  avgt   15   4671.533 ± 120.538  ns/op
ExceptionStackTraceBenchmark.new_exc                            Something wrong happened.             1  avgt   15   1011.370 ±  24.833  ns/op
ExceptionStackTraceBenchmark.new_exc                            Something wrong happened.            64  avgt   15   2802.875 ±  55.946  ns/op
ExceptionStackTraceBenchmark.new_exc                            Something wrong happened.           128  avgt   15   4670.910 ±  77.615  ns/op
ExceptionStackTraceBenchmark.new_exc_override_fillInStackTrace  Something wrong happened.             1  avgt   15      7.078 ±   0.056  ns/op
ExceptionStackTraceBenchmark.new_exc_override_fillInStackTrace  Something wrong happened.            64  avgt   15     32.870 ±   0.443  ns/op
ExceptionStackTraceBenchmark.new_exc_override_fillInStackTrace  Something wrong happened.           128  avgt   15     56.207 ±   0.783  ns/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_graal_jit/ExceptionStackTraceBenchmark.json
Running java -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler -jar benchmarks/target/benchmarks.jar .*ExceptionThrowBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_graal_jit/ExceptionThrowBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ExceptionThrowBenchmark.constant_exc
# Parameters: (message = Something wrong happened.)

# Run progress: 0.00% complete, ETA 00:20:00
# Fork: 1 of 3
# Warmup Iteration   1: 2.976 ns/op
# Warmup Iteration   2: 2.677 ns/op
# Warmup Iteration   3: 2.481 ns/op
# Warmup Iteration   4: 2.511 ns/op
# Warmup Iteration   5: 2.494 ns/op
Iteration   1: 2.649 ns/op
Iteration   2: 2.551 ns/op
Iteration   3: 2.554 ns/op
Iteration   4: 2.553 ns/op
Iteration   5: 2.558 ns/op

# Run progress: 8.33% complete, ETA 00:18:23
# Fork: 2 of 3
# Warmup Iteration   1: 2.834 ns/op
# Warmup Iteration   2: 2.639 ns/op
# Warmup Iteration   3: 2.615 ns/op
# Warmup Iteration   4: 2.610 ns/op
# Warmup Iteration   5: 2.601 ns/op
Iteration   1: 2.606 ns/op
Iteration   2: 2.607 ns/op
Iteration   3: 2.609 ns/op
Iteration   4: 2.494 ns/op
Iteration   5: 2.469 ns/op

# Run progress: 16.67% complete, ETA 00:16:42
# Fork: 3 of 3
# Warmup Iteration   1: 2.753 ns/op
# Warmup Iteration   2: 2.659 ns/op
# Warmup Iteration   3: 2.640 ns/op
# Warmup Iteration   4: 2.629 ns/op
# Warmup Iteration   5: 2.617 ns/op
Iteration   1: 2.615 ns/op
Iteration   2: 2.606 ns/op
Iteration   3: 2.531 ns/op
Iteration   4: 2.536 ns/op
Iteration   5: 2.535 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ExceptionThrowBenchmark.constant_exc":
  2.565 ±(99.9%) 0.053 ns/op [Average]
  (min, avg, max) = (2.469, 2.565, 2.649), stdev = 0.049
  CI (99.9%): [2.512, 2.618] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ExceptionThrowBenchmark.lambda_function_exc
# Parameters: (message = Something wrong happened.)

# Run progress: 25.00% complete, ETA 00:15:02
# Fork: 1 of 3
# Warmup Iteration   1: 1106.710 ns/op
# Warmup Iteration   2: 1064.438 ns/op
# Warmup Iteration   3: 1060.126 ns/op
# Warmup Iteration   4: 1049.623 ns/op
# Warmup Iteration   5: 1054.198 ns/op
Iteration   1: 1040.721 ns/op
Iteration   2: 1062.877 ns/op
Iteration   3: 1041.979 ns/op
Iteration   4: 1049.989 ns/op
Iteration   5: 1061.488 ns/op

# Run progress: 33.33% complete, ETA 00:13:22
# Fork: 2 of 3
# Warmup Iteration   1: 1116.931 ns/op
# Warmup Iteration   2: 1044.872 ns/op
# Warmup Iteration   3: 1050.944 ns/op
# Warmup Iteration   4: 1057.746 ns/op
# Warmup Iteration   5: 1025.035 ns/op
Iteration   1: 1049.043 ns/op
Iteration   2: 1058.506 ns/op
Iteration   3: 1060.175 ns/op
Iteration   4: 1053.431 ns/op
Iteration   5: 1040.091 ns/op

# Run progress: 41.67% complete, ETA 00:11:41
# Fork: 3 of 3
# Warmup Iteration   1: 1113.655 ns/op
# Warmup Iteration   2: 1016.474 ns/op
# Warmup Iteration   3: 1058.935 ns/op
# Warmup Iteration   4: 1060.575 ns/op
# Warmup Iteration   5: 1048.293 ns/op
Iteration   1: 998.180 ns/op
Iteration   2: 1035.850 ns/op
Iteration   3: 1061.972 ns/op
Iteration   4: 1060.147 ns/op
Iteration   5: 1062.909 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ExceptionThrowBenchmark.lambda_function_exc":
  1049.157 ±(99.9%) 18.122 ns/op [Average]
  (min, avg, max) = (998.180, 1049.157, 1062.909), stdev = 16.951
  CI (99.9%): [1031.036, 1067.279] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ExceptionThrowBenchmark.new_exc
# Parameters: (message = Something wrong happened.)

# Run progress: 50.00% complete, ETA 00:10:01
# Fork: 1 of 3
# Warmup Iteration   1: 1091.230 ns/op
# Warmup Iteration   2: 1056.490 ns/op
# Warmup Iteration   3: 1050.126 ns/op
# Warmup Iteration   4: 1053.731 ns/op
# Warmup Iteration   5: 1046.931 ns/op
Iteration   1: 1071.557 ns/op
Iteration   2: 1041.938 ns/op
Iteration   3: 1080.895 ns/op
Iteration   4: 1042.929 ns/op
Iteration   5: 1078.455 ns/op

# Run progress: 58.33% complete, ETA 00:08:21
# Fork: 2 of 3
# Warmup Iteration   1: 1101.793 ns/op
# Warmup Iteration   2: 1028.110 ns/op
# Warmup Iteration   3: 1023.661 ns/op
# Warmup Iteration   4: 1037.406 ns/op
# Warmup Iteration   5: 1036.642 ns/op
Iteration   1: 1003.010 ns/op
Iteration   2: 1025.514 ns/op
Iteration   3: 1026.696 ns/op
Iteration   4: 1022.372 ns/op
Iteration   5: 1035.433 ns/op

# Run progress: 66.67% complete, ETA 00:06:41
# Fork: 3 of 3
# Warmup Iteration   1: 1079.193 ns/op
# Warmup Iteration   2: 1025.069 ns/op
# Warmup Iteration   3: 1037.535 ns/op
# Warmup Iteration   4: 1024.545 ns/op
# Warmup Iteration   5: 1045.290 ns/op
Iteration   1: 1043.963 ns/op
Iteration   2: 1022.596 ns/op
Iteration   3: 1047.114 ns/op
Iteration   4: 1010.800 ns/op
Iteration   5: 1032.305 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ExceptionThrowBenchmark.new_exc":
  1039.038 ±(99.9%) 24.766 ns/op [Average]
  (min, avg, max) = (1003.010, 1039.038, 1080.895), stdev = 23.166
  CI (99.9%): [1014.272, 1063.804] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ExceptionThrowBenchmark.new_exc_override_fillInStackTrace
# Parameters: (message = Something wrong happened.)

# Run progress: 75.00% complete, ETA 00:05:00
# Fork: 1 of 3
# Warmup Iteration   1: 8.601 ns/op
# Warmup Iteration   2: 19.861 ns/op
# Warmup Iteration   3: 19.634 ns/op
# Warmup Iteration   4: 19.237 ns/op
# Warmup Iteration   5: 19.490 ns/op
Iteration   1: 19.343 ns/op
Iteration   2: 19.386 ns/op
Iteration   3: 19.209 ns/op
Iteration   4: 19.403 ns/op
Iteration   5: 19.458 ns/op

# Run progress: 83.33% complete, ETA 00:03:20
# Fork: 2 of 3
# Warmup Iteration   1: 8.620 ns/op
# Warmup Iteration   2: 19.831 ns/op
# Warmup Iteration   3: 19.549 ns/op
# Warmup Iteration   4: 19.240 ns/op
# Warmup Iteration   5: 19.092 ns/op
Iteration   1: 19.428 ns/op
Iteration   2: 19.489 ns/op
Iteration   3: 19.455 ns/op
Iteration   4: 19.726 ns/op
Iteration   5: 19.253 ns/op

# Run progress: 91.67% complete, ETA 00:01:40
# Fork: 3 of 3
# Warmup Iteration   1: 8.668 ns/op
# Warmup Iteration   2: 19.517 ns/op
# Warmup Iteration   3: 19.495 ns/op
# Warmup Iteration   4: 19.660 ns/op
# Warmup Iteration   5: 19.542 ns/op
Iteration   1: 19.284 ns/op
Iteration   2: 19.343 ns/op
Iteration   3: 19.263 ns/op
Iteration   4: 19.408 ns/op
Iteration   5: 19.345 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ExceptionThrowBenchmark.new_exc_override_fillInStackTrace":
  19.386 ±(99.9%) 0.134 ns/op [Average]
  (min, avg, max) = (19.209, 19.386, 19.726), stdev = 0.125
  CI (99.9%): [19.253, 19.520] (assumes normal distribution)


# Run complete. Total time: 00:20:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                                                  (message)  Mode  Cnt     Score    Error  Units
ExceptionThrowBenchmark.constant_exc                       Something wrong happened.  avgt   15     2.565 ±  0.053  ns/op
ExceptionThrowBenchmark.lambda_function_exc                Something wrong happened.  avgt   15  1049.157 ± 18.122  ns/op
ExceptionThrowBenchmark.new_exc                            Something wrong happened.  avgt   15  1039.038 ± 24.766  ns/op
ExceptionThrowBenchmark.new_exc_override_fillInStackTrace  Something wrong happened.  avgt   15    19.386 ±  0.134  ns/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_graal_jit/ExceptionThrowBenchmark.json
Running java -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler -jar benchmarks/target/benchmarks.jar .*StackFrameIteratorBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_graal_jit/StackFrameIteratorBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StackFrameIteratorBenchmark.get_caller_stack_frame_StackWalker
# Parameters: (stackDepth = 1)

# Run progress: 0.00% complete, ETA 01:45:00
# Fork: 1 of 3
# Warmup Iteration   1: 743.251 ns/op
# Warmup Iteration   2: 620.485 ns/op
# Warmup Iteration   3: 588.352 ns/op
# Warmup Iteration   4: 600.039 ns/op
# Warmup Iteration   5: 611.168 ns/op
Iteration   1: 610.190 ns/op
Iteration   2: 614.108 ns/op
Iteration   3: 604.475 ns/op
Iteration   4: 598.273 ns/op
Iteration   5: 579.352 ns/op

# Run progress: 1.59% complete, ETA 01:43:40
# Fork: 2 of 3
# Warmup Iteration   1: 765.825 ns/op
# Warmup Iteration   2: 677.111 ns/op
# Warmup Iteration   3: 665.035 ns/op
# Warmup Iteration   4: 642.204 ns/op
# Warmup Iteration   5: 669.386 ns/op
Iteration   1: 671.292 ns/op
Iteration   2: 643.325 ns/op
Iteration   3: 646.718 ns/op
Iteration   4: 654.620 ns/op
Iteration   5: 671.027 ns/op

# Run progress: 3.17% complete, ETA 01:41:58
# Fork: 3 of 3
# Warmup Iteration   1: 642.626 ns/op
# Warmup Iteration   2: 606.109 ns/op
# Warmup Iteration   3: 618.739 ns/op
# Warmup Iteration   4: 593.054 ns/op
# Warmup Iteration   5: 613.352 ns/op
Iteration   1: 620.966 ns/op
Iteration   2: 617.610 ns/op
Iteration   3: 622.370 ns/op
Iteration   4: 610.461 ns/op
Iteration   5: 605.783 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StackFrameIteratorBenchmark.get_caller_stack_frame_StackWalker":
  624.705 ±(99.9%) 28.800 ns/op [Average]
  (min, avg, max) = (579.352, 624.705, 671.292), stdev = 26.940
  CI (99.9%): [595.904, 653.505] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StackFrameIteratorBenchmark.get_caller_stack_frame_StackWalker
# Parameters: (stackDepth = 64)

# Run progress: 4.76% complete, ETA 01:40:16
# Fork: 1 of 3
# Warmup Iteration   1: 720.608 ns/op
# Warmup Iteration   2: 637.096 ns/op
# Warmup Iteration   3: 627.690 ns/op
# Warmup Iteration   4: 636.989 ns/op
# Warmup Iteration   5: 618.246 ns/op
Iteration   1: 601.865 ns/op
Iteration   2: 599.358 ns/op
Iteration   3: 603.185 ns/op
Iteration   4: 606.908 ns/op
Iteration   5: 603.767 ns/op

# Run progress: 6.35% complete, ETA 01:38:35
# Fork: 2 of 3
# Warmup Iteration   1: 708.141 ns/op
# Warmup Iteration   2: 624.695 ns/op
# Warmup Iteration   3: 622.096 ns/op
# Warmup Iteration   4: 621.099 ns/op
# Warmup Iteration   5: 617.987 ns/op
Iteration   1: 616.473 ns/op
Iteration   2: 618.365 ns/op
Iteration   3: 607.644 ns/op
Iteration   4: 607.633 ns/op
Iteration   5: 602.747 ns/op

# Run progress: 7.94% complete, ETA 01:36:55
# Fork: 3 of 3
# Warmup Iteration   1: 713.628 ns/op
# Warmup Iteration   2: 637.068 ns/op
# Warmup Iteration   3: 674.807 ns/op
# Warmup Iteration   4: 639.446 ns/op
# Warmup Iteration   5: 634.935 ns/op
Iteration   1: 653.394 ns/op
Iteration   2: 638.480 ns/op
Iteration   3: 675.213 ns/op
Iteration   4: 671.550 ns/op
Iteration   5: 668.247 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StackFrameIteratorBenchmark.get_caller_stack_frame_StackWalker":
  624.989 ±(99.9%) 30.248 ns/op [Average]
  (min, avg, max) = (599.358, 624.989, 675.213), stdev = 28.294
  CI (99.9%): [594.740, 655.237] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StackFrameIteratorBenchmark.get_caller_stack_frame_StackWalker
# Parameters: (stackDepth = 128)

# Run progress: 9.52% complete, ETA 01:35:14
# Fork: 1 of 3
# Warmup Iteration   1: 669.126 ns/op
# Warmup Iteration   2: 612.516 ns/op
# Warmup Iteration   3: 601.124 ns/op
# Warmup Iteration   4: 628.875 ns/op
# Warmup Iteration   5: 607.611 ns/op
Iteration   1: 624.275 ns/op
Iteration   2: 613.785 ns/op
Iteration   3: 631.281 ns/op
Iteration   4: 628.692 ns/op
Iteration   5: 626.309 ns/op

# Run progress: 11.11% complete, ETA 01:33:34
# Fork: 2 of 3
# Warmup Iteration   1: 699.403 ns/op
# Warmup Iteration   2: 629.379 ns/op
# Warmup Iteration   3: 624.967 ns/op
# Warmup Iteration   4: 624.381 ns/op
# Warmup Iteration   5: 604.737 ns/op
Iteration   1: 597.166 ns/op
Iteration   2: 619.260 ns/op
Iteration   3: 626.761 ns/op
Iteration   4: 595.561 ns/op
Iteration   5: 589.712 ns/op

# Run progress: 12.70% complete, ETA 01:31:54
# Fork: 3 of 3
# Warmup Iteration   1: 686.090 ns/op
# Warmup Iteration   2: 619.373 ns/op
# Warmup Iteration   3: 601.425 ns/op
# Warmup Iteration   4: 618.458 ns/op
# Warmup Iteration   5: 583.953 ns/op
Iteration   1: 609.095 ns/op
Iteration   2: 580.035 ns/op
Iteration   3: 579.362 ns/op
Iteration   4: 621.356 ns/op
Iteration   5: 596.761 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StackFrameIteratorBenchmark.get_caller_stack_frame_StackWalker":
  609.294 ±(99.9%) 19.319 ns/op [Average]
  (min, avg, max) = (579.362, 609.294, 631.281), stdev = 18.071
  CI (99.9%): [589.975, 628.613] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StackFrameIteratorBenchmark.get_the_Nth_backwards_stack_frame_GetStackTrace
# Parameters: (stackDepth = 1)

# Run progress: 14.29% complete, ETA 01:30:13
# Fork: 1 of 3
# Warmup Iteration   1: 7659.040 ns/op
# Warmup Iteration   2: 7145.805 ns/op
# Warmup Iteration   3: 7108.124 ns/op
# Warmup Iteration   4: 7040.919 ns/op
# Warmup Iteration   5: 6905.399 ns/op
Iteration   1: 6764.939 ns/op
Iteration   2: 6882.845 ns/op
Iteration   3: 6966.162 ns/op
Iteration   4: 7039.752 ns/op
Iteration   5: 6822.910 ns/op

# Run progress: 15.87% complete, ETA 01:28:33
# Fork: 2 of 3
# Warmup Iteration   1: 7731.772 ns/op
# Warmup Iteration   2: 6927.248 ns/op
# Warmup Iteration   3: 6874.485 ns/op
# Warmup Iteration   4: 6859.187 ns/op
# Warmup Iteration   5: 6891.209 ns/op
Iteration   1: 6854.128 ns/op
Iteration   2: 7097.636 ns/op
Iteration   3: 6846.828 ns/op
Iteration   4: 6771.167 ns/op
Iteration   5: 6724.784 ns/op

# Run progress: 17.46% complete, ETA 01:26:53
# Fork: 3 of 3
# Warmup Iteration   1: 7368.801 ns/op
# Warmup Iteration   2: 7021.282 ns/op
# Warmup Iteration   3: 7123.802 ns/op
# Warmup Iteration   4: 7095.657 ns/op
# Warmup Iteration   5: 7051.358 ns/op
Iteration   1: 7012.004 ns/op
Iteration   2: 6821.641 ns/op
Iteration   3: 6810.352 ns/op
Iteration   4: 6787.344 ns/op
Iteration   5: 6989.341 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StackFrameIteratorBenchmark.get_the_Nth_backwards_stack_frame_GetStackTrace":
  6879.456 ±(99.9%) 121.469 ns/op [Average]
  (min, avg, max) = (6724.784, 6879.456, 7097.636), stdev = 113.622
  CI (99.9%): [6757.986, 7000.925] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StackFrameIteratorBenchmark.get_the_Nth_backwards_stack_frame_GetStackTrace
# Parameters: (stackDepth = 64)

# Run progress: 19.05% complete, ETA 01:25:12
# Fork: 1 of 3
# Warmup Iteration   1: 25740.309 ns/op
# Warmup Iteration   2: 23159.978 ns/op
# Warmup Iteration   3: 23153.018 ns/op
# Warmup Iteration   4: 23159.577 ns/op
# Warmup Iteration   5: 24335.370 ns/op
Iteration   1: 23421.860 ns/op
Iteration   2: 24337.444 ns/op
Iteration   3: 24201.298 ns/op
Iteration   4: 24187.975 ns/op
Iteration   5: 24338.844 ns/op

# Run progress: 20.63% complete, ETA 01:23:32
# Fork: 2 of 3
# Warmup Iteration   1: 25823.262 ns/op
# Warmup Iteration   2: 24665.220 ns/op
# Warmup Iteration   3: 24121.072 ns/op
# Warmup Iteration   4: 22952.440 ns/op
# Warmup Iteration   5: 23029.185 ns/op
Iteration   1: 23063.626 ns/op
Iteration   2: 23242.450 ns/op
Iteration   3: 24352.024 ns/op
Iteration   4: 23156.896 ns/op
Iteration   5: 23303.273 ns/op

# Run progress: 22.22% complete, ETA 01:21:52
# Fork: 3 of 3
# Warmup Iteration   1: 26120.653 ns/op
# Warmup Iteration   2: 24404.515 ns/op
# Warmup Iteration   3: 24374.744 ns/op
# Warmup Iteration   4: 23887.642 ns/op
# Warmup Iteration   5: 23711.506 ns/op
Iteration   1: 23449.400 ns/op
Iteration   2: 23799.868 ns/op
Iteration   3: 23685.386 ns/op
Iteration   4: 23972.539 ns/op
Iteration   5: 24387.116 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StackFrameIteratorBenchmark.get_the_Nth_backwards_stack_frame_GetStackTrace":
  23793.333 ±(99.9%) 523.869 ns/op [Average]
  (min, avg, max) = (23063.626, 23793.333, 24387.116), stdev = 490.028
  CI (99.9%): [23269.464, 24317.203] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StackFrameIteratorBenchmark.get_the_Nth_backwards_stack_frame_GetStackTrace
# Parameters: (stackDepth = 128)

# Run progress: 23.81% complete, ETA 01:20:11
# Fork: 1 of 3
# Warmup Iteration   1: 45371.766 ns/op
# Warmup Iteration   2: 42321.054 ns/op
# Warmup Iteration   3: 40840.807 ns/op
# Warmup Iteration   4: 40647.839 ns/op
# Warmup Iteration   5: 41652.819 ns/op
Iteration   1: 42137.501 ns/op
Iteration   2: 40338.619 ns/op
Iteration   3: 39814.547 ns/op
Iteration   4: 40102.673 ns/op
Iteration   5: 40095.459 ns/op

# Run progress: 25.40% complete, ETA 01:18:31
# Fork: 2 of 3
# Warmup Iteration   1: 44858.001 ns/op
# Warmup Iteration   2: 41361.381 ns/op
# Warmup Iteration   3: 42415.709 ns/op
# Warmup Iteration   4: 41760.990 ns/op
# Warmup Iteration   5: 42105.849 ns/op
Iteration   1: 41856.921 ns/op
Iteration   2: 40911.874 ns/op
Iteration   3: 40452.422 ns/op
Iteration   4: 40387.137 ns/op
Iteration   5: 40491.281 ns/op

# Run progress: 26.98% complete, ETA 01:16:51
# Fork: 3 of 3
# Warmup Iteration   1: 45057.511 ns/op
# Warmup Iteration   2: 41694.481 ns/op
# Warmup Iteration   3: 40497.319 ns/op
# Warmup Iteration   4: 41878.899 ns/op
# Warmup Iteration   5: 40525.138 ns/op
Iteration   1: 40848.565 ns/op
Iteration   2: 41775.097 ns/op
Iteration   3: 40324.018 ns/op
Iteration   4: 40360.514 ns/op
Iteration   5: 39821.942 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StackFrameIteratorBenchmark.get_the_Nth_backwards_stack_frame_GetStackTrace":
  40647.905 ±(99.9%) 780.079 ns/op [Average]
  (min, avg, max) = (39814.547, 40647.905, 42137.501), stdev = 729.686
  CI (99.9%): [39867.826, 41427.984] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StackFrameIteratorBenchmark.get_the_Nth_backwards_stack_frame_StackWalker
# Parameters: (stackDepth = 1)

# Run progress: 28.57% complete, ETA 01:15:11
# Fork: 1 of 3
# Warmup Iteration   1: 1494.812 ns/op
# Warmup Iteration   2: 1294.115 ns/op
# Warmup Iteration   3: 1272.751 ns/op
# Warmup Iteration   4: 1315.702 ns/op
# Warmup Iteration   5: 1277.770 ns/op
Iteration   1: 1299.923 ns/op
Iteration   2: 1295.163 ns/op
Iteration   3: 1273.929 ns/op
Iteration   4: 1330.519 ns/op
Iteration   5: 1270.588 ns/op

# Run progress: 30.16% complete, ETA 01:13:30
# Fork: 2 of 3
# Warmup Iteration   1: 1527.449 ns/op
# Warmup Iteration   2: 1361.949 ns/op
# Warmup Iteration   3: 1337.602 ns/op
# Warmup Iteration   4: 1311.829 ns/op
# Warmup Iteration   5: 1352.097 ns/op
Iteration   1: 1344.453 ns/op
Iteration   2: 1354.791 ns/op
Iteration   3: 1344.138 ns/op
Iteration   4: 1278.243 ns/op
Iteration   5: 1320.099 ns/op

# Run progress: 31.75% complete, ETA 01:11:50
# Fork: 3 of 3
# Warmup Iteration   1: 1512.348 ns/op
# Warmup Iteration   2: 1355.678 ns/op
# Warmup Iteration   3: 1349.889 ns/op
# Warmup Iteration   4: 1328.579 ns/op
# Warmup Iteration   5: 1281.926 ns/op
Iteration   1: 1327.415 ns/op
Iteration   2: 1299.469 ns/op
Iteration   3: 1333.929 ns/op
Iteration   4: 1340.354 ns/op
Iteration   5: 1292.932 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StackFrameIteratorBenchmark.get_the_Nth_backwards_stack_frame_StackWalker":
  1313.730 ±(99.9%) 30.044 ns/op [Average]
  (min, avg, max) = (1270.588, 1313.730, 1354.791), stdev = 28.103
  CI (99.9%): [1283.685, 1343.774] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StackFrameIteratorBenchmark.get_the_Nth_backwards_stack_frame_StackWalker
# Parameters: (stackDepth = 64)

# Run progress: 33.33% complete, ETA 01:10:10
# Fork: 1 of 3
# Warmup Iteration   1: 16357.344 ns/op
# Warmup Iteration   2: 13824.058 ns/op
# Warmup Iteration   3: 14287.399 ns/op
# Warmup Iteration   4: 13993.168 ns/op
# Warmup Iteration   5: 14029.797 ns/op
Iteration   1: 13970.795 ns/op
Iteration   2: 14400.335 ns/op
Iteration   3: 14459.457 ns/op
Iteration   4: 14084.434 ns/op
Iteration   5: 13972.764 ns/op

# Run progress: 34.92% complete, ETA 01:08:30
# Fork: 2 of 3
# Warmup Iteration   1: 15075.767 ns/op
# Warmup Iteration   2: 13864.781 ns/op
# Warmup Iteration   3: 13737.795 ns/op
# Warmup Iteration   4: 13750.323 ns/op
# Warmup Iteration   5: 14621.824 ns/op
Iteration   1: 13717.243 ns/op
Iteration   2: 14175.872 ns/op
Iteration   3: 14047.515 ns/op
Iteration   4: 14438.075 ns/op
Iteration   5: 14470.184 ns/op

# Run progress: 36.51% complete, ETA 01:06:49
# Fork: 3 of 3
# Warmup Iteration   1: 16291.214 ns/op
# Warmup Iteration   2: 14443.446 ns/op
# Warmup Iteration   3: 14448.549 ns/op
# Warmup Iteration   4: 14053.944 ns/op
# Warmup Iteration   5: 14429.684 ns/op
Iteration   1: 14628.666 ns/op
Iteration   2: 14142.196 ns/op
Iteration   3: 14553.096 ns/op
Iteration   4: 14298.883 ns/op
Iteration   5: 14591.016 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StackFrameIteratorBenchmark.get_the_Nth_backwards_stack_frame_StackWalker":
  14263.369 ±(99.9%) 289.375 ns/op [Average]
  (min, avg, max) = (13717.243, 14263.369, 14628.666), stdev = 270.681
  CI (99.9%): [13973.994, 14552.743] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StackFrameIteratorBenchmark.get_the_Nth_backwards_stack_frame_StackWalker
# Parameters: (stackDepth = 128)

# Run progress: 38.10% complete, ETA 01:05:09
# Fork: 1 of 3
# Warmup Iteration   1: 29276.639 ns/op
# Warmup Iteration   2: 26555.505 ns/op
# Warmup Iteration   3: 25478.392 ns/op
# Warmup Iteration   4: 25519.493 ns/op
# Warmup Iteration   5: 26107.973 ns/op
Iteration   1: 26152.402 ns/op
Iteration   2: 26206.884 ns/op
Iteration   3: 25751.825 ns/op
Iteration   4: 26229.493 ns/op
Iteration   5: 25986.428 ns/op

# Run progress: 39.68% complete, ETA 01:03:29
# Fork: 2 of 3
# Warmup Iteration   1: 28343.789 ns/op
# Warmup Iteration   2: 25678.676 ns/op
# Warmup Iteration   3: 26455.318 ns/op
# Warmup Iteration   4: 26350.750 ns/op
# Warmup Iteration   5: 26411.572 ns/op
Iteration   1: 25168.894 ns/op
Iteration   2: 26033.457 ns/op
Iteration   3: 25884.042 ns/op
Iteration   4: 26367.429 ns/op
Iteration   5: 26439.873 ns/op

# Run progress: 41.27% complete, ETA 01:01:49
# Fork: 3 of 3
# Warmup Iteration   1: 29511.910 ns/op
# Warmup Iteration   2: 26791.059 ns/op
# Warmup Iteration   3: 27200.500 ns/op
# Warmup Iteration   4: 26822.699 ns/op
# Warmup Iteration   5: 27493.481 ns/op
Iteration   1: 25867.754 ns/op
Iteration   2: 26252.203 ns/op
Iteration   3: 26001.188 ns/op
Iteration   4: 26892.808 ns/op
Iteration   5: 26073.775 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StackFrameIteratorBenchmark.get_the_Nth_backwards_stack_frame_StackWalker":
  26087.230 ±(99.9%) 402.424 ns/op [Average]
  (min, avg, max) = (25168.894, 26087.230, 26892.808), stdev = 376.428
  CI (99.9%): [25684.806, 26489.655] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StackFrameIteratorBenchmark.get_throwable
# Parameters: (stackDepth = 1)

# Run progress: 42.86% complete, ETA 01:00:08
# Fork: 1 of 3
# Warmup Iteration   1: 1085.085 ns/op
# Warmup Iteration   2: 1053.444 ns/op
# Warmup Iteration   3: 1028.478 ns/op
# Warmup Iteration   4: 1043.225 ns/op
# Warmup Iteration   5: 1032.842 ns/op
Iteration   1: 1051.610 ns/op
Iteration   2: 1059.187 ns/op
Iteration   3: 1025.345 ns/op
Iteration   4: 1028.853 ns/op
Iteration   5: 1041.426 ns/op

# Run progress: 44.44% complete, ETA 00:58:28
# Fork: 2 of 3
# Warmup Iteration   1: 1093.497 ns/op
# Warmup Iteration   2: 1050.203 ns/op
# Warmup Iteration   3: 1052.716 ns/op
# Warmup Iteration   4: 1031.370 ns/op
# Warmup Iteration   5: 1052.149 ns/op
Iteration   1: 1046.237 ns/op
Iteration   2: 1032.802 ns/op
Iteration   3: 1022.790 ns/op
Iteration   4: 1032.398 ns/op
Iteration   5: 1031.325 ns/op

# Run progress: 46.03% complete, ETA 00:56:48
# Fork: 3 of 3
# Warmup Iteration   1: 1046.198 ns/op
# Warmup Iteration   2: 1041.209 ns/op
# Warmup Iteration   3: 1052.718 ns/op
# Warmup Iteration   4: 1051.059 ns/op
# Warmup Iteration   5: 1016.866 ns/op
Iteration   1: 1019.076 ns/op
Iteration   2: 1022.587 ns/op
Iteration   3: 1016.033 ns/op
Iteration   4: 998.504 ns/op
Iteration   5: 1029.008 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StackFrameIteratorBenchmark.get_throwable":
  1030.479 ±(99.9%) 16.067 ns/op [Average]
  (min, avg, max) = (998.504, 1030.479, 1059.187), stdev = 15.029
  CI (99.9%): [1014.411, 1046.546] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StackFrameIteratorBenchmark.get_throwable
# Parameters: (stackDepth = 64)

# Run progress: 47.62% complete, ETA 00:55:08
# Fork: 1 of 3
# Warmup Iteration   1: 3092.816 ns/op
# Warmup Iteration   2: 2781.444 ns/op
# Warmup Iteration   3: 2829.531 ns/op
# Warmup Iteration   4: 2819.310 ns/op
# Warmup Iteration   5: 2809.944 ns/op
Iteration   1: 2768.666 ns/op
Iteration   2: 2721.049 ns/op
Iteration   3: 2824.285 ns/op
Iteration   4: 2809.225 ns/op
Iteration   5: 2775.104 ns/op

# Run progress: 49.21% complete, ETA 00:53:27
# Fork: 2 of 3
# Warmup Iteration   1: 3030.060 ns/op
# Warmup Iteration   2: 2808.164 ns/op
# Warmup Iteration   3: 2770.437 ns/op
# Warmup Iteration   4: 2768.681 ns/op
# Warmup Iteration   5: 2813.542 ns/op
Iteration   1: 2816.636 ns/op
Iteration   2: 2830.942 ns/op
Iteration   3: 2733.720 ns/op
Iteration   4: 2738.644 ns/op
Iteration   5: 2758.134 ns/op

# Run progress: 50.79% complete, ETA 00:51:47
# Fork: 3 of 3
# Warmup Iteration   1: 3040.502 ns/op
# Warmup Iteration   2: 2743.317 ns/op
# Warmup Iteration   3: 2731.808 ns/op
# Warmup Iteration   4: 2794.579 ns/op
# Warmup Iteration   5: 2811.105 ns/op
Iteration   1: 2695.678 ns/op
Iteration   2: 2718.819 ns/op
Iteration   3: 2757.388 ns/op
Iteration   4: 2818.988 ns/op
Iteration   5: 2744.141 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StackFrameIteratorBenchmark.get_throwable":
  2767.428 ±(99.9%) 46.520 ns/op [Average]
  (min, avg, max) = (2695.678, 2767.428, 2830.942), stdev = 43.515
  CI (99.9%): [2720.907, 2813.948] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StackFrameIteratorBenchmark.get_throwable
# Parameters: (stackDepth = 128)

# Run progress: 52.38% complete, ETA 00:50:07
# Fork: 1 of 3
# Warmup Iteration   1: 4891.147 ns/op
# Warmup Iteration   2: 4682.043 ns/op
# Warmup Iteration   3: 4626.285 ns/op
# Warmup Iteration   4: 4747.216 ns/op
# Warmup Iteration   5: 4727.741 ns/op
Iteration   1: 4598.545 ns/op
Iteration   2: 4674.446 ns/op
Iteration   3: 4633.215 ns/op
Iteration   4: 4653.925 ns/op
Iteration   5: 4544.399 ns/op

# Run progress: 53.97% complete, ETA 00:48:27
# Fork: 2 of 3
# Warmup Iteration   1: 5044.861 ns/op
# Warmup Iteration   2: 4870.296 ns/op
# Warmup Iteration   3: 4678.285 ns/op
# Warmup Iteration   4: 4606.486 ns/op
# Warmup Iteration   5: 4758.307 ns/op
Iteration   1: 4703.198 ns/op
Iteration   2: 4650.648 ns/op
Iteration   3: 4645.235 ns/op
Iteration   4: 4774.386 ns/op
Iteration   5: 4748.787 ns/op

# Run progress: 55.56% complete, ETA 00:46:46
# Fork: 3 of 3
# Warmup Iteration   1: 4751.051 ns/op
# Warmup Iteration   2: 4594.680 ns/op
# Warmup Iteration   3: 4707.704 ns/op
# Warmup Iteration   4: 4535.784 ns/op
# Warmup Iteration   5: 4699.838 ns/op
Iteration   1: 4647.102 ns/op
Iteration   2: 4598.680 ns/op
Iteration   3: 4665.439 ns/op
Iteration   4: 4554.980 ns/op
Iteration   5: 4680.975 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StackFrameIteratorBenchmark.get_throwable":
  4651.597 ±(99.9%) 67.376 ns/op [Average]
  (min, avg, max) = (4544.399, 4651.597, 4774.386), stdev = 63.024
  CI (99.9%): [4584.221, 4718.974] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StackFrameIteratorBenchmark.get_top_stack_frame_GetStackTrace
# Parameters: (stackDepth = 1)

# Run progress: 57.14% complete, ETA 00:45:06
# Fork: 1 of 3
# Warmup Iteration   1: 7306.681 ns/op
# Warmup Iteration   2: 6734.268 ns/op
# Warmup Iteration   3: 6456.838 ns/op
# Warmup Iteration   4: 6457.841 ns/op
# Warmup Iteration   5: 6832.543 ns/op
Iteration   1: 6819.782 ns/op
Iteration   2: 6813.130 ns/op
Iteration   3: 6670.781 ns/op
Iteration   4: 6561.746 ns/op
Iteration   5: 6762.701 ns/op

# Run progress: 58.73% complete, ETA 00:43:26
# Fork: 2 of 3
# Warmup Iteration   1: 7194.763 ns/op
# Warmup Iteration   2: 6481.514 ns/op
# Warmup Iteration   3: 6844.704 ns/op
# Warmup Iteration   4: 6815.215 ns/op
# Warmup Iteration   5: 6608.740 ns/op
Iteration   1: 6821.729 ns/op
Iteration   2: 6415.542 ns/op
Iteration   3: 6832.102 ns/op
Iteration   4: 6541.942 ns/op
Iteration   5: 6673.134 ns/op

# Run progress: 60.32% complete, ETA 00:41:46
# Fork: 3 of 3
# Warmup Iteration   1: 7443.040 ns/op
# Warmup Iteration   2: 6793.276 ns/op
# Warmup Iteration   3: 6873.413 ns/op
# Warmup Iteration   4: 6618.581 ns/op
# Warmup Iteration   5: 6749.799 ns/op
Iteration   1: 6957.621 ns/op
Iteration   2: 6726.696 ns/op
Iteration   3: 6563.367 ns/op
Iteration   4: 6563.875 ns/op
Iteration   5: 6565.732 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StackFrameIteratorBenchmark.get_top_stack_frame_GetStackTrace":
  6685.992 ±(99.9%) 158.901 ns/op [Average]
  (min, avg, max) = (6415.542, 6685.992, 6957.621), stdev = 148.636
  CI (99.9%): [6527.091, 6844.893] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StackFrameIteratorBenchmark.get_top_stack_frame_GetStackTrace
# Parameters: (stackDepth = 64)

# Run progress: 61.90% complete, ETA 00:40:05
# Fork: 1 of 3
# Warmup Iteration   1: 24629.117 ns/op
# Warmup Iteration   2: 22812.022 ns/op
# Warmup Iteration   3: 22413.378 ns/op
# Warmup Iteration   4: 22593.242 ns/op
# Warmup Iteration   5: 22512.320 ns/op
Iteration   1: 22026.666 ns/op
Iteration   2: 22187.363 ns/op
Iteration   3: 21259.304 ns/op
Iteration   4: 21376.576 ns/op
Iteration   5: 22688.351 ns/op

# Run progress: 63.49% complete, ETA 00:38:25
# Fork: 2 of 3
# Warmup Iteration   1: 24995.901 ns/op
# Warmup Iteration   2: 22259.127 ns/op
# Warmup Iteration   3: 22948.235 ns/op
# Warmup Iteration   4: 23013.610 ns/op
# Warmup Iteration   5: 22465.244 ns/op
Iteration   1: 22208.100 ns/op
Iteration   2: 22930.474 ns/op
Iteration   3: 22987.076 ns/op
Iteration   4: 23109.020 ns/op
Iteration   5: 22922.997 ns/op

# Run progress: 65.08% complete, ETA 00:36:45
# Fork: 3 of 3
# Warmup Iteration   1: 23269.177 ns/op
# Warmup Iteration   2: 22139.836 ns/op
# Warmup Iteration   3: 21919.207 ns/op
# Warmup Iteration   4: 21332.513 ns/op
# Warmup Iteration   5: 21426.672 ns/op
Iteration   1: 22082.576 ns/op
Iteration   2: 21894.539 ns/op
Iteration   3: 21510.721 ns/op
Iteration   4: 22337.206 ns/op
Iteration   5: 22712.696 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StackFrameIteratorBenchmark.get_top_stack_frame_GetStackTrace":
  22282.244 ±(99.9%) 645.005 ns/op [Average]
  (min, avg, max) = (21259.304, 22282.244, 23109.020), stdev = 603.338
  CI (99.9%): [21637.239, 22927.249] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StackFrameIteratorBenchmark.get_top_stack_frame_GetStackTrace
# Parameters: (stackDepth = 128)

# Run progress: 66.67% complete, ETA 00:35:05
# Fork: 1 of 3
# Warmup Iteration   1: 39735.315 ns/op
# Warmup Iteration   2: 37190.946 ns/op
# Warmup Iteration   3: 38035.938 ns/op
# Warmup Iteration   4: 37437.840 ns/op
# Warmup Iteration   5: 36187.259 ns/op
Iteration   1: 36689.060 ns/op
Iteration   2: 38558.743 ns/op
Iteration   3: 38384.091 ns/op
Iteration   4: 38259.897 ns/op
Iteration   5: 38184.131 ns/op

# Run progress: 68.25% complete, ETA 00:33:24
# Fork: 2 of 3
# Warmup Iteration   1: 41734.679 ns/op
# Warmup Iteration   2: 39634.804 ns/op
# Warmup Iteration   3: 38838.113 ns/op
# Warmup Iteration   4: 40069.343 ns/op
# Warmup Iteration   5: 38148.195 ns/op
Iteration   1: 39485.514 ns/op
Iteration   2: 38609.678 ns/op
Iteration   3: 38630.429 ns/op
Iteration   4: 38571.326 ns/op
Iteration   5: 39149.586 ns/op

# Run progress: 69.84% complete, ETA 00:31:44
# Fork: 3 of 3
# Warmup Iteration   1: 41512.841 ns/op
# Warmup Iteration   2: 37443.745 ns/op
# Warmup Iteration   3: 37758.714 ns/op
# Warmup Iteration   4: 39030.983 ns/op
# Warmup Iteration   5: 38937.673 ns/op
Iteration   1: 37642.680 ns/op
Iteration   2: 38912.468 ns/op
Iteration   3: 38733.564 ns/op
Iteration   4: 38484.313 ns/op
Iteration   5: 37466.424 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StackFrameIteratorBenchmark.get_top_stack_frame_GetStackTrace":
  38384.127 ±(99.9%) 740.002 ns/op [Average]
  (min, avg, max) = (36689.060, 38384.127, 39485.514), stdev = 692.199
  CI (99.9%): [37644.124, 39124.129] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StackFrameIteratorBenchmark.get_top_stack_frame_StackWalker
# Parameters: (stackDepth = 1)

# Run progress: 71.43% complete, ETA 00:30:04
# Fork: 1 of 3
# Warmup Iteration   1: 1494.732 ns/op
# Warmup Iteration   2: 1384.935 ns/op
# Warmup Iteration   3: 1387.174 ns/op
# Warmup Iteration   4: 1353.317 ns/op
# Warmup Iteration   5: 1337.442 ns/op
Iteration   1: 1362.859 ns/op
Iteration   2: 1323.203 ns/op
Iteration   3: 1322.790 ns/op
Iteration   4: 1343.640 ns/op
Iteration   5: 1355.469 ns/op

# Run progress: 73.02% complete, ETA 00:28:24
# Fork: 2 of 3
# Warmup Iteration   1: 1513.550 ns/op
# Warmup Iteration   2: 1312.102 ns/op
# Warmup Iteration   3: 1331.684 ns/op
# Warmup Iteration   4: 1302.168 ns/op
# Warmup Iteration   5: 1303.493 ns/op
Iteration   1: 1348.930 ns/op
Iteration   2: 1349.641 ns/op
Iteration   3: 1303.547 ns/op
Iteration   4: 1314.769 ns/op
Iteration   5: 1336.173 ns/op

# Run progress: 74.60% complete, ETA 00:26:43
# Fork: 3 of 3
# Warmup Iteration   1: 1512.897 ns/op
# Warmup Iteration   2: 1348.121 ns/op
# Warmup Iteration   3: 1322.430 ns/op
# Warmup Iteration   4: 1317.476 ns/op
# Warmup Iteration   5: 1359.078 ns/op
Iteration   1: 1338.625 ns/op
Iteration   2: 1283.817 ns/op
Iteration   3: 1287.682 ns/op
Iteration   4: 1311.058 ns/op
Iteration   5: 1287.508 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StackFrameIteratorBenchmark.get_top_stack_frame_StackWalker":
  1324.647 ±(99.9%) 27.789 ns/op [Average]
  (min, avg, max) = (1283.817, 1324.647, 1362.859), stdev = 25.994
  CI (99.9%): [1296.859, 1352.436] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StackFrameIteratorBenchmark.get_top_stack_frame_StackWalker
# Parameters: (stackDepth = 64)

# Run progress: 76.19% complete, ETA 00:25:03
# Fork: 1 of 3
# Warmup Iteration   1: 1488.301 ns/op
# Warmup Iteration   2: 1332.447 ns/op
# Warmup Iteration   3: 1280.526 ns/op
# Warmup Iteration   4: 1259.556 ns/op
# Warmup Iteration   5: 1305.446 ns/op
Iteration   1: 1267.807 ns/op
Iteration   2: 1321.164 ns/op
Iteration   3: 1313.343 ns/op
Iteration   4: 1267.680 ns/op
Iteration   5: 1310.305 ns/op

# Run progress: 77.78% complete, ETA 00:23:23
# Fork: 2 of 3
# Warmup Iteration   1: 1466.105 ns/op
# Warmup Iteration   2: 1311.425 ns/op
# Warmup Iteration   3: 1336.374 ns/op
# Warmup Iteration   4: 1335.924 ns/op
# Warmup Iteration   5: 1277.505 ns/op
Iteration   1: 1338.647 ns/op
Iteration   2: 1335.386 ns/op
Iteration   3: 1328.909 ns/op
Iteration   4: 1277.277 ns/op
Iteration   5: 1298.846 ns/op

# Run progress: 79.37% complete, ETA 00:21:43
# Fork: 3 of 3
# Warmup Iteration   1: 1396.317 ns/op
# Warmup Iteration   2: 1289.700 ns/op
# Warmup Iteration   3: 1328.820 ns/op
# Warmup Iteration   4: 1293.971 ns/op
# Warmup Iteration   5: 1247.603 ns/op
Iteration   1: 1286.910 ns/op
Iteration   2: 1262.728 ns/op
Iteration   3: 1259.986 ns/op
Iteration   4: 1281.352 ns/op
Iteration   5: 1326.756 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StackFrameIteratorBenchmark.get_top_stack_frame_StackWalker":
  1298.473 ±(99.9%) 30.106 ns/op [Average]
  (min, avg, max) = (1259.986, 1298.473, 1338.647), stdev = 28.161
  CI (99.9%): [1268.367, 1328.579] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StackFrameIteratorBenchmark.get_top_stack_frame_StackWalker
# Parameters: (stackDepth = 128)

# Run progress: 80.95% complete, ETA 00:20:02
# Fork: 1 of 3
# Warmup Iteration   1: 1577.976 ns/op
# Warmup Iteration   2: 1440.245 ns/op
# Warmup Iteration   3: 1416.224 ns/op
# Warmup Iteration   4: 1424.819 ns/op
# Warmup Iteration   5: 1414.809 ns/op
Iteration   1: 1392.586 ns/op
Iteration   2: 1334.729 ns/op
Iteration   3: 1339.401 ns/op
Iteration   4: 1379.562 ns/op
Iteration   5: 1429.305 ns/op

# Run progress: 82.54% complete, ETA 00:18:22
# Fork: 2 of 3
# Warmup Iteration   1: 1609.338 ns/op
# Warmup Iteration   2: 1382.164 ns/op
# Warmup Iteration   3: 1357.540 ns/op
# Warmup Iteration   4: 1388.574 ns/op
# Warmup Iteration   5: 1444.103 ns/op
Iteration   1: 1393.010 ns/op
Iteration   2: 1445.863 ns/op
Iteration   3: 1442.587 ns/op
Iteration   4: 1412.351 ns/op
Iteration   5: 1419.642 ns/op

# Run progress: 84.13% complete, ETA 00:16:42
# Fork: 3 of 3
# Warmup Iteration   1: 1500.943 ns/op
# Warmup Iteration   2: 1427.501 ns/op
# Warmup Iteration   3: 1382.280 ns/op
# Warmup Iteration   4: 1425.638 ns/op
# Warmup Iteration   5: 1411.600 ns/op
Iteration   1: 1367.151 ns/op
Iteration   2: 1369.335 ns/op
Iteration   3: 1352.176 ns/op
Iteration   4: 1374.149 ns/op
Iteration   5: 1399.336 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StackFrameIteratorBenchmark.get_top_stack_frame_StackWalker":
  1390.079 ±(99.9%) 37.545 ns/op [Average]
  (min, avg, max) = (1334.729, 1390.079, 1445.863), stdev = 35.119
  CI (99.9%): [1352.534, 1427.624] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StackFrameIteratorBenchmark.retrieve_caller_stack_frame_SecurityManager
# Parameters: (stackDepth = 1)

# Run progress: 85.71% complete, ETA 00:15:02
# Fork: 1 of 3
# Warmup Iteration   1: 926.037 ns/op
# Warmup Iteration   2: 876.480 ns/op
# Warmup Iteration   3: 814.023 ns/op
# Warmup Iteration   4: 816.675 ns/op
# Warmup Iteration   5: 816.547 ns/op
Iteration   1: 871.034 ns/op
Iteration   2: 868.189 ns/op
Iteration   3: 865.438 ns/op
Iteration   4: 864.571 ns/op
Iteration   5: 861.940 ns/op

# Run progress: 87.30% complete, ETA 00:13:21
# Fork: 2 of 3
# Warmup Iteration   1: 882.136 ns/op
# Warmup Iteration   2: 881.488 ns/op
# Warmup Iteration   3: 865.643 ns/op
# Warmup Iteration   4: 861.236 ns/op
# Warmup Iteration   5: 862.038 ns/op
Iteration   1: 861.120 ns/op
Iteration   2: 861.379 ns/op
Iteration   3: 854.832 ns/op
Iteration   4: 835.523 ns/op
Iteration   5: 852.970 ns/op

# Run progress: 88.89% complete, ETA 00:11:41
# Fork: 3 of 3
# Warmup Iteration   1: 873.710 ns/op
# Warmup Iteration   2: 865.364 ns/op
# Warmup Iteration   3: 856.052 ns/op
# Warmup Iteration   4: 853.934 ns/op
# Warmup Iteration   5: 850.455 ns/op
Iteration   1: 810.151 ns/op
Iteration   2: 849.963 ns/op
Iteration   3: 853.030 ns/op
Iteration   4: 796.570 ns/op
Iteration   5: 802.972 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StackFrameIteratorBenchmark.retrieve_caller_stack_frame_SecurityManager":
  847.312 ±(99.9%) 26.212 ns/op [Average]
  (min, avg, max) = (796.570, 847.312, 871.034), stdev = 24.519
  CI (99.9%): [821.100, 873.525] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StackFrameIteratorBenchmark.retrieve_caller_stack_frame_SecurityManager
# Parameters: (stackDepth = 64)

# Run progress: 90.48% complete, ETA 00:10:01
# Fork: 1 of 3
# Warmup Iteration   1: 928.721 ns/op
# Warmup Iteration   2: 841.340 ns/op
# Warmup Iteration   3: 816.948 ns/op
# Warmup Iteration   4: 815.774 ns/op
# Warmup Iteration   5: 815.670 ns/op
Iteration   1: 815.539 ns/op
Iteration   2: 816.491 ns/op
Iteration   3: 817.358 ns/op
Iteration   4: 816.740 ns/op
Iteration   5: 817.364 ns/op

# Run progress: 92.06% complete, ETA 00:08:21
# Fork: 2 of 3
# Warmup Iteration   1: 874.056 ns/op
# Warmup Iteration   2: 863.456 ns/op
# Warmup Iteration   3: 855.159 ns/op
# Warmup Iteration   4: 852.731 ns/op
# Warmup Iteration   5: 850.462 ns/op
Iteration   1: 848.148 ns/op
Iteration   2: 798.091 ns/op
Iteration   3: 802.347 ns/op
Iteration   4: 803.394 ns/op
Iteration   5: 854.644 ns/op

# Run progress: 93.65% complete, ETA 00:06:40
# Fork: 3 of 3
# Warmup Iteration   1: 899.296 ns/op
# Warmup Iteration   2: 893.914 ns/op
# Warmup Iteration   3: 874.570 ns/op
# Warmup Iteration   4: 873.703 ns/op
# Warmup Iteration   5: 814.091 ns/op
Iteration   1: 821.367 ns/op
Iteration   2: 873.988 ns/op
Iteration   3: 817.838 ns/op
Iteration   4: 822.970 ns/op
Iteration   5: 824.285 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StackFrameIteratorBenchmark.retrieve_caller_stack_frame_SecurityManager":
  823.371 ±(99.9%) 21.937 ns/op [Average]
  (min, avg, max) = (798.091, 823.371, 873.988), stdev = 20.519
  CI (99.9%): [801.434, 845.307] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StackFrameIteratorBenchmark.retrieve_caller_stack_frame_SecurityManager
# Parameters: (stackDepth = 128)

# Run progress: 95.24% complete, ETA 00:05:00
# Fork: 1 of 3
# Warmup Iteration   1: 889.492 ns/op
# Warmup Iteration   2: 845.249 ns/op
# Warmup Iteration   3: 829.914 ns/op
# Warmup Iteration   4: 829.140 ns/op
# Warmup Iteration   5: 828.197 ns/op
Iteration   1: 827.932 ns/op
Iteration   2: 830.154 ns/op
Iteration   3: 828.856 ns/op
Iteration   4: 828.641 ns/op
Iteration   5: 858.001 ns/op

# Run progress: 96.83% complete, ETA 00:03:20
# Fork: 2 of 3
# Warmup Iteration   1: 884.849 ns/op
# Warmup Iteration   2: 823.550 ns/op
# Warmup Iteration   3: 815.329 ns/op
# Warmup Iteration   4: 815.467 ns/op
# Warmup Iteration   5: 837.163 ns/op
Iteration   1: 837.046 ns/op
Iteration   2: 813.546 ns/op
Iteration   3: 814.379 ns/op
Iteration   4: 812.645 ns/op
Iteration   5: 813.896 ns/op

# Run progress: 98.41% complete, ETA 00:01:40
# Fork: 3 of 3
# Warmup Iteration   1: 926.207 ns/op
# Warmup Iteration   2: 871.823 ns/op
# Warmup Iteration   3: 812.157 ns/op
# Warmup Iteration   4: 813.985 ns/op
# Warmup Iteration   5: 830.608 ns/op
Iteration   1: 838.969 ns/op
Iteration   2: 839.394 ns/op
Iteration   3: 838.296 ns/op
Iteration   4: 838.459 ns/op
Iteration   5: 839.360 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StackFrameIteratorBenchmark.retrieve_caller_stack_frame_SecurityManager":
  830.638 ±(99.9%) 13.724 ns/op [Average]
  (min, avg, max) = (812.645, 830.638, 858.001), stdev = 12.837
  CI (99.9%): [816.915, 844.362] (assumes normal distribution)


# Run complete. Total time: 01:45:15

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                                                    (stackDepth)  Mode  Cnt      Score     Error  Units
StackFrameIteratorBenchmark.get_caller_stack_frame_StackWalker                          1  avgt   15    624.705 ±  28.800  ns/op
StackFrameIteratorBenchmark.get_caller_stack_frame_StackWalker                         64  avgt   15    624.989 ±  30.248  ns/op
StackFrameIteratorBenchmark.get_caller_stack_frame_StackWalker                        128  avgt   15    609.294 ±  19.319  ns/op
StackFrameIteratorBenchmark.get_the_Nth_backwards_stack_frame_GetStackTrace             1  avgt   15   6879.456 ± 121.469  ns/op
StackFrameIteratorBenchmark.get_the_Nth_backwards_stack_frame_GetStackTrace            64  avgt   15  23793.333 ± 523.869  ns/op
StackFrameIteratorBenchmark.get_the_Nth_backwards_stack_frame_GetStackTrace           128  avgt   15  40647.905 ± 780.079  ns/op
StackFrameIteratorBenchmark.get_the_Nth_backwards_stack_frame_StackWalker               1  avgt   15   1313.730 ±  30.044  ns/op
StackFrameIteratorBenchmark.get_the_Nth_backwards_stack_frame_StackWalker              64  avgt   15  14263.369 ± 289.375  ns/op
StackFrameIteratorBenchmark.get_the_Nth_backwards_stack_frame_StackWalker             128  avgt   15  26087.230 ± 402.424  ns/op
StackFrameIteratorBenchmark.get_throwable                                               1  avgt   15   1030.479 ±  16.067  ns/op
StackFrameIteratorBenchmark.get_throwable                                              64  avgt   15   2767.428 ±  46.520  ns/op
StackFrameIteratorBenchmark.get_throwable                                             128  avgt   15   4651.597 ±  67.376  ns/op
StackFrameIteratorBenchmark.get_top_stack_frame_GetStackTrace                           1  avgt   15   6685.992 ± 158.901  ns/op
StackFrameIteratorBenchmark.get_top_stack_frame_GetStackTrace                          64  avgt   15  22282.244 ± 645.005  ns/op
StackFrameIteratorBenchmark.get_top_stack_frame_GetStackTrace                         128  avgt   15  38384.127 ± 740.002  ns/op
StackFrameIteratorBenchmark.get_top_stack_frame_StackWalker                             1  avgt   15   1324.647 ±  27.789  ns/op
StackFrameIteratorBenchmark.get_top_stack_frame_StackWalker                            64  avgt   15   1298.473 ±  30.106  ns/op
StackFrameIteratorBenchmark.get_top_stack_frame_StackWalker                           128  avgt   15   1390.079 ±  37.545  ns/op
StackFrameIteratorBenchmark.retrieve_caller_stack_frame_SecurityManager                 1  avgt   15    847.312 ±  26.212  ns/op
StackFrameIteratorBenchmark.retrieve_caller_stack_frame_SecurityManager                64  avgt   15    823.371 ±  21.937  ns/op
StackFrameIteratorBenchmark.retrieve_caller_stack_frame_SecurityManager               128  avgt   15    830.638 ±  13.724  ns/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_graal_jit/StackFrameIteratorBenchmark.json
Running java -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler -jar benchmarks/target/benchmarks.jar .*BigDecimalBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_graal_jit/BigDecimalBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.BigDecimalBenchmark.add
# Parameters: (contextType = UNLIMITED, size = 128)

# Run progress: 0.00% complete, ETA 02:20:00
# Fork: 1 of 3
# Warmup Iteration   1: 731.060 ns/op
# Warmup Iteration   2: 634.000 ns/op
# Warmup Iteration   3: 623.182 ns/op
# Warmup Iteration   4: 625.813 ns/op
# Warmup Iteration   5: 624.263 ns/op
Iteration   1: 626.856 ns/op
Iteration   2: 622.872 ns/op
Iteration   3: 636.141 ns/op
Iteration   4: 626.429 ns/op
Iteration   5: 631.486 ns/op

# Run progress: 1.19% complete, ETA 02:18:49
# Fork: 2 of 3
# Warmup Iteration   1: 708.706 ns/op
# Warmup Iteration   2: 632.167 ns/op
# Warmup Iteration   3: 633.251 ns/op
# Warmup Iteration   4: 628.400 ns/op
# Warmup Iteration   5: 624.685 ns/op
Iteration   1: 631.314 ns/op
Iteration   2: 631.055 ns/op
Iteration   3: 618.068 ns/op
Iteration   4: 616.856 ns/op
Iteration   5: 621.519 ns/op

# Run progress: 2.38% complete, ETA 02:17:03
# Fork: 3 of 3
# Warmup Iteration   1: 711.169 ns/op
# Warmup Iteration   2: 632.857 ns/op
# Warmup Iteration   3: 631.635 ns/op
# Warmup Iteration   4: 627.060 ns/op
# Warmup Iteration   5: 632.867 ns/op
Iteration   1: 622.722 ns/op
Iteration   2: 630.758 ns/op
Iteration   3: 626.150 ns/op
Iteration   4: 628.733 ns/op
Iteration   5: 626.008 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.BigDecimalBenchmark.add":
  626.464 ±(99.9%) 5.726 ns/op [Average]
  (min, avg, max) = (616.856, 626.464, 636.141), stdev = 5.356
  CI (99.9%): [620.738, 632.191] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.BigDecimalBenchmark.add
# Parameters: (contextType = DECIMAL32, size = 128)

# Run progress: 3.57% complete, ETA 02:15:22
# Fork: 1 of 3
# Warmup Iteration   1: 84.221 ns/op
# Warmup Iteration   2: 76.312 ns/op
# Warmup Iteration   3: 74.710 ns/op
# Warmup Iteration   4: 73.805 ns/op
# Warmup Iteration   5: 74.469 ns/op
Iteration   1: 73.422 ns/op
Iteration   2: 73.367 ns/op
Iteration   3: 74.374 ns/op
Iteration   4: 74.065 ns/op
Iteration   5: 74.213 ns/op

# Run progress: 4.76% complete, ETA 02:13:43
# Fork: 2 of 3
# Warmup Iteration   1: 83.168 ns/op
# Warmup Iteration   2: 74.246 ns/op
# Warmup Iteration   3: 74.720 ns/op
# Warmup Iteration   4: 75.451 ns/op
# Warmup Iteration   5: 73.460 ns/op
Iteration   1: 73.536 ns/op
Iteration   2: 74.232 ns/op
Iteration   3: 74.358 ns/op
Iteration   4: 74.196 ns/op
Iteration   5: 73.763 ns/op

# Run progress: 5.95% complete, ETA 02:12:03
# Fork: 3 of 3
# Warmup Iteration   1: 85.509 ns/op
# Warmup Iteration   2: 74.593 ns/op
# Warmup Iteration   3: 74.255 ns/op
# Warmup Iteration   4: 74.775 ns/op
# Warmup Iteration   5: 74.748 ns/op
Iteration   1: 74.513 ns/op
Iteration   2: 73.757 ns/op
Iteration   3: 74.976 ns/op
Iteration   4: 74.464 ns/op
Iteration   5: 73.891 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.BigDecimalBenchmark.add":
  74.075 ±(99.9%) 0.481 ns/op [Average]
  (min, avg, max) = (73.367, 74.075, 74.976), stdev = 0.450
  CI (99.9%): [73.594, 74.556] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.BigDecimalBenchmark.add
# Parameters: (contextType = DECIMAL64, size = 128)

# Run progress: 7.14% complete, ETA 02:10:22
# Fork: 1 of 3
# Warmup Iteration   1: 90.160 ns/op
# Warmup Iteration   2: 79.962 ns/op
# Warmup Iteration   3: 78.836 ns/op
# Warmup Iteration   4: 79.418 ns/op
# Warmup Iteration   5: 78.609 ns/op
Iteration   1: 79.101 ns/op
Iteration   2: 79.083 ns/op
Iteration   3: 79.354 ns/op
Iteration   4: 77.635 ns/op
Iteration   5: 79.041 ns/op

# Run progress: 8.33% complete, ETA 02:08:41
# Fork: 2 of 3
# Warmup Iteration   1: 88.986 ns/op
# Warmup Iteration   2: 80.240 ns/op
# Warmup Iteration   3: 78.739 ns/op
# Warmup Iteration   4: 79.249 ns/op
# Warmup Iteration   5: 79.466 ns/op
Iteration   1: 78.831 ns/op
Iteration   2: 78.899 ns/op
Iteration   3: 78.818 ns/op
Iteration   4: 79.058 ns/op
Iteration   5: 79.406 ns/op

# Run progress: 9.52% complete, ETA 02:07:01
# Fork: 3 of 3
# Warmup Iteration   1: 90.002 ns/op
# Warmup Iteration   2: 79.755 ns/op
# Warmup Iteration   3: 78.375 ns/op
# Warmup Iteration   4: 76.684 ns/op
# Warmup Iteration   5: 77.267 ns/op
Iteration   1: 76.601 ns/op
Iteration   2: 77.456 ns/op
Iteration   3: 77.936 ns/op
Iteration   4: 76.903 ns/op
Iteration   5: 76.353 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.BigDecimalBenchmark.add":
  78.298 ±(99.9%) 1.126 ns/op [Average]
  (min, avg, max) = (76.353, 78.298, 79.406), stdev = 1.053
  CI (99.9%): [77.172, 79.425] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.BigDecimalBenchmark.add
# Parameters: (contextType = DECIMAL128, size = 128)

# Run progress: 10.71% complete, ETA 02:05:20
# Fork: 1 of 3
# Warmup Iteration   1: 106.238 ns/op
# Warmup Iteration   2: 93.396 ns/op
# Warmup Iteration   3: 93.524 ns/op
# Warmup Iteration   4: 92.956 ns/op
# Warmup Iteration   5: 92.091 ns/op
Iteration   1: 92.447 ns/op
Iteration   2: 92.274 ns/op
Iteration   3: 93.140 ns/op
Iteration   4: 93.229 ns/op
Iteration   5: 92.084 ns/op

# Run progress: 11.90% complete, ETA 02:03:40
# Fork: 2 of 3
# Warmup Iteration   1: 106.107 ns/op
# Warmup Iteration   2: 92.717 ns/op
# Warmup Iteration   3: 91.451 ns/op
# Warmup Iteration   4: 92.940 ns/op
# Warmup Iteration   5: 92.402 ns/op
Iteration   1: 92.218 ns/op
Iteration   2: 92.453 ns/op
Iteration   3: 92.915 ns/op
Iteration   4: 93.097 ns/op
Iteration   5: 91.827 ns/op

# Run progress: 13.10% complete, ETA 02:01:59
# Fork: 3 of 3
# Warmup Iteration   1: 113.118 ns/op
# Warmup Iteration   2: 99.241 ns/op
# Warmup Iteration   3: 98.264 ns/op
# Warmup Iteration   4: 99.131 ns/op
# Warmup Iteration   5: 100.160 ns/op
Iteration   1: 100.539 ns/op
Iteration   2: 97.598 ns/op
Iteration   3: 99.009 ns/op
Iteration   4: 98.995 ns/op
Iteration   5: 99.749 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.BigDecimalBenchmark.add":
  94.772 ±(99.9%) 3.529 ns/op [Average]
  (min, avg, max) = (91.827, 94.772, 100.539), stdev = 3.301
  CI (99.9%): [91.243, 98.300] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.BigDecimalBenchmark.compare_to
# Parameters: (contextType = UNLIMITED, size = 128)

# Run progress: 14.29% complete, ETA 02:00:19
# Fork: 1 of 3
# Warmup Iteration   1: 5.229 ns/op
# Warmup Iteration   2: 4.537 ns/op
# Warmup Iteration   3: 4.511 ns/op
# Warmup Iteration   4: 4.513 ns/op
# Warmup Iteration   5: 4.501 ns/op
Iteration   1: 4.497 ns/op
Iteration   2: 4.496 ns/op
Iteration   3: 4.493 ns/op
Iteration   4: 4.490 ns/op
Iteration   5: 4.605 ns/op

# Run progress: 15.48% complete, ETA 01:58:39
# Fork: 2 of 3
# Warmup Iteration   1: 5.169 ns/op
# Warmup Iteration   2: 4.523 ns/op
# Warmup Iteration   3: 4.492 ns/op
# Warmup Iteration   4: 4.493 ns/op
# Warmup Iteration   5: 4.493 ns/op
Iteration   1: 4.494 ns/op
Iteration   2: 4.490 ns/op
Iteration   3: 4.602 ns/op
Iteration   4: 4.613 ns/op
Iteration   5: 4.599 ns/op

# Run progress: 16.67% complete, ETA 01:56:58
# Fork: 3 of 3
# Warmup Iteration   1: 4.767 ns/op
# Warmup Iteration   2: 4.421 ns/op
# Warmup Iteration   3: 4.407 ns/op
# Warmup Iteration   4: 4.403 ns/op
# Warmup Iteration   5: 4.405 ns/op
Iteration   1: 4.408 ns/op
Iteration   2: 4.409 ns/op
Iteration   3: 4.703 ns/op
Iteration   4: 4.608 ns/op
Iteration   5: 4.664 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.BigDecimalBenchmark.compare_to":
  4.545 ±(99.9%) 0.095 ns/op [Average]
  (min, avg, max) = (4.408, 4.545, 4.703), stdev = 0.089
  CI (99.9%): [4.450, 4.640] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.BigDecimalBenchmark.compare_to
# Parameters: (contextType = DECIMAL32, size = 128)

# Run progress: 17.86% complete, ETA 01:55:18
# Fork: 1 of 3
# Warmup Iteration   1: 5.588 ns/op
# Warmup Iteration   2: 5.007 ns/op
# Warmup Iteration   3: 4.996 ns/op
# Warmup Iteration   4: 4.992 ns/op
# Warmup Iteration   5: 4.995 ns/op
Iteration   1: 4.990 ns/op
Iteration   2: 5.057 ns/op
Iteration   3: 5.096 ns/op
Iteration   4: 5.084 ns/op
Iteration   5: 5.081 ns/op

# Run progress: 19.05% complete, ETA 01:53:37
# Fork: 2 of 3
# Warmup Iteration   1: 5.381 ns/op
# Warmup Iteration   2: 5.162 ns/op
# Warmup Iteration   3: 5.142 ns/op
# Warmup Iteration   4: 5.124 ns/op
# Warmup Iteration   5: 4.953 ns/op
Iteration   1: 4.968 ns/op
Iteration   2: 4.954 ns/op
Iteration   3: 4.969 ns/op
Iteration   4: 4.971 ns/op
Iteration   5: 4.976 ns/op

# Run progress: 20.24% complete, ETA 01:51:57
# Fork: 3 of 3
# Warmup Iteration   1: 5.531 ns/op
# Warmup Iteration   2: 4.920 ns/op
# Warmup Iteration   3: 4.905 ns/op
# Warmup Iteration   4: 4.899 ns/op
# Warmup Iteration   5: 4.900 ns/op
Iteration   1: 4.885 ns/op
Iteration   2: 4.900 ns/op
Iteration   3: 4.918 ns/op
Iteration   4: 4.916 ns/op
Iteration   5: 4.909 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.BigDecimalBenchmark.compare_to":
  4.978 ±(99.9%) 0.075 ns/op [Average]
  (min, avg, max) = (4.885, 4.978, 5.096), stdev = 0.070
  CI (99.9%): [4.903, 5.054] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.BigDecimalBenchmark.compare_to
# Parameters: (contextType = DECIMAL64, size = 128)

# Run progress: 21.43% complete, ETA 01:50:17
# Fork: 1 of 3
# Warmup Iteration   1: 4.716 ns/op
# Warmup Iteration   2: 4.385 ns/op
# Warmup Iteration   3: 4.620 ns/op
# Warmup Iteration   4: 4.606 ns/op
# Warmup Iteration   5: 4.600 ns/op
Iteration   1: 4.587 ns/op
Iteration   2: 4.563 ns/op
Iteration   3: 4.521 ns/op
Iteration   4: 4.529 ns/op
Iteration   5: 4.420 ns/op

# Run progress: 22.62% complete, ETA 01:48:36
# Fork: 2 of 3
# Warmup Iteration   1: 4.984 ns/op
# Warmup Iteration   2: 4.543 ns/op
# Warmup Iteration   3: 4.536 ns/op
# Warmup Iteration   4: 4.406 ns/op
# Warmup Iteration   5: 4.402 ns/op
Iteration   1: 4.410 ns/op
Iteration   2: 4.562 ns/op
Iteration   3: 4.546 ns/op
Iteration   4: 4.554 ns/op
Iteration   5: 4.548 ns/op

# Run progress: 23.81% complete, ETA 01:46:56
# Fork: 3 of 3
# Warmup Iteration   1: 4.921 ns/op
# Warmup Iteration   2: 4.577 ns/op
# Warmup Iteration   3: 4.574 ns/op
# Warmup Iteration   4: 4.537 ns/op
# Warmup Iteration   5: 4.532 ns/op
Iteration   1: 4.514 ns/op
Iteration   2: 4.511 ns/op
Iteration   3: 4.508 ns/op
Iteration   4: 4.508 ns/op
Iteration   5: 4.512 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.BigDecimalBenchmark.compare_to":
  4.520 ±(99.9%) 0.052 ns/op [Average]
  (min, avg, max) = (4.410, 4.520, 4.587), stdev = 0.049
  CI (99.9%): [4.467, 4.572] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.BigDecimalBenchmark.compare_to
# Parameters: (contextType = DECIMAL128, size = 128)

# Run progress: 25.00% complete, ETA 01:45:16
# Fork: 1 of 3
# Warmup Iteration   1: 4.626 ns/op
# Warmup Iteration   2: 4.602 ns/op
# Warmup Iteration   3: 4.573 ns/op
# Warmup Iteration   4: 4.564 ns/op
# Warmup Iteration   5: 4.573 ns/op
Iteration   1: 4.383 ns/op
Iteration   2: 4.288 ns/op
Iteration   3: 4.309 ns/op
Iteration   4: 4.322 ns/op
Iteration   5: 4.329 ns/op

# Run progress: 26.19% complete, ETA 01:43:35
# Fork: 2 of 3
# Warmup Iteration   1: 4.797 ns/op
# Warmup Iteration   2: 4.462 ns/op
# Warmup Iteration   3: 4.448 ns/op
# Warmup Iteration   4: 4.445 ns/op
# Warmup Iteration   5: 4.443 ns/op
Iteration   1: 4.607 ns/op
Iteration   2: 4.422 ns/op
Iteration   3: 4.433 ns/op
Iteration   4: 4.436 ns/op
Iteration   5: 4.591 ns/op

# Run progress: 27.38% complete, ETA 01:41:55
# Fork: 3 of 3
# Warmup Iteration   1: 4.743 ns/op
# Warmup Iteration   2: 4.606 ns/op
# Warmup Iteration   3: 4.584 ns/op
# Warmup Iteration   4: 4.576 ns/op
# Warmup Iteration   5: 4.553 ns/op
Iteration   1: 4.546 ns/op
Iteration   2: 4.537 ns/op
Iteration   3: 4.555 ns/op
Iteration   4: 4.551 ns/op
Iteration   5: 4.551 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.BigDecimalBenchmark.compare_to":
  4.457 ±(99.9%) 0.120 ns/op [Average]
  (min, avg, max) = (4.288, 4.457, 4.607), stdev = 0.112
  CI (99.9%): [4.338, 4.577] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.BigDecimalBenchmark.divide
# Parameters: (contextType = UNLIMITED, size = 128)

# Run progress: 28.57% complete, ETA 01:40:15
# Fork: 1 of 3
# Warmup Iteration   1: <failure>

java.lang.ArithmeticException: Non-terminating decimal expansion; no exact representable decimal result.
	at java.base/java.math.BigDecimal.divide(BigDecimal.java:1722)
	at com.ionutbalosin.jvm.jit.benchmark.BigDecimalBenchmark.divide(BigDecimalBenchmark.java:130)
	at com.ionutbalosin.jvm.jit.benchmark.generated.BigDecimalBenchmark_divide_jmhTest.divide_avgt_jmhStub(BigDecimalBenchmark_divide_jmhTest.java:232)
	at com.ionutbalosin.jvm.jit.benchmark.generated.BigDecimalBenchmark_divide_jmhTest.divide_AverageTime(BigDecimalBenchmark_divide_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:830)


Benchmark had encountered error, and fail on error was requested
Running java -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler -jar benchmarks/target/benchmarks.jar .*BigIntegerBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_graal_jit/BigIntegerBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.BigIntegerBenchmark.add
# Parameters: (size = 1024)

# Run progress: 0.00% complete, ETA 00:30:00
# Fork: 1 of 3
# Warmup Iteration   1: 14.614 ns/op
# Warmup Iteration   2: 12.769 ns/op
# Warmup Iteration   3: 12.689 ns/op
# Warmup Iteration   4: 12.891 ns/op
# Warmup Iteration   5: 12.904 ns/op
Iteration   1: 12.761 ns/op
Iteration   2: 12.936 ns/op
Iteration   3: 12.949 ns/op
Iteration   4: 12.789 ns/op
Iteration   5: 12.935 ns/op

# Run progress: 5.56% complete, ETA 00:28:26
# Fork: 2 of 3
# Warmup Iteration   1: 14.274 ns/op
# Warmup Iteration   2: 12.986 ns/op
# Warmup Iteration   3: 12.561 ns/op
# Warmup Iteration   4: 12.647 ns/op
# Warmup Iteration   5: 12.726 ns/op
Iteration   1: 12.738 ns/op
Iteration   2: 12.849 ns/op
Iteration   3: 12.891 ns/op
Iteration   4: 12.594 ns/op
Iteration   5: 12.817 ns/op

# Run progress: 11.11% complete, ETA 00:26:45
# Fork: 3 of 3
# Warmup Iteration   1: 14.141 ns/op
# Warmup Iteration   2: 12.960 ns/op
# Warmup Iteration   3: 12.681 ns/op
# Warmup Iteration   4: 12.955 ns/op
# Warmup Iteration   5: 12.939 ns/op
Iteration   1: 12.924 ns/op
Iteration   2: 13.036 ns/op
Iteration   3: 12.900 ns/op
Iteration   4: 12.917 ns/op
Iteration   5: 12.864 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.BigIntegerBenchmark.add":
  12.860 ±(99.9%) 0.115 ns/op [Average]
  (min, avg, max) = (12.594, 12.860, 13.036), stdev = 0.108
  CI (99.9%): [12.745, 12.975] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.BigIntegerBenchmark.compare_to
# Parameters: (size = 1024)

# Run progress: 16.67% complete, ETA 00:25:04
# Fork: 1 of 3
# Warmup Iteration   1: 6.423 ns/op
# Warmup Iteration   2: 6.077 ns/op
# Warmup Iteration   3: 6.399 ns/op
# Warmup Iteration   4: 6.461 ns/op
# Warmup Iteration   5: 6.351 ns/op
Iteration   1: 6.370 ns/op
Iteration   2: 6.738 ns/op
Iteration   3: 6.698 ns/op
Iteration   4: 6.663 ns/op
Iteration   5: 6.682 ns/op

# Run progress: 22.22% complete, ETA 00:23:24
# Fork: 2 of 3
# Warmup Iteration   1: 7.715 ns/op
# Warmup Iteration   2: 6.615 ns/op
# Warmup Iteration   3: 6.465 ns/op
# Warmup Iteration   4: 6.373 ns/op
# Warmup Iteration   5: 6.293 ns/op
Iteration   1: 6.267 ns/op
Iteration   2: 6.263 ns/op
Iteration   3: 6.239 ns/op
Iteration   4: 6.223 ns/op
Iteration   5: 6.231 ns/op

# Run progress: 27.78% complete, ETA 00:21:43
# Fork: 3 of 3
# Warmup Iteration   1: 6.993 ns/op
# Warmup Iteration   2: 6.607 ns/op
# Warmup Iteration   3: 6.619 ns/op
# Warmup Iteration   4: 6.604 ns/op
# Warmup Iteration   5: 6.586 ns/op
Iteration   1: 6.407 ns/op
Iteration   2: 6.377 ns/op
Iteration   3: 6.389 ns/op
Iteration   4: 6.374 ns/op
Iteration   5: 6.420 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.BigIntegerBenchmark.compare_to":
  6.423 ±(99.9%) 0.196 ns/op [Average]
  (min, avg, max) = (6.223, 6.423, 6.738), stdev = 0.183
  CI (99.9%): [6.227, 6.618] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.BigIntegerBenchmark.divide
# Parameters: (size = 1024)

# Run progress: 33.33% complete, ETA 00:20:03
# Fork: 1 of 3
# Warmup Iteration   1: 8.113 ns/op
# Warmup Iteration   2: 7.200 ns/op
# Warmup Iteration   3: 7.143 ns/op
# Warmup Iteration   4: 7.231 ns/op
# Warmup Iteration   5: 7.237 ns/op
Iteration   1: 7.237 ns/op
Iteration   2: 7.250 ns/op
Iteration   3: 7.149 ns/op
Iteration   4: 7.242 ns/op
Iteration   5: 7.276 ns/op

# Run progress: 38.89% complete, ETA 00:18:23
# Fork: 2 of 3
# Warmup Iteration   1: 8.131 ns/op
# Warmup Iteration   2: 7.348 ns/op
# Warmup Iteration   3: 7.261 ns/op
# Warmup Iteration   4: 7.364 ns/op
# Warmup Iteration   5: 7.315 ns/op
Iteration   1: 7.246 ns/op
Iteration   2: 7.216 ns/op
Iteration   3: 7.170 ns/op
Iteration   4: 7.264 ns/op
Iteration   5: 7.239 ns/op

# Run progress: 44.44% complete, ETA 00:16:42
# Fork: 3 of 3
# Warmup Iteration   1: 8.237 ns/op
# Warmup Iteration   2: 7.383 ns/op
# Warmup Iteration   3: 7.267 ns/op
# Warmup Iteration   4: 7.220 ns/op
# Warmup Iteration   5: 7.279 ns/op
Iteration   1: 7.231 ns/op
Iteration   2: 7.228 ns/op
Iteration   3: 7.195 ns/op
Iteration   4: 7.259 ns/op
Iteration   5: 7.171 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.BigIntegerBenchmark.divide":
  7.225 ±(99.9%) 0.040 ns/op [Average]
  (min, avg, max) = (7.149, 7.225, 7.276), stdev = 0.038
  CI (99.9%): [7.185, 7.265] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.BigIntegerBenchmark.multiply
# Parameters: (size = 1024)

# Run progress: 50.00% complete, ETA 00:15:02
# Fork: 1 of 3
# Warmup Iteration   1: 4486.943 ns/op
# Warmup Iteration   2: 4077.825 ns/op
# Warmup Iteration   3: 4043.754 ns/op
# Warmup Iteration   4: 4058.054 ns/op
# Warmup Iteration   5: 4027.275 ns/op
Iteration   1: 4036.089 ns/op
Iteration   2: 4015.586 ns/op
Iteration   3: 4054.854 ns/op
Iteration   4: 4045.594 ns/op
Iteration   5: 4005.485 ns/op

# Run progress: 55.56% complete, ETA 00:13:22
# Fork: 2 of 3
# Warmup Iteration   1: 4391.787 ns/op
# Warmup Iteration   2: 4027.629 ns/op
# Warmup Iteration   3: 4026.110 ns/op
# Warmup Iteration   4: 4025.743 ns/op
# Warmup Iteration   5: 4012.484 ns/op
Iteration   1: 4044.156 ns/op
Iteration   2: 4048.875 ns/op
Iteration   3: 4068.107 ns/op
Iteration   4: 4044.562 ns/op
Iteration   5: 3994.655 ns/op

# Run progress: 61.11% complete, ETA 00:11:41
# Fork: 3 of 3
# Warmup Iteration   1: 4450.817 ns/op
# Warmup Iteration   2: 4067.221 ns/op
# Warmup Iteration   3: 4024.736 ns/op
# Warmup Iteration   4: 4024.550 ns/op
# Warmup Iteration   5: 4051.474 ns/op
Iteration   1: 4021.859 ns/op
Iteration   2: 3975.628 ns/op
Iteration   3: 4014.354 ns/op
Iteration   4: 3996.660 ns/op
Iteration   5: 4070.206 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.BigIntegerBenchmark.multiply":
  4029.111 ±(99.9%) 30.184 ns/op [Average]
  (min, avg, max) = (3975.628, 4029.111, 4070.206), stdev = 28.234
  CI (99.9%): [3998.927, 4059.296] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.BigIntegerBenchmark.subtract
# Parameters: (size = 1024)

# Run progress: 66.67% complete, ETA 00:10:01
# Fork: 1 of 3
# Warmup Iteration   1: 14.302 ns/op
# Warmup Iteration   2: 13.001 ns/op
# Warmup Iteration   3: 13.021 ns/op
# Warmup Iteration   4: 12.992 ns/op
# Warmup Iteration   5: 12.868 ns/op
Iteration   1: 12.929 ns/op
Iteration   2: 12.840 ns/op
Iteration   3: 12.856 ns/op
Iteration   4: 13.231 ns/op
Iteration   5: 13.294 ns/op

# Run progress: 72.22% complete, ETA 00:08:21
# Fork: 2 of 3
# Warmup Iteration   1: 14.768 ns/op
# Warmup Iteration   2: 13.432 ns/op
# Warmup Iteration   3: 13.320 ns/op
# Warmup Iteration   4: 13.262 ns/op
# Warmup Iteration   5: 13.052 ns/op
Iteration   1: 13.179 ns/op
Iteration   2: 13.154 ns/op
Iteration   3: 13.138 ns/op
Iteration   4: 13.189 ns/op
Iteration   5: 13.182 ns/op

# Run progress: 77.78% complete, ETA 00:06:41
# Fork: 3 of 3
# Warmup Iteration   1: 14.769 ns/op
# Warmup Iteration   2: 13.315 ns/op
# Warmup Iteration   3: 13.111 ns/op
# Warmup Iteration   4: 13.015 ns/op
# Warmup Iteration   5: 13.046 ns/op
Iteration   1: 13.120 ns/op
Iteration   2: 13.157 ns/op
Iteration   3: 13.230 ns/op
Iteration   4: 13.135 ns/op
Iteration   5: 13.127 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.BigIntegerBenchmark.subtract":
  13.117 ±(99.9%) 0.144 ns/op [Average]
  (min, avg, max) = (12.840, 13.117, 13.294), stdev = 0.135
  CI (99.9%): [12.973, 13.262] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.BigIntegerBenchmark.to_string
# Parameters: (size = 1024)

# Run progress: 83.33% complete, ETA 00:05:00
# Fork: 1 of 3
# Warmup Iteration   1: 281.392 ns/op
# Warmup Iteration   2: 252.227 ns/op
# Warmup Iteration   3: 243.504 ns/op
# Warmup Iteration   4: 248.756 ns/op
# Warmup Iteration   5: 246.195 ns/op
Iteration   1: 246.737 ns/op
Iteration   2: 245.098 ns/op
Iteration   3: 245.759 ns/op
Iteration   4: 249.250 ns/op
Iteration   5: 249.943 ns/op

# Run progress: 88.89% complete, ETA 00:03:20
# Fork: 2 of 3
# Warmup Iteration   1: 281.217 ns/op
# Warmup Iteration   2: 245.976 ns/op
# Warmup Iteration   3: 243.445 ns/op
# Warmup Iteration   4: 248.204 ns/op
# Warmup Iteration   5: 249.963 ns/op
Iteration   1: 241.547 ns/op
Iteration   2: 244.122 ns/op
Iteration   3: 245.146 ns/op
Iteration   4: 242.066 ns/op
Iteration   5: 239.769 ns/op

# Run progress: 94.44% complete, ETA 00:01:40
# Fork: 3 of 3
# Warmup Iteration   1: 287.516 ns/op
# Warmup Iteration   2: 247.173 ns/op
# Warmup Iteration   3: 245.813 ns/op
# Warmup Iteration   4: 244.451 ns/op
# Warmup Iteration   5: 251.770 ns/op
Iteration   1: 247.606 ns/op
Iteration   2: 247.185 ns/op
Iteration   3: 247.068 ns/op
Iteration   4: 243.733 ns/op
Iteration   5: 240.750 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.BigIntegerBenchmark.to_string":
  245.052 ±(99.9%) 3.261 ns/op [Average]
  (min, avg, max) = (239.769, 245.052, 249.943), stdev = 3.050
  CI (99.9%): [241.791, 248.313] (assumes normal distribution)


# Run complete. Total time: 00:30:04

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                       (size)  Mode  Cnt     Score    Error  Units
BigIntegerBenchmark.add           1024  avgt   15    12.860 ±  0.115  ns/op
BigIntegerBenchmark.compare_to    1024  avgt   15     6.423 ±  0.196  ns/op
BigIntegerBenchmark.divide        1024  avgt   15     7.225 ±  0.040  ns/op
BigIntegerBenchmark.multiply      1024  avgt   15  4029.111 ± 30.184  ns/op
BigIntegerBenchmark.subtract      1024  avgt   15    13.117 ±  0.144  ns/op
BigIntegerBenchmark.to_string     1024  avgt   15   245.052 ±  3.261  ns/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_graal_jit/BigIntegerBenchmark.json
Running java -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler -jar benchmarks/target/benchmarks.jar .*DoubleMathBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_graal_jit/DoubleMathBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.DoubleMathBenchmark.abs
# Parameters: (size = 262144)

# Run progress: 0.00% complete, ETA 01:10:00
# Fork: 1 of 3
# Warmup Iteration   1: 0.693 ns/op
# Warmup Iteration   2: 0.626 ns/op
# Warmup Iteration   3: 0.611 ns/op
# Warmup Iteration   4: 0.632 ns/op
# Warmup Iteration   5: 0.605 ns/op
Iteration   1: 0.629 ns/op
Iteration   2: 0.597 ns/op
Iteration   3: 0.610 ns/op
Iteration   4: 0.610 ns/op
Iteration   5: 0.610 ns/op

# Run progress: 2.38% complete, ETA 01:08:37
# Fork: 2 of 3
# Warmup Iteration   1: 0.680 ns/op
# Warmup Iteration   2: 0.630 ns/op
# Warmup Iteration   3: 0.630 ns/op
# Warmup Iteration   4: 0.606 ns/op
# Warmup Iteration   5: 0.606 ns/op
Iteration   1: 0.606 ns/op
Iteration   2: 0.606 ns/op
Iteration   3: 0.629 ns/op
Iteration   4: 0.627 ns/op
Iteration   5: 0.586 ns/op

# Run progress: 4.76% complete, ETA 01:06:54
# Fork: 3 of 3
# Warmup Iteration   1: 0.678 ns/op
# Warmup Iteration   2: 0.608 ns/op
# Warmup Iteration   3: 0.627 ns/op
# Warmup Iteration   4: 0.626 ns/op
# Warmup Iteration   5: 0.624 ns/op
Iteration   1: 0.624 ns/op
Iteration   2: 0.622 ns/op
Iteration   3: 0.623 ns/op
Iteration   4: 0.608 ns/op
Iteration   5: 0.586 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.DoubleMathBenchmark.abs":
  0.612 ±(99.9%) 0.015 ns/op [Average]
  (min, avg, max) = (0.586, 0.612, 0.629), stdev = 0.014
  CI (99.9%): [0.596, 0.627] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.DoubleMathBenchmark.ceil
# Parameters: (size = 262144)

# Run progress: 7.14% complete, ETA 01:05:14
# Fork: 1 of 3
# Warmup Iteration   1: 0.653 ns/op
# Warmup Iteration   2: 0.619 ns/op
# Warmup Iteration   3: 0.629 ns/op
# Warmup Iteration   4: 0.625 ns/op
# Warmup Iteration   5: 0.600 ns/op
Iteration   1: 0.625 ns/op
Iteration   2: 0.599 ns/op
Iteration   3: 0.601 ns/op
Iteration   4: 0.583 ns/op
Iteration   5: 0.587 ns/op

# Run progress: 9.52% complete, ETA 01:03:32
# Fork: 2 of 3
# Warmup Iteration   1: 0.641 ns/op
# Warmup Iteration   2: 0.601 ns/op
# Warmup Iteration   3: 0.636 ns/op
# Warmup Iteration   4: 0.624 ns/op
# Warmup Iteration   5: 0.623 ns/op
Iteration   1: 0.622 ns/op
Iteration   2: 0.621 ns/op
Iteration   3: 0.606 ns/op
Iteration   4: 0.599 ns/op
Iteration   5: 0.600 ns/op

# Run progress: 11.90% complete, ETA 01:01:52
# Fork: 3 of 3
# Warmup Iteration   1: 0.682 ns/op
# Warmup Iteration   2: 0.601 ns/op
# Warmup Iteration   3: 0.608 ns/op
# Warmup Iteration   4: 0.606 ns/op
# Warmup Iteration   5: 0.627 ns/op
Iteration   1: 0.625 ns/op
Iteration   2: 0.605 ns/op
Iteration   3: 0.624 ns/op
Iteration   4: 0.623 ns/op
Iteration   5: 0.622 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.DoubleMathBenchmark.ceil":
  0.610 ±(99.9%) 0.015 ns/op [Average]
  (min, avg, max) = (0.583, 0.610, 0.625), stdev = 0.014
  CI (99.9%): [0.594, 0.625] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.DoubleMathBenchmark.cos
# Parameters: (size = 262144)

# Run progress: 14.29% complete, ETA 01:00:11
# Fork: 1 of 3
# Warmup Iteration   1: 28.217 ns/op
# Warmup Iteration   2: 27.189 ns/op
# Warmup Iteration   3: 27.027 ns/op
# Warmup Iteration   4: 27.059 ns/op
# Warmup Iteration   5: 27.056 ns/op
Iteration   1: 26.994 ns/op
Iteration   2: 26.444 ns/op
Iteration   3: 26.395 ns/op
Iteration   4: 26.351 ns/op
Iteration   5: 26.415 ns/op

# Run progress: 16.67% complete, ETA 00:58:31
# Fork: 2 of 3
# Warmup Iteration   1: 28.515 ns/op
# Warmup Iteration   2: 26.443 ns/op
# Warmup Iteration   3: 26.390 ns/op
# Warmup Iteration   4: 26.342 ns/op
# Warmup Iteration   5: 26.378 ns/op
Iteration   1: 26.378 ns/op
Iteration   2: 26.302 ns/op
Iteration   3: 26.365 ns/op
Iteration   4: 26.521 ns/op
Iteration   5: 27.068 ns/op

# Run progress: 19.05% complete, ETA 00:56:51
# Fork: 3 of 3
# Warmup Iteration   1: 28.906 ns/op
# Warmup Iteration   2: 26.527 ns/op
# Warmup Iteration   3: 26.592 ns/op
# Warmup Iteration   4: 26.608 ns/op
# Warmup Iteration   5: 27.535 ns/op
Iteration   1: 27.297 ns/op
Iteration   2: 27.182 ns/op
Iteration   3: 26.385 ns/op
Iteration   4: 27.258 ns/op
Iteration   5: 27.267 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.DoubleMathBenchmark.cos":
  26.708 ±(99.9%) 0.434 ns/op [Average]
  (min, avg, max) = (26.302, 26.708, 27.297), stdev = 0.406
  CI (99.9%): [26.274, 27.142] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.DoubleMathBenchmark.exp
# Parameters: (size = 262144)

# Run progress: 21.43% complete, ETA 00:55:11
# Fork: 1 of 3
# Warmup Iteration   1: 3.362 ns/op
# Warmup Iteration   2: 3.381 ns/op
# Warmup Iteration   3: 3.350 ns/op
# Warmup Iteration   4: 3.344 ns/op
# Warmup Iteration   5: 3.331 ns/op
Iteration   1: 3.325 ns/op
Iteration   2: 3.334 ns/op
Iteration   3: 3.355 ns/op
Iteration   4: 3.360 ns/op
Iteration   5: 3.355 ns/op

# Run progress: 23.81% complete, ETA 00:53:30
# Fork: 2 of 3
# Warmup Iteration   1: 3.559 ns/op
# Warmup Iteration   2: 3.367 ns/op
# Warmup Iteration   3: 3.352 ns/op
# Warmup Iteration   4: 3.356 ns/op
# Warmup Iteration   5: 3.352 ns/op
Iteration   1: 3.351 ns/op
Iteration   2: 3.118 ns/op
Iteration   3: 3.135 ns/op
Iteration   4: 3.163 ns/op
Iteration   5: 3.271 ns/op

# Run progress: 26.19% complete, ETA 00:51:50
# Fork: 3 of 3
# Warmup Iteration   1: 3.391 ns/op
# Warmup Iteration   2: 3.327 ns/op
# Warmup Iteration   3: 3.130 ns/op
# Warmup Iteration   4: 3.354 ns/op
# Warmup Iteration   5: 3.123 ns/op
Iteration   1: 3.134 ns/op
Iteration   2: 3.381 ns/op
Iteration   3: 3.217 ns/op
Iteration   4: 3.376 ns/op
Iteration   5: 3.363 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.DoubleMathBenchmark.exp":
  3.283 ±(99.9%) 0.107 ns/op [Average]
  (min, avg, max) = (3.118, 3.283, 3.381), stdev = 0.100
  CI (99.9%): [3.176, 3.390] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.DoubleMathBenchmark.floor
# Parameters: (size = 262144)

# Run progress: 28.57% complete, ETA 00:50:09
# Fork: 1 of 3
# Warmup Iteration   1: 0.673 ns/op
# Warmup Iteration   2: 0.590 ns/op
# Warmup Iteration   3: 0.589 ns/op
# Warmup Iteration   4: 0.600 ns/op
# Warmup Iteration   5: 0.598 ns/op
Iteration   1: 0.598 ns/op
Iteration   2: 0.625 ns/op
Iteration   3: 0.622 ns/op
Iteration   4: 0.621 ns/op
Iteration   5: 0.594 ns/op

# Run progress: 30.95% complete, ETA 00:48:29
# Fork: 2 of 3
# Warmup Iteration   1: 0.679 ns/op
# Warmup Iteration   2: 0.629 ns/op
# Warmup Iteration   3: 0.625 ns/op
# Warmup Iteration   4: 0.582 ns/op
# Warmup Iteration   5: 0.584 ns/op
Iteration   1: 0.587 ns/op
Iteration   2: 0.588 ns/op
Iteration   3: 0.627 ns/op
Iteration   4: 0.631 ns/op
Iteration   5: 0.624 ns/op

# Run progress: 33.33% complete, ETA 00:46:49
# Fork: 3 of 3
# Warmup Iteration   1: 0.674 ns/op
# Warmup Iteration   2: 0.628 ns/op
# Warmup Iteration   3: 0.627 ns/op
# Warmup Iteration   4: 0.625 ns/op
# Warmup Iteration   5: 0.624 ns/op
Iteration   1: 0.623 ns/op
Iteration   2: 0.623 ns/op
Iteration   3: 0.624 ns/op
Iteration   4: 0.624 ns/op
Iteration   5: 0.621 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.DoubleMathBenchmark.floor":
  0.616 ±(99.9%) 0.016 ns/op [Average]
  (min, avg, max) = (0.587, 0.616, 0.631), stdev = 0.015
  CI (99.9%): [0.599, 0.632] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.DoubleMathBenchmark.fma
# Parameters: (size = 262144)

# Run progress: 35.71% complete, ETA 00:45:08
# Fork: 1 of 3
# Warmup Iteration   1: 1.201 ns/op
# Warmup Iteration   2: 1.127 ns/op
# Warmup Iteration   3: 1.123 ns/op
# Warmup Iteration   4: 1.142 ns/op
# Warmup Iteration   5: 1.126 ns/op
Iteration   1: 1.130 ns/op
Iteration   2: 1.130 ns/op
Iteration   3: 1.129 ns/op
Iteration   4: 1.161 ns/op
Iteration   5: 1.152 ns/op

# Run progress: 38.10% complete, ETA 00:43:28
# Fork: 2 of 3
# Warmup Iteration   1: 1.203 ns/op
# Warmup Iteration   2: 1.153 ns/op
# Warmup Iteration   3: 1.144 ns/op
# Warmup Iteration   4: 1.148 ns/op
# Warmup Iteration   5: 1.140 ns/op
Iteration   1: 1.142 ns/op
Iteration   2: 1.139 ns/op
Iteration   3: 1.139 ns/op
Iteration   4: 1.138 ns/op
Iteration   5: 1.140 ns/op

# Run progress: 40.48% complete, ETA 00:41:47
# Fork: 3 of 3
# Warmup Iteration   1: 1.225 ns/op
# Warmup Iteration   2: 1.185 ns/op
# Warmup Iteration   3: 1.177 ns/op
# Warmup Iteration   4: 1.138 ns/op
# Warmup Iteration   5: 1.173 ns/op
Iteration   1: 1.169 ns/op
Iteration   2: 1.139 ns/op
Iteration   3: 1.142 ns/op
Iteration   4: 1.142 ns/op
Iteration   5: 1.139 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.DoubleMathBenchmark.fma":
  1.142 ±(99.9%) 0.012 ns/op [Average]
  (min, avg, max) = (1.129, 1.142, 1.169), stdev = 0.011
  CI (99.9%): [1.130, 1.154] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.DoubleMathBenchmark.log
# Parameters: (size = 262144)

# Run progress: 42.86% complete, ETA 00:40:07
# Fork: 1 of 3
# Warmup Iteration   1: 7.740 ns/op
# Warmup Iteration   2: 7.535 ns/op
# Warmup Iteration   3: 7.460 ns/op
# Warmup Iteration   4: 7.185 ns/op
# Warmup Iteration   5: 7.197 ns/op
Iteration   1: 7.194 ns/op
Iteration   2: 7.050 ns/op
Iteration   3: 7.053 ns/op
Iteration   4: 7.043 ns/op
Iteration   5: 7.041 ns/op

# Run progress: 45.24% complete, ETA 00:38:27
# Fork: 2 of 3
# Warmup Iteration   1: 7.809 ns/op
# Warmup Iteration   2: 7.129 ns/op
# Warmup Iteration   3: 7.082 ns/op
# Warmup Iteration   4: 7.468 ns/op
# Warmup Iteration   5: 7.422 ns/op
Iteration   1: 7.388 ns/op
Iteration   2: 7.176 ns/op
Iteration   3: 7.181 ns/op
Iteration   4: 7.179 ns/op
Iteration   5: 7.182 ns/op

# Run progress: 47.62% complete, ETA 00:36:46
# Fork: 3 of 3
# Warmup Iteration   1: 7.853 ns/op
# Warmup Iteration   2: 7.139 ns/op
# Warmup Iteration   3: 7.077 ns/op
# Warmup Iteration   4: 7.011 ns/op
# Warmup Iteration   5: 7.059 ns/op
Iteration   1: 7.029 ns/op
Iteration   2: 7.052 ns/op
Iteration   3: 7.209 ns/op
Iteration   4: 7.208 ns/op
Iteration   5: 7.202 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.DoubleMathBenchmark.log":
  7.146 ±(99.9%) 0.106 ns/op [Average]
  (min, avg, max) = (7.029, 7.146, 7.388), stdev = 0.099
  CI (99.9%): [7.040, 7.252] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.DoubleMathBenchmark.log10
# Parameters: (size = 262144)

# Run progress: 50.00% complete, ETA 00:35:06
# Fork: 1 of 3
# Warmup Iteration   1: 8.677 ns/op
# Warmup Iteration   2: 8.036 ns/op
# Warmup Iteration   3: 8.037 ns/op
# Warmup Iteration   4: 8.487 ns/op
# Warmup Iteration   5: 8.440 ns/op
Iteration   1: 8.414 ns/op
Iteration   2: 8.401 ns/op
Iteration   3: 8.401 ns/op
Iteration   4: 8.400 ns/op
Iteration   5: 8.397 ns/op

# Run progress: 52.38% complete, ETA 00:33:26
# Fork: 2 of 3
# Warmup Iteration   1: 8.441 ns/op
# Warmup Iteration   2: 8.016 ns/op
# Warmup Iteration   3: 8.424 ns/op
# Warmup Iteration   4: 8.406 ns/op
# Warmup Iteration   5: 8.384 ns/op
Iteration   1: 8.390 ns/op
Iteration   2: 8.388 ns/op
Iteration   3: 8.381 ns/op
Iteration   4: 8.381 ns/op
Iteration   5: 8.371 ns/op

# Run progress: 54.76% complete, ETA 00:31:45
# Fork: 3 of 3
# Warmup Iteration   1: 8.379 ns/op
# Warmup Iteration   2: 8.016 ns/op
# Warmup Iteration   3: 8.501 ns/op
# Warmup Iteration   4: 8.118 ns/op
# Warmup Iteration   5: 8.144 ns/op
Iteration   1: 8.137 ns/op
Iteration   2: 8.150 ns/op
Iteration   3: 8.131 ns/op
Iteration   4: 8.135 ns/op
Iteration   5: 8.142 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.DoubleMathBenchmark.log10":
  8.308 ±(99.9%) 0.133 ns/op [Average]
  (min, avg, max) = (8.131, 8.308, 8.414), stdev = 0.124
  CI (99.9%): [8.175, 8.441] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.DoubleMathBenchmark.max
# Parameters: (size = 262144)

# Run progress: 57.14% complete, ETA 00:30:05
# Fork: 1 of 3
# Warmup Iteration   1: 5.795 ns/op
# Warmup Iteration   2: 5.166 ns/op
# Warmup Iteration   3: 5.167 ns/op
# Warmup Iteration   4: 5.184 ns/op
# Warmup Iteration   5: 5.192 ns/op
Iteration   1: 5.196 ns/op
Iteration   2: 5.200 ns/op
Iteration   3: 5.251 ns/op
Iteration   4: 5.248 ns/op
Iteration   5: 5.193 ns/op

# Run progress: 59.52% complete, ETA 00:28:25
# Fork: 2 of 3
# Warmup Iteration   1: 5.520 ns/op
# Warmup Iteration   2: 5.439 ns/op
# Warmup Iteration   3: 5.498 ns/op
# Warmup Iteration   4: 5.482 ns/op
# Warmup Iteration   5: 5.455 ns/op
Iteration   1: 5.174 ns/op
Iteration   2: 5.205 ns/op
Iteration   3: 5.209 ns/op
Iteration   4: 5.178 ns/op
Iteration   5: 5.182 ns/op

# Run progress: 61.90% complete, ETA 00:26:45
# Fork: 3 of 3
# Warmup Iteration   1: 5.683 ns/op
# Warmup Iteration   2: 5.347 ns/op
# Warmup Iteration   3: 5.517 ns/op
# Warmup Iteration   4: 5.531 ns/op
# Warmup Iteration   5: 5.509 ns/op
Iteration   1: 5.503 ns/op
Iteration   2: 5.484 ns/op
Iteration   3: 5.464 ns/op
Iteration   4: 5.446 ns/op
Iteration   5: 5.456 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.DoubleMathBenchmark.max":
  5.293 ±(99.9%) 0.142 ns/op [Average]
  (min, avg, max) = (5.174, 5.293, 5.503), stdev = 0.133
  CI (99.9%): [5.151, 5.434] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.DoubleMathBenchmark.min
# Parameters: (size = 262144)

# Run progress: 64.29% complete, ETA 00:25:04
# Fork: 1 of 3
# Warmup Iteration   1: 5.450 ns/op
# Warmup Iteration   2: 5.193 ns/op
# Warmup Iteration   3: 5.185 ns/op
# Warmup Iteration   4: 5.176 ns/op
# Warmup Iteration   5: 5.178 ns/op
Iteration   1: 5.178 ns/op
Iteration   2: 5.191 ns/op
Iteration   3: 5.179 ns/op
Iteration   4: 5.181 ns/op
Iteration   5: 5.171 ns/op

# Run progress: 66.67% complete, ETA 00:23:24
# Fork: 2 of 3
# Warmup Iteration   1: 5.515 ns/op
# Warmup Iteration   2: 5.404 ns/op
# Warmup Iteration   3: 5.362 ns/op
# Warmup Iteration   4: 5.382 ns/op
# Warmup Iteration   5: 5.389 ns/op
Iteration   1: 5.372 ns/op
Iteration   2: 5.148 ns/op
Iteration   3: 5.146 ns/op
Iteration   4: 5.163 ns/op
Iteration   5: 5.156 ns/op

# Run progress: 69.05% complete, ETA 00:21:44
# Fork: 3 of 3
# Warmup Iteration   1: 5.391 ns/op
# Warmup Iteration   2: 5.138 ns/op
# Warmup Iteration   3: 5.127 ns/op
# Warmup Iteration   4: 5.056 ns/op
# Warmup Iteration   5: 5.096 ns/op
Iteration   1: 5.095 ns/op
Iteration   2: 5.215 ns/op
Iteration   3: 5.205 ns/op
Iteration   4: 5.194 ns/op
Iteration   5: 5.199 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.DoubleMathBenchmark.min":
  5.186 ±(99.9%) 0.063 ns/op [Average]
  (min, avg, max) = (5.095, 5.186, 5.372), stdev = 0.059
  CI (99.9%): [5.123, 5.250] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.DoubleMathBenchmark.pow
# Parameters: (size = 262144)

# Run progress: 71.43% complete, ETA 00:20:03
# Fork: 1 of 3
# Warmup Iteration   1: 11.862 ns/op
# Warmup Iteration   2: 11.859 ns/op
# Warmup Iteration   3: 11.766 ns/op
# Warmup Iteration   4: 11.811 ns/op
# Warmup Iteration   5: 11.777 ns/op
Iteration   1: 11.020 ns/op
Iteration   2: 11.694 ns/op
Iteration   3: 11.663 ns/op
Iteration   4: 11.666 ns/op
Iteration   5: 11.625 ns/op

# Run progress: 73.81% complete, ETA 00:18:23
# Fork: 2 of 3
# Warmup Iteration   1: 12.323 ns/op
# Warmup Iteration   2: 11.521 ns/op
# Warmup Iteration   3: 11.040 ns/op
# Warmup Iteration   4: 11.071 ns/op
# Warmup Iteration   5: 11.086 ns/op
Iteration   1: 11.091 ns/op
Iteration   2: 11.286 ns/op
Iteration   3: 11.087 ns/op
Iteration   4: 11.126 ns/op
Iteration   5: 11.375 ns/op

# Run progress: 76.19% complete, ETA 00:16:43
# Fork: 3 of 3
# Warmup Iteration   1: 12.416 ns/op
# Warmup Iteration   2: 11.747 ns/op
# Warmup Iteration   3: 11.355 ns/op
# Warmup Iteration   4: 11.353 ns/op
# Warmup Iteration   5: 11.735 ns/op
Iteration   1: 11.285 ns/op
Iteration   2: 11.310 ns/op
Iteration   3: 11.319 ns/op
Iteration   4: 11.340 ns/op
Iteration   5: 11.349 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.DoubleMathBenchmark.pow":
  11.349 ±(99.9%) 0.239 ns/op [Average]
  (min, avg, max) = (11.020, 11.349, 11.694), stdev = 0.223
  CI (99.9%): [11.110, 11.588] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.DoubleMathBenchmark.round
# Parameters: (size = 262144)

# Run progress: 78.57% complete, ETA 00:15:02
# Fork: 1 of 3
# Warmup Iteration   1: 1.844 ns/op
# Warmup Iteration   2: 1.722 ns/op
# Warmup Iteration   3: 1.710 ns/op
# Warmup Iteration   4: 1.706 ns/op
# Warmup Iteration   5: 1.713 ns/op
Iteration   1: 1.719 ns/op
Iteration   2: 1.718 ns/op
Iteration   3: 1.622 ns/op
Iteration   4: 1.626 ns/op
Iteration   5: 1.624 ns/op

# Run progress: 80.95% complete, ETA 00:13:22
# Fork: 2 of 3
# Warmup Iteration   1: 1.774 ns/op
# Warmup Iteration   2: 1.636 ns/op
# Warmup Iteration   3: 1.734 ns/op
# Warmup Iteration   4: 1.721 ns/op
# Warmup Iteration   5: 1.675 ns/op
Iteration   1: 1.619 ns/op
Iteration   2: 1.625 ns/op
Iteration   3: 1.628 ns/op
Iteration   4: 1.737 ns/op
Iteration   5: 1.729 ns/op

# Run progress: 83.33% complete, ETA 00:11:42
# Fork: 3 of 3
# Warmup Iteration   1: 1.762 ns/op
# Warmup Iteration   2: 1.714 ns/op
# Warmup Iteration   3: 1.703 ns/op
# Warmup Iteration   4: 1.699 ns/op
# Warmup Iteration   5: 1.705 ns/op
Iteration   1: 1.702 ns/op
Iteration   2: 1.708 ns/op
Iteration   3: 1.709 ns/op
Iteration   4: 1.652 ns/op
Iteration   5: 1.714 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.DoubleMathBenchmark.round":
  1.675 ±(99.9%) 0.050 ns/op [Average]
  (min, avg, max) = (1.619, 1.675, 1.737), stdev = 0.047
  CI (99.9%): [1.625, 1.726] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.DoubleMathBenchmark.sin
# Parameters: (size = 262144)

# Run progress: 85.71% complete, ETA 00:10:01
# Fork: 1 of 3
# Warmup Iteration   1: 27.724 ns/op
# Warmup Iteration   2: 27.447 ns/op
# Warmup Iteration   3: 27.267 ns/op
# Warmup Iteration   4: 26.520 ns/op
# Warmup Iteration   5: 26.526 ns/op
Iteration   1: 27.457 ns/op
Iteration   2: 27.541 ns/op
Iteration   3: 27.437 ns/op
Iteration   4: 27.278 ns/op
Iteration   5: 27.420 ns/op

# Run progress: 88.10% complete, ETA 00:08:21
# Fork: 2 of 3
# Warmup Iteration   1: 27.514 ns/op
# Warmup Iteration   2: 27.215 ns/op
# Warmup Iteration   3: 26.483 ns/op
# Warmup Iteration   4: 26.621 ns/op
# Warmup Iteration   5: 26.465 ns/op
Iteration   1: 26.500 ns/op
Iteration   2: 26.564 ns/op
Iteration   3: 26.592 ns/op
Iteration   4: 26.499 ns/op
Iteration   5: 26.498 ns/op

# Run progress: 90.48% complete, ETA 00:06:41
# Fork: 3 of 3
# Warmup Iteration   1: 28.887 ns/op
# Warmup Iteration   2: 27.745 ns/op
# Warmup Iteration   3: 27.535 ns/op
# Warmup Iteration   4: 27.327 ns/op
# Warmup Iteration   5: 27.195 ns/op
Iteration   1: 27.181 ns/op
Iteration   2: 27.183 ns/op
Iteration   3: 26.451 ns/op
Iteration   4: 27.268 ns/op
Iteration   5: 27.186 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.DoubleMathBenchmark.sin":
  27.004 ±(99.9%) 0.454 ns/op [Average]
  (min, avg, max) = (26.451, 27.004, 27.541), stdev = 0.425
  CI (99.9%): [26.549, 27.458] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.DoubleMathBenchmark.sqrt
# Parameters: (size = 262144)

# Run progress: 92.86% complete, ETA 00:05:00
# Fork: 1 of 3
# Warmup Iteration   1: 1.615 ns/op
# Warmup Iteration   2: 1.536 ns/op
# Warmup Iteration   3: 1.536 ns/op
# Warmup Iteration   4: 1.531 ns/op
# Warmup Iteration   5: 1.536 ns/op
Iteration   1: 1.536 ns/op
Iteration   2: 1.534 ns/op
Iteration   3: 1.535 ns/op
Iteration   4: 1.535 ns/op
Iteration   5: 1.529 ns/op

# Run progress: 95.24% complete, ETA 00:03:20
# Fork: 2 of 3
# Warmup Iteration   1: 1.600 ns/op
# Warmup Iteration   2: 1.539 ns/op
# Warmup Iteration   3: 1.534 ns/op
# Warmup Iteration   4: 1.534 ns/op
# Warmup Iteration   5: 1.535 ns/op
Iteration   1: 1.535 ns/op
Iteration   2: 1.532 ns/op
Iteration   3: 1.531 ns/op
Iteration   4: 1.535 ns/op
Iteration   5: 1.536 ns/op

# Run progress: 97.62% complete, ETA 00:01:40
# Fork: 3 of 3
# Warmup Iteration   1: 1.622 ns/op
# Warmup Iteration   2: 1.538 ns/op
# Warmup Iteration   3: 1.536 ns/op
# Warmup Iteration   4: 1.532 ns/op
# Warmup Iteration   5: 1.530 ns/op
Iteration   1: 1.536 ns/op
Iteration   2: 1.540 ns/op
Iteration   3: 1.540 ns/op
Iteration   4: 1.535 ns/op
Iteration   5: 1.540 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.DoubleMathBenchmark.sqrt":
  1.535 ±(99.9%) 0.003 ns/op [Average]
  (min, avg, max) = (1.529, 1.535, 1.540), stdev = 0.003
  CI (99.9%): [1.532, 1.539] (assumes normal distribution)


# Run complete. Total time: 01:10:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                  (size)  Mode  Cnt   Score   Error  Units
DoubleMathBenchmark.abs    262144  avgt   15   0.612 ± 0.015  ns/op
DoubleMathBenchmark.ceil   262144  avgt   15   0.610 ± 0.015  ns/op
DoubleMathBenchmark.cos    262144  avgt   15  26.708 ± 0.434  ns/op
DoubleMathBenchmark.exp    262144  avgt   15   3.283 ± 0.107  ns/op
DoubleMathBenchmark.floor  262144  avgt   15   0.616 ± 0.016  ns/op
DoubleMathBenchmark.fma    262144  avgt   15   1.142 ± 0.012  ns/op
DoubleMathBenchmark.log    262144  avgt   15   7.146 ± 0.106  ns/op
DoubleMathBenchmark.log10  262144  avgt   15   8.308 ± 0.133  ns/op
DoubleMathBenchmark.max    262144  avgt   15   5.293 ± 0.142  ns/op
DoubleMathBenchmark.min    262144  avgt   15   5.186 ± 0.063  ns/op
DoubleMathBenchmark.pow    262144  avgt   15  11.349 ± 0.239  ns/op
DoubleMathBenchmark.round  262144  avgt   15   1.675 ± 0.050  ns/op
DoubleMathBenchmark.sin    262144  avgt   15  27.004 ± 0.454  ns/op
DoubleMathBenchmark.sqrt   262144  avgt   15   1.535 ± 0.003  ns/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_graal_jit/DoubleMathBenchmark.json
Running java -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler -jar benchmarks/target/benchmarks.jar .*ClassCastBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_graal_jit/ClassCastBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ClassCastBenchmark.explicit_class_cast
# Parameters: (size = 32768)

# Run progress: 0.00% complete, ETA 00:15:00
# Fork: 1 of 3
# Warmup Iteration   1: 3.144 ns/op
# Warmup Iteration   2: 2.645 ns/op
# Warmup Iteration   3: 2.803 ns/op
# Warmup Iteration   4: 2.672 ns/op
# Warmup Iteration   5: 2.683 ns/op
Iteration   1: 2.674 ns/op
Iteration   2: 2.783 ns/op
Iteration   3: 2.789 ns/op
Iteration   4: 2.590 ns/op
Iteration   5: 2.601 ns/op

# Run progress: 11.11% complete, ETA 00:13:22
# Fork: 2 of 3
# Warmup Iteration   1: 2.784 ns/op
# Warmup Iteration   2: 2.581 ns/op
# Warmup Iteration   3: 2.597 ns/op
# Warmup Iteration   4: 2.593 ns/op
# Warmup Iteration   5: 2.601 ns/op
Iteration   1: 2.790 ns/op
Iteration   2: 2.771 ns/op
Iteration   3: 2.761 ns/op
Iteration   4: 2.743 ns/op
Iteration   5: 2.749 ns/op

# Run progress: 22.22% complete, ETA 00:11:42
# Fork: 3 of 3
# Warmup Iteration   1: 2.925 ns/op
# Warmup Iteration   2: 2.654 ns/op
# Warmup Iteration   3: 2.581 ns/op
# Warmup Iteration   4: 2.596 ns/op
# Warmup Iteration   5: 2.597 ns/op
Iteration   1: 2.788 ns/op
Iteration   2: 2.775 ns/op
Iteration   3: 2.768 ns/op
Iteration   4: 2.760 ns/op
Iteration   5: 2.755 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ClassCastBenchmark.explicit_class_cast":
  2.740 ±(99.9%) 0.070 ns/op [Average]
  (min, avg, max) = (2.590, 2.740, 2.790), stdev = 0.065
  CI (99.9%): [2.670, 2.809] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ClassCastBenchmark.regular_cast
# Parameters: (size = 32768)

# Run progress: 33.33% complete, ETA 00:10:01
# Fork: 1 of 3
# Warmup Iteration   1: 2.840 ns/op
# Warmup Iteration   2: 2.738 ns/op
# Warmup Iteration   3: 2.763 ns/op
# Warmup Iteration   4: 2.772 ns/op
# Warmup Iteration   5: 2.760 ns/op
Iteration   1: 2.673 ns/op
Iteration   2: 2.571 ns/op
Iteration   3: 2.576 ns/op
Iteration   4: 2.581 ns/op
Iteration   5: 2.592 ns/op

# Run progress: 44.44% complete, ETA 00:08:21
# Fork: 2 of 3
# Warmup Iteration   1: 2.997 ns/op
# Warmup Iteration   2: 2.718 ns/op
# Warmup Iteration   3: 2.784 ns/op
# Warmup Iteration   4: 2.777 ns/op
# Warmup Iteration   5: 2.762 ns/op
Iteration   1: 2.759 ns/op
Iteration   2: 2.750 ns/op
Iteration   3: 2.744 ns/op
Iteration   4: 2.743 ns/op
Iteration   5: 2.744 ns/op

# Run progress: 55.56% complete, ETA 00:06:41
# Fork: 3 of 3
# Warmup Iteration   1: 2.774 ns/op
# Warmup Iteration   2: 2.554 ns/op
# Warmup Iteration   3: 2.590 ns/op
# Warmup Iteration   4: 2.596 ns/op
# Warmup Iteration   5: 2.596 ns/op
Iteration   1: 2.768 ns/op
Iteration   2: 2.658 ns/op
Iteration   3: 2.657 ns/op
Iteration   4: 2.654 ns/op
Iteration   5: 2.654 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ClassCastBenchmark.regular_cast":
  2.675 ±(99.9%) 0.077 ns/op [Average]
  (min, avg, max) = (2.571, 2.675, 2.768), stdev = 0.072
  CI (99.9%): [2.597, 2.752] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ClassCastBenchmark.type_cast
# Parameters: (size = 32768)

# Run progress: 66.67% complete, ETA 00:05:00
# Fork: 1 of 3
# Warmup Iteration   1: 3.967 ns/op
# Warmup Iteration   2: 3.606 ns/op
# Warmup Iteration   3: 3.582 ns/op
# Warmup Iteration   4: 3.581 ns/op
# Warmup Iteration   5: 3.577 ns/op
Iteration   1: 3.581 ns/op
Iteration   2: 3.470 ns/op
Iteration   3: 3.751 ns/op
Iteration   4: 3.721 ns/op
Iteration   5: 3.465 ns/op

# Run progress: 77.78% complete, ETA 00:03:20
# Fork: 2 of 3
# Warmup Iteration   1: 3.856 ns/op
# Warmup Iteration   2: 3.624 ns/op
# Warmup Iteration   3: 3.766 ns/op
# Warmup Iteration   4: 3.761 ns/op
# Warmup Iteration   5: 3.762 ns/op
Iteration   1: 3.897 ns/op
Iteration   2: 3.733 ns/op
Iteration   3: 3.740 ns/op
Iteration   4: 3.686 ns/op
Iteration   5: 3.638 ns/op

# Run progress: 88.89% complete, ETA 00:01:40
# Fork: 3 of 3
# Warmup Iteration   1: 3.853 ns/op
# Warmup Iteration   2: 3.608 ns/op
# Warmup Iteration   3: 3.571 ns/op
# Warmup Iteration   4: 3.561 ns/op
# Warmup Iteration   5: 3.565 ns/op
Iteration   1: 3.566 ns/op
Iteration   2: 3.565 ns/op
Iteration   3: 3.561 ns/op
Iteration   4: 3.568 ns/op
Iteration   5: 3.568 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ClassCastBenchmark.type_cast":
  3.634 ±(99.9%) 0.127 ns/op [Average]
  (min, avg, max) = (3.465, 3.634, 3.897), stdev = 0.118
  CI (99.9%): [3.508, 3.761] (assumes normal distribution)


# Run complete. Total time: 00:15:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                               (size)  Mode  Cnt  Score   Error  Units
ClassCastBenchmark.explicit_class_cast   32768  avgt   15  2.740 ± 0.070  ns/op
ClassCastBenchmark.regular_cast          32768  avgt   15  2.675 ± 0.077  ns/op
ClassCastBenchmark.type_cast             32768  avgt   15  3.634 ± 0.127  ns/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_graal_jit/ClassCastBenchmark.json
Running java -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler -jar benchmarks/target/benchmarks.jar .*ClassInstanceOfBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_graal_jit/ClassInstanceOfBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ClassInstanceOfBenchmark.abstract_class_isAssignableFrom
# Parameters: (size = 32768)

# Run progress: 0.00% complete, ETA 00:50:00
# Fork: 1 of 3
# Warmup Iteration   1: <failure>

java.lang.ArrayIndexOutOfBoundsException: Index 32768 out of bounds for length 32768
	at com.ionutbalosin.jvm.jit.benchmark.ClassInstanceOfBenchmark.setup(ClassInstanceOfBenchmark.java:84)
	at com.ionutbalosin.jvm.jit.benchmark.generated.ClassInstanceOfBenchmark_abstract_class_isAssignableFrom_jmhTest._jmh_tryInit_f_classinstanceofbenchmark0_G(ClassInstanceOfBenchmark_abstract_class_isAssignableFrom_jmhTest.java:438)
	at com.ionutbalosin.jvm.jit.benchmark.generated.ClassInstanceOfBenchmark_abstract_class_isAssignableFrom_jmhTest.abstract_class_isAssignableFrom_AverageTime(ClassInstanceOfBenchmark_abstract_class_isAssignableFrom_jmhTest.java:161)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:830)


Benchmark had encountered error, and fail on error was requested
Running java -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler -jar benchmarks/target/benchmarks.jar .*BoxingBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_graal_jit/BoxingBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.BoxingBenchmark.auto_boxing

# Run progress: 0.00% complete, ETA 00:30:00
# Fork: 1 of 3
# Warmup Iteration   1: 3.520 ns/op
# Warmup Iteration   2: 3.210 ns/op
# Warmup Iteration   3: 3.059 ns/op
# Warmup Iteration   4: 3.077 ns/op
# Warmup Iteration   5: 3.066 ns/op
Iteration   1: 3.157 ns/op
Iteration   2: 3.151 ns/op
Iteration   3: 3.149 ns/op
Iteration   4: 3.143 ns/op
Iteration   5: 3.147 ns/op

# Run progress: 5.56% complete, ETA 00:28:25
# Fork: 2 of 3
# Warmup Iteration   1: 3.319 ns/op
# Warmup Iteration   2: 3.282 ns/op
# Warmup Iteration   3: 3.280 ns/op
# Warmup Iteration   4: 3.120 ns/op
# Warmup Iteration   5: 3.120 ns/op
Iteration   1: 3.257 ns/op
Iteration   2: 3.023 ns/op
Iteration   3: 3.034 ns/op
Iteration   4: 3.050 ns/op
Iteration   5: 3.042 ns/op

# Run progress: 11.11% complete, ETA 00:26:44
# Fork: 3 of 3
# Warmup Iteration   1: 3.572 ns/op
# Warmup Iteration   2: 3.314 ns/op
# Warmup Iteration   3: 3.236 ns/op
# Warmup Iteration   4: 3.233 ns/op
# Warmup Iteration   5: 3.207 ns/op
Iteration   1: 3.205 ns/op
Iteration   2: 3.252 ns/op
Iteration   3: 3.230 ns/op
Iteration   4: 3.181 ns/op
Iteration   5: 3.018 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.BoxingBenchmark.auto_boxing":
  3.136 ±(99.9%) 0.090 ns/op [Average]
  (min, avg, max) = (3.018, 3.136, 3.257), stdev = 0.084
  CI (99.9%): [3.046, 3.225] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.BoxingBenchmark.baseline

# Run progress: 16.67% complete, ETA 00:25:04
# Fork: 1 of 3
# Warmup Iteration   1: 2.647 ns/op
# Warmup Iteration   2: 2.651 ns/op
# Warmup Iteration   3: 2.657 ns/op
# Warmup Iteration   4: 2.648 ns/op
# Warmup Iteration   5: 2.638 ns/op
Iteration   1: 2.537 ns/op
Iteration   2: 2.541 ns/op
Iteration   3: 2.549 ns/op
Iteration   4: 2.546 ns/op
Iteration   5: 2.549 ns/op

# Run progress: 22.22% complete, ETA 00:23:23
# Fork: 2 of 3
# Warmup Iteration   1: 2.764 ns/op
# Warmup Iteration   2: 2.562 ns/op
# Warmup Iteration   3: 2.552 ns/op
# Warmup Iteration   4: 2.555 ns/op
# Warmup Iteration   5: 2.552 ns/op
Iteration   1: 2.543 ns/op
Iteration   2: 2.659 ns/op
Iteration   3: 2.652 ns/op
Iteration   4: 2.643 ns/op
Iteration   5: 2.551 ns/op

# Run progress: 27.78% complete, ETA 00:21:43
# Fork: 3 of 3
# Warmup Iteration   1: 2.632 ns/op
# Warmup Iteration   2: 2.659 ns/op
# Warmup Iteration   3: 2.621 ns/op
# Warmup Iteration   4: 2.537 ns/op
# Warmup Iteration   5: 2.539 ns/op
Iteration   1: 2.631 ns/op
Iteration   2: 2.538 ns/op
Iteration   3: 2.540 ns/op
Iteration   4: 2.540 ns/op
Iteration   5: 2.538 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.BoxingBenchmark.baseline":
  2.570 ±(99.9%) 0.051 ns/op [Average]
  (min, avg, max) = (2.537, 2.570, 2.659), stdev = 0.048
  CI (99.9%): [2.519, 2.621] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.BoxingBenchmark.cached_valueOf

# Run progress: 33.33% complete, ETA 00:20:03
# Fork: 1 of 3
# Warmup Iteration   1: 3.505 ns/op
# Warmup Iteration   2: 3.095 ns/op
# Warmup Iteration   3: 3.043 ns/op
# Warmup Iteration   4: 3.054 ns/op
# Warmup Iteration   5: 3.057 ns/op
Iteration   1: 3.052 ns/op
Iteration   2: 3.250 ns/op
Iteration   3: 3.246 ns/op
Iteration   4: 3.232 ns/op
Iteration   5: 3.224 ns/op

# Run progress: 38.89% complete, ETA 00:18:22
# Fork: 2 of 3
# Warmup Iteration   1: 3.252 ns/op
# Warmup Iteration   2: 3.077 ns/op
# Warmup Iteration   3: 3.048 ns/op
# Warmup Iteration   4: 3.058 ns/op
# Warmup Iteration   5: 3.057 ns/op
Iteration   1: 3.055 ns/op
Iteration   2: 3.057 ns/op
Iteration   3: 3.070 ns/op
Iteration   4: 3.064 ns/op
Iteration   5: 3.056 ns/op

# Run progress: 44.44% complete, ETA 00:16:42
# Fork: 3 of 3
# Warmup Iteration   1: 3.513 ns/op
# Warmup Iteration   2: 3.287 ns/op
# Warmup Iteration   3: 3.226 ns/op
# Warmup Iteration   4: 3.231 ns/op
# Warmup Iteration   5: 3.221 ns/op
Iteration   1: 3.223 ns/op
Iteration   2: 3.214 ns/op
Iteration   3: 3.015 ns/op
Iteration   4: 3.248 ns/op
Iteration   5: 3.233 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.BoxingBenchmark.cached_valueOf":
  3.149 ±(99.9%) 0.101 ns/op [Average]
  (min, avg, max) = (3.015, 3.149, 3.250), stdev = 0.095
  CI (99.9%): [3.048, 3.251] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.BoxingBenchmark.new_instance

# Run progress: 50.00% complete, ETA 00:15:02
# Fork: 1 of 3
# Warmup Iteration   1: 4.036 ns/op
# Warmup Iteration   2: 3.676 ns/op
# Warmup Iteration   3: 3.792 ns/op
# Warmup Iteration   4: 3.720 ns/op
# Warmup Iteration   5: 3.802 ns/op
Iteration   1: 3.754 ns/op
Iteration   2: 3.762 ns/op
Iteration   3: 3.747 ns/op
Iteration   4: 3.799 ns/op
Iteration   5: 3.749 ns/op

# Run progress: 55.56% complete, ETA 00:13:22
# Fork: 2 of 3
# Warmup Iteration   1: 4.022 ns/op
# Warmup Iteration   2: 3.676 ns/op
# Warmup Iteration   3: 3.754 ns/op
# Warmup Iteration   4: 3.752 ns/op
# Warmup Iteration   5: 3.718 ns/op
Iteration   1: 3.711 ns/op
Iteration   2: 3.790 ns/op
Iteration   3: 3.774 ns/op
Iteration   4: 3.799 ns/op
Iteration   5: 3.805 ns/op

# Run progress: 61.11% complete, ETA 00:11:41
# Fork: 3 of 3
# Warmup Iteration   1: 4.138 ns/op
# Warmup Iteration   2: 3.704 ns/op
# Warmup Iteration   3: 3.790 ns/op
# Warmup Iteration   4: 3.789 ns/op
# Warmup Iteration   5: 3.761 ns/op
Iteration   1: 3.805 ns/op
Iteration   2: 3.796 ns/op
Iteration   3: 3.713 ns/op
Iteration   4: 3.837 ns/op
Iteration   5: 3.759 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.BoxingBenchmark.new_instance":
  3.774 ±(99.9%) 0.038 ns/op [Average]
  (min, avg, max) = (3.711, 3.774, 3.837), stdev = 0.036
  CI (99.9%): [3.736, 3.811] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.BoxingBenchmark.un_boxing

# Run progress: 66.67% complete, ETA 00:10:01
# Fork: 1 of 3
# Warmup Iteration   1: 2.791 ns/op
# Warmup Iteration   2: 2.540 ns/op
# Warmup Iteration   3: 2.765 ns/op
# Warmup Iteration   4: 2.751 ns/op
# Warmup Iteration   5: 2.733 ns/op
Iteration   1: 2.760 ns/op
Iteration   2: 2.756 ns/op
Iteration   3: 2.752 ns/op
Iteration   4: 2.752 ns/op
Iteration   5: 2.744 ns/op

# Run progress: 72.22% complete, ETA 00:08:21
# Fork: 2 of 3
# Warmup Iteration   1: 2.836 ns/op
# Warmup Iteration   2: 2.567 ns/op
# Warmup Iteration   3: 2.635 ns/op
# Warmup Iteration   4: 2.637 ns/op
# Warmup Iteration   5: 2.636 ns/op
Iteration   1: 2.642 ns/op
Iteration   2: 2.632 ns/op
Iteration   3: 2.748 ns/op
Iteration   4: 2.709 ns/op
Iteration   5: 2.710 ns/op

# Run progress: 77.78% complete, ETA 00:06:41
# Fork: 3 of 3
# Warmup Iteration   1: 2.740 ns/op
# Warmup Iteration   2: 2.656 ns/op
# Warmup Iteration   3: 2.729 ns/op
# Warmup Iteration   4: 2.715 ns/op
# Warmup Iteration   5: 2.710 ns/op
Iteration   1: 2.702 ns/op
Iteration   2: 2.726 ns/op
Iteration   3: 2.727 ns/op
Iteration   4: 2.722 ns/op
Iteration   5: 2.721 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.BoxingBenchmark.un_boxing":
  2.720 ±(99.9%) 0.041 ns/op [Average]
  (min, avg, max) = (2.632, 2.720, 2.760), stdev = 0.039
  CI (99.9%): [2.679, 2.761] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.BoxingBenchmark.un_cached_valueOf

# Run progress: 83.33% complete, ETA 00:05:00
# Fork: 1 of 3
# Warmup Iteration   1: 4.233 ns/op
# Warmup Iteration   2: 3.983 ns/op
# Warmup Iteration   3: 3.922 ns/op
# Warmup Iteration   4: 3.928 ns/op
# Warmup Iteration   5: 3.937 ns/op
Iteration   1: 3.914 ns/op
Iteration   2: 3.963 ns/op
Iteration   3: 3.950 ns/op
Iteration   4: 3.973 ns/op
Iteration   5: 3.951 ns/op

# Run progress: 88.89% complete, ETA 00:03:20
# Fork: 2 of 3
# Warmup Iteration   1: 4.335 ns/op
# Warmup Iteration   2: 3.989 ns/op
# Warmup Iteration   3: 3.926 ns/op
# Warmup Iteration   4: 3.969 ns/op
# Warmup Iteration   5: 3.957 ns/op
Iteration   1: 3.891 ns/op
Iteration   2: 3.934 ns/op
Iteration   3: 3.970 ns/op
Iteration   4: 3.889 ns/op
Iteration   5: 4.012 ns/op

# Run progress: 94.44% complete, ETA 00:01:40
# Fork: 3 of 3
# Warmup Iteration   1: 4.361 ns/op
# Warmup Iteration   2: 3.980 ns/op
# Warmup Iteration   3: 3.930 ns/op
# Warmup Iteration   4: 3.986 ns/op
# Warmup Iteration   5: 3.900 ns/op
Iteration   1: 3.949 ns/op
Iteration   2: 4.011 ns/op
Iteration   3: 3.985 ns/op
Iteration   4: 3.952 ns/op
Iteration   5: 3.938 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.BoxingBenchmark.un_cached_valueOf":
  3.952 ±(99.9%) 0.039 ns/op [Average]
  (min, avg, max) = (3.889, 3.952, 4.012), stdev = 0.036
  CI (99.9%): [3.913, 3.991] (assumes normal distribution)


# Run complete. Total time: 00:30:04

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          Mode  Cnt  Score   Error  Units
BoxingBenchmark.auto_boxing        avgt   15  3.136 ± 0.090  ns/op
BoxingBenchmark.baseline           avgt   15  2.570 ± 0.051  ns/op
BoxingBenchmark.cached_valueOf     avgt   15  3.149 ± 0.101  ns/op
BoxingBenchmark.new_instance       avgt   15  3.774 ± 0.038  ns/op
BoxingBenchmark.un_boxing          avgt   15  2.720 ± 0.041  ns/op
BoxingBenchmark.un_cached_valueOf  avgt   15  3.952 ± 0.039  ns/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_graal_jit/BoxingBenchmark.json
Running java -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler -jar benchmarks/target/benchmarks.jar .*CompactStringsBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_graal_jit/CompactStringsBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.CompactStringsBenchmark.latin1_charAt
# Parameters: (idx = 17, latin_1 = 123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ, latin_1_identical = 123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ, utf_16 = 123456789ABCDEFGHIJKLMNOPQRSTUVWX¾ʬ, utf_16_identical = 123456789ABCDEFGHIJKLMNOPQRSTUVWX¾ʬ, utf_16_str1 = ÐžÐ¹,Ð²ÑÑ‘Ð, utf_16_str2 = ϑ¿Ñ€Ð¾Ð¿φÐ°Ϫ, utf_16_str3 = Ðϛζ»Ð¾,ÑˆÐµÑ„, utf_16_str4 = ΦЀ¾ʬϪÐ»ÐΛϼϨЁ, utf_16_str5 = ΏΔΘΞΨθςώϚϠϨϱ, utf_16_str6 = ϪÐϚϠΨθϑ¿ÐžЀ¾)

# Run progress: 0.00% complete, ETA 00:40:00
# Fork: 1 of 3
# Warmup Iteration   1: 3.709 ns/op
# Warmup Iteration   2: 3.324 ns/op
# Warmup Iteration   3: 3.409 ns/op
# Warmup Iteration   4: 3.383 ns/op
# Warmup Iteration   5: 3.376 ns/op
Iteration   1: 3.342 ns/op
Iteration   2: 3.343 ns/op
Iteration   3: 3.342 ns/op
Iteration   4: 3.264 ns/op
Iteration   5: 3.158 ns/op

# Run progress: 4.17% complete, ETA 00:38:27
# Fork: 2 of 3
# Warmup Iteration   1: 3.515 ns/op
# Warmup Iteration   2: 4.225 ns/op
# Warmup Iteration   3: 3.346 ns/op
# Warmup Iteration   4: 3.340 ns/op
# Warmup Iteration   5: 3.339 ns/op
Iteration   1: 3.336 ns/op
Iteration   2: 3.337 ns/op
Iteration   3: 3.336 ns/op
Iteration   4: 3.333 ns/op
Iteration   5: 3.332 ns/op

# Run progress: 8.33% complete, ETA 00:36:46
# Fork: 3 of 3
# Warmup Iteration   1: 3.567 ns/op
# Warmup Iteration   2: 3.369 ns/op
# Warmup Iteration   3: 3.236 ns/op
# Warmup Iteration   4: 3.239 ns/op
# Warmup Iteration   5: 3.238 ns/op
Iteration   1: 3.241 ns/op
Iteration   2: 3.243 ns/op
Iteration   3: 3.242 ns/op
Iteration   4: 3.261 ns/op
Iteration   5: 3.247 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.CompactStringsBenchmark.latin1_charAt":
  3.290 ±(99.9%) 0.061 ns/op [Average]
  (min, avg, max) = (3.158, 3.290, 3.343), stdev = 0.057
  CI (99.9%): [3.229, 3.352] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.CompactStringsBenchmark.latin1_toCharArray
# Parameters: (idx = 17, latin_1 = 123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ, latin_1_identical = 123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ, utf_16 = 123456789ABCDEFGHIJKLMNOPQRSTUVWX¾ʬ, utf_16_identical = 123456789ABCDEFGHIJKLMNOPQRSTUVWX¾ʬ, utf_16_str1 = ÐžÐ¹,Ð²ÑÑ‘Ð, utf_16_str2 = ϑ¿Ñ€Ð¾Ð¿φÐ°Ϫ, utf_16_str3 = Ðϛζ»Ð¾,ÑˆÐµÑ„, utf_16_str4 = ΦЀ¾ʬϪÐ»ÐΛϼϨЁ, utf_16_str5 = ΏΔΘΞΨθςώϚϠϨϱ, utf_16_str6 = ϪÐϚϠΨθϑ¿ÐžЀ¾)

# Run progress: 12.50% complete, ETA 00:35:05
# Fork: 1 of 3
# Warmup Iteration   1: 12.423 ns/op
# Warmup Iteration   2: 11.268 ns/op
# Warmup Iteration   3: 11.214 ns/op
# Warmup Iteration   4: 11.363 ns/op
# Warmup Iteration   5: 11.399 ns/op
Iteration   1: 11.357 ns/op
Iteration   2: 11.508 ns/op
Iteration   3: 11.352 ns/op
Iteration   4: 11.451 ns/op
Iteration   5: 11.266 ns/op

# Run progress: 16.67% complete, ETA 00:33:25
# Fork: 2 of 3
# Warmup Iteration   1: 12.591 ns/op
# Warmup Iteration   2: 11.675 ns/op
# Warmup Iteration   3: 11.663 ns/op
# Warmup Iteration   4: 11.634 ns/op
# Warmup Iteration   5: 11.474 ns/op
Iteration   1: 11.469 ns/op
Iteration   2: 11.404 ns/op
Iteration   3: 11.568 ns/op
Iteration   4: 11.620 ns/op
Iteration   5: 11.532 ns/op

# Run progress: 20.83% complete, ETA 00:31:45
# Fork: 3 of 3
# Warmup Iteration   1: 12.790 ns/op
# Warmup Iteration   2: 11.560 ns/op
# Warmup Iteration   3: 11.493 ns/op
# Warmup Iteration   4: 11.479 ns/op
# Warmup Iteration   5: 11.393 ns/op
Iteration   1: 11.227 ns/op
Iteration   2: 11.499 ns/op
Iteration   3: 11.399 ns/op
Iteration   4: 11.344 ns/op
Iteration   5: 11.470 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.CompactStringsBenchmark.latin1_toCharArray":
  11.431 ±(99.9%) 0.117 ns/op [Average]
  (min, avg, max) = (11.227, 11.431, 11.620), stdev = 0.110
  CI (99.9%): [11.314, 11.548] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.CompactStringsBenchmark.latin1_toLatin1_equals
# Parameters: (idx = 17, latin_1 = 123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ, latin_1_identical = 123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ, utf_16 = 123456789ABCDEFGHIJKLMNOPQRSTUVWX¾ʬ, utf_16_identical = 123456789ABCDEFGHIJKLMNOPQRSTUVWX¾ʬ, utf_16_str1 = ÐžÐ¹,Ð²ÑÑ‘Ð, utf_16_str2 = ϑ¿Ñ€Ð¾Ð¿φÐ°Ϫ, utf_16_str3 = Ðϛζ»Ð¾,ÑˆÐµÑ„, utf_16_str4 = ΦЀ¾ʬϪÐ»ÐΛϼϨЁ, utf_16_str5 = ΏΔΘΞΨθςώϚϠϨϱ, utf_16_str6 = ϪÐϚϠΨθϑ¿ÐžЀ¾)

# Run progress: 25.00% complete, ETA 00:30:04
# Fork: 1 of 3
# Warmup Iteration   1: 7.979 ns/op
# Warmup Iteration   2: 7.196 ns/op
# Warmup Iteration   3: 7.329 ns/op
# Warmup Iteration   4: 7.297 ns/op
# Warmup Iteration   5: 7.289 ns/op
Iteration   1: 7.280 ns/op
Iteration   2: 7.292 ns/op
Iteration   3: 7.714 ns/op
Iteration   4: 7.724 ns/op
Iteration   5: 7.707 ns/op

# Run progress: 29.17% complete, ETA 00:28:24
# Fork: 2 of 3
# Warmup Iteration   1: 7.992 ns/op
# Warmup Iteration   2: 7.508 ns/op
# Warmup Iteration   3: 7.443 ns/op
# Warmup Iteration   4: 7.626 ns/op
# Warmup Iteration   5: 7.592 ns/op
Iteration   1: 7.583 ns/op
Iteration   2: 7.592 ns/op
Iteration   3: 7.593 ns/op
Iteration   4: 7.450 ns/op
Iteration   5: 7.166 ns/op

# Run progress: 33.33% complete, ETA 00:26:44
# Fork: 3 of 3
# Warmup Iteration   1: 7.899 ns/op
# Warmup Iteration   2: 7.080 ns/op
# Warmup Iteration   3: 7.218 ns/op
# Warmup Iteration   4: 7.224 ns/op
# Warmup Iteration   5: 7.225 ns/op
Iteration   1: 7.218 ns/op
Iteration   2: 7.226 ns/op
Iteration   3: 7.705 ns/op
Iteration   4: 7.685 ns/op
Iteration   5: 7.662 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.CompactStringsBenchmark.latin1_toLatin1_equals":
  7.506 ±(99.9%) 0.226 ns/op [Average]
  (min, avg, max) = (7.166, 7.506, 7.724), stdev = 0.211
  CI (99.9%): [7.281, 7.732] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.CompactStringsBenchmark.latin1_toUtf16_equals
# Parameters: (idx = 17, latin_1 = 123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ, latin_1_identical = 123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ, utf_16 = 123456789ABCDEFGHIJKLMNOPQRSTUVWX¾ʬ, utf_16_identical = 123456789ABCDEFGHIJKLMNOPQRSTUVWX¾ʬ, utf_16_str1 = ÐžÐ¹,Ð²ÑÑ‘Ð, utf_16_str2 = ϑ¿Ñ€Ð¾Ð¿φÐ°Ϫ, utf_16_str3 = Ðϛζ»Ð¾,ÑˆÐµÑ„, utf_16_str4 = ΦЀ¾ʬϪÐ»ÐΛϼϨЁ, utf_16_str5 = ΏΔΘΞΨθςώϚϠϨϱ, utf_16_str6 = ϪÐϚϠΨθϑ¿ÐžЀ¾)

# Run progress: 37.50% complete, ETA 00:25:03
# Fork: 1 of 3
# Warmup Iteration   1: 4.601 ns/op
# Warmup Iteration   2: 4.521 ns/op
# Warmup Iteration   3: 4.324 ns/op
# Warmup Iteration   4: 4.335 ns/op
# Warmup Iteration   5: 4.326 ns/op
Iteration   1: 4.485 ns/op
Iteration   2: 4.484 ns/op
Iteration   3: 4.457 ns/op
Iteration   4: 4.302 ns/op
Iteration   5: 4.325 ns/op

# Run progress: 41.67% complete, ETA 00:23:23
# Fork: 2 of 3
# Warmup Iteration   1: 4.525 ns/op
# Warmup Iteration   2: 4.386 ns/op
# Warmup Iteration   3: 4.231 ns/op
# Warmup Iteration   4: 4.222 ns/op
# Warmup Iteration   5: 4.238 ns/op
Iteration   1: 4.215 ns/op
Iteration   2: 4.495 ns/op
Iteration   3: 4.493 ns/op
Iteration   4: 4.482 ns/op
Iteration   5: 4.468 ns/op

# Run progress: 45.83% complete, ETA 00:21:43
# Fork: 3 of 3
# Warmup Iteration   1: 4.487 ns/op
# Warmup Iteration   2: 4.382 ns/op
# Warmup Iteration   3: 4.493 ns/op
# Warmup Iteration   4: 4.436 ns/op
# Warmup Iteration   5: 4.442 ns/op
Iteration   1: 4.435 ns/op
Iteration   2: 4.284 ns/op
Iteration   3: 4.292 ns/op
Iteration   4: 4.352 ns/op
Iteration   5: 4.450 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.CompactStringsBenchmark.latin1_toUtf16_equals":
  4.401 ±(99.9%) 0.102 ns/op [Average]
  (min, avg, max) = (4.215, 4.401, 4.495), stdev = 0.095
  CI (99.9%): [4.299, 4.503] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.CompactStringsBenchmark.utf16_charAt
# Parameters: (idx = 17, latin_1 = 123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ, latin_1_identical = 123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ, utf_16 = 123456789ABCDEFGHIJKLMNOPQRSTUVWX¾ʬ, utf_16_identical = 123456789ABCDEFGHIJKLMNOPQRSTUVWX¾ʬ, utf_16_str1 = ÐžÐ¹,Ð²ÑÑ‘Ð, utf_16_str2 = ϑ¿Ñ€Ð¾Ð¿φÐ°Ϫ, utf_16_str3 = Ðϛζ»Ð¾,ÑˆÐµÑ„, utf_16_str4 = ΦЀ¾ʬϪÐ»ÐΛϼϨЁ, utf_16_str5 = ΏΔΘΞΨθςώϚϠϨϱ, utf_16_str6 = ϪÐϚϠΨθϑ¿ÐžЀ¾)

# Run progress: 50.00% complete, ETA 00:20:02
# Fork: 1 of 3
# Warmup Iteration   1: 3.336 ns/op
# Warmup Iteration   2: 3.334 ns/op
# Warmup Iteration   3: 3.200 ns/op
# Warmup Iteration   4: 3.195 ns/op
# Warmup Iteration   5: 3.189 ns/op
Iteration   1: 3.191 ns/op
Iteration   2: 3.006 ns/op
Iteration   3: 3.020 ns/op
Iteration   4: 3.020 ns/op
Iteration   5: 3.022 ns/op

# Run progress: 54.17% complete, ETA 00:18:22
# Fork: 2 of 3
# Warmup Iteration   1: 3.550 ns/op
# Warmup Iteration   2: 3.215 ns/op
# Warmup Iteration   3: 3.194 ns/op
# Warmup Iteration   4: 3.190 ns/op
# Warmup Iteration   5: 3.183 ns/op
Iteration   1: 3.063 ns/op
Iteration   2: 3.004 ns/op
Iteration   3: 3.009 ns/op
Iteration   4: 3.238 ns/op
Iteration   5: 3.198 ns/op

# Run progress: 58.33% complete, ETA 00:16:42
# Fork: 3 of 3
# Warmup Iteration   1: 3.598 ns/op
# Warmup Iteration   2: 3.037 ns/op
# Warmup Iteration   3: 3.195 ns/op
# Warmup Iteration   4: 3.188 ns/op
# Warmup Iteration   5: 2.998 ns/op
Iteration   1: 3.015 ns/op
Iteration   2: 3.052 ns/op
Iteration   3: 3.240 ns/op
Iteration   4: 3.216 ns/op
Iteration   5: 3.206 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.CompactStringsBenchmark.utf16_charAt":
  3.100 ±(99.9%) 0.106 ns/op [Average]
  (min, avg, max) = (3.004, 3.100, 3.240), stdev = 0.099
  CI (99.9%): [2.994, 3.206] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.CompactStringsBenchmark.utf16_multiple_concat
# Parameters: (idx = 17, latin_1 = 123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ, latin_1_identical = 123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ, utf_16 = 123456789ABCDEFGHIJKLMNOPQRSTUVWX¾ʬ, utf_16_identical = 123456789ABCDEFGHIJKLMNOPQRSTUVWX¾ʬ, utf_16_str1 = ÐžÐ¹,Ð²ÑÑ‘Ð, utf_16_str2 = ϑ¿Ñ€Ð¾Ð¿φÐ°Ϫ, utf_16_str3 = Ðϛζ»Ð¾,ÑˆÐµÑ„, utf_16_str4 = ΦЀ¾ʬϪÐ»ÐΛϼϨЁ, utf_16_str5 = ΏΔΘΞΨθςώϚϠϨϱ, utf_16_str6 = ϪÐϚϠΨθϑ¿ÐžЀ¾)

# Run progress: 62.50% complete, ETA 00:15:02
# Fork: 1 of 3
# Warmup Iteration   1: 70.215 ns/op
# Warmup Iteration   2: 61.531 ns/op
# Warmup Iteration   3: 59.677 ns/op
# Warmup Iteration   4: 59.636 ns/op
# Warmup Iteration   5: 58.671 ns/op
Iteration   1: 58.835 ns/op
Iteration   2: 60.618 ns/op
Iteration   3: 59.505 ns/op
Iteration   4: 59.965 ns/op
Iteration   5: 60.251 ns/op

# Run progress: 66.67% complete, ETA 00:13:21
# Fork: 2 of 3
# Warmup Iteration   1: 73.465 ns/op
# Warmup Iteration   2: 63.772 ns/op
# Warmup Iteration   3: 61.251 ns/op
# Warmup Iteration   4: 60.792 ns/op
# Warmup Iteration   5: 62.055 ns/op
Iteration   1: 59.801 ns/op
Iteration   2: 61.224 ns/op
Iteration   3: 60.668 ns/op
Iteration   4: 60.553 ns/op
Iteration   5: 61.975 ns/op

# Run progress: 70.83% complete, ETA 00:11:41
# Fork: 3 of 3
# Warmup Iteration   1: 72.163 ns/op
# Warmup Iteration   2: 64.239 ns/op
# Warmup Iteration   3: 61.219 ns/op
# Warmup Iteration   4: 61.660 ns/op
# Warmup Iteration   5: 61.806 ns/op
Iteration   1: 60.628 ns/op
Iteration   2: 61.798 ns/op
Iteration   3: 61.398 ns/op
Iteration   4: 62.068 ns/op
Iteration   5: 60.402 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.CompactStringsBenchmark.utf16_multiple_concat":
  60.646 ±(99.9%) 0.990 ns/op [Average]
  (min, avg, max) = (58.835, 60.646, 62.068), stdev = 0.926
  CI (99.9%): [59.656, 61.636] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.CompactStringsBenchmark.utf16_toCharArray
# Parameters: (idx = 17, latin_1 = 123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ, latin_1_identical = 123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ, utf_16 = 123456789ABCDEFGHIJKLMNOPQRSTUVWX¾ʬ, utf_16_identical = 123456789ABCDEFGHIJKLMNOPQRSTUVWX¾ʬ, utf_16_str1 = ÐžÐ¹,Ð²ÑÑ‘Ð, utf_16_str2 = ϑ¿Ñ€Ð¾Ð¿φÐ°Ϫ, utf_16_str3 = Ðϛζ»Ð¾,ÑˆÐµÑ„, utf_16_str4 = ΦЀ¾ʬϪÐ»ÐΛϼϨЁ, utf_16_str5 = ΏΔΘΞΨθςώϚϠϨϱ, utf_16_str6 = ϪÐϚϠΨθϑ¿ÐžЀ¾)

# Run progress: 75.00% complete, ETA 00:10:01
# Fork: 1 of 3
# Warmup Iteration   1: 13.744 ns/op
# Warmup Iteration   2: 12.502 ns/op
# Warmup Iteration   3: 12.594 ns/op
# Warmup Iteration   4: 12.582 ns/op
# Warmup Iteration   5: 12.543 ns/op
Iteration   1: 12.492 ns/op
Iteration   2: 12.607 ns/op
Iteration   3: 12.591 ns/op
Iteration   4: 12.633 ns/op
Iteration   5: 12.587 ns/op

# Run progress: 79.17% complete, ETA 00:08:21
# Fork: 2 of 3
# Warmup Iteration   1: 13.876 ns/op
# Warmup Iteration   2: 12.685 ns/op
# Warmup Iteration   3: 12.620 ns/op
# Warmup Iteration   4: 12.763 ns/op
# Warmup Iteration   5: 12.615 ns/op
Iteration   1: 12.599 ns/op
Iteration   2: 12.751 ns/op
Iteration   3: 12.630 ns/op
Iteration   4: 12.662 ns/op
Iteration   5: 12.657 ns/op

# Run progress: 83.33% complete, ETA 00:06:40
# Fork: 3 of 3
# Warmup Iteration   1: 14.053 ns/op
# Warmup Iteration   2: 12.683 ns/op
# Warmup Iteration   3: 12.569 ns/op
# Warmup Iteration   4: 12.783 ns/op
# Warmup Iteration   5: 12.473 ns/op
Iteration   1: 12.676 ns/op
Iteration   2: 12.685 ns/op
Iteration   3: 12.531 ns/op
Iteration   4: 12.434 ns/op
Iteration   5: 12.654 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.CompactStringsBenchmark.utf16_toCharArray":
  12.613 ±(99.9%) 0.085 ns/op [Average]
  (min, avg, max) = (12.434, 12.613, 12.751), stdev = 0.080
  CI (99.9%): [12.527, 12.698] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.CompactStringsBenchmark.utf16_toUtf16_equals
# Parameters: (idx = 17, latin_1 = 123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ, latin_1_identical = 123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ, utf_16 = 123456789ABCDEFGHIJKLMNOPQRSTUVWX¾ʬ, utf_16_identical = 123456789ABCDEFGHIJKLMNOPQRSTUVWX¾ʬ, utf_16_str1 = ÐžÐ¹,Ð²ÑÑ‘Ð, utf_16_str2 = ϑ¿Ñ€Ð¾Ð¿φÐ°Ϫ, utf_16_str3 = Ðϛζ»Ð¾,ÑˆÐµÑ„, utf_16_str4 = ΦЀ¾ʬϪÐ»ÐΛϼϨЁ, utf_16_str5 = ΏΔΘΞΨθςώϚϠϨϱ, utf_16_str6 = ϪÐϚϠΨθϑ¿ÐžЀ¾)

# Run progress: 87.50% complete, ETA 00:05:00
# Fork: 1 of 3
# Warmup Iteration   1: 8.939 ns/op
# Warmup Iteration   2: 7.795 ns/op
# Warmup Iteration   3: 7.657 ns/op
# Warmup Iteration   4: 7.895 ns/op
# Warmup Iteration   5: 7.686 ns/op
Iteration   1: 7.653 ns/op
Iteration   2: 7.677 ns/op
Iteration   3: 7.659 ns/op
Iteration   4: 7.662 ns/op
Iteration   5: 7.669 ns/op

# Run progress: 91.67% complete, ETA 00:03:20
# Fork: 2 of 3
# Warmup Iteration   1: 8.698 ns/op
# Warmup Iteration   2: 8.152 ns/op
# Warmup Iteration   3: 7.826 ns/op
# Warmup Iteration   4: 8.076 ns/op
# Warmup Iteration   5: 8.025 ns/op
Iteration   1: 8.011 ns/op
Iteration   2: 8.002 ns/op
Iteration   3: 8.038 ns/op
Iteration   4: 8.022 ns/op
Iteration   5: 7.993 ns/op

# Run progress: 95.83% complete, ETA 00:01:40
# Fork: 3 of 3
# Warmup Iteration   1: 8.580 ns/op
# Warmup Iteration   2: 7.594 ns/op
# Warmup Iteration   3: 7.501 ns/op
# Warmup Iteration   4: 7.731 ns/op
# Warmup Iteration   5: 7.717 ns/op
Iteration   1: 7.719 ns/op
Iteration   2: 7.698 ns/op
Iteration   3: 7.694 ns/op
Iteration   4: 7.693 ns/op
Iteration   5: 7.691 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.CompactStringsBenchmark.utf16_toUtf16_equals":
  7.792 ±(99.9%) 0.174 ns/op [Average]
  (min, avg, max) = (7.653, 7.792, 8.038), stdev = 0.163
  CI (99.9%): [7.618, 7.966] (assumes normal distribution)


# Run complete. Total time: 00:40:05

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                       (idx)                            (latin_1)                  (latin_1_identical)                             (utf_16)                   (utf_16_identical)  (utf_16_str1)  (utf_16_str2)  (utf_16_str3)  (utf_16_str4)  (utf_16_str5)  (utf_16_str6)  Mode  Cnt   Score   Error  Units
CompactStringsBenchmark.latin1_charAt              17  123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ  123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ  123456789ABCDEFGHIJKLMNOPQRSTUVWX¾ʬ  123456789ABCDEFGHIJKLMNOPQRSTUVWX¾ʬ   ÐžÐ¹,Ð²ÑÑ‘Ð   ϑ¿Ñ€Ð¾Ð¿φÐ°Ϫ  Ðϛζ»Ð¾,ÑˆÐµÑ„   ΦЀ¾ʬϪÐ»ÐΛϼϨЁ   ΏΔΘΞΨθςώϚϠϨϱ   ϪÐϚϠΨθϑ¿ÐžЀ¾  avgt   15   3.290 ± 0.061  ns/op
CompactStringsBenchmark.latin1_toCharArray         17  123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ  123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ  123456789ABCDEFGHIJKLMNOPQRSTUVWX¾ʬ  123456789ABCDEFGHIJKLMNOPQRSTUVWX¾ʬ   ÐžÐ¹,Ð²ÑÑ‘Ð   ϑ¿Ñ€Ð¾Ð¿φÐ°Ϫ  Ðϛζ»Ð¾,ÑˆÐµÑ„   ΦЀ¾ʬϪÐ»ÐΛϼϨЁ   ΏΔΘΞΨθςώϚϠϨϱ   ϪÐϚϠΨθϑ¿ÐžЀ¾  avgt   15  11.431 ± 0.117  ns/op
CompactStringsBenchmark.latin1_toLatin1_equals     17  123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ  123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ  123456789ABCDEFGHIJKLMNOPQRSTUVWX¾ʬ  123456789ABCDEFGHIJKLMNOPQRSTUVWX¾ʬ   ÐžÐ¹,Ð²ÑÑ‘Ð   ϑ¿Ñ€Ð¾Ð¿φÐ°Ϫ  Ðϛζ»Ð¾,ÑˆÐµÑ„   ΦЀ¾ʬϪÐ»ÐΛϼϨЁ   ΏΔΘΞΨθςώϚϠϨϱ   ϪÐϚϠΨθϑ¿ÐžЀ¾  avgt   15   7.506 ± 0.226  ns/op
CompactStringsBenchmark.latin1_toUtf16_equals      17  123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ  123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ  123456789ABCDEFGHIJKLMNOPQRSTUVWX¾ʬ  123456789ABCDEFGHIJKLMNOPQRSTUVWX¾ʬ   ÐžÐ¹,Ð²ÑÑ‘Ð   ϑ¿Ñ€Ð¾Ð¿φÐ°Ϫ  Ðϛζ»Ð¾,ÑˆÐµÑ„   ΦЀ¾ʬϪÐ»ÐΛϼϨЁ   ΏΔΘΞΨθςώϚϠϨϱ   ϪÐϚϠΨθϑ¿ÐžЀ¾  avgt   15   4.401 ± 0.102  ns/op
CompactStringsBenchmark.utf16_charAt               17  123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ  123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ  123456789ABCDEFGHIJKLMNOPQRSTUVWX¾ʬ  123456789ABCDEFGHIJKLMNOPQRSTUVWX¾ʬ   ÐžÐ¹,Ð²ÑÑ‘Ð   ϑ¿Ñ€Ð¾Ð¿φÐ°Ϫ  Ðϛζ»Ð¾,ÑˆÐµÑ„   ΦЀ¾ʬϪÐ»ÐΛϼϨЁ   ΏΔΘΞΨθςώϚϠϨϱ   ϪÐϚϠΨθϑ¿ÐžЀ¾  avgt   15   3.100 ± 0.106  ns/op
CompactStringsBenchmark.utf16_multiple_concat      17  123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ  123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ  123456789ABCDEFGHIJKLMNOPQRSTUVWX¾ʬ  123456789ABCDEFGHIJKLMNOPQRSTUVWX¾ʬ   ÐžÐ¹,Ð²ÑÑ‘Ð   ϑ¿Ñ€Ð¾Ð¿φÐ°Ϫ  Ðϛζ»Ð¾,ÑˆÐµÑ„   ΦЀ¾ʬϪÐ»ÐΛϼϨЁ   ΏΔΘΞΨθςώϚϠϨϱ   ϪÐϚϠΨθϑ¿ÐžЀ¾  avgt   15  60.646 ± 0.990  ns/op
CompactStringsBenchmark.utf16_toCharArray          17  123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ  123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ  123456789ABCDEFGHIJKLMNOPQRSTUVWX¾ʬ  123456789ABCDEFGHIJKLMNOPQRSTUVWX¾ʬ   ÐžÐ¹,Ð²ÑÑ‘Ð   ϑ¿Ñ€Ð¾Ð¿φÐ°Ϫ  Ðϛζ»Ð¾,ÑˆÐµÑ„   ΦЀ¾ʬϪÐ»ÐΛϼϨЁ   ΏΔΘΞΨθςώϚϠϨϱ   ϪÐϚϠΨθϑ¿ÐžЀ¾  avgt   15  12.613 ± 0.085  ns/op
CompactStringsBenchmark.utf16_toUtf16_equals       17  123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ  123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ  123456789ABCDEFGHIJKLMNOPQRSTUVWX¾ʬ  123456789ABCDEFGHIJKLMNOPQRSTUVWX¾ʬ   ÐžÐ¹,Ð²ÑÑ‘Ð   ϑ¿Ñ€Ð¾Ð¿φÐ°Ϫ  Ðϛζ»Ð¾,ÑˆÐµÑ„   ΦЀ¾ʬϪÐ»ÐΛϼϨЁ   ΏΔΘΞΨθςώϚϠϨϱ   ϪÐϚϠΨθϑ¿ÐžЀ¾  avgt   15   7.792 ± 0.174  ns/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_graal_jit/CompactStringsBenchmark.json
Running java -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler -jar benchmarks/target/benchmarks.jar .*StringConcatenationBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_graal_jit/StringConcatenationBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -Djava.lang.invoke.stringConcat=BC_SB -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StringConcatenationBenchmark.concat_bc_sb
# Parameters: (size = 16)

# Run progress: 0.00% complete, ETA 01:00:00
# Fork: 1 of 3
# Warmup Iteration   1: 140.339 ns/op
# Warmup Iteration   2: 115.320 ns/op
# Warmup Iteration   3: 115.137 ns/op
# Warmup Iteration   4: 114.093 ns/op
# Warmup Iteration   5: 116.713 ns/op
Iteration   1: 115.348 ns/op
Iteration   2: 116.386 ns/op
Iteration   3: 115.335 ns/op
Iteration   4: 114.628 ns/op
Iteration   5: 117.443 ns/op

# Run progress: 2.78% complete, ETA 00:58:30
# Fork: 2 of 3
# Warmup Iteration   1: 130.251 ns/op
# Warmup Iteration   2: 117.911 ns/op
# Warmup Iteration   3: 114.424 ns/op
# Warmup Iteration   4: 115.690 ns/op
# Warmup Iteration   5: 112.260 ns/op
Iteration   1: 116.723 ns/op
Iteration   2: 113.863 ns/op
Iteration   3: 113.726 ns/op
Iteration   4: 113.691 ns/op
Iteration   5: 113.645 ns/op

# Run progress: 5.56% complete, ETA 00:56:49
# Fork: 3 of 3
# Warmup Iteration   1: 131.218 ns/op
# Warmup Iteration   2: 113.564 ns/op
# Warmup Iteration   3: 111.332 ns/op
# Warmup Iteration   4: 112.440 ns/op
# Warmup Iteration   5: 111.440 ns/op
Iteration   1: 110.985 ns/op
Iteration   2: 113.026 ns/op
Iteration   3: 112.212 ns/op
Iteration   4: 110.219 ns/op
Iteration   5: 111.705 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StringConcatenationBenchmark.concat_bc_sb":
  113.929 ±(99.9%) 2.250 ns/op [Average]
  (min, avg, max) = (110.219, 113.929, 117.443), stdev = 2.104
  CI (99.9%): [111.680, 116.179] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -Djava.lang.invoke.stringConcat=BC_SB -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StringConcatenationBenchmark.concat_bc_sb
# Parameters: (size = 128)

# Run progress: 8.33% complete, ETA 00:55:08
# Fork: 1 of 3
# Warmup Iteration   1: 166.284 ns/op
# Warmup Iteration   2: 142.950 ns/op
# Warmup Iteration   3: 144.906 ns/op
# Warmup Iteration   4: 141.578 ns/op
# Warmup Iteration   5: 142.808 ns/op
Iteration   1: 141.046 ns/op
Iteration   2: 145.047 ns/op
Iteration   3: 143.747 ns/op
Iteration   4: 143.553 ns/op
Iteration   5: 144.357 ns/op

# Run progress: 11.11% complete, ETA 00:53:28
# Fork: 2 of 3
# Warmup Iteration   1: 165.237 ns/op
# Warmup Iteration   2: 143.137 ns/op
# Warmup Iteration   3: 147.703 ns/op
# Warmup Iteration   4: 146.026 ns/op
# Warmup Iteration   5: 145.179 ns/op
Iteration   1: 147.458 ns/op
Iteration   2: 144.875 ns/op
Iteration   3: 146.522 ns/op
Iteration   4: 147.967 ns/op
Iteration   5: 145.579 ns/op

# Run progress: 13.89% complete, ETA 00:51:47
# Fork: 3 of 3
# Warmup Iteration   1: 161.186 ns/op
# Warmup Iteration   2: 146.428 ns/op
# Warmup Iteration   3: 142.525 ns/op
# Warmup Iteration   4: 143.890 ns/op
# Warmup Iteration   5: 143.235 ns/op
Iteration   1: 142.530 ns/op
Iteration   2: 143.896 ns/op
Iteration   3: 142.189 ns/op
Iteration   4: 143.607 ns/op
Iteration   5: 144.356 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StringConcatenationBenchmark.concat_bc_sb":
  144.449 ±(99.9%) 2.025 ns/op [Average]
  (min, avg, max) = (141.046, 144.449, 147.967), stdev = 1.894
  CI (99.9%): [142.424, 146.474] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -Djava.lang.invoke.stringConcat=BC_SB_SIZED -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StringConcatenationBenchmark.concat_bc_sb_sized
# Parameters: (size = 16)

# Run progress: 16.67% complete, ETA 00:50:07
# Fork: 1 of 3
# Warmup Iteration   1: 109.200 ns/op
# Warmup Iteration   2: 95.044 ns/op
# Warmup Iteration   3: 94.271 ns/op
# Warmup Iteration   4: 94.021 ns/op
# Warmup Iteration   5: 94.782 ns/op
Iteration   1: 93.912 ns/op
Iteration   2: 95.260 ns/op
Iteration   3: 95.224 ns/op
Iteration   4: 94.616 ns/op
Iteration   5: 94.508 ns/op

# Run progress: 19.44% complete, ETA 00:48:27
# Fork: 2 of 3
# Warmup Iteration   1: 106.939 ns/op
# Warmup Iteration   2: 95.994 ns/op
# Warmup Iteration   3: 93.945 ns/op
# Warmup Iteration   4: 91.605 ns/op
# Warmup Iteration   5: 95.103 ns/op
Iteration   1: 93.227 ns/op
Iteration   2: 95.241 ns/op
Iteration   3: 92.985 ns/op
Iteration   4: 92.791 ns/op
Iteration   5: 94.294 ns/op

# Run progress: 22.22% complete, ETA 00:46:47
# Fork: 3 of 3
# Warmup Iteration   1: 107.224 ns/op
# Warmup Iteration   2: 93.059 ns/op
# Warmup Iteration   3: 95.487 ns/op
# Warmup Iteration   4: 93.341 ns/op
# Warmup Iteration   5: 95.498 ns/op
Iteration   1: 94.623 ns/op
Iteration   2: 94.826 ns/op
Iteration   3: 91.886 ns/op
Iteration   4: 95.064 ns/op
Iteration   5: 93.521 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StringConcatenationBenchmark.concat_bc_sb_sized":
  94.132 ±(99.9%) 1.110 ns/op [Average]
  (min, avg, max) = (91.886, 94.132, 95.260), stdev = 1.038
  CI (99.9%): [93.022, 95.242] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -Djava.lang.invoke.stringConcat=BC_SB_SIZED -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StringConcatenationBenchmark.concat_bc_sb_sized
# Parameters: (size = 128)

# Run progress: 25.00% complete, ETA 00:45:06
# Fork: 1 of 3
# Warmup Iteration   1: 130.758 ns/op
# Warmup Iteration   2: 110.853 ns/op
# Warmup Iteration   3: 110.092 ns/op
# Warmup Iteration   4: 111.541 ns/op
# Warmup Iteration   5: 110.797 ns/op
Iteration   1: 110.327 ns/op
Iteration   2: 111.016 ns/op
Iteration   3: 109.494 ns/op
Iteration   4: 110.266 ns/op
Iteration   5: 110.300 ns/op

# Run progress: 27.78% complete, ETA 00:43:26
# Fork: 2 of 3
# Warmup Iteration   1: 127.585 ns/op
# Warmup Iteration   2: 112.488 ns/op
# Warmup Iteration   3: 114.344 ns/op
# Warmup Iteration   4: 114.650 ns/op
# Warmup Iteration   5: 112.828 ns/op
Iteration   1: 112.030 ns/op
Iteration   2: 112.586 ns/op
Iteration   3: 110.848 ns/op
Iteration   4: 113.141 ns/op
Iteration   5: 112.435 ns/op

# Run progress: 30.56% complete, ETA 00:41:46
# Fork: 3 of 3
# Warmup Iteration   1: 129.135 ns/op
# Warmup Iteration   2: 107.018 ns/op
# Warmup Iteration   3: 106.888 ns/op
# Warmup Iteration   4: 108.270 ns/op
# Warmup Iteration   5: 108.429 ns/op
Iteration   1: 107.219 ns/op
Iteration   2: 107.236 ns/op
Iteration   3: 106.977 ns/op
Iteration   4: 108.283 ns/op
Iteration   5: 107.697 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StringConcatenationBenchmark.concat_bc_sb_sized":
  109.990 ±(99.9%) 2.243 ns/op [Average]
  (min, avg, max) = (106.977, 109.990, 113.141), stdev = 2.098
  CI (99.9%): [107.747, 112.233] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -Djava.lang.invoke.stringConcat=BC_SB_SIZED_EXACT -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StringConcatenationBenchmark.concat_bc_sb_sized_exact
# Parameters: (size = 16)

# Run progress: 33.33% complete, ETA 00:40:06
# Fork: 1 of 3
# Warmup Iteration   1: 154.386 ns/op
# Warmup Iteration   2: 144.738 ns/op
# Warmup Iteration   3: 142.017 ns/op
# Warmup Iteration   4: 139.137 ns/op
# Warmup Iteration   5: 137.909 ns/op
Iteration   1: 140.381 ns/op
Iteration   2: 137.979 ns/op
Iteration   3: 139.568 ns/op
Iteration   4: 136.446 ns/op
Iteration   5: 136.566 ns/op

# Run progress: 36.11% complete, ETA 00:38:25
# Fork: 2 of 3
# Warmup Iteration   1: 157.053 ns/op
# Warmup Iteration   2: 137.781 ns/op
# Warmup Iteration   3: 136.904 ns/op
# Warmup Iteration   4: 138.090 ns/op
# Warmup Iteration   5: 136.755 ns/op
Iteration   1: 138.233 ns/op
Iteration   2: 135.795 ns/op
Iteration   3: 139.005 ns/op
Iteration   4: 138.169 ns/op
Iteration   5: 136.302 ns/op

# Run progress: 38.89% complete, ETA 00:36:45
# Fork: 3 of 3
# Warmup Iteration   1: 157.491 ns/op
# Warmup Iteration   2: 141.206 ns/op
# Warmup Iteration   3: 137.835 ns/op
# Warmup Iteration   4: 138.258 ns/op
# Warmup Iteration   5: 137.754 ns/op
Iteration   1: 137.112 ns/op
Iteration   2: 136.521 ns/op
Iteration   3: 138.555 ns/op
Iteration   4: 136.674 ns/op
Iteration   5: 137.723 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StringConcatenationBenchmark.concat_bc_sb_sized_exact":
  137.669 ±(99.9%) 1.426 ns/op [Average]
  (min, avg, max) = (135.795, 137.669, 140.381), stdev = 1.334
  CI (99.9%): [136.243, 139.095] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -Djava.lang.invoke.stringConcat=BC_SB_SIZED_EXACT -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StringConcatenationBenchmark.concat_bc_sb_sized_exact
# Parameters: (size = 128)

# Run progress: 41.67% complete, ETA 00:35:05
# Fork: 1 of 3
# Warmup Iteration   1: 175.607 ns/op
# Warmup Iteration   2: 156.740 ns/op
# Warmup Iteration   3: 152.408 ns/op
# Warmup Iteration   4: 151.759 ns/op
# Warmup Iteration   5: 150.480 ns/op
Iteration   1: 152.527 ns/op
Iteration   2: 152.656 ns/op
Iteration   3: 151.930 ns/op
Iteration   4: 151.597 ns/op
Iteration   5: 150.828 ns/op

# Run progress: 44.44% complete, ETA 00:33:24
# Fork: 2 of 3
# Warmup Iteration   1: 179.615 ns/op
# Warmup Iteration   2: 153.668 ns/op
# Warmup Iteration   3: 156.117 ns/op
# Warmup Iteration   4: 155.012 ns/op
# Warmup Iteration   5: 153.941 ns/op
Iteration   1: 155.236 ns/op
Iteration   2: 155.721 ns/op
Iteration   3: 155.936 ns/op
Iteration   4: 154.776 ns/op
Iteration   5: 154.330 ns/op

# Run progress: 47.22% complete, ETA 00:31:44
# Fork: 3 of 3
# Warmup Iteration   1: 177.658 ns/op
# Warmup Iteration   2: 162.058 ns/op
# Warmup Iteration   3: 153.441 ns/op
# Warmup Iteration   4: 155.076 ns/op
# Warmup Iteration   5: 153.894 ns/op
Iteration   1: 154.777 ns/op
Iteration   2: 153.907 ns/op
Iteration   3: 151.906 ns/op
Iteration   4: 153.169 ns/op
Iteration   5: 154.802 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StringConcatenationBenchmark.concat_bc_sb_sized_exact":
  153.607 ±(99.9%) 1.739 ns/op [Average]
  (min, avg, max) = (150.828, 153.607, 155.936), stdev = 1.627
  CI (99.9%): [151.867, 155.346] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StringConcatenationBenchmark.concat_default
# Parameters: (size = 16)

# Run progress: 50.00% complete, ETA 00:30:04
# Fork: 1 of 3
# Warmup Iteration   1: 94.497 ns/op
# Warmup Iteration   2: 80.840 ns/op
# Warmup Iteration   3: 78.585 ns/op
# Warmup Iteration   4: 78.349 ns/op
# Warmup Iteration   5: 78.223 ns/op
Iteration   1: 80.110 ns/op
Iteration   2: 80.309 ns/op
Iteration   3: 78.961 ns/op
Iteration   4: 76.353 ns/op
Iteration   5: 76.368 ns/op

# Run progress: 52.78% complete, ETA 00:28:24
# Fork: 2 of 3
# Warmup Iteration   1: 92.520 ns/op
# Warmup Iteration   2: 87.918 ns/op
# Warmup Iteration   3: 81.756 ns/op
# Warmup Iteration   4: 83.153 ns/op
# Warmup Iteration   5: 81.313 ns/op
Iteration   1: 82.063 ns/op
Iteration   2: 82.997 ns/op
Iteration   3: 81.702 ns/op
Iteration   4: 81.779 ns/op
Iteration   5: 81.162 ns/op

# Run progress: 55.56% complete, ETA 00:26:43
# Fork: 3 of 3
# Warmup Iteration   1: 101.206 ns/op
# Warmup Iteration   2: 84.658 ns/op
# Warmup Iteration   3: 81.228 ns/op
# Warmup Iteration   4: 80.814 ns/op
# Warmup Iteration   5: 81.317 ns/op
Iteration   1: 79.283 ns/op
Iteration   2: 79.117 ns/op
Iteration   3: 78.760 ns/op
Iteration   4: 79.649 ns/op
Iteration   5: 79.591 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StringConcatenationBenchmark.concat_default":
  79.880 ±(99.9%) 2.045 ns/op [Average]
  (min, avg, max) = (76.353, 79.880, 82.997), stdev = 1.913
  CI (99.9%): [77.835, 81.925] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StringConcatenationBenchmark.concat_default
# Parameters: (size = 128)

# Run progress: 58.33% complete, ETA 00:25:03
# Fork: 1 of 3
# Warmup Iteration   1: 99.787 ns/op
# Warmup Iteration   2: 86.411 ns/op
# Warmup Iteration   3: 89.167 ns/op
# Warmup Iteration   4: 90.040 ns/op
# Warmup Iteration   5: 88.936 ns/op
Iteration   1: 88.397 ns/op
Iteration   2: 89.387 ns/op
Iteration   3: 87.791 ns/op
Iteration   4: 89.359 ns/op
Iteration   5: 89.776 ns/op

# Run progress: 61.11% complete, ETA 00:23:23
# Fork: 2 of 3
# Warmup Iteration   1: 96.522 ns/op
# Warmup Iteration   2: 89.173 ns/op
# Warmup Iteration   3: 90.020 ns/op
# Warmup Iteration   4: 89.006 ns/op
# Warmup Iteration   5: 89.417 ns/op
Iteration   1: 89.369 ns/op
Iteration   2: 89.046 ns/op
Iteration   3: 89.681 ns/op
Iteration   4: 89.965 ns/op
Iteration   5: 90.997 ns/op

# Run progress: 63.89% complete, ETA 00:21:43
# Fork: 3 of 3
# Warmup Iteration   1: 110.661 ns/op
# Warmup Iteration   2: 163.487 ns/op
# Warmup Iteration   3: 158.829 ns/op
# Warmup Iteration   4: 158.458 ns/op
# Warmup Iteration   5: 159.988 ns/op
Iteration   1: 157.573 ns/op
Iteration   2: 156.260 ns/op
Iteration   3: 159.945 ns/op
Iteration   4: 155.671 ns/op
Iteration   5: 160.417 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StringConcatenationBenchmark.concat_default":
  112.242 ±(99.9%) 35.812 ns/op [Average]
  (min, avg, max) = (87.791, 112.242, 160.417), stdev = 33.498
  CI (99.9%): [76.430, 148.054] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -Djava.lang.invoke.stringConcat=MH_SB_SIZED -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StringConcatenationBenchmark.concat_mh_sb_sized
# Parameters: (size = 16)

# Run progress: 66.67% complete, ETA 00:20:03
# Fork: 1 of 3
# Warmup Iteration   1: 122.186 ns/op
# Warmup Iteration   2: 108.960 ns/op
# Warmup Iteration   3: 107.659 ns/op
# Warmup Iteration   4: 109.705 ns/op
# Warmup Iteration   5: 108.198 ns/op
Iteration   1: 107.471 ns/op
Iteration   2: 108.082 ns/op
Iteration   3: 106.861 ns/op
Iteration   4: 108.772 ns/op
Iteration   5: 107.327 ns/op

# Run progress: 69.44% complete, ETA 00:18:22
# Fork: 2 of 3
# Warmup Iteration   1: 122.740 ns/op
# Warmup Iteration   2: 111.238 ns/op
# Warmup Iteration   3: 109.926 ns/op
# Warmup Iteration   4: 108.977 ns/op
# Warmup Iteration   5: 108.361 ns/op
Iteration   1: 109.440 ns/op
Iteration   2: 106.960 ns/op
Iteration   3: 108.767 ns/op
Iteration   4: 108.704 ns/op
Iteration   5: 108.909 ns/op

# Run progress: 72.22% complete, ETA 00:16:42
# Fork: 3 of 3
# Warmup Iteration   1: 124.922 ns/op
# Warmup Iteration   2: 111.363 ns/op
# Warmup Iteration   3: 107.525 ns/op
# Warmup Iteration   4: 107.321 ns/op
# Warmup Iteration   5: 108.692 ns/op
Iteration   1: 108.845 ns/op
Iteration   2: 108.180 ns/op
Iteration   3: 108.588 ns/op
Iteration   4: 106.687 ns/op
Iteration   5: 107.594 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StringConcatenationBenchmark.concat_mh_sb_sized":
  108.079 ±(99.9%) 0.930 ns/op [Average]
  (min, avg, max) = (106.687, 108.079, 109.440), stdev = 0.870
  CI (99.9%): [107.149, 109.009] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -Djava.lang.invoke.stringConcat=MH_SB_SIZED -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StringConcatenationBenchmark.concat_mh_sb_sized
# Parameters: (size = 128)

# Run progress: 75.00% complete, ETA 00:15:02
# Fork: 1 of 3
# Warmup Iteration   1: 149.896 ns/op
# Warmup Iteration   2: 124.346 ns/op
# Warmup Iteration   3: 126.699 ns/op
# Warmup Iteration   4: 127.315 ns/op
# Warmup Iteration   5: 124.779 ns/op
Iteration   1: 126.762 ns/op
Iteration   2: 126.848 ns/op
Iteration   3: 125.859 ns/op
Iteration   4: 126.756 ns/op
Iteration   5: 124.662 ns/op

# Run progress: 77.78% complete, ETA 00:13:22
# Fork: 2 of 3
# Warmup Iteration   1: 138.190 ns/op
# Warmup Iteration   2: 120.858 ns/op
# Warmup Iteration   3: 125.967 ns/op
# Warmup Iteration   4: 123.385 ns/op
# Warmup Iteration   5: 126.114 ns/op
Iteration   1: 123.252 ns/op
Iteration   2: 126.496 ns/op
Iteration   3: 125.428 ns/op
Iteration   4: 124.789 ns/op
Iteration   5: 126.710 ns/op

# Run progress: 80.56% complete, ETA 00:11:41
# Fork: 3 of 3
# Warmup Iteration   1: 144.457 ns/op
# Warmup Iteration   2: 125.581 ns/op
# Warmup Iteration   3: 122.499 ns/op
# Warmup Iteration   4: 123.372 ns/op
# Warmup Iteration   5: 122.636 ns/op
Iteration   1: 121.340 ns/op
Iteration   2: 121.436 ns/op
Iteration   3: 122.195 ns/op
Iteration   4: 121.735 ns/op
Iteration   5: 122.981 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StringConcatenationBenchmark.concat_mh_sb_sized":
  124.483 ±(99.9%) 2.279 ns/op [Average]
  (min, avg, max) = (121.340, 124.483, 126.848), stdev = 2.131
  CI (99.9%): [122.205, 126.762] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -Djava.lang.invoke.stringConcat=MH_SB_SIZED_EXACT -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StringConcatenationBenchmark.concat_mh_sb_sized_exact
# Parameters: (size = 16)

# Run progress: 83.33% complete, ETA 00:10:01
# Fork: 1 of 3
# Warmup Iteration   1: 164.982 ns/op
# Warmup Iteration   2: 140.467 ns/op
# Warmup Iteration   3: 135.078 ns/op
# Warmup Iteration   4: 137.713 ns/op
# Warmup Iteration   5: 135.975 ns/op
Iteration   1: 134.072 ns/op
Iteration   2: 138.978 ns/op
Iteration   3: 136.138 ns/op
Iteration   4: 135.976 ns/op
Iteration   5: 135.705 ns/op

# Run progress: 86.11% complete, ETA 00:08:21
# Fork: 2 of 3
# Warmup Iteration   1: 159.063 ns/op
# Warmup Iteration   2: 136.732 ns/op
# Warmup Iteration   3: 133.510 ns/op
# Warmup Iteration   4: 130.942 ns/op
# Warmup Iteration   5: 130.470 ns/op
Iteration   1: 129.271 ns/op
Iteration   2: 131.498 ns/op
Iteration   3: 129.758 ns/op
Iteration   4: 133.964 ns/op
Iteration   5: 133.680 ns/op

# Run progress: 88.89% complete, ETA 00:06:41
# Fork: 3 of 3
# Warmup Iteration   1: 162.744 ns/op
# Warmup Iteration   2: 138.242 ns/op
# Warmup Iteration   3: 133.490 ns/op
# Warmup Iteration   4: 134.802 ns/op
# Warmup Iteration   5: 135.835 ns/op
Iteration   1: 132.696 ns/op
Iteration   2: 134.177 ns/op
Iteration   3: 137.687 ns/op
Iteration   4: 134.998 ns/op
Iteration   5: 137.677 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StringConcatenationBenchmark.concat_mh_sb_sized_exact":
  134.418 ±(99.9%) 2.998 ns/op [Average]
  (min, avg, max) = (129.271, 134.418, 138.978), stdev = 2.804
  CI (99.9%): [131.420, 137.416] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -Djava.lang.invoke.stringConcat=MH_SB_SIZED_EXACT -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StringConcatenationBenchmark.concat_mh_sb_sized_exact
# Parameters: (size = 128)

# Run progress: 91.67% complete, ETA 00:05:00
# Fork: 1 of 3
# Warmup Iteration   1: 166.789 ns/op
# Warmup Iteration   2: 150.488 ns/op
# Warmup Iteration   3: 147.809 ns/op
# Warmup Iteration   4: 145.000 ns/op
# Warmup Iteration   5: 148.374 ns/op
Iteration   1: 148.247 ns/op
Iteration   2: 150.730 ns/op
Iteration   3: 148.768 ns/op
Iteration   4: 146.945 ns/op
Iteration   5: 147.758 ns/op

# Run progress: 94.44% complete, ETA 00:03:20
# Fork: 2 of 3
# Warmup Iteration   1: 184.287 ns/op
# Warmup Iteration   2: 153.895 ns/op
# Warmup Iteration   3: 147.030 ns/op
# Warmup Iteration   4: 149.960 ns/op
# Warmup Iteration   5: 149.096 ns/op
Iteration   1: 145.956 ns/op
Iteration   2: 151.433 ns/op
Iteration   3: 145.558 ns/op
Iteration   4: 149.395 ns/op
Iteration   5: 148.230 ns/op

# Run progress: 97.22% complete, ETA 00:01:40
# Fork: 3 of 3
# Warmup Iteration   1: 177.146 ns/op
# Warmup Iteration   2: 152.734 ns/op
# Warmup Iteration   3: 149.392 ns/op
# Warmup Iteration   4: 149.413 ns/op
# Warmup Iteration   5: 148.075 ns/op
Iteration   1: 150.500 ns/op
Iteration   2: 149.150 ns/op
Iteration   3: 152.388 ns/op
Iteration   4: 148.032 ns/op
Iteration   5: 149.517 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StringConcatenationBenchmark.concat_mh_sb_sized_exact":
  148.840 ±(99.9%) 2.055 ns/op [Average]
  (min, avg, max) = (145.558, 148.840, 152.388), stdev = 1.922
  CI (99.9%): [146.785, 150.896] (assumes normal distribution)


# Run complete. Total time: 01:00:09

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                              (size)  Mode  Cnt    Score    Error  Units
StringConcatenationBenchmark.concat_bc_sb                  16  avgt   15  113.929 ±  2.250  ns/op
StringConcatenationBenchmark.concat_bc_sb                 128  avgt   15  144.449 ±  2.025  ns/op
StringConcatenationBenchmark.concat_bc_sb_sized            16  avgt   15   94.132 ±  1.110  ns/op
StringConcatenationBenchmark.concat_bc_sb_sized           128  avgt   15  109.990 ±  2.243  ns/op
StringConcatenationBenchmark.concat_bc_sb_sized_exact      16  avgt   15  137.669 ±  1.426  ns/op
StringConcatenationBenchmark.concat_bc_sb_sized_exact     128  avgt   15  153.607 ±  1.739  ns/op
StringConcatenationBenchmark.concat_default                16  avgt   15   79.880 ±  2.045  ns/op
StringConcatenationBenchmark.concat_default               128  avgt   15  112.242 ± 35.812  ns/op
StringConcatenationBenchmark.concat_mh_sb_sized            16  avgt   15  108.079 ±  0.930  ns/op
StringConcatenationBenchmark.concat_mh_sb_sized           128  avgt   15  124.483 ±  2.279  ns/op
StringConcatenationBenchmark.concat_mh_sb_sized_exact      16  avgt   15  134.418 ±  2.998  ns/op
StringConcatenationBenchmark.concat_mh_sb_sized_exact     128  avgt   15  148.840 ±  2.055  ns/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_graal_jit/StringConcatenationBenchmark.json
Running java -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler -jar benchmarks/target/benchmarks.jar .*StringHashCodeBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_graal_jit/StringHashCodeBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StringHashCodeBenchmark.cached

# Run progress: 0.00% complete, ETA 00:10:00
# Fork: 1 of 3
# Warmup Iteration   1: 2.952 ns/op
# Warmup Iteration   2: 2.791 ns/op
# Warmup Iteration   3: 2.698 ns/op
# Warmup Iteration   4: 2.691 ns/op
# Warmup Iteration   5: 2.683 ns/op
Iteration   1: 2.669 ns/op
Iteration   2: 2.772 ns/op
Iteration   3: 2.764 ns/op
Iteration   4: 2.757 ns/op
Iteration   5: 2.707 ns/op

# Run progress: 16.67% complete, ETA 00:08:21
# Fork: 2 of 3
# Warmup Iteration   1: 2.810 ns/op
# Warmup Iteration   2: 2.731 ns/op
# Warmup Iteration   3: 2.638 ns/op
# Warmup Iteration   4: 2.663 ns/op
# Warmup Iteration   5: 2.645 ns/op
Iteration   1: 2.634 ns/op
Iteration   2: 2.723 ns/op
Iteration   3: 2.747 ns/op
Iteration   4: 2.553 ns/op
Iteration   5: 2.560 ns/op

# Run progress: 33.33% complete, ETA 00:06:41
# Fork: 3 of 3
# Warmup Iteration   1: 2.954 ns/op
# Warmup Iteration   2: 2.846 ns/op
# Warmup Iteration   3: 2.762 ns/op
# Warmup Iteration   4: 2.636 ns/op
# Warmup Iteration   5: 2.654 ns/op
Iteration   1: 2.635 ns/op
Iteration   2: 2.744 ns/op
Iteration   3: 2.723 ns/op
Iteration   4: 2.628 ns/op
Iteration   5: 2.710 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StringHashCodeBenchmark.cached":
  2.688 ±(99.9%) 0.076 ns/op [Average]
  (min, avg, max) = (2.553, 2.688, 2.772), stdev = 0.072
  CI (99.9%): [2.612, 2.765] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StringHashCodeBenchmark.not_cached

# Run progress: 50.00% complete, ETA 00:05:00
# Fork: 1 of 3
# Warmup Iteration   1: 2.918 ns/op
# Warmup Iteration   2: 2.862 ns/op
# Warmup Iteration   3: 2.825 ns/op
# Warmup Iteration   4: 2.824 ns/op
# Warmup Iteration   5: 2.820 ns/op
Iteration   1: 2.821 ns/op
Iteration   2: 2.819 ns/op
Iteration   3: 2.821 ns/op
Iteration   4: 2.819 ns/op
Iteration   5: 2.822 ns/op

# Run progress: 66.67% complete, ETA 00:03:20
# Fork: 2 of 3
# Warmup Iteration   1: 2.957 ns/op
# Warmup Iteration   2: 3.094 ns/op
# Warmup Iteration   3: 2.966 ns/op
# Warmup Iteration   4: 2.945 ns/op
# Warmup Iteration   5: 2.927 ns/op
Iteration   1: 2.809 ns/op
Iteration   2: 2.824 ns/op
Iteration   3: 2.824 ns/op
Iteration   4: 2.826 ns/op
Iteration   5: 2.822 ns/op

# Run progress: 83.33% complete, ETA 00:01:40
# Fork: 3 of 3
# Warmup Iteration   1: 3.138 ns/op
# Warmup Iteration   2: 2.853 ns/op
# Warmup Iteration   3: 2.744 ns/op
# Warmup Iteration   4: 2.754 ns/op
# Warmup Iteration   5: 2.751 ns/op
Iteration   1: 2.747 ns/op
Iteration   2: 2.921 ns/op
Iteration   3: 2.741 ns/op
Iteration   4: 2.742 ns/op
Iteration   5: 2.832 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StringHashCodeBenchmark.not_cached":
  2.813 ±(99.9%) 0.047 ns/op [Average]
  (min, avg, max) = (2.741, 2.813, 2.921), stdev = 0.044
  CI (99.9%): [2.765, 2.860] (assumes normal distribution)


# Run complete. Total time: 00:10:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                           Mode  Cnt  Score   Error  Units
StringHashCodeBenchmark.cached      avgt   15  2.688 ± 0.076  ns/op
StringHashCodeBenchmark.not_cached  avgt   15  2.813 ± 0.047  ns/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_graal_jit/StringHashCodeBenchmark.json
Running java -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler -jar benchmarks/target/benchmarks.jar .*StringPatternMatcherBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_graal_jit/StringPatternMatcherBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StringPatternMatcherBenchmark.pattern_matcher
# Parameters: (iterations = 1000000, regexp = ^(([0-1][0-9])|(2[0-3]))([0-9]*)([0-5][0-9])$)

# Run progress: 0.00% complete, ETA 00:10:00
# Fork: 1 of 3
# Warmup Iteration   1: 99.754 ns/op
# Warmup Iteration   2: 84.975 ns/op
# Warmup Iteration   3: 83.629 ns/op
# Warmup Iteration   4: 83.382 ns/op
# Warmup Iteration   5: 84.834 ns/op
Iteration   1: 84.574 ns/op
Iteration   2: 84.079 ns/op
Iteration   3: 82.839 ns/op
Iteration   4: 85.139 ns/op
Iteration   5: 85.523 ns/op

# Run progress: 16.67% complete, ETA 00:08:23
# Fork: 2 of 3
# Warmup Iteration   1: 96.878 ns/op
# Warmup Iteration   2: 85.653 ns/op
# Warmup Iteration   3: 84.561 ns/op
# Warmup Iteration   4: 85.683 ns/op
# Warmup Iteration   5: 86.247 ns/op
Iteration   1: 83.361 ns/op
Iteration   2: 86.004 ns/op
Iteration   3: 85.340 ns/op
Iteration   4: 84.319 ns/op
Iteration   5: 84.600 ns/op

# Run progress: 33.33% complete, ETA 00:06:42
# Fork: 3 of 3
# Warmup Iteration   1: 97.692 ns/op
# Warmup Iteration   2: 86.219 ns/op
# Warmup Iteration   3: 84.925 ns/op
# Warmup Iteration   4: 85.147 ns/op
# Warmup Iteration   5: 83.400 ns/op
Iteration   1: 85.484 ns/op
Iteration   2: 85.176 ns/op
Iteration   3: 84.591 ns/op
Iteration   4: 84.510 ns/op
Iteration   5: 82.267 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StringPatternMatcherBenchmark.pattern_matcher":
  84.520 ±(99.9%) 1.111 ns/op [Average]
  (min, avg, max) = (82.267, 84.520, 86.004), stdev = 1.039
  CI (99.9%): [83.409, 85.632] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StringPatternMatcherBenchmark.string_matches
# Parameters: (iterations = 1000000, regexp = ^(([0-1][0-9])|(2[0-3]))([0-9]*)([0-5][0-9])$)

# Run progress: 50.00% complete, ETA 00:05:01
# Fork: 1 of 3
# Warmup Iteration   1: 730.524 ns/op
# Warmup Iteration   2: 605.725 ns/op
# Warmup Iteration   3: 606.351 ns/op
# Warmup Iteration   4: 600.360 ns/op
# Warmup Iteration   5: 605.413 ns/op
Iteration   1: 595.614 ns/op
Iteration   2: 591.609 ns/op
Iteration   3: 605.468 ns/op
Iteration   4: 602.568 ns/op
Iteration   5: 604.780 ns/op

# Run progress: 66.67% complete, ETA 00:03:22
# Fork: 2 of 3
# Warmup Iteration   1: 727.498 ns/op
# Warmup Iteration   2: 604.531 ns/op
# Warmup Iteration   3: 604.133 ns/op
# Warmup Iteration   4: 607.090 ns/op
# Warmup Iteration   5: 604.308 ns/op
Iteration   1: 605.263 ns/op
Iteration   2: 601.132 ns/op
Iteration   3: 603.042 ns/op
Iteration   4: 605.978 ns/op
Iteration   5: 603.456 ns/op

# Run progress: 83.33% complete, ETA 00:01:41
# Fork: 3 of 3
# Warmup Iteration   1: 700.233 ns/op
# Warmup Iteration   2: 602.169 ns/op
# Warmup Iteration   3: 594.816 ns/op
# Warmup Iteration   4: 589.818 ns/op
# Warmup Iteration   5: 597.526 ns/op
Iteration   1: 595.715 ns/op
Iteration   2: 589.655 ns/op
Iteration   3: 600.311 ns/op
Iteration   4: 598.649 ns/op
Iteration   5: 603.782 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StringPatternMatcherBenchmark.string_matches":
  600.468 ±(99.9%) 5.520 ns/op [Average]
  (min, avg, max) = (589.655, 600.468, 605.978), stdev = 5.163
  CI (99.9%): [594.948, 605.988] (assumes normal distribution)


# Run complete. Total time: 00:10:09

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      (iterations)                                       (regexp)  Mode  Cnt    Score   Error  Units
StringPatternMatcherBenchmark.pattern_matcher       1000000  ^(([0-1][0-9])|(2[0-3]))([0-9]*)([0-5][0-9])$  avgt   15   84.520 ± 1.111  ns/op
StringPatternMatcherBenchmark.string_matches        1000000  ^(([0-1][0-9])|(2[0-3]))([0-9]*)([0-5][0-9])$  avgt   15  600.468 ± 5.520  ns/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_graal_jit/StringPatternMatcherBenchmark.json
Running java -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler -jar benchmarks/target/benchmarks.jar .*StringPatternSplitBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_graal_jit/StringPatternSplitBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StringPatternSplitBenchmark.pattern_split
# Parameters: (regexp = _)

# Run progress: 0.00% complete, ETA 00:30:00
# Fork: 1 of 3
# Warmup Iteration   1: 1865.485 ns/op
# Warmup Iteration   2: 1536.580 ns/op
# Warmup Iteration   3: 1489.741 ns/op
# Warmup Iteration   4: 1548.025 ns/op
# Warmup Iteration   5: 1527.632 ns/op
Iteration   1: 1533.611 ns/op
Iteration   2: 1526.414 ns/op
Iteration   3: 1534.182 ns/op
Iteration   4: 1513.310 ns/op
Iteration   5: 1503.755 ns/op

# Run progress: 5.56% complete, ETA 00:28:25
# Fork: 2 of 3
# Warmup Iteration   1: 1713.672 ns/op
# Warmup Iteration   2: 1529.158 ns/op
# Warmup Iteration   3: 1507.550 ns/op
# Warmup Iteration   4: 1542.059 ns/op
# Warmup Iteration   5: 1528.345 ns/op
Iteration   1: 1479.629 ns/op
Iteration   2: 1485.756 ns/op
Iteration   3: 1510.486 ns/op
Iteration   4: 1492.944 ns/op
Iteration   5: 1519.920 ns/op

# Run progress: 11.11% complete, ETA 00:26:44
# Fork: 3 of 3
# Warmup Iteration   1: 1550.801 ns/op
# Warmup Iteration   2: 1374.663 ns/op
# Warmup Iteration   3: 1353.511 ns/op
# Warmup Iteration   4: 1370.467 ns/op
# Warmup Iteration   5: 1353.885 ns/op
Iteration   1: 1356.546 ns/op
Iteration   2: 1360.645 ns/op
Iteration   3: 1349.727 ns/op
Iteration   4: 1331.225 ns/op
Iteration   5: 1389.634 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StringPatternSplitBenchmark.pattern_split":
  1459.186 ±(99.9%) 82.126 ns/op [Average]
  (min, avg, max) = (1331.225, 1459.186, 1534.182), stdev = 76.821
  CI (99.9%): [1377.059, 1541.312] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StringPatternSplitBenchmark.pattern_split
# Parameters: (regexp = __)

# Run progress: 16.67% complete, ETA 00:25:04
# Fork: 1 of 3
# Warmup Iteration   1: 1899.792 ns/op
# Warmup Iteration   2: 1694.716 ns/op
# Warmup Iteration   3: 1700.614 ns/op
# Warmup Iteration   4: 1720.598 ns/op
# Warmup Iteration   5: 1697.487 ns/op
Iteration   1: 1702.758 ns/op
Iteration   2: 1709.628 ns/op
Iteration   3: 1689.413 ns/op
Iteration   4: 1745.139 ns/op
Iteration   5: 1703.130 ns/op

# Run progress: 22.22% complete, ETA 00:23:23
# Fork: 2 of 3
# Warmup Iteration   1: 1901.141 ns/op
# Warmup Iteration   2: 1721.053 ns/op
# Warmup Iteration   3: 1738.409 ns/op
# Warmup Iteration   4: 1682.465 ns/op
# Warmup Iteration   5: 1698.034 ns/op
Iteration   1: 1712.585 ns/op
Iteration   2: 1697.541 ns/op
Iteration   3: 1721.402 ns/op
Iteration   4: 1678.994 ns/op
Iteration   5: 1704.432 ns/op

# Run progress: 27.78% complete, ETA 00:21:43
# Fork: 3 of 3
# Warmup Iteration   1: 1950.563 ns/op
# Warmup Iteration   2: 1695.642 ns/op
# Warmup Iteration   3: 1676.454 ns/op
# Warmup Iteration   4: 1734.359 ns/op
# Warmup Iteration   5: 1673.530 ns/op
Iteration   1: 1711.668 ns/op
Iteration   2: 1698.278 ns/op
Iteration   3: 1690.662 ns/op
Iteration   4: 1664.376 ns/op
Iteration   5: 1706.240 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StringPatternSplitBenchmark.pattern_split":
  1702.416 ±(99.9%) 19.774 ns/op [Average]
  (min, avg, max) = (1664.376, 1702.416, 1745.139), stdev = 18.497
  CI (99.9%): [1682.642, 1722.190] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StringPatternSplitBenchmark.pattern_split
# Parameters: (regexp = ___)

# Run progress: 33.33% complete, ETA 00:20:03
# Fork: 1 of 3
# Warmup Iteration   1: 1969.384 ns/op
# Warmup Iteration   2: 1742.931 ns/op
# Warmup Iteration   3: 1721.839 ns/op
# Warmup Iteration   4: 1735.029 ns/op
# Warmup Iteration   5: 1758.986 ns/op
Iteration   1: 1747.468 ns/op
Iteration   2: 1701.415 ns/op
Iteration   3: 1699.052 ns/op
Iteration   4: 1697.025 ns/op
Iteration   5: 1725.084 ns/op

# Run progress: 38.89% complete, ETA 00:18:22
# Fork: 2 of 3
# Warmup Iteration   1: 1953.594 ns/op
# Warmup Iteration   2: 1724.928 ns/op
# Warmup Iteration   3: 1706.298 ns/op
# Warmup Iteration   4: 1710.612 ns/op
# Warmup Iteration   5: 1674.045 ns/op
Iteration   1: 1717.598 ns/op
Iteration   2: 1744.885 ns/op
Iteration   3: 1682.195 ns/op
Iteration   4: 1718.158 ns/op
Iteration   5: 1748.341 ns/op

# Run progress: 44.44% complete, ETA 00:16:42
# Fork: 3 of 3
# Warmup Iteration   1: 1942.697 ns/op
# Warmup Iteration   2: 1734.303 ns/op
# Warmup Iteration   3: 1729.113 ns/op
# Warmup Iteration   4: 1751.836 ns/op
# Warmup Iteration   5: 1748.802 ns/op
Iteration   1: 1729.190 ns/op
Iteration   2: 1747.044 ns/op
Iteration   3: 1708.527 ns/op
Iteration   4: 1735.030 ns/op
Iteration   5: 1732.506 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StringPatternSplitBenchmark.pattern_split":
  1722.234 ±(99.9%) 22.512 ns/op [Average]
  (min, avg, max) = (1682.195, 1722.234, 1748.341), stdev = 21.058
  CI (99.9%): [1699.722, 1744.747] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StringPatternSplitBenchmark.string_split
# Parameters: (regexp = _)

# Run progress: 50.00% complete, ETA 00:15:02
# Fork: 1 of 3
# Warmup Iteration   1: 956.353 ns/op
# Warmup Iteration   2: 877.320 ns/op
# Warmup Iteration   3: 867.750 ns/op
# Warmup Iteration   4: 856.928 ns/op
# Warmup Iteration   5: 871.380 ns/op
Iteration   1: 876.799 ns/op
Iteration   2: 853.156 ns/op
Iteration   3: 877.252 ns/op
Iteration   4: 857.352 ns/op
Iteration   5: 859.643 ns/op

# Run progress: 55.56% complete, ETA 00:13:22
# Fork: 2 of 3
# Warmup Iteration   1: 985.049 ns/op
# Warmup Iteration   2: 873.616 ns/op
# Warmup Iteration   3: 868.703 ns/op
# Warmup Iteration   4: 871.939 ns/op
# Warmup Iteration   5: 866.774 ns/op
Iteration   1: 876.546 ns/op
Iteration   2: 866.745 ns/op
Iteration   3: 862.454 ns/op
Iteration   4: 876.429 ns/op
Iteration   5: 865.396 ns/op

# Run progress: 61.11% complete, ETA 00:11:41
# Fork: 3 of 3
# Warmup Iteration   1: 967.957 ns/op
# Warmup Iteration   2: 900.105 ns/op
# Warmup Iteration   3: 881.588 ns/op
# Warmup Iteration   4: 865.043 ns/op
# Warmup Iteration   5: 869.347 ns/op
Iteration   1: 876.332 ns/op
Iteration   2: 859.807 ns/op
Iteration   3: 868.717 ns/op
Iteration   4: 866.782 ns/op
Iteration   5: 876.099 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StringPatternSplitBenchmark.string_split":
  867.967 ±(99.9%) 8.825 ns/op [Average]
  (min, avg, max) = (853.156, 867.967, 877.252), stdev = 8.255
  CI (99.9%): [859.143, 876.792] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StringPatternSplitBenchmark.string_split
# Parameters: (regexp = __)

# Run progress: 66.67% complete, ETA 00:10:01
# Fork: 1 of 3
# Warmup Iteration   1: 2112.440 ns/op
# Warmup Iteration   2: 1817.420 ns/op
# Warmup Iteration   3: 1799.202 ns/op
# Warmup Iteration   4: 1843.021 ns/op
# Warmup Iteration   5: 1785.488 ns/op
Iteration   1: 1779.269 ns/op
Iteration   2: 1803.835 ns/op
Iteration   3: 1748.653 ns/op
Iteration   4: 1817.344 ns/op
Iteration   5: 1842.154 ns/op

# Run progress: 72.22% complete, ETA 00:08:21
# Fork: 2 of 3
# Warmup Iteration   1: 2072.623 ns/op
# Warmup Iteration   2: 1851.036 ns/op
# Warmup Iteration   3: 1834.454 ns/op
# Warmup Iteration   4: 1773.282 ns/op
# Warmup Iteration   5: 1787.603 ns/op
Iteration   1: 1792.241 ns/op
Iteration   2: 1788.850 ns/op
Iteration   3: 1782.512 ns/op
Iteration   4: 1808.281 ns/op
Iteration   5: 1826.823 ns/op

# Run progress: 77.78% complete, ETA 00:06:41
# Fork: 3 of 3
# Warmup Iteration   1: 2101.917 ns/op
# Warmup Iteration   2: 1840.768 ns/op
# Warmup Iteration   3: 1801.627 ns/op
# Warmup Iteration   4: 1791.060 ns/op
# Warmup Iteration   5: 1778.230 ns/op
Iteration   1: 1855.909 ns/op
Iteration   2: 1786.111 ns/op
Iteration   3: 1821.725 ns/op
Iteration   4: 1841.723 ns/op
Iteration   5: 1823.265 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StringPatternSplitBenchmark.string_split":
  1807.913 ±(99.9%) 30.734 ns/op [Average]
  (min, avg, max) = (1748.653, 1807.913, 1855.909), stdev = 28.748
  CI (99.9%): [1777.179, 1838.647] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StringPatternSplitBenchmark.string_split
# Parameters: (regexp = ___)

# Run progress: 83.33% complete, ETA 00:05:00
# Fork: 1 of 3
# Warmup Iteration   1: 2075.082 ns/op
# Warmup Iteration   2: 1834.851 ns/op
# Warmup Iteration   3: 1885.236 ns/op
# Warmup Iteration   4: 1839.869 ns/op
# Warmup Iteration   5: 1879.067 ns/op
Iteration   1: 1843.001 ns/op
Iteration   2: 1848.635 ns/op
Iteration   3: 1836.117 ns/op
Iteration   4: 1834.349 ns/op
Iteration   5: 1870.257 ns/op

# Run progress: 88.89% complete, ETA 00:03:20
# Fork: 2 of 3
# Warmup Iteration   1: 2132.569 ns/op
# Warmup Iteration   2: 1847.431 ns/op
# Warmup Iteration   3: 1911.853 ns/op
# Warmup Iteration   4: 1821.207 ns/op
# Warmup Iteration   5: 1849.538 ns/op
Iteration   1: 1876.767 ns/op
Iteration   2: 1869.594 ns/op
Iteration   3: 1879.800 ns/op
Iteration   4: 1860.005 ns/op
Iteration   5: 1840.842 ns/op

# Run progress: 94.44% complete, ETA 00:01:40
# Fork: 3 of 3
# Warmup Iteration   1: 2076.128 ns/op
# Warmup Iteration   2: 1866.902 ns/op
# Warmup Iteration   3: 1852.727 ns/op
# Warmup Iteration   4: 1843.213 ns/op
# Warmup Iteration   5: 1867.297 ns/op
Iteration   1: 1814.456 ns/op
Iteration   2: 1862.832 ns/op
Iteration   3: 1831.257 ns/op
Iteration   4: 1882.904 ns/op
Iteration   5: 1860.955 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StringPatternSplitBenchmark.string_split":
  1854.118 ±(99.9%) 21.758 ns/op [Average]
  (min, avg, max) = (1814.456, 1854.118, 1882.904), stdev = 20.352
  CI (99.9%): [1832.361, 1875.876] (assumes normal distribution)


# Run complete. Total time: 00:30:04

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                  (regexp)  Mode  Cnt     Score    Error  Units
StringPatternSplitBenchmark.pattern_split         _  avgt   15  1459.186 ± 82.126  ns/op
StringPatternSplitBenchmark.pattern_split        __  avgt   15  1702.416 ± 19.774  ns/op
StringPatternSplitBenchmark.pattern_split       ___  avgt   15  1722.234 ± 22.512  ns/op
StringPatternSplitBenchmark.string_split          _  avgt   15   867.967 ±  8.825  ns/op
StringPatternSplitBenchmark.string_split         __  avgt   15  1807.913 ± 30.734  ns/op
StringPatternSplitBenchmark.string_split        ___  avgt   15  1854.118 ± 21.758  ns/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_graal_jit/StringPatternSplitBenchmark.json
Running java -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler -jar benchmarks/target/benchmarks.jar .*NewInstanceBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_graal_jit/NewInstanceBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.NewInstanceBenchmark.new_instance

# Run progress: 0.00% complete, ETA 00:20:00
# Fork: 1 of 3
# Warmup Iteration   1: 89.074 ns/op
# Warmup Iteration   2: 83.017 ns/op
# Warmup Iteration   3: 82.642 ns/op
# Warmup Iteration   4: 80.666 ns/op
# Warmup Iteration   5: 81.160 ns/op
Iteration   1: 80.947 ns/op
Iteration   2: 81.664 ns/op
Iteration   3: 80.593 ns/op
Iteration   4: 80.204 ns/op
Iteration   5: 80.519 ns/op

# Run progress: 8.33% complete, ETA 00:18:23
# Fork: 2 of 3
# Warmup Iteration   1: 85.271 ns/op
# Warmup Iteration   2: 81.728 ns/op
# Warmup Iteration   3: 82.232 ns/op
# Warmup Iteration   4: 82.387 ns/op
# Warmup Iteration   5: 82.565 ns/op
Iteration   1: 82.352 ns/op
Iteration   2: 81.071 ns/op
Iteration   3: 81.693 ns/op
Iteration   4: 81.327 ns/op
Iteration   5: 80.847 ns/op

# Run progress: 16.67% complete, ETA 00:16:42
# Fork: 3 of 3
# Warmup Iteration   1: 86.255 ns/op
# Warmup Iteration   2: 83.499 ns/op
# Warmup Iteration   3: 83.686 ns/op
# Warmup Iteration   4: 83.702 ns/op
# Warmup Iteration   5: 80.740 ns/op
Iteration   1: 82.868 ns/op
Iteration   2: 83.070 ns/op
Iteration   3: 81.574 ns/op
Iteration   4: 82.042 ns/op
Iteration   5: 81.692 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.NewInstanceBenchmark.new_instance":
  81.497 ±(99.9%) 0.898 ns/op [Average]
  (min, avg, max) = (80.204, 81.497, 83.070), stdev = 0.840
  CI (99.9%): [80.600, 82.395] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.NewInstanceBenchmark.new_operator

# Run progress: 25.00% complete, ETA 00:15:02
# Fork: 1 of 3
# Warmup Iteration   1: 3.864 ns/op
# Warmup Iteration   2: 3.476 ns/op
# Warmup Iteration   3: 3.440 ns/op
# Warmup Iteration   4: 3.468 ns/op
# Warmup Iteration   5: 3.448 ns/op
Iteration   1: 3.356 ns/op
Iteration   2: 3.457 ns/op
Iteration   3: 3.472 ns/op
Iteration   4: 3.443 ns/op
Iteration   5: 3.451 ns/op

# Run progress: 33.33% complete, ETA 00:13:22
# Fork: 2 of 3
# Warmup Iteration   1: 3.863 ns/op
# Warmup Iteration   2: 3.559 ns/op
# Warmup Iteration   3: 3.461 ns/op
# Warmup Iteration   4: 3.441 ns/op
# Warmup Iteration   5: 3.475 ns/op
Iteration   1: 3.425 ns/op
Iteration   2: 3.455 ns/op
Iteration   3: 3.440 ns/op
Iteration   4: 3.427 ns/op
Iteration   5: 3.454 ns/op

# Run progress: 41.67% complete, ETA 00:11:41
# Fork: 3 of 3
# Warmup Iteration   1: 6.758 ns/op
# Warmup Iteration   2: 6.351 ns/op
# Warmup Iteration   3: 6.263 ns/op
# Warmup Iteration   4: 6.164 ns/op
# Warmup Iteration   5: 6.229 ns/op
Iteration   1: 6.271 ns/op
Iteration   2: 6.235 ns/op
Iteration   3: 6.282 ns/op
Iteration   4: 6.254 ns/op
Iteration   5: 6.291 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.NewInstanceBenchmark.new_operator":
  4.381 ±(99.9%) 1.476 ns/op [Average]
  (min, avg, max) = (3.356, 4.381, 6.291), stdev = 1.380
  CI (99.9%): [2.905, 5.857] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.NewInstanceBenchmark.supplier_new

# Run progress: 50.00% complete, ETA 00:10:01
# Fork: 1 of 3
# Warmup Iteration   1: 3.921 ns/op
# Warmup Iteration   2: 3.562 ns/op
# Warmup Iteration   3: 3.464 ns/op
# Warmup Iteration   4: 3.435 ns/op
# Warmup Iteration   5: 3.464 ns/op
Iteration   1: 3.417 ns/op
Iteration   2: 3.462 ns/op
Iteration   3: 3.457 ns/op
Iteration   4: 3.430 ns/op
Iteration   5: 3.455 ns/op

# Run progress: 58.33% complete, ETA 00:08:21
# Fork: 2 of 3
# Warmup Iteration   1: 3.878 ns/op
# Warmup Iteration   2: 3.508 ns/op
# Warmup Iteration   3: 3.418 ns/op
# Warmup Iteration   4: 3.439 ns/op
# Warmup Iteration   5: 3.458 ns/op
Iteration   1: 3.402 ns/op
Iteration   2: 3.472 ns/op
Iteration   3: 3.460 ns/op
Iteration   4: 3.380 ns/op
Iteration   5: 3.466 ns/op

# Run progress: 66.67% complete, ETA 00:06:41
# Fork: 3 of 3
# Warmup Iteration   1: 3.839 ns/op
# Warmup Iteration   2: 3.524 ns/op
# Warmup Iteration   3: 3.452 ns/op
# Warmup Iteration   4: 3.433 ns/op
# Warmup Iteration   5: 3.442 ns/op
Iteration   1: 3.450 ns/op
Iteration   2: 3.437 ns/op
Iteration   3: 3.465 ns/op
Iteration   4: 3.441 ns/op
Iteration   5: 3.483 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.NewInstanceBenchmark.supplier_new":
  3.445 ±(99.9%) 0.030 ns/op [Average]
  (min, avg, max) = (3.380, 3.445, 3.483), stdev = 0.028
  CI (99.9%): [3.415, 3.475] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.NewInstanceBenchmark.unsafe_allocateInstance

# Run progress: 75.00% complete, ETA 00:05:00
# Fork: 1 of 3
# Warmup Iteration   1: 6.906 ns/op
# Warmup Iteration   2: 6.270 ns/op
# Warmup Iteration   3: 6.161 ns/op
# Warmup Iteration   4: 6.316 ns/op
# Warmup Iteration   5: 6.286 ns/op
Iteration   1: 6.348 ns/op
Iteration   2: 6.328 ns/op
Iteration   3: 6.268 ns/op
Iteration   4: 6.312 ns/op
Iteration   5: 6.253 ns/op

# Run progress: 83.33% complete, ETA 00:03:20
# Fork: 2 of 3
# Warmup Iteration   1: 3.971 ns/op
# Warmup Iteration   2: 3.567 ns/op
# Warmup Iteration   3: 3.456 ns/op
# Warmup Iteration   4: 3.490 ns/op
# Warmup Iteration   5: 3.457 ns/op
Iteration   1: 3.450 ns/op
Iteration   2: 3.411 ns/op
Iteration   3: 3.451 ns/op
Iteration   4: 3.433 ns/op
Iteration   5: 3.437 ns/op

# Run progress: 91.67% complete, ETA 00:01:40
# Fork: 3 of 3
# Warmup Iteration   1: 3.944 ns/op
# Warmup Iteration   2: 3.571 ns/op
# Warmup Iteration   3: 3.437 ns/op
# Warmup Iteration   4: 3.464 ns/op
# Warmup Iteration   5: 3.487 ns/op
Iteration   1: 3.491 ns/op
Iteration   2: 3.457 ns/op
Iteration   3: 3.441 ns/op
Iteration   4: 3.467 ns/op
Iteration   5: 3.464 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.NewInstanceBenchmark.unsafe_allocateInstance":
  4.401 ±(99.9%) 1.488 ns/op [Average]
  (min, avg, max) = (3.411, 4.401, 6.348), stdev = 1.392
  CI (99.9%): [2.913, 5.889] (assumes normal distribution)


# Run complete. Total time: 00:20:03

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                     Mode  Cnt   Score   Error  Units
NewInstanceBenchmark.new_instance             avgt   15  81.497 ± 0.898  ns/op
NewInstanceBenchmark.new_operator             avgt   15   4.381 ± 1.476  ns/op
NewInstanceBenchmark.supplier_new             avgt   15   3.445 ± 0.030  ns/op
NewInstanceBenchmark.unsafe_allocateInstance  avgt   15   4.401 ± 1.488  ns/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_graal_jit/NewInstanceBenchmark.json
Running java -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler -jar benchmarks/target/benchmarks.jar .*MessageDigestBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_graal_jit/MessageDigestBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest
# Parameters: (algorithm = MD2, provider = DEFAULT, size = 4096)

# Run progress: 0.00% complete, ETA 02:10:00
# Fork: 1 of 3
# Warmup Iteration   1: 468.572 us/op
# Warmup Iteration   2: 351.348 us/op
# Warmup Iteration   3: 351.090 us/op
# Warmup Iteration   4: 351.074 us/op
# Warmup Iteration   5: 351.047 us/op
Iteration   1: 351.112 us/op
Iteration   2: 351.168 us/op
Iteration   3: 351.054 us/op
Iteration   4: 351.086 us/op
Iteration   5: 351.108 us/op

# Run progress: 1.28% complete, ETA 02:08:46
# Fork: 2 of 3
# Warmup Iteration   1: 418.211 us/op
# Warmup Iteration   2: 351.793 us/op
# Warmup Iteration   3: 351.185 us/op
# Warmup Iteration   4: 351.542 us/op
# Warmup Iteration   5: 351.812 us/op
Iteration   1: 351.815 us/op
Iteration   2: 351.782 us/op
Iteration   3: 351.693 us/op
Iteration   4: 351.844 us/op
Iteration   5: 351.727 us/op

# Run progress: 2.56% complete, ETA 02:07:03
# Fork: 3 of 3
# Warmup Iteration   1: 414.879 us/op
# Warmup Iteration   2: 351.789 us/op
# Warmup Iteration   3: 351.669 us/op
# Warmup Iteration   4: 351.976 us/op
# Warmup Iteration   5: 351.744 us/op
Iteration   1: 351.624 us/op
Iteration   2: 351.082 us/op
Iteration   3: 351.675 us/op
Iteration   4: 351.537 us/op
Iteration   5: 351.588 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest":
  351.460 ±(99.9%) 0.335 us/op [Average]
  (min, avg, max) = (351.054, 351.460, 351.844), stdev = 0.313
  CI (99.9%): [351.125, 351.795] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest
# Parameters: (algorithm = MD2, provider = SUN, size = 4096)

# Run progress: 3.85% complete, ETA 02:05:22
# Fork: 1 of 3
# Warmup Iteration   1: 438.443 us/op
# Warmup Iteration   2: 353.940 us/op
# Warmup Iteration   3: 355.153 us/op
# Warmup Iteration   4: 355.164 us/op
# Warmup Iteration   5: 354.984 us/op
Iteration   1: 354.978 us/op
Iteration   2: 353.708 us/op
Iteration   3: 355.125 us/op
Iteration   4: 355.214 us/op
Iteration   5: 354.004 us/op

# Run progress: 5.13% complete, ETA 02:03:42
# Fork: 2 of 3
# Warmup Iteration   1: 415.752 us/op
# Warmup Iteration   2: 351.893 us/op
# Warmup Iteration   3: 351.658 us/op
# Warmup Iteration   4: 351.578 us/op
# Warmup Iteration   5: 351.679 us/op
Iteration   1: 351.555 us/op
Iteration   2: 351.317 us/op
Iteration   3: 351.759 us/op
Iteration   4: 351.806 us/op
Iteration   5: 351.785 us/op

# Run progress: 6.41% complete, ETA 02:02:00
# Fork: 3 of 3
# Warmup Iteration   1: 418.142 us/op
# Warmup Iteration   2: 351.429 us/op
# Warmup Iteration   3: 351.804 us/op
# Warmup Iteration   4: 351.887 us/op
# Warmup Iteration   5: 349.706 us/op
Iteration   1: 350.340 us/op
Iteration   2: 350.534 us/op
Iteration   3: 350.433 us/op
Iteration   4: 351.775 us/op
Iteration   5: 351.989 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest":
  352.421 ±(99.9%) 1.839 us/op [Average]
  (min, avg, max) = (350.340, 352.421, 355.214), stdev = 1.721
  CI (99.9%): [350.582, 354.261] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest
# Parameters: (algorithm = MD5, provider = DEFAULT, size = 4096)

# Run progress: 7.69% complete, ETA 02:00:20
# Fork: 1 of 3
# Warmup Iteration   1: 8.217 us/op
# Warmup Iteration   2: 7.801 us/op
# Warmup Iteration   3: 7.780 us/op
# Warmup Iteration   4: 7.793 us/op
# Warmup Iteration   5: 7.763 us/op
Iteration   1: 7.752 us/op
Iteration   2: 7.777 us/op
Iteration   3: 7.789 us/op
Iteration   4: 7.791 us/op
Iteration   5: 7.774 us/op

# Run progress: 8.97% complete, ETA 01:58:39
# Fork: 2 of 3
# Warmup Iteration   1: 8.255 us/op
# Warmup Iteration   2: 7.804 us/op
# Warmup Iteration   3: 7.783 us/op
# Warmup Iteration   4: 7.783 us/op
# Warmup Iteration   5: 7.779 us/op
Iteration   1: 7.787 us/op
Iteration   2: 7.747 us/op
Iteration   3: 7.789 us/op
Iteration   4: 7.792 us/op
Iteration   5: 7.780 us/op

# Run progress: 10.26% complete, ETA 01:56:59
# Fork: 3 of 3
# Warmup Iteration   1: 8.277 us/op
# Warmup Iteration   2: 7.804 us/op
# Warmup Iteration   3: 7.755 us/op
# Warmup Iteration   4: 7.792 us/op
# Warmup Iteration   5: 7.778 us/op
Iteration   1: 7.773 us/op
Iteration   2: 7.796 us/op
Iteration   3: 7.775 us/op
Iteration   4: 7.786 us/op
Iteration   5: 7.794 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest":
  7.780 ±(99.9%) 0.016 us/op [Average]
  (min, avg, max) = (7.747, 7.780, 7.796), stdev = 0.015
  CI (99.9%): [7.765, 7.796] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest
# Parameters: (algorithm = MD5, provider = SUN, size = 4096)

# Run progress: 11.54% complete, ETA 01:55:18
# Fork: 1 of 3
# Warmup Iteration   1: 8.263 us/op
# Warmup Iteration   2: 7.807 us/op
# Warmup Iteration   3: 7.776 us/op
# Warmup Iteration   4: 7.795 us/op
# Warmup Iteration   5: 7.790 us/op
Iteration   1: 7.796 us/op
Iteration   2: 7.785 us/op
Iteration   3: 7.800 us/op
Iteration   4: 7.776 us/op
Iteration   5: 7.789 us/op

# Run progress: 12.82% complete, ETA 01:53:37
# Fork: 2 of 3
# Warmup Iteration   1: 8.225 us/op
# Warmup Iteration   2: 7.804 us/op
# Warmup Iteration   3: 7.795 us/op
# Warmup Iteration   4: 7.801 us/op
# Warmup Iteration   5: 7.796 us/op
Iteration   1: 7.790 us/op
Iteration   2: 7.784 us/op
Iteration   3: 7.794 us/op
Iteration   4: 7.796 us/op
Iteration   5: 7.800 us/op

# Run progress: 14.10% complete, ETA 01:51:57
# Fork: 3 of 3
# Warmup Iteration   1: 8.245 us/op
# Warmup Iteration   2: 7.795 us/op
# Warmup Iteration   3: 7.782 us/op
# Warmup Iteration   4: 7.781 us/op
# Warmup Iteration   5: 7.789 us/op
Iteration   1: 7.780 us/op
Iteration   2: 7.793 us/op
Iteration   3: 7.769 us/op
Iteration   4: 7.773 us/op
Iteration   5: 7.800 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest":
  7.788 ±(99.9%) 0.011 us/op [Average]
  (min, avg, max) = (7.769, 7.788, 7.800), stdev = 0.010
  CI (99.9%): [7.778, 7.799] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest
# Parameters: (algorithm = SHA-224, provider = DEFAULT, size = 4096)

# Run progress: 15.38% complete, ETA 01:50:16
# Fork: 1 of 3
# Warmup Iteration   1: 10.919 us/op
# Warmup Iteration   2: 9.954 us/op
# Warmup Iteration   3: 9.923 us/op
# Warmup Iteration   4: 9.937 us/op
# Warmup Iteration   5: 9.915 us/op
Iteration   1: 9.916 us/op
Iteration   2: 9.901 us/op
Iteration   3: 9.881 us/op
Iteration   4: 9.928 us/op
Iteration   5: 9.906 us/op

# Run progress: 16.67% complete, ETA 01:48:36
# Fork: 2 of 3
# Warmup Iteration   1: 10.942 us/op
# Warmup Iteration   2: 10.052 us/op
# Warmup Iteration   3: 9.995 us/op
# Warmup Iteration   4: 10.022 us/op
# Warmup Iteration   5: 9.979 us/op
Iteration   1: 9.966 us/op
Iteration   2: 9.697 us/op
Iteration   3: 9.766 us/op
Iteration   4: 10.156 us/op
Iteration   5: 9.472 us/op

# Run progress: 17.95% complete, ETA 01:46:56
# Fork: 3 of 3
# Warmup Iteration   1: 10.399 us/op
# Warmup Iteration   2: 9.547 us/op
# Warmup Iteration   3: 9.504 us/op
# Warmup Iteration   4: 9.534 us/op
# Warmup Iteration   5: 9.504 us/op
Iteration   1: 9.527 us/op
Iteration   2: 9.513 us/op
Iteration   3: 9.513 us/op
Iteration   4: 9.506 us/op
Iteration   5: 9.914 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest":
  9.771 ±(99.9%) 0.232 us/op [Average]
  (min, avg, max) = (9.472, 9.771, 10.156), stdev = 0.217
  CI (99.9%): [9.539, 10.002] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest
# Parameters: (algorithm = SHA-224, provider = SUN, size = 4096)

# Run progress: 19.23% complete, ETA 01:45:15
# Fork: 1 of 3
# Warmup Iteration   1: 10.605 us/op
# Warmup Iteration   2: 9.816 us/op
# Warmup Iteration   3: 9.976 us/op
# Warmup Iteration   4: 9.990 us/op
# Warmup Iteration   5: 9.962 us/op
Iteration   1: 9.945 us/op
Iteration   2: 9.952 us/op
Iteration   3: 9.622 us/op
Iteration   4: 9.691 us/op
Iteration   5: 9.691 us/op

# Run progress: 20.51% complete, ETA 01:43:35
# Fork: 2 of 3
# Warmup Iteration   1: 10.674 us/op
# Warmup Iteration   2: 9.613 us/op
# Warmup Iteration   3: 9.523 us/op
# Warmup Iteration   4: 9.543 us/op
# Warmup Iteration   5: 9.564 us/op
Iteration   1: 9.533 us/op
Iteration   2: 9.555 us/op
Iteration   3: 9.547 us/op
Iteration   4: 9.543 us/op
Iteration   5: 9.545 us/op

# Run progress: 21.79% complete, ETA 01:41:55
# Fork: 3 of 3
# Warmup Iteration   1: 10.447 us/op
# Warmup Iteration   2: 10.254 us/op
# Warmup Iteration   3: 9.966 us/op
# Warmup Iteration   4: 9.970 us/op
# Warmup Iteration   5: 9.967 us/op
Iteration   1: 9.943 us/op
Iteration   2: 9.705 us/op
Iteration   3: 9.725 us/op
Iteration   4: 9.751 us/op
Iteration   5: 9.702 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest":
  9.697 ±(99.9%) 0.160 us/op [Average]
  (min, avg, max) = (9.533, 9.697, 9.952), stdev = 0.149
  CI (99.9%): [9.537, 9.856] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest
# Parameters: (algorithm = SHA-512/224, provider = DEFAULT, size = 4096)

# Run progress: 23.08% complete, ETA 01:40:15
# Fork: 1 of 3
# Warmup Iteration   1: 7.686 us/op
# Warmup Iteration   2: 7.177 us/op
# Warmup Iteration   3: 7.018 us/op
# Warmup Iteration   4: 7.021 us/op
# Warmup Iteration   5: 6.989 us/op
Iteration   1: 7.014 us/op
Iteration   2: 7.006 us/op
Iteration   3: 6.968 us/op
Iteration   4: 7.004 us/op
Iteration   5: 7.128 us/op

# Run progress: 24.36% complete, ETA 01:38:34
# Fork: 2 of 3
# Warmup Iteration   1: 8.176 us/op
# Warmup Iteration   2: 7.556 us/op
# Warmup Iteration   3: 7.471 us/op
# Warmup Iteration   4: 7.426 us/op
# Warmup Iteration   5: 7.441 us/op
Iteration   1: 7.415 us/op
Iteration   2: 7.409 us/op
Iteration   3: 7.400 us/op
Iteration   4: 7.382 us/op
Iteration   5: 7.378 us/op

# Run progress: 25.64% complete, ETA 01:36:54
# Fork: 3 of 3
# Warmup Iteration   1: 7.766 us/op
# Warmup Iteration   2: 7.166 us/op
# Warmup Iteration   3: 7.144 us/op
# Warmup Iteration   4: 7.129 us/op
# Warmup Iteration   5: 7.143 us/op
Iteration   1: 7.469 us/op
Iteration   2: 7.438 us/op
Iteration   3: 7.427 us/op
Iteration   4: 7.396 us/op
Iteration   5: 7.392 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest":
  7.282 ±(99.9%) 0.206 us/op [Average]
  (min, avg, max) = (6.968, 7.282, 7.469), stdev = 0.193
  CI (99.9%): [7.076, 7.488] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest
# Parameters: (algorithm = SHA-512/224, provider = SUN, size = 4096)

# Run progress: 26.92% complete, ETA 01:35:14
# Fork: 1 of 3
# Warmup Iteration   1: 7.639 us/op
# Warmup Iteration   2: 7.509 us/op
# Warmup Iteration   3: 7.465 us/op
# Warmup Iteration   4: 7.432 us/op
# Warmup Iteration   5: 7.398 us/op
Iteration   1: 7.377 us/op
Iteration   2: 7.381 us/op
Iteration   3: 7.363 us/op
Iteration   4: 7.366 us/op
Iteration   5: 7.367 us/op

# Run progress: 28.21% complete, ETA 01:33:34
# Fork: 2 of 3
# Warmup Iteration   1: 8.029 us/op
# Warmup Iteration   2: 7.364 us/op
# Warmup Iteration   3: 7.393 us/op
# Warmup Iteration   4: 7.375 us/op
# Warmup Iteration   5: 7.385 us/op
Iteration   1: 7.350 us/op
Iteration   2: 7.353 us/op
Iteration   3: 7.359 us/op
Iteration   4: 7.344 us/op
Iteration   5: 7.333 us/op

# Run progress: 29.49% complete, ETA 01:31:53
# Fork: 3 of 3
# Warmup Iteration   1: 7.630 us/op
# Warmup Iteration   2: 7.197 us/op
# Warmup Iteration   3: 7.104 us/op
# Warmup Iteration   4: 7.092 us/op
# Warmup Iteration   5: 7.100 us/op
Iteration   1: 7.100 us/op
Iteration   2: 7.092 us/op
Iteration   3: 7.104 us/op
Iteration   4: 7.101 us/op
Iteration   5: 7.095 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest":
  7.272 ±(99.9%) 0.137 us/op [Average]
  (min, avg, max) = (7.092, 7.272, 7.381), stdev = 0.128
  CI (99.9%): [7.136, 7.409] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest
# Parameters: (algorithm = SHA-256, provider = DEFAULT, size = 4096)

# Run progress: 30.77% complete, ETA 01:30:13
# Fork: 1 of 3
# Warmup Iteration   1: 10.585 us/op
# Warmup Iteration   2: 10.137 us/op
# Warmup Iteration   3: 10.037 us/op
# Warmup Iteration   4: 9.989 us/op
# Warmup Iteration   5: 10.004 us/op
Iteration   1: 9.979 us/op
Iteration   2: 9.993 us/op
Iteration   3: 9.968 us/op
Iteration   4: 9.360 us/op
Iteration   5: 9.397 us/op

# Run progress: 32.05% complete, ETA 01:28:33
# Fork: 2 of 3
# Warmup Iteration   1: 10.784 us/op
# Warmup Iteration   2: 9.867 us/op
# Warmup Iteration   3: 9.738 us/op
# Warmup Iteration   4: 9.742 us/op
# Warmup Iteration   5: 10.132 us/op
Iteration   1: 10.068 us/op
Iteration   2: 9.973 us/op
Iteration   3: 9.425 us/op
Iteration   4: 9.470 us/op
Iteration   5: 9.470 us/op

# Run progress: 33.33% complete, ETA 01:26:52
# Fork: 3 of 3
# Warmup Iteration   1: 10.897 us/op
# Warmup Iteration   2: 10.130 us/op
# Warmup Iteration   3: 10.015 us/op
# Warmup Iteration   4: 9.999 us/op
# Warmup Iteration   5: 9.582 us/op
Iteration   1: 9.612 us/op
Iteration   2: 9.629 us/op
Iteration   3: 9.710 us/op
Iteration   4: 9.687 us/op
Iteration   5: 9.631 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest":
  9.691 ±(99.9%) 0.264 us/op [Average]
  (min, avg, max) = (9.360, 9.691, 10.068), stdev = 0.246
  CI (99.9%): [9.428, 9.955] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest
# Parameters: (algorithm = SHA-256, provider = SUN, size = 4096)

# Run progress: 34.62% complete, ETA 01:25:12
# Fork: 1 of 3
# Warmup Iteration   1: 10.994 us/op
# Warmup Iteration   2: 9.845 us/op
# Warmup Iteration   3: 9.683 us/op
# Warmup Iteration   4: 9.684 us/op
# Warmup Iteration   5: 9.687 us/op
Iteration   1: 9.654 us/op
Iteration   2: 9.675 us/op
Iteration   3: 9.716 us/op
Iteration   4: 9.688 us/op
Iteration   5: 9.696 us/op

# Run progress: 35.90% complete, ETA 01:23:32
# Fork: 2 of 3
# Warmup Iteration   1: 10.789 us/op
# Warmup Iteration   2: 10.069 us/op
# Warmup Iteration   3: 9.965 us/op
# Warmup Iteration   4: 9.907 us/op
# Warmup Iteration   5: 9.609 us/op
Iteration   1: 9.665 us/op
Iteration   2: 9.670 us/op
Iteration   3: 9.710 us/op
Iteration   4: 9.689 us/op
Iteration   5: 9.671 us/op

# Run progress: 37.18% complete, ETA 01:21:52
# Fork: 3 of 3
# Warmup Iteration   1: 10.444 us/op
# Warmup Iteration   2: 10.251 us/op
# Warmup Iteration   3: 9.993 us/op
# Warmup Iteration   4: 9.976 us/op
# Warmup Iteration   5: 9.854 us/op
Iteration   1: 9.712 us/op
Iteration   2: 9.736 us/op
Iteration   3: 9.741 us/op
Iteration   4: 9.757 us/op
Iteration   5: 9.738 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest":
  9.701 ±(99.9%) 0.034 us/op [Average]
  (min, avg, max) = (9.654, 9.701, 9.757), stdev = 0.032
  CI (99.9%): [9.667, 9.735] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest
# Parameters: (algorithm = SHA-384, provider = DEFAULT, size = 4096)

# Run progress: 38.46% complete, ETA 01:20:11
# Fork: 1 of 3
# Warmup Iteration   1: 7.903 us/op
# Warmup Iteration   2: 7.113 us/op
# Warmup Iteration   3: 7.378 us/op
# Warmup Iteration   4: 7.351 us/op
# Warmup Iteration   5: 7.341 us/op
Iteration   1: 7.333 us/op
Iteration   2: 7.331 us/op
Iteration   3: 7.319 us/op
Iteration   4: 7.322 us/op
Iteration   5: 7.300 us/op

# Run progress: 39.74% complete, ETA 01:18:31
# Fork: 2 of 3
# Warmup Iteration   1: 8.082 us/op
# Warmup Iteration   2: 7.135 us/op
# Warmup Iteration   3: 7.112 us/op
# Warmup Iteration   4: 7.112 us/op
# Warmup Iteration   5: 7.117 us/op
Iteration   1: 7.116 us/op
Iteration   2: 7.087 us/op
Iteration   3: 7.104 us/op
Iteration   4: 7.107 us/op
Iteration   5: 7.105 us/op

# Run progress: 41.03% complete, ETA 01:16:51
# Fork: 3 of 3
# Warmup Iteration   1: 8.036 us/op
# Warmup Iteration   2: 7.395 us/op
# Warmup Iteration   3: 7.001 us/op
# Warmup Iteration   4: 7.019 us/op
# Warmup Iteration   5: 7.036 us/op
Iteration   1: 7.489 us/op
Iteration   2: 6.949 us/op
Iteration   3: 6.961 us/op
Iteration   4: 7.011 us/op
Iteration   5: 7.045 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest":
  7.172 ±(99.9%) 0.174 us/op [Average]
  (min, avg, max) = (6.949, 7.172, 7.489), stdev = 0.163
  CI (99.9%): [6.997, 7.346] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest
# Parameters: (algorithm = SHA-384, provider = SUN, size = 4096)

# Run progress: 42.31% complete, ETA 01:15:11
# Fork: 1 of 3
# Warmup Iteration   1: 7.986 us/op
# Warmup Iteration   2: 7.449 us/op
# Warmup Iteration   3: 7.374 us/op
# Warmup Iteration   4: 7.344 us/op
# Warmup Iteration   5: 6.978 us/op
Iteration   1: 7.004 us/op
Iteration   2: 6.998 us/op
Iteration   3: 6.999 us/op
Iteration   4: 6.993 us/op
Iteration   5: 7.006 us/op

# Run progress: 43.59% complete, ETA 01:13:30
# Fork: 2 of 3
# Warmup Iteration   1: 8.140 us/op
# Warmup Iteration   2: 7.216 us/op
# Warmup Iteration   3: 7.535 us/op
# Warmup Iteration   4: 7.486 us/op
# Warmup Iteration   5: 7.433 us/op
Iteration   1: 7.430 us/op
Iteration   2: 7.388 us/op
Iteration   3: 7.394 us/op
Iteration   4: 7.415 us/op
Iteration   5: 7.392 us/op

# Run progress: 44.87% complete, ETA 01:11:50
# Fork: 3 of 3
# Warmup Iteration   1: 8.014 us/op
# Warmup Iteration   2: 7.422 us/op
# Warmup Iteration   3: 7.125 us/op
# Warmup Iteration   4: 7.129 us/op
# Warmup Iteration   5: 7.141 us/op
Iteration   1: 7.131 us/op
Iteration   2: 7.122 us/op
Iteration   3: 7.132 us/op
Iteration   4: 7.129 us/op
Iteration   5: 7.136 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest":
  7.178 ±(99.9%) 0.187 us/op [Average]
  (min, avg, max) = (6.993, 7.178, 7.430), stdev = 0.175
  CI (99.9%): [6.991, 7.365] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest
# Parameters: (algorithm = SHA3-512, provider = DEFAULT, size = 4096)

# Run progress: 46.15% complete, ETA 01:10:10
# Fork: 1 of 3
# Warmup Iteration   1: 54.547 us/op
# Warmup Iteration   2: 49.671 us/op
# Warmup Iteration   3: 49.514 us/op
# Warmup Iteration   4: 49.402 us/op
# Warmup Iteration   5: 49.519 us/op
Iteration   1: 49.374 us/op
Iteration   2: 49.238 us/op
Iteration   3: 49.390 us/op
Iteration   4: 49.219 us/op
Iteration   5: 52.071 us/op

# Run progress: 47.44% complete, ETA 01:08:29
# Fork: 2 of 3
# Warmup Iteration   1: 53.804 us/op
# Warmup Iteration   2: 49.801 us/op
# Warmup Iteration   3: 52.353 us/op
# Warmup Iteration   4: 51.964 us/op
# Warmup Iteration   5: 51.773 us/op
Iteration   1: 51.759 us/op
Iteration   2: 51.585 us/op
Iteration   3: 51.660 us/op
Iteration   4: 51.646 us/op
Iteration   5: 51.703 us/op

# Run progress: 48.72% complete, ETA 01:06:49
# Fork: 3 of 3
# Warmup Iteration   1: 53.656 us/op
# Warmup Iteration   2: 53.050 us/op
# Warmup Iteration   3: 49.421 us/op
# Warmup Iteration   4: 49.446 us/op
# Warmup Iteration   5: 52.794 us/op
Iteration   1: 52.372 us/op
Iteration   2: 52.324 us/op
Iteration   3: 52.040 us/op
Iteration   4: 52.055 us/op
Iteration   5: 48.946 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest":
  51.026 ±(99.9%) 1.428 us/op [Average]
  (min, avg, max) = (48.946, 51.026, 52.372), stdev = 1.335
  CI (99.9%): [49.598, 52.453] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest
# Parameters: (algorithm = SHA3-512, provider = SUN, size = 4096)

# Run progress: 50.00% complete, ETA 01:05:09
# Fork: 1 of 3
# Warmup Iteration   1: 57.219 us/op
# Warmup Iteration   2: 52.883 us/op
# Warmup Iteration   3: 52.390 us/op
# Warmup Iteration   4: 52.075 us/op
# Warmup Iteration   5: 52.003 us/op
Iteration   1: 51.852 us/op
Iteration   2: 51.922 us/op
Iteration   3: 51.814 us/op
Iteration   4: 51.841 us/op
Iteration   5: 51.953 us/op

# Run progress: 51.28% complete, ETA 01:03:29
# Fork: 2 of 3
# Warmup Iteration   1: 53.313 us/op
# Warmup Iteration   2: 49.629 us/op
# Warmup Iteration   3: 51.940 us/op
# Warmup Iteration   4: 51.812 us/op
# Warmup Iteration   5: 51.673 us/op
Iteration   1: 51.682 us/op
Iteration   2: 50.008 us/op
Iteration   3: 50.164 us/op
Iteration   4: 50.198 us/op
Iteration   5: 50.227 us/op

# Run progress: 52.56% complete, ETA 01:01:48
# Fork: 3 of 3
# Warmup Iteration   1: 56.184 us/op
# Warmup Iteration   2: 53.035 us/op
# Warmup Iteration   3: 52.505 us/op
# Warmup Iteration   4: 52.233 us/op
# Warmup Iteration   5: 51.982 us/op
Iteration   1: 51.967 us/op
Iteration   2: 52.029 us/op
Iteration   3: 52.127 us/op
Iteration   4: 51.906 us/op
Iteration   5: 51.906 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest":
  51.440 ±(99.9%) 0.869 us/op [Average]
  (min, avg, max) = (50.008, 51.440, 52.127), stdev = 0.813
  CI (99.9%): [50.571, 52.309] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest
# Parameters: (algorithm = SHA-512/256, provider = DEFAULT, size = 4096)

# Run progress: 53.85% complete, ETA 01:00:08
# Fork: 1 of 3
# Warmup Iteration   1: 7.644 us/op
# Warmup Iteration   2: 7.386 us/op
# Warmup Iteration   3: 7.099 us/op
# Warmup Iteration   4: 7.125 us/op
# Warmup Iteration   5: 7.124 us/op
Iteration   1: 7.122 us/op
Iteration   2: 7.108 us/op
Iteration   3: 7.100 us/op
Iteration   4: 6.991 us/op
Iteration   5: 6.994 us/op

# Run progress: 55.13% complete, ETA 00:58:28
# Fork: 2 of 3
# Warmup Iteration   1: 8.203 us/op
# Warmup Iteration   2: 7.518 us/op
# Warmup Iteration   3: 7.440 us/op
# Warmup Iteration   4: 7.410 us/op
# Warmup Iteration   5: 7.395 us/op
Iteration   1: 7.372 us/op
Iteration   2: 7.373 us/op
Iteration   3: 7.370 us/op
Iteration   4: 7.366 us/op
Iteration   5: 7.367 us/op

# Run progress: 56.41% complete, ETA 00:56:48
# Fork: 3 of 3
# Warmup Iteration   1: 7.818 us/op
# Warmup Iteration   2: 7.455 us/op
# Warmup Iteration   3: 7.400 us/op
# Warmup Iteration   4: 7.368 us/op
# Warmup Iteration   5: 7.370 us/op
Iteration   1: 7.353 us/op
Iteration   2: 7.349 us/op
Iteration   3: 7.344 us/op
Iteration   4: 7.329 us/op
Iteration   5: 6.942 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest":
  7.232 ±(99.9%) 0.178 us/op [Average]
  (min, avg, max) = (6.942, 7.232, 7.373), stdev = 0.167
  CI (99.9%): [7.054, 7.410] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest
# Parameters: (algorithm = SHA-512/256, provider = SUN, size = 4096)

# Run progress: 57.69% complete, ETA 00:55:07
# Fork: 1 of 3
# Warmup Iteration   1: 7.843 us/op
# Warmup Iteration   2: 7.063 us/op
# Warmup Iteration   3: 7.041 us/op
# Warmup Iteration   4: 7.047 us/op
# Warmup Iteration   5: 7.025 us/op
Iteration   1: 7.040 us/op
Iteration   2: 7.038 us/op
Iteration   3: 7.023 us/op
Iteration   4: 7.001 us/op
Iteration   5: 7.026 us/op

# Run progress: 58.97% complete, ETA 00:53:27
# Fork: 2 of 3
# Warmup Iteration   1: 7.662 us/op
# Warmup Iteration   2: 7.047 us/op
# Warmup Iteration   3: 7.017 us/op
# Warmup Iteration   4: 6.994 us/op
# Warmup Iteration   5: 7.135 us/op
Iteration   1: 7.125 us/op
Iteration   2: 7.118 us/op
Iteration   3: 7.114 us/op
Iteration   4: 7.107 us/op
Iteration   5: 7.094 us/op

# Run progress: 60.26% complete, ETA 00:51:47
# Fork: 3 of 3
# Warmup Iteration   1: 8.186 us/op
# Warmup Iteration   2: 7.526 us/op
# Warmup Iteration   3: 7.423 us/op
# Warmup Iteration   4: 7.096 us/op
# Warmup Iteration   5: 7.082 us/op
Iteration   1: 7.094 us/op
Iteration   2: 7.098 us/op
Iteration   3: 7.114 us/op
Iteration   4: 7.112 us/op
Iteration   5: 7.109 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest":
  7.081 ±(99.9%) 0.045 us/op [Average]
  (min, avg, max) = (7.001, 7.081, 7.125), stdev = 0.042
  CI (99.9%): [7.036, 7.126] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest
# Parameters: (algorithm = SHA, provider = DEFAULT, size = 4096)

# Run progress: 61.54% complete, ETA 00:50:07
# Fork: 1 of 3
# Warmup Iteration   1: 15.725 us/op
# Warmup Iteration   2: 14.480 us/op
# Warmup Iteration   3: 14.438 us/op
# Warmup Iteration   4: 14.459 us/op
# Warmup Iteration   5: 14.486 us/op
Iteration   1: 14.394 us/op
Iteration   2: 14.379 us/op
Iteration   3: 14.467 us/op
Iteration   4: 14.446 us/op
Iteration   5: 14.416 us/op

# Run progress: 62.82% complete, ETA 00:48:27
# Fork: 2 of 3
# Warmup Iteration   1: 16.115 us/op
# Warmup Iteration   2: 14.507 us/op
# Warmup Iteration   3: 14.422 us/op
# Warmup Iteration   4: 14.418 us/op
# Warmup Iteration   5: 14.427 us/op
Iteration   1: 14.932 us/op
Iteration   2: 14.836 us/op
Iteration   3: 14.816 us/op
Iteration   4: 14.767 us/op
Iteration   5: 14.757 us/op

# Run progress: 64.10% complete, ETA 00:46:46
# Fork: 3 of 3
# Warmup Iteration   1: 15.992 us/op
# Warmup Iteration   2: 15.134 us/op
# Warmup Iteration   3: 14.858 us/op
# Warmup Iteration   4: 14.840 us/op
# Warmup Iteration   5: 14.750 us/op
Iteration   1: 14.812 us/op
Iteration   2: 15.372 us/op
Iteration   3: 14.361 us/op
Iteration   4: 14.365 us/op
Iteration   5: 14.367 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest":
  14.632 ±(99.9%) 0.316 us/op [Average]
  (min, avg, max) = (14.361, 14.632, 15.372), stdev = 0.296
  CI (99.9%): [14.316, 14.948] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest
# Parameters: (algorithm = SHA, provider = SUN, size = 4096)

# Run progress: 65.38% complete, ETA 00:45:06
# Fork: 1 of 3
# Warmup Iteration   1: 16.022 us/op
# Warmup Iteration   2: 14.558 us/op
# Warmup Iteration   3: 14.440 us/op
# Warmup Iteration   4: 14.455 us/op
# Warmup Iteration   5: 14.443 us/op
Iteration   1: 14.815 us/op
Iteration   2: 14.796 us/op
Iteration   3: 14.770 us/op
Iteration   4: 14.785 us/op
Iteration   5: 14.726 us/op

# Run progress: 66.67% complete, ETA 00:43:26
# Fork: 2 of 3
# Warmup Iteration   1: 16.024 us/op
# Warmup Iteration   2: 14.986 us/op
# Warmup Iteration   3: 14.966 us/op
# Warmup Iteration   4: 14.958 us/op
# Warmup Iteration   5: 15.047 us/op
Iteration   1: 15.016 us/op
Iteration   2: 14.999 us/op
Iteration   3: 14.997 us/op
Iteration   4: 14.967 us/op
Iteration   5: 14.972 us/op

# Run progress: 67.95% complete, ETA 00:41:46
# Fork: 3 of 3
# Warmup Iteration   1: 15.847 us/op
# Warmup Iteration   2: 14.590 us/op
# Warmup Iteration   3: 14.464 us/op
# Warmup Iteration   4: 14.430 us/op
# Warmup Iteration   5: 14.438 us/op
Iteration   1: 14.378 us/op
Iteration   2: 14.493 us/op
Iteration   3: 14.431 us/op
Iteration   4: 14.424 us/op
Iteration   5: 14.414 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest":
  14.732 ±(99.9%) 0.259 us/op [Average]
  (min, avg, max) = (14.378, 14.732, 15.016), stdev = 0.242
  CI (99.9%): [14.474, 14.991] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest
# Parameters: (algorithm = SHA-512, provider = DEFAULT, size = 4096)

# Run progress: 69.23% complete, ETA 00:40:05
# Fork: 1 of 3
# Warmup Iteration   1: 7.612 us/op
# Warmup Iteration   2: 7.045 us/op
# Warmup Iteration   3: 7.027 us/op
# Warmup Iteration   4: 7.430 us/op
# Warmup Iteration   5: 7.122 us/op
Iteration   1: 7.112 us/op
Iteration   2: 7.348 us/op
Iteration   3: 7.340 us/op
Iteration   4: 7.329 us/op
Iteration   5: 7.320 us/op

# Run progress: 70.51% complete, ETA 00:38:25
# Fork: 2 of 3
# Warmup Iteration   1: 7.782 us/op
# Warmup Iteration   2: 7.159 us/op
# Warmup Iteration   3: 6.992 us/op
# Warmup Iteration   4: 7.035 us/op
# Warmup Iteration   5: 6.958 us/op
Iteration   1: 7.003 us/op
Iteration   2: 7.103 us/op
Iteration   3: 7.509 us/op
Iteration   4: 7.463 us/op
Iteration   5: 7.415 us/op

# Run progress: 71.79% complete, ETA 00:36:45
# Fork: 3 of 3
# Warmup Iteration   1: 7.779 us/op
# Warmup Iteration   2: 7.023 us/op
# Warmup Iteration   3: 7.011 us/op
# Warmup Iteration   4: 6.997 us/op
# Warmup Iteration   5: 7.015 us/op
Iteration   1: 7.009 us/op
Iteration   2: 7.395 us/op
Iteration   3: 7.325 us/op
Iteration   4: 7.321 us/op
Iteration   5: 6.951 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest":
  7.263 ±(99.9%) 0.191 us/op [Average]
  (min, avg, max) = (6.951, 7.263, 7.509), stdev = 0.179
  CI (99.9%): [7.072, 7.454] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest
# Parameters: (algorithm = SHA-512, provider = SUN, size = 4096)

# Run progress: 73.08% complete, ETA 00:35:05
# Fork: 1 of 3
# Warmup Iteration   1: 7.678 us/op
# Warmup Iteration   2: 7.041 us/op
# Warmup Iteration   3: 7.426 us/op
# Warmup Iteration   4: 7.149 us/op
# Warmup Iteration   5: 7.137 us/op
Iteration   1: 7.141 us/op
Iteration   2: 7.133 us/op
Iteration   3: 7.135 us/op
Iteration   4: 7.132 us/op
Iteration   5: 7.130 us/op

# Run progress: 74.36% complete, ETA 00:33:24
# Fork: 2 of 3
# Warmup Iteration   1: 7.819 us/op
# Warmup Iteration   2: 7.072 us/op
# Warmup Iteration   3: 7.045 us/op
# Warmup Iteration   4: 7.044 us/op
# Warmup Iteration   5: 7.030 us/op
Iteration   1: 7.019 us/op
Iteration   2: 7.023 us/op
Iteration   3: 7.020 us/op
Iteration   4: 7.018 us/op
Iteration   5: 7.345 us/op

# Run progress: 75.64% complete, ETA 00:31:44
# Fork: 3 of 3
# Warmup Iteration   1: 8.142 us/op
# Warmup Iteration   2: 7.182 us/op
# Warmup Iteration   3: 7.154 us/op
# Warmup Iteration   4: 7.161 us/op
# Warmup Iteration   5: 7.129 us/op
Iteration   1: 7.128 us/op
Iteration   2: 7.130 us/op
Iteration   3: 7.123 us/op
Iteration   4: 7.110 us/op
Iteration   5: 7.117 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest":
  7.114 ±(99.9%) 0.086 us/op [Average]
  (min, avg, max) = (7.018, 7.114, 7.345), stdev = 0.081
  CI (99.9%): [7.027, 7.200] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest
# Parameters: (algorithm = SHA3-256, provider = DEFAULT, size = 4096)

# Run progress: 76.92% complete, ETA 00:30:04
# Fork: 1 of 3
# Warmup Iteration   1: 32.078 us/op
# Warmup Iteration   2: 28.616 us/op
# Warmup Iteration   3: 28.508 us/op
# Warmup Iteration   4: 28.501 us/op
# Warmup Iteration   5: 28.509 us/op
Iteration   1: 28.417 us/op
Iteration   2: 29.927 us/op
Iteration   3: 29.852 us/op
Iteration   4: 29.821 us/op
Iteration   5: 28.380 us/op

# Run progress: 78.21% complete, ETA 00:28:24
# Fork: 2 of 3
# Warmup Iteration   1: 33.572 us/op
# Warmup Iteration   2: 30.716 us/op
# Warmup Iteration   3: 30.251 us/op
# Warmup Iteration   4: 29.830 us/op
# Warmup Iteration   5: 29.800 us/op
Iteration   1: 29.749 us/op
Iteration   2: 29.786 us/op
Iteration   3: 28.900 us/op
Iteration   4: 28.992 us/op
Iteration   5: 28.999 us/op

# Run progress: 79.49% complete, ETA 00:26:43
# Fork: 3 of 3
# Warmup Iteration   1: 33.250 us/op
# Warmup Iteration   2: 29.941 us/op
# Warmup Iteration   3: 30.342 us/op
# Warmup Iteration   4: 30.199 us/op
# Warmup Iteration   5: 30.048 us/op
Iteration   1: 30.073 us/op
Iteration   2: 30.044 us/op
Iteration   3: 29.906 us/op
Iteration   4: 29.922 us/op
Iteration   5: 29.962 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest":
  29.515 ±(99.9%) 0.641 us/op [Average]
  (min, avg, max) = (28.380, 29.515, 30.073), stdev = 0.599
  CI (99.9%): [28.875, 30.156] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest
# Parameters: (algorithm = SHA3-256, provider = SUN, size = 4096)

# Run progress: 80.77% complete, ETA 00:25:03
# Fork: 1 of 3
# Warmup Iteration   1: 31.127 us/op
# Warmup Iteration   2: 28.639 us/op
# Warmup Iteration   3: 30.111 us/op
# Warmup Iteration   4: 29.919 us/op
# Warmup Iteration   5: 29.859 us/op
Iteration   1: 29.830 us/op
Iteration   2: 29.830 us/op
Iteration   3: 29.825 us/op
Iteration   4: 29.747 us/op
Iteration   5: 29.805 us/op

# Run progress: 82.05% complete, ETA 00:23:23
# Fork: 2 of 3
# Warmup Iteration   1: 31.122 us/op
# Warmup Iteration   2: 29.117 us/op
# Warmup Iteration   3: 29.962 us/op
# Warmup Iteration   4: 29.885 us/op
# Warmup Iteration   5: 29.831 us/op
Iteration   1: 29.858 us/op
Iteration   2: 29.799 us/op
Iteration   3: 29.815 us/op
Iteration   4: 29.797 us/op
Iteration   5: 29.789 us/op

# Run progress: 83.33% complete, ETA 00:21:43
# Fork: 3 of 3
# Warmup Iteration   1: 31.652 us/op
# Warmup Iteration   2: 29.123 us/op
# Warmup Iteration   3: 29.005 us/op
# Warmup Iteration   4: 29.008 us/op
# Warmup Iteration   5: 29.856 us/op
Iteration   1: 29.845 us/op
Iteration   2: 29.751 us/op
Iteration   3: 29.761 us/op
Iteration   4: 29.796 us/op
Iteration   5: 29.797 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest":
  29.803 ±(99.9%) 0.035 us/op [Average]
  (min, avg, max) = (29.747, 29.803, 29.858), stdev = 0.032
  CI (99.9%): [29.768, 29.838] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest
# Parameters: (algorithm = SHA3-384, provider = DEFAULT, size = 4096)

# Run progress: 84.62% complete, ETA 00:20:02
# Fork: 1 of 3
# Warmup Iteration   1: 41.957 us/op
# Warmup Iteration   2: 38.292 us/op
# Warmup Iteration   3: 37.840 us/op
# Warmup Iteration   4: 37.769 us/op
# Warmup Iteration   5: 37.718 us/op
Iteration   1: 37.587 us/op
Iteration   2: 37.548 us/op
Iteration   3: 37.552 us/op
Iteration   4: 37.594 us/op
Iteration   5: 37.538 us/op

# Run progress: 85.90% complete, ETA 00:18:22
# Fork: 2 of 3
# Warmup Iteration   1: 40.161 us/op
# Warmup Iteration   2: 36.583 us/op
# Warmup Iteration   3: 36.404 us/op
# Warmup Iteration   4: 36.426 us/op
# Warmup Iteration   5: 36.370 us/op
Iteration   1: 36.381 us/op
Iteration   2: 36.359 us/op
Iteration   3: 36.428 us/op
Iteration   4: 36.427 us/op
Iteration   5: 36.474 us/op

# Run progress: 87.18% complete, ETA 00:16:42
# Fork: 3 of 3
# Warmup Iteration   1: 40.348 us/op
# Warmup Iteration   2: 38.304 us/op
# Warmup Iteration   3: 37.916 us/op
# Warmup Iteration   4: 37.887 us/op
# Warmup Iteration   5: 37.792 us/op
Iteration   1: 37.759 us/op
Iteration   2: 37.732 us/op
Iteration   3: 37.731 us/op
Iteration   4: 37.692 us/op
Iteration   5: 37.776 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest":
  37.239 ±(99.9%) 0.651 us/op [Average]
  (min, avg, max) = (36.359, 37.239, 37.776), stdev = 0.609
  CI (99.9%): [36.588, 37.890] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest
# Parameters: (algorithm = SHA3-384, provider = SUN, size = 4096)

# Run progress: 88.46% complete, ETA 00:15:02
# Fork: 1 of 3
# Warmup Iteration   1: 40.099 us/op
# Warmup Iteration   2: 37.766 us/op
# Warmup Iteration   3: 37.446 us/op
# Warmup Iteration   4: 37.362 us/op
# Warmup Iteration   5: 37.378 us/op
Iteration   1: 37.399 us/op
Iteration   2: 37.391 us/op
Iteration   3: 36.355 us/op
Iteration   4: 36.331 us/op
Iteration   5: 36.302 us/op

# Run progress: 89.74% complete, ETA 00:13:21
# Fork: 2 of 3
# Warmup Iteration   1: 40.664 us/op
# Warmup Iteration   2: 36.025 us/op
# Warmup Iteration   3: 35.886 us/op
# Warmup Iteration   4: 35.789 us/op
# Warmup Iteration   5: 35.859 us/op
Iteration   1: 35.806 us/op
Iteration   2: 35.792 us/op
Iteration   3: 35.756 us/op
Iteration   4: 35.849 us/op
Iteration   5: 35.736 us/op

# Run progress: 91.03% complete, ETA 00:11:41
# Fork: 3 of 3
# Warmup Iteration   1: 40.677 us/op
# Warmup Iteration   2: 36.045 us/op
# Warmup Iteration   3: 35.856 us/op
# Warmup Iteration   4: 35.777 us/op
# Warmup Iteration   5: 35.762 us/op
Iteration   1: 36.553 us/op
Iteration   2: 36.524 us/op
Iteration   3: 36.447 us/op
Iteration   4: 36.478 us/op
Iteration   5: 36.435 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest":
  36.344 ±(99.9%) 0.563 us/op [Average]
  (min, avg, max) = (35.736, 36.344, 37.399), stdev = 0.526
  CI (99.9%): [35.781, 36.907] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest
# Parameters: (algorithm = SHA3-224, provider = DEFAULT, size = 4096)

# Run progress: 92.31% complete, ETA 00:10:01
# Fork: 1 of 3
# Warmup Iteration   1: 29.572 us/op
# Warmup Iteration   2: 28.224 us/op
# Warmup Iteration   3: 28.282 us/op
# Warmup Iteration   4: 28.117 us/op
# Warmup Iteration   5: 28.084 us/op
Iteration   1: 28.077 us/op
Iteration   2: 28.050 us/op
Iteration   3: 28.086 us/op
Iteration   4: 28.070 us/op
Iteration   5: 28.110 us/op

# Run progress: 93.59% complete, ETA 00:08:21
# Fork: 2 of 3
# Warmup Iteration   1: 29.207 us/op
# Warmup Iteration   2: 26.862 us/op
# Warmup Iteration   3: 26.820 us/op
# Warmup Iteration   4: 26.894 us/op
# Warmup Iteration   5: 26.668 us/op
Iteration   1: 26.882 us/op
Iteration   2: 26.829 us/op
Iteration   3: 26.873 us/op
Iteration   4: 26.822 us/op
Iteration   5: 26.739 us/op

# Run progress: 94.87% complete, ETA 00:06:40
# Fork: 3 of 3
# Warmup Iteration   1: 30.967 us/op
# Warmup Iteration   2: 28.675 us/op
# Warmup Iteration   3: 26.763 us/op
# Warmup Iteration   4: 26.827 us/op
# Warmup Iteration   5: 26.866 us/op
Iteration   1: 26.815 us/op
Iteration   2: 28.777 us/op
Iteration   3: 28.637 us/op
Iteration   4: 28.509 us/op
Iteration   5: 28.483 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest":
  27.717 ±(99.9%) 0.838 us/op [Average]
  (min, avg, max) = (26.739, 27.717, 28.777), stdev = 0.784
  CI (99.9%): [26.879, 28.556] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest
# Parameters: (algorithm = SHA3-224, provider = SUN, size = 4096)

# Run progress: 96.15% complete, ETA 00:05:00
# Fork: 1 of 3
# Warmup Iteration   1: 29.648 us/op
# Warmup Iteration   2: 27.466 us/op
# Warmup Iteration   3: 27.312 us/op
# Warmup Iteration   4: 27.291 us/op
# Warmup Iteration   5: 28.580 us/op
Iteration   1: 28.383 us/op
Iteration   2: 28.289 us/op
Iteration   3: 28.237 us/op
Iteration   4: 28.298 us/op
Iteration   5: 28.192 us/op

# Run progress: 97.44% complete, ETA 00:03:20
# Fork: 2 of 3
# Warmup Iteration   1: 31.415 us/op
# Warmup Iteration   2: 28.615 us/op
# Warmup Iteration   3: 28.487 us/op
# Warmup Iteration   4: 28.389 us/op
# Warmup Iteration   5: 28.332 us/op
Iteration   1: 28.405 us/op
Iteration   2: 28.423 us/op
Iteration   3: 28.341 us/op
Iteration   4: 28.246 us/op
Iteration   5: 28.258 us/op

# Run progress: 98.72% complete, ETA 00:01:40
# Fork: 3 of 3
# Warmup Iteration   1: 30.868 us/op
# Warmup Iteration   2: 28.239 us/op
# Warmup Iteration   3: 26.671 us/op
# Warmup Iteration   4: 26.828 us/op
# Warmup Iteration   5: 26.837 us/op
Iteration   1: 26.838 us/op
Iteration   2: 26.804 us/op
Iteration   3: 26.867 us/op
Iteration   4: 26.838 us/op
Iteration   5: 26.877 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest":
  27.820 ±(99.9%) 0.766 us/op [Average]
  (min, avg, max) = (26.804, 27.820, 28.423), stdev = 0.716
  CI (99.9%): [27.054, 28.586] (assumes normal distribution)


# Run complete. Total time: 02:10:18

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                              (algorithm)  (provider)  (size)  Mode  Cnt    Score   Error  Units
MessageDigestBenchmark.message_digest          MD2     DEFAULT    4096  avgt   15  351.460 ± 0.335  us/op
MessageDigestBenchmark.message_digest          MD2         SUN    4096  avgt   15  352.421 ± 1.839  us/op
MessageDigestBenchmark.message_digest          MD5     DEFAULT    4096  avgt   15    7.780 ± 0.016  us/op
MessageDigestBenchmark.message_digest          MD5         SUN    4096  avgt   15    7.788 ± 0.011  us/op
MessageDigestBenchmark.message_digest      SHA-224     DEFAULT    4096  avgt   15    9.771 ± 0.232  us/op
MessageDigestBenchmark.message_digest      SHA-224         SUN    4096  avgt   15    9.697 ± 0.160  us/op
MessageDigestBenchmark.message_digest  SHA-512/224     DEFAULT    4096  avgt   15    7.282 ± 0.206  us/op
MessageDigestBenchmark.message_digest  SHA-512/224         SUN    4096  avgt   15    7.272 ± 0.137  us/op
MessageDigestBenchmark.message_digest      SHA-256     DEFAULT    4096  avgt   15    9.691 ± 0.264  us/op
MessageDigestBenchmark.message_digest      SHA-256         SUN    4096  avgt   15    9.701 ± 0.034  us/op
MessageDigestBenchmark.message_digest      SHA-384     DEFAULT    4096  avgt   15    7.172 ± 0.174  us/op
MessageDigestBenchmark.message_digest      SHA-384         SUN    4096  avgt   15    7.178 ± 0.187  us/op
MessageDigestBenchmark.message_digest     SHA3-512     DEFAULT    4096  avgt   15   51.026 ± 1.428  us/op
MessageDigestBenchmark.message_digest     SHA3-512         SUN    4096  avgt   15   51.440 ± 0.869  us/op
MessageDigestBenchmark.message_digest  SHA-512/256     DEFAULT    4096  avgt   15    7.232 ± 0.178  us/op
MessageDigestBenchmark.message_digest  SHA-512/256         SUN    4096  avgt   15    7.081 ± 0.045  us/op
MessageDigestBenchmark.message_digest          SHA     DEFAULT    4096  avgt   15   14.632 ± 0.316  us/op
MessageDigestBenchmark.message_digest          SHA         SUN    4096  avgt   15   14.732 ± 0.259  us/op
MessageDigestBenchmark.message_digest      SHA-512     DEFAULT    4096  avgt   15    7.263 ± 0.191  us/op
MessageDigestBenchmark.message_digest      SHA-512         SUN    4096  avgt   15    7.114 ± 0.086  us/op
MessageDigestBenchmark.message_digest     SHA3-256     DEFAULT    4096  avgt   15   29.515 ± 0.641  us/op
MessageDigestBenchmark.message_digest     SHA3-256         SUN    4096  avgt   15   29.803 ± 0.035  us/op
MessageDigestBenchmark.message_digest     SHA3-384     DEFAULT    4096  avgt   15   37.239 ± 0.651  us/op
MessageDigestBenchmark.message_digest     SHA3-384         SUN    4096  avgt   15   36.344 ± 0.563  us/op
MessageDigestBenchmark.message_digest     SHA3-224     DEFAULT    4096  avgt   15   27.717 ± 0.838  us/op
MessageDigestBenchmark.message_digest     SHA3-224         SUN    4096  avgt   15   27.820 ± 0.766  us/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_graal_jit/MessageDigestBenchmark.json
Running java -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler -jar benchmarks/target/benchmarks.jar .*RandomGeneratorBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_graal_jit/RandomGeneratorBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.random_doubles_array
# Parameters: (size = 128)

# Run progress: 0.00% complete, ETA 02:40:00
# Fork: 1 of 3
# Warmup Iteration   1: 2676.011 ns/op
# Warmup Iteration   2: 2432.375 ns/op
# Warmup Iteration   3: 2419.295 ns/op
# Warmup Iteration   4: 2418.947 ns/op
# Warmup Iteration   5: 2419.213 ns/op
Iteration   1: 2409.858 ns/op
Iteration   2: 2420.540 ns/op
Iteration   3: 2418.309 ns/op
Iteration   4: 2416.487 ns/op
Iteration   5: 2419.755 ns/op

# Run progress: 1.04% complete, ETA 02:38:49
# Fork: 2 of 3
# Warmup Iteration   1: 2598.008 ns/op
# Warmup Iteration   2: 2422.229 ns/op
# Warmup Iteration   3: 2418.955 ns/op
# Warmup Iteration   4: 2422.765 ns/op
# Warmup Iteration   5: 2419.473 ns/op
Iteration   1: 2418.778 ns/op
Iteration   2: 2423.614 ns/op
Iteration   3: 2416.121 ns/op
Iteration   4: 2419.168 ns/op
Iteration   5: 2416.941 ns/op

# Run progress: 2.08% complete, ETA 02:37:06
# Fork: 3 of 3
# Warmup Iteration   1: 2594.453 ns/op
# Warmup Iteration   2: 2409.998 ns/op
# Warmup Iteration   3: 2416.706 ns/op
# Warmup Iteration   4: 2416.876 ns/op
# Warmup Iteration   5: 2416.733 ns/op
Iteration   1: 2418.289 ns/op
Iteration   2: 2418.406 ns/op
Iteration   3: 2414.433 ns/op
Iteration   4: 2419.292 ns/op
Iteration   5: 2418.435 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.random_doubles_array":
  2417.895 ±(99.9%) 3.270 ns/op [Average]
  (min, avg, max) = (2409.858, 2417.895, 2423.614), stdev = 3.059
  CI (99.9%): [2414.625, 2421.165] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.random_ints_array
# Parameters: (size = 128)

# Run progress: 3.13% complete, ETA 02:35:24
# Fork: 1 of 3
# Warmup Iteration   1: 1298.794 ns/op
# Warmup Iteration   2: 1195.195 ns/op
# Warmup Iteration   3: 1197.505 ns/op
# Warmup Iteration   4: 1197.194 ns/op
# Warmup Iteration   5: 1197.360 ns/op
Iteration   1: 1197.329 ns/op
Iteration   2: 1196.294 ns/op
Iteration   3: 1197.096 ns/op
Iteration   4: 1196.010 ns/op
Iteration   5: 1193.908 ns/op

# Run progress: 4.17% complete, ETA 02:33:44
# Fork: 2 of 3
# Warmup Iteration   1: 1289.809 ns/op
# Warmup Iteration   2: 1194.259 ns/op
# Warmup Iteration   3: 1194.440 ns/op
# Warmup Iteration   4: 1194.231 ns/op
# Warmup Iteration   5: 1195.805 ns/op
Iteration   1: 1196.116 ns/op
Iteration   2: 1194.467 ns/op
Iteration   3: 1195.665 ns/op
Iteration   4: 1191.984 ns/op
Iteration   5: 1196.484 ns/op

# Run progress: 5.21% complete, ETA 02:32:03
# Fork: 3 of 3
# Warmup Iteration   1: 1288.964 ns/op
# Warmup Iteration   2: 1195.679 ns/op
# Warmup Iteration   3: 1196.200 ns/op
# Warmup Iteration   4: 1197.975 ns/op
# Warmup Iteration   5: 1191.076 ns/op
Iteration   1: 1196.397 ns/op
Iteration   2: 1195.029 ns/op
Iteration   3: 1196.235 ns/op
Iteration   4: 1196.202 ns/op
Iteration   5: 1198.832 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.random_ints_array":
  1195.870 ±(99.9%) 1.696 ns/op [Average]
  (min, avg, max) = (1191.984, 1195.870, 1198.832), stdev = 1.586
  CI (99.9%): [1194.174, 1197.566] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.random_longs_array
# Parameters: (size = 128)

# Run progress: 6.25% complete, ETA 02:30:23
# Fork: 1 of 3
# Warmup Iteration   1: 2588.971 ns/op
# Warmup Iteration   2: 2428.805 ns/op
# Warmup Iteration   3: 2421.628 ns/op
# Warmup Iteration   4: 2418.399 ns/op
# Warmup Iteration   5: 2417.349 ns/op
Iteration   1: 2410.762 ns/op
Iteration   2: 2420.475 ns/op
Iteration   3: 2420.317 ns/op
Iteration   4: 2416.472 ns/op
Iteration   5: 2417.356 ns/op

# Run progress: 7.29% complete, ETA 02:28:43
# Fork: 2 of 3
# Warmup Iteration   1: 2605.774 ns/op
# Warmup Iteration   2: 2427.419 ns/op
# Warmup Iteration   3: 2426.471 ns/op
# Warmup Iteration   4: 2425.956 ns/op
# Warmup Iteration   5: 2425.429 ns/op
Iteration   1: 2420.330 ns/op
Iteration   2: 2423.308 ns/op
Iteration   3: 2423.564 ns/op
Iteration   4: 2427.165 ns/op
Iteration   5: 2425.250 ns/op

# Run progress: 8.33% complete, ETA 02:27:03
# Fork: 3 of 3
# Warmup Iteration   1: 2607.278 ns/op
# Warmup Iteration   2: 2426.943 ns/op
# Warmup Iteration   3: 2419.586 ns/op
# Warmup Iteration   4: 2423.399 ns/op
# Warmup Iteration   5: 2427.995 ns/op
Iteration   1: 2424.710 ns/op
Iteration   2: 2429.828 ns/op
Iteration   3: 2428.820 ns/op
Iteration   4: 2427.973 ns/op
Iteration   5: 2430.808 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.random_longs_array":
  2423.143 ±(99.9%) 5.970 ns/op [Average]
  (min, avg, max) = (2410.762, 2423.143, 2430.808), stdev = 5.584
  CI (99.9%): [2417.172, 2429.113] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.random_next_boolean
# Parameters: (size = 128)

# Run progress: 9.38% complete, ETA 02:25:22
# Fork: 1 of 3
# Warmup Iteration   1: 9.390 ns/op
# Warmup Iteration   2: 9.115 ns/op
# Warmup Iteration   3: 9.084 ns/op
# Warmup Iteration   4: 9.065 ns/op
# Warmup Iteration   5: 9.039 ns/op
Iteration   1: 9.065 ns/op
Iteration   2: 9.095 ns/op
Iteration   3: 9.049 ns/op
Iteration   4: 9.070 ns/op
Iteration   5: 9.021 ns/op

# Run progress: 10.42% complete, ETA 02:23:41
# Fork: 2 of 3
# Warmup Iteration   1: 9.408 ns/op
# Warmup Iteration   2: 9.160 ns/op
# Warmup Iteration   3: 9.115 ns/op
# Warmup Iteration   4: 9.089 ns/op
# Warmup Iteration   5: 9.100 ns/op
Iteration   1: 8.950 ns/op
Iteration   2: 9.042 ns/op
Iteration   3: 9.002 ns/op
Iteration   4: 9.027 ns/op
Iteration   5: 8.895 ns/op

# Run progress: 11.46% complete, ETA 02:22:01
# Fork: 3 of 3
# Warmup Iteration   1: 9.669 ns/op
# Warmup Iteration   2: 8.994 ns/op
# Warmup Iteration   3: 9.196 ns/op
# Warmup Iteration   4: 9.168 ns/op
# Warmup Iteration   5: 9.091 ns/op
Iteration   1: 9.098 ns/op
Iteration   2: 8.977 ns/op
Iteration   3: 8.940 ns/op
Iteration   4: 8.932 ns/op
Iteration   5: 8.926 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.random_next_boolean":
  9.006 ±(99.9%) 0.070 ns/op [Average]
  (min, avg, max) = (8.895, 9.006, 9.098), stdev = 0.066
  CI (99.9%): [8.935, 9.076] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.random_next_bytes_array
# Parameters: (size = 128)

# Run progress: 12.50% complete, ETA 02:20:21
# Fork: 1 of 3
# Warmup Iteration   1: 310.018 ns/op
# Warmup Iteration   2: 293.084 ns/op
# Warmup Iteration   3: 291.918 ns/op
# Warmup Iteration   4: 292.815 ns/op
# Warmup Iteration   5: 292.922 ns/op
Iteration   1: 292.765 ns/op
Iteration   2: 289.455 ns/op
Iteration   3: 290.535 ns/op
Iteration   4: 291.680 ns/op
Iteration   5: 291.833 ns/op

# Run progress: 13.54% complete, ETA 02:18:41
# Fork: 2 of 3
# Warmup Iteration   1: 302.665 ns/op
# Warmup Iteration   2: 289.892 ns/op
# Warmup Iteration   3: 289.158 ns/op
# Warmup Iteration   4: 288.971 ns/op
# Warmup Iteration   5: 289.252 ns/op
Iteration   1: 288.855 ns/op
Iteration   2: 289.254 ns/op
Iteration   3: 288.845 ns/op
Iteration   4: 289.643 ns/op
Iteration   5: 289.213 ns/op

# Run progress: 14.58% complete, ETA 02:17:00
# Fork: 3 of 3
# Warmup Iteration   1: 303.540 ns/op
# Warmup Iteration   2: 290.068 ns/op
# Warmup Iteration   3: 287.515 ns/op
# Warmup Iteration   4: 291.402 ns/op
# Warmup Iteration   5: 291.284 ns/op
Iteration   1: 290.865 ns/op
Iteration   2: 289.011 ns/op
Iteration   3: 289.155 ns/op
Iteration   4: 289.231 ns/op
Iteration   5: 289.100 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.random_next_bytes_array":
  289.963 ±(99.9%) 1.346 ns/op [Average]
  (min, avg, max) = (288.845, 289.963, 292.765), stdev = 1.259
  CI (99.9%): [288.617, 291.308] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.random_next_double
# Parameters: (size = 128)

# Run progress: 15.63% complete, ETA 02:15:20
# Fork: 1 of 3
# Warmup Iteration   1: 21.227 ns/op
# Warmup Iteration   2: 18.310 ns/op
# Warmup Iteration   3: 17.989 ns/op
# Warmup Iteration   4: 18.038 ns/op
# Warmup Iteration   5: 18.046 ns/op
Iteration   1: 18.046 ns/op
Iteration   2: 18.055 ns/op
Iteration   3: 18.049 ns/op
Iteration   4: 18.051 ns/op
Iteration   5: 18.050 ns/op

# Run progress: 16.67% complete, ETA 02:13:40
# Fork: 2 of 3
# Warmup Iteration   1: 19.110 ns/op
# Warmup Iteration   2: 18.301 ns/op
# Warmup Iteration   3: 18.037 ns/op
# Warmup Iteration   4: 18.042 ns/op
# Warmup Iteration   5: 17.954 ns/op
Iteration   1: 18.006 ns/op
Iteration   2: 18.047 ns/op
Iteration   3: 18.039 ns/op
Iteration   4: 18.052 ns/op
Iteration   5: 18.032 ns/op

# Run progress: 17.71% complete, ETA 02:12:00
# Fork: 3 of 3
# Warmup Iteration   1: 19.168 ns/op
# Warmup Iteration   2: 18.358 ns/op
# Warmup Iteration   3: 18.059 ns/op
# Warmup Iteration   4: 18.050 ns/op
# Warmup Iteration   5: 17.990 ns/op
Iteration   1: 18.051 ns/op
Iteration   2: 17.991 ns/op
Iteration   3: 17.996 ns/op
Iteration   4: 17.916 ns/op
Iteration   5: 18.025 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.random_next_double":
  18.027 ±(99.9%) 0.040 ns/op [Average]
  (min, avg, max) = (17.916, 18.027, 18.055), stdev = 0.037
  CI (99.9%): [17.987, 18.067] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.random_next_float
# Parameters: (size = 128)

# Run progress: 18.75% complete, ETA 02:10:19
# Fork: 1 of 3
# Warmup Iteration   1: 10.525 ns/op
# Warmup Iteration   2: 9.984 ns/op
# Warmup Iteration   3: 9.414 ns/op
# Warmup Iteration   4: 9.929 ns/op
# Warmup Iteration   5: 9.893 ns/op
Iteration   1: 9.839 ns/op
Iteration   2: 9.902 ns/op
Iteration   3: 9.893 ns/op
Iteration   4: 9.701 ns/op
Iteration   5: 9.734 ns/op

# Run progress: 19.79% complete, ETA 02:08:39
# Fork: 2 of 3
# Warmup Iteration   1: 9.959 ns/op
# Warmup Iteration   2: 9.354 ns/op
# Warmup Iteration   3: 9.291 ns/op
# Warmup Iteration   4: 9.275 ns/op
# Warmup Iteration   5: 9.316 ns/op
Iteration   1: 9.303 ns/op
Iteration   2: 9.321 ns/op
Iteration   3: 9.311 ns/op
Iteration   4: 9.301 ns/op
Iteration   5: 9.314 ns/op

# Run progress: 20.83% complete, ETA 02:06:59
# Fork: 3 of 3
# Warmup Iteration   1: 10.118 ns/op
# Warmup Iteration   2: 9.575 ns/op
# Warmup Iteration   3: 9.463 ns/op
# Warmup Iteration   4: 9.450 ns/op
# Warmup Iteration   5: 9.459 ns/op
Iteration   1: 9.471 ns/op
Iteration   2: 9.475 ns/op
Iteration   3: 9.467 ns/op
Iteration   4: 9.472 ns/op
Iteration   5: 9.791 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.random_next_float":
  9.553 ±(99.9%) 0.248 ns/op [Average]
  (min, avg, max) = (9.301, 9.553, 9.902), stdev = 0.232
  CI (99.9%): [9.305, 9.801] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.random_next_int
# Parameters: (size = 128)

# Run progress: 21.88% complete, ETA 02:05:18
# Fork: 1 of 3
# Warmup Iteration   1: 9.412 ns/op
# Warmup Iteration   2: 8.971 ns/op
# Warmup Iteration   3: 9.109 ns/op
# Warmup Iteration   4: 9.093 ns/op
# Warmup Iteration   5: 9.100 ns/op
Iteration   1: 9.121 ns/op
Iteration   2: 8.962 ns/op
Iteration   3: 9.062 ns/op
Iteration   4: 9.044 ns/op
Iteration   5: 9.021 ns/op

# Run progress: 22.92% complete, ETA 02:03:38
# Fork: 2 of 3
# Warmup Iteration   1: 9.444 ns/op
# Warmup Iteration   2: 8.982 ns/op
# Warmup Iteration   3: 8.953 ns/op
# Warmup Iteration   4: 8.922 ns/op
# Warmup Iteration   5: 8.946 ns/op
Iteration   1: 8.950 ns/op
Iteration   2: 8.954 ns/op
Iteration   3: 8.952 ns/op
Iteration   4: 8.946 ns/op
Iteration   5: 8.950 ns/op

# Run progress: 23.96% complete, ETA 02:01:58
# Fork: 3 of 3
# Warmup Iteration   1: 9.389 ns/op
# Warmup Iteration   2: 9.175 ns/op
# Warmup Iteration   3: 9.108 ns/op
# Warmup Iteration   4: 9.076 ns/op
# Warmup Iteration   5: 9.043 ns/op
Iteration   1: 9.063 ns/op
Iteration   2: 9.057 ns/op
Iteration   3: 9.048 ns/op
Iteration   4: 9.053 ns/op
Iteration   5: 9.068 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.random_next_int":
  9.017 ±(99.9%) 0.062 ns/op [Average]
  (min, avg, max) = (8.946, 9.017, 9.121), stdev = 0.058
  CI (99.9%): [8.955, 9.079] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.random_next_long
# Parameters: (size = 128)

# Run progress: 25.00% complete, ETA 02:00:18
# Fork: 1 of 3
# Warmup Iteration   1: 19.102 ns/op
# Warmup Iteration   2: 18.234 ns/op
# Warmup Iteration   3: 18.158 ns/op
# Warmup Iteration   4: 18.104 ns/op
# Warmup Iteration   5: 18.155 ns/op
Iteration   1: 18.151 ns/op
Iteration   2: 18.164 ns/op
Iteration   3: 18.144 ns/op
Iteration   4: 18.159 ns/op
Iteration   5: 18.161 ns/op

# Run progress: 26.04% complete, ETA 01:58:37
# Fork: 2 of 3
# Warmup Iteration   1: 18.995 ns/op
# Warmup Iteration   2: 18.274 ns/op
# Warmup Iteration   3: 18.175 ns/op
# Warmup Iteration   4: 18.152 ns/op
# Warmup Iteration   5: 18.163 ns/op
Iteration   1: 18.168 ns/op
Iteration   2: 18.161 ns/op
Iteration   3: 18.166 ns/op
Iteration   4: 18.167 ns/op
Iteration   5: 18.163 ns/op

# Run progress: 27.08% complete, ETA 01:56:57
# Fork: 3 of 3
# Warmup Iteration   1: 19.145 ns/op
# Warmup Iteration   2: 18.250 ns/op
# Warmup Iteration   3: 18.121 ns/op
# Warmup Iteration   4: 18.164 ns/op
# Warmup Iteration   5: 18.163 ns/op
Iteration   1: 18.131 ns/op
Iteration   2: 18.118 ns/op
Iteration   3: 18.158 ns/op
Iteration   4: 18.144 ns/op
Iteration   5: 18.172 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.random_next_long":
  18.155 ±(99.9%) 0.016 ns/op [Average]
  (min, avg, max) = (18.118, 18.155, 18.172), stdev = 0.015
  CI (99.9%): [18.139, 18.171] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.splittable_random_doubles_array
# Parameters: (size = 128)

# Run progress: 28.13% complete, ETA 01:55:17
# Fork: 1 of 3
# Warmup Iteration   1: 410.310 ns/op
# Warmup Iteration   2: 375.377 ns/op
# Warmup Iteration   3: 375.805 ns/op
# Warmup Iteration   4: 371.619 ns/op
# Warmup Iteration   5: 375.353 ns/op
Iteration   1: 374.963 ns/op
Iteration   2: 378.339 ns/op
Iteration   3: 373.647 ns/op
Iteration   4: 373.218 ns/op
Iteration   5: 376.062 ns/op

# Run progress: 29.17% complete, ETA 01:53:37
# Fork: 2 of 3
# Warmup Iteration   1: 401.406 ns/op
# Warmup Iteration   2: 359.751 ns/op
# Warmup Iteration   3: 363.620 ns/op
# Warmup Iteration   4: 359.418 ns/op
# Warmup Iteration   5: 358.000 ns/op
Iteration   1: 366.647 ns/op
Iteration   2: 365.527 ns/op
Iteration   3: 360.946 ns/op
Iteration   4: 359.771 ns/op
Iteration   5: 360.477 ns/op

# Run progress: 30.21% complete, ETA 01:51:56
# Fork: 3 of 3
# Warmup Iteration   1: 408.903 ns/op
# Warmup Iteration   2: 369.350 ns/op
# Warmup Iteration   3: 369.806 ns/op
# Warmup Iteration   4: 365.173 ns/op
# Warmup Iteration   5: 364.747 ns/op
Iteration   1: 370.323 ns/op
Iteration   2: 369.749 ns/op
Iteration   3: 365.870 ns/op
Iteration   4: 366.582 ns/op
Iteration   5: 367.322 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.splittable_random_doubles_array":
  368.629 ±(99.9%) 6.201 ns/op [Average]
  (min, avg, max) = (359.771, 368.629, 378.339), stdev = 5.800
  CI (99.9%): [362.429, 374.830] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.splittable_random_ints_array
# Parameters: (size = 128)

# Run progress: 31.25% complete, ETA 01:50:16
# Fork: 1 of 3
# Warmup Iteration   1: 289.677 ns/op
# Warmup Iteration   2: 256.682 ns/op
# Warmup Iteration   3: 258.420 ns/op
# Warmup Iteration   4: 254.658 ns/op
# Warmup Iteration   5: 256.051 ns/op
Iteration   1: 253.637 ns/op
Iteration   2: 257.423 ns/op
Iteration   3: 256.004 ns/op
Iteration   4: 259.933 ns/op
Iteration   5: 255.672 ns/op

# Run progress: 32.29% complete, ETA 01:48:36
# Fork: 2 of 3
# Warmup Iteration   1: 270.920 ns/op
# Warmup Iteration   2: 263.313 ns/op
# Warmup Iteration   3: 263.026 ns/op
# Warmup Iteration   4: 263.242 ns/op
# Warmup Iteration   5: 264.697 ns/op
Iteration   1: 268.424 ns/op
Iteration   2: 265.961 ns/op
Iteration   3: 266.221 ns/op
Iteration   4: 263.877 ns/op
Iteration   5: 264.942 ns/op

# Run progress: 33.33% complete, ETA 01:47:16
# Fork: 3 of 3
# Warmup Iteration   1: 285.034 ns/op
# Warmup Iteration   2: 258.682 ns/op
# Warmup Iteration   3: 260.114 ns/op
# Warmup Iteration   4: 257.152 ns/op
# Warmup Iteration   5: 254.679 ns/op
Iteration   1: 259.368 ns/op
Iteration   2: 256.935 ns/op
Iteration   3: 256.089 ns/op
Iteration   4: 258.770 ns/op
Iteration   5: 255.077 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.splittable_random_ints_array":
  259.889 ±(99.9%) 5.088 ns/op [Average]
  (min, avg, max) = (253.637, 259.889, 268.424), stdev = 4.760
  CI (99.9%): [254.800, 264.977] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.splittable_random_longs_array
# Parameters: (size = 128)

# Run progress: 34.38% complete, ETA 01:45:34
# Fork: 1 of 3
# Warmup Iteration   1: 356.934 ns/op
# Warmup Iteration   2: 327.519 ns/op
# Warmup Iteration   3: 328.789 ns/op
# Warmup Iteration   4: 323.724 ns/op
# Warmup Iteration   5: 325.101 ns/op
Iteration   1: 325.946 ns/op
Iteration   2: 326.620 ns/op
Iteration   3: 327.235 ns/op
Iteration   4: 329.546 ns/op
Iteration   5: 324.290 ns/op

# Run progress: 35.42% complete, ETA 01:43:53
# Fork: 2 of 3
# Warmup Iteration   1: 362.875 ns/op
# Warmup Iteration   2: 330.091 ns/op
# Warmup Iteration   3: 327.583 ns/op
# Warmup Iteration   4: 325.954 ns/op
# Warmup Iteration   5: 329.670 ns/op
Iteration   1: 328.372 ns/op
Iteration   2: 326.913 ns/op
Iteration   3: 324.495 ns/op
Iteration   4: 324.425 ns/op
Iteration   5: 326.852 ns/op

# Run progress: 36.46% complete, ETA 01:42:12
# Fork: 3 of 3
# Warmup Iteration   1: 359.992 ns/op
# Warmup Iteration   2: 326.921 ns/op
# Warmup Iteration   3: 327.698 ns/op
# Warmup Iteration   4: 320.091 ns/op
# Warmup Iteration   5: 325.544 ns/op
Iteration   1: 324.039 ns/op
Iteration   2: 318.898 ns/op
Iteration   3: 327.223 ns/op
Iteration   4: 324.874 ns/op
Iteration   5: 324.409 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.splittable_random_longs_array":
  325.609 ±(99.9%) 2.659 ns/op [Average]
  (min, avg, max) = (318.898, 325.609, 329.546), stdev = 2.488
  CI (99.9%): [322.950, 328.268] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.splittable_random_next_boolean
# Parameters: (size = 128)

# Run progress: 37.50% complete, ETA 01:40:31
# Fork: 1 of 3
# Warmup Iteration   1: 4.081 ns/op
# Warmup Iteration   2: 3.808 ns/op
# Warmup Iteration   3: 3.749 ns/op
# Warmup Iteration   4: 3.753 ns/op
# Warmup Iteration   5: 3.858 ns/op
Iteration   1: 3.851 ns/op
Iteration   2: 3.851 ns/op
Iteration   3: 4.047 ns/op
Iteration   4: 4.011 ns/op
Iteration   5: 4.001 ns/op

# Run progress: 38.54% complete, ETA 01:38:50
# Fork: 2 of 3
# Warmup Iteration   1: 4.200 ns/op
# Warmup Iteration   2: 3.852 ns/op
# Warmup Iteration   3: 3.835 ns/op
# Warmup Iteration   4: 3.837 ns/op
# Warmup Iteration   5: 3.977 ns/op
Iteration   1: 3.956 ns/op
Iteration   2: 3.994 ns/op
Iteration   3: 3.988 ns/op
Iteration   4: 3.993 ns/op
Iteration   5: 3.985 ns/op

# Run progress: 39.58% complete, ETA 01:37:09
# Fork: 3 of 3
# Warmup Iteration   1: 4.329 ns/op
# Warmup Iteration   2: 3.836 ns/op
# Warmup Iteration   3: 3.820 ns/op
# Warmup Iteration   4: 3.818 ns/op
# Warmup Iteration   5: 3.957 ns/op
Iteration   1: 3.956 ns/op
Iteration   2: 3.945 ns/op
Iteration   3: 3.815 ns/op
Iteration   4: 3.824 ns/op
Iteration   5: 3.963 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.splittable_random_next_boolean":
  3.945 ±(99.9%) 0.079 ns/op [Average]
  (min, avg, max) = (3.815, 3.945, 4.047), stdev = 0.074
  CI (99.9%): [3.867, 4.024] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.splittable_random_next_bytes_array
# Parameters: (size = 128)

# Run progress: 40.63% complete, ETA 01:35:28
# Fork: 1 of 3
# Warmup Iteration   1: 61.894 ns/op
# Warmup Iteration   2: 63.922 ns/op
# Warmup Iteration   3: 62.341 ns/op
# Warmup Iteration   4: 62.076 ns/op
# Warmup Iteration   5: 62.012 ns/op
Iteration   1: 61.987 ns/op
Iteration   2: 59.816 ns/op
Iteration   3: 60.237 ns/op
Iteration   4: 60.069 ns/op
Iteration   5: 60.087 ns/op

# Run progress: 41.67% complete, ETA 01:33:48
# Fork: 2 of 3
# Warmup Iteration   1: 63.188 ns/op
# Warmup Iteration   2: 63.376 ns/op
# Warmup Iteration   3: 62.084 ns/op
# Warmup Iteration   4: 62.046 ns/op
# Warmup Iteration   5: 61.987 ns/op
Iteration   1: 58.040 ns/op
Iteration   2: 58.091 ns/op
Iteration   3: 62.209 ns/op
Iteration   4: 59.633 ns/op
Iteration   5: 62.023 ns/op

# Run progress: 42.71% complete, ETA 01:32:07
# Fork: 3 of 3
# Warmup Iteration   1: 65.058 ns/op
# Warmup Iteration   2: 61.475 ns/op
# Warmup Iteration   3: 60.397 ns/op
# Warmup Iteration   4: 60.224 ns/op
# Warmup Iteration   5: 59.948 ns/op
Iteration   1: 62.064 ns/op
Iteration   2: 58.040 ns/op
Iteration   3: 58.960 ns/op
Iteration   4: 59.997 ns/op
Iteration   5: 62.657 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.splittable_random_next_bytes_array":
  60.261 ±(99.9%) 1.711 ns/op [Average]
  (min, avg, max) = (58.040, 60.261, 62.657), stdev = 1.601
  CI (99.9%): [58.550, 61.972] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.splittable_random_next_double
# Parameters: (size = 128)

# Run progress: 43.75% complete, ETA 01:30:26
# Fork: 1 of 3
# Warmup Iteration   1: 4.568 ns/op
# Warmup Iteration   2: 4.620 ns/op
# Warmup Iteration   3: 4.304 ns/op
# Warmup Iteration   4: 4.257 ns/op
# Warmup Iteration   5: 4.260 ns/op
Iteration   1: 4.261 ns/op
Iteration   2: 4.551 ns/op
Iteration   3: 4.376 ns/op
Iteration   4: 4.344 ns/op
Iteration   5: 4.350 ns/op

# Run progress: 44.79% complete, ETA 01:28:45
# Fork: 2 of 3
# Warmup Iteration   1: 4.946 ns/op
# Warmup Iteration   2: 4.303 ns/op
# Warmup Iteration   3: 4.610 ns/op
# Warmup Iteration   4: 4.592 ns/op
# Warmup Iteration   5: 4.578 ns/op
Iteration   1: 4.563 ns/op
Iteration   2: 4.515 ns/op
Iteration   3: 4.512 ns/op
Iteration   4: 4.319 ns/op
Iteration   5: 4.248 ns/op

# Run progress: 45.83% complete, ETA 01:27:04
# Fork: 3 of 3
# Warmup Iteration   1: 5.551 ns/op
# Warmup Iteration   2: 4.576 ns/op
# Warmup Iteration   3: 4.507 ns/op
# Warmup Iteration   4: 4.501 ns/op
# Warmup Iteration   5: 4.498 ns/op
Iteration   1: 4.494 ns/op
Iteration   2: 4.487 ns/op
Iteration   3: 4.554 ns/op
Iteration   4: 4.545 ns/op
Iteration   5: 4.526 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.splittable_random_next_double":
  4.443 ±(99.9%) 0.121 ns/op [Average]
  (min, avg, max) = (4.248, 4.443, 4.563), stdev = 0.113
  CI (99.9%): [4.322, 4.564] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.splittable_random_next_int
# Parameters: (size = 128)

# Run progress: 46.88% complete, ETA 01:25:24
# Fork: 1 of 3
# Warmup Iteration   1: 3.819 ns/op
# Warmup Iteration   2: 3.870 ns/op
# Warmup Iteration   3: 3.803 ns/op
# Warmup Iteration   4: 3.782 ns/op
# Warmup Iteration   5: 3.785 ns/op
Iteration   1: 3.780 ns/op
Iteration   2: 3.514 ns/op
Iteration   3: 3.697 ns/op
Iteration   4: 3.512 ns/op
Iteration   5: 3.530 ns/op

# Run progress: 47.92% complete, ETA 01:23:43
# Fork: 2 of 3
# Warmup Iteration   1: 4.088 ns/op
# Warmup Iteration   2: 3.695 ns/op
# Warmup Iteration   3: 3.536 ns/op
# Warmup Iteration   4: 3.543 ns/op
# Warmup Iteration   5: 3.551 ns/op
Iteration   1: 3.548 ns/op
Iteration   2: 3.828 ns/op
Iteration   3: 3.827 ns/op
Iteration   4: 3.780 ns/op
Iteration   5: 3.781 ns/op

# Run progress: 48.96% complete, ETA 01:22:02
# Fork: 3 of 3
# Warmup Iteration   1: 4.033 ns/op
# Warmup Iteration   2: 3.803 ns/op
# Warmup Iteration   3: 3.508 ns/op
# Warmup Iteration   4: 3.537 ns/op
# Warmup Iteration   5: 3.529 ns/op
Iteration   1: 3.528 ns/op
Iteration   2: 3.544 ns/op
Iteration   3: 3.785 ns/op
Iteration   4: 3.766 ns/op
Iteration   5: 3.524 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.splittable_random_next_int":
  3.663 ±(99.9%) 0.143 ns/op [Average]
  (min, avg, max) = (3.512, 3.663, 3.828), stdev = 0.134
  CI (99.9%): [3.520, 3.806] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.splittable_random_next_long
# Parameters: (size = 128)

# Run progress: 50.00% complete, ETA 01:20:21
# Fork: 1 of 3
# Warmup Iteration   1: 4.038 ns/op
# Warmup Iteration   2: 3.810 ns/op
# Warmup Iteration   3: 3.889 ns/op
# Warmup Iteration   4: 3.861 ns/op
# Warmup Iteration   5: 3.868 ns/op
Iteration   1: 3.718 ns/op
Iteration   2: 3.898 ns/op
Iteration   3: 3.895 ns/op
Iteration   4: 3.893 ns/op
Iteration   5: 3.893 ns/op

# Run progress: 51.04% complete, ETA 01:18:41
# Fork: 2 of 3
# Warmup Iteration   1: 3.940 ns/op
# Warmup Iteration   2: 3.801 ns/op
# Warmup Iteration   3: 3.898 ns/op
# Warmup Iteration   4: 3.711 ns/op
# Warmup Iteration   5: 3.716 ns/op
Iteration   1: 3.731 ns/op
Iteration   2: 3.739 ns/op
Iteration   3: 3.745 ns/op
Iteration   4: 3.746 ns/op
Iteration   5: 3.754 ns/op

# Run progress: 52.08% complete, ETA 01:17:00
# Fork: 3 of 3
# Warmup Iteration   1: 3.866 ns/op
# Warmup Iteration   2: 3.670 ns/op
# Warmup Iteration   3: 3.659 ns/op
# Warmup Iteration   4: 3.660 ns/op
# Warmup Iteration   5: 3.939 ns/op
Iteration   1: 3.913 ns/op
Iteration   2: 3.628 ns/op
Iteration   3: 3.640 ns/op
Iteration   4: 3.644 ns/op
Iteration   5: 3.650 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.splittable_random_next_long":
  3.766 ±(99.9%) 0.113 ns/op [Average]
  (min, avg, max) = (3.628, 3.766, 3.913), stdev = 0.106
  CI (99.9%): [3.653, 3.879] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.thread_local_doubles_array
# Parameters: (size = 128)

# Run progress: 53.13% complete, ETA 01:15:20
# Fork: 1 of 3
# Warmup Iteration   1: 410.131 ns/op
# Warmup Iteration   2: 369.182 ns/op
# Warmup Iteration   3: 373.766 ns/op
# Warmup Iteration   4: 371.268 ns/op
# Warmup Iteration   5: 365.680 ns/op
Iteration   1: 367.351 ns/op
Iteration   2: 366.112 ns/op
Iteration   3: 373.325 ns/op
Iteration   4: 370.996 ns/op
Iteration   5: 374.115 ns/op

# Run progress: 54.17% complete, ETA 01:13:39
# Fork: 2 of 3
# Warmup Iteration   1: 412.250 ns/op
# Warmup Iteration   2: 373.344 ns/op
# Warmup Iteration   3: 373.349 ns/op
# Warmup Iteration   4: 369.190 ns/op
# Warmup Iteration   5: 371.352 ns/op
Iteration   1: 373.292 ns/op
Iteration   2: 367.910 ns/op
Iteration   3: 373.647 ns/op
Iteration   4: 372.361 ns/op
Iteration   5: 370.853 ns/op

# Run progress: 55.21% complete, ETA 01:11:58
# Fork: 3 of 3
# Warmup Iteration   1: 416.124 ns/op
# Warmup Iteration   2: 371.585 ns/op
# Warmup Iteration   3: 371.746 ns/op
# Warmup Iteration   4: 373.568 ns/op
# Warmup Iteration   5: 371.635 ns/op
Iteration   1: 375.500 ns/op
Iteration   2: 371.980 ns/op
Iteration   3: 372.126 ns/op
Iteration   4: 367.753 ns/op
Iteration   5: 369.563 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.thread_local_doubles_array":
  371.126 ±(99.9%) 3.008 ns/op [Average]
  (min, avg, max) = (366.112, 371.126, 375.500), stdev = 2.814
  CI (99.9%): [368.117, 374.134] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.thread_local_ints_array
# Parameters: (size = 128)

# Run progress: 56.25% complete, ETA 01:10:18
# Fork: 1 of 3
# Warmup Iteration   1: 316.748 ns/op
# Warmup Iteration   2: 279.965 ns/op
# Warmup Iteration   3: 281.880 ns/op
# Warmup Iteration   4: 279.498 ns/op
# Warmup Iteration   5: 277.076 ns/op
Iteration   1: 275.817 ns/op
Iteration   2: 282.261 ns/op
Iteration   3: 275.686 ns/op
Iteration   4: 283.357 ns/op
Iteration   5: 279.009 ns/op

# Run progress: 57.29% complete, ETA 01:08:37
# Fork: 2 of 3
# Warmup Iteration   1: 308.804 ns/op
# Warmup Iteration   2: 278.718 ns/op
# Warmup Iteration   3: 278.609 ns/op
# Warmup Iteration   4: 277.782 ns/op
# Warmup Iteration   5: 281.928 ns/op
Iteration   1: 276.994 ns/op
Iteration   2: 276.934 ns/op
Iteration   3: 277.046 ns/op
Iteration   4: 272.859 ns/op
Iteration   5: 277.063 ns/op

# Run progress: 58.33% complete, ETA 01:06:57
# Fork: 3 of 3
# Warmup Iteration   1: 310.546 ns/op
# Warmup Iteration   2: 275.531 ns/op
# Warmup Iteration   3: 272.926 ns/op
# Warmup Iteration   4: 272.468 ns/op
# Warmup Iteration   5: 267.687 ns/op
Iteration   1: 269.269 ns/op
Iteration   2: 271.647 ns/op
Iteration   3: 271.035 ns/op
Iteration   4: 273.040 ns/op
Iteration   5: 263.397 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.thread_local_ints_array":
  275.028 ±(99.9%) 5.412 ns/op [Average]
  (min, avg, max) = (263.397, 275.028, 283.357), stdev = 5.062
  CI (99.9%): [269.616, 280.440] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.thread_local_longs_array
# Parameters: (size = 128)

# Run progress: 59.38% complete, ETA 01:05:16
# Fork: 1 of 3
# Warmup Iteration   1: 345.497 ns/op
# Warmup Iteration   2: 310.450 ns/op
# Warmup Iteration   3: 313.418 ns/op
# Warmup Iteration   4: 310.311 ns/op
# Warmup Iteration   5: 311.263 ns/op
Iteration   1: 313.173 ns/op
Iteration   2: 307.889 ns/op
Iteration   3: 308.395 ns/op
Iteration   4: 308.652 ns/op
Iteration   5: 311.934 ns/op

# Run progress: 60.42% complete, ETA 01:03:36
# Fork: 2 of 3
# Warmup Iteration   1: 344.366 ns/op
# Warmup Iteration   2: 313.805 ns/op
# Warmup Iteration   3: 311.600 ns/op
# Warmup Iteration   4: 312.109 ns/op
# Warmup Iteration   5: 312.704 ns/op
Iteration   1: 311.463 ns/op
Iteration   2: 312.442 ns/op
Iteration   3: 307.339 ns/op
Iteration   4: 312.644 ns/op
Iteration   5: 316.092 ns/op

# Run progress: 61.46% complete, ETA 01:01:55
# Fork: 3 of 3
# Warmup Iteration   1: 349.443 ns/op
# Warmup Iteration   2: 309.974 ns/op
# Warmup Iteration   3: 308.781 ns/op
# Warmup Iteration   4: 316.178 ns/op
# Warmup Iteration   5: 312.862 ns/op
Iteration   1: 310.510 ns/op
Iteration   2: 310.506 ns/op
Iteration   3: 310.824 ns/op
Iteration   4: 311.201 ns/op
Iteration   5: 310.674 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.thread_local_longs_array":
  310.916 ±(99.9%) 2.432 ns/op [Average]
  (min, avg, max) = (307.339, 310.916, 316.092), stdev = 2.275
  CI (99.9%): [308.484, 313.348] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.thread_local_next_boolean
# Parameters: (size = 128)

# Run progress: 62.50% complete, ETA 01:00:15
# Fork: 1 of 3
# Warmup Iteration   1: 4.515 ns/op
# Warmup Iteration   2: 4.387 ns/op
# Warmup Iteration   3: 4.316 ns/op
# Warmup Iteration   4: 4.294 ns/op
# Warmup Iteration   5: 4.290 ns/op
Iteration   1: 4.278 ns/op
Iteration   2: 4.265 ns/op
Iteration   3: 4.248 ns/op
Iteration   4: 4.238 ns/op
Iteration   5: 4.242 ns/op

# Run progress: 63.54% complete, ETA 00:58:34
# Fork: 2 of 3
# Warmup Iteration   1: 4.388 ns/op
# Warmup Iteration   2: 4.048 ns/op
# Warmup Iteration   3: 4.002 ns/op
# Warmup Iteration   4: 4.011 ns/op
# Warmup Iteration   5: 4.016 ns/op
Iteration   1: 4.013 ns/op
Iteration   2: 4.015 ns/op
Iteration   3: 4.017 ns/op
Iteration   4: 4.016 ns/op
Iteration   5: 4.018 ns/op

# Run progress: 64.58% complete, ETA 00:56:53
# Fork: 3 of 3
# Warmup Iteration   1: 4.580 ns/op
# Warmup Iteration   2: 4.259 ns/op
# Warmup Iteration   3: 4.212 ns/op
# Warmup Iteration   4: 4.207 ns/op
# Warmup Iteration   5: 4.194 ns/op
Iteration   1: 4.193 ns/op
Iteration   2: 4.034 ns/op
Iteration   3: 4.229 ns/op
Iteration   4: 4.228 ns/op
Iteration   5: 4.029 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.thread_local_next_boolean":
  4.137 ±(99.9%) 0.123 ns/op [Average]
  (min, avg, max) = (4.013, 4.137, 4.278), stdev = 0.115
  CI (99.9%): [4.015, 4.260] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.thread_local_next_bytes_array
# Parameters: (size = 128)

# Run progress: 65.63% complete, ETA 00:55:13
# Fork: 1 of 3
# Warmup Iteration   1: 133.412 ns/op
# Warmup Iteration   2: 125.806 ns/op
# Warmup Iteration   3: 139.907 ns/op
# Warmup Iteration   4: 139.607 ns/op
# Warmup Iteration   5: 139.611 ns/op
Iteration   1: 135.320 ns/op
Iteration   2: 135.582 ns/op
Iteration   3: 135.824 ns/op
Iteration   4: 140.861 ns/op
Iteration   5: 140.729 ns/op

# Run progress: 66.67% complete, ETA 00:53:32
# Fork: 2 of 3
# Warmup Iteration   1: 127.444 ns/op
# Warmup Iteration   2: 117.836 ns/op
# Warmup Iteration   3: 130.893 ns/op
# Warmup Iteration   4: 131.251 ns/op
# Warmup Iteration   5: 131.652 ns/op
Iteration   1: 131.253 ns/op
Iteration   2: 131.815 ns/op
Iteration   3: 131.768 ns/op
Iteration   4: 131.619 ns/op
Iteration   5: 132.041 ns/op

# Run progress: 67.71% complete, ETA 00:51:52
# Fork: 3 of 3
# Warmup Iteration   1: 136.570 ns/op
# Warmup Iteration   2: 118.613 ns/op
# Warmup Iteration   3: 131.407 ns/op
# Warmup Iteration   4: 131.345 ns/op
# Warmup Iteration   5: 131.454 ns/op
Iteration   1: 131.465 ns/op
Iteration   2: 140.824 ns/op
Iteration   3: 140.430 ns/op
Iteration   4: 140.047 ns/op
Iteration   5: 139.791 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.thread_local_next_bytes_array":
  135.958 ±(99.9%) 4.368 ns/op [Average]
  (min, avg, max) = (131.253, 135.958, 140.861), stdev = 4.085
  CI (99.9%): [131.590, 140.325] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.thread_local_next_double
# Parameters: (size = 128)

# Run progress: 68.75% complete, ETA 00:50:12
# Fork: 1 of 3
# Warmup Iteration   1: 4.889 ns/op
# Warmup Iteration   2: 4.748 ns/op
# Warmup Iteration   3: 4.852 ns/op
# Warmup Iteration   4: 4.844 ns/op
# Warmup Iteration   5: 4.842 ns/op
Iteration   1: 4.510 ns/op
Iteration   2: 4.481 ns/op
Iteration   3: 4.492 ns/op
Iteration   4: 4.514 ns/op
Iteration   5: 4.510 ns/op

# Run progress: 69.79% complete, ETA 00:48:31
# Fork: 2 of 3
# Warmup Iteration   1: 4.901 ns/op
# Warmup Iteration   2: 4.548 ns/op
# Warmup Iteration   3: 4.515 ns/op
# Warmup Iteration   4: 4.500 ns/op
# Warmup Iteration   5: 4.493 ns/op
Iteration   1: 4.728 ns/op
Iteration   2: 4.375 ns/op
Iteration   3: 4.363 ns/op
Iteration   4: 4.372 ns/op
Iteration   5: 4.378 ns/op

# Run progress: 70.83% complete, ETA 00:46:51
# Fork: 3 of 3
# Warmup Iteration   1: 5.081 ns/op
# Warmup Iteration   2: 4.760 ns/op
# Warmup Iteration   3: 4.344 ns/op
# Warmup Iteration   4: 4.359 ns/op
# Warmup Iteration   5: 4.381 ns/op
Iteration   1: 4.376 ns/op
Iteration   2: 4.374 ns/op
Iteration   3: 4.511 ns/op
Iteration   4: 4.506 ns/op
Iteration   5: 4.518 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.thread_local_next_double":
  4.467 ±(99.9%) 0.105 ns/op [Average]
  (min, avg, max) = (4.363, 4.467, 4.728), stdev = 0.098
  CI (99.9%): [4.362, 4.572] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.thread_local_next_float
# Parameters: (size = 128)

# Run progress: 71.88% complete, ETA 00:45:10
# Fork: 1 of 3
# Warmup Iteration   1: 4.606 ns/op
# Warmup Iteration   2: 4.029 ns/op
# Warmup Iteration   3: 3.999 ns/op
# Warmup Iteration   4: 3.998 ns/op
# Warmup Iteration   5: 3.988 ns/op
Iteration   1: 4.107 ns/op
Iteration   2: 4.319 ns/op
Iteration   3: 4.298 ns/op
Iteration   4: 4.281 ns/op
Iteration   5: 4.277 ns/op

# Run progress: 72.92% complete, ETA 00:43:30
# Fork: 2 of 3
# Warmup Iteration   1: 5.009 ns/op
# Warmup Iteration   2: 5.047 ns/op
# Warmup Iteration   3: 5.008 ns/op
# Warmup Iteration   4: 4.999 ns/op
# Warmup Iteration   5: 4.993 ns/op
Iteration   1: 4.983 ns/op
Iteration   2: 4.678 ns/op
Iteration   3: 4.691 ns/op
Iteration   4: 4.695 ns/op
Iteration   5: 4.830 ns/op

# Run progress: 73.96% complete, ETA 00:41:49
# Fork: 3 of 3
# Warmup Iteration   1: 4.675 ns/op
# Warmup Iteration   2: 4.244 ns/op
# Warmup Iteration   3: 4.212 ns/op
# Warmup Iteration   4: 4.211 ns/op
# Warmup Iteration   5: 4.211 ns/op
Iteration   1: 4.205 ns/op
Iteration   2: 4.205 ns/op
Iteration   3: 4.201 ns/op
Iteration   4: 4.035 ns/op
Iteration   5: 4.276 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.thread_local_next_float":
  4.406 ±(99.9%) 0.309 ns/op [Average]
  (min, avg, max) = (4.035, 4.406, 4.983), stdev = 0.289
  CI (99.9%): [4.096, 4.715] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.thread_local_next_int
# Parameters: (size = 128)

# Run progress: 75.00% complete, ETA 00:40:09
# Fork: 1 of 3
# Warmup Iteration   1: 4.141 ns/op
# Warmup Iteration   2: 4.070 ns/op
# Warmup Iteration   3: 4.072 ns/op
# Warmup Iteration   4: 4.070 ns/op
# Warmup Iteration   5: 4.060 ns/op
Iteration   1: 4.062 ns/op
Iteration   2: 4.008 ns/op
Iteration   3: 3.999 ns/op
Iteration   4: 4.004 ns/op
Iteration   5: 4.006 ns/op

# Run progress: 76.04% complete, ETA 00:38:28
# Fork: 2 of 3
# Warmup Iteration   1: 4.183 ns/op
# Warmup Iteration   2: 4.094 ns/op
# Warmup Iteration   3: 4.069 ns/op
# Warmup Iteration   4: 4.050 ns/op
# Warmup Iteration   5: 4.055 ns/op
Iteration   1: 4.046 ns/op
Iteration   2: 3.845 ns/op
Iteration   3: 3.777 ns/op
Iteration   4: 3.789 ns/op
Iteration   5: 3.780 ns/op

# Run progress: 77.08% complete, ETA 00:36:48
# Fork: 3 of 3
# Warmup Iteration   1: 4.079 ns/op
# Warmup Iteration   2: 4.129 ns/op
# Warmup Iteration   3: 4.107 ns/op
# Warmup Iteration   4: 4.057 ns/op
# Warmup Iteration   5: 4.032 ns/op
Iteration   1: 4.028 ns/op
Iteration   2: 4.022 ns/op
Iteration   3: 4.022 ns/op
Iteration   4: 4.035 ns/op
Iteration   5: 4.045 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.thread_local_next_int":
  3.964 ±(99.9%) 0.114 ns/op [Average]
  (min, avg, max) = (3.777, 3.964, 4.062), stdev = 0.106
  CI (99.9%): [3.851, 4.078] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.thread_local_next_long
# Parameters: (size = 128)

# Run progress: 78.13% complete, ETA 00:35:08
# Fork: 1 of 3
# Warmup Iteration   1: 4.450 ns/op
# Warmup Iteration   2: 3.904 ns/op
# Warmup Iteration   3: 3.782 ns/op
# Warmup Iteration   4: 3.788 ns/op
# Warmup Iteration   5: 3.791 ns/op
Iteration   1: 3.805 ns/op
Iteration   2: 3.916 ns/op
Iteration   3: 3.913 ns/op
Iteration   4: 4.100 ns/op
Iteration   5: 4.076 ns/op

# Run progress: 79.17% complete, ETA 00:33:27
# Fork: 2 of 3
# Warmup Iteration   1: 4.204 ns/op
# Warmup Iteration   2: 3.792 ns/op
# Warmup Iteration   3: 3.791 ns/op
# Warmup Iteration   4: 3.790 ns/op
# Warmup Iteration   5: 3.786 ns/op
Iteration   1: 3.789 ns/op
Iteration   2: 3.794 ns/op
Iteration   3: 3.794 ns/op
Iteration   4: 3.810 ns/op
Iteration   5: 3.795 ns/op

# Run progress: 80.21% complete, ETA 00:31:47
# Fork: 3 of 3
# Warmup Iteration   1: 4.184 ns/op
# Warmup Iteration   2: 4.092 ns/op
# Warmup Iteration   3: 3.907 ns/op
# Warmup Iteration   4: 3.912 ns/op
# Warmup Iteration   5: 3.909 ns/op
Iteration   1: 3.909 ns/op
Iteration   2: 4.050 ns/op
Iteration   3: 4.047 ns/op
Iteration   4: 4.030 ns/op
Iteration   5: 4.059 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.thread_local_next_long":
  3.926 ±(99.9%) 0.131 ns/op [Average]
  (min, avg, max) = (3.789, 3.926, 4.100), stdev = 0.123
  CI (99.9%): [3.795, 4.057] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.SecureRandomGeneratorBenchmark.random_next_bytes
# Parameters: (algorithm = default, size = 128)

# Run progress: 81.25% complete, ETA 00:30:06
# Fork: 1 of 3
# Warmup Iteration   1: 3474.609 ns/op
# Warmup Iteration   2: 2949.256 ns/op
# Warmup Iteration   3: 2946.033 ns/op
# Warmup Iteration   4: 2934.393 ns/op
# Warmup Iteration   5: 3009.635 ns/op
Iteration   1: 2987.461 ns/op
Iteration   2: 2940.976 ns/op
Iteration   3: 3005.025 ns/op
Iteration   4: 3027.707 ns/op
Iteration   5: 3079.460 ns/op

# Run progress: 82.29% complete, ETA 00:28:26
# Fork: 2 of 3
# Warmup Iteration   1: 3524.376 ns/op
# Warmup Iteration   2: 3000.822 ns/op
# Warmup Iteration   3: 3106.147 ns/op
# Warmup Iteration   4: 2940.933 ns/op
# Warmup Iteration   5: 3035.594 ns/op
Iteration   1: 2992.374 ns/op
Iteration   2: 3034.474 ns/op
Iteration   3: 2991.057 ns/op
Iteration   4: 2990.617 ns/op
Iteration   5: 2982.516 ns/op

# Run progress: 83.33% complete, ETA 00:26:45
# Fork: 3 of 3
# Warmup Iteration   1: 3363.254 ns/op
# Warmup Iteration   2: 3117.896 ns/op
# Warmup Iteration   3: 2990.681 ns/op
# Warmup Iteration   4: 3050.397 ns/op
# Warmup Iteration   5: 3100.078 ns/op
Iteration   1: 3102.604 ns/op
Iteration   2: 3111.831 ns/op
Iteration   3: 3106.789 ns/op
Iteration   4: 2942.390 ns/op
Iteration   5: 3026.017 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.SecureRandomGeneratorBenchmark.random_next_bytes":
  3021.420 ±(99.9%) 59.946 ns/op [Average]
  (min, avg, max) = (2940.976, 3021.420, 3111.831), stdev = 56.073
  CI (99.9%): [2961.474, 3081.366] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.SecureRandomGeneratorBenchmark.random_next_bytes
# Parameters: (algorithm = NativePRNG, size = 128)

# Run progress: 84.38% complete, ETA 00:25:05
# Fork: 1 of 3
# Warmup Iteration   1: 3354.463 ns/op
# Warmup Iteration   2: 2991.356 ns/op
# Warmup Iteration   3: 3090.548 ns/op
# Warmup Iteration   4: 3050.947 ns/op
# Warmup Iteration   5: 3068.752 ns/op
Iteration   1: 3108.912 ns/op
Iteration   2: 3173.843 ns/op
Iteration   3: 3167.674 ns/op
Iteration   4: 3165.248 ns/op
Iteration   5: 3160.708 ns/op

# Run progress: 85.42% complete, ETA 00:23:25
# Fork: 2 of 3
# Warmup Iteration   1: 3433.925 ns/op
# Warmup Iteration   2: 3102.435 ns/op
# Warmup Iteration   3: 3109.647 ns/op
# Warmup Iteration   4: 3094.776 ns/op
# Warmup Iteration   5: 2994.767 ns/op
Iteration   1: 3105.216 ns/op
Iteration   2: 3110.602 ns/op
Iteration   3: 3105.728 ns/op
Iteration   4: 3103.889 ns/op
Iteration   5: 3107.185 ns/op

# Run progress: 86.46% complete, ETA 00:21:44
# Fork: 3 of 3
# Warmup Iteration   1: 3465.923 ns/op
# Warmup Iteration   2: 3130.614 ns/op
# Warmup Iteration   3: 3126.841 ns/op
# Warmup Iteration   4: 3036.462 ns/op
# Warmup Iteration   5: 3033.029 ns/op
Iteration   1: 3066.753 ns/op
Iteration   2: 3028.730 ns/op
Iteration   3: 3037.609 ns/op
Iteration   4: 3086.945 ns/op
Iteration   5: 2993.244 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.SecureRandomGeneratorBenchmark.random_next_bytes":
  3101.486 ±(99.9%) 57.076 ns/op [Average]
  (min, avg, max) = (2993.244, 3101.486, 3173.843), stdev = 53.389
  CI (99.9%): [3044.409, 3158.562] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.SecureRandomGeneratorBenchmark.random_next_bytes
# Parameters: (algorithm = DRBG, size = 128)

# Run progress: 87.50% complete, ETA 00:20:04
# Fork: 1 of 3
# Warmup Iteration   1: 2004.051 ns/op
# Warmup Iteration   2: 1867.144 ns/op
# Warmup Iteration   3: 1865.034 ns/op
# Warmup Iteration   4: 1858.441 ns/op
# Warmup Iteration   5: 1834.946 ns/op
Iteration   1: 1736.187 ns/op
Iteration   2: 1745.474 ns/op
Iteration   3: 1745.268 ns/op
Iteration   4: 1748.702 ns/op
Iteration   5: 1829.708 ns/op

# Run progress: 88.54% complete, ETA 00:18:24
# Fork: 2 of 3
# Warmup Iteration   1: 2048.724 ns/op
# Warmup Iteration   2: 1776.715 ns/op
# Warmup Iteration   3: 1765.651 ns/op
# Warmup Iteration   4: 1851.358 ns/op
# Warmup Iteration   5: 1885.104 ns/op
Iteration   1: 1770.472 ns/op
Iteration   2: 1877.488 ns/op
Iteration   3: 1864.472 ns/op
Iteration   4: 1756.884 ns/op
Iteration   5: 1800.331 ns/op

# Run progress: 89.58% complete, ETA 00:16:43
# Fork: 3 of 3
# Warmup Iteration   1: 2070.277 ns/op
# Warmup Iteration   2: 1823.484 ns/op
# Warmup Iteration   3: 1725.341 ns/op
# Warmup Iteration   4: 1726.586 ns/op
# Warmup Iteration   5: 1731.230 ns/op
Iteration   1: 1733.087 ns/op
Iteration   2: 1857.433 ns/op
Iteration   3: 1844.232 ns/op
Iteration   4: 1748.184 ns/op
Iteration   5: 1722.908 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.SecureRandomGeneratorBenchmark.random_next_bytes":
  1785.389 ±(99.9%) 58.279 ns/op [Average]
  (min, avg, max) = (1722.908, 1785.389, 1877.488), stdev = 54.514
  CI (99.9%): [1727.110, 1843.667] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.SecureRandomGeneratorBenchmark.random_next_long
# Parameters: (algorithm = default, size = 128)

# Run progress: 90.63% complete, ETA 00:15:03
# Fork: 1 of 3
# Warmup Iteration   1: 349.506 ns/op
# Warmup Iteration   2: 309.187 ns/op
# Warmup Iteration   3: 292.942 ns/op
# Warmup Iteration   4: 305.483 ns/op
# Warmup Iteration   5: 293.324 ns/op
Iteration   1: 296.575 ns/op
Iteration   2: 313.682 ns/op
Iteration   3: 310.002 ns/op
Iteration   4: 298.637 ns/op
Iteration   5: 307.072 ns/op

# Run progress: 91.67% complete, ETA 00:13:22
# Fork: 2 of 3
# Warmup Iteration   1: 343.923 ns/op
# Warmup Iteration   2: 317.987 ns/op
# Warmup Iteration   3: 309.836 ns/op
# Warmup Iteration   4: 310.057 ns/op
# Warmup Iteration   5: 309.929 ns/op
Iteration   1: 310.554 ns/op
Iteration   2: 309.977 ns/op
Iteration   3: 311.813 ns/op
Iteration   4: 315.498 ns/op
Iteration   5: 305.317 ns/op

# Run progress: 92.71% complete, ETA 00:11:42
# Fork: 3 of 3
# Warmup Iteration   1: 367.290 ns/op
# Warmup Iteration   2: 300.766 ns/op
# Warmup Iteration   3: 296.223 ns/op
# Warmup Iteration   4: 308.032 ns/op
# Warmup Iteration   5: 296.615 ns/op
Iteration   1: 290.802 ns/op
Iteration   2: 308.881 ns/op
Iteration   3: 308.348 ns/op
Iteration   4: 290.583 ns/op
Iteration   5: 291.932 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.SecureRandomGeneratorBenchmark.random_next_long":
  304.645 ±(99.9%) 9.183 ns/op [Average]
  (min, avg, max) = (290.583, 304.645, 315.498), stdev = 8.590
  CI (99.9%): [295.461, 313.828] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.SecureRandomGeneratorBenchmark.random_next_long
# Parameters: (algorithm = NativePRNG, size = 128)

# Run progress: 93.75% complete, ETA 00:10:02
# Fork: 1 of 3
# Warmup Iteration   1: 353.169 ns/op
# Warmup Iteration   2: 315.073 ns/op
# Warmup Iteration   3: 312.929 ns/op
# Warmup Iteration   4: 301.685 ns/op
# Warmup Iteration   5: 304.939 ns/op
Iteration   1: 312.893 ns/op
Iteration   2: 313.144 ns/op
Iteration   3: 304.540 ns/op
Iteration   4: 303.716 ns/op
Iteration   5: 311.679 ns/op

# Run progress: 94.79% complete, ETA 00:08:21
# Fork: 2 of 3
# Warmup Iteration   1: 337.675 ns/op
# Warmup Iteration   2: 309.765 ns/op
# Warmup Iteration   3: 302.174 ns/op
# Warmup Iteration   4: 289.400 ns/op
# Warmup Iteration   5: 290.961 ns/op
Iteration   1: 291.604 ns/op
Iteration   2: 292.011 ns/op
Iteration   3: 305.394 ns/op
Iteration   4: 304.454 ns/op
Iteration   5: 293.569 ns/op

# Run progress: 95.83% complete, ETA 00:06:41
# Fork: 3 of 3
# Warmup Iteration   1: 348.691 ns/op
# Warmup Iteration   2: 306.784 ns/op
# Warmup Iteration   3: 292.963 ns/op
# Warmup Iteration   4: 295.699 ns/op
# Warmup Iteration   5: 302.016 ns/op
Iteration   1: 312.840 ns/op
Iteration   2: 311.832 ns/op
Iteration   3: 305.269 ns/op
Iteration   4: 295.471 ns/op
Iteration   5: 296.819 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.SecureRandomGeneratorBenchmark.random_next_long":
  303.682 ±(99.9%) 8.544 ns/op [Average]
  (min, avg, max) = (291.604, 303.682, 313.144), stdev = 7.992
  CI (99.9%): [295.138, 312.227] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.SecureRandomGeneratorBenchmark.random_next_long
# Parameters: (algorithm = DRBG, size = 128)

# Run progress: 96.88% complete, ETA 00:05:01
# Fork: 1 of 3
# Warmup Iteration   1: 2199.695 ns/op
# Warmup Iteration   2: 1798.539 ns/op
# Warmup Iteration   3: 1876.934 ns/op
# Warmup Iteration   4: 1822.210 ns/op
# Warmup Iteration   5: 1904.782 ns/op
Iteration   1: 1898.438 ns/op
Iteration   2: 1912.735 ns/op
Iteration   3: 1882.671 ns/op
Iteration   4: 1878.358 ns/op
Iteration   5: 1873.862 ns/op

# Run progress: 97.92% complete, ETA 00:03:20
# Fork: 2 of 3
# Warmup Iteration   1: 2037.530 ns/op
# Warmup Iteration   2: 1889.486 ns/op
# Warmup Iteration   3: 1837.435 ns/op
# Warmup Iteration   4: 1906.119 ns/op
# Warmup Iteration   5: 1905.223 ns/op
Iteration   1: 1811.899 ns/op
Iteration   2: 1893.412 ns/op
Iteration   3: 1887.220 ns/op
Iteration   4: 1867.680 ns/op
Iteration   5: 1837.435 ns/op

# Run progress: 98.96% complete, ETA 00:01:40
# Fork: 3 of 3
# Warmup Iteration   1: 2079.969 ns/op
# Warmup Iteration   2: 1886.070 ns/op
# Warmup Iteration   3: 1872.880 ns/op
# Warmup Iteration   4: 1777.445 ns/op
# Warmup Iteration   5: 1764.597 ns/op
Iteration   1: 1781.256 ns/op
Iteration   2: 1872.080 ns/op
Iteration   3: 1894.572 ns/op
Iteration   4: 1886.769 ns/op
Iteration   5: 1879.243 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.SecureRandomGeneratorBenchmark.random_next_long":
  1870.509 ±(99.9%) 37.267 ns/op [Average]
  (min, avg, max) = (1781.256, 1870.509, 1912.735), stdev = 34.860
  CI (99.9%): [1833.241, 1907.776] (assumes normal distribution)


# Run complete. Total time: 02:40:34

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                                    (algorithm)  (size)  Mode  Cnt     Score    Error  Units
RandomGeneratorBenchmark.random_doubles_array                        N/A     128  avgt   15  2417.895 ±  3.270  ns/op
RandomGeneratorBenchmark.random_ints_array                           N/A     128  avgt   15  1195.870 ±  1.696  ns/op
RandomGeneratorBenchmark.random_longs_array                          N/A     128  avgt   15  2423.143 ±  5.970  ns/op
RandomGeneratorBenchmark.random_next_boolean                         N/A     128  avgt   15     9.006 ±  0.070  ns/op
RandomGeneratorBenchmark.random_next_bytes_array                     N/A     128  avgt   15   289.963 ±  1.346  ns/op
RandomGeneratorBenchmark.random_next_double                          N/A     128  avgt   15    18.027 ±  0.040  ns/op
RandomGeneratorBenchmark.random_next_float                           N/A     128  avgt   15     9.553 ±  0.248  ns/op
RandomGeneratorBenchmark.random_next_int                             N/A     128  avgt   15     9.017 ±  0.062  ns/op
RandomGeneratorBenchmark.random_next_long                            N/A     128  avgt   15    18.155 ±  0.016  ns/op
RandomGeneratorBenchmark.splittable_random_doubles_array             N/A     128  avgt   15   368.629 ±  6.201  ns/op
RandomGeneratorBenchmark.splittable_random_ints_array                N/A     128  avgt   15   259.889 ±  5.088  ns/op
RandomGeneratorBenchmark.splittable_random_longs_array               N/A     128  avgt   15   325.609 ±  2.659  ns/op
RandomGeneratorBenchmark.splittable_random_next_boolean              N/A     128  avgt   15     3.945 ±  0.079  ns/op
RandomGeneratorBenchmark.splittable_random_next_bytes_array          N/A     128  avgt   15    60.261 ±  1.711  ns/op
RandomGeneratorBenchmark.splittable_random_next_double               N/A     128  avgt   15     4.443 ±  0.121  ns/op
RandomGeneratorBenchmark.splittable_random_next_int                  N/A     128  avgt   15     3.663 ±  0.143  ns/op
RandomGeneratorBenchmark.splittable_random_next_long                 N/A     128  avgt   15     3.766 ±  0.113  ns/op
RandomGeneratorBenchmark.thread_local_doubles_array                  N/A     128  avgt   15   371.126 ±  3.008  ns/op
RandomGeneratorBenchmark.thread_local_ints_array                     N/A     128  avgt   15   275.028 ±  5.412  ns/op
RandomGeneratorBenchmark.thread_local_longs_array                    N/A     128  avgt   15   310.916 ±  2.432  ns/op
RandomGeneratorBenchmark.thread_local_next_boolean                   N/A     128  avgt   15     4.137 ±  0.123  ns/op
RandomGeneratorBenchmark.thread_local_next_bytes_array               N/A     128  avgt   15   135.958 ±  4.368  ns/op
RandomGeneratorBenchmark.thread_local_next_double                    N/A     128  avgt   15     4.467 ±  0.105  ns/op
RandomGeneratorBenchmark.thread_local_next_float                     N/A     128  avgt   15     4.406 ±  0.309  ns/op
RandomGeneratorBenchmark.thread_local_next_int                       N/A     128  avgt   15     3.964 ±  0.114  ns/op
RandomGeneratorBenchmark.thread_local_next_long                      N/A     128  avgt   15     3.926 ±  0.131  ns/op
SecureRandomGeneratorBenchmark.random_next_bytes                 default     128  avgt   15  3021.420 ± 59.946  ns/op
SecureRandomGeneratorBenchmark.random_next_bytes              NativePRNG     128  avgt   15  3101.486 ± 57.076  ns/op
SecureRandomGeneratorBenchmark.random_next_bytes                    DRBG     128  avgt   15  1785.389 ± 58.279  ns/op
SecureRandomGeneratorBenchmark.random_next_long                  default     128  avgt   15   304.645 ±  9.183  ns/op
SecureRandomGeneratorBenchmark.random_next_long               NativePRNG     128  avgt   15   303.682 ±  8.544  ns/op
SecureRandomGeneratorBenchmark.random_next_long                     DRBG     128  avgt   15  1870.509 ± 37.267  ns/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_graal_jit/RandomGeneratorBenchmark.json
Running java -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler -jar benchmarks/target/benchmarks.jar .*SecureRandomGeneratorBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_graal_jit/SecureRandomGeneratorBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.SecureRandomGeneratorBenchmark.random_next_bytes
# Parameters: (algorithm = default, size = 128)

# Run progress: 0.00% complete, ETA 00:30:00
# Fork: 1 of 3
# Warmup Iteration   1: 3619.185 ns/op
# Warmup Iteration   2: 2959.979 ns/op
# Warmup Iteration   3: 3031.899 ns/op
# Warmup Iteration   4: 3018.133 ns/op
# Warmup Iteration   5: 3019.773 ns/op
Iteration   1: 3017.029 ns/op
Iteration   2: 3070.095 ns/op
Iteration   3: 2943.213 ns/op
Iteration   4: 2944.039 ns/op
Iteration   5: 3007.183 ns/op

# Run progress: 5.56% complete, ETA 00:28:25
# Fork: 2 of 3
# Warmup Iteration   1: 3401.067 ns/op
# Warmup Iteration   2: 3027.660 ns/op
# Warmup Iteration   3: 3144.277 ns/op
# Warmup Iteration   4: 3128.509 ns/op
# Warmup Iteration   5: 2973.033 ns/op
Iteration   1: 2955.488 ns/op
Iteration   2: 3021.240 ns/op
Iteration   3: 3115.793 ns/op
Iteration   4: 3111.482 ns/op
Iteration   5: 3012.333 ns/op

# Run progress: 11.11% complete, ETA 00:26:44
# Fork: 3 of 3
# Warmup Iteration   1: 3589.533 ns/op
# Warmup Iteration   2: 3001.352 ns/op
# Warmup Iteration   3: 2989.785 ns/op
# Warmup Iteration   4: 2988.191 ns/op
# Warmup Iteration   5: 2996.329 ns/op
Iteration   1: 3074.869 ns/op
Iteration   2: 2975.129 ns/op
Iteration   3: 2985.171 ns/op
Iteration   4: 3061.649 ns/op
Iteration   5: 2978.433 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.SecureRandomGeneratorBenchmark.random_next_bytes":
  3018.210 ±(99.9%) 61.125 ns/op [Average]
  (min, avg, max) = (2943.213, 3018.210, 3115.793), stdev = 57.176
  CI (99.9%): [2957.085, 3079.335] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.SecureRandomGeneratorBenchmark.random_next_bytes
# Parameters: (algorithm = NativePRNG, size = 128)

# Run progress: 16.67% complete, ETA 00:25:04
# Fork: 1 of 3
# Warmup Iteration   1: 3536.791 ns/op
# Warmup Iteration   2: 3191.241 ns/op
# Warmup Iteration   3: 3061.842 ns/op
# Warmup Iteration   4: 3040.259 ns/op
# Warmup Iteration   5: 3027.655 ns/op
Iteration   1: 3038.765 ns/op
Iteration   2: 3204.502 ns/op
Iteration   3: 3204.023 ns/op
Iteration   4: 3217.970 ns/op
Iteration   5: 3212.754 ns/op

# Run progress: 22.22% complete, ETA 00:23:23
# Fork: 2 of 3
# Warmup Iteration   1: 3599.866 ns/op
# Warmup Iteration   2: 2946.783 ns/op
# Warmup Iteration   3: 2927.360 ns/op
# Warmup Iteration   4: 3018.880 ns/op
# Warmup Iteration   5: 3095.994 ns/op
Iteration   1: 3087.824 ns/op
Iteration   2: 3081.028 ns/op
Iteration   3: 3085.605 ns/op
Iteration   4: 2989.163 ns/op
Iteration   5: 2993.526 ns/op

# Run progress: 27.78% complete, ETA 00:21:43
# Fork: 3 of 3
# Warmup Iteration   1: 3377.481 ns/op
# Warmup Iteration   2: 2951.393 ns/op
# Warmup Iteration   3: 3034.788 ns/op
# Warmup Iteration   4: 3095.334 ns/op
# Warmup Iteration   5: 3021.948 ns/op
Iteration   1: 2966.555 ns/op
Iteration   2: 2992.436 ns/op
Iteration   3: 3092.448 ns/op
Iteration   4: 3083.487 ns/op
Iteration   5: 3080.539 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.SecureRandomGeneratorBenchmark.random_next_bytes":
  3088.708 ±(99.9%) 92.421 ns/op [Average]
  (min, avg, max) = (2966.555, 3088.708, 3217.970), stdev = 86.451
  CI (99.9%): [2996.287, 3181.129] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.SecureRandomGeneratorBenchmark.random_next_bytes
# Parameters: (algorithm = DRBG, size = 128)

# Run progress: 33.33% complete, ETA 00:20:03
# Fork: 1 of 3
# Warmup Iteration   1: 2001.832 ns/op
# Warmup Iteration   2: 1727.217 ns/op
# Warmup Iteration   3: 1827.469 ns/op
# Warmup Iteration   4: 1820.625 ns/op
# Warmup Iteration   5: 1750.343 ns/op
Iteration   1: 1751.092 ns/op
Iteration   2: 1833.993 ns/op
Iteration   3: 1834.276 ns/op
Iteration   4: 1830.415 ns/op
Iteration   5: 1826.049 ns/op

# Run progress: 38.89% complete, ETA 00:18:22
# Fork: 2 of 3
# Warmup Iteration   1: 2037.749 ns/op
# Warmup Iteration   2: 1848.472 ns/op
# Warmup Iteration   3: 1835.035 ns/op
# Warmup Iteration   4: 1781.201 ns/op
# Warmup Iteration   5: 1780.117 ns/op
Iteration   1: 1716.463 ns/op
Iteration   2: 1770.771 ns/op
Iteration   3: 1726.099 ns/op
Iteration   4: 1824.268 ns/op
Iteration   5: 1821.600 ns/op

# Run progress: 44.44% complete, ETA 00:16:42
# Fork: 3 of 3
# Warmup Iteration   1: 1967.147 ns/op
# Warmup Iteration   2: 1740.284 ns/op
# Warmup Iteration   3: 1774.280 ns/op
# Warmup Iteration   4: 1851.607 ns/op
# Warmup Iteration   5: 1861.272 ns/op
Iteration   1: 1728.633 ns/op
Iteration   2: 1737.383 ns/op
Iteration   3: 1849.749 ns/op
Iteration   4: 1833.968 ns/op
Iteration   5: 1790.862 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.SecureRandomGeneratorBenchmark.random_next_bytes":
  1791.708 ±(99.9%) 51.406 ns/op [Average]
  (min, avg, max) = (1716.463, 1791.708, 1849.749), stdev = 48.085
  CI (99.9%): [1740.302, 1843.114] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.SecureRandomGeneratorBenchmark.random_next_long
# Parameters: (algorithm = default, size = 128)

# Run progress: 50.00% complete, ETA 00:15:02
# Fork: 1 of 3
# Warmup Iteration   1: 339.005 ns/op
# Warmup Iteration   2: 297.644 ns/op
# Warmup Iteration   3: 299.658 ns/op
# Warmup Iteration   4: 295.362 ns/op
# Warmup Iteration   5: 292.959 ns/op
Iteration   1: 293.395 ns/op
Iteration   2: 293.812 ns/op
Iteration   3: 286.988 ns/op
Iteration   4: 294.052 ns/op
Iteration   5: 301.210 ns/op

# Run progress: 55.56% complete, ETA 00:13:22
# Fork: 2 of 3
# Warmup Iteration   1: 362.457 ns/op
# Warmup Iteration   2: 298.354 ns/op
# Warmup Iteration   3: 304.665 ns/op
# Warmup Iteration   4: 302.111 ns/op
# Warmup Iteration   5: 304.564 ns/op
Iteration   1: 297.065 ns/op
Iteration   2: 308.315 ns/op
Iteration   3: 313.976 ns/op
Iteration   4: 302.886 ns/op
Iteration   5: 307.594 ns/op

# Run progress: 61.11% complete, ETA 00:11:41
# Fork: 3 of 3
# Warmup Iteration   1: 335.794 ns/op
# Warmup Iteration   2: 291.014 ns/op
# Warmup Iteration   3: 296.739 ns/op
# Warmup Iteration   4: 309.579 ns/op
# Warmup Iteration   5: 306.952 ns/op
Iteration   1: 300.765 ns/op
Iteration   2: 306.785 ns/op
Iteration   3: 300.230 ns/op
Iteration   4: 297.835 ns/op
Iteration   5: 293.953 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.SecureRandomGeneratorBenchmark.random_next_long":
  299.924 ±(99.9%) 7.640 ns/op [Average]
  (min, avg, max) = (286.988, 299.924, 313.976), stdev = 7.146
  CI (99.9%): [292.284, 307.564] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.SecureRandomGeneratorBenchmark.random_next_long
# Parameters: (algorithm = NativePRNG, size = 128)

# Run progress: 66.67% complete, ETA 00:10:01
# Fork: 1 of 3
# Warmup Iteration   1: 346.985 ns/op
# Warmup Iteration   2: 304.445 ns/op
# Warmup Iteration   3: 307.628 ns/op
# Warmup Iteration   4: 296.800 ns/op
# Warmup Iteration   5: 313.983 ns/op
Iteration   1: 310.577 ns/op
Iteration   2: 305.935 ns/op
Iteration   3: 301.689 ns/op
Iteration   4: 310.000 ns/op
Iteration   5: 303.562 ns/op

# Run progress: 72.22% complete, ETA 00:08:21
# Fork: 2 of 3
# Warmup Iteration   1: 373.430 ns/op
# Warmup Iteration   2: 303.406 ns/op
# Warmup Iteration   3: 303.335 ns/op
# Warmup Iteration   4: 302.259 ns/op
# Warmup Iteration   5: 297.790 ns/op
Iteration   1: 312.466 ns/op
Iteration   2: 309.218 ns/op
Iteration   3: 305.351 ns/op
Iteration   4: 306.919 ns/op
Iteration   5: 302.778 ns/op

# Run progress: 77.78% complete, ETA 00:06:40
# Fork: 3 of 3
# Warmup Iteration   1: 386.927 ns/op
# Warmup Iteration   2: 304.452 ns/op
# Warmup Iteration   3: 303.068 ns/op
# Warmup Iteration   4: 303.247 ns/op
# Warmup Iteration   5: 306.374 ns/op
Iteration   1: 298.868 ns/op
Iteration   2: 294.975 ns/op
Iteration   3: 295.958 ns/op
Iteration   4: 299.800 ns/op
Iteration   5: 310.150 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.SecureRandomGeneratorBenchmark.random_next_long":
  304.550 ±(99.9%) 5.874 ns/op [Average]
  (min, avg, max) = (294.975, 304.550, 312.466), stdev = 5.495
  CI (99.9%): [298.676, 310.424] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.SecureRandomGeneratorBenchmark.random_next_long
# Parameters: (algorithm = DRBG, size = 128)

# Run progress: 83.33% complete, ETA 00:05:00
# Fork: 1 of 3
# Warmup Iteration   1: 2188.906 ns/op
# Warmup Iteration   2: 1866.468 ns/op
# Warmup Iteration   3: 1954.864 ns/op
# Warmup Iteration   4: 1949.684 ns/op
# Warmup Iteration   5: 1942.506 ns/op
Iteration   1: 1820.615 ns/op
Iteration   2: 1854.440 ns/op
Iteration   3: 1858.502 ns/op
Iteration   4: 1940.911 ns/op
Iteration   5: 1950.437 ns/op

# Run progress: 88.89% complete, ETA 00:03:20
# Fork: 2 of 3
# Warmup Iteration   1: 2086.907 ns/op
# Warmup Iteration   2: 1940.175 ns/op
# Warmup Iteration   3: 1894.573 ns/op
# Warmup Iteration   4: 1888.808 ns/op
# Warmup Iteration   5: 1887.949 ns/op
Iteration   1: 1869.293 ns/op
Iteration   2: 1830.380 ns/op
Iteration   3: 1830.118 ns/op
Iteration   4: 1884.716 ns/op
Iteration   5: 1831.967 ns/op

# Run progress: 94.44% complete, ETA 00:01:40
# Fork: 3 of 3
# Warmup Iteration   1: 2129.160 ns/op
# Warmup Iteration   2: 1932.736 ns/op
# Warmup Iteration   3: 1898.080 ns/op
# Warmup Iteration   4: 1887.615 ns/op
# Warmup Iteration   5: 1887.009 ns/op
Iteration   1: 1873.782 ns/op
Iteration   2: 1791.914 ns/op
Iteration   3: 1898.391 ns/op
Iteration   4: 1893.725 ns/op
Iteration   5: 1891.351 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.SecureRandomGeneratorBenchmark.random_next_long":
  1868.036 ±(99.9%) 46.961 ns/op [Average]
  (min, avg, max) = (1791.914, 1868.036, 1950.437), stdev = 43.927
  CI (99.9%): [1821.075, 1914.997] (assumes normal distribution)


# Run complete. Total time: 00:30:04

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                         (algorithm)  (size)  Mode  Cnt     Score    Error  Units
SecureRandomGeneratorBenchmark.random_next_bytes      default     128  avgt   15  3018.210 ± 61.125  ns/op
SecureRandomGeneratorBenchmark.random_next_bytes   NativePRNG     128  avgt   15  3088.708 ± 92.421  ns/op
SecureRandomGeneratorBenchmark.random_next_bytes         DRBG     128  avgt   15  1791.708 ± 51.406  ns/op
SecureRandomGeneratorBenchmark.random_next_long       default     128  avgt   15   299.924 ±  7.640  ns/op
SecureRandomGeneratorBenchmark.random_next_long    NativePRNG     128  avgt   15   304.550 ±  5.874  ns/op
SecureRandomGeneratorBenchmark.random_next_long          DRBG     128  avgt   15  1868.036 ± 46.961  ns/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_graal_jit/SecureRandomGeneratorBenchmark.json
Running java -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler -jar benchmarks/target/benchmarks.jar .*MapBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_graal_jit/MapBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.entrySet_full_iteration
# Parameters: (dummyData = 32768, mapType = HASH_MAP, realData = 512)

# Run progress: 0.00% complete, ETA 02:05:00
# Fork: 1 of 3
# Warmup Iteration   1: 708645.429 ns/op
# Warmup Iteration   2: 664964.548 ns/op
# Warmup Iteration   3: 655111.583 ns/op
# Warmup Iteration   4: 653675.383 ns/op
# Warmup Iteration   5: 652869.723 ns/op
Iteration   1: 652200.998 ns/op
Iteration   2: 633922.092 ns/op
Iteration   3: 652638.896 ns/op
Iteration   4: 651871.151 ns/op
Iteration   5: 651456.523 ns/op

# Run progress: 1.33% complete, ETA 02:03:45
# Fork: 2 of 3
# Warmup Iteration   1: 677518.746 ns/op
# Warmup Iteration   2: 633569.675 ns/op
# Warmup Iteration   3: 631484.940 ns/op
# Warmup Iteration   4: 631627.061 ns/op
# Warmup Iteration   5: 653623.106 ns/op
Iteration   1: 629457.862 ns/op
Iteration   2: 632834.030 ns/op
Iteration   3: 630395.106 ns/op
Iteration   4: 630260.147 ns/op
Iteration   5: 630920.811 ns/op

# Run progress: 2.67% complete, ETA 02:02:01
# Fork: 3 of 3
# Warmup Iteration   1: 663908.113 ns/op
# Warmup Iteration   2: 664565.365 ns/op
# Warmup Iteration   3: 656779.544 ns/op
# Warmup Iteration   4: 662046.583 ns/op
# Warmup Iteration   5: 660834.479 ns/op
Iteration   1: 659680.326 ns/op
Iteration   2: 660913.143 ns/op
Iteration   3: 659046.840 ns/op
Iteration   4: 611522.582 ns/op
Iteration   5: 610532.421 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.entrySet_full_iteration":
  639843.529 ±(99.9%) 17880.025 ns/op [Average]
  (min, avg, max) = (610532.421, 639843.529, 660913.143), stdev = 16724.987
  CI (99.9%): [621963.503, 657723.554] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.entrySet_full_iteration
# Parameters: (dummyData = 32768, mapType = LINKED_HASH_MAP, realData = 512)

# Run progress: 4.00% complete, ETA 02:00:20
# Fork: 1 of 3
# Warmup Iteration   1: 179417.151 ns/op
# Warmup Iteration   2: 167115.411 ns/op
# Warmup Iteration   3: 165689.776 ns/op
# Warmup Iteration   4: 166475.318 ns/op
# Warmup Iteration   5: 176681.791 ns/op
Iteration   1: 176355.963 ns/op
Iteration   2: 176012.028 ns/op
Iteration   3: 176139.701 ns/op
Iteration   4: 175949.255 ns/op
Iteration   5: 176302.408 ns/op

# Run progress: 5.33% complete, ETA 01:58:40
# Fork: 2 of 3
# Warmup Iteration   1: 193569.673 ns/op
# Warmup Iteration   2: 177163.344 ns/op
# Warmup Iteration   3: 175878.666 ns/op
# Warmup Iteration   4: 167862.538 ns/op
# Warmup Iteration   5: 168436.909 ns/op
Iteration   1: 168830.570 ns/op
Iteration   2: 168808.234 ns/op
Iteration   3: 168948.954 ns/op
Iteration   4: 167260.376 ns/op
Iteration   5: 167282.142 ns/op

# Run progress: 6.67% complete, ETA 01:57:00
# Fork: 3 of 3
# Warmup Iteration   1: 184347.803 ns/op
# Warmup Iteration   2: 177215.011 ns/op
# Warmup Iteration   3: 169703.072 ns/op
# Warmup Iteration   4: 178704.841 ns/op
# Warmup Iteration   5: 178189.780 ns/op
Iteration   1: 177810.374 ns/op
Iteration   2: 177059.863 ns/op
Iteration   3: 177645.860 ns/op
Iteration   4: 177613.175 ns/op
Iteration   5: 177347.717 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.entrySet_full_iteration":
  173957.775 ±(99.9%) 4557.456 ns/op [Average]
  (min, avg, max) = (167260.376, 173957.775, 177810.374), stdev = 4263.047
  CI (99.9%): [169400.319, 178515.231] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.entrySet_full_iteration
# Parameters: (dummyData = 32768, mapType = TREE_MAP, realData = 512)

# Run progress: 8.00% complete, ETA 01:55:19
# Fork: 1 of 3
# Warmup Iteration   1: 362905.659 ns/op
# Warmup Iteration   2: 345839.135 ns/op
# Warmup Iteration   3: 344612.481 ns/op
# Warmup Iteration   4: 355628.267 ns/op
# Warmup Iteration   5: 356949.382 ns/op
Iteration   1: 355766.315 ns/op
Iteration   2: 329855.352 ns/op
Iteration   3: 331728.046 ns/op
Iteration   4: 332153.078 ns/op
Iteration   5: 332475.385 ns/op

# Run progress: 9.33% complete, ETA 01:53:39
# Fork: 2 of 3
# Warmup Iteration   1: 399202.163 ns/op
# Warmup Iteration   2: 347990.146 ns/op
# Warmup Iteration   3: 345575.305 ns/op
# Warmup Iteration   4: 340812.484 ns/op
# Warmup Iteration   5: 341722.511 ns/op
Iteration   1: 341436.567 ns/op
Iteration   2: 341991.377 ns/op
Iteration   3: 341587.492 ns/op
Iteration   4: 341757.404 ns/op
Iteration   5: 340484.526 ns/op

# Run progress: 10.67% complete, ETA 01:51:58
# Fork: 3 of 3
# Warmup Iteration   1: 393993.157 ns/op
# Warmup Iteration   2: 360097.889 ns/op
# Warmup Iteration   3: 358958.896 ns/op
# Warmup Iteration   4: 354100.543 ns/op
# Warmup Iteration   5: 337344.842 ns/op
Iteration   1: 339690.123 ns/op
Iteration   2: 355310.543 ns/op
Iteration   3: 355022.066 ns/op
Iteration   4: 354428.032 ns/op
Iteration   5: 339031.615 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.entrySet_full_iteration":
  342181.195 ±(99.9%) 9680.315 ns/op [Average]
  (min, avg, max) = (329855.352, 342181.195, 355766.315), stdev = 9054.973
  CI (99.9%): [332500.880, 351861.510] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.entrySet_full_iteration
# Parameters: (dummyData = 32768, mapType = IDENTITY_HASH_MAP, realData = 512)

# Run progress: 12.00% complete, ETA 01:50:18
# Fork: 1 of 3
# Warmup Iteration   1: 484230.632 ns/op
# Warmup Iteration   2: 449129.358 ns/op
# Warmup Iteration   3: 445064.728 ns/op
# Warmup Iteration   4: 445874.057 ns/op
# Warmup Iteration   5: 447595.927 ns/op
Iteration   1: 438113.658 ns/op
Iteration   2: 435835.355 ns/op
Iteration   3: 428581.576 ns/op
Iteration   4: 438705.159 ns/op
Iteration   5: 431749.643 ns/op

# Run progress: 13.33% complete, ETA 01:48:38
# Fork: 2 of 3
# Warmup Iteration   1: 478024.486 ns/op
# Warmup Iteration   2: 455739.181 ns/op
# Warmup Iteration   3: 444844.742 ns/op
# Warmup Iteration   4: 446260.110 ns/op
# Warmup Iteration   5: 447655.105 ns/op
Iteration   1: 446498.096 ns/op
Iteration   2: 435689.023 ns/op
Iteration   3: 445193.670 ns/op
Iteration   4: 437908.148 ns/op
Iteration   5: 434419.926 ns/op

# Run progress: 14.67% complete, ETA 01:46:57
# Fork: 3 of 3
# Warmup Iteration   1: 479550.639 ns/op
# Warmup Iteration   2: 444711.380 ns/op
# Warmup Iteration   3: 442526.728 ns/op
# Warmup Iteration   4: 438365.809 ns/op
# Warmup Iteration   5: 445747.751 ns/op
Iteration   1: 427651.093 ns/op
Iteration   2: 429834.119 ns/op
Iteration   3: 435174.667 ns/op
Iteration   4: 440904.193 ns/op
Iteration   5: 433872.419 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.entrySet_full_iteration":
  436008.716 ±(99.9%) 5875.383 ns/op [Average]
  (min, avg, max) = (427651.093, 436008.716, 446498.096), stdev = 5495.837
  CI (99.9%): [430133.333, 441884.099] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.entrySet_full_iteration
# Parameters: (dummyData = 32768, mapType = CONCURRENT_SKIP_LIST_MAP, realData = 512)

# Run progress: 16.00% complete, ETA 01:45:17
# Fork: 1 of 3
# Warmup Iteration   1: 425080.736 ns/op
# Warmup Iteration   2: 392062.738 ns/op
# Warmup Iteration   3: 392311.678 ns/op
# Warmup Iteration   4: 386692.605 ns/op
# Warmup Iteration   5: 393902.549 ns/op
Iteration   1: 386625.698 ns/op
Iteration   2: 384796.563 ns/op
Iteration   3: 387590.018 ns/op
Iteration   4: 383175.377 ns/op
Iteration   5: 386311.556 ns/op

# Run progress: 17.33% complete, ETA 01:43:37
# Fork: 2 of 3
# Warmup Iteration   1: 438025.422 ns/op
# Warmup Iteration   2: 396501.383 ns/op
# Warmup Iteration   3: 391986.958 ns/op
# Warmup Iteration   4: 388881.352 ns/op
# Warmup Iteration   5: 393151.896 ns/op
Iteration   1: 393509.253 ns/op
Iteration   2: 395464.337 ns/op
Iteration   3: 393334.073 ns/op
Iteration   4: 398079.881 ns/op
Iteration   5: 388416.446 ns/op

# Run progress: 18.67% complete, ETA 01:41:57
# Fork: 3 of 3
# Warmup Iteration   1: 433422.862 ns/op
# Warmup Iteration   2: 381646.064 ns/op
# Warmup Iteration   3: 385708.154 ns/op
# Warmup Iteration   4: 386904.622 ns/op
# Warmup Iteration   5: 385764.301 ns/op
Iteration   1: 387792.820 ns/op
Iteration   2: 393780.112 ns/op
Iteration   3: 387703.118 ns/op
Iteration   4: 381085.354 ns/op
Iteration   5: 392068.672 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.entrySet_full_iteration":
  389315.552 ±(99.9%) 5164.251 ns/op [Average]
  (min, avg, max) = (381085.354, 389315.552, 398079.881), stdev = 4830.643
  CI (99.9%): [384151.301, 394479.802] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.get
# Parameters: (dummyData = 32768, mapType = HASH_MAP, realData = 512)

# Run progress: 20.00% complete, ETA 01:40:16
# Fork: 1 of 3
# Warmup Iteration   1: 10.929 ns/op
# Warmup Iteration   2: 9.616 ns/op
# Warmup Iteration   3: 9.745 ns/op
# Warmup Iteration   4: 10.311 ns/op
# Warmup Iteration   5: 10.274 ns/op
Iteration   1: 10.207 ns/op
Iteration   2: 9.568 ns/op
Iteration   3: 9.557 ns/op
Iteration   4: 9.566 ns/op
Iteration   5: 9.514 ns/op

# Run progress: 21.33% complete, ETA 01:38:36
# Fork: 2 of 3
# Warmup Iteration   1: 8.669 ns/op
# Warmup Iteration   2: 8.238 ns/op
# Warmup Iteration   3: 8.226 ns/op
# Warmup Iteration   4: 7.535 ns/op
# Warmup Iteration   5: 7.568 ns/op
Iteration   1: 7.561 ns/op
Iteration   2: 7.857 ns/op
Iteration   3: 7.868 ns/op
Iteration   4: 7.868 ns/op
Iteration   5: 7.852 ns/op

# Run progress: 22.67% complete, ETA 01:37:13
# Fork: 3 of 3
# Warmup Iteration   1: 9.734 ns/op
# Warmup Iteration   2: 9.178 ns/op
# Warmup Iteration   3: 9.155 ns/op
# Warmup Iteration   4: 9.070 ns/op
# Warmup Iteration   5: 9.166 ns/op
Iteration   1: 9.096 ns/op
Iteration   2: 9.041 ns/op
Iteration   3: 9.052 ns/op
Iteration   4: 9.144 ns/op
Iteration   5: 9.175 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.get":
  8.862 ±(99.9%) 0.890 ns/op [Average]
  (min, avg, max) = (7.561, 8.862, 10.207), stdev = 0.833
  CI (99.9%): [7.971, 9.752] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.get
# Parameters: (dummyData = 32768, mapType = LINKED_HASH_MAP, realData = 512)

# Run progress: 24.00% complete, ETA 01:35:32
# Fork: 1 of 3
# Warmup Iteration   1: 9.035 ns/op
# Warmup Iteration   2: 8.342 ns/op
# Warmup Iteration   3: 8.227 ns/op
# Warmup Iteration   4: 8.205 ns/op
# Warmup Iteration   5: 8.330 ns/op
Iteration   1: 8.747 ns/op
Iteration   2: 8.652 ns/op
Iteration   3: 8.312 ns/op
Iteration   4: 8.691 ns/op
Iteration   5: 8.612 ns/op

# Run progress: 25.33% complete, ETA 01:33:50
# Fork: 2 of 3
# Warmup Iteration   1: 9.679 ns/op
# Warmup Iteration   2: 8.066 ns/op
# Warmup Iteration   3: 8.078 ns/op
# Warmup Iteration   4: 8.101 ns/op
# Warmup Iteration   5: 8.126 ns/op
Iteration   1: 8.095 ns/op
Iteration   2: 8.106 ns/op
Iteration   3: 8.108 ns/op
Iteration   4: 8.096 ns/op
Iteration   5: 8.112 ns/op

# Run progress: 26.67% complete, ETA 01:32:09
# Fork: 3 of 3
# Warmup Iteration   1: 9.301 ns/op
# Warmup Iteration   2: 8.490 ns/op
# Warmup Iteration   3: 8.843 ns/op
# Warmup Iteration   4: 8.852 ns/op
# Warmup Iteration   5: 8.935 ns/op
Iteration   1: 8.779 ns/op
Iteration   2: 8.792 ns/op
Iteration   3: 8.836 ns/op
Iteration   4: 8.840 ns/op
Iteration   5: 8.900 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.get":
  8.512 ±(99.9%) 0.350 ns/op [Average]
  (min, avg, max) = (8.095, 8.512, 8.900), stdev = 0.328
  CI (99.9%): [8.161, 8.862] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.get
# Parameters: (dummyData = 32768, mapType = TREE_MAP, realData = 512)

# Run progress: 28.00% complete, ETA 01:30:27
# Fork: 1 of 3
# Warmup Iteration   1: 141.251 ns/op
# Warmup Iteration   2: 126.553 ns/op
# Warmup Iteration   3: 138.468 ns/op
# Warmup Iteration   4: 138.433 ns/op
# Warmup Iteration   5: 138.290 ns/op
Iteration   1: 138.260 ns/op
Iteration   2: 138.385 ns/op
Iteration   3: 138.378 ns/op
Iteration   4: 138.790 ns/op
Iteration   5: 141.005 ns/op

# Run progress: 29.33% complete, ETA 01:28:46
# Fork: 2 of 3
# Warmup Iteration   1: 140.537 ns/op
# Warmup Iteration   2: 130.569 ns/op
# Warmup Iteration   3: 139.154 ns/op
# Warmup Iteration   4: 137.527 ns/op
# Warmup Iteration   5: 135.776 ns/op
Iteration   1: 134.968 ns/op
Iteration   2: 135.300 ns/op
Iteration   3: 135.673 ns/op
Iteration   4: 135.683 ns/op
Iteration   5: 134.631 ns/op

# Run progress: 30.67% complete, ETA 01:27:05
# Fork: 3 of 3
# Warmup Iteration   1: 138.347 ns/op
# Warmup Iteration   2: 128.785 ns/op
# Warmup Iteration   3: 137.033 ns/op
# Warmup Iteration   4: 136.503 ns/op
# Warmup Iteration   5: 135.733 ns/op
Iteration   1: 135.846 ns/op
Iteration   2: 135.715 ns/op
Iteration   3: 135.701 ns/op
Iteration   4: 135.752 ns/op
Iteration   5: 135.750 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.get":
  136.656 ±(99.9%) 1.954 ns/op [Average]
  (min, avg, max) = (134.631, 136.656, 141.005), stdev = 1.828
  CI (99.9%): [134.701, 138.610] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.get
# Parameters: (dummyData = 32768, mapType = IDENTITY_HASH_MAP, realData = 512)

# Run progress: 32.00% complete, ETA 01:25:24
# Fork: 1 of 3
# Warmup Iteration   1: 9.155 ns/op
# Warmup Iteration   2: 8.394 ns/op
# Warmup Iteration   3: 8.543 ns/op
# Warmup Iteration   4: 8.470 ns/op
# Warmup Iteration   5: 9.205 ns/op
Iteration   1: 9.083 ns/op
Iteration   2: 9.065 ns/op
Iteration   3: 9.121 ns/op
Iteration   4: 8.955 ns/op
Iteration   5: 9.029 ns/op

# Run progress: 33.33% complete, ETA 01:23:43
# Fork: 2 of 3
# Warmup Iteration   1: 8.982 ns/op
# Warmup Iteration   2: 8.357 ns/op
# Warmup Iteration   3: 8.665 ns/op
# Warmup Iteration   4: 8.612 ns/op
# Warmup Iteration   5: 8.753 ns/op
Iteration   1: 8.599 ns/op
Iteration   2: 8.685 ns/op
Iteration   3: 8.682 ns/op
Iteration   4: 9.021 ns/op
Iteration   5: 9.052 ns/op

# Run progress: 34.67% complete, ETA 01:22:02
# Fork: 3 of 3
# Warmup Iteration   1: 9.531 ns/op
# Warmup Iteration   2: 8.831 ns/op
# Warmup Iteration   3: 8.850 ns/op
# Warmup Iteration   4: 8.877 ns/op
# Warmup Iteration   5: 8.792 ns/op
Iteration   1: 8.231 ns/op
Iteration   2: 8.147 ns/op
Iteration   3: 8.266 ns/op
Iteration   4: 8.210 ns/op
Iteration   5: 8.234 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.get":
  8.692 ±(99.9%) 0.408 ns/op [Average]
  (min, avg, max) = (8.147, 8.692, 9.121), stdev = 0.382
  CI (99.9%): [8.284, 9.100] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.get
# Parameters: (dummyData = 32768, mapType = CONCURRENT_SKIP_LIST_MAP, realData = 512)

# Run progress: 36.00% complete, ETA 01:20:22
# Fork: 1 of 3
# Warmup Iteration   1: 240.077 ns/op
# Warmup Iteration   2: 222.001 ns/op
# Warmup Iteration   3: 213.391 ns/op
# Warmup Iteration   4: 214.442 ns/op
# Warmup Iteration   5: 214.420 ns/op
Iteration   1: 213.057 ns/op
Iteration   2: 212.887 ns/op
Iteration   3: 214.478 ns/op
Iteration   4: 217.559 ns/op
Iteration   5: 217.423 ns/op

# Run progress: 37.33% complete, ETA 01:18:41
# Fork: 2 of 3
# Warmup Iteration   1: 231.573 ns/op
# Warmup Iteration   2: 218.713 ns/op
# Warmup Iteration   3: 222.755 ns/op
# Warmup Iteration   4: 222.686 ns/op
# Warmup Iteration   5: 222.382 ns/op
Iteration   1: 228.192 ns/op
Iteration   2: 228.053 ns/op
Iteration   3: 227.445 ns/op
Iteration   4: 227.519 ns/op
Iteration   5: 227.507 ns/op

# Run progress: 38.67% complete, ETA 01:17:00
# Fork: 3 of 3
# Warmup Iteration   1: 243.110 ns/op
# Warmup Iteration   2: 226.461 ns/op
# Warmup Iteration   3: 224.835 ns/op
# Warmup Iteration   4: 225.389 ns/op
# Warmup Iteration   5: 224.008 ns/op
Iteration   1: 216.299 ns/op
Iteration   2: 217.137 ns/op
Iteration   3: 216.950 ns/op
Iteration   4: 216.712 ns/op
Iteration   5: 216.886 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.get":
  219.874 ±(99.9%) 6.348 ns/op [Average]
  (min, avg, max) = (212.887, 219.874, 228.192), stdev = 5.938
  CI (99.9%): [213.526, 226.222] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.keySet_full_iteration
# Parameters: (dummyData = 32768, mapType = HASH_MAP, realData = 512)

# Run progress: 40.00% complete, ETA 01:15:19
# Fork: 1 of 3
# Warmup Iteration   1: 802085.314 ns/op
# Warmup Iteration   2: 768685.849 ns/op
# Warmup Iteration   3: 762115.811 ns/op
# Warmup Iteration   4: 757628.910 ns/op
# Warmup Iteration   5: 756644.679 ns/op
Iteration   1: 755871.795 ns/op
Iteration   2: 760138.647 ns/op
Iteration   3: 763056.355 ns/op
Iteration   4: 759092.754 ns/op
Iteration   5: 758627.420 ns/op

# Run progress: 41.33% complete, ETA 01:13:39
# Fork: 2 of 3
# Warmup Iteration   1: 819907.141 ns/op
# Warmup Iteration   2: 758859.960 ns/op
# Warmup Iteration   3: 754805.171 ns/op
# Warmup Iteration   4: 725929.031 ns/op
# Warmup Iteration   5: 728341.369 ns/op
Iteration   1: 727580.674 ns/op
Iteration   2: 726859.218 ns/op
Iteration   3: 732183.514 ns/op
Iteration   4: 727389.610 ns/op
Iteration   5: 700898.475 ns/op

# Run progress: 42.67% complete, ETA 01:11:58
# Fork: 3 of 3
# Warmup Iteration   1: 785668.136 ns/op
# Warmup Iteration   2: 737010.962 ns/op
# Warmup Iteration   3: 734009.399 ns/op
# Warmup Iteration   4: 733062.174 ns/op
# Warmup Iteration   5: 711772.522 ns/op
Iteration   1: 714341.700 ns/op
Iteration   2: 763027.954 ns/op
Iteration   3: 763383.947 ns/op
Iteration   4: 764604.732 ns/op
Iteration   5: 755484.012 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.keySet_full_iteration":
  744836.054 ±(99.9%) 22508.990 ns/op [Average]
  (min, avg, max) = (700898.475, 744836.054, 764604.732), stdev = 21054.923
  CI (99.9%): [722327.064, 767345.044] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.keySet_full_iteration
# Parameters: (dummyData = 32768, mapType = LINKED_HASH_MAP, realData = 512)

# Run progress: 44.00% complete, ETA 01:10:17
# Fork: 1 of 3
# Warmup Iteration   1: 562566.846 ns/op
# Warmup Iteration   2: 495869.496 ns/op
# Warmup Iteration   3: 480032.622 ns/op
# Warmup Iteration   4: 480808.525 ns/op
# Warmup Iteration   5: 532694.575 ns/op
Iteration   1: 484380.738 ns/op
Iteration   2: 469705.815 ns/op
Iteration   3: 471625.494 ns/op
Iteration   4: 472627.378 ns/op
Iteration   5: 472221.200 ns/op

# Run progress: 45.33% complete, ETA 01:08:37
# Fork: 2 of 3
# Warmup Iteration   1: 582398.194 ns/op
# Warmup Iteration   2: 480894.144 ns/op
# Warmup Iteration   3: 482103.260 ns/op
# Warmup Iteration   4: 482727.542 ns/op
# Warmup Iteration   5: 483726.793 ns/op
Iteration   1: 479240.978 ns/op
Iteration   2: 473677.858 ns/op
Iteration   3: 473096.416 ns/op
Iteration   4: 473580.277 ns/op
Iteration   5: 473052.422 ns/op

# Run progress: 46.67% complete, ETA 01:06:56
# Fork: 3 of 3
# Warmup Iteration   1: 553471.743 ns/op
# Warmup Iteration   2: 521279.993 ns/op
# Warmup Iteration   3: 520055.157 ns/op
# Warmup Iteration   4: 489393.174 ns/op
# Warmup Iteration   5: 501143.972 ns/op
Iteration   1: 493443.275 ns/op
Iteration   2: 472942.805 ns/op
Iteration   3: 472957.950 ns/op
Iteration   4: 472302.463 ns/op
Iteration   5: 473704.055 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.keySet_full_iteration":
  475237.275 ±(99.9%) 6556.597 ns/op [Average]
  (min, avg, max) = (469705.815, 475237.275, 493443.275), stdev = 6133.045
  CI (99.9%): [468680.678, 481793.872] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.keySet_full_iteration
# Parameters: (dummyData = 32768, mapType = TREE_MAP, realData = 512)

# Run progress: 48.00% complete, ETA 01:05:16
# Fork: 1 of 3
# Warmup Iteration   1: 2161261.912 ns/op
# Warmup Iteration   2: 2087311.400 ns/op
# Warmup Iteration   3: 2076839.903 ns/op
# Warmup Iteration   4: 2069948.426 ns/op
# Warmup Iteration   5: 2065397.709 ns/op
Iteration   1: 2063792.584 ns/op
Iteration   2: 1938265.211 ns/op
Iteration   3: 1935804.418 ns/op
Iteration   4: 1975981.958 ns/op
Iteration   5: 1975836.434 ns/op

# Run progress: 49.33% complete, ETA 01:03:35
# Fork: 2 of 3
# Warmup Iteration   1: 2225766.905 ns/op
# Warmup Iteration   2: 2052008.545 ns/op
# Warmup Iteration   3: 1926796.714 ns/op
# Warmup Iteration   4: 1926238.058 ns/op
# Warmup Iteration   5: 1924133.828 ns/op
Iteration   1: 1999947.810 ns/op
Iteration   2: 2058687.942 ns/op
Iteration   3: 2047141.662 ns/op
Iteration   4: 2048438.823 ns/op
Iteration   5: 2044042.116 ns/op

# Run progress: 50.67% complete, ETA 01:01:54
# Fork: 3 of 3
# Warmup Iteration   1: 2090067.041 ns/op
# Warmup Iteration   2: 2067625.029 ns/op
# Warmup Iteration   3: 2061252.829 ns/op
# Warmup Iteration   4: 2054814.479 ns/op
# Warmup Iteration   5: 1944074.243 ns/op
Iteration   1: 1954404.709 ns/op
Iteration   2: 1935673.125 ns/op
Iteration   3: 1929282.612 ns/op
Iteration   4: 1932444.492 ns/op
Iteration   5: 1929718.413 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.keySet_full_iteration":
  1984630.821 ±(99.9%) 57352.628 ns/op [Average]
  (min, avg, max) = (1929282.612, 1984630.821, 2063792.584), stdev = 53647.684
  CI (99.9%): [1927278.193, 2041983.448] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.keySet_full_iteration
# Parameters: (dummyData = 32768, mapType = IDENTITY_HASH_MAP, realData = 512)

# Run progress: 52.00% complete, ETA 01:00:14
# Fork: 1 of 3
# Warmup Iteration   1: 593511.455 ns/op
# Warmup Iteration   2: 547051.352 ns/op
# Warmup Iteration   3: 546195.421 ns/op
# Warmup Iteration   4: 546499.388 ns/op
# Warmup Iteration   5: 550769.713 ns/op
Iteration   1: 565519.903 ns/op
Iteration   2: 596826.237 ns/op
Iteration   3: 591883.722 ns/op
Iteration   4: 589340.695 ns/op
Iteration   5: 589222.316 ns/op

# Run progress: 53.33% complete, ETA 00:58:33
# Fork: 2 of 3
# Warmup Iteration   1: 615866.370 ns/op
# Warmup Iteration   2: 560068.844 ns/op
# Warmup Iteration   3: 555504.220 ns/op
# Warmup Iteration   4: 555387.210 ns/op
# Warmup Iteration   5: 556167.599 ns/op
Iteration   1: 560263.470 ns/op
Iteration   2: 551967.884 ns/op
Iteration   3: 549479.841 ns/op
Iteration   4: 550899.804 ns/op
Iteration   5: 550529.174 ns/op

# Run progress: 54.67% complete, ETA 00:56:53
# Fork: 3 of 3
# Warmup Iteration   1: 628624.427 ns/op
# Warmup Iteration   2: 576638.431 ns/op
# Warmup Iteration   3: 571360.270 ns/op
# Warmup Iteration   4: 570104.228 ns/op
# Warmup Iteration   5: 568656.110 ns/op
Iteration   1: 573082.022 ns/op
Iteration   2: 565323.435 ns/op
Iteration   3: 544076.978 ns/op
Iteration   4: 544560.247 ns/op
Iteration   5: 545183.959 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.keySet_full_iteration":
  564543.979 ±(99.9%) 20338.273 ns/op [Average]
  (min, avg, max) = (544076.978, 564543.979, 596826.237), stdev = 19024.433
  CI (99.9%): [544205.706, 584882.252] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.keySet_full_iteration
# Parameters: (dummyData = 32768, mapType = CONCURRENT_SKIP_LIST_MAP, realData = 512)

# Run progress: 56.00% complete, ETA 00:55:12
# Fork: 1 of 3
# Warmup Iteration   1: 3212801.144 ns/op
# Warmup Iteration   2: 2715537.297 ns/op
# Warmup Iteration   3: 2871212.426 ns/op
# Warmup Iteration   4: 2851862.941 ns/op
# Warmup Iteration   5: 2868848.184 ns/op
Iteration   1: 2776343.694 ns/op
Iteration   2: 2670731.027 ns/op
Iteration   3: 2869481.894 ns/op
Iteration   4: 2858021.964 ns/op
Iteration   5: 2857370.278 ns/op

# Run progress: 57.33% complete, ETA 00:53:32
# Fork: 2 of 3
# Warmup Iteration   1: 3358429.136 ns/op
# Warmup Iteration   2: 3024730.269 ns/op
# Warmup Iteration   3: 3032095.135 ns/op
# Warmup Iteration   4: 3029432.858 ns/op
# Warmup Iteration   5: 3020948.256 ns/op
Iteration   1: 3011221.297 ns/op
Iteration   2: 3088220.298 ns/op
Iteration   3: 3246401.698 ns/op
Iteration   4: 3232726.013 ns/op
Iteration   5: 3223795.125 ns/op

# Run progress: 58.67% complete, ETA 00:51:52
# Fork: 3 of 3
# Warmup Iteration   1: 3427329.215 ns/op
# Warmup Iteration   2: 2976475.701 ns/op
# Warmup Iteration   3: 2954199.329 ns/op
# Warmup Iteration   4: 2942316.588 ns/op
# Warmup Iteration   5: 2915538.979 ns/op
Iteration   1: 2901776.258 ns/op
Iteration   2: 2920301.032 ns/op
Iteration   3: 2896958.210 ns/op
Iteration   4: 2888487.090 ns/op
Iteration   5: 2886836.966 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.keySet_full_iteration":
  2955244.856 ±(99.9%) 183095.719 ns/op [Average]
  (min, avg, max) = (2670731.027, 2955244.856, 3246401.698), stdev = 171267.849
  CI (99.9%): [2772149.138, 3138340.575] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.put
# Parameters: (dummyData = 32768, mapType = HASH_MAP, realData = 512)

# Run progress: 60.00% complete, ETA 00:50:11
# Fork: 1 of 3
# Warmup Iteration   1: 19.840 ns/op
# Warmup Iteration   2: 18.363 ns/op
# Warmup Iteration   3: 18.188 ns/op
# Warmup Iteration   4: 18.054 ns/op
# Warmup Iteration   5: 19.460 ns/op
Iteration   1: 18.002 ns/op
Iteration   2: 18.008 ns/op
Iteration   3: 18.139 ns/op
Iteration   4: 18.114 ns/op
Iteration   5: 18.147 ns/op

# Run progress: 61.33% complete, ETA 00:48:31
# Fork: 2 of 3
# Warmup Iteration   1: 18.048 ns/op
# Warmup Iteration   2: 18.155 ns/op
# Warmup Iteration   3: 16.625 ns/op
# Warmup Iteration   4: 16.722 ns/op
# Warmup Iteration   5: 16.732 ns/op
Iteration   1: 16.706 ns/op
Iteration   2: 17.488 ns/op
Iteration   3: 17.329 ns/op
Iteration   4: 17.322 ns/op
Iteration   5: 17.268 ns/op

# Run progress: 62.67% complete, ETA 00:46:50
# Fork: 3 of 3
# Warmup Iteration   1: 18.732 ns/op
# Warmup Iteration   2: 16.681 ns/op
# Warmup Iteration   3: 16.894 ns/op
# Warmup Iteration   4: 16.764 ns/op
# Warmup Iteration   5: 16.752 ns/op
Iteration   1: 16.756 ns/op
Iteration   2: 16.697 ns/op
Iteration   3: 16.796 ns/op
Iteration   4: 16.827 ns/op
Iteration   5: 16.735 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.put":
  17.356 ±(99.9%) 0.631 ns/op [Average]
  (min, avg, max) = (16.697, 17.356, 18.147), stdev = 0.590
  CI (99.9%): [16.724, 17.987] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.put
# Parameters: (dummyData = 32768, mapType = LINKED_HASH_MAP, realData = 512)

# Run progress: 64.00% complete, ETA 00:45:10
# Fork: 1 of 3
# Warmup Iteration   1: 16.013 ns/op
# Warmup Iteration   2: 14.556 ns/op
# Warmup Iteration   3: 15.235 ns/op
# Warmup Iteration   4: 14.976 ns/op
# Warmup Iteration   5: 15.115 ns/op
Iteration   1: 15.126 ns/op
Iteration   2: 14.526 ns/op
Iteration   3: 14.344 ns/op
Iteration   4: 14.575 ns/op
Iteration   5: 14.379 ns/op

# Run progress: 65.33% complete, ETA 00:43:29
# Fork: 2 of 3
# Warmup Iteration   1: 17.652 ns/op
# Warmup Iteration   2: 15.772 ns/op
# Warmup Iteration   3: 15.928 ns/op
# Warmup Iteration   4: 15.901 ns/op
# Warmup Iteration   5: 17.204 ns/op
Iteration   1: 17.055 ns/op
Iteration   2: 17.039 ns/op
Iteration   3: 16.995 ns/op
Iteration   4: 17.017 ns/op
Iteration   5: 17.030 ns/op

# Run progress: 66.67% complete, ETA 00:41:49
# Fork: 3 of 3
# Warmup Iteration   1: 17.620 ns/op
# Warmup Iteration   2: 17.336 ns/op
# Warmup Iteration   3: 16.030 ns/op
# Warmup Iteration   4: 16.017 ns/op
# Warmup Iteration   5: 15.920 ns/op
Iteration   1: 17.161 ns/op
Iteration   2: 16.430 ns/op
Iteration   3: 16.359 ns/op
Iteration   4: 16.354 ns/op
Iteration   5: 16.326 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.put":
  16.048 ±(99.9%) 1.194 ns/op [Average]
  (min, avg, max) = (14.344, 16.048, 17.161), stdev = 1.117
  CI (99.9%): [14.853, 17.242] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.put
# Parameters: (dummyData = 32768, mapType = TREE_MAP, realData = 512)

# Run progress: 68.00% complete, ETA 00:40:08
# Fork: 1 of 3
# Warmup Iteration   1: 158.730 ns/op
# Warmup Iteration   2: 152.722 ns/op
# Warmup Iteration   3: 149.359 ns/op
# Warmup Iteration   4: 149.021 ns/op
# Warmup Iteration   5: 148.637 ns/op
Iteration   1: 148.512 ns/op
Iteration   2: 149.173 ns/op
Iteration   3: 148.671 ns/op
Iteration   4: 148.994 ns/op
Iteration   5: 148.923 ns/op

# Run progress: 69.33% complete, ETA 00:38:28
# Fork: 2 of 3
# Warmup Iteration   1: 156.290 ns/op
# Warmup Iteration   2: 146.198 ns/op
# Warmup Iteration   3: 146.170 ns/op
# Warmup Iteration   4: 146.140 ns/op
# Warmup Iteration   5: 146.078 ns/op
Iteration   1: 146.140 ns/op
Iteration   2: 146.259 ns/op
Iteration   3: 146.213 ns/op
Iteration   4: 146.158 ns/op
Iteration   5: 146.003 ns/op

# Run progress: 70.67% complete, ETA 00:36:48
# Fork: 3 of 3
# Warmup Iteration   1: 155.821 ns/op
# Warmup Iteration   2: 147.864 ns/op
# Warmup Iteration   3: 145.461 ns/op
# Warmup Iteration   4: 145.517 ns/op
# Warmup Iteration   5: 144.465 ns/op
Iteration   1: 145.435 ns/op
Iteration   2: 145.460 ns/op
Iteration   3: 145.338 ns/op
Iteration   4: 145.506 ns/op
Iteration   5: 145.243 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.put":
  146.802 ±(99.9%) 1.651 ns/op [Average]
  (min, avg, max) = (145.243, 146.802, 149.173), stdev = 1.545
  CI (99.9%): [145.151, 148.453] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.put
# Parameters: (dummyData = 32768, mapType = IDENTITY_HASH_MAP, realData = 512)

# Run progress: 72.00% complete, ETA 00:35:07
# Fork: 1 of 3
# Warmup Iteration   1: 20.288 ns/op
# Warmup Iteration   2: 19.309 ns/op
# Warmup Iteration   3: 17.737 ns/op
# Warmup Iteration   4: 17.009 ns/op
# Warmup Iteration   5: 17.179 ns/op
Iteration   1: 17.208 ns/op
Iteration   2: 17.699 ns/op
Iteration   3: 17.743 ns/op
Iteration   4: 17.811 ns/op
Iteration   5: 17.107 ns/op

# Run progress: 73.33% complete, ETA 00:33:27
# Fork: 2 of 3
# Warmup Iteration   1: 16.533 ns/op
# Warmup Iteration   2: 15.842 ns/op
# Warmup Iteration   3: 14.472 ns/op
# Warmup Iteration   4: 14.458 ns/op
# Warmup Iteration   5: 14.368 ns/op
Iteration   1: 14.482 ns/op
Iteration   2: 14.439 ns/op
Iteration   3: 14.324 ns/op
Iteration   4: 14.411 ns/op
Iteration   5: 14.406 ns/op

# Run progress: 74.67% complete, ETA 00:31:46
# Fork: 3 of 3
# Warmup Iteration   1: 19.279 ns/op
# Warmup Iteration   2: 18.823 ns/op
# Warmup Iteration   3: 18.681 ns/op
# Warmup Iteration   4: 18.502 ns/op
# Warmup Iteration   5: 18.487 ns/op
Iteration   1: 18.428 ns/op
Iteration   2: 17.752 ns/op
Iteration   3: 17.857 ns/op
Iteration   4: 17.948 ns/op
Iteration   5: 17.781 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.put":
  16.626 ±(99.9%) 1.761 ns/op [Average]
  (min, avg, max) = (14.324, 16.626, 18.428), stdev = 1.647
  CI (99.9%): [14.865, 18.388] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.put
# Parameters: (dummyData = 32768, mapType = CONCURRENT_SKIP_LIST_MAP, realData = 512)

# Run progress: 76.00% complete, ETA 00:30:06
# Fork: 1 of 3
# Warmup Iteration   1: 273.714 ns/op
# Warmup Iteration   2: 256.431 ns/op
# Warmup Iteration   3: 258.104 ns/op
# Warmup Iteration   4: 258.560 ns/op
# Warmup Iteration   5: 258.468 ns/op
Iteration   1: 258.585 ns/op
Iteration   2: 267.549 ns/op
Iteration   3: 267.222 ns/op
Iteration   4: 258.533 ns/op
Iteration   5: 258.418 ns/op

# Run progress: 77.33% complete, ETA 00:28:26
# Fork: 2 of 3
# Warmup Iteration   1: 267.159 ns/op
# Warmup Iteration   2: 248.088 ns/op
# Warmup Iteration   3: 247.269 ns/op
# Warmup Iteration   4: 250.265 ns/op
# Warmup Iteration   5: 250.249 ns/op
Iteration   1: 250.063 ns/op
Iteration   2: 250.046 ns/op
Iteration   3: 250.063 ns/op
Iteration   4: 250.211 ns/op
Iteration   5: 250.263 ns/op

# Run progress: 78.67% complete, ETA 00:26:45
# Fork: 3 of 3
# Warmup Iteration   1: 251.505 ns/op
# Warmup Iteration   2: 227.122 ns/op
# Warmup Iteration   3: 225.097 ns/op
# Warmup Iteration   4: 225.307 ns/op
# Warmup Iteration   5: 234.727 ns/op
Iteration   1: 235.110 ns/op
Iteration   2: 234.212 ns/op
Iteration   3: 234.215 ns/op
Iteration   4: 233.439 ns/op
Iteration   5: 232.261 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.put":
  248.679 ±(99.9%) 13.109 ns/op [Average]
  (min, avg, max) = (232.261, 248.679, 267.549), stdev = 12.262
  CI (99.9%): [235.571, 261.788] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.putIfAbsent
# Parameters: (dummyData = 32768, mapType = HASH_MAP, realData = 512)

# Run progress: 80.00% complete, ETA 00:25:05
# Fork: 1 of 3
# Warmup Iteration   1: 15.002 ns/op
# Warmup Iteration   2: 15.199 ns/op
# Warmup Iteration   3: 15.731 ns/op
# Warmup Iteration   4: 14.983 ns/op
# Warmup Iteration   5: 15.629 ns/op
Iteration   1: 15.604 ns/op
Iteration   2: 15.603 ns/op
Iteration   3: 15.600 ns/op
Iteration   4: 15.514 ns/op
Iteration   5: 15.626 ns/op

# Run progress: 81.33% complete, ETA 00:23:24
# Fork: 2 of 3
# Warmup Iteration   1: 16.162 ns/op
# Warmup Iteration   2: 14.503 ns/op
# Warmup Iteration   3: 14.981 ns/op
# Warmup Iteration   4: 14.886 ns/op
# Warmup Iteration   5: 14.886 ns/op
Iteration   1: 14.899 ns/op
Iteration   2: 14.956 ns/op
Iteration   3: 14.858 ns/op
Iteration   4: 15.017 ns/op
Iteration   5: 14.956 ns/op

# Run progress: 82.67% complete, ETA 00:21:44
# Fork: 3 of 3
# Warmup Iteration   1: 15.297 ns/op
# Warmup Iteration   2: 14.779 ns/op
# Warmup Iteration   3: 14.542 ns/op
# Warmup Iteration   4: 14.494 ns/op
# Warmup Iteration   5: 14.514 ns/op
Iteration   1: 14.595 ns/op
Iteration   2: 13.521 ns/op
Iteration   3: 13.553 ns/op
Iteration   4: 14.593 ns/op
Iteration   5: 14.509 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.putIfAbsent":
  14.894 ±(99.9%) 0.726 ns/op [Average]
  (min, avg, max) = (13.521, 14.894, 15.626), stdev = 0.679
  CI (99.9%): [14.167, 15.620] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.putIfAbsent
# Parameters: (dummyData = 32768, mapType = LINKED_HASH_MAP, realData = 512)

# Run progress: 84.00% complete, ETA 00:20:04
# Fork: 1 of 3
# Warmup Iteration   1: 16.406 ns/op
# Warmup Iteration   2: 15.160 ns/op
# Warmup Iteration   3: 14.998 ns/op
# Warmup Iteration   4: 15.085 ns/op
# Warmup Iteration   5: 15.008 ns/op
Iteration   1: 15.018 ns/op
Iteration   2: 15.014 ns/op
Iteration   3: 15.014 ns/op
Iteration   4: 15.141 ns/op
Iteration   5: 15.178 ns/op

# Run progress: 85.33% complete, ETA 00:18:23
# Fork: 2 of 3
# Warmup Iteration   1: 15.080 ns/op
# Warmup Iteration   2: 16.418 ns/op
# Warmup Iteration   3: 14.111 ns/op
# Warmup Iteration   4: 14.156 ns/op
# Warmup Iteration   5: 14.180 ns/op
Iteration   1: 14.188 ns/op
Iteration   2: 14.148 ns/op
Iteration   3: 14.186 ns/op
Iteration   4: 14.304 ns/op
Iteration   5: 14.203 ns/op

# Run progress: 86.67% complete, ETA 00:16:43
# Fork: 3 of 3
# Warmup Iteration   1: 17.134 ns/op
# Warmup Iteration   2: 15.476 ns/op
# Warmup Iteration   3: 15.113 ns/op
# Warmup Iteration   4: 15.052 ns/op
# Warmup Iteration   5: 15.004 ns/op
Iteration   1: 15.023 ns/op
Iteration   2: 14.947 ns/op
Iteration   3: 14.939 ns/op
Iteration   4: 14.949 ns/op
Iteration   5: 15.021 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.putIfAbsent":
  14.751 ±(99.9%) 0.434 ns/op [Average]
  (min, avg, max) = (14.148, 14.751, 15.178), stdev = 0.406
  CI (99.9%): [14.318, 15.185] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.putIfAbsent
# Parameters: (dummyData = 32768, mapType = TREE_MAP, realData = 512)

# Run progress: 88.00% complete, ETA 00:15:03
# Fork: 1 of 3
# Warmup Iteration   1: 146.196 ns/op
# Warmup Iteration   2: 134.725 ns/op
# Warmup Iteration   3: 130.383 ns/op
# Warmup Iteration   4: 130.244 ns/op
# Warmup Iteration   5: 130.650 ns/op
Iteration   1: 130.438 ns/op
Iteration   2: 126.998 ns/op
Iteration   3: 126.943 ns/op
Iteration   4: 127.009 ns/op
Iteration   5: 131.098 ns/op

# Run progress: 89.33% complete, ETA 00:13:22
# Fork: 2 of 3
# Warmup Iteration   1: 143.341 ns/op
# Warmup Iteration   2: 131.305 ns/op
# Warmup Iteration   3: 131.088 ns/op
# Warmup Iteration   4: 129.180 ns/op
# Warmup Iteration   5: 126.999 ns/op
Iteration   1: 127.877 ns/op
Iteration   2: 127.463 ns/op
Iteration   3: 127.501 ns/op
Iteration   4: 127.768 ns/op
Iteration   5: 127.454 ns/op

# Run progress: 90.67% complete, ETA 00:11:42
# Fork: 3 of 3
# Warmup Iteration   1: 145.664 ns/op
# Warmup Iteration   2: 138.361 ns/op
# Warmup Iteration   3: 134.351 ns/op
# Warmup Iteration   4: 133.627 ns/op
# Warmup Iteration   5: 132.924 ns/op
Iteration   1: 132.760 ns/op
Iteration   2: 132.801 ns/op
Iteration   3: 133.187 ns/op
Iteration   4: 133.306 ns/op
Iteration   5: 132.649 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.putIfAbsent":
  129.683 ±(99.9%) 2.849 ns/op [Average]
  (min, avg, max) = (126.943, 129.683, 133.306), stdev = 2.665
  CI (99.9%): [126.835, 132.532] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.putIfAbsent
# Parameters: (dummyData = 32768, mapType = IDENTITY_HASH_MAP, realData = 512)

# Run progress: 92.00% complete, ETA 00:10:02
# Fork: 1 of 3
# Warmup Iteration   1: 9.826 ns/op
# Warmup Iteration   2: 9.549 ns/op
# Warmup Iteration   3: 9.462 ns/op
# Warmup Iteration   4: 8.962 ns/op
# Warmup Iteration   5: 8.652 ns/op
Iteration   1: 8.693 ns/op
Iteration   2: 9.440 ns/op
Iteration   3: 9.367 ns/op
Iteration   4: 8.906 ns/op
Iteration   5: 9.331 ns/op

# Run progress: 93.33% complete, ETA 00:08:21
# Fork: 2 of 3
# Warmup Iteration   1: 10.567 ns/op
# Warmup Iteration   2: 10.494 ns/op
# Warmup Iteration   3: 10.083 ns/op
# Warmup Iteration   4: 10.133 ns/op
# Warmup Iteration   5: 10.133 ns/op
Iteration   1: 10.111 ns/op
Iteration   2: 9.545 ns/op
Iteration   3: 9.582 ns/op
Iteration   4: 9.658 ns/op
Iteration   5: 9.661 ns/op

# Run progress: 94.67% complete, ETA 00:06:41
# Fork: 3 of 3
# Warmup Iteration   1: 10.469 ns/op
# Warmup Iteration   2: 10.245 ns/op
# Warmup Iteration   3: 10.232 ns/op
# Warmup Iteration   4: 10.278 ns/op
# Warmup Iteration   5: 10.248 ns/op
Iteration   1: 10.069 ns/op
Iteration   2: 10.220 ns/op
Iteration   3: 10.202 ns/op
Iteration   4: 10.251 ns/op
Iteration   5: 10.197 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.putIfAbsent":
  9.682 ±(99.9%) 0.525 ns/op [Average]
  (min, avg, max) = (8.693, 9.682, 10.251), stdev = 0.491
  CI (99.9%): [9.157, 10.207] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.putIfAbsent
# Parameters: (dummyData = 32768, mapType = CONCURRENT_SKIP_LIST_MAP, realData = 512)

# Run progress: 96.00% complete, ETA 00:05:01
# Fork: 1 of 3
# Warmup Iteration   1: 247.533 ns/op
# Warmup Iteration   2: 228.841 ns/op
# Warmup Iteration   3: 224.780 ns/op
# Warmup Iteration   4: 224.975 ns/op
# Warmup Iteration   5: 225.131 ns/op
Iteration   1: 225.407 ns/op
Iteration   2: 228.439 ns/op
Iteration   3: 227.967 ns/op
Iteration   4: 238.209 ns/op
Iteration   5: 238.811 ns/op

# Run progress: 97.33% complete, ETA 00:03:20
# Fork: 2 of 3
# Warmup Iteration   1: 253.737 ns/op
# Warmup Iteration   2: 238.081 ns/op
# Warmup Iteration   3: 241.594 ns/op
# Warmup Iteration   4: 243.743 ns/op
# Warmup Iteration   5: 244.093 ns/op
Iteration   1: 244.179 ns/op
Iteration   2: 253.359 ns/op
Iteration   3: 244.269 ns/op
Iteration   4: 244.363 ns/op
Iteration   5: 244.267 ns/op

# Run progress: 98.67% complete, ETA 00:01:40
# Fork: 3 of 3
# Warmup Iteration   1: 247.741 ns/op
# Warmup Iteration   2: 233.226 ns/op
# Warmup Iteration   3: 231.888 ns/op
# Warmup Iteration   4: 232.679 ns/op
# Warmup Iteration   5: 231.004 ns/op
Iteration   1: 230.700 ns/op
Iteration   2: 245.769 ns/op
Iteration   3: 241.986 ns/op
Iteration   4: 229.678 ns/op
Iteration   5: 241.330 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.putIfAbsent":
  238.582 ±(99.9%) 8.803 ns/op [Average]
  (min, avg, max) = (225.407, 238.582, 253.359), stdev = 8.235
  CI (99.9%): [229.779, 247.385] (assumes normal distribution)


# Run complete. Total time: 02:05:25

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                             (dummyData)                 (mapType)  (realData)  Mode  Cnt        Score        Error  Units
MapBenchmark.entrySet_full_iteration        32768                  HASH_MAP         512  avgt   15   639843.529 ±  17880.025  ns/op
MapBenchmark.entrySet_full_iteration        32768           LINKED_HASH_MAP         512  avgt   15   173957.775 ±   4557.456  ns/op
MapBenchmark.entrySet_full_iteration        32768                  TREE_MAP         512  avgt   15   342181.195 ±   9680.315  ns/op
MapBenchmark.entrySet_full_iteration        32768         IDENTITY_HASH_MAP         512  avgt   15   436008.716 ±   5875.383  ns/op
MapBenchmark.entrySet_full_iteration        32768  CONCURRENT_SKIP_LIST_MAP         512  avgt   15   389315.552 ±   5164.251  ns/op
MapBenchmark.get                            32768                  HASH_MAP         512  avgt   15        8.862 ±      0.890  ns/op
MapBenchmark.get                            32768           LINKED_HASH_MAP         512  avgt   15        8.512 ±      0.350  ns/op
MapBenchmark.get                            32768                  TREE_MAP         512  avgt   15      136.656 ±      1.954  ns/op
MapBenchmark.get                            32768         IDENTITY_HASH_MAP         512  avgt   15        8.692 ±      0.408  ns/op
MapBenchmark.get                            32768  CONCURRENT_SKIP_LIST_MAP         512  avgt   15      219.874 ±      6.348  ns/op
MapBenchmark.keySet_full_iteration          32768                  HASH_MAP         512  avgt   15   744836.054 ±  22508.990  ns/op
MapBenchmark.keySet_full_iteration          32768           LINKED_HASH_MAP         512  avgt   15   475237.275 ±   6556.597  ns/op
MapBenchmark.keySet_full_iteration          32768                  TREE_MAP         512  avgt   15  1984630.821 ±  57352.628  ns/op
MapBenchmark.keySet_full_iteration          32768         IDENTITY_HASH_MAP         512  avgt   15   564543.979 ±  20338.273  ns/op
MapBenchmark.keySet_full_iteration          32768  CONCURRENT_SKIP_LIST_MAP         512  avgt   15  2955244.856 ± 183095.719  ns/op
MapBenchmark.put                            32768                  HASH_MAP         512  avgt   15       17.356 ±      0.631  ns/op
MapBenchmark.put                            32768           LINKED_HASH_MAP         512  avgt   15       16.048 ±      1.194  ns/op
MapBenchmark.put                            32768                  TREE_MAP         512  avgt   15      146.802 ±      1.651  ns/op
MapBenchmark.put                            32768         IDENTITY_HASH_MAP         512  avgt   15       16.626 ±      1.761  ns/op
MapBenchmark.put                            32768  CONCURRENT_SKIP_LIST_MAP         512  avgt   15      248.679 ±     13.109  ns/op
MapBenchmark.putIfAbsent                    32768                  HASH_MAP         512  avgt   15       14.894 ±      0.726  ns/op
MapBenchmark.putIfAbsent                    32768           LINKED_HASH_MAP         512  avgt   15       14.751 ±      0.434  ns/op
MapBenchmark.putIfAbsent                    32768                  TREE_MAP         512  avgt   15      129.683 ±      2.849  ns/op
MapBenchmark.putIfAbsent                    32768         IDENTITY_HASH_MAP         512  avgt   15        9.682 ±      0.525  ns/op
MapBenchmark.putIfAbsent                    32768  CONCURRENT_SKIP_LIST_MAP         512  avgt   15      238.582 ±      8.803  ns/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_graal_jit/MapBenchmark.json
Running java -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler -jar benchmarks/target/benchmarks.jar .*SetBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_graal_jit/SetBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.SetBenchmark.add
# Parameters: (dummyData = 32768, mapType = HASH_SET, realData = 512)

# Run progress: 0.00% complete, ETA 00:30:00
# Fork: 1 of 3
# Warmup Iteration   1: 19.605 ns/op
# Warmup Iteration   2: 16.441 ns/op
# Warmup Iteration   3: 16.652 ns/op
# Warmup Iteration   4: 17.500 ns/op
# Warmup Iteration   5: 17.535 ns/op
Iteration   1: 17.121 ns/op
Iteration   2: 17.302 ns/op
Iteration   3: 17.201 ns/op
Iteration   4: 17.214 ns/op
Iteration   5: 17.374 ns/op

# Run progress: 5.56% complete, ETA 00:28:26
# Fork: 2 of 3
# Warmup Iteration   1: 17.855 ns/op
# Warmup Iteration   2: 15.708 ns/op
# Warmup Iteration   3: 15.996 ns/op
# Warmup Iteration   4: 16.024 ns/op
# Warmup Iteration   5: 17.681 ns/op
Iteration   1: 17.633 ns/op
Iteration   2: 16.201 ns/op
Iteration   3: 17.335 ns/op
Iteration   4: 17.355 ns/op
Iteration   5: 17.282 ns/op

# Run progress: 11.11% complete, ETA 00:26:44
# Fork: 3 of 3
# Warmup Iteration   1: 19.812 ns/op
# Warmup Iteration   2: 17.540 ns/op
# Warmup Iteration   3: 18.432 ns/op
# Warmup Iteration   4: 18.357 ns/op
# Warmup Iteration   5: 18.266 ns/op
Iteration   1: 18.167 ns/op
Iteration   2: 18.317 ns/op
Iteration   3: 18.336 ns/op
Iteration   4: 18.165 ns/op
Iteration   5: 18.199 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.SetBenchmark.add":
  17.547 ±(99.9%) 0.631 ns/op [Average]
  (min, avg, max) = (16.201, 17.547, 18.336), stdev = 0.590
  CI (99.9%): [16.916, 18.178] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.SetBenchmark.add
# Parameters: (dummyData = 32768, mapType = LINKED_HASH_SET, realData = 512)

# Run progress: 16.67% complete, ETA 00:25:04
# Fork: 1 of 3
# Warmup Iteration   1: 20.467 ns/op
# Warmup Iteration   2: 20.059 ns/op
# Warmup Iteration   3: 20.203 ns/op
# Warmup Iteration   4: 20.250 ns/op
# Warmup Iteration   5: 20.027 ns/op
Iteration   1: 20.019 ns/op
Iteration   2: 20.029 ns/op
Iteration   3: 20.018 ns/op
Iteration   4: 20.116 ns/op
Iteration   5: 20.023 ns/op

# Run progress: 22.22% complete, ETA 00:23:23
# Fork: 2 of 3
# Warmup Iteration   1: 21.184 ns/op
# Warmup Iteration   2: 19.716 ns/op
# Warmup Iteration   3: 19.961 ns/op
# Warmup Iteration   4: 19.954 ns/op
# Warmup Iteration   5: 21.684 ns/op
Iteration   1: 21.545 ns/op
Iteration   2: 21.535 ns/op
Iteration   3: 20.388 ns/op
Iteration   4: 20.676 ns/op
Iteration   5: 20.636 ns/op

# Run progress: 27.78% complete, ETA 00:21:43
# Fork: 3 of 3
# Warmup Iteration   1: 21.764 ns/op
# Warmup Iteration   2: 19.669 ns/op
# Warmup Iteration   3: 20.183 ns/op
# Warmup Iteration   4: 20.197 ns/op
# Warmup Iteration   5: 20.126 ns/op
Iteration   1: 20.098 ns/op
Iteration   2: 21.748 ns/op
Iteration   3: 21.756 ns/op
Iteration   4: 21.663 ns/op
Iteration   5: 21.599 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.SetBenchmark.add":
  20.790 ±(99.9%) 0.802 ns/op [Average]
  (min, avg, max) = (20.018, 20.790, 21.756), stdev = 0.750
  CI (99.9%): [19.988, 21.592] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.SetBenchmark.add
# Parameters: (dummyData = 32768, mapType = TREE_SET, realData = 512)

# Run progress: 33.33% complete, ETA 00:20:03
# Fork: 1 of 3
# Warmup Iteration   1: 146.891 ns/op
# Warmup Iteration   2: 140.760 ns/op
# Warmup Iteration   3: 141.561 ns/op
# Warmup Iteration   4: 146.708 ns/op
# Warmup Iteration   5: 146.844 ns/op
Iteration   1: 146.636 ns/op
Iteration   2: 146.225 ns/op
Iteration   3: 146.041 ns/op
Iteration   4: 140.535 ns/op
Iteration   5: 139.829 ns/op

# Run progress: 38.89% complete, ETA 00:18:23
# Fork: 2 of 3
# Warmup Iteration   1: 147.047 ns/op
# Warmup Iteration   2: 137.643 ns/op
# Warmup Iteration   3: 136.655 ns/op
# Warmup Iteration   4: 136.580 ns/op
# Warmup Iteration   5: 136.563 ns/op
Iteration   1: 136.583 ns/op
Iteration   2: 136.745 ns/op
Iteration   3: 143.325 ns/op
Iteration   4: 142.597 ns/op
Iteration   5: 136.452 ns/op

# Run progress: 44.44% complete, ETA 00:16:42
# Fork: 3 of 3
# Warmup Iteration   1: 151.288 ns/op
# Warmup Iteration   2: 141.122 ns/op
# Warmup Iteration   3: 142.656 ns/op
# Warmup Iteration   4: 142.660 ns/op
# Warmup Iteration   5: 142.643 ns/op
Iteration   1: 142.764 ns/op
Iteration   2: 142.486 ns/op
Iteration   3: 142.149 ns/op
Iteration   4: 142.701 ns/op
Iteration   5: 142.747 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.SetBenchmark.add":
  141.854 ±(99.9%) 3.545 ns/op [Average]
  (min, avg, max) = (136.452, 141.854, 146.636), stdev = 3.316
  CI (99.9%): [138.309, 145.400] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.SetBenchmark.contains
# Parameters: (dummyData = 32768, mapType = HASH_SET, realData = 512)

# Run progress: 50.00% complete, ETA 00:15:02
# Fork: 1 of 3
# Warmup Iteration   1: 9.330 ns/op
# Warmup Iteration   2: 8.508 ns/op
# Warmup Iteration   3: 8.515 ns/op
# Warmup Iteration   4: 8.550 ns/op
# Warmup Iteration   5: 8.552 ns/op
Iteration   1: 8.526 ns/op
Iteration   2: 8.781 ns/op
Iteration   3: 8.757 ns/op
Iteration   4: 8.761 ns/op
Iteration   5: 8.782 ns/op

# Run progress: 55.56% complete, ETA 00:13:22
# Fork: 2 of 3
# Warmup Iteration   1: 9.902 ns/op
# Warmup Iteration   2: 9.126 ns/op
# Warmup Iteration   3: 9.181 ns/op
# Warmup Iteration   4: 9.097 ns/op
# Warmup Iteration   5: 9.114 ns/op
Iteration   1: 9.126 ns/op
Iteration   2: 9.055 ns/op
Iteration   3: 9.031 ns/op
Iteration   4: 9.077 ns/op
Iteration   5: 9.077 ns/op

# Run progress: 61.11% complete, ETA 00:11:41
# Fork: 3 of 3
# Warmup Iteration   1: 10.320 ns/op
# Warmup Iteration   2: 9.299 ns/op
# Warmup Iteration   3: 9.174 ns/op
# Warmup Iteration   4: 9.171 ns/op
# Warmup Iteration   5: 9.163 ns/op
Iteration   1: 9.177 ns/op
Iteration   2: 9.164 ns/op
Iteration   3: 9.166 ns/op
Iteration   4: 9.197 ns/op
Iteration   5: 9.221 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.SetBenchmark.contains":
  8.993 ±(99.9%) 0.229 ns/op [Average]
  (min, avg, max) = (8.526, 8.993, 9.221), stdev = 0.214
  CI (99.9%): [8.765, 9.222] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.SetBenchmark.contains
# Parameters: (dummyData = 32768, mapType = LINKED_HASH_SET, realData = 512)

# Run progress: 66.67% complete, ETA 00:10:01
# Fork: 1 of 3
# Warmup Iteration   1: 9.438 ns/op
# Warmup Iteration   2: 8.198 ns/op
# Warmup Iteration   3: 8.815 ns/op
# Warmup Iteration   4: 8.731 ns/op
# Warmup Iteration   5: 8.837 ns/op
Iteration   1: 8.807 ns/op
Iteration   2: 8.746 ns/op
Iteration   3: 8.767 ns/op
Iteration   4: 8.410 ns/op
Iteration   5: 8.951 ns/op

# Run progress: 72.22% complete, ETA 00:08:21
# Fork: 2 of 3
# Warmup Iteration   1: 9.232 ns/op
# Warmup Iteration   2: 8.476 ns/op
# Warmup Iteration   3: 8.557 ns/op
# Warmup Iteration   4: 8.482 ns/op
# Warmup Iteration   5: 8.486 ns/op
Iteration   1: 8.463 ns/op
Iteration   2: 8.508 ns/op
Iteration   3: 8.489 ns/op
Iteration   4: 8.519 ns/op
Iteration   5: 8.499 ns/op

# Run progress: 77.78% complete, ETA 00:06:41
# Fork: 3 of 3
# Warmup Iteration   1: 8.499 ns/op
# Warmup Iteration   2: 8.536 ns/op
# Warmup Iteration   3: 8.611 ns/op
# Warmup Iteration   4: 8.625 ns/op
# Warmup Iteration   5: 8.610 ns/op
Iteration   1: 8.635 ns/op
Iteration   2: 7.916 ns/op
Iteration   3: 7.927 ns/op
Iteration   4: 7.968 ns/op
Iteration   5: 8.668 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.SetBenchmark.contains":
  8.485 ±(99.9%) 0.342 ns/op [Average]
  (min, avg, max) = (7.916, 8.485, 8.951), stdev = 0.320
  CI (99.9%): [8.143, 8.827] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.SetBenchmark.contains
# Parameters: (dummyData = 32768, mapType = TREE_SET, realData = 512)

# Run progress: 83.33% complete, ETA 00:05:00
# Fork: 1 of 3
# Warmup Iteration   1: 135.236 ns/op
# Warmup Iteration   2: 128.527 ns/op
# Warmup Iteration   3: 121.551 ns/op
# Warmup Iteration   4: 115.273 ns/op
# Warmup Iteration   5: 115.565 ns/op
Iteration   1: 115.556 ns/op
Iteration   2: 120.445 ns/op
Iteration   3: 121.348 ns/op
Iteration   4: 121.169 ns/op
Iteration   5: 120.938 ns/op

# Run progress: 88.89% complete, ETA 00:03:20
# Fork: 2 of 3
# Warmup Iteration   1: 134.178 ns/op
# Warmup Iteration   2: 128.744 ns/op
# Warmup Iteration   3: 119.818 ns/op
# Warmup Iteration   4: 119.855 ns/op
# Warmup Iteration   5: 120.050 ns/op
Iteration   1: 120.088 ns/op
Iteration   2: 120.097 ns/op
Iteration   3: 120.037 ns/op
Iteration   4: 119.708 ns/op
Iteration   5: 119.976 ns/op

# Run progress: 94.44% complete, ETA 00:01:40
# Fork: 3 of 3
# Warmup Iteration   1: 127.934 ns/op
# Warmup Iteration   2: 127.776 ns/op
# Warmup Iteration   3: 121.004 ns/op
# Warmup Iteration   4: 120.418 ns/op
# Warmup Iteration   5: 120.070 ns/op
Iteration   1: 120.493 ns/op
Iteration   2: 120.275 ns/op
Iteration   3: 120.410 ns/op
Iteration   4: 120.177 ns/op
Iteration   5: 120.108 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.SetBenchmark.contains":
  120.055 ±(99.9%) 1.417 ns/op [Average]
  (min, avg, max) = (115.556, 120.055, 121.348), stdev = 1.325
  CI (99.9%): [118.638, 121.472] (assumes normal distribution)


# Run complete. Total time: 00:30:04

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark              (dummyData)        (mapType)  (realData)  Mode  Cnt    Score   Error  Units
SetBenchmark.add             32768         HASH_SET         512  avgt   15   17.547 ± 0.631  ns/op
SetBenchmark.add             32768  LINKED_HASH_SET         512  avgt   15   20.790 ± 0.802  ns/op
SetBenchmark.add             32768         TREE_SET         512  avgt   15  141.854 ± 3.545  ns/op
SetBenchmark.contains        32768         HASH_SET         512  avgt   15    8.993 ± 0.229  ns/op
SetBenchmark.contains        32768  LINKED_HASH_SET         512  avgt   15    8.485 ± 0.342  ns/op
SetBenchmark.contains        32768         TREE_SET         512  avgt   15  120.055 ± 1.417  ns/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_graal_jit/SetBenchmark.json
Running java -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler -jar benchmarks/target/benchmarks.jar .*QueueThroughputBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_graal_jit/QueueThroughputBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 8 threads (1 group; 4x "offer", 4x "poll" in each group), will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.QueueThroughputBenchmark.queue_throughput
# Parameters: (capacity = 262144, queueType = LINKED_BLOCKING_QUEUE)

# Run progress: 0.00% complete, ETA 00:30:00
# Fork: 1 of 3
# Warmup Iteration   1: 0.007 ops/ns
# Warmup Iteration   2: 0.005 ops/ns
# Warmup Iteration   3: 0.005 ops/ns
# Warmup Iteration   4: 0.005 ops/ns
# Warmup Iteration   5: 0.005 ops/ns
Iteration   1: 0.005 ops/ns
                 offer: 0.003 ops/ns
                 poll:  0.002 ops/ns

Iteration   2: 0.005 ops/ns
                 offer: 0.003 ops/ns
                 poll:  0.002 ops/ns

Iteration   3: 0.005 ops/ns
                 offer: 0.003 ops/ns
                 poll:  0.002 ops/ns

Iteration   4: 0.005 ops/ns
                 offer: 0.003 ops/ns
                 poll:  0.002 ops/ns

Iteration   5: 0.005 ops/ns
                 offer: 0.003 ops/ns
                 poll:  0.002 ops/ns


# Run progress: 5.56% complete, ETA 00:28:30
# Fork: 2 of 3
# Warmup Iteration   1: 0.007 ops/ns
# Warmup Iteration   2: 0.005 ops/ns
# Warmup Iteration   3: 0.005 ops/ns
# Warmup Iteration   4: 0.005 ops/ns
# Warmup Iteration   5: 0.005 ops/ns
Iteration   1: 0.005 ops/ns
                 offer: 0.003 ops/ns
                 poll:  0.003 ops/ns

Iteration   2: 0.005 ops/ns
                 offer: 0.003 ops/ns
                 poll:  0.003 ops/ns

Iteration   3: 0.005 ops/ns
                 offer: 0.003 ops/ns
                 poll:  0.003 ops/ns

Iteration   4: 0.005 ops/ns
                 offer: 0.003 ops/ns
                 poll:  0.003 ops/ns

Iteration   5: 0.006 ops/ns
                 offer: 0.003 ops/ns
                 poll:  0.003 ops/ns


# Run progress: 11.11% complete, ETA 00:26:47
# Fork: 3 of 3
# Warmup Iteration   1: 0.007 ops/ns
# Warmup Iteration   2: 0.005 ops/ns
# Warmup Iteration   3: 0.005 ops/ns
# Warmup Iteration   4: 0.005 ops/ns
# Warmup Iteration   5: 0.005 ops/ns
Iteration   1: 0.005 ops/ns
                 offer: 0.003 ops/ns
                 poll:  0.003 ops/ns

Iteration   2: 0.006 ops/ns
                 offer: 0.003 ops/ns
                 poll:  0.003 ops/ns

Iteration   3: 0.005 ops/ns
                 offer: 0.003 ops/ns
                 poll:  0.003 ops/ns

Iteration   4: 0.006 ops/ns
                 offer: 0.003 ops/ns
                 poll:  0.003 ops/ns

Iteration   5: 0.005 ops/ns
                 offer: 0.003 ops/ns
                 poll:  0.003 ops/ns



Result "com.ionutbalosin.jvm.jit.benchmark.QueueThroughputBenchmark.queue_throughput":
  0.005 ±(99.9%) 0.001 ops/ns [Average]
  (min, avg, max) = (0.005, 0.005, 0.006), stdev = 0.001
  CI (99.9%): [0.005, 0.006] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.QueueThroughputBenchmark.queue_throughput:offer":
  0.003 ±(99.9%) 0.001 ops/ns [Average]
  (min, avg, max) = (0.003, 0.003, 0.003), stdev = 0.001
  CI (99.9%): [0.003, 0.003] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.QueueThroughputBenchmark.queue_throughput:poll":
  0.003 ±(99.9%) 0.001 ops/ns [Average]
  (min, avg, max) = (0.002, 0.003, 0.003), stdev = 0.001
  CI (99.9%): [0.002, 0.003] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 8 threads (1 group; 4x "offer", 4x "poll" in each group), will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.QueueThroughputBenchmark.queue_throughput
# Parameters: (capacity = 262144, queueType = ARRAY_BLOCKING_QUEUE_F)

# Run progress: 16.67% complete, ETA 00:25:06
# Fork: 1 of 3
# Warmup Iteration   1: ≈ 10⁻⁴ ops/ns
# Warmup Iteration   2: ≈ 10⁻⁴ ops/ns
# Warmup Iteration   3: ≈ 10⁻⁴ ops/ns
# Warmup Iteration   4: ≈ 10⁻⁴ ops/ns
# Warmup Iteration   5: ≈ 10⁻⁴ ops/ns
Iteration   1: ≈ 10⁻⁴ ops/ns
                 offer: ≈ 10⁻⁴ ops/ns
                 poll:  ≈ 10⁻⁴ ops/ns

Iteration   2: ≈ 10⁻⁴ ops/ns
                 offer: ≈ 10⁻⁴ ops/ns
                 poll:  ≈ 10⁻⁴ ops/ns

Iteration   3: ≈ 10⁻⁴ ops/ns
                 offer: ≈ 10⁻⁴ ops/ns
                 poll:  ≈ 10⁻⁴ ops/ns

Iteration   4: ≈ 10⁻⁴ ops/ns
                 offer: ≈ 10⁻⁴ ops/ns
                 poll:  ≈ 10⁻⁴ ops/ns

Iteration   5: ≈ 10⁻⁴ ops/ns
                 offer: ≈ 10⁻⁴ ops/ns
                 poll:  ≈ 10⁻⁴ ops/ns


# Run progress: 22.22% complete, ETA 00:23:25
# Fork: 2 of 3
# Warmup Iteration   1: ≈ 10⁻⁴ ops/ns
# Warmup Iteration   2: ≈ 10⁻⁴ ops/ns
# Warmup Iteration   3: ≈ 10⁻⁴ ops/ns
# Warmup Iteration   4: ≈ 10⁻⁴ ops/ns
# Warmup Iteration   5: ≈ 10⁻⁴ ops/ns
Iteration   1: ≈ 10⁻⁴ ops/ns
                 offer: ≈ 10⁻⁴ ops/ns
                 poll:  ≈ 10⁻⁴ ops/ns

Iteration   2: ≈ 10⁻⁴ ops/ns
                 offer: ≈ 10⁻⁴ ops/ns
                 poll:  ≈ 10⁻⁴ ops/ns

Iteration   3: ≈ 10⁻⁴ ops/ns
                 offer: ≈ 10⁻⁴ ops/ns
                 poll:  ≈ 10⁻⁴ ops/ns

Iteration   4: ≈ 10⁻⁴ ops/ns
                 offer: ≈ 10⁻⁴ ops/ns
                 poll:  ≈ 10⁻⁴ ops/ns

Iteration   5: ≈ 10⁻⁴ ops/ns
                 offer: ≈ 10⁻⁴ ops/ns
                 poll:  ≈ 10⁻⁴ ops/ns


# Run progress: 27.78% complete, ETA 00:21:45
# Fork: 3 of 3
# Warmup Iteration   1: ≈ 10⁻⁴ ops/ns
# Warmup Iteration   2: ≈ 10⁻⁴ ops/ns
# Warmup Iteration   3: ≈ 10⁻⁴ ops/ns
# Warmup Iteration   4: ≈ 10⁻⁴ ops/ns
# Warmup Iteration   5: ≈ 10⁻⁴ ops/ns
Iteration   1: ≈ 10⁻⁴ ops/ns
                 offer: ≈ 10⁻⁴ ops/ns
                 poll:  ≈ 10⁻⁴ ops/ns

Iteration   2: ≈ 10⁻⁴ ops/ns
                 offer: ≈ 10⁻⁴ ops/ns
                 poll:  ≈ 10⁻⁴ ops/ns

Iteration   3: ≈ 10⁻⁴ ops/ns
                 offer: ≈ 10⁻⁴ ops/ns
                 poll:  ≈ 10⁻⁴ ops/ns

Iteration   4: ≈ 10⁻⁴ ops/ns
                 offer: ≈ 10⁻⁴ ops/ns
                 poll:  ≈ 10⁻⁴ ops/ns

Iteration   5: ≈ 10⁻⁴ ops/ns
                 offer: ≈ 10⁻⁴ ops/ns
                 poll:  ≈ 10⁻⁴ ops/ns



Result "com.ionutbalosin.jvm.jit.benchmark.QueueThroughputBenchmark.queue_throughput":
  ≈ 10⁻⁴ ops/ns

Secondary result "com.ionutbalosin.jvm.jit.benchmark.QueueThroughputBenchmark.queue_throughput:offer":
  ≈ 10⁻⁴ ops/ns

Secondary result "com.ionutbalosin.jvm.jit.benchmark.QueueThroughputBenchmark.queue_throughput:poll":
  ≈ 10⁻⁴ ops/ns


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 8 threads (1 group; 4x "offer", 4x "poll" in each group), will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.QueueThroughputBenchmark.queue_throughput
# Parameters: (capacity = 262144, queueType = ARRAY_BLOCKING_QUEUE_NF)

# Run progress: 33.33% complete, ETA 00:20:04
# Fork: 1 of 3
# Warmup Iteration   1: 0.007 ops/ns
# Warmup Iteration   2: 0.006 ops/ns
# Warmup Iteration   3: 0.006 ops/ns
# Warmup Iteration   4: 0.005 ops/ns
# Warmup Iteration   5: 0.006 ops/ns
Iteration   1: 0.005 ops/ns
                 offer: 0.003 ops/ns
                 poll:  0.003 ops/ns

Iteration   2: 0.005 ops/ns
                 offer: 0.003 ops/ns
                 poll:  0.003 ops/ns

Iteration   3: 0.006 ops/ns
                 offer: 0.003 ops/ns
                 poll:  0.003 ops/ns

Iteration   4: 0.005 ops/ns
                 offer: 0.003 ops/ns
                 poll:  0.003 ops/ns

Iteration   5: 0.006 ops/ns
                 offer: 0.003 ops/ns
                 poll:  0.003 ops/ns


# Run progress: 38.89% complete, ETA 00:18:24
# Fork: 2 of 3
# Warmup Iteration   1: 0.007 ops/ns
# Warmup Iteration   2: 0.006 ops/ns
# Warmup Iteration   3: 0.006 ops/ns
# Warmup Iteration   4: 0.005 ops/ns
# Warmup Iteration   5: 0.005 ops/ns
Iteration   1: 0.005 ops/ns
                 offer: 0.003 ops/ns
                 poll:  0.003 ops/ns

Iteration   2: 0.005 ops/ns
                 offer: 0.003 ops/ns
                 poll:  0.003 ops/ns

Iteration   3: 0.005 ops/ns
                 offer: 0.003 ops/ns
                 poll:  0.003 ops/ns

Iteration   4: 0.005 ops/ns
                 offer: 0.003 ops/ns
                 poll:  0.003 ops/ns

Iteration   5: 0.005 ops/ns
                 offer: 0.003 ops/ns
                 poll:  0.003 ops/ns


# Run progress: 44.44% complete, ETA 00:16:43
# Fork: 3 of 3
# Warmup Iteration   1: 0.007 ops/ns
# Warmup Iteration   2: 0.006 ops/ns
# Warmup Iteration   3: 0.006 ops/ns
# Warmup Iteration   4: 0.006 ops/ns
# Warmup Iteration   5: 0.005 ops/ns
Iteration   1: 0.006 ops/ns
                 offer: 0.003 ops/ns
                 poll:  0.003 ops/ns

Iteration   2: 0.005 ops/ns
                 offer: 0.003 ops/ns
                 poll:  0.003 ops/ns

Iteration   3: 0.006 ops/ns
                 offer: 0.003 ops/ns
                 poll:  0.003 ops/ns

Iteration   4: 0.005 ops/ns
                 offer: 0.003 ops/ns
                 poll:  0.003 ops/ns

Iteration   5: 0.006 ops/ns
                 offer: 0.003 ops/ns
                 poll:  0.003 ops/ns



Result "com.ionutbalosin.jvm.jit.benchmark.QueueThroughputBenchmark.queue_throughput":
  0.006 ±(99.9%) 0.001 ops/ns [Average]
  (min, avg, max) = (0.005, 0.006, 0.006), stdev = 0.001
  CI (99.9%): [0.005, 0.006] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.QueueThroughputBenchmark.queue_throughput:offer":
  0.003 ±(99.9%) 0.001 ops/ns [Average]
  (min, avg, max) = (0.003, 0.003, 0.003), stdev = 0.001
  CI (99.9%): [0.003, 0.003] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.QueueThroughputBenchmark.queue_throughput:poll":
  0.003 ±(99.9%) 0.001 ops/ns [Average]
  (min, avg, max) = (0.003, 0.003, 0.003), stdev = 0.001
  CI (99.9%): [0.003, 0.003] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 8 threads (1 group; 4x "offer", 4x "poll" in each group), will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.QueueThroughputBenchmark.queue_throughput
# Parameters: (capacity = 262144, queueType = CONCURRENT_LINKED_QUEUE)

# Run progress: 50.00% complete, ETA 00:15:03
# Fork: 1 of 3
# Warmup Iteration   1: 0.016 ops/ns
# Warmup Iteration   2: 0.015 ops/ns
# Warmup Iteration   3: 0.014 ops/ns
# Warmup Iteration   4: 0.014 ops/ns
# Warmup Iteration   5: 0.014 ops/ns
Iteration   1: 0.014 ops/ns
                 offer: 0.007 ops/ns
                 poll:  0.007 ops/ns

Iteration   2: 0.014 ops/ns
                 offer: 0.007 ops/ns
                 poll:  0.007 ops/ns

Iteration   3: 0.014 ops/ns
                 offer: 0.007 ops/ns
                 poll:  0.007 ops/ns

Iteration   4: 0.014 ops/ns
                 offer: 0.007 ops/ns
                 poll:  0.007 ops/ns

Iteration   5: 0.014 ops/ns
                 offer: 0.007 ops/ns
                 poll:  0.007 ops/ns


# Run progress: 55.56% complete, ETA 00:13:22
# Fork: 2 of 3
# Warmup Iteration   1: 0.015 ops/ns
# Warmup Iteration   2: 0.014 ops/ns
# Warmup Iteration   3: 0.014 ops/ns
# Warmup Iteration   4: 0.014 ops/ns
# Warmup Iteration   5: 0.014 ops/ns
Iteration   1: 0.014 ops/ns
                 offer: 0.007 ops/ns
                 poll:  0.007 ops/ns

Iteration   2: 0.014 ops/ns
                 offer: 0.007 ops/ns
                 poll:  0.007 ops/ns

Iteration   3: 0.014 ops/ns
                 offer: 0.007 ops/ns
                 poll:  0.007 ops/ns

Iteration   4: 0.014 ops/ns
                 offer: 0.007 ops/ns
                 poll:  0.007 ops/ns

Iteration   5: 0.014 ops/ns
                 offer: 0.007 ops/ns
                 poll:  0.007 ops/ns


# Run progress: 61.11% complete, ETA 00:11:42
# Fork: 3 of 3
# Warmup Iteration   1: 0.014 ops/ns
# Warmup Iteration   2: 0.016 ops/ns
# Warmup Iteration   3: 0.014 ops/ns
# Warmup Iteration   4: 0.014 ops/ns
# Warmup Iteration   5: 0.014 ops/ns
Iteration   1: 0.014 ops/ns
                 offer: 0.007 ops/ns
                 poll:  0.007 ops/ns

Iteration   2: 0.014 ops/ns
                 offer: 0.007 ops/ns
                 poll:  0.007 ops/ns

Iteration   3: 0.013 ops/ns
                 offer: 0.007 ops/ns
                 poll:  0.007 ops/ns

Iteration   4: 0.013 ops/ns
                 offer: 0.007 ops/ns
                 poll:  0.007 ops/ns

Iteration   5: 0.014 ops/ns
                 offer: 0.007 ops/ns
                 poll:  0.007 ops/ns



Result "com.ionutbalosin.jvm.jit.benchmark.QueueThroughputBenchmark.queue_throughput":
  0.014 ±(99.9%) 0.001 ops/ns [Average]
  (min, avg, max) = (0.013, 0.014, 0.014), stdev = 0.001
  CI (99.9%): [0.014, 0.014] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.QueueThroughputBenchmark.queue_throughput:offer":
  0.007 ±(99.9%) 0.001 ops/ns [Average]
  (min, avg, max) = (0.007, 0.007, 0.007), stdev = 0.001
  CI (99.9%): [0.007, 0.007] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.QueueThroughputBenchmark.queue_throughput:poll":
  0.007 ±(99.9%) 0.001 ops/ns [Average]
  (min, avg, max) = (0.007, 0.007, 0.007), stdev = 0.001
  CI (99.9%): [0.007, 0.007] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 8 threads (1 group; 4x "offer", 4x "poll" in each group), will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.QueueThroughputBenchmark.queue_throughput
# Parameters: (capacity = 262144, queueType = PRIORITY_BLOCKING_QUEUE)

# Run progress: 66.67% complete, ETA 00:10:02
# Fork: 1 of 3
# Warmup Iteration   1: 0.006 ops/ns
# Warmup Iteration   2: 0.005 ops/ns
# Warmup Iteration   3: 0.005 ops/ns
# Warmup Iteration   4: 0.005 ops/ns
# Warmup Iteration   5: 0.005 ops/ns
Iteration   1: 0.005 ops/ns
                 offer: 0.002 ops/ns
                 poll:  0.002 ops/ns

Iteration   2: 0.005 ops/ns
                 offer: 0.002 ops/ns
                 poll:  0.002 ops/ns

Iteration   3: 0.005 ops/ns
                 offer: 0.002 ops/ns
                 poll:  0.002 ops/ns

Iteration   4: 0.005 ops/ns
                 offer: 0.002 ops/ns
                 poll:  0.002 ops/ns

Iteration   5: 0.005 ops/ns
                 offer: 0.002 ops/ns
                 poll:  0.002 ops/ns


# Run progress: 72.22% complete, ETA 00:08:21
# Fork: 2 of 3
# Warmup Iteration   1: 0.006 ops/ns
# Warmup Iteration   2: 0.004 ops/ns
# Warmup Iteration   3: 0.004 ops/ns
# Warmup Iteration   4: 0.004 ops/ns
# Warmup Iteration   5: 0.005 ops/ns
Iteration   1: 0.004 ops/ns
                 offer: 0.002 ops/ns
                 poll:  0.002 ops/ns

Iteration   2: 0.004 ops/ns
                 offer: 0.002 ops/ns
                 poll:  0.002 ops/ns

Iteration   3: 0.004 ops/ns
                 offer: 0.002 ops/ns
                 poll:  0.002 ops/ns

Iteration   4: 0.004 ops/ns
                 offer: 0.002 ops/ns
                 poll:  0.002 ops/ns

Iteration   5: 0.004 ops/ns
                 offer: 0.002 ops/ns
                 poll:  0.002 ops/ns


# Run progress: 77.78% complete, ETA 00:06:41
# Fork: 3 of 3
# Warmup Iteration   1: 0.006 ops/ns
# Warmup Iteration   2: 0.005 ops/ns
# Warmup Iteration   3: 0.005 ops/ns
# Warmup Iteration   4: 0.005 ops/ns
# Warmup Iteration   5: 0.004 ops/ns
Iteration   1: 0.004 ops/ns
                 offer: 0.002 ops/ns
                 poll:  0.002 ops/ns

Iteration   2: 0.004 ops/ns
                 offer: 0.002 ops/ns
                 poll:  0.002 ops/ns

Iteration   3: 0.004 ops/ns
                 offer: 0.002 ops/ns
                 poll:  0.002 ops/ns

Iteration   4: 0.004 ops/ns
                 offer: 0.002 ops/ns
                 poll:  0.002 ops/ns

Iteration   5: 0.005 ops/ns
                 offer: 0.002 ops/ns
                 poll:  0.002 ops/ns



Result "com.ionutbalosin.jvm.jit.benchmark.QueueThroughputBenchmark.queue_throughput":
  0.004 ±(99.9%) 0.001 ops/ns [Average]
  (min, avg, max) = (0.004, 0.004, 0.005), stdev = 0.001
  CI (99.9%): [0.004, 0.005] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.QueueThroughputBenchmark.queue_throughput:offer":
  0.002 ±(99.9%) 0.001 ops/ns [Average]
  (min, avg, max) = (0.002, 0.002, 0.002), stdev = 0.001
  CI (99.9%): [0.002, 0.002] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.QueueThroughputBenchmark.queue_throughput:poll":
  0.002 ±(99.9%) 0.001 ops/ns [Average]
  (min, avg, max) = (0.002, 0.002, 0.002), stdev = 0.001
  CI (99.9%): [0.002, 0.002] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 8 threads (1 group; 4x "offer", 4x "poll" in each group), will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.QueueThroughputBenchmark.queue_throughput
# Parameters: (capacity = 262144, queueType = SYNCHRONOUS_QUEUE)

# Run progress: 83.33% complete, ETA 00:05:01
# Fork: 1 of 3
# Warmup Iteration   1: 0.145 ops/ns
# Warmup Iteration   2: 0.162 ops/ns
# Warmup Iteration   3: 0.161 ops/ns
# Warmup Iteration   4: 0.161 ops/ns
# Warmup Iteration   5: 0.161 ops/ns
Iteration   1: 0.158 ops/ns
                 offer: 0.082 ops/ns
                 poll:  0.076 ops/ns

Iteration   2: 0.156 ops/ns
                 offer: 0.081 ops/ns
                 poll:  0.075 ops/ns

Iteration   3: 0.156 ops/ns
                 offer: 0.081 ops/ns
                 poll:  0.075 ops/ns

Iteration   4: 0.157 ops/ns
                 offer: 0.082 ops/ns
                 poll:  0.075 ops/ns

Iteration   5: 0.155 ops/ns
                 offer: 0.081 ops/ns
                 poll:  0.074 ops/ns


# Run progress: 88.89% complete, ETA 00:03:20
# Fork: 2 of 3
# Warmup Iteration   1: 0.138 ops/ns
# Warmup Iteration   2: 0.158 ops/ns
# Warmup Iteration   3: 0.158 ops/ns
# Warmup Iteration   4: 0.160 ops/ns
# Warmup Iteration   5: 0.157 ops/ns
Iteration   1: 0.158 ops/ns
                 offer: 0.082 ops/ns
                 poll:  0.076 ops/ns

Iteration   2: 0.157 ops/ns
                 offer: 0.082 ops/ns
                 poll:  0.075 ops/ns

Iteration   3: 0.156 ops/ns
                 offer: 0.081 ops/ns
                 poll:  0.075 ops/ns

Iteration   4: 0.159 ops/ns
                 offer: 0.082 ops/ns
                 poll:  0.076 ops/ns

Iteration   5: 0.157 ops/ns
                 offer: 0.082 ops/ns
                 poll:  0.075 ops/ns


# Run progress: 94.44% complete, ETA 00:01:40
# Fork: 3 of 3
# Warmup Iteration   1: 0.138 ops/ns
# Warmup Iteration   2: 0.157 ops/ns
# Warmup Iteration   3: 0.158 ops/ns
# Warmup Iteration   4: 0.155 ops/ns
# Warmup Iteration   5: 0.153 ops/ns
Iteration   1: 0.156 ops/ns
                 offer: 0.081 ops/ns
                 poll:  0.075 ops/ns

Iteration   2: 0.155 ops/ns
                 offer: 0.081 ops/ns
                 poll:  0.075 ops/ns

Iteration   3: 0.158 ops/ns
                 offer: 0.082 ops/ns
                 poll:  0.076 ops/ns

Iteration   4: 0.158 ops/ns
                 offer: 0.082 ops/ns
                 poll:  0.076 ops/ns

Iteration   5: 0.157 ops/ns
                 offer: 0.081 ops/ns
                 poll:  0.075 ops/ns



Result "com.ionutbalosin.jvm.jit.benchmark.QueueThroughputBenchmark.queue_throughput":
  0.157 ±(99.9%) 0.001 ops/ns [Average]
  (min, avg, max) = (0.155, 0.157, 0.159), stdev = 0.001
  CI (99.9%): [0.156, 0.158] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.QueueThroughputBenchmark.queue_throughput:offer":
  0.082 ±(99.9%) 0.001 ops/ns [Average]
  (min, avg, max) = (0.081, 0.082, 0.082), stdev = 0.001
  CI (99.9%): [0.081, 0.082] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.QueueThroughputBenchmark.queue_throughput:poll":
  0.075 ±(99.9%) 0.001 ops/ns [Average]
  (min, avg, max) = (0.074, 0.075, 0.076), stdev = 0.001
  CI (99.9%): [0.075, 0.076] (assumes normal distribution)


# Run complete. Total time: 00:30:06

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        (capacity)              (queueType)   Mode  Cnt   Score    Error   Units
QueueThroughputBenchmark.queue_throughput            262144    LINKED_BLOCKING_QUEUE  thrpt   15   0.005 ±  0.001  ops/ns
QueueThroughputBenchmark.queue_throughput:offer      262144    LINKED_BLOCKING_QUEUE  thrpt   15   0.003 ±  0.001  ops/ns
QueueThroughputBenchmark.queue_throughput:poll       262144    LINKED_BLOCKING_QUEUE  thrpt   15   0.003 ±  0.001  ops/ns
QueueThroughputBenchmark.queue_throughput            262144   ARRAY_BLOCKING_QUEUE_F  thrpt   15  ≈ 10⁻⁴           ops/ns
QueueThroughputBenchmark.queue_throughput:offer      262144   ARRAY_BLOCKING_QUEUE_F  thrpt   15  ≈ 10⁻⁴           ops/ns
QueueThroughputBenchmark.queue_throughput:poll       262144   ARRAY_BLOCKING_QUEUE_F  thrpt   15  ≈ 10⁻⁴           ops/ns
QueueThroughputBenchmark.queue_throughput            262144  ARRAY_BLOCKING_QUEUE_NF  thrpt   15   0.006 ±  0.001  ops/ns
QueueThroughputBenchmark.queue_throughput:offer      262144  ARRAY_BLOCKING_QUEUE_NF  thrpt   15   0.003 ±  0.001  ops/ns
QueueThroughputBenchmark.queue_throughput:poll       262144  ARRAY_BLOCKING_QUEUE_NF  thrpt   15   0.003 ±  0.001  ops/ns
QueueThroughputBenchmark.queue_throughput            262144  CONCURRENT_LINKED_QUEUE  thrpt   15   0.014 ±  0.001  ops/ns
QueueThroughputBenchmark.queue_throughput:offer      262144  CONCURRENT_LINKED_QUEUE  thrpt   15   0.007 ±  0.001  ops/ns
QueueThroughputBenchmark.queue_throughput:poll       262144  CONCURRENT_LINKED_QUEUE  thrpt   15   0.007 ±  0.001  ops/ns
QueueThroughputBenchmark.queue_throughput            262144  PRIORITY_BLOCKING_QUEUE  thrpt   15   0.004 ±  0.001  ops/ns
QueueThroughputBenchmark.queue_throughput:offer      262144  PRIORITY_BLOCKING_QUEUE  thrpt   15   0.002 ±  0.001  ops/ns
QueueThroughputBenchmark.queue_throughput:poll       262144  PRIORITY_BLOCKING_QUEUE  thrpt   15   0.002 ±  0.001  ops/ns
QueueThroughputBenchmark.queue_throughput            262144        SYNCHRONOUS_QUEUE  thrpt   15   0.157 ±  0.001  ops/ns
QueueThroughputBenchmark.queue_throughput:offer      262144        SYNCHRONOUS_QUEUE  thrpt   15   0.082 ±  0.001  ops/ns
QueueThroughputBenchmark.queue_throughput:poll       262144        SYNCHRONOUS_QUEUE  thrpt   15   0.075 ±  0.001  ops/ns

Benchmark result is saved to results/report-openjdk-13/hotspotvm_graal_jit/QueueThroughputBenchmark.json
Running java -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler -jar benchmarks/target/benchmarks.jar .*QueueBurstBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_graal_jit/QueueBurstBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.QueueBurstBenchmark.offer_and_wait_burst
# Parameters: (burstSize = 128, capacity = 262144, consumerCount = 1, queueType = LINKED_BLOCKING_QUEUE)

# Run progress: 0.00% complete, ETA 00:30:00
# Fork: 1 of 3
# Warmup Iteration   1: 26380.690 ns/op
# Warmup Iteration   2: 25176.048 ns/op
# Warmup Iteration   3: 27169.678 ns/op
# Warmup Iteration   4: 27257.884 ns/op
# Warmup Iteration   5: 26285.335 ns/op
Iteration   1: 26121.273 ns/op
Iteration   2: 24747.707 ns/op
Iteration   3: 23222.183 ns/op
Iteration   4: 27150.549 ns/op
Iteration   5: 24082.966 ns/op

# Run progress: 5.56% complete, ETA 00:28:26
# Fork: 2 of 3
# Warmup Iteration   1: 25009.884 ns/op
# Warmup Iteration   2: 22322.528 ns/op
# Warmup Iteration   3: 20946.684 ns/op
# Warmup Iteration   4: 21387.360 ns/op
# Warmup Iteration   5: 21512.289 ns/op
Iteration   1: 21287.817 ns/op
Iteration   2: 25167.336 ns/op
Iteration   3: 27755.674 ns/op
Iteration   4: 24316.173 ns/op
Iteration   5: 20446.780 ns/op

# Run progress: 11.11% complete, ETA 00:26:45
# Fork: 3 of 3
# Warmup Iteration   1: 39735.969 ns/op
# Warmup Iteration   2: 36558.763 ns/op
# Warmup Iteration   3: 36834.155 ns/op
# Warmup Iteration   4: 33370.241 ns/op
# Warmup Iteration   5: 36846.226 ns/op
Iteration   1: 37710.105 ns/op
Iteration   2: 32957.749 ns/op
Iteration   3: 32903.251 ns/op
Iteration   4: 32468.965 ns/op
Iteration   5: 31980.016 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.QueueBurstBenchmark.offer_and_wait_burst":
  27487.903 ±(99.9%) 5357.080 ns/op [Average]
  (min, avg, max) = (20446.780, 27487.903, 37710.105), stdev = 5011.016
  CI (99.9%): [22130.823, 32844.982] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.QueueBurstBenchmark.offer_and_wait_burst
# Parameters: (burstSize = 128, capacity = 262144, consumerCount = 1, queueType = ARRAY_BLOCKING_QUEUE_F)

# Run progress: 16.67% complete, ETA 00:25:04
# Fork: 1 of 3
# Warmup Iteration   1: 1399468.672 ns/op
# Warmup Iteration   2: 1634560.986 ns/op
# Warmup Iteration   3: 1006336.210 ns/op
# Warmup Iteration   4: 1614417.778 ns/op
# Warmup Iteration   5: 1174644.109 ns/op
Iteration   1: 1118029.592 ns/op
Iteration   2: 1124538.796 ns/op
Iteration   3: 997860.068 ns/op
Iteration   4: 1744639.110 ns/op
Iteration   5: 1130120.010 ns/op

# Run progress: 22.22% complete, ETA 00:23:24
# Fork: 2 of 3
# Warmup Iteration   1: 1335627.813 ns/op
# Warmup Iteration   2: 1599078.877 ns/op
# Warmup Iteration   3: 2166895.950 ns/op
# Warmup Iteration   4: 1594144.619 ns/op
# Warmup Iteration   5: 1214140.562 ns/op
Iteration   1: 1778555.528 ns/op
Iteration   2: 1236418.651 ns/op
Iteration   3: 1675697.232 ns/op
Iteration   4: 1777450.949 ns/op
Iteration   5: 2037666.452 ns/op

# Run progress: 27.78% complete, ETA 00:21:43
# Fork: 3 of 3
# Warmup Iteration   1: 1237723.575 ns/op
# Warmup Iteration   2: 1392057.451 ns/op
# Warmup Iteration   3: 2155780.173 ns/op
# Warmup Iteration   4: 1342262.478 ns/op
# Warmup Iteration   5: 1496885.272 ns/op
Iteration   1: 1529021.948 ns/op
Iteration   2: 1552907.445 ns/op
Iteration   3: 1949164.635 ns/op
Iteration   4: 898340.101 ns/op
Iteration   5: 1094735.809 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.QueueBurstBenchmark.offer_and_wait_burst":
  1443009.755 ±(99.9%) 400269.492 ns/op [Average]
  (min, avg, max) = (898340.101, 1443009.755, 2037666.452), stdev = 374412.331
  CI (99.9%): [1042740.263, 1843279.247] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.QueueBurstBenchmark.offer_and_wait_burst
# Parameters: (burstSize = 128, capacity = 262144, consumerCount = 1, queueType = ARRAY_BLOCKING_QUEUE_NF)

# Run progress: 33.33% complete, ETA 00:20:03
# Fork: 1 of 3
# Warmup Iteration   1: 34071.700 ns/op
# Warmup Iteration   2: 28944.577 ns/op
# Warmup Iteration   3: 27836.747 ns/op
# Warmup Iteration   4: 31042.241 ns/op
# Warmup Iteration   5: 31374.276 ns/op
Iteration   1: 31471.393 ns/op
Iteration   2: 31926.715 ns/op
Iteration   3: 28891.696 ns/op
Iteration   4: 29160.446 ns/op
Iteration   5: 33441.238 ns/op

# Run progress: 38.89% complete, ETA 00:18:23
# Fork: 2 of 3
# Warmup Iteration   1: 34011.905 ns/op
# Warmup Iteration   2: 29642.662 ns/op
# Warmup Iteration   3: 32823.194 ns/op
# Warmup Iteration   4: 32989.104 ns/op
# Warmup Iteration   5: 31005.454 ns/op
Iteration   1: 32836.797 ns/op
Iteration   2: 33208.860 ns/op
Iteration   3: 36486.805 ns/op
Iteration   4: 36300.642 ns/op
Iteration   5: 36296.571 ns/op

# Run progress: 44.44% complete, ETA 00:16:42
# Fork: 3 of 3
# Warmup Iteration   1: 35422.135 ns/op
# Warmup Iteration   2: 39194.574 ns/op
# Warmup Iteration   3: 40352.304 ns/op
# Warmup Iteration   4: 34804.783 ns/op
# Warmup Iteration   5: 34583.783 ns/op
Iteration   1: 31787.434 ns/op
Iteration   2: 29722.609 ns/op
Iteration   3: 29670.622 ns/op
Iteration   4: 30588.573 ns/op
Iteration   5: 29397.177 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.QueueBurstBenchmark.offer_and_wait_burst":
  32079.172 ±(99.9%) 2838.065 ns/op [Average]
  (min, avg, max) = (28891.696, 32079.172, 36486.805), stdev = 2654.728
  CI (99.9%): [29241.107, 34917.237] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.QueueBurstBenchmark.offer_and_wait_burst
# Parameters: (burstSize = 128, capacity = 262144, consumerCount = 1, queueType = CONCURRENT_LINKED_QUEUE)

# Run progress: 50.00% complete, ETA 00:15:02
# Fork: 1 of 3
# Warmup Iteration   1: 11783.892 ns/op
# Warmup Iteration   2: 10491.399 ns/op
# Warmup Iteration   3: 10447.171 ns/op
# Warmup Iteration   4: 10388.098 ns/op
# Warmup Iteration   5: 10688.873 ns/op
Iteration   1: 10629.529 ns/op
Iteration   2: 10691.350 ns/op
Iteration   3: 10987.624 ns/op
Iteration   4: 10673.235 ns/op
Iteration   5: 10900.065 ns/op

# Run progress: 55.56% complete, ETA 00:13:22
# Fork: 2 of 3
# Warmup Iteration   1: 11367.932 ns/op
# Warmup Iteration   2: 10782.727 ns/op
# Warmup Iteration   3: 9747.462 ns/op
# Warmup Iteration   4: 9695.791 ns/op
# Warmup Iteration   5: 10224.738 ns/op
Iteration   1: 10379.530 ns/op
Iteration   2: 10066.264 ns/op
Iteration   3: 9932.015 ns/op
Iteration   4: 10813.862 ns/op
Iteration   5: 9949.928 ns/op

# Run progress: 61.11% complete, ETA 00:11:41
# Fork: 3 of 3
# Warmup Iteration   1: 10800.041 ns/op
# Warmup Iteration   2: 9728.288 ns/op
# Warmup Iteration   3: 10609.587 ns/op
# Warmup Iteration   4: 9577.429 ns/op
# Warmup Iteration   5: 10836.862 ns/op
Iteration   1: 9420.427 ns/op
Iteration   2: 9505.191 ns/op
Iteration   3: 8820.587 ns/op
Iteration   4: 8844.201 ns/op
Iteration   5: 9542.019 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.QueueBurstBenchmark.offer_and_wait_burst":
  10077.055 ±(99.9%) 775.097 ns/op [Average]
  (min, avg, max) = (8820.587, 10077.055, 10987.624), stdev = 725.026
  CI (99.9%): [9301.958, 10852.152] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.QueueBurstBenchmark.offer_and_wait_burst
# Parameters: (burstSize = 128, capacity = 262144, consumerCount = 1, queueType = PRIORITY_BLOCKING_QUEUE)

# Run progress: 66.67% complete, ETA 00:10:01
# Fork: 1 of 3
# Warmup Iteration   1: <failure>

java.lang.UnsupportedOperationException: Unsupported queue type PRIORITY_BLOCKING_QUEUE
	at com.ionutbalosin.jvm.jit.benchmark.QueueBurstBenchmark.setupQueue(QueueBurstBenchmark.java:90)
	at com.ionutbalosin.jvm.jit.benchmark.generated.QueueBurstBenchmark_offer_and_wait_burst_jmhTest._jmh_tryInit_f_queueburstbenchmark0_G(QueueBurstBenchmark_offer_and_wait_burst_jmhTest.java:612)
	at com.ionutbalosin.jvm.jit.benchmark.generated.QueueBurstBenchmark_offer_and_wait_burst_jmhTest.offer_and_wait_burst_AverageTime(QueueBurstBenchmark_offer_and_wait_burst_jmhTest.java:203)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:830)


Benchmark had encountered error, and fail on error was requested
Running java -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler -jar benchmarks/target/benchmarks.jar .*IdentityHashCodeBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_graal_jit/IdentityHashCodeBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:hashCode=0 -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.IdentityHashCodeBenchmark.id_hash_code_0

# Run progress: 0.00% complete, ETA 00:35:00
# Fork: 1 of 3
# Warmup Iteration   1: 49.245 ns/op
# Warmup Iteration   2: 44.192 ns/op
# Warmup Iteration   3: 42.238 ns/op
# Warmup Iteration   4: 41.599 ns/op
# Warmup Iteration   5: 43.142 ns/op
Iteration   1: 43.382 ns/op
Iteration   2: 43.157 ns/op
Iteration   3: 41.892 ns/op
Iteration   4: 42.977 ns/op
Iteration   5: 41.179 ns/op

# Run progress: 4.76% complete, ETA 00:33:27
# Fork: 2 of 3
# Warmup Iteration   1: 43.900 ns/op
# Warmup Iteration   2: 43.361 ns/op
# Warmup Iteration   3: 44.010 ns/op
# Warmup Iteration   4: 43.730 ns/op
# Warmup Iteration   5: 42.569 ns/op
Iteration   1: 41.767 ns/op
Iteration   2: 42.839 ns/op
Iteration   3: 43.881 ns/op
Iteration   4: 42.063 ns/op
Iteration   5: 41.329 ns/op

# Run progress: 9.52% complete, ETA 00:31:45
# Fork: 3 of 3
# Warmup Iteration   1: 46.715 ns/op
# Warmup Iteration   2: 43.775 ns/op
# Warmup Iteration   3: 41.234 ns/op
# Warmup Iteration   4: 41.522 ns/op
# Warmup Iteration   5: 40.702 ns/op
Iteration   1: 40.727 ns/op
Iteration   2: 40.812 ns/op
Iteration   3: 40.825 ns/op
Iteration   4: 40.928 ns/op
Iteration   5: 40.854 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.IdentityHashCodeBenchmark.id_hash_code_0":
  41.907 ±(99.9%) 1.157 ns/op [Average]
  (min, avg, max) = (40.727, 41.907, 43.881), stdev = 1.082
  CI (99.9%): [40.751, 43.064] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:hashCode=1 -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.IdentityHashCodeBenchmark.id_hash_code_1

# Run progress: 14.29% complete, ETA 00:30:05
# Fork: 1 of 3
# Warmup Iteration   1: 39.654 ns/op
# Warmup Iteration   2: 36.333 ns/op
# Warmup Iteration   3: 36.333 ns/op
# Warmup Iteration   4: 36.166 ns/op
# Warmup Iteration   5: 36.460 ns/op
Iteration   1: 34.936 ns/op
Iteration   2: 35.817 ns/op
Iteration   3: 35.717 ns/op
Iteration   4: 35.303 ns/op
Iteration   5: 35.983 ns/op

# Run progress: 19.05% complete, ETA 00:28:24
# Fork: 2 of 3
# Warmup Iteration   1: 38.787 ns/op
# Warmup Iteration   2: 34.867 ns/op
# Warmup Iteration   3: 35.900 ns/op
# Warmup Iteration   4: 35.434 ns/op
# Warmup Iteration   5: 34.653 ns/op
Iteration   1: 35.994 ns/op
Iteration   2: 35.624 ns/op
Iteration   3: 35.682 ns/op
Iteration   4: 34.738 ns/op
Iteration   5: 34.450 ns/op

# Run progress: 23.81% complete, ETA 00:26:44
# Fork: 3 of 3
# Warmup Iteration   1: 39.474 ns/op
# Warmup Iteration   2: 34.500 ns/op
# Warmup Iteration   3: 34.548 ns/op
# Warmup Iteration   4: 34.991 ns/op
# Warmup Iteration   5: 35.384 ns/op
Iteration   1: 34.487 ns/op
Iteration   2: 35.365 ns/op
Iteration   3: 35.182 ns/op
Iteration   4: 35.245 ns/op
Iteration   5: 34.612 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.IdentityHashCodeBenchmark.id_hash_code_1":
  35.275 ±(99.9%) 0.568 ns/op [Average]
  (min, avg, max) = (34.450, 35.275, 35.994), stdev = 0.532
  CI (99.9%): [34.707, 35.844] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:hashCode=2 -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.IdentityHashCodeBenchmark.id_hash_code_2

# Run progress: 28.57% complete, ETA 00:25:04
# Fork: 1 of 3
# Warmup Iteration   1: 38.340 ns/op
# Warmup Iteration   2: 35.577 ns/op
# Warmup Iteration   3: 34.738 ns/op
# Warmup Iteration   4: 36.592 ns/op
# Warmup Iteration   5: 34.181 ns/op
Iteration   1: 35.209 ns/op
Iteration   2: 35.124 ns/op
Iteration   3: 33.736 ns/op
Iteration   4: 34.447 ns/op
Iteration   5: 34.955 ns/op

# Run progress: 33.33% complete, ETA 00:23:23
# Fork: 2 of 3
# Warmup Iteration   1: 39.383 ns/op
# Warmup Iteration   2: 34.892 ns/op
# Warmup Iteration   3: 35.016 ns/op
# Warmup Iteration   4: 35.212 ns/op
# Warmup Iteration   5: 35.588 ns/op
Iteration   1: 36.209 ns/op
Iteration   2: 36.377 ns/op
Iteration   3: 33.691 ns/op
Iteration   4: 33.746 ns/op
Iteration   5: 36.232 ns/op

# Run progress: 38.10% complete, ETA 00:21:43
# Fork: 3 of 3
# Warmup Iteration   1: 39.109 ns/op
# Warmup Iteration   2: 36.524 ns/op
# Warmup Iteration   3: 33.633 ns/op
# Warmup Iteration   4: 34.471 ns/op
# Warmup Iteration   5: 36.120 ns/op
Iteration   1: 33.871 ns/op
Iteration   2: 34.057 ns/op
Iteration   3: 33.634 ns/op
Iteration   4: 34.301 ns/op
Iteration   5: 33.990 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.IdentityHashCodeBenchmark.id_hash_code_2":
  34.638 ±(99.9%) 1.058 ns/op [Average]
  (min, avg, max) = (33.634, 34.638, 36.377), stdev = 0.989
  CI (99.9%): [33.581, 35.696] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:hashCode=3 -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.IdentityHashCodeBenchmark.id_hash_code_3

# Run progress: 42.86% complete, ETA 00:20:03
# Fork: 1 of 3
# Warmup Iteration   1: 39.808 ns/op
# Warmup Iteration   2: 37.077 ns/op
# Warmup Iteration   3: 34.338 ns/op
# Warmup Iteration   4: 34.594 ns/op
# Warmup Iteration   5: 36.275 ns/op
Iteration   1: 36.590 ns/op
Iteration   2: 35.427 ns/op
Iteration   3: 35.415 ns/op
Iteration   4: 37.129 ns/op
Iteration   5: 35.133 ns/op

# Run progress: 47.62% complete, ETA 00:18:22
# Fork: 2 of 3
# Warmup Iteration   1: 37.468 ns/op
# Warmup Iteration   2: 36.939 ns/op
# Warmup Iteration   3: 36.243 ns/op
# Warmup Iteration   4: 34.369 ns/op
# Warmup Iteration   5: 35.603 ns/op
Iteration   1: 35.200 ns/op
Iteration   2: 34.521 ns/op
Iteration   3: 36.756 ns/op
Iteration   4: 37.046 ns/op
Iteration   5: 36.894 ns/op

# Run progress: 52.38% complete, ETA 00:16:42
# Fork: 3 of 3
# Warmup Iteration   1: 38.486 ns/op
# Warmup Iteration   2: 35.143 ns/op
# Warmup Iteration   3: 34.331 ns/op
# Warmup Iteration   4: 34.565 ns/op
# Warmup Iteration   5: 34.973 ns/op
Iteration   1: 34.501 ns/op
Iteration   2: 37.418 ns/op
Iteration   3: 35.801 ns/op
Iteration   4: 35.551 ns/op
Iteration   5: 36.779 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.IdentityHashCodeBenchmark.id_hash_code_3":
  36.011 ±(99.9%) 1.048 ns/op [Average]
  (min, avg, max) = (34.501, 36.011, 37.418), stdev = 0.980
  CI (99.9%): [34.963, 37.058] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:hashCode=4 -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.IdentityHashCodeBenchmark.id_hash_code_4

# Run progress: 57.14% complete, ETA 00:15:02
# Fork: 1 of 3
# Warmup Iteration   1: 36.924 ns/op
# Warmup Iteration   2: 36.414 ns/op
# Warmup Iteration   3: 36.592 ns/op
# Warmup Iteration   4: 35.793 ns/op
# Warmup Iteration   5: 36.666 ns/op
Iteration   1: 35.331 ns/op
Iteration   2: 36.448 ns/op
Iteration   3: 35.235 ns/op
Iteration   4: 35.211 ns/op
Iteration   5: 34.876 ns/op

# Run progress: 61.90% complete, ETA 00:13:22
# Fork: 2 of 3
# Warmup Iteration   1: 37.339 ns/op
# Warmup Iteration   2: 35.466 ns/op
# Warmup Iteration   3: 36.193 ns/op
# Warmup Iteration   4: 35.751 ns/op
# Warmup Iteration   5: 34.084 ns/op
Iteration   1: 35.964 ns/op
Iteration   2: 34.363 ns/op
Iteration   3: 34.897 ns/op
Iteration   4: 36.733 ns/op
Iteration   5: 34.641 ns/op

# Run progress: 66.67% complete, ETA 00:11:41
# Fork: 3 of 3
# Warmup Iteration   1: 36.512 ns/op
# Warmup Iteration   2: 34.783 ns/op
# Warmup Iteration   3: 35.475 ns/op
# Warmup Iteration   4: 35.186 ns/op
# Warmup Iteration   5: 34.236 ns/op
Iteration   1: 35.384 ns/op
Iteration   2: 36.085 ns/op
Iteration   3: 35.335 ns/op
Iteration   4: 34.343 ns/op
Iteration   5: 34.222 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.IdentityHashCodeBenchmark.id_hash_code_4":
  35.271 ±(99.9%) 0.817 ns/op [Average]
  (min, avg, max) = (34.222, 35.271, 36.733), stdev = 0.764
  CI (99.9%): [34.455, 36.088] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:hashCode=5 -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.IdentityHashCodeBenchmark.id_hash_code_5

# Run progress: 71.43% complete, ETA 00:10:01
# Fork: 1 of 3
# Warmup Iteration   1: 41.279 ns/op
# Warmup Iteration   2: 38.365 ns/op
# Warmup Iteration   3: 36.178 ns/op
# Warmup Iteration   4: 36.310 ns/op
# Warmup Iteration   5: 36.849 ns/op
Iteration   1: 38.184 ns/op
Iteration   2: 35.291 ns/op
Iteration   3: 37.261 ns/op
Iteration   4: 36.462 ns/op
Iteration   5: 37.505 ns/op

# Run progress: 76.19% complete, ETA 00:08:21
# Fork: 2 of 3
# Warmup Iteration   1: 39.713 ns/op
# Warmup Iteration   2: 37.281 ns/op
# Warmup Iteration   3: 37.512 ns/op
# Warmup Iteration   4: 36.987 ns/op
# Warmup Iteration   5: 36.935 ns/op
Iteration   1: 37.033 ns/op
Iteration   2: 37.244 ns/op
Iteration   3: 37.957 ns/op
Iteration   4: 38.494 ns/op
Iteration   5: 37.600 ns/op

# Run progress: 80.95% complete, ETA 00:06:41
# Fork: 3 of 3
# Warmup Iteration   1: 39.329 ns/op
# Warmup Iteration   2: 36.426 ns/op
# Warmup Iteration   3: 37.247 ns/op
# Warmup Iteration   4: 35.705 ns/op
# Warmup Iteration   5: 36.365 ns/op
Iteration   1: 37.986 ns/op
Iteration   2: 38.362 ns/op
Iteration   3: 37.567 ns/op
Iteration   4: 36.645 ns/op
Iteration   5: 36.689 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.IdentityHashCodeBenchmark.id_hash_code_5":
  37.352 ±(99.9%) 0.904 ns/op [Average]
  (min, avg, max) = (35.291, 37.352, 38.494), stdev = 0.846
  CI (99.9%): [36.448, 38.256] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.IdentityHashCodeBenchmark.id_hash_code_default

# Run progress: 85.71% complete, ETA 00:05:00
# Fork: 1 of 3
# Warmup Iteration   1: 41.289 ns/op
# Warmup Iteration   2: 37.019 ns/op
# Warmup Iteration   3: 35.703 ns/op
# Warmup Iteration   4: 36.110 ns/op
# Warmup Iteration   5: 35.655 ns/op
Iteration   1: 36.111 ns/op
Iteration   2: 35.915 ns/op
Iteration   3: 35.955 ns/op
Iteration   4: 35.759 ns/op
Iteration   5: 35.872 ns/op

# Run progress: 90.48% complete, ETA 00:03:20
# Fork: 2 of 3
# Warmup Iteration   1: 38.549 ns/op
# Warmup Iteration   2: 37.099 ns/op
# Warmup Iteration   3: 37.074 ns/op
# Warmup Iteration   4: 35.680 ns/op
# Warmup Iteration   5: 38.764 ns/op
Iteration   1: 38.441 ns/op
Iteration   2: 36.623 ns/op
Iteration   3: 35.475 ns/op
Iteration   4: 38.442 ns/op
Iteration   5: 38.480 ns/op

# Run progress: 95.24% complete, ETA 00:01:40
# Fork: 3 of 3
# Warmup Iteration   1: 39.850 ns/op
# Warmup Iteration   2: 38.763 ns/op
# Warmup Iteration   3: 38.278 ns/op
# Warmup Iteration   4: 37.473 ns/op
# Warmup Iteration   5: 37.907 ns/op
Iteration   1: 36.740 ns/op
Iteration   2: 37.681 ns/op
Iteration   3: 38.097 ns/op
Iteration   4: 36.774 ns/op
Iteration   5: 35.932 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.IdentityHashCodeBenchmark.id_hash_code_default":
  36.820 ±(99.9%) 1.182 ns/op [Average]
  (min, avg, max) = (35.475, 36.820, 38.480), stdev = 1.106
  CI (99.9%): [35.638, 38.002] (assumes normal distribution)


# Run complete. Total time: 00:35:05

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                       Mode  Cnt   Score   Error  Units
IdentityHashCodeBenchmark.id_hash_code_0        avgt   15  41.907 ± 1.157  ns/op
IdentityHashCodeBenchmark.id_hash_code_1        avgt   15  35.275 ± 0.568  ns/op
IdentityHashCodeBenchmark.id_hash_code_2        avgt   15  34.638 ± 1.058  ns/op
IdentityHashCodeBenchmark.id_hash_code_3        avgt   15  36.011 ± 1.048  ns/op
IdentityHashCodeBenchmark.id_hash_code_4        avgt   15  35.271 ± 0.817  ns/op
IdentityHashCodeBenchmark.id_hash_code_5        avgt   15  37.352 ± 0.904  ns/op
IdentityHashCodeBenchmark.id_hash_code_default  avgt   15  36.820 ± 1.182  ns/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_graal_jit/IdentityHashCodeBenchmark.json
Running java -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler -jar benchmarks/target/benchmarks.jar .*VectorizationPatternsSingleIntArrayBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_graal_jit/VectorizationPatternsSingleIntArrayBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsSingleIntArrayBenchmark.add_const_to_each_array_element
# Parameters: (size = 262144)

# Run progress: 0.00% complete, ETA 01:00:00
# Fork: 1 of 3
# Warmup Iteration   1: 147.043 us/op
# Warmup Iteration   2: 138.482 us/op
# Warmup Iteration   3: 131.449 us/op
# Warmup Iteration   4: 130.989 us/op
# Warmup Iteration   5: 130.969 us/op
Iteration   1: 130.739 us/op
Iteration   2: 130.720 us/op
Iteration   3: 130.737 us/op
Iteration   4: 130.446 us/op
Iteration   5: 130.417 us/op

# Run progress: 2.78% complete, ETA 00:58:31
# Fork: 2 of 3
# Warmup Iteration   1: 131.045 us/op
# Warmup Iteration   2: 146.264 us/op
# Warmup Iteration   3: 131.063 us/op
# Warmup Iteration   4: 130.651 us/op
# Warmup Iteration   5: 130.531 us/op
Iteration   1: 130.183 us/op
Iteration   2: 130.750 us/op
Iteration   3: 130.603 us/op
Iteration   4: 130.372 us/op
Iteration   5: 121.203 us/op

# Run progress: 5.56% complete, ETA 00:56:50
# Fork: 3 of 3
# Warmup Iteration   1: 129.944 us/op
# Warmup Iteration   2: 143.313 us/op
# Warmup Iteration   3: 131.391 us/op
# Warmup Iteration   4: 130.822 us/op
# Warmup Iteration   5: 130.674 us/op
Iteration   1: 130.682 us/op
Iteration   2: 124.161 us/op
Iteration   3: 124.806 us/op
Iteration   4: 131.031 us/op
Iteration   5: 130.757 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsSingleIntArrayBenchmark.add_const_to_each_array_element":
  129.174 ±(99.9%) 3.300 us/op [Average]
  (min, avg, max) = (121.203, 129.174, 131.031), stdev = 3.087
  CI (99.9%): [125.874, 132.474] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsSingleIntArrayBenchmark.increment_arrays_elements_backward_iterator
# Parameters: (size = 262144)

# Run progress: 8.33% complete, ETA 00:55:09
# Fork: 1 of 3
# Warmup Iteration   1: 154.693 us/op
# Warmup Iteration   2: 137.331 us/op
# Warmup Iteration   3: 147.100 us/op
# Warmup Iteration   4: 146.647 us/op
# Warmup Iteration   5: 146.635 us/op
Iteration   1: 146.623 us/op
Iteration   2: 153.939 us/op
Iteration   3: 153.029 us/op
Iteration   4: 141.496 us/op
Iteration   5: 154.050 us/op

# Run progress: 11.11% complete, ETA 00:53:29
# Fork: 2 of 3
# Warmup Iteration   1: 153.656 us/op
# Warmup Iteration   2: 140.499 us/op
# Warmup Iteration   3: 159.952 us/op
# Warmup Iteration   4: 158.178 us/op
# Warmup Iteration   5: 154.022 us/op
Iteration   1: 144.195 us/op
Iteration   2: 144.031 us/op
Iteration   3: 144.003 us/op
Iteration   4: 146.247 us/op
Iteration   5: 156.668 us/op

# Run progress: 13.89% complete, ETA 00:51:48
# Fork: 3 of 3
# Warmup Iteration   1: 156.871 us/op
# Warmup Iteration   2: 139.159 us/op
# Warmup Iteration   3: 148.180 us/op
# Warmup Iteration   4: 148.241 us/op
# Warmup Iteration   5: 148.320 us/op
Iteration   1: 148.358 us/op
Iteration   2: 148.209 us/op
Iteration   3: 148.286 us/op
Iteration   4: 148.075 us/op
Iteration   5: 148.149 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsSingleIntArrayBenchmark.increment_arrays_elements_backward_iterator":
  148.357 ±(99.9%) 4.644 us/op [Average]
  (min, avg, max) = (141.496, 148.357, 156.668), stdev = 4.344
  CI (99.9%): [143.713, 153.001] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsSingleIntArrayBenchmark.mod_each_array_element_by_const
# Parameters: (size = 262144)

# Run progress: 16.67% complete, ETA 00:50:08
# Fork: 1 of 3
# Warmup Iteration   1: 311.746 us/op
# Warmup Iteration   2: 295.015 us/op
# Warmup Iteration   3: 298.934 us/op
# Warmup Iteration   4: 312.502 us/op
# Warmup Iteration   5: 308.848 us/op
Iteration   1: 308.413 us/op
Iteration   2: 308.030 us/op
Iteration   3: 307.912 us/op
Iteration   4: 307.392 us/op
Iteration   5: 307.103 us/op

# Run progress: 19.44% complete, ETA 00:48:27
# Fork: 2 of 3
# Warmup Iteration   1: 324.913 us/op
# Warmup Iteration   2: 300.197 us/op
# Warmup Iteration   3: 297.563 us/op
# Warmup Iteration   4: 300.409 us/op
# Warmup Iteration   5: 294.772 us/op
Iteration   1: 299.812 us/op
Iteration   2: 295.850 us/op
Iteration   3: 294.703 us/op
Iteration   4: 285.794 us/op
Iteration   5: 286.577 us/op

# Run progress: 22.22% complete, ETA 00:46:47
# Fork: 3 of 3
# Warmup Iteration   1: 325.173 us/op
# Warmup Iteration   2: 317.087 us/op
# Warmup Iteration   3: 310.300 us/op
# Warmup Iteration   4: 312.185 us/op
# Warmup Iteration   5: 306.680 us/op
Iteration   1: 306.878 us/op
Iteration   2: 306.986 us/op
Iteration   3: 306.894 us/op
Iteration   4: 305.957 us/op
Iteration   5: 306.221 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsSingleIntArrayBenchmark.mod_each_array_element_by_const":
  302.302 ±(99.9%) 8.421 us/op [Average]
  (min, avg, max) = (285.794, 302.302, 308.413), stdev = 7.877
  CI (99.9%): [293.881, 310.723] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsSingleIntArrayBenchmark.multiply_each_array_element_by_const
# Parameters: (size = 262144)

# Run progress: 25.00% complete, ETA 00:45:07
# Fork: 1 of 3
# Warmup Iteration   1: 173.311 us/op
# Warmup Iteration   2: 157.171 us/op
# Warmup Iteration   3: 160.914 us/op
# Warmup Iteration   4: 156.979 us/op
# Warmup Iteration   5: 156.677 us/op
Iteration   1: 155.987 us/op
Iteration   2: 147.713 us/op
Iteration   3: 147.970 us/op
Iteration   4: 147.975 us/op
Iteration   5: 148.019 us/op

# Run progress: 27.78% complete, ETA 00:43:27
# Fork: 2 of 3
# Warmup Iteration   1: 174.464 us/op
# Warmup Iteration   2: 157.684 us/op
# Warmup Iteration   3: 177.030 us/op
# Warmup Iteration   4: 156.690 us/op
# Warmup Iteration   5: 156.234 us/op
Iteration   1: 155.919 us/op
Iteration   2: 154.142 us/op
Iteration   3: 148.030 us/op
Iteration   4: 148.112 us/op
Iteration   5: 148.485 us/op

# Run progress: 30.56% complete, ETA 00:41:46
# Fork: 3 of 3
# Warmup Iteration   1: 187.195 us/op
# Warmup Iteration   2: 174.966 us/op
# Warmup Iteration   3: 161.231 us/op
# Warmup Iteration   4: 156.700 us/op
# Warmup Iteration   5: 155.821 us/op
Iteration   1: 155.588 us/op
Iteration   2: 156.065 us/op
Iteration   3: 155.638 us/op
Iteration   4: 155.769 us/op
Iteration   5: 147.237 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsSingleIntArrayBenchmark.multiply_each_array_element_by_const":
  151.510 ±(99.9%) 4.254 us/op [Average]
  (min, avg, max) = (147.237, 151.510, 156.065), stdev = 3.979
  CI (99.9%): [147.256, 155.764] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsSingleIntArrayBenchmark.saves_induction_variable_to_each_array_element
# Parameters: (size = 262144)

# Run progress: 33.33% complete, ETA 00:40:06
# Fork: 1 of 3
# Warmup Iteration   1: 102.649 us/op
# Warmup Iteration   2: 102.975 us/op
# Warmup Iteration   3: 137.364 us/op
# Warmup Iteration   4: 137.501 us/op
# Warmup Iteration   5: 137.823 us/op
Iteration   1: 137.799 us/op
Iteration   2: 137.921 us/op
Iteration   3: 145.053 us/op
Iteration   4: 144.817 us/op
Iteration   5: 144.617 us/op

# Run progress: 36.11% complete, ETA 00:38:26
# Fork: 2 of 3
# Warmup Iteration   1: 111.669 us/op
# Warmup Iteration   2: 103.029 us/op
# Warmup Iteration   3: 144.151 us/op
# Warmup Iteration   4: 144.039 us/op
# Warmup Iteration   5: 144.090 us/op
Iteration   1: 143.835 us/op
Iteration   2: 143.768 us/op
Iteration   3: 137.975 us/op
Iteration   4: 145.135 us/op
Iteration   5: 145.030 us/op

# Run progress: 38.89% complete, ETA 00:36:45
# Fork: 3 of 3
# Warmup Iteration   1: 103.800 us/op
# Warmup Iteration   2: 98.796 us/op
# Warmup Iteration   3: 138.531 us/op
# Warmup Iteration   4: 138.730 us/op
# Warmup Iteration   5: 139.485 us/op
Iteration   1: 139.267 us/op
Iteration   2: 138.108 us/op
Iteration   3: 138.698 us/op
Iteration   4: 138.476 us/op
Iteration   5: 138.504 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsSingleIntArrayBenchmark.saves_induction_variable_to_each_array_element":
  141.267 ±(99.9%) 3.501 us/op [Average]
  (min, avg, max) = (137.799, 141.267, 145.135), stdev = 3.275
  CI (99.9%): [137.765, 144.768] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsSingleIntArrayBenchmark.shl_each_array_element_by_const
# Parameters: (size = 262144)

# Run progress: 41.67% complete, ETA 00:35:05
# Fork: 1 of 3
# Warmup Iteration   1: 119.476 us/op
# Warmup Iteration   2: 122.021 us/op
# Warmup Iteration   3: 119.179 us/op
# Warmup Iteration   4: 118.333 us/op
# Warmup Iteration   5: 118.172 us/op
Iteration   1: 117.758 us/op
Iteration   2: 108.810 us/op
Iteration   3: 116.986 us/op
Iteration   4: 117.949 us/op
Iteration   5: 117.529 us/op

# Run progress: 44.44% complete, ETA 00:33:25
# Fork: 2 of 3
# Warmup Iteration   1: 126.140 us/op
# Warmup Iteration   2: 119.370 us/op
# Warmup Iteration   3: 117.740 us/op
# Warmup Iteration   4: 117.496 us/op
# Warmup Iteration   5: 117.392 us/op
Iteration   1: 117.229 us/op
Iteration   2: 117.505 us/op
Iteration   3: 117.280 us/op
Iteration   4: 117.540 us/op
Iteration   5: 117.530 us/op

# Run progress: 47.22% complete, ETA 00:31:44
# Fork: 3 of 3
# Warmup Iteration   1: 118.255 us/op
# Warmup Iteration   2: 109.834 us/op
# Warmup Iteration   3: 109.613 us/op
# Warmup Iteration   4: 118.258 us/op
# Warmup Iteration   5: 118.453 us/op
Iteration   1: 117.851 us/op
Iteration   2: 117.756 us/op
Iteration   3: 117.410 us/op
Iteration   4: 117.598 us/op
Iteration   5: 117.777 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsSingleIntArrayBenchmark.shl_each_array_element_by_const":
  116.967 ±(99.9%) 2.428 us/op [Average]
  (min, avg, max) = (108.810, 116.967, 117.949), stdev = 2.271
  CI (99.9%): [114.539, 119.395] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsSingleIntArrayBenchmark.sum_of_all_array_elements
# Parameters: (size = 262144)

# Run progress: 50.00% complete, ETA 00:30:04
# Fork: 1 of 3
# Warmup Iteration   1: 98.630 us/op
# Warmup Iteration   2: 100.615 us/op
# Warmup Iteration   3: 145.679 us/op
# Warmup Iteration   4: 145.528 us/op
# Warmup Iteration   5: 145.598 us/op
Iteration   1: 145.665 us/op
Iteration   2: 145.649 us/op
Iteration   3: 145.773 us/op
Iteration   4: 145.781 us/op
Iteration   5: 146.051 us/op

# Run progress: 52.78% complete, ETA 00:28:24
# Fork: 2 of 3
# Warmup Iteration   1: 97.611 us/op
# Warmup Iteration   2: 96.914 us/op
# Warmup Iteration   3: 146.946 us/op
# Warmup Iteration   4: 146.915 us/op
# Warmup Iteration   5: 146.250 us/op
Iteration   1: 146.178 us/op
Iteration   2: 143.869 us/op
Iteration   3: 134.318 us/op
Iteration   4: 134.731 us/op
Iteration   5: 135.530 us/op

# Run progress: 55.56% complete, ETA 00:26:44
# Fork: 3 of 3
# Warmup Iteration   1: 97.349 us/op
# Warmup Iteration   2: 93.027 us/op
# Warmup Iteration   3: 141.807 us/op
# Warmup Iteration   4: 141.488 us/op
# Warmup Iteration   5: 141.118 us/op
Iteration   1: 141.609 us/op
Iteration   2: 141.525 us/op
Iteration   3: 141.002 us/op
Iteration   4: 135.680 us/op
Iteration   5: 136.037 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsSingleIntArrayBenchmark.sum_of_all_array_elements":
  141.293 ±(99.9%) 5.077 us/op [Average]
  (min, avg, max) = (134.318, 141.293, 146.178), stdev = 4.749
  CI (99.9%): [136.216, 146.370] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsSingleIntArrayBenchmark.sum_of_all_array_elements_by_adding_a_const
# Parameters: (size = 262144)

# Run progress: 58.33% complete, ETA 00:25:03
# Fork: 1 of 3
# Warmup Iteration   1: 134.061 us/op
# Warmup Iteration   2: 136.389 us/op
# Warmup Iteration   3: 141.576 us/op
# Warmup Iteration   4: 141.423 us/op
# Warmup Iteration   5: 141.617 us/op
Iteration   1: 141.318 us/op
Iteration   2: 151.103 us/op
Iteration   3: 140.270 us/op
Iteration   4: 140.923 us/op
Iteration   5: 140.828 us/op

# Run progress: 61.11% complete, ETA 00:23:23
# Fork: 2 of 3
# Warmup Iteration   1: 133.596 us/op
# Warmup Iteration   2: 136.506 us/op
# Warmup Iteration   3: 141.628 us/op
# Warmup Iteration   4: 141.575 us/op
# Warmup Iteration   5: 141.457 us/op
Iteration   1: 141.556 us/op
Iteration   2: 141.348 us/op
Iteration   3: 144.643 us/op
Iteration   4: 145.414 us/op
Iteration   5: 151.709 us/op

# Run progress: 63.89% complete, ETA 00:21:43
# Fork: 3 of 3
# Warmup Iteration   1: 136.824 us/op
# Warmup Iteration   2: 144.631 us/op
# Warmup Iteration   3: 151.036 us/op
# Warmup Iteration   4: 150.338 us/op
# Warmup Iteration   5: 149.689 us/op
Iteration   1: 149.631 us/op
Iteration   2: 149.154 us/op
Iteration   3: 146.418 us/op
Iteration   4: 143.143 us/op
Iteration   5: 143.456 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsSingleIntArrayBenchmark.sum_of_all_array_elements_by_adding_a_const":
  144.728 ±(99.9%) 4.268 us/op [Average]
  (min, avg, max) = (140.270, 144.728, 151.709), stdev = 3.992
  CI (99.9%): [140.460, 148.996] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsSingleIntArrayBenchmark.sum_of_all_array_elements_by_shifting_and_masking
# Parameters: (size = 262144)

# Run progress: 66.67% complete, ETA 00:20:03
# Fork: 1 of 3
# Warmup Iteration   1: 164.536 us/op
# Warmup Iteration   2: 141.434 us/op
# Warmup Iteration   3: 140.834 us/op
# Warmup Iteration   4: 141.439 us/op
# Warmup Iteration   5: 141.445 us/op
Iteration   1: 141.538 us/op
Iteration   2: 141.180 us/op
Iteration   3: 141.358 us/op
Iteration   4: 140.933 us/op
Iteration   5: 141.429 us/op

# Run progress: 69.44% complete, ETA 00:18:22
# Fork: 2 of 3
# Warmup Iteration   1: 165.629 us/op
# Warmup Iteration   2: 145.205 us/op
# Warmup Iteration   3: 144.887 us/op
# Warmup Iteration   4: 143.931 us/op
# Warmup Iteration   5: 144.027 us/op
Iteration   1: 143.974 us/op
Iteration   2: 143.890 us/op
Iteration   3: 143.851 us/op
Iteration   4: 143.883 us/op
Iteration   5: 143.887 us/op

# Run progress: 72.22% complete, ETA 00:16:42
# Fork: 3 of 3
# Warmup Iteration   1: 163.305 us/op
# Warmup Iteration   2: 151.973 us/op
# Warmup Iteration   3: 161.325 us/op
# Warmup Iteration   4: 151.434 us/op
# Warmup Iteration   5: 150.460 us/op
Iteration   1: 150.328 us/op
Iteration   2: 150.001 us/op
Iteration   3: 150.111 us/op
Iteration   4: 149.521 us/op
Iteration   5: 149.110 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsSingleIntArrayBenchmark.sum_of_all_array_elements_by_shifting_and_masking":
  145.000 ±(99.9%) 3.960 us/op [Average]
  (min, avg, max) = (140.933, 145.000, 150.328), stdev = 3.704
  CI (99.9%): [141.040, 148.959] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsSingleIntArrayBenchmark.sum_of_all_array_elements_long_stride
# Parameters: (size = 262144)

# Run progress: 75.00% complete, ETA 00:15:02
# Fork: 1 of 3
# Warmup Iteration   1: 166.965 us/op
# Warmup Iteration   2: 156.904 us/op
# Warmup Iteration   3: 156.419 us/op
# Warmup Iteration   4: 157.318 us/op
# Warmup Iteration   5: 157.179 us/op
Iteration   1: 157.130 us/op
Iteration   2: 156.992 us/op
Iteration   3: 156.897 us/op
Iteration   4: 157.061 us/op
Iteration   5: 156.906 us/op

# Run progress: 77.78% complete, ETA 00:13:22
# Fork: 2 of 3
# Warmup Iteration   1: 156.959 us/op
# Warmup Iteration   2: 149.304 us/op
# Warmup Iteration   3: 149.741 us/op
# Warmup Iteration   4: 150.116 us/op
# Warmup Iteration   5: 150.119 us/op
Iteration   1: 149.925 us/op
Iteration   2: 150.194 us/op
Iteration   3: 157.062 us/op
Iteration   4: 157.016 us/op
Iteration   5: 156.585 us/op

# Run progress: 80.56% complete, ETA 00:11:41
# Fork: 3 of 3
# Warmup Iteration   1: 161.454 us/op
# Warmup Iteration   2: 149.960 us/op
# Warmup Iteration   3: 150.239 us/op
# Warmup Iteration   4: 150.022 us/op
# Warmup Iteration   5: 150.204 us/op
Iteration   1: 150.559 us/op
Iteration   2: 150.500 us/op
Iteration   3: 150.865 us/op
Iteration   4: 150.914 us/op
Iteration   5: 151.019 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsSingleIntArrayBenchmark.sum_of_all_array_elements_long_stride":
  153.975 ±(99.9%) 3.540 us/op [Average]
  (min, avg, max) = (149.925, 153.975, 157.130), stdev = 3.311
  CI (99.9%): [150.435, 157.515] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsSingleIntArrayBenchmark.sum_of_all_array_elements_matching_a_predicate
# Parameters: (size = 262144)

# Run progress: 83.33% complete, ETA 00:10:01
# Fork: 1 of 3
# Warmup Iteration   1: 276.600 us/op
# Warmup Iteration   2: 252.354 us/op
# Warmup Iteration   3: 256.152 us/op
# Warmup Iteration   4: 261.661 us/op
# Warmup Iteration   5: 259.962 us/op
Iteration   1: 260.152 us/op
Iteration   2: 241.481 us/op
Iteration   3: 243.417 us/op
Iteration   4: 244.118 us/op
Iteration   5: 244.675 us/op

# Run progress: 86.11% complete, ETA 00:08:21
# Fork: 2 of 3
# Warmup Iteration   1: 272.762 us/op
# Warmup Iteration   2: 264.394 us/op
# Warmup Iteration   3: 260.654 us/op
# Warmup Iteration   4: 242.591 us/op
# Warmup Iteration   5: 244.750 us/op
Iteration   1: 245.182 us/op
Iteration   2: 246.575 us/op
Iteration   3: 246.145 us/op
Iteration   4: 245.044 us/op
Iteration   5: 245.128 us/op

# Run progress: 88.89% complete, ETA 00:06:41
# Fork: 3 of 3
# Warmup Iteration   1: 273.834 us/op
# Warmup Iteration   2: 267.323 us/op
# Warmup Iteration   3: 264.307 us/op
# Warmup Iteration   4: 262.933 us/op
# Warmup Iteration   5: 250.983 us/op
Iteration   1: 251.172 us/op
Iteration   2: 251.349 us/op
Iteration   3: 251.490 us/op
Iteration   4: 251.135 us/op
Iteration   5: 251.452 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsSingleIntArrayBenchmark.sum_of_all_array_elements_matching_a_predicate":
  247.901 ±(99.9%) 5.133 us/op [Average]
  (min, avg, max) = (241.481, 247.901, 260.152), stdev = 4.801
  CI (99.9%): [242.768, 253.034] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsSingleIntArrayBenchmark.sum_of_all_even_array_elements
# Parameters: (size = 262144)

# Run progress: 91.67% complete, ETA 00:05:00
# Fork: 1 of 3
# Warmup Iteration   1: 995.788 us/op
# Warmup Iteration   2: 919.049 us/op
# Warmup Iteration   3: 964.573 us/op
# Warmup Iteration   4: 962.966 us/op
# Warmup Iteration   5: 955.240 us/op
Iteration   1: 918.377 us/op
Iteration   2: 962.126 us/op
Iteration   3: 954.873 us/op
Iteration   4: 961.314 us/op
Iteration   5: 940.995 us/op

# Run progress: 94.44% complete, ETA 00:03:20
# Fork: 2 of 3
# Warmup Iteration   1: 988.615 us/op
# Warmup Iteration   2: 964.584 us/op
# Warmup Iteration   3: 957.814 us/op
# Warmup Iteration   4: 956.086 us/op
# Warmup Iteration   5: 955.569 us/op
Iteration   1: 957.316 us/op
Iteration   2: 919.265 us/op
Iteration   3: 959.915 us/op
Iteration   4: 920.339 us/op
Iteration   5: 903.595 us/op

# Run progress: 97.22% complete, ETA 00:01:40
# Fork: 3 of 3
# Warmup Iteration   1: 1008.069 us/op
# Warmup Iteration   2: 970.891 us/op
# Warmup Iteration   3: 964.823 us/op
# Warmup Iteration   4: 962.056 us/op
# Warmup Iteration   5: 919.647 us/op
Iteration   1: 918.725 us/op
Iteration   2: 920.134 us/op
Iteration   3: 917.980 us/op
Iteration   4: 917.845 us/op
Iteration   5: 898.595 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsSingleIntArrayBenchmark.sum_of_all_even_array_elements":
  931.426 ±(99.9%) 23.745 us/op [Average]
  (min, avg, max) = (898.595, 931.426, 962.126), stdev = 22.211
  CI (99.9%): [907.682, 955.171] (assumes normal distribution)


# Run complete. Total time: 01:00:09

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                                                                       (size)  Mode  Cnt    Score    Error  Units
VectorizationPatternsSingleIntArrayBenchmark.add_const_to_each_array_element                    262144  avgt   15  129.174 ±  3.300  us/op
VectorizationPatternsSingleIntArrayBenchmark.increment_arrays_elements_backward_iterator        262144  avgt   15  148.357 ±  4.644  us/op
VectorizationPatternsSingleIntArrayBenchmark.mod_each_array_element_by_const                    262144  avgt   15  302.302 ±  8.421  us/op
VectorizationPatternsSingleIntArrayBenchmark.multiply_each_array_element_by_const               262144  avgt   15  151.510 ±  4.254  us/op
VectorizationPatternsSingleIntArrayBenchmark.saves_induction_variable_to_each_array_element     262144  avgt   15  141.267 ±  3.501  us/op
VectorizationPatternsSingleIntArrayBenchmark.shl_each_array_element_by_const                    262144  avgt   15  116.967 ±  2.428  us/op
VectorizationPatternsSingleIntArrayBenchmark.sum_of_all_array_elements                          262144  avgt   15  141.293 ±  5.077  us/op
VectorizationPatternsSingleIntArrayBenchmark.sum_of_all_array_elements_by_adding_a_const        262144  avgt   15  144.728 ±  4.268  us/op
VectorizationPatternsSingleIntArrayBenchmark.sum_of_all_array_elements_by_shifting_and_masking  262144  avgt   15  145.000 ±  3.960  us/op
VectorizationPatternsSingleIntArrayBenchmark.sum_of_all_array_elements_long_stride              262144  avgt   15  153.975 ±  3.540  us/op
VectorizationPatternsSingleIntArrayBenchmark.sum_of_all_array_elements_matching_a_predicate     262144  avgt   15  247.901 ±  5.133  us/op
VectorizationPatternsSingleIntArrayBenchmark.sum_of_all_even_array_elements                     262144  avgt   15  931.426 ± 23.745  us/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_graal_jit/VectorizationPatternsSingleIntArrayBenchmark.json
Running java -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler -jar benchmarks/target/benchmarks.jar .*VectorizationPatternsMultipleFloatArraysBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_graal_jit/VectorizationPatternsMultipleFloatArraysBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleFloatArraysBenchmark.add_2_arrays_elements
# Parameters: (size = 262144)

# Run progress: 0.00% complete, ETA 01:15:00
# Fork: 1 of 3
# Warmup Iteration   1: 266.895 us/op
# Warmup Iteration   2: 242.427 us/op
# Warmup Iteration   3: 222.180 us/op
# Warmup Iteration   4: 220.226 us/op
# Warmup Iteration   5: 220.589 us/op
Iteration   1: 220.836 us/op
Iteration   2: 220.922 us/op
Iteration   3: 221.037 us/op
Iteration   4: 221.409 us/op
Iteration   5: 221.365 us/op

# Run progress: 2.22% complete, ETA 01:13:37
# Fork: 2 of 3
# Warmup Iteration   1: 251.407 us/op
# Warmup Iteration   2: 229.820 us/op
# Warmup Iteration   3: 232.258 us/op
# Warmup Iteration   4: 220.582 us/op
# Warmup Iteration   5: 221.387 us/op
Iteration   1: 221.894 us/op
Iteration   2: 240.715 us/op
Iteration   3: 239.679 us/op
Iteration   4: 239.401 us/op
Iteration   5: 238.112 us/op

# Run progress: 4.44% complete, ETA 01:11:54
# Fork: 3 of 3
# Warmup Iteration   1: 234.959 us/op
# Warmup Iteration   2: 221.636 us/op
# Warmup Iteration   3: 238.006 us/op
# Warmup Iteration   4: 240.146 us/op
# Warmup Iteration   5: 239.123 us/op
Iteration   1: 238.207 us/op
Iteration   2: 237.274 us/op
Iteration   3: 237.037 us/op
Iteration   4: 237.200 us/op
Iteration   5: 226.712 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleFloatArraysBenchmark.add_2_arrays_elements":
  230.787 ±(99.9%) 9.243 us/op [Average]
  (min, avg, max) = (220.836, 230.787, 240.715), stdev = 8.646
  CI (99.9%): [221.543, 240.030] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleFloatArraysBenchmark.add_2_arrays_elements_inc_index_access
# Parameters: (size = 262144)

# Run progress: 6.67% complete, ETA 01:10:13
# Fork: 1 of 3
# Warmup Iteration   1: 238.533 us/op
# Warmup Iteration   2: 222.562 us/op
# Warmup Iteration   3: 221.782 us/op
# Warmup Iteration   4: 221.775 us/op
# Warmup Iteration   5: 228.646 us/op
Iteration   1: 228.298 us/op
Iteration   2: 221.573 us/op
Iteration   3: 221.706 us/op
Iteration   4: 221.820 us/op
Iteration   5: 241.887 us/op

# Run progress: 8.89% complete, ETA 01:08:32
# Fork: 2 of 3
# Warmup Iteration   1: 237.397 us/op
# Warmup Iteration   2: 222.199 us/op
# Warmup Iteration   3: 222.306 us/op
# Warmup Iteration   4: 222.419 us/op
# Warmup Iteration   5: 222.134 us/op
Iteration   1: 222.301 us/op
Iteration   2: 222.605 us/op
Iteration   3: 222.036 us/op
Iteration   4: 221.908 us/op
Iteration   5: 221.943 us/op

# Run progress: 11.11% complete, ETA 01:06:52
# Fork: 3 of 3
# Warmup Iteration   1: 261.975 us/op
# Warmup Iteration   2: 241.488 us/op
# Warmup Iteration   3: 240.355 us/op
# Warmup Iteration   4: 239.832 us/op
# Warmup Iteration   5: 227.993 us/op
Iteration   1: 228.362 us/op
Iteration   2: 239.639 us/op
Iteration   3: 229.393 us/op
Iteration   4: 240.173 us/op
Iteration   5: 239.516 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleFloatArraysBenchmark.add_2_arrays_elements_inc_index_access":
  228.211 ±(99.9%) 8.575 us/op [Average]
  (min, avg, max) = (221.573, 228.211, 241.887), stdev = 8.021
  CI (99.9%): [219.636, 236.785] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleFloatArraysBenchmark.add_2_arrays_elements_modulo_index_access
# Parameters: (size = 262144)

# Run progress: 13.33% complete, ETA 01:05:11
# Fork: 1 of 3
# Warmup Iteration   1: 310.603 us/op
# Warmup Iteration   2: 290.645 us/op
# Warmup Iteration   3: 290.738 us/op
# Warmup Iteration   4: 291.997 us/op
# Warmup Iteration   5: 290.111 us/op
Iteration   1: 316.400 us/op
Iteration   2: 298.638 us/op
Iteration   3: 298.282 us/op
Iteration   4: 297.393 us/op
Iteration   5: 290.137 us/op

# Run progress: 15.56% complete, ETA 01:03:31
# Fork: 2 of 3
# Warmup Iteration   1: 324.176 us/op
# Warmup Iteration   2: 300.353 us/op
# Warmup Iteration   3: 313.977 us/op
# Warmup Iteration   4: 313.933 us/op
# Warmup Iteration   5: 313.588 us/op
Iteration   1: 313.228 us/op
Iteration   2: 289.395 us/op
Iteration   3: 289.682 us/op
Iteration   4: 290.863 us/op
Iteration   5: 299.321 us/op

# Run progress: 17.78% complete, ETA 01:01:50
# Fork: 3 of 3
# Warmup Iteration   1: 336.502 us/op
# Warmup Iteration   2: 315.402 us/op
# Warmup Iteration   3: 296.286 us/op
# Warmup Iteration   4: 290.643 us/op
# Warmup Iteration   5: 314.201 us/op
Iteration   1: 313.163 us/op
Iteration   2: 312.720 us/op
Iteration   3: 313.505 us/op
Iteration   4: 311.945 us/op
Iteration   5: 311.799 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleFloatArraysBenchmark.add_2_arrays_elements_modulo_index_access":
  303.098 ±(99.9%) 11.107 us/op [Average]
  (min, avg, max) = (289.395, 303.098, 316.400), stdev = 10.389
  CI (99.9%): [291.991, 314.205] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleFloatArraysBenchmark.divide_2_arrays_elements
# Parameters: (size = 262144)

# Run progress: 20.00% complete, ETA 01:00:10
# Fork: 1 of 3
# Warmup Iteration   1: 219.566 us/op
# Warmup Iteration   2: 221.763 us/op
# Warmup Iteration   3: 223.087 us/op
# Warmup Iteration   4: 223.234 us/op
# Warmup Iteration   5: 223.083 us/op
Iteration   1: 223.344 us/op
Iteration   2: 223.558 us/op
Iteration   3: 223.615 us/op
Iteration   4: 223.912 us/op
Iteration   5: 223.787 us/op

# Run progress: 22.22% complete, ETA 00:58:47
# Fork: 2 of 3
# Warmup Iteration   1: 257.506 us/op
# Warmup Iteration   2: 224.547 us/op
# Warmup Iteration   3: 224.007 us/op
# Warmup Iteration   4: 225.189 us/op
# Warmup Iteration   5: 224.859 us/op
Iteration   1: 225.021 us/op
Iteration   2: 225.169 us/op
Iteration   3: 224.408 us/op
Iteration   4: 224.639 us/op
Iteration   5: 225.114 us/op

# Run progress: 24.44% complete, ETA 00:57:05
# Fork: 3 of 3
# Warmup Iteration   1: 260.048 us/op
# Warmup Iteration   2: 232.924 us/op
# Warmup Iteration   3: 230.521 us/op
# Warmup Iteration   4: 230.308 us/op
# Warmup Iteration   5: 230.367 us/op
Iteration   1: 230.346 us/op
Iteration   2: 230.247 us/op
Iteration   3: 230.140 us/op
Iteration   4: 230.074 us/op
Iteration   5: 231.144 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleFloatArraysBenchmark.divide_2_arrays_elements":
  226.301 ±(99.9%) 3.265 us/op [Average]
  (min, avg, max) = (223.344, 226.301, 231.144), stdev = 3.054
  CI (99.9%): [223.037, 229.566] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleFloatArraysBenchmark.extract_2_arrays_elements
# Parameters: (size = 262144)

# Run progress: 26.67% complete, ETA 00:55:23
# Fork: 1 of 3
# Warmup Iteration   1: 203.469 us/op
# Warmup Iteration   2: 191.378 us/op
# Warmup Iteration   3: 216.120 us/op
# Warmup Iteration   4: 221.789 us/op
# Warmup Iteration   5: 221.783 us/op
Iteration   1: 221.751 us/op
Iteration   2: 221.862 us/op
Iteration   3: 221.769 us/op
Iteration   4: 221.786 us/op
Iteration   5: 221.807 us/op

# Run progress: 28.89% complete, ETA 00:53:41
# Fork: 2 of 3
# Warmup Iteration   1: 222.912 us/op
# Warmup Iteration   2: 193.161 us/op
# Warmup Iteration   3: 218.031 us/op
# Warmup Iteration   4: 221.553 us/op
# Warmup Iteration   5: 221.694 us/op
Iteration   1: 221.434 us/op
Iteration   2: 239.034 us/op
Iteration   3: 220.574 us/op
Iteration   4: 222.217 us/op
Iteration   5: 221.801 us/op

# Run progress: 31.11% complete, ETA 00:52:00
# Fork: 3 of 3
# Warmup Iteration   1: 204.802 us/op
# Warmup Iteration   2: 206.015 us/op
# Warmup Iteration   3: 236.735 us/op
# Warmup Iteration   4: 239.462 us/op
# Warmup Iteration   5: 238.848 us/op
Iteration   1: 238.374 us/op
Iteration   2: 226.932 us/op
Iteration   3: 226.989 us/op
Iteration   4: 227.368 us/op
Iteration   5: 227.639 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleFloatArraysBenchmark.extract_2_arrays_elements":
  225.422 ±(99.9%) 6.357 us/op [Average]
  (min, avg, max) = (220.574, 225.422, 239.034), stdev = 5.947
  CI (99.9%): [219.065, 231.780] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleFloatArraysBenchmark.if_with_masking_conditional_flow
# Parameters: (size = 262144)

# Run progress: 33.33% complete, ETA 00:50:18
# Fork: 1 of 3
# Warmup Iteration   1: 238.528 us/op
# Warmup Iteration   2: 224.069 us/op
# Warmup Iteration   3: 222.913 us/op
# Warmup Iteration   4: 211.431 us/op
# Warmup Iteration   5: 222.018 us/op
Iteration   1: 221.764 us/op
Iteration   2: 221.972 us/op
Iteration   3: 221.447 us/op
Iteration   4: 221.080 us/op
Iteration   5: 220.864 us/op

# Run progress: 35.56% complete, ETA 00:48:37
# Fork: 2 of 3
# Warmup Iteration   1: 238.970 us/op
# Warmup Iteration   2: 222.376 us/op
# Warmup Iteration   3: 233.300 us/op
# Warmup Iteration   4: 221.130 us/op
# Warmup Iteration   5: 221.081 us/op
Iteration   1: 221.423 us/op
Iteration   2: 221.473 us/op
Iteration   3: 210.082 us/op
Iteration   4: 207.916 us/op
Iteration   5: 222.462 us/op

# Run progress: 37.78% complete, ETA 00:46:56
# Fork: 3 of 3
# Warmup Iteration   1: 226.488 us/op
# Warmup Iteration   2: 212.597 us/op
# Warmup Iteration   3: 237.121 us/op
# Warmup Iteration   4: 222.051 us/op
# Warmup Iteration   5: 221.395 us/op
Iteration   1: 221.648 us/op
Iteration   2: 209.646 us/op
Iteration   3: 203.128 us/op
Iteration   4: 203.879 us/op
Iteration   5: 204.549 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleFloatArraysBenchmark.if_with_masking_conditional_flow":
  215.556 ±(99.9%) 8.392 us/op [Average]
  (min, avg, max) = (203.128, 215.556, 222.462), stdev = 7.849
  CI (99.9%): [207.164, 223.947] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleFloatArraysBenchmark.mod_2_arrays_elements
# Parameters: (size = 262144)

# Run progress: 40.00% complete, ETA 00:45:15
# Fork: 1 of 3
# Warmup Iteration   1: 1776.000 us/op
# Warmup Iteration   2: 1708.671 us/op
# Warmup Iteration   3: 1727.189 us/op
# Warmup Iteration   4: 1811.050 us/op
# Warmup Iteration   5: 1800.611 us/op
Iteration   1: 1800.774 us/op
Iteration   2: 1795.523 us/op
Iteration   3: 1795.695 us/op
Iteration   4: 1795.612 us/op
Iteration   5: 1793.995 us/op

# Run progress: 42.22% complete, ETA 00:43:34
# Fork: 2 of 3
# Warmup Iteration   1: 1895.994 us/op
# Warmup Iteration   2: 1804.740 us/op
# Warmup Iteration   3: 1796.237 us/op
# Warmup Iteration   4: 1713.163 us/op
# Warmup Iteration   5: 1719.568 us/op
Iteration   1: 1723.803 us/op
Iteration   2: 1664.136 us/op
Iteration   3: 1725.134 us/op
Iteration   4: 1725.461 us/op
Iteration   5: 1724.176 us/op

# Run progress: 44.44% complete, ETA 00:41:53
# Fork: 3 of 3
# Warmup Iteration   1: 1829.909 us/op
# Warmup Iteration   2: 1810.620 us/op
# Warmup Iteration   3: 1806.468 us/op
# Warmup Iteration   4: 1799.301 us/op
# Warmup Iteration   5: 1796.129 us/op
Iteration   1: 1792.626 us/op
Iteration   2: 1794.408 us/op
Iteration   3: 1789.450 us/op
Iteration   4: 1785.021 us/op
Iteration   5: 1783.973 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleFloatArraysBenchmark.mod_2_arrays_elements":
  1765.986 ±(99.9%) 44.807 us/op [Average]
  (min, avg, max) = (1664.136, 1765.986, 1800.774), stdev = 41.913
  CI (99.9%): [1721.179, 1810.793] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleFloatArraysBenchmark.multiply_2_arrays_elements
# Parameters: (size = 262144)

# Run progress: 46.67% complete, ETA 00:40:12
# Fork: 1 of 3
# Warmup Iteration   1: 249.183 us/op
# Warmup Iteration   2: 218.611 us/op
# Warmup Iteration   3: 222.042 us/op
# Warmup Iteration   4: 220.584 us/op
# Warmup Iteration   5: 220.249 us/op
Iteration   1: 239.597 us/op
Iteration   2: 220.596 us/op
Iteration   3: 220.343 us/op
Iteration   4: 220.933 us/op
Iteration   5: 221.129 us/op

# Run progress: 48.89% complete, ETA 00:38:31
# Fork: 2 of 3
# Warmup Iteration   1: 258.216 us/op
# Warmup Iteration   2: 240.698 us/op
# Warmup Iteration   3: 240.619 us/op
# Warmup Iteration   4: 237.517 us/op
# Warmup Iteration   5: 237.074 us/op
Iteration   1: 236.629 us/op
Iteration   2: 237.706 us/op
Iteration   3: 237.848 us/op
Iteration   4: 217.156 us/op
Iteration   5: 218.922 us/op

# Run progress: 51.11% complete, ETA 00:36:50
# Fork: 3 of 3
# Warmup Iteration   1: 256.351 us/op
# Warmup Iteration   2: 229.703 us/op
# Warmup Iteration   3: 230.701 us/op
# Warmup Iteration   4: 227.091 us/op
# Warmup Iteration   5: 226.944 us/op
Iteration   1: 225.995 us/op
Iteration   2: 219.422 us/op
Iteration   3: 219.669 us/op
Iteration   4: 220.321 us/op
Iteration   5: 220.965 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleFloatArraysBenchmark.multiply_2_arrays_elements":
  225.149 ±(99.9%) 8.780 us/op [Average]
  (min, avg, max) = (217.156, 225.149, 239.597), stdev = 8.212
  CI (99.9%): [216.369, 233.928] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleFloatArraysBenchmark.multiply_2_arrays_elements_backward_iterator
# Parameters: (size = 262144)

# Run progress: 53.33% complete, ETA 00:35:10
# Fork: 1 of 3
# Warmup Iteration   1: 259.871 us/op
# Warmup Iteration   2: 230.340 us/op
# Warmup Iteration   3: 230.264 us/op
# Warmup Iteration   4: 228.785 us/op
# Warmup Iteration   5: 228.576 us/op
Iteration   1: 228.523 us/op
Iteration   2: 222.067 us/op
Iteration   3: 222.105 us/op
Iteration   4: 242.568 us/op
Iteration   5: 240.581 us/op

# Run progress: 55.56% complete, ETA 00:33:29
# Fork: 2 of 3
# Warmup Iteration   1: 261.348 us/op
# Warmup Iteration   2: 221.128 us/op
# Warmup Iteration   3: 222.709 us/op
# Warmup Iteration   4: 243.355 us/op
# Warmup Iteration   5: 242.539 us/op
Iteration   1: 240.743 us/op
Iteration   2: 240.330 us/op
Iteration   3: 239.927 us/op
Iteration   4: 239.985 us/op
Iteration   5: 226.220 us/op

# Run progress: 57.78% complete, ETA 00:31:48
# Fork: 3 of 3
# Warmup Iteration   1: 254.656 us/op
# Warmup Iteration   2: 229.112 us/op
# Warmup Iteration   3: 228.761 us/op
# Warmup Iteration   4: 227.611 us/op
# Warmup Iteration   5: 241.243 us/op
Iteration   1: 227.253 us/op
Iteration   2: 227.470 us/op
Iteration   3: 227.667 us/op
Iteration   4: 228.378 us/op
Iteration   5: 229.117 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleFloatArraysBenchmark.multiply_2_arrays_elements_backward_iterator":
  232.196 ±(99.9%) 7.992 us/op [Average]
  (min, avg, max) = (222.067, 232.196, 242.568), stdev = 7.476
  CI (99.9%): [224.203, 240.188] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleFloatArraysBenchmark.multiply_2_arrays_elements_long_stride
# Parameters: (size = 262144)

# Run progress: 60.00% complete, ETA 00:30:08
# Fork: 1 of 3
# Warmup Iteration   1: 307.117 us/op
# Warmup Iteration   2: 287.452 us/op
# Warmup Iteration   3: 285.507 us/op
# Warmup Iteration   4: 283.869 us/op
# Warmup Iteration   5: 282.921 us/op
Iteration   1: 282.668 us/op
Iteration   2: 282.278 us/op
Iteration   3: 282.435 us/op
Iteration   4: 282.558 us/op
Iteration   5: 282.391 us/op

# Run progress: 62.22% complete, ETA 00:28:27
# Fork: 2 of 3
# Warmup Iteration   1: 287.549 us/op
# Warmup Iteration   2: 270.241 us/op
# Warmup Iteration   3: 270.318 us/op
# Warmup Iteration   4: 282.554 us/op
# Warmup Iteration   5: 282.667 us/op
Iteration   1: 282.535 us/op
Iteration   2: 268.612 us/op
Iteration   3: 282.393 us/op
Iteration   4: 282.171 us/op
Iteration   5: 281.771 us/op

# Run progress: 64.44% complete, ETA 00:26:47
# Fork: 3 of 3
# Warmup Iteration   1: 297.839 us/op
# Warmup Iteration   2: 284.416 us/op
# Warmup Iteration   3: 268.730 us/op
# Warmup Iteration   4: 270.489 us/op
# Warmup Iteration   5: 270.741 us/op
Iteration   1: 282.356 us/op
Iteration   2: 283.067 us/op
Iteration   3: 282.319 us/op
Iteration   4: 281.923 us/op
Iteration   5: 281.948 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleFloatArraysBenchmark.multiply_2_arrays_elements_long_stride":
  281.428 ±(99.9%) 3.806 us/op [Average]
  (min, avg, max) = (268.612, 281.428, 283.067), stdev = 3.560
  CI (99.9%): [277.623, 285.234] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleFloatArraysBenchmark.multiply_2_arrays_elements_of_mixed_types
# Parameters: (size = 262144)

# Run progress: 66.67% complete, ETA 00:25:06
# Fork: 1 of 3
# Warmup Iteration   1: 316.685 us/op
# Warmup Iteration   2: 310.395 us/op
# Warmup Iteration   3: 311.224 us/op
# Warmup Iteration   4: 303.472 us/op
# Warmup Iteration   5: 301.466 us/op
Iteration   1: 303.547 us/op
Iteration   2: 304.079 us/op
Iteration   3: 329.667 us/op
Iteration   4: 327.771 us/op
Iteration   5: 325.073 us/op

# Run progress: 68.89% complete, ETA 00:23:26
# Fork: 2 of 3
# Warmup Iteration   1: 342.266 us/op
# Warmup Iteration   2: 326.666 us/op
# Warmup Iteration   3: 325.397 us/op
# Warmup Iteration   4: 326.502 us/op
# Warmup Iteration   5: 324.832 us/op
Iteration   1: 299.693 us/op
Iteration   2: 327.057 us/op
Iteration   3: 297.943 us/op
Iteration   4: 300.651 us/op
Iteration   5: 302.500 us/op

# Run progress: 71.11% complete, ETA 00:21:45
# Fork: 3 of 3
# Warmup Iteration   1: 350.783 us/op
# Warmup Iteration   2: 328.420 us/op
# Warmup Iteration   3: 325.796 us/op
# Warmup Iteration   4: 325.664 us/op
# Warmup Iteration   5: 324.104 us/op
Iteration   1: 323.641 us/op
Iteration   2: 323.118 us/op
Iteration   3: 325.285 us/op
Iteration   4: 324.850 us/op
Iteration   5: 324.765 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleFloatArraysBenchmark.multiply_2_arrays_elements_of_mixed_types":
  315.976 ±(99.9%) 13.363 us/op [Average]
  (min, avg, max) = (297.943, 315.976, 329.667), stdev = 12.499
  CI (99.9%): [302.613, 329.339] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleFloatArraysBenchmark.multiply_2_arrays_elements_stride_2
# Parameters: (size = 262144)

# Run progress: 73.33% complete, ETA 00:20:05
# Fork: 1 of 3
# Warmup Iteration   1: 129.337 us/op
# Warmup Iteration   2: 120.130 us/op
# Warmup Iteration   3: 112.165 us/op
# Warmup Iteration   4: 115.393 us/op
# Warmup Iteration   5: 115.684 us/op
Iteration   1: 115.613 us/op
Iteration   2: 122.808 us/op
Iteration   3: 121.846 us/op
Iteration   4: 121.562 us/op
Iteration   5: 121.350 us/op

# Run progress: 75.56% complete, ETA 00:18:24
# Fork: 2 of 3
# Warmup Iteration   1: 122.773 us/op
# Warmup Iteration   2: 115.970 us/op
# Warmup Iteration   3: 115.613 us/op
# Warmup Iteration   4: 115.294 us/op
# Warmup Iteration   5: 115.403 us/op
Iteration   1: 115.491 us/op
Iteration   2: 115.794 us/op
Iteration   3: 116.150 us/op
Iteration   4: 116.070 us/op
Iteration   5: 121.902 us/op

# Run progress: 77.78% complete, ETA 00:16:44
# Fork: 3 of 3
# Warmup Iteration   1: 120.358 us/op
# Warmup Iteration   2: 118.198 us/op
# Warmup Iteration   3: 112.581 us/op
# Warmup Iteration   4: 112.998 us/op
# Warmup Iteration   5: 113.079 us/op
Iteration   1: 112.826 us/op
Iteration   2: 113.111 us/op
Iteration   3: 112.504 us/op
Iteration   4: 112.842 us/op
Iteration   5: 115.055 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleFloatArraysBenchmark.multiply_2_arrays_elements_stride_2":
  116.995 ±(99.9%) 4.061 us/op [Average]
  (min, avg, max) = (112.504, 116.995, 122.808), stdev = 3.799
  CI (99.9%): [112.934, 121.056] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleFloatArraysBenchmark.multiply_2_arrays_elements_stride_x2
# Parameters: (size = 262144)

# Run progress: 80.00% complete, ETA 00:15:03
# Fork: 1 of 3
# Warmup Iteration   1: 0.049 us/op
# Warmup Iteration   2: 0.050 us/op
# Warmup Iteration   3: 0.049 us/op
# Warmup Iteration   4: 0.049 us/op
# Warmup Iteration   5: 0.046 us/op
Iteration   1: 0.049 us/op
Iteration   2: 0.046 us/op
Iteration   3: 0.046 us/op
Iteration   4: 0.046 us/op
Iteration   5: 0.048 us/op

# Run progress: 82.22% complete, ETA 00:13:23
# Fork: 2 of 3
# Warmup Iteration   1: 0.056 us/op
# Warmup Iteration   2: 0.052 us/op
# Warmup Iteration   3: 0.052 us/op
# Warmup Iteration   4: 0.052 us/op
# Warmup Iteration   5: 0.053 us/op
Iteration   1: 0.052 us/op
Iteration   2: 0.055 us/op
Iteration   3: 0.052 us/op
Iteration   4: 0.051 us/op
Iteration   5: 0.052 us/op

# Run progress: 84.44% complete, ETA 00:11:42
# Fork: 3 of 3
# Warmup Iteration   1: 0.054 us/op
# Warmup Iteration   2: 0.053 us/op
# Warmup Iteration   3: 0.049 us/op
# Warmup Iteration   4: 0.049 us/op
# Warmup Iteration   5: 0.050 us/op
Iteration   1: 0.050 us/op
Iteration   2: 0.053 us/op
Iteration   3: 0.053 us/op
Iteration   4: 0.052 us/op
Iteration   5: 0.052 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleFloatArraysBenchmark.multiply_2_arrays_elements_stride_x2":
  0.051 ±(99.9%) 0.003 us/op [Average]
  (min, avg, max) = (0.046, 0.051, 0.055), stdev = 0.003
  CI (99.9%): [0.048, 0.054] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleFloatArraysBenchmark.multiply_2_arrays_elements_unknown_trip_count
# Parameters: (size = 262144)

# Run progress: 86.67% complete, ETA 00:10:02
# Fork: 1 of 3
# Warmup Iteration   1: 246.627 us/op
# Warmup Iteration   2: 229.179 us/op
# Warmup Iteration   3: 228.643 us/op
# Warmup Iteration   4: 228.177 us/op
# Warmup Iteration   5: 239.154 us/op
Iteration   1: 239.054 us/op
Iteration   2: 233.350 us/op
Iteration   3: 219.309 us/op
Iteration   4: 220.755 us/op
Iteration   5: 221.408 us/op

# Run progress: 88.89% complete, ETA 00:08:22
# Fork: 2 of 3
# Warmup Iteration   1: 257.813 us/op
# Warmup Iteration   2: 242.556 us/op
# Warmup Iteration   3: 235.376 us/op
# Warmup Iteration   4: 227.866 us/op
# Warmup Iteration   5: 228.151 us/op
Iteration   1: 227.857 us/op
Iteration   2: 239.635 us/op
Iteration   3: 239.447 us/op
Iteration   4: 238.412 us/op
Iteration   5: 237.720 us/op

# Run progress: 91.11% complete, ETA 00:06:41
# Fork: 3 of 3
# Warmup Iteration   1: 257.110 us/op
# Warmup Iteration   2: 239.371 us/op
# Warmup Iteration   3: 238.834 us/op
# Warmup Iteration   4: 237.831 us/op
# Warmup Iteration   5: 238.482 us/op
Iteration   1: 238.387 us/op
Iteration   2: 238.612 us/op
Iteration   3: 237.820 us/op
Iteration   4: 236.816 us/op
Iteration   5: 223.903 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleFloatArraysBenchmark.multiply_2_arrays_elements_unknown_trip_count":
  232.832 ±(99.9%) 8.344 us/op [Average]
  (min, avg, max) = (219.309, 232.832, 239.635), stdev = 7.805
  CI (99.9%): [224.489, 241.176] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleFloatArraysBenchmark.sum_all_product_pairs_of_2_arrays_elements
# Parameters: (size = 262144)

# Run progress: 93.33% complete, ETA 00:05:01
# Fork: 1 of 3
# Warmup Iteration   1: 482.535 us/op
# Warmup Iteration   2: 438.242 us/op
# Warmup Iteration   3: 437.198 us/op
# Warmup Iteration   4: 436.988 us/op
# Warmup Iteration   5: 442.812 us/op
Iteration   1: 436.717 us/op
Iteration   2: 436.772 us/op
Iteration   3: 436.802 us/op
Iteration   4: 473.442 us/op
Iteration   5: 475.029 us/op

# Run progress: 95.56% complete, ETA 00:03:20
# Fork: 2 of 3
# Warmup Iteration   1: 505.529 us/op
# Warmup Iteration   2: 448.205 us/op
# Warmup Iteration   3: 449.981 us/op
# Warmup Iteration   4: 449.478 us/op
# Warmup Iteration   5: 450.072 us/op
Iteration   1: 449.931 us/op
Iteration   2: 437.428 us/op
Iteration   3: 437.302 us/op
Iteration   4: 437.974 us/op
Iteration   5: 438.373 us/op

# Run progress: 97.78% complete, ETA 00:01:40
# Fork: 3 of 3
# Warmup Iteration   1: 473.737 us/op
# Warmup Iteration   2: 474.596 us/op
# Warmup Iteration   3: 475.806 us/op
# Warmup Iteration   4: 474.105 us/op
# Warmup Iteration   5: 470.559 us/op
Iteration   1: 433.872 us/op
Iteration   2: 436.468 us/op
Iteration   3: 436.846 us/op
Iteration   4: 472.545 us/op
Iteration   5: 472.339 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleFloatArraysBenchmark.sum_all_product_pairs_of_2_arrays_elements":
  447.456 ±(99.9%) 17.676 us/op [Average]
  (min, avg, max) = (433.872, 447.456, 475.029), stdev = 16.534
  CI (99.9%): [429.780, 465.132] (assumes normal distribution)


# Run complete. Total time: 01:15:17

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                                                                        (size)  Mode  Cnt     Score    Error  Units
VectorizationPatternsMultipleFloatArraysBenchmark.add_2_arrays_elements                          262144  avgt   15   230.787 ±  9.243  us/op
VectorizationPatternsMultipleFloatArraysBenchmark.add_2_arrays_elements_inc_index_access         262144  avgt   15   228.211 ±  8.575  us/op
VectorizationPatternsMultipleFloatArraysBenchmark.add_2_arrays_elements_modulo_index_access      262144  avgt   15   303.098 ± 11.107  us/op
VectorizationPatternsMultipleFloatArraysBenchmark.divide_2_arrays_elements                       262144  avgt   15   226.301 ±  3.265  us/op
VectorizationPatternsMultipleFloatArraysBenchmark.extract_2_arrays_elements                      262144  avgt   15   225.422 ±  6.357  us/op
VectorizationPatternsMultipleFloatArraysBenchmark.if_with_masking_conditional_flow               262144  avgt   15   215.556 ±  8.392  us/op
VectorizationPatternsMultipleFloatArraysBenchmark.mod_2_arrays_elements                          262144  avgt   15  1765.986 ± 44.807  us/op
VectorizationPatternsMultipleFloatArraysBenchmark.multiply_2_arrays_elements                     262144  avgt   15   225.149 ±  8.780  us/op
VectorizationPatternsMultipleFloatArraysBenchmark.multiply_2_arrays_elements_backward_iterator   262144  avgt   15   232.196 ±  7.992  us/op
VectorizationPatternsMultipleFloatArraysBenchmark.multiply_2_arrays_elements_long_stride         262144  avgt   15   281.428 ±  3.806  us/op
VectorizationPatternsMultipleFloatArraysBenchmark.multiply_2_arrays_elements_of_mixed_types      262144  avgt   15   315.976 ± 13.363  us/op
VectorizationPatternsMultipleFloatArraysBenchmark.multiply_2_arrays_elements_stride_2            262144  avgt   15   116.995 ±  4.061  us/op
VectorizationPatternsMultipleFloatArraysBenchmark.multiply_2_arrays_elements_stride_x2           262144  avgt   15     0.051 ±  0.003  us/op
VectorizationPatternsMultipleFloatArraysBenchmark.multiply_2_arrays_elements_unknown_trip_count  262144  avgt   15   232.832 ±  8.344  us/op
VectorizationPatternsMultipleFloatArraysBenchmark.sum_all_product_pairs_of_2_arrays_elements     262144  avgt   15   447.456 ± 17.676  us/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_graal_jit/VectorizationPatternsMultipleFloatArraysBenchmark.json
Running java -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler -jar benchmarks/target/benchmarks.jar .*VectorizationPatternsMultipleIntArraysBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_graal_jit/VectorizationPatternsMultipleIntArraysBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleIntArraysBenchmark.add_2_arrays_elements
# Parameters: (size = 262144)

# Run progress: 0.00% complete, ETA 01:20:00
# Fork: 1 of 3
# Warmup Iteration   1: 214.990 us/op
# Warmup Iteration   2: 200.884 us/op
# Warmup Iteration   3: 225.569 us/op
# Warmup Iteration   4: 229.662 us/op
# Warmup Iteration   5: 229.681 us/op
Iteration   1: 230.145 us/op
Iteration   2: 229.452 us/op
Iteration   3: 229.561 us/op
Iteration   4: 229.008 us/op
Iteration   5: 228.277 us/op

# Run progress: 2.08% complete, ETA 01:18:40
# Fork: 2 of 3
# Warmup Iteration   1: 211.787 us/op
# Warmup Iteration   2: 201.123 us/op
# Warmup Iteration   3: 214.727 us/op
# Warmup Iteration   4: 228.719 us/op
# Warmup Iteration   5: 228.176 us/op
Iteration   1: 210.892 us/op
Iteration   2: 230.274 us/op
Iteration   3: 229.115 us/op
Iteration   4: 228.470 us/op
Iteration   5: 228.177 us/op

# Run progress: 4.17% complete, ETA 01:16:56
# Fork: 3 of 3
# Warmup Iteration   1: 199.449 us/op
# Warmup Iteration   2: 186.233 us/op
# Warmup Iteration   3: 200.377 us/op
# Warmup Iteration   4: 224.530 us/op
# Warmup Iteration   5: 229.512 us/op
Iteration   1: 229.238 us/op
Iteration   2: 228.371 us/op
Iteration   3: 228.204 us/op
Iteration   4: 228.400 us/op
Iteration   5: 228.484 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleIntArraysBenchmark.add_2_arrays_elements":
  227.738 ±(99.9%) 5.036 us/op [Average]
  (min, avg, max) = (210.892, 227.738, 230.274), stdev = 4.711
  CI (99.9%): [222.702, 232.774] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleIntArraysBenchmark.add_2_arrays_elements_inc_index_access
# Parameters: (size = 262144)

# Run progress: 6.25% complete, ETA 01:15:15
# Fork: 1 of 3
# Warmup Iteration   1: 249.577 us/op
# Warmup Iteration   2: 231.749 us/op
# Warmup Iteration   3: 231.730 us/op
# Warmup Iteration   4: 235.106 us/op
# Warmup Iteration   5: 215.677 us/op
Iteration   1: 216.793 us/op
Iteration   2: 218.173 us/op
Iteration   3: 226.192 us/op
Iteration   4: 226.520 us/op
Iteration   5: 225.783 us/op

# Run progress: 8.33% complete, ETA 01:13:34
# Fork: 2 of 3
# Warmup Iteration   1: 248.223 us/op
# Warmup Iteration   2: 233.488 us/op
# Warmup Iteration   3: 233.172 us/op
# Warmup Iteration   4: 236.197 us/op
# Warmup Iteration   5: 235.310 us/op
Iteration   1: 235.066 us/op
Iteration   2: 235.408 us/op
Iteration   3: 235.033 us/op
Iteration   4: 234.898 us/op
Iteration   5: 237.788 us/op

# Run progress: 10.42% complete, ETA 01:11:53
# Fork: 3 of 3
# Warmup Iteration   1: 230.821 us/op
# Warmup Iteration   2: 214.370 us/op
# Warmup Iteration   3: 214.991 us/op
# Warmup Iteration   4: 217.917 us/op
# Warmup Iteration   5: 217.600 us/op
Iteration   1: 218.304 us/op
Iteration   2: 217.985 us/op
Iteration   3: 218.492 us/op
Iteration   4: 218.595 us/op
Iteration   5: 226.528 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleIntArraysBenchmark.add_2_arrays_elements_inc_index_access":
  226.104 ±(99.9%) 8.338 us/op [Average]
  (min, avg, max) = (216.793, 226.104, 237.788), stdev = 7.799
  CI (99.9%): [217.766, 234.442] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleIntArraysBenchmark.add_2_arrays_elements_modulo_index_access
# Parameters: (size = 262144)

# Run progress: 12.50% complete, ETA 01:10:12
# Fork: 1 of 3
# Warmup Iteration   1: 243.513 us/op
# Warmup Iteration   2: 221.540 us/op
# Warmup Iteration   3: 220.683 us/op
# Warmup Iteration   4: 218.252 us/op
# Warmup Iteration   5: 218.157 us/op
Iteration   1: 219.284 us/op
Iteration   2: 219.102 us/op
Iteration   3: 237.165 us/op
Iteration   4: 236.042 us/op
Iteration   5: 235.301 us/op

# Run progress: 14.58% complete, ETA 01:08:32
# Fork: 2 of 3
# Warmup Iteration   1: 252.967 us/op
# Warmup Iteration   2: 227.984 us/op
# Warmup Iteration   3: 226.535 us/op
# Warmup Iteration   4: 226.118 us/op
# Warmup Iteration   5: 235.650 us/op
Iteration   1: 235.998 us/op
Iteration   2: 235.369 us/op
Iteration   3: 235.497 us/op
Iteration   4: 235.205 us/op
Iteration   5: 221.500 us/op

# Run progress: 16.67% complete, ETA 01:06:51
# Fork: 3 of 3
# Warmup Iteration   1: 253.128 us/op
# Warmup Iteration   2: 220.721 us/op
# Warmup Iteration   3: 227.625 us/op
# Warmup Iteration   4: 225.147 us/op
# Warmup Iteration   5: 236.022 us/op
Iteration   1: 235.450 us/op
Iteration   2: 236.369 us/op
Iteration   3: 235.014 us/op
Iteration   4: 235.020 us/op
Iteration   5: 234.821 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleIntArraysBenchmark.add_2_arrays_elements_modulo_index_access":
  232.476 ±(99.9%) 6.974 us/op [Average]
  (min, avg, max) = (219.102, 232.476, 237.165), stdev = 6.523
  CI (99.9%): [225.502, 239.450] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleIntArraysBenchmark.extract_2_arrays_elements
# Parameters: (size = 262144)

# Run progress: 18.75% complete, ETA 01:05:11
# Fork: 1 of 3
# Warmup Iteration   1: 204.375 us/op
# Warmup Iteration   2: 185.924 us/op
# Warmup Iteration   3: 186.534 us/op
# Warmup Iteration   4: 202.308 us/op
# Warmup Iteration   5: 221.326 us/op
Iteration   1: 232.277 us/op
Iteration   2: 213.203 us/op
Iteration   3: 214.840 us/op
Iteration   4: 215.320 us/op
Iteration   5: 215.503 us/op

# Run progress: 20.83% complete, ETA 01:03:31
# Fork: 2 of 3
# Warmup Iteration   1: 208.856 us/op
# Warmup Iteration   2: 204.822 us/op
# Warmup Iteration   3: 203.991 us/op
# Warmup Iteration   4: 231.540 us/op
# Warmup Iteration   5: 231.016 us/op
Iteration   1: 231.035 us/op
Iteration   2: 231.414 us/op
Iteration   3: 219.404 us/op
Iteration   4: 214.013 us/op
Iteration   5: 215.393 us/op

# Run progress: 22.92% complete, ETA 01:01:50
# Fork: 3 of 3
# Warmup Iteration   1: 207.078 us/op
# Warmup Iteration   2: 204.452 us/op
# Warmup Iteration   3: 203.762 us/op
# Warmup Iteration   4: 232.421 us/op
# Warmup Iteration   5: 231.631 us/op
Iteration   1: 220.998 us/op
Iteration   2: 221.418 us/op
Iteration   3: 221.179 us/op
Iteration   4: 221.198 us/op
Iteration   5: 221.263 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleIntArraysBenchmark.extract_2_arrays_elements":
  220.564 ±(99.9%) 6.868 us/op [Average]
  (min, avg, max) = (213.203, 220.564, 232.277), stdev = 6.424
  CI (99.9%): [213.696, 227.432] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleIntArraysBenchmark.if_with_masking_conditional_flow
# Parameters: (size = 262144)

# Run progress: 25.00% complete, ETA 01:00:10
# Fork: 1 of 3
# Warmup Iteration   1: 211.229 us/op
# Warmup Iteration   2: 208.139 us/op
# Warmup Iteration   3: 207.218 us/op
# Warmup Iteration   4: 231.332 us/op
# Warmup Iteration   5: 231.293 us/op
Iteration   1: 231.745 us/op
Iteration   2: 231.066 us/op
Iteration   3: 230.160 us/op
Iteration   4: 229.679 us/op
Iteration   5: 229.953 us/op

# Run progress: 27.08% complete, ETA 00:58:30
# Fork: 2 of 3
# Warmup Iteration   1: 219.150 us/op
# Warmup Iteration   2: 196.777 us/op
# Warmup Iteration   3: 195.724 us/op
# Warmup Iteration   4: 221.623 us/op
# Warmup Iteration   5: 221.764 us/op
Iteration   1: 221.744 us/op
Iteration   2: 232.595 us/op
Iteration   3: 231.974 us/op
Iteration   4: 232.505 us/op
Iteration   5: 231.481 us/op

# Run progress: 29.17% complete, ETA 00:56:49
# Fork: 3 of 3
# Warmup Iteration   1: 206.883 us/op
# Warmup Iteration   2: 197.240 us/op
# Warmup Iteration   3: 204.836 us/op
# Warmup Iteration   4: 232.872 us/op
# Warmup Iteration   5: 232.269 us/op
Iteration   1: 213.896 us/op
Iteration   2: 215.178 us/op
Iteration   3: 233.618 us/op
Iteration   4: 232.483 us/op
Iteration   5: 228.860 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleIntArraysBenchmark.if_with_masking_conditional_flow":
  228.463 ±(99.9%) 6.735 us/op [Average]
  (min, avg, max) = (213.896, 228.463, 233.618), stdev = 6.300
  CI (99.9%): [221.727, 235.198] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleIntArraysBenchmark.mod_2_arrays_elements
# Parameters: (size = 262144)

# Run progress: 31.25% complete, ETA 00:55:09
# Fork: 1 of 3
# Warmup Iteration   1: 652.131 us/op
# Warmup Iteration   2: 613.534 us/op
# Warmup Iteration   3: 614.986 us/op
# Warmup Iteration   4: 615.126 us/op
# Warmup Iteration   5: 615.808 us/op
Iteration   1: 614.202 us/op
Iteration   2: 579.696 us/op
Iteration   3: 612.449 us/op
Iteration   4: 665.745 us/op
Iteration   5: 663.688 us/op

# Run progress: 33.33% complete, ETA 00:53:29
# Fork: 2 of 3
# Warmup Iteration   1: 703.351 us/op
# Warmup Iteration   2: 636.190 us/op
# Warmup Iteration   3: 636.501 us/op
# Warmup Iteration   4: 637.634 us/op
# Warmup Iteration   5: 638.401 us/op
Iteration   1: 637.375 us/op
Iteration   2: 604.922 us/op
Iteration   3: 664.294 us/op
Iteration   4: 663.640 us/op
Iteration   5: 660.812 us/op

# Run progress: 35.42% complete, ETA 00:51:48
# Fork: 3 of 3
# Warmup Iteration   1: 688.020 us/op
# Warmup Iteration   2: 662.549 us/op
# Warmup Iteration   3: 663.077 us/op
# Warmup Iteration   4: 662.355 us/op
# Warmup Iteration   5: 661.590 us/op
Iteration   1: 634.620 us/op
Iteration   2: 649.435 us/op
Iteration   3: 658.798 us/op
Iteration   4: 654.975 us/op
Iteration   5: 626.175 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleIntArraysBenchmark.mod_2_arrays_elements":
  639.388 ±(99.9%) 28.551 us/op [Average]
  (min, avg, max) = (579.696, 639.388, 665.745), stdev = 26.707
  CI (99.9%): [610.837, 667.940] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleIntArraysBenchmark.multiply_2_arrays_elements
# Parameters: (size = 262144)

# Run progress: 37.50% complete, ETA 00:50:08
# Fork: 1 of 3
# Warmup Iteration   1: 203.160 us/op
# Warmup Iteration   2: 200.386 us/op
# Warmup Iteration   3: 185.108 us/op
# Warmup Iteration   4: 211.983 us/op
# Warmup Iteration   5: 212.433 us/op
Iteration   1: 218.958 us/op
Iteration   2: 219.156 us/op
Iteration   3: 219.208 us/op
Iteration   4: 219.503 us/op
Iteration   5: 219.191 us/op

# Run progress: 39.58% complete, ETA 00:48:28
# Fork: 2 of 3
# Warmup Iteration   1: 204.163 us/op
# Warmup Iteration   2: 201.766 us/op
# Warmup Iteration   3: 201.039 us/op
# Warmup Iteration   4: 230.105 us/op
# Warmup Iteration   5: 228.845 us/op
Iteration   1: 229.121 us/op
Iteration   2: 229.434 us/op
Iteration   3: 228.838 us/op
Iteration   4: 228.805 us/op
Iteration   5: 228.899 us/op

# Run progress: 41.67% complete, ETA 00:46:48
# Fork: 3 of 3
# Warmup Iteration   1: 213.421 us/op
# Warmup Iteration   2: 199.629 us/op
# Warmup Iteration   3: 199.719 us/op
# Warmup Iteration   4: 227.967 us/op
# Warmup Iteration   5: 228.086 us/op
Iteration   1: 228.267 us/op
Iteration   2: 228.069 us/op
Iteration   3: 228.220 us/op
Iteration   4: 212.774 us/op
Iteration   5: 229.539 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleIntArraysBenchmark.multiply_2_arrays_elements":
  224.532 ±(99.9%) 6.037 us/op [Average]
  (min, avg, max) = (212.774, 224.532, 229.539), stdev = 5.647
  CI (99.9%): [218.495, 230.569] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleIntArraysBenchmark.multiply_2_arrays_elements_backward_iterator
# Parameters: (size = 262144)

# Run progress: 43.75% complete, ETA 00:45:07
# Fork: 1 of 3
# Warmup Iteration   1: 200.896 us/op
# Warmup Iteration   2: 195.599 us/op
# Warmup Iteration   3: 203.478 us/op
# Warmup Iteration   4: 187.299 us/op
# Warmup Iteration   5: 188.569 us/op
Iteration   1: 188.445 us/op
Iteration   2: 188.582 us/op
Iteration   3: 206.603 us/op
Iteration   4: 205.712 us/op
Iteration   5: 205.486 us/op

# Run progress: 45.83% complete, ETA 00:43:27
# Fork: 2 of 3
# Warmup Iteration   1: 217.918 us/op
# Warmup Iteration   2: 188.559 us/op
# Warmup Iteration   3: 194.775 us/op
# Warmup Iteration   4: 194.147 us/op
# Warmup Iteration   5: 194.179 us/op
Iteration   1: 204.243 us/op
Iteration   2: 188.514 us/op
Iteration   3: 187.996 us/op
Iteration   4: 188.583 us/op
Iteration   5: 188.942 us/op

# Run progress: 47.92% complete, ETA 00:41:47
# Fork: 3 of 3
# Warmup Iteration   1: 203.729 us/op
# Warmup Iteration   2: 204.707 us/op
# Warmup Iteration   3: 205.678 us/op
# Warmup Iteration   4: 204.613 us/op
# Warmup Iteration   5: 193.187 us/op
Iteration   1: 192.778 us/op
Iteration   2: 202.650 us/op
Iteration   3: 203.739 us/op
Iteration   4: 204.202 us/op
Iteration   5: 204.048 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleIntArraysBenchmark.multiply_2_arrays_elements_backward_iterator":
  197.368 ±(99.9%) 8.667 us/op [Average]
  (min, avg, max) = (187.996, 197.368, 206.603), stdev = 8.107
  CI (99.9%): [188.701, 206.035] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleIntArraysBenchmark.multiply_2_arrays_elements_long_stride
# Parameters: (size = 262144)

# Run progress: 50.00% complete, ETA 00:40:06
# Fork: 1 of 3
# Warmup Iteration   1: 263.130 us/op
# Warmup Iteration   2: 224.807 us/op
# Warmup Iteration   3: 224.195 us/op
# Warmup Iteration   4: 225.044 us/op
# Warmup Iteration   5: 248.475 us/op
Iteration   1: 245.994 us/op
Iteration   2: 244.971 us/op
Iteration   3: 244.298 us/op
Iteration   4: 243.858 us/op
Iteration   5: 243.563 us/op

# Run progress: 52.08% complete, ETA 00:38:26
# Fork: 2 of 3
# Warmup Iteration   1: 254.573 us/op
# Warmup Iteration   2: 233.399 us/op
# Warmup Iteration   3: 240.038 us/op
# Warmup Iteration   4: 245.044 us/op
# Warmup Iteration   5: 222.746 us/op
Iteration   1: 224.635 us/op
Iteration   2: 245.781 us/op
Iteration   3: 246.279 us/op
Iteration   4: 244.717 us/op
Iteration   5: 228.521 us/op

# Run progress: 54.17% complete, ETA 00:36:46
# Fork: 3 of 3
# Warmup Iteration   1: 250.381 us/op
# Warmup Iteration   2: 225.976 us/op
# Warmup Iteration   3: 234.862 us/op
# Warmup Iteration   4: 225.384 us/op
# Warmup Iteration   5: 225.842 us/op
Iteration   1: 226.984 us/op
Iteration   2: 248.628 us/op
Iteration   3: 245.971 us/op
Iteration   4: 244.378 us/op
Iteration   5: 223.229 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleIntArraysBenchmark.multiply_2_arrays_elements_long_stride":
  240.120 ±(99.9%) 9.686 us/op [Average]
  (min, avg, max) = (223.229, 240.120, 248.628), stdev = 9.061
  CI (99.9%): [230.434, 249.807] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleIntArraysBenchmark.multiply_2_arrays_elements_of_mixed_types
# Parameters: (size = 262144)

# Run progress: 56.25% complete, ETA 00:35:05
# Fork: 1 of 3
# Warmup Iteration   1: 255.411 us/op
# Warmup Iteration   2: 218.321 us/op
# Warmup Iteration   3: 217.994 us/op
# Warmup Iteration   4: 215.503 us/op
# Warmup Iteration   5: 215.502 us/op
Iteration   1: 215.533 us/op
Iteration   2: 215.454 us/op
Iteration   3: 234.764 us/op
Iteration   4: 234.276 us/op
Iteration   5: 232.912 us/op

# Run progress: 58.33% complete, ETA 00:33:25
# Fork: 2 of 3
# Warmup Iteration   1: 247.779 us/op
# Warmup Iteration   2: 237.818 us/op
# Warmup Iteration   3: 236.579 us/op
# Warmup Iteration   4: 232.989 us/op
# Warmup Iteration   5: 232.709 us/op
Iteration   1: 231.929 us/op
Iteration   2: 232.258 us/op
Iteration   3: 232.258 us/op
Iteration   4: 213.679 us/op
Iteration   5: 214.238 us/op

# Run progress: 60.42% complete, ETA 00:31:45
# Fork: 3 of 3
# Warmup Iteration   1: 244.826 us/op
# Warmup Iteration   2: 237.221 us/op
# Warmup Iteration   3: 216.745 us/op
# Warmup Iteration   4: 215.517 us/op
# Warmup Iteration   5: 215.882 us/op
Iteration   1: 216.056 us/op
Iteration   2: 233.071 us/op
Iteration   3: 234.745 us/op
Iteration   4: 233.933 us/op
Iteration   5: 232.785 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleIntArraysBenchmark.multiply_2_arrays_elements_of_mixed_types":
  227.193 ±(99.9%) 9.607 us/op [Average]
  (min, avg, max) = (213.679, 227.193, 234.764), stdev = 8.986
  CI (99.9%): [217.586, 236.799] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleIntArraysBenchmark.multiply_2_arrays_elements_stride_2
# Parameters: (size = 262144)

# Run progress: 62.50% complete, ETA 00:30:05
# Fork: 1 of 3
# Warmup Iteration   1: 124.097 us/op
# Warmup Iteration   2: 108.234 us/op
# Warmup Iteration   3: 108.158 us/op
# Warmup Iteration   4: 108.215 us/op
# Warmup Iteration   5: 108.218 us/op
Iteration   1: 108.273 us/op
Iteration   2: 111.482 us/op
Iteration   3: 111.875 us/op
Iteration   4: 111.381 us/op
Iteration   5: 111.317 us/op

# Run progress: 64.58% complete, ETA 00:28:24
# Fork: 2 of 3
# Warmup Iteration   1: 125.632 us/op
# Warmup Iteration   2: 120.316 us/op
# Warmup Iteration   3: 118.123 us/op
# Warmup Iteration   4: 117.733 us/op
# Warmup Iteration   5: 110.917 us/op
Iteration   1: 111.044 us/op
Iteration   2: 111.132 us/op
Iteration   3: 107.937 us/op
Iteration   4: 108.185 us/op
Iteration   5: 108.302 us/op

# Run progress: 66.67% complete, ETA 00:26:44
# Fork: 3 of 3
# Warmup Iteration   1: 127.958 us/op
# Warmup Iteration   2: 119.591 us/op
# Warmup Iteration   3: 118.105 us/op
# Warmup Iteration   4: 117.571 us/op
# Warmup Iteration   5: 114.824 us/op
Iteration   1: 117.666 us/op
Iteration   2: 117.468 us/op
Iteration   3: 107.852 us/op
Iteration   4: 117.246 us/op
Iteration   5: 117.678 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleIntArraysBenchmark.multiply_2_arrays_elements_stride_2":
  111.923 ±(99.9%) 4.044 us/op [Average]
  (min, avg, max) = (107.852, 111.923, 117.678), stdev = 3.783
  CI (99.9%): [107.879, 115.966] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleIntArraysBenchmark.multiply_2_arrays_elements_stride_x2
# Parameters: (size = 262144)

# Run progress: 68.75% complete, ETA 00:25:04
# Fork: 1 of 3
# Warmup Iteration   1: 0.046 us/op
# Warmup Iteration   2: 0.041 us/op
# Warmup Iteration   3: 0.042 us/op
# Warmup Iteration   4: 0.042 us/op
# Warmup Iteration   5: 0.042 us/op
Iteration   1: 0.042 us/op
Iteration   2: 0.042 us/op
Iteration   3: 0.046 us/op
Iteration   4: 0.046 us/op
Iteration   5: 0.043 us/op

# Run progress: 70.83% complete, ETA 00:23:23
# Fork: 2 of 3
# Warmup Iteration   1: 0.045 us/op
# Warmup Iteration   2: 0.047 us/op
# Warmup Iteration   3: 0.046 us/op
# Warmup Iteration   4: 0.046 us/op
# Warmup Iteration   5: 0.046 us/op
Iteration   1: 0.046 us/op
Iteration   2: 0.046 us/op
Iteration   3: 0.046 us/op
Iteration   4: 0.046 us/op
Iteration   5: 0.046 us/op

# Run progress: 72.92% complete, ETA 00:21:43
# Fork: 3 of 3
# Warmup Iteration   1: 0.048 us/op
# Warmup Iteration   2: 0.041 us/op
# Warmup Iteration   3: 0.041 us/op
# Warmup Iteration   4: 0.042 us/op
# Warmup Iteration   5: 0.042 us/op
Iteration   1: 0.046 us/op
Iteration   2: 0.046 us/op
Iteration   3: 0.045 us/op
Iteration   4: 0.043 us/op
Iteration   5: 0.043 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleIntArraysBenchmark.multiply_2_arrays_elements_stride_x2":
  0.045 ±(99.9%) 0.002 us/op [Average]
  (min, avg, max) = (0.042, 0.045, 0.046), stdev = 0.002
  CI (99.9%): [0.043, 0.046] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleIntArraysBenchmark.multiply_2_arrays_elements_unknown_trip_count
# Parameters: (size = 262144)

# Run progress: 75.00% complete, ETA 00:20:03
# Fork: 1 of 3
# Warmup Iteration   1: 202.637 us/op
# Warmup Iteration   2: 202.732 us/op
# Warmup Iteration   3: 202.893 us/op
# Warmup Iteration   4: 201.594 us/op
# Warmup Iteration   5: 201.236 us/op
Iteration   1: 201.113 us/op
Iteration   2: 200.981 us/op
Iteration   3: 190.856 us/op
Iteration   4: 190.335 us/op
Iteration   5: 190.967 us/op

# Run progress: 77.08% complete, ETA 00:18:23
# Fork: 2 of 3
# Warmup Iteration   1: 200.147 us/op
# Warmup Iteration   2: 203.049 us/op
# Warmup Iteration   3: 201.669 us/op
# Warmup Iteration   4: 201.244 us/op
# Warmup Iteration   5: 200.905 us/op
Iteration   1: 190.210 us/op
Iteration   2: 185.104 us/op
Iteration   3: 185.763 us/op
Iteration   4: 191.266 us/op
Iteration   5: 192.000 us/op

# Run progress: 79.17% complete, ETA 00:16:42
# Fork: 3 of 3
# Warmup Iteration   1: 216.849 us/op
# Warmup Iteration   2: 187.206 us/op
# Warmup Iteration   3: 186.491 us/op
# Warmup Iteration   4: 186.189 us/op
# Warmup Iteration   5: 186.892 us/op
Iteration   1: 186.440 us/op
Iteration   2: 202.640 us/op
Iteration   3: 201.484 us/op
Iteration   4: 200.524 us/op
Iteration   5: 184.317 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleIntArraysBenchmark.multiply_2_arrays_elements_unknown_trip_count":
  192.933 ±(99.9%) 7.067 us/op [Average]
  (min, avg, max) = (184.317, 192.933, 202.640), stdev = 6.610
  CI (99.9%): [185.867, 200.000] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleIntArraysBenchmark.shl_2_arrays_elements
# Parameters: (size = 262144)

# Run progress: 81.25% complete, ETA 00:15:02
# Fork: 1 of 3
# Warmup Iteration   1: 164.401 us/op
# Warmup Iteration   2: 153.027 us/op
# Warmup Iteration   3: 188.385 us/op
# Warmup Iteration   4: 152.484 us/op
# Warmup Iteration   5: 151.637 us/op
Iteration   1: 151.378 us/op
Iteration   2: 146.468 us/op
Iteration   3: 159.495 us/op
Iteration   4: 153.111 us/op
Iteration   5: 145.611 us/op

# Run progress: 83.33% complete, ETA 00:13:22
# Fork: 2 of 3
# Warmup Iteration   1: 172.200 us/op
# Warmup Iteration   2: 160.876 us/op
# Warmup Iteration   3: 150.638 us/op
# Warmup Iteration   4: 158.628 us/op
# Warmup Iteration   5: 158.073 us/op
Iteration   1: 157.455 us/op
Iteration   2: 157.134 us/op
Iteration   3: 157.018 us/op
Iteration   4: 157.029 us/op
Iteration   5: 157.154 us/op

# Run progress: 85.42% complete, ETA 00:11:41
# Fork: 3 of 3
# Warmup Iteration   1: 171.151 us/op
# Warmup Iteration   2: 151.766 us/op
# Warmup Iteration   3: 159.847 us/op
# Warmup Iteration   4: 157.359 us/op
# Warmup Iteration   5: 156.975 us/op
Iteration   1: 156.941 us/op
Iteration   2: 156.791 us/op
Iteration   3: 154.145 us/op
Iteration   4: 144.406 us/op
Iteration   5: 144.502 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleIntArraysBenchmark.shl_2_arrays_elements":
  153.242 ±(99.9%) 5.750 us/op [Average]
  (min, avg, max) = (144.406, 153.242, 159.495), stdev = 5.379
  CI (99.9%): [147.492, 158.993] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleIntArraysBenchmark.sum_all_product_pairs_of_2_arrays_elements
# Parameters: (size = 262144)

# Run progress: 87.50% complete, ETA 00:10:01
# Fork: 1 of 3
# Warmup Iteration   1: 168.318 us/op
# Warmup Iteration   2: 156.459 us/op
# Warmup Iteration   3: 156.922 us/op
# Warmup Iteration   4: 156.233 us/op
# Warmup Iteration   5: 156.474 us/op
Iteration   1: 156.265 us/op
Iteration   2: 156.074 us/op
Iteration   3: 167.470 us/op
Iteration   4: 156.891 us/op
Iteration   5: 160.431 us/op

# Run progress: 89.58% complete, ETA 00:08:21
# Fork: 2 of 3
# Warmup Iteration   1: 181.813 us/op
# Warmup Iteration   2: 169.628 us/op
# Warmup Iteration   3: 170.042 us/op
# Warmup Iteration   4: 168.321 us/op
# Warmup Iteration   5: 167.215 us/op
Iteration   1: 166.956 us/op
Iteration   2: 166.753 us/op
Iteration   3: 166.276 us/op
Iteration   4: 165.775 us/op
Iteration   5: 165.610 us/op

# Run progress: 91.67% complete, ETA 00:06:41
# Fork: 3 of 3
# Warmup Iteration   1: 180.198 us/op
# Warmup Iteration   2: 168.755 us/op
# Warmup Iteration   3: 169.684 us/op
# Warmup Iteration   4: 165.677 us/op
# Warmup Iteration   5: 165.835 us/op
Iteration   1: 165.590 us/op
Iteration   2: 157.242 us/op
Iteration   3: 158.083 us/op
Iteration   4: 158.474 us/op
Iteration   5: 166.033 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleIntArraysBenchmark.sum_all_product_pairs_of_2_arrays_elements":
  162.261 ±(99.9%) 4.930 us/op [Average]
  (min, avg, max) = (156.074, 162.261, 167.470), stdev = 4.612
  CI (99.9%): [157.331, 167.192] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleIntArraysBenchmark.xor_2_arrays_elements
# Parameters: (size = 262144)

# Run progress: 93.75% complete, ETA 00:05:00
# Fork: 1 of 3
# Warmup Iteration   1: 213.730 us/op
# Warmup Iteration   2: 198.458 us/op
# Warmup Iteration   3: 224.720 us/op
# Warmup Iteration   4: 228.290 us/op
# Warmup Iteration   5: 228.421 us/op
Iteration   1: 228.163 us/op
Iteration   2: 228.242 us/op
Iteration   3: 228.254 us/op
Iteration   4: 228.182 us/op
Iteration   5: 228.380 us/op

# Run progress: 95.83% complete, ETA 00:03:20
# Fork: 2 of 3
# Warmup Iteration   1: 210.453 us/op
# Warmup Iteration   2: 199.783 us/op
# Warmup Iteration   3: 207.639 us/op
# Warmup Iteration   4: 211.799 us/op
# Warmup Iteration   5: 212.029 us/op
Iteration   1: 212.494 us/op
Iteration   2: 212.612 us/op
Iteration   3: 230.278 us/op
Iteration   4: 229.954 us/op
Iteration   5: 229.150 us/op

# Run progress: 97.92% complete, ETA 00:01:40
# Fork: 3 of 3
# Warmup Iteration   1: 206.591 us/op
# Warmup Iteration   2: 185.156 us/op
# Warmup Iteration   3: 202.221 us/op
# Warmup Iteration   4: 223.651 us/op
# Warmup Iteration   5: 228.190 us/op
Iteration   1: 228.235 us/op
Iteration   2: 227.622 us/op
Iteration   3: 227.754 us/op
Iteration   4: 226.034 us/op
Iteration   5: 216.228 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleIntArraysBenchmark.xor_2_arrays_elements":
  225.439 ±(99.9%) 6.591 us/op [Average]
  (min, avg, max) = (212.494, 225.439, 230.278), stdev = 6.165
  CI (99.9%): [218.848, 232.030] (assumes normal distribution)


# Run complete. Total time: 01:20:13

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                                                                      (size)  Mode  Cnt    Score    Error  Units
VectorizationPatternsMultipleIntArraysBenchmark.add_2_arrays_elements                          262144  avgt   15  227.738 ±  5.036  us/op
VectorizationPatternsMultipleIntArraysBenchmark.add_2_arrays_elements_inc_index_access         262144  avgt   15  226.104 ±  8.338  us/op
VectorizationPatternsMultipleIntArraysBenchmark.add_2_arrays_elements_modulo_index_access      262144  avgt   15  232.476 ±  6.974  us/op
VectorizationPatternsMultipleIntArraysBenchmark.extract_2_arrays_elements                      262144  avgt   15  220.564 ±  6.868  us/op
VectorizationPatternsMultipleIntArraysBenchmark.if_with_masking_conditional_flow               262144  avgt   15  228.463 ±  6.735  us/op
VectorizationPatternsMultipleIntArraysBenchmark.mod_2_arrays_elements                          262144  avgt   15  639.388 ± 28.551  us/op
VectorizationPatternsMultipleIntArraysBenchmark.multiply_2_arrays_elements                     262144  avgt   15  224.532 ±  6.037  us/op
VectorizationPatternsMultipleIntArraysBenchmark.multiply_2_arrays_elements_backward_iterator   262144  avgt   15  197.368 ±  8.667  us/op
VectorizationPatternsMultipleIntArraysBenchmark.multiply_2_arrays_elements_long_stride         262144  avgt   15  240.120 ±  9.686  us/op
VectorizationPatternsMultipleIntArraysBenchmark.multiply_2_arrays_elements_of_mixed_types      262144  avgt   15  227.193 ±  9.607  us/op
VectorizationPatternsMultipleIntArraysBenchmark.multiply_2_arrays_elements_stride_2            262144  avgt   15  111.923 ±  4.044  us/op
VectorizationPatternsMultipleIntArraysBenchmark.multiply_2_arrays_elements_stride_x2           262144  avgt   15    0.045 ±  0.002  us/op
VectorizationPatternsMultipleIntArraysBenchmark.multiply_2_arrays_elements_unknown_trip_count  262144  avgt   15  192.933 ±  7.067  us/op
VectorizationPatternsMultipleIntArraysBenchmark.shl_2_arrays_elements                          262144  avgt   15  153.242 ±  5.750  us/op
VectorizationPatternsMultipleIntArraysBenchmark.sum_all_product_pairs_of_2_arrays_elements     262144  avgt   15  162.261 ±  4.930  us/op
VectorizationPatternsMultipleIntArraysBenchmark.xor_2_arrays_elements                          262144  avgt   15  225.439 ±  6.591  us/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_graal_jit/VectorizationPatternsMultipleIntArraysBenchmark.json
Running java -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler -jar benchmarks/target/benchmarks.jar .*VectorizationScatterGatherPatternBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_graal_jit/VectorizationScatterGatherPatternBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationScatterGatherPatternBenchmark.scatter_gather
# Parameters: (size = 262144)

# Run progress: 0.00% complete, ETA 00:05:00
# Fork: 1 of 3
# Warmup Iteration   1: 250.196 us/op
# Warmup Iteration   2: 242.165 us/op
# Warmup Iteration   3: 241.106 us/op
# Warmup Iteration   4: 239.889 us/op
# Warmup Iteration   5: 240.143 us/op
Iteration   1: 238.855 us/op
Iteration   2: 238.805 us/op
Iteration   3: 238.594 us/op
Iteration   4: 238.443 us/op
Iteration   5: 238.294 us/op

# Run progress: 33.33% complete, ETA 00:03:20
# Fork: 2 of 3
# Warmup Iteration   1: 235.181 us/op
# Warmup Iteration   2: 228.035 us/op
# Warmup Iteration   3: 240.704 us/op
# Warmup Iteration   4: 238.937 us/op
# Warmup Iteration   5: 238.709 us/op
Iteration   1: 238.402 us/op
Iteration   2: 238.508 us/op
Iteration   3: 237.726 us/op
Iteration   4: 237.007 us/op
Iteration   5: 238.066 us/op

# Run progress: 66.67% complete, ETA 00:01:40
# Fork: 3 of 3
# Warmup Iteration   1: 244.058 us/op
# Warmup Iteration   2: 238.733 us/op
# Warmup Iteration   3: 231.795 us/op
# Warmup Iteration   4: 226.063 us/op
# Warmup Iteration   5: 226.314 us/op
Iteration   1: 226.724 us/op
Iteration   2: 226.713 us/op
Iteration   3: 238.615 us/op
Iteration   4: 219.198 us/op
Iteration   5: 219.702 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationScatterGatherPatternBenchmark.scatter_gather":
  234.243 ±(99.9%) 7.747 us/op [Average]
  (min, avg, max) = (219.198, 234.243, 238.855), stdev = 7.246
  CI (99.9%): [226.497, 241.990] (assumes normal distribution)


# Run complete. Total time: 00:05:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                                  (size)  Mode  Cnt    Score   Error  Units
VectorizationScatterGatherPatternBenchmark.scatter_gather  262144  avgt   15  234.243 ± 7.747  us/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_graal_jit/VectorizationScatterGatherPatternBenchmark.json
Running java -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler -jar benchmarks/target/benchmarks.jar .*MegamorphicAbsClassCallBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_graal_jit/MegamorphicAbsClassCallBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MegamorphicAbsClassCallBenchmark.bimorphic
# Parameters: (param = 3)

# Run progress: 0.00% complete, ETA 01:00:00
# Fork: 1 of 3
# Warmup Iteration   1: 3.994 ns/op
# Warmup Iteration   2: 3.571 ns/op
# Warmup Iteration   3: 3.653 ns/op
# Warmup Iteration   4: 3.839 ns/op
# Warmup Iteration   5: 3.831 ns/op
Iteration   1: 3.507 ns/op
Iteration   2: 3.638 ns/op
Iteration   3: 3.640 ns/op
Iteration   4: 3.630 ns/op
Iteration   5: 3.633 ns/op

# Run progress: 2.78% complete, ETA 00:58:32
# Fork: 2 of 3
# Warmup Iteration   1: 4.136 ns/op
# Warmup Iteration   2: 3.822 ns/op
# Warmup Iteration   3: 3.618 ns/op
# Warmup Iteration   4: 3.655 ns/op
# Warmup Iteration   5: 3.817 ns/op
Iteration   1: 3.805 ns/op
Iteration   2: 3.601 ns/op
Iteration   3: 3.607 ns/op
Iteration   4: 3.625 ns/op
Iteration   5: 3.626 ns/op

# Run progress: 5.56% complete, ETA 00:56:50
# Fork: 3 of 3
# Warmup Iteration   1: 3.925 ns/op
# Warmup Iteration   2: 3.649 ns/op
# Warmup Iteration   3: 3.635 ns/op
# Warmup Iteration   4: 3.628 ns/op
# Warmup Iteration   5: 3.622 ns/op
Iteration   1: 3.692 ns/op
Iteration   2: 3.620 ns/op
Iteration   3: 3.622 ns/op
Iteration   4: 3.620 ns/op
Iteration   5: 3.498 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MegamorphicAbsClassCallBenchmark.bimorphic":
  3.624 ±(99.9%) 0.075 ns/op [Average]
  (min, avg, max) = (3.498, 3.624, 3.805), stdev = 0.070
  CI (99.9%): [3.550, 3.699] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MegamorphicAbsClassCallBenchmark.megamorphic_3
# Parameters: (param = 3)

# Run progress: 8.33% complete, ETA 00:55:09
# Fork: 1 of 3
# Warmup Iteration   1: 3.680 ns/op
# Warmup Iteration   2: 3.499 ns/op
# Warmup Iteration   3: 3.171 ns/op
# Warmup Iteration   4: 3.189 ns/op
# Warmup Iteration   5: 3.191 ns/op
Iteration   1: 3.478 ns/op
Iteration   2: 3.467 ns/op
Iteration   3: 3.170 ns/op
Iteration   4: 3.189 ns/op
Iteration   5: 3.192 ns/op

# Run progress: 11.11% complete, ETA 00:53:29
# Fork: 2 of 3
# Warmup Iteration   1: 3.484 ns/op
# Warmup Iteration   2: 3.449 ns/op
# Warmup Iteration   3: 3.517 ns/op
# Warmup Iteration   4: 3.502 ns/op
# Warmup Iteration   5: 3.206 ns/op
Iteration   1: 3.218 ns/op
Iteration   2: 3.224 ns/op
Iteration   3: 3.224 ns/op
Iteration   4: 3.227 ns/op
Iteration   5: 3.235 ns/op

# Run progress: 13.89% complete, ETA 00:51:48
# Fork: 3 of 3
# Warmup Iteration   1: 3.755 ns/op
# Warmup Iteration   2: 3.318 ns/op
# Warmup Iteration   3: 3.469 ns/op
# Warmup Iteration   4: 3.474 ns/op
# Warmup Iteration   5: 3.285 ns/op
Iteration   1: 3.293 ns/op
Iteration   2: 3.290 ns/op
Iteration   3: 3.289 ns/op
Iteration   4: 3.291 ns/op
Iteration   5: 3.287 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MegamorphicAbsClassCallBenchmark.megamorphic_3":
  3.272 ±(99.9%) 0.098 ns/op [Average]
  (min, avg, max) = (3.170, 3.272, 3.478), stdev = 0.091
  CI (99.9%): [3.174, 3.369] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MegamorphicAbsClassCallBenchmark.megamorphic_4
# Parameters: (param = 3)

# Run progress: 16.67% complete, ETA 00:50:08
# Fork: 1 of 3
# Warmup Iteration   1: 3.396 ns/op
# Warmup Iteration   2: 3.384 ns/op
# Warmup Iteration   3: 3.344 ns/op
# Warmup Iteration   4: 3.335 ns/op
# Warmup Iteration   5: 3.330 ns/op
Iteration   1: 3.325 ns/op
Iteration   2: 3.149 ns/op
Iteration   3: 3.160 ns/op
Iteration   4: 3.161 ns/op
Iteration   5: 3.162 ns/op

# Run progress: 19.44% complete, ETA 00:48:27
# Fork: 2 of 3
# Warmup Iteration   1: 3.333 ns/op
# Warmup Iteration   2: 3.336 ns/op
# Warmup Iteration   3: 3.334 ns/op
# Warmup Iteration   4: 3.322 ns/op
# Warmup Iteration   5: 3.320 ns/op
Iteration   1: 3.316 ns/op
Iteration   2: 3.304 ns/op
Iteration   3: 3.314 ns/op
Iteration   4: 3.311 ns/op
Iteration   5: 3.306 ns/op

# Run progress: 22.22% complete, ETA 00:46:47
# Fork: 3 of 3
# Warmup Iteration   1: 3.547 ns/op
# Warmup Iteration   2: 3.295 ns/op
# Warmup Iteration   3: 3.311 ns/op
# Warmup Iteration   4: 3.307 ns/op
# Warmup Iteration   5: 3.023 ns/op
Iteration   1: 3.335 ns/op
Iteration   2: 3.029 ns/op
Iteration   3: 3.337 ns/op
Iteration   4: 3.328 ns/op
Iteration   5: 3.313 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MegamorphicAbsClassCallBenchmark.megamorphic_4":
  3.257 ±(99.9%) 0.103 ns/op [Average]
  (min, avg, max) = (3.029, 3.257, 3.337), stdev = 0.097
  CI (99.9%): [3.153, 3.360] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MegamorphicAbsClassCallBenchmark.megamorphic_5
# Parameters: (param = 3)

# Run progress: 25.00% complete, ETA 00:45:07
# Fork: 1 of 3
# Warmup Iteration   1: 3.541 ns/op
# Warmup Iteration   2: 3.307 ns/op
# Warmup Iteration   3: 3.340 ns/op
# Warmup Iteration   4: 3.337 ns/op
# Warmup Iteration   5: 3.328 ns/op
Iteration   1: 3.057 ns/op
Iteration   2: 3.352 ns/op
Iteration   3: 3.343 ns/op
Iteration   4: 3.334 ns/op
Iteration   5: 3.062 ns/op

# Run progress: 27.78% complete, ETA 00:43:26
# Fork: 2 of 3
# Warmup Iteration   1: 3.554 ns/op
# Warmup Iteration   2: 3.092 ns/op
# Warmup Iteration   3: 3.134 ns/op
# Warmup Iteration   4: 3.135 ns/op
# Warmup Iteration   5: 3.135 ns/op
Iteration   1: 3.281 ns/op
Iteration   2: 3.269 ns/op
Iteration   3: 3.267 ns/op
Iteration   4: 3.266 ns/op
Iteration   5: 3.265 ns/op

# Run progress: 30.56% complete, ETA 00:41:46
# Fork: 3 of 3
# Warmup Iteration   1: 3.509 ns/op
# Warmup Iteration   2: 3.162 ns/op
# Warmup Iteration   3: 3.281 ns/op
# Warmup Iteration   4: 3.270 ns/op
# Warmup Iteration   5: 3.268 ns/op
Iteration   1: 3.267 ns/op
Iteration   2: 3.278 ns/op
Iteration   3: 3.256 ns/op
Iteration   4: 3.261 ns/op
Iteration   5: 3.261 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MegamorphicAbsClassCallBenchmark.megamorphic_5":
  3.255 ±(99.9%) 0.091 ns/op [Average]
  (min, avg, max) = (3.057, 3.255, 3.352), stdev = 0.085
  CI (99.9%): [3.163, 3.346] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MegamorphicAbsClassCallBenchmark.megamorphic_6
# Parameters: (param = 3)

# Run progress: 33.33% complete, ETA 00:40:06
# Fork: 1 of 3
# Warmup Iteration   1: 3.426 ns/op
# Warmup Iteration   2: 3.533 ns/op
# Warmup Iteration   3: 3.501 ns/op
# Warmup Iteration   4: 3.492 ns/op
# Warmup Iteration   5: 3.484 ns/op
Iteration   1: 3.323 ns/op
Iteration   2: 3.498 ns/op
Iteration   3: 3.492 ns/op
Iteration   4: 3.484 ns/op
Iteration   5: 3.476 ns/op

# Run progress: 36.11% complete, ETA 00:38:25
# Fork: 2 of 3
# Warmup Iteration   1: 3.697 ns/op
# Warmup Iteration   2: 3.317 ns/op
# Warmup Iteration   3: 3.329 ns/op
# Warmup Iteration   4: 3.333 ns/op
# Warmup Iteration   5: 3.333 ns/op
Iteration   1: 3.327 ns/op
Iteration   2: 3.259 ns/op
Iteration   3: 3.499 ns/op
Iteration   4: 3.498 ns/op
Iteration   5: 3.484 ns/op

# Run progress: 38.89% complete, ETA 00:36:45
# Fork: 3 of 3
# Warmup Iteration   1: 3.485 ns/op
# Warmup Iteration   2: 3.635 ns/op
# Warmup Iteration   3: 3.567 ns/op
# Warmup Iteration   4: 3.557 ns/op
# Warmup Iteration   5: 3.555 ns/op
Iteration   1: 3.560 ns/op
Iteration   2: 3.363 ns/op
Iteration   3: 3.376 ns/op
Iteration   4: 3.387 ns/op
Iteration   5: 3.401 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MegamorphicAbsClassCallBenchmark.megamorphic_6":
  3.428 ±(99.9%) 0.092 ns/op [Average]
  (min, avg, max) = (3.259, 3.428, 3.560), stdev = 0.086
  CI (99.9%): [3.336, 3.521] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MegamorphicAbsClassCallBenchmark.monomorphic
# Parameters: (param = 3)

# Run progress: 41.67% complete, ETA 00:35:05
# Fork: 1 of 3
# Warmup Iteration   1: 4.983 ns/op
# Warmup Iteration   2: 4.661 ns/op
# Warmup Iteration   3: 4.306 ns/op
# Warmup Iteration   4: 4.329 ns/op
# Warmup Iteration   5: 4.335 ns/op
Iteration   1: 4.328 ns/op
Iteration   2: 4.724 ns/op
Iteration   3: 4.327 ns/op
Iteration   4: 4.711 ns/op
Iteration   5: 4.672 ns/op

# Run progress: 44.44% complete, ETA 00:33:25
# Fork: 2 of 3
# Warmup Iteration   1: 5.002 ns/op
# Warmup Iteration   2: 4.674 ns/op
# Warmup Iteration   3: 4.647 ns/op
# Warmup Iteration   4: 4.642 ns/op
# Warmup Iteration   5: 4.639 ns/op
Iteration   1: 4.629 ns/op
Iteration   2: 4.628 ns/op
Iteration   3: 4.620 ns/op
Iteration   4: 4.621 ns/op
Iteration   5: 4.624 ns/op

# Run progress: 47.22% complete, ETA 00:31:44
# Fork: 3 of 3
# Warmup Iteration   1: 4.762 ns/op
# Warmup Iteration   2: 4.317 ns/op
# Warmup Iteration   3: 4.306 ns/op
# Warmup Iteration   4: 4.310 ns/op
# Warmup Iteration   5: 4.317 ns/op
Iteration   1: 4.691 ns/op
Iteration   2: 4.443 ns/op
Iteration   3: 4.451 ns/op
Iteration   4: 4.456 ns/op
Iteration   5: 4.463 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MegamorphicAbsClassCallBenchmark.monomorphic":
  4.559 ±(99.9%) 0.144 ns/op [Average]
  (min, avg, max) = (4.327, 4.559, 4.724), stdev = 0.135
  CI (99.9%): [4.415, 4.703] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MegamorphicAbsClassCallBenchmarkV2.test
# Parameters: (mode = MONOMORPHIC, size = 144000)

# Run progress: 50.00% complete, ETA 00:30:04
# Fork: 1 of 3
# Warmup Iteration   1: 1.472 ns/op
# Warmup Iteration   2: 1.360 ns/op
# Warmup Iteration   3: 1.354 ns/op
# Warmup Iteration   4: 1.348 ns/op
# Warmup Iteration   5: 1.344 ns/op
Iteration   1: 1.351 ns/op
Iteration   2: 1.375 ns/op
Iteration   3: 1.374 ns/op
Iteration   4: 1.376 ns/op
Iteration   5: 1.381 ns/op

# Run progress: 52.78% complete, ETA 00:28:24
# Fork: 2 of 3
# Warmup Iteration   1: 1.390 ns/op
# Warmup Iteration   2: 1.273 ns/op
# Warmup Iteration   3: 1.259 ns/op
# Warmup Iteration   4: 1.265 ns/op
# Warmup Iteration   5: 1.390 ns/op
Iteration   1: 1.366 ns/op
Iteration   2: 1.362 ns/op
Iteration   3: 1.362 ns/op
Iteration   4: 1.361 ns/op
Iteration   5: 1.360 ns/op

# Run progress: 55.56% complete, ETA 00:26:44
# Fork: 3 of 3
# Warmup Iteration   1: 1.520 ns/op
# Warmup Iteration   2: 1.447 ns/op
# Warmup Iteration   3: 1.393 ns/op
# Warmup Iteration   4: 1.462 ns/op
# Warmup Iteration   5: 1.469 ns/op
Iteration   1: 1.372 ns/op
Iteration   2: 1.471 ns/op
Iteration   3: 1.381 ns/op
Iteration   4: 1.385 ns/op
Iteration   5: 1.389 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MegamorphicAbsClassCallBenchmarkV2.test":
  1.378 ±(99.9%) 0.030 ns/op [Average]
  (min, avg, max) = (1.351, 1.378, 1.471), stdev = 0.028
  CI (99.9%): [1.348, 1.407] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MegamorphicAbsClassCallBenchmarkV2.test
# Parameters: (mode = BIMORPHIC, size = 144000)

# Run progress: 58.33% complete, ETA 00:25:04
# Fork: 1 of 3
# Warmup Iteration   1: 2.292 ns/op
# Warmup Iteration   2: 2.056 ns/op
# Warmup Iteration   3: 2.017 ns/op
# Warmup Iteration   4: 2.015 ns/op
# Warmup Iteration   5: 2.001 ns/op
Iteration   1: 1.996 ns/op
Iteration   2: 1.970 ns/op
Iteration   3: 1.970 ns/op
Iteration   4: 1.969 ns/op
Iteration   5: 1.969 ns/op

# Run progress: 61.11% complete, ETA 00:23:23
# Fork: 2 of 3
# Warmup Iteration   1: 2.179 ns/op
# Warmup Iteration   2: 1.994 ns/op
# Warmup Iteration   3: 1.977 ns/op
# Warmup Iteration   4: 1.961 ns/op
# Warmup Iteration   5: 1.978 ns/op
Iteration   1: 1.832 ns/op
Iteration   2: 1.841 ns/op
Iteration   3: 1.849 ns/op
Iteration   4: 1.850 ns/op
Iteration   5: 1.854 ns/op

# Run progress: 63.89% complete, ETA 00:21:43
# Fork: 3 of 3
# Warmup Iteration   1: 2.275 ns/op
# Warmup Iteration   2: 2.068 ns/op
# Warmup Iteration   3: 2.037 ns/op
# Warmup Iteration   4: 1.942 ns/op
# Warmup Iteration   5: 1.949 ns/op
Iteration   1: 1.939 ns/op
Iteration   2: 1.993 ns/op
Iteration   3: 1.934 ns/op
Iteration   4: 1.910 ns/op
Iteration   5: 1.916 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MegamorphicAbsClassCallBenchmarkV2.test":
  1.919 ±(99.9%) 0.064 ns/op [Average]
  (min, avg, max) = (1.832, 1.919, 1.996), stdev = 0.060
  CI (99.9%): [1.856, 1.983] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MegamorphicAbsClassCallBenchmarkV2.test
# Parameters: (mode = MEGAMORPHIC_3, size = 144000)

# Run progress: 66.67% complete, ETA 00:20:03
# Fork: 1 of 3
# Warmup Iteration   1: 2.176 ns/op
# Warmup Iteration   2: 1.937 ns/op
# Warmup Iteration   3: 1.934 ns/op
# Warmup Iteration   4: 1.902 ns/op
# Warmup Iteration   5: 2.077 ns/op
Iteration   1: 2.060 ns/op
Iteration   2: 2.045 ns/op
Iteration   3: 2.039 ns/op
Iteration   4: 2.037 ns/op
Iteration   5: 2.033 ns/op

# Run progress: 69.44% complete, ETA 00:18:22
# Fork: 2 of 3
# Warmup Iteration   1: 2.394 ns/op
# Warmup Iteration   2: 2.223 ns/op
# Warmup Iteration   3: 2.193 ns/op
# Warmup Iteration   4: 2.189 ns/op
# Warmup Iteration   5: 2.164 ns/op
Iteration   1: 2.162 ns/op
Iteration   2: 2.157 ns/op
Iteration   3: 2.159 ns/op
Iteration   4: 2.135 ns/op
Iteration   5: 2.059 ns/op

# Run progress: 72.22% complete, ETA 00:16:42
# Fork: 3 of 3
# Warmup Iteration   1: 2.324 ns/op
# Warmup Iteration   2: 2.091 ns/op
# Warmup Iteration   3: 2.083 ns/op
# Warmup Iteration   4: 2.092 ns/op
# Warmup Iteration   5: 1.962 ns/op
Iteration   1: 2.104 ns/op
Iteration   2: 2.112 ns/op
Iteration   3: 2.081 ns/op
Iteration   4: 2.048 ns/op
Iteration   5: 1.954 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MegamorphicAbsClassCallBenchmarkV2.test":
  2.079 ±(99.9%) 0.063 ns/op [Average]
  (min, avg, max) = (1.954, 2.079, 2.162), stdev = 0.059
  CI (99.9%): [2.016, 2.142] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MegamorphicAbsClassCallBenchmarkV2.test
# Parameters: (mode = MEGAMORPHIC_4, size = 144000)

# Run progress: 75.00% complete, ETA 00:15:02
# Fork: 1 of 3
# Warmup Iteration   1: 2.217 ns/op
# Warmup Iteration   2: 2.114 ns/op
# Warmup Iteration   3: 1.982 ns/op
# Warmup Iteration   4: 1.982 ns/op
# Warmup Iteration   5: 1.983 ns/op
Iteration   1: 1.983 ns/op
Iteration   2: 1.979 ns/op
Iteration   3: 1.982 ns/op
Iteration   4: 1.979 ns/op
Iteration   5: 1.981 ns/op

# Run progress: 77.78% complete, ETA 00:13:22
# Fork: 2 of 3
# Warmup Iteration   1: 2.324 ns/op
# Warmup Iteration   2: 2.185 ns/op
# Warmup Iteration   3: 2.164 ns/op
# Warmup Iteration   4: 2.180 ns/op
# Warmup Iteration   5: 2.176 ns/op
Iteration   1: 2.170 ns/op
Iteration   2: 2.173 ns/op
Iteration   3: 2.173 ns/op
Iteration   4: 2.168 ns/op
Iteration   5: 2.168 ns/op

# Run progress: 80.56% complete, ETA 00:11:41
# Fork: 3 of 3
# Warmup Iteration   1: 2.410 ns/op
# Warmup Iteration   2: 2.207 ns/op
# Warmup Iteration   3: 2.060 ns/op
# Warmup Iteration   4: 2.092 ns/op
# Warmup Iteration   5: 2.090 ns/op
Iteration   1: 2.082 ns/op
Iteration   2: 2.048 ns/op
Iteration   3: 2.054 ns/op
Iteration   4: 2.057 ns/op
Iteration   5: 2.063 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MegamorphicAbsClassCallBenchmarkV2.test":
  2.071 ±(99.9%) 0.086 ns/op [Average]
  (min, avg, max) = (1.979, 2.071, 2.173), stdev = 0.081
  CI (99.9%): [1.985, 2.157] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MegamorphicAbsClassCallBenchmarkV2.test
# Parameters: (mode = MEGAMORPHIC_5, size = 144000)

# Run progress: 83.33% complete, ETA 00:10:01
# Fork: 1 of 3
# Warmup Iteration   1: 2.501 ns/op
# Warmup Iteration   2: 2.272 ns/op
# Warmup Iteration   3: 2.265 ns/op
# Warmup Iteration   4: 2.292 ns/op
# Warmup Iteration   5: 2.326 ns/op
Iteration   1: 2.317 ns/op
Iteration   2: 2.311 ns/op
Iteration   3: 2.309 ns/op
Iteration   4: 2.312 ns/op
Iteration   5: 2.312 ns/op

# Run progress: 86.11% complete, ETA 00:08:21
# Fork: 2 of 3
# Warmup Iteration   1: 2.439 ns/op
# Warmup Iteration   2: 2.213 ns/op
# Warmup Iteration   3: 2.196 ns/op
# Warmup Iteration   4: 2.231 ns/op
# Warmup Iteration   5: 2.265 ns/op
Iteration   1: 2.285 ns/op
Iteration   2: 2.286 ns/op
Iteration   3: 2.287 ns/op
Iteration   4: 2.286 ns/op
Iteration   5: 2.282 ns/op

# Run progress: 88.89% complete, ETA 00:06:41
# Fork: 3 of 3
# Warmup Iteration   1: 2.540 ns/op
# Warmup Iteration   2: 2.306 ns/op
# Warmup Iteration   3: 2.272 ns/op
# Warmup Iteration   4: 2.178 ns/op
# Warmup Iteration   5: 2.207 ns/op
Iteration   1: 2.203 ns/op
Iteration   2: 2.307 ns/op
Iteration   3: 2.301 ns/op
Iteration   4: 2.295 ns/op
Iteration   5: 2.271 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MegamorphicAbsClassCallBenchmarkV2.test":
  2.291 ±(99.9%) 0.030 ns/op [Average]
  (min, avg, max) = (2.203, 2.291, 2.317), stdev = 0.028
  CI (99.9%): [2.261, 2.321] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MegamorphicAbsClassCallBenchmarkV2.test
# Parameters: (mode = MEGAMORPHIC_6, size = 144000)

# Run progress: 91.67% complete, ETA 00:05:00
# Fork: 1 of 3
# Warmup Iteration   1: 2.498 ns/op
# Warmup Iteration   2: 2.463 ns/op
# Warmup Iteration   3: 2.249 ns/op
# Warmup Iteration   4: 2.290 ns/op
# Warmup Iteration   5: 2.265 ns/op
Iteration   1: 2.266 ns/op
Iteration   2: 2.349 ns/op
Iteration   3: 2.676 ns/op
Iteration   4: 2.425 ns/op
Iteration   5: 2.406 ns/op

# Run progress: 94.44% complete, ETA 00:03:20
# Fork: 2 of 3
# Warmup Iteration   1: 2.475 ns/op
# Warmup Iteration   2: 2.419 ns/op
# Warmup Iteration   3: 2.406 ns/op
# Warmup Iteration   4: 2.409 ns/op
# Warmup Iteration   5: 2.394 ns/op
Iteration   1: 2.385 ns/op
Iteration   2: 2.383 ns/op
Iteration   3: 2.385 ns/op
Iteration   4: 2.384 ns/op
Iteration   5: 2.461 ns/op

# Run progress: 97.22% complete, ETA 00:01:40
# Fork: 3 of 3
# Warmup Iteration   1: 2.720 ns/op
# Warmup Iteration   2: 2.531 ns/op
# Warmup Iteration   3: 2.339 ns/op
# Warmup Iteration   4: 2.373 ns/op
# Warmup Iteration   5: 2.356 ns/op
Iteration   1: 2.509 ns/op
Iteration   2: 2.487 ns/op
Iteration   3: 2.476 ns/op
Iteration   4: 2.475 ns/op
Iteration   5: 2.473 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MegamorphicAbsClassCallBenchmarkV2.test":
  2.436 ±(99.9%) 0.098 ns/op [Average]
  (min, avg, max) = (2.266, 2.436, 2.676), stdev = 0.092
  CI (99.9%): [2.338, 2.534] (assumes normal distribution)


# Run complete. Total time: 01:00:09

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                              (mode)  (param)  (size)  Mode  Cnt  Score   Error  Units
MegamorphicAbsClassCallBenchmark.bimorphic                N/A        3     N/A  avgt   15  3.624 ± 0.075  ns/op
MegamorphicAbsClassCallBenchmark.megamorphic_3            N/A        3     N/A  avgt   15  3.272 ± 0.098  ns/op
MegamorphicAbsClassCallBenchmark.megamorphic_4            N/A        3     N/A  avgt   15  3.257 ± 0.103  ns/op
MegamorphicAbsClassCallBenchmark.megamorphic_5            N/A        3     N/A  avgt   15  3.255 ± 0.091  ns/op
MegamorphicAbsClassCallBenchmark.megamorphic_6            N/A        3     N/A  avgt   15  3.428 ± 0.092  ns/op
MegamorphicAbsClassCallBenchmark.monomorphic              N/A        3     N/A  avgt   15  4.559 ± 0.144  ns/op
MegamorphicAbsClassCallBenchmarkV2.test           MONOMORPHIC      N/A  144000  avgt   15  1.378 ± 0.030  ns/op
MegamorphicAbsClassCallBenchmarkV2.test             BIMORPHIC      N/A  144000  avgt   15  1.919 ± 0.064  ns/op
MegamorphicAbsClassCallBenchmarkV2.test         MEGAMORPHIC_3      N/A  144000  avgt   15  2.079 ± 0.063  ns/op
MegamorphicAbsClassCallBenchmarkV2.test         MEGAMORPHIC_4      N/A  144000  avgt   15  2.071 ± 0.086  ns/op
MegamorphicAbsClassCallBenchmarkV2.test         MEGAMORPHIC_5      N/A  144000  avgt   15  2.291 ± 0.030  ns/op
MegamorphicAbsClassCallBenchmarkV2.test         MEGAMORPHIC_6      N/A  144000  avgt   15  2.436 ± 0.098  ns/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_graal_jit/MegamorphicAbsClassCallBenchmark.json
Running java -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler -jar benchmarks/target/benchmarks.jar .*MegamorphicInterfaceCallBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_graal_jit/MegamorphicInterfaceCallBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MegamorphicInterfaceCallBenchmark.bimorphic
# Parameters: (param = 3)

# Run progress: 0.00% complete, ETA 00:30:00
# Fork: 1 of 3
# Warmup Iteration   1: 4.319 ns/op
# Warmup Iteration   2: 3.745 ns/op
# Warmup Iteration   3: 3.866 ns/op
# Warmup Iteration   4: 3.540 ns/op
# Warmup Iteration   5: 3.557 ns/op
Iteration   1: 3.547 ns/op
Iteration   2: 3.857 ns/op
Iteration   3: 3.845 ns/op
Iteration   4: 3.520 ns/op
Iteration   5: 3.532 ns/op

# Run progress: 5.56% complete, ETA 00:28:26
# Fork: 2 of 3
# Warmup Iteration   1: 3.826 ns/op
# Warmup Iteration   2: 3.583 ns/op
# Warmup Iteration   3: 3.542 ns/op
# Warmup Iteration   4: 3.538 ns/op
# Warmup Iteration   5: 3.888 ns/op
Iteration   1: 3.859 ns/op
Iteration   2: 3.842 ns/op
Iteration   3: 3.834 ns/op
Iteration   4: 3.824 ns/op
Iteration   5: 3.823 ns/op

# Run progress: 11.11% complete, ETA 00:26:45
# Fork: 3 of 3
# Warmup Iteration   1: 3.786 ns/op
# Warmup Iteration   2: 3.824 ns/op
# Warmup Iteration   3: 3.840 ns/op
# Warmup Iteration   4: 3.831 ns/op
# Warmup Iteration   5: 3.830 ns/op
Iteration   1: 3.501 ns/op
Iteration   2: 3.530 ns/op
Iteration   3: 3.526 ns/op
Iteration   4: 3.527 ns/op
Iteration   5: 3.850 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MegamorphicInterfaceCallBenchmark.bimorphic":
  3.694 ±(99.9%) 0.175 ns/op [Average]
  (min, avg, max) = (3.501, 3.694, 3.859), stdev = 0.164
  CI (99.9%): [3.520, 3.869] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MegamorphicInterfaceCallBenchmark.megamorphic_3
# Parameters: (param = 3)

# Run progress: 16.67% complete, ETA 00:25:04
# Fork: 1 of 3
# Warmup Iteration   1: 3.948 ns/op
# Warmup Iteration   2: 3.530 ns/op
# Warmup Iteration   3: 3.522 ns/op
# Warmup Iteration   4: 3.516 ns/op
# Warmup Iteration   5: 3.513 ns/op
Iteration   1: 3.218 ns/op
Iteration   2: 3.532 ns/op
Iteration   3: 3.523 ns/op
Iteration   4: 3.513 ns/op
Iteration   5: 3.510 ns/op

# Run progress: 22.22% complete, ETA 00:23:23
# Fork: 2 of 3
# Warmup Iteration   1: 3.596 ns/op
# Warmup Iteration   2: 3.465 ns/op
# Warmup Iteration   3: 3.514 ns/op
# Warmup Iteration   4: 3.506 ns/op
# Warmup Iteration   5: 3.503 ns/op
Iteration   1: 3.499 ns/op
Iteration   2: 3.506 ns/op
Iteration   3: 3.503 ns/op
Iteration   4: 3.495 ns/op
Iteration   5: 3.492 ns/op

# Run progress: 27.78% complete, ETA 00:21:43
# Fork: 3 of 3
# Warmup Iteration   1: 3.680 ns/op
# Warmup Iteration   2: 3.472 ns/op
# Warmup Iteration   3: 3.177 ns/op
# Warmup Iteration   4: 3.307 ns/op
# Warmup Iteration   5: 3.312 ns/op
Iteration   1: 3.312 ns/op
Iteration   2: 3.320 ns/op
Iteration   3: 3.465 ns/op
Iteration   4: 3.462 ns/op
Iteration   5: 3.179 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MegamorphicInterfaceCallBenchmark.megamorphic_3":
  3.435 ±(99.9%) 0.125 ns/op [Average]
  (min, avg, max) = (3.179, 3.435, 3.532), stdev = 0.117
  CI (99.9%): [3.310, 3.560] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MegamorphicInterfaceCallBenchmark.megamorphic_4
# Parameters: (param = 3)

# Run progress: 33.33% complete, ETA 00:20:03
# Fork: 1 of 3
# Warmup Iteration   1: 3.378 ns/op
# Warmup Iteration   2: 3.337 ns/op
# Warmup Iteration   3: 3.036 ns/op
# Warmup Iteration   4: 3.040 ns/op
# Warmup Iteration   5: 3.045 ns/op
Iteration   1: 3.046 ns/op
Iteration   2: 3.159 ns/op
Iteration   3: 3.161 ns/op
Iteration   4: 3.150 ns/op
Iteration   5: 3.164 ns/op

# Run progress: 38.89% complete, ETA 00:18:22
# Fork: 2 of 3
# Warmup Iteration   1: 3.243 ns/op
# Warmup Iteration   2: 3.067 ns/op
# Warmup Iteration   3: 3.322 ns/op
# Warmup Iteration   4: 3.312 ns/op
# Warmup Iteration   5: 3.296 ns/op
Iteration   1: 3.291 ns/op
Iteration   2: 3.284 ns/op
Iteration   3: 3.284 ns/op
Iteration   4: 3.279 ns/op
Iteration   5: 3.276 ns/op

# Run progress: 44.44% complete, ETA 00:16:42
# Fork: 3 of 3
# Warmup Iteration   1: 3.511 ns/op
# Warmup Iteration   2: 3.058 ns/op
# Warmup Iteration   3: 3.052 ns/op
# Warmup Iteration   4: 3.045 ns/op
# Warmup Iteration   5: 3.167 ns/op
Iteration   1: 3.043 ns/op
Iteration   2: 3.044 ns/op
Iteration   3: 3.045 ns/op
Iteration   4: 3.049 ns/op
Iteration   5: 3.048 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MegamorphicInterfaceCallBenchmark.megamorphic_4":
  3.155 ±(99.9%) 0.112 ns/op [Average]
  (min, avg, max) = (3.043, 3.155, 3.291), stdev = 0.105
  CI (99.9%): [3.043, 3.267] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MegamorphicInterfaceCallBenchmark.megamorphic_5
# Parameters: (param = 3)

# Run progress: 50.00% complete, ETA 00:15:02
# Fork: 1 of 3
# Warmup Iteration   1: 3.612 ns/op
# Warmup Iteration   2: 3.086 ns/op
# Warmup Iteration   3: 3.106 ns/op
# Warmup Iteration   4: 3.110 ns/op
# Warmup Iteration   5: 3.104 ns/op
Iteration   1: 3.113 ns/op
Iteration   2: 3.104 ns/op
Iteration   3: 3.228 ns/op
Iteration   4: 3.255 ns/op
Iteration   5: 3.418 ns/op

# Run progress: 55.56% complete, ETA 00:13:22
# Fork: 2 of 3
# Warmup Iteration   1: 3.450 ns/op
# Warmup Iteration   2: 3.317 ns/op
# Warmup Iteration   3: 3.162 ns/op
# Warmup Iteration   4: 3.172 ns/op
# Warmup Iteration   5: 3.067 ns/op
Iteration   1: 3.071 ns/op
Iteration   2: 3.073 ns/op
Iteration   3: 3.081 ns/op
Iteration   4: 3.081 ns/op
Iteration   5: 3.078 ns/op

# Run progress: 61.11% complete, ETA 00:11:41
# Fork: 3 of 3
# Warmup Iteration   1: 3.607 ns/op
# Warmup Iteration   2: 3.361 ns/op
# Warmup Iteration   3: 3.314 ns/op
# Warmup Iteration   4: 3.037 ns/op
# Warmup Iteration   5: 3.051 ns/op
Iteration   1: 3.323 ns/op
Iteration   2: 3.336 ns/op
Iteration   3: 3.042 ns/op
Iteration   4: 3.323 ns/op
Iteration   5: 3.314 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MegamorphicInterfaceCallBenchmark.megamorphic_5":
  3.190 ±(99.9%) 0.137 ns/op [Average]
  (min, avg, max) = (3.042, 3.190, 3.418), stdev = 0.128
  CI (99.9%): [3.053, 3.326] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MegamorphicInterfaceCallBenchmark.megamorphic_6
# Parameters: (param = 3)

# Run progress: 66.67% complete, ETA 00:10:01
# Fork: 1 of 3
# Warmup Iteration   1: 3.814 ns/op
# Warmup Iteration   2: 3.386 ns/op
# Warmup Iteration   3: 3.383 ns/op
# Warmup Iteration   4: 3.386 ns/op
# Warmup Iteration   5: 3.389 ns/op
Iteration   1: 3.427 ns/op
Iteration   2: 3.383 ns/op
Iteration   3: 3.389 ns/op
Iteration   4: 3.386 ns/op
Iteration   5: 3.380 ns/op

# Run progress: 72.22% complete, ETA 00:08:21
# Fork: 2 of 3
# Warmup Iteration   1: 3.646 ns/op
# Warmup Iteration   2: 3.436 ns/op
# Warmup Iteration   3: 3.400 ns/op
# Warmup Iteration   4: 3.400 ns/op
# Warmup Iteration   5: 3.387 ns/op
Iteration   1: 3.390 ns/op
Iteration   2: 3.387 ns/op
Iteration   3: 3.395 ns/op
Iteration   4: 3.413 ns/op
Iteration   5: 3.391 ns/op

# Run progress: 77.78% complete, ETA 00:06:41
# Fork: 3 of 3
# Warmup Iteration   1: 3.739 ns/op
# Warmup Iteration   2: 3.565 ns/op
# Warmup Iteration   3: 3.513 ns/op
# Warmup Iteration   4: 3.507 ns/op
# Warmup Iteration   5: 3.506 ns/op
Iteration   1: 3.224 ns/op
Iteration   2: 3.242 ns/op
Iteration   3: 3.250 ns/op
Iteration   4: 3.249 ns/op
Iteration   5: 3.253 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MegamorphicInterfaceCallBenchmark.megamorphic_6":
  3.344 ±(99.9%) 0.080 ns/op [Average]
  (min, avg, max) = (3.224, 3.344, 3.427), stdev = 0.075
  CI (99.9%): [3.264, 3.424] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MegamorphicInterfaceCallBenchmark.monomorphic
# Parameters: (param = 3)

# Run progress: 83.33% complete, ETA 00:05:00
# Fork: 1 of 3
# Warmup Iteration   1: 5.248 ns/op
# Warmup Iteration   2: 4.905 ns/op
# Warmup Iteration   3: 4.639 ns/op
# Warmup Iteration   4: 4.652 ns/op
# Warmup Iteration   5: 4.663 ns/op
Iteration   1: 4.655 ns/op
Iteration   2: 4.906 ns/op
Iteration   3: 4.890 ns/op
Iteration   4: 4.870 ns/op
Iteration   5: 4.884 ns/op

# Run progress: 88.89% complete, ETA 00:03:20
# Fork: 2 of 3
# Warmup Iteration   1: 5.094 ns/op
# Warmup Iteration   2: 4.622 ns/op
# Warmup Iteration   3: 4.583 ns/op
# Warmup Iteration   4: 4.603 ns/op
# Warmup Iteration   5: 4.624 ns/op
Iteration   1: 4.605 ns/op
Iteration   2: 4.471 ns/op
Iteration   3: 4.455 ns/op
Iteration   4: 4.625 ns/op
Iteration   5: 4.624 ns/op

# Run progress: 94.44% complete, ETA 00:01:40
# Fork: 3 of 3
# Warmup Iteration   1: 5.147 ns/op
# Warmup Iteration   2: 4.639 ns/op
# Warmup Iteration   3: 4.605 ns/op
# Warmup Iteration   4: 4.611 ns/op
# Warmup Iteration   5: 4.622 ns/op
Iteration   1: 4.619 ns/op
Iteration   2: 4.616 ns/op
Iteration   3: 4.603 ns/op
Iteration   4: 4.840 ns/op
Iteration   5: 4.849 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MegamorphicInterfaceCallBenchmark.monomorphic":
  4.701 ±(99.9%) 0.167 ns/op [Average]
  (min, avg, max) = (4.455, 4.701, 4.906), stdev = 0.156
  CI (99.9%): [4.534, 4.868] (assumes normal distribution)


# Run complete. Total time: 00:30:04

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        (param)  Mode  Cnt  Score   Error  Units
MegamorphicInterfaceCallBenchmark.bimorphic            3  avgt   15  3.694 ± 0.175  ns/op
MegamorphicInterfaceCallBenchmark.megamorphic_3        3  avgt   15  3.435 ± 0.125  ns/op
MegamorphicInterfaceCallBenchmark.megamorphic_4        3  avgt   15  3.155 ± 0.112  ns/op
MegamorphicInterfaceCallBenchmark.megamorphic_5        3  avgt   15  3.190 ± 0.137  ns/op
MegamorphicInterfaceCallBenchmark.megamorphic_6        3  avgt   15  3.344 ± 0.080  ns/op
MegamorphicInterfaceCallBenchmark.monomorphic          3  avgt   15  4.701 ± 0.167  ns/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_graal_jit/MegamorphicInterfaceCallBenchmark.json
Running java -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler -jar benchmarks/target/benchmarks.jar .*ChainingLambdaBenchmark.* -prof gc -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_graal_jit/ChainingLambdaBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.baseline
# Parameters: (value = 42)

# Run progress: 0.00% complete, ETA 00:55:00
# Fork: 1 of 3
# Warmup Iteration   1: 3.017 ns/op
# Warmup Iteration   2: 2.746 ns/op
# Warmup Iteration   3: 2.720 ns/op
# Warmup Iteration   4: 2.714 ns/op
# Warmup Iteration   5: 2.714 ns/op
Iteration   1: 2.559 ns/op
                 ·gc.alloc.rate:      0.011 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.497 ns/op
                 ·gc.alloc.rate:      0.017 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.718 ns/op
                 ·gc.alloc.rate:      0.002 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.724 ns/op
                 ·gc.alloc.rate:      0.589 MB/sec
                 ·gc.alloc.rate.norm: 0.002 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.714 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 3.03% complete, ETA 00:56:13
# Fork: 2 of 3
# Warmup Iteration   1: 2.667 ns/op
# Warmup Iteration   2: 2.504 ns/op
# Warmup Iteration   3: 2.724 ns/op
# Warmup Iteration   4: 2.702 ns/op
# Warmup Iteration   5: 2.693 ns/op
Iteration   1: 2.687 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.559 ns/op
                 ·gc.alloc.rate:      0.002 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.483 ns/op
                 ·gc.alloc.rate:      0.513 MB/sec
                 ·gc.alloc.rate.norm: 0.001 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.494 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.581 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 6.06% complete, ETA 00:54:26
# Fork: 3 of 3
# Warmup Iteration   1: 2.893 ns/op
# Warmup Iteration   2: 2.495 ns/op
# Warmup Iteration   3: 2.592 ns/op
# Warmup Iteration   4: 2.593 ns/op
# Warmup Iteration   5: 2.592 ns/op
Iteration   1: 2.486 ns/op
                 ·gc.alloc.rate:               0.143 MB/sec
                 ·gc.alloc.rate.norm:          ≈ 10⁻³ B/op
                 ·gc.churn.G1_Eden_Space:      3.809 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 0.010 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     4.000 ms

Iteration   2: 2.589 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.594 ns/op
                 ·gc.alloc.rate:      1.154 MB/sec
                 ·gc.alloc.rate.norm: 0.003 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.587 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.580 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.baseline":
  2.590 ±(99.9%) 0.091 ns/op [Average]
  (min, avg, max) = (2.483, 2.590, 2.724), stdev = 0.085
  CI (99.9%): [2.499, 2.681] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.baseline:·gc.alloc.rate":
  0.162 ±(99.9%) 0.358 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.162, 1.154), stdev = 0.335
  CI (99.9%): [≈ 0, 0.520] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.baseline:·gc.alloc.rate.norm":
  ≈ 10⁻³ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.baseline:·gc.churn.G1_Eden_Space":
  0.254 ±(99.9%) 1.051 MB/sec [Average]
  (min, avg, max) = (≈ 0, 0.254, 3.809), stdev = 0.983
  CI (99.9%): [≈ 0, 1.305] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.baseline:·gc.churn.G1_Eden_Space.norm":
  0.001 ±(99.9%) 0.003 B/op [Average]
  (min, avg, max) = (≈ 0, 0.001, 0.010), stdev = 0.003
  CI (99.9%): [≈ 0, 0.004] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.baseline:·gc.count":
  1.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (≈ 0, 0.067, 1.000), stdev = 0.258
  CI (99.9%): [1.000, 1.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.baseline:·gc.time":
  4.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 0.267, 4.000), stdev = 1.033
  CI (99.9%): [4.000, 4.000] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_1
# Parameters: (value = 42)

# Run progress: 9.09% complete, ETA 00:52:40
# Fork: 1 of 3
# Warmup Iteration   1: 2.852 ns/op
# Warmup Iteration   2: 2.506 ns/op
# Warmup Iteration   3: 2.727 ns/op
# Warmup Iteration   4: 2.488 ns/op
# Warmup Iteration   5: 2.496 ns/op
Iteration   1: 2.592 ns/op
                 ·gc.alloc.rate:      0.157 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.507 ns/op
                 ·gc.alloc.rate:                   1.777 MB/sec
                 ·gc.alloc.rate.norm:              0.005 B/op
                 ·gc.churn.G1_Eden_Space:          2.476 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     0.007 B/op
                 ·gc.churn.G1_Survivor_Space:      0.020 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        1.000 counts
                 ·gc.time:                         1.000 ms

Iteration   3: 2.507 ns/op
                 ·gc.alloc.rate:      0.017 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.511 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.729 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 12.12% complete, ETA 00:50:54
# Fork: 2 of 3
# Warmup Iteration   1: 2.800 ns/op
# Warmup Iteration   2: 2.755 ns/op
# Warmup Iteration   3: 2.713 ns/op
# Warmup Iteration   4: 2.709 ns/op
# Warmup Iteration   5: 2.693 ns/op
Iteration   1: 2.698 ns/op
                 ·gc.alloc.rate:                   0.548 MB/sec
                 ·gc.alloc.rate.norm:              0.002 B/op
                 ·gc.churn.G1_Eden_Space:          2.476 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     0.007 B/op
                 ·gc.churn.G1_Survivor_Space:      0.008 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:                        1.000 counts
                 ·gc.time:                         1.000 ms

Iteration   2: 2.693 ns/op
                 ·gc.alloc.rate:      0.009 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.546 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.549 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.573 ns/op
                 ·gc.alloc.rate:      0.018 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 15.15% complete, ETA 00:49:08
# Fork: 3 of 3
# Warmup Iteration   1: 2.833 ns/op
# Warmup Iteration   2: 2.581 ns/op
# Warmup Iteration   3: 2.579 ns/op
# Warmup Iteration   4: 2.576 ns/op
# Warmup Iteration   5: 2.578 ns/op
Iteration   1: 2.583 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.723 ns/op
                 ·gc.alloc.rate:                   1.300 MB/sec
                 ·gc.alloc.rate.norm:              0.004 B/op
                 ·gc.churn.G1_Eden_Space:          2.476 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     0.007 B/op
                 ·gc.churn.G1_Survivor_Space:      0.008 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:                        1.000 counts
                 ·gc.time:                         2.000 ms

Iteration   3: 2.709 ns/op
                 ·gc.alloc.rate:      0.327 MB/sec
                 ·gc.alloc.rate.norm: 0.001 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.698 ns/op
                 ·gc.alloc.rate:      0.031 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.689 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_1":
  2.621 ±(99.9%) 0.093 ns/op [Average]
  (min, avg, max) = (2.507, 2.621, 2.729), stdev = 0.087
  CI (99.9%): [2.528, 2.713] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_1:·gc.alloc.rate":
  0.279 ±(99.9%) 0.579 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.279, 1.777), stdev = 0.542
  CI (99.9%): [≈ 0, 0.858] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_1:·gc.alloc.rate.norm":
  0.001 ±(99.9%) 0.002 B/op [Average]
  (min, avg, max) = (≈ 10⁻⁷, 0.001, 0.005), stdev = 0.002
  CI (99.9%): [≈ 0, 0.002] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_1:·gc.churn.G1_Eden_Space":
  0.495 ±(99.9%) 1.096 MB/sec [Average]
  (min, avg, max) = (≈ 0, 0.495, 2.476), stdev = 1.025
  CI (99.9%): [≈ 0, 1.591] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_1:·gc.churn.G1_Eden_Space.norm":
  0.001 ±(99.9%) 0.003 B/op [Average]
  (min, avg, max) = (≈ 0, 0.001, 0.007), stdev = 0.003
  CI (99.9%): [≈ 0, 0.005] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_1:·gc.churn.G1_Survivor_Space":
  0.002 ±(99.9%) 0.006 MB/sec [Average]
  (min, avg, max) = (≈ 0, 0.002, 0.020), stdev = 0.006
  CI (99.9%): [≈ 0, 0.009] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_1:·gc.churn.G1_Survivor_Space.norm":
  ≈ 10⁻⁵ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_1:·gc.count":
  3.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (≈ 0, 0.200, 1.000), stdev = 0.414
  CI (99.9%): [3.000, 3.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_1:·gc.time":
  4.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 0.267, 2.000), stdev = 0.594
  CI (99.9%): [4.000, 4.000] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_12
# Parameters: (value = 42)

# Run progress: 18.18% complete, ETA 00:47:23
# Fork: 1 of 3
# Warmup Iteration   1: 2.943 ns/op
# Warmup Iteration   2: 2.711 ns/op
# Warmup Iteration   3: 2.684 ns/op
# Warmup Iteration   4: 2.680 ns/op
# Warmup Iteration   5: 2.679 ns/op
Iteration   1: 2.691 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.677 ns/op
                 ·gc.alloc.rate:      0.001 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.682 ns/op
                 ·gc.alloc.rate:      0.577 MB/sec
                 ·gc.alloc.rate.norm: 0.002 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.689 ns/op
                 ·gc.alloc.rate:      1.597 MB/sec
                 ·gc.alloc.rate.norm: 0.005 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.680 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 21.21% complete, ETA 00:45:37
# Fork: 2 of 3
# Warmup Iteration   1: 2.665 ns/op
# Warmup Iteration   2: 2.735 ns/op
# Warmup Iteration   3: 2.690 ns/op
# Warmup Iteration   4: 2.696 ns/op
# Warmup Iteration   5: 2.686 ns/op
Iteration   1: 2.685 ns/op
                 ·gc.alloc.rate:      0.142 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.706 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.681 ns/op
                 ·gc.alloc.rate:      0.007 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.683 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.471 ns/op
                 ·gc.alloc.rate:      0.012 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 24.24% complete, ETA 00:43:52
# Fork: 3 of 3
# Warmup Iteration   1: 2.789 ns/op
# Warmup Iteration   2: 2.734 ns/op
# Warmup Iteration   3: 2.687 ns/op
# Warmup Iteration   4: 2.684 ns/op
# Warmup Iteration   5: 2.682 ns/op
Iteration   1: 2.682 ns/op
                 ·gc.alloc.rate:      0.035 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.542 ns/op
                 ·gc.alloc.rate:      0.021 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.582 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.469 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.574 ns/op
                 ·gc.alloc.rate:      0.008 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_12":
  2.633 ±(99.9%) 0.088 ns/op [Average]
  (min, avg, max) = (2.469, 2.633, 2.706), stdev = 0.083
  CI (99.9%): [2.545, 2.721] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_12:·gc.alloc.rate":
  0.160 ±(99.9%) 0.454 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.160, 1.597), stdev = 0.424
  CI (99.9%): [≈ 0, 0.613] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_12:·gc.alloc.rate.norm":
  ≈ 10⁻³ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_12:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_16
# Parameters: (value = 42)

# Run progress: 27.27% complete, ETA 00:42:07
# Fork: 1 of 3
# Warmup Iteration   1: 2.764 ns/op
# Warmup Iteration   2: 2.752 ns/op
# Warmup Iteration   3: 2.708 ns/op
# Warmup Iteration   4: 2.698 ns/op
# Warmup Iteration   5: 2.474 ns/op
Iteration   1: 2.494 ns/op
                 ·gc.alloc.rate:      0.582 MB/sec
                 ·gc.alloc.rate.norm: 0.002 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.593 ns/op
                 ·gc.alloc.rate:      0.977 MB/sec
                 ·gc.alloc.rate.norm: 0.003 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.588 ns/op
                 ·gc.alloc.rate:      0.045 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.725 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.561 ns/op
                 ·gc.alloc.rate:      0.018 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 30.30% complete, ETA 00:40:21
# Fork: 2 of 3
# Warmup Iteration   1: 2.973 ns/op
# Warmup Iteration   2: 2.597 ns/op
# Warmup Iteration   3: 2.567 ns/op
# Warmup Iteration   4: 2.489 ns/op
# Warmup Iteration   5: 2.497 ns/op
Iteration   1: 2.497 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.504 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.511 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.515 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.507 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 33.33% complete, ETA 00:38:36
# Fork: 3 of 3
# Warmup Iteration   1: 2.843 ns/op
# Warmup Iteration   2: 2.750 ns/op
# Warmup Iteration   3: 2.707 ns/op
# Warmup Iteration   4: 2.697 ns/op
# Warmup Iteration   5: 2.688 ns/op
Iteration   1: 2.689 ns/op
                 ·gc.alloc.rate:      0.006 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.472 ns/op
                 ·gc.alloc.rate:      0.092 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.570 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.489 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.491 ns/op
                 ·gc.alloc.rate:      0.028 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_16":
  2.547 ±(99.9%) 0.081 ns/op [Average]
  (min, avg, max) = (2.472, 2.547, 2.725), stdev = 0.075
  CI (99.9%): [2.466, 2.628] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_16:·gc.alloc.rate":
  0.117 ±(99.9%) 0.300 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.117, 0.977), stdev = 0.281
  CI (99.9%): [≈ 0, 0.416] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_16:·gc.alloc.rate.norm":
  ≈ 10⁻³ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_16:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_2
# Parameters: (value = 42)

# Run progress: 36.36% complete, ETA 00:36:51
# Fork: 1 of 3
# Warmup Iteration   1: 2.960 ns/op
# Warmup Iteration   2: 2.704 ns/op
# Warmup Iteration   3: 2.715 ns/op
# Warmup Iteration   4: 2.702 ns/op
# Warmup Iteration   5: 2.569 ns/op
Iteration   1: 2.568 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.576 ns/op
                 ·gc.alloc.rate:      0.450 MB/sec
                 ·gc.alloc.rate.norm: 0.001 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.568 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.702 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.478 ns/op
                 ·gc.alloc.rate:                   0.279 MB/sec
                 ·gc.alloc.rate.norm:              0.001 B/op
                 ·gc.churn.G1_Eden_Space:          2.476 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     0.007 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:                        1.000 counts
                 ·gc.time:                         2.000 ms


# Run progress: 39.39% complete, ETA 00:35:05
# Fork: 2 of 3
# Warmup Iteration   1: 2.896 ns/op
# Warmup Iteration   2: 2.576 ns/op
# Warmup Iteration   3: 2.570 ns/op
# Warmup Iteration   4: 2.581 ns/op
# Warmup Iteration   5: 2.591 ns/op
Iteration   1: 2.728 ns/op
                 ·gc.alloc.rate:      1.141 MB/sec
                 ·gc.alloc.rate.norm: 0.003 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.697 ns/op
                 ·gc.alloc.rate:               0.104 MB/sec
                 ·gc.alloc.rate.norm:          ≈ 10⁻⁴ B/op
                 ·gc.churn.G1_Eden_Space:      2.476 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 0.007 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     1.000 ms

Iteration   3: 2.688 ns/op
                 ·gc.alloc.rate:      0.034 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.683 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.683 ns/op
                 ·gc.alloc.rate:      0.018 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 42.42% complete, ETA 00:33:20
# Fork: 3 of 3
# Warmup Iteration   1: 2.900 ns/op
# Warmup Iteration   2: 2.571 ns/op
# Warmup Iteration   3: 2.562 ns/op
# Warmup Iteration   4: 2.577 ns/op
# Warmup Iteration   5: 2.700 ns/op
Iteration   1: 2.702 ns/op
                 ·gc.alloc.rate:      1.113 MB/sec
                 ·gc.alloc.rate.norm: 0.003 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.693 ns/op
                 ·gc.alloc.rate:      0.144 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.681 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.679 ns/op
                 ·gc.alloc.rate:      0.030 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.678 ns/op
                 ·gc.alloc.rate:      0.008 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_2":
  2.654 ±(99.9%) 0.076 ns/op [Average]
  (min, avg, max) = (2.478, 2.654, 2.728), stdev = 0.071
  CI (99.9%): [2.578, 2.729] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_2:·gc.alloc.rate":
  0.221 ±(99.9%) 0.416 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.221, 1.141), stdev = 0.389
  CI (99.9%): [≈ 0, 0.637] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_2:·gc.alloc.rate.norm":
  0.001 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (≈ 10⁻⁷, 0.001, 0.003), stdev = 0.001
  CI (99.9%): [≈ 0, 0.002] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_2:·gc.churn.G1_Eden_Space":
  0.330 ±(99.9%) 0.931 MB/sec [Average]
  (min, avg, max) = (≈ 0, 0.330, 2.476), stdev = 0.871
  CI (99.9%): [≈ 0, 1.261] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_2:·gc.churn.G1_Eden_Space.norm":
  0.001 ±(99.9%) 0.003 B/op [Average]
  (min, avg, max) = (≈ 0, 0.001, 0.007), stdev = 0.002
  CI (99.9%): [≈ 0, 0.004] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_2:·gc.churn.G1_Survivor_Space":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_2:·gc.churn.G1_Survivor_Space.norm":
  ≈ 10⁻⁶ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_2:·gc.count":
  2.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (≈ 0, 0.133, 1.000), stdev = 0.352
  CI (99.9%): [2.000, 2.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_2:·gc.time":
  3.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 0.200, 2.000), stdev = 0.561
  CI (99.9%): [3.000, 3.000] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_24
# Parameters: (value = 42)

# Run progress: 45.45% complete, ETA 00:31:35
# Fork: 1 of 3
# Warmup Iteration   1: 2.943 ns/op
# Warmup Iteration   2: 2.587 ns/op
# Warmup Iteration   3: 2.480 ns/op
# Warmup Iteration   4: 2.715 ns/op
# Warmup Iteration   5: 2.692 ns/op
Iteration   1: 2.692 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.688 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.684 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.686 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.474 ns/op
                 ·gc.alloc.rate:      0.005 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 48.48% complete, ETA 00:29:50
# Fork: 2 of 3
# Warmup Iteration   1: 2.731 ns/op
# Warmup Iteration   2: 2.514 ns/op
# Warmup Iteration   3: 2.497 ns/op
# Warmup Iteration   4: 2.737 ns/op
# Warmup Iteration   5: 2.700 ns/op
Iteration   1: 2.690 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.686 ns/op
                 ·gc.alloc.rate:      0.109 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.679 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.674 ns/op
                 ·gc.alloc.rate:      0.056 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.677 ns/op
                 ·gc.alloc.rate:      0.016 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 51.52% complete, ETA 00:28:04
# Fork: 3 of 3
# Warmup Iteration   1: 2.802 ns/op
# Warmup Iteration   2: 2.609 ns/op
# Warmup Iteration   3: 2.691 ns/op
# Warmup Iteration   4: 2.688 ns/op
# Warmup Iteration   5: 2.687 ns/op
Iteration   1: 2.680 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.678 ns/op
                 ·gc.alloc.rate:      0.008 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.679 ns/op
                 ·gc.alloc.rate:      0.003 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.676 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.672 ns/op
                 ·gc.alloc.rate:      0.012 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_24":
  2.668 ±(99.9%) 0.058 ns/op [Average]
  (min, avg, max) = (2.474, 2.668, 2.692), stdev = 0.054
  CI (99.9%): [2.610, 2.725] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_24:·gc.alloc.rate":
  0.014 ±(99.9%) 0.032 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.014, 0.109), stdev = 0.030
  CI (99.9%): [≈ 0, 0.046] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_24:·gc.alloc.rate.norm":
  ≈ 10⁻⁴ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_24:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_3
# Parameters: (value = 42)

# Run progress: 54.55% complete, ETA 00:26:19
# Fork: 1 of 3
# Warmup Iteration   1: 2.717 ns/op
# Warmup Iteration   2: 2.721 ns/op
# Warmup Iteration   3: 2.701 ns/op
# Warmup Iteration   4: 2.694 ns/op
# Warmup Iteration   5: 2.689 ns/op
Iteration   1: 2.692 ns/op
                 ·gc.alloc.rate:      0.987 MB/sec
                 ·gc.alloc.rate.norm: 0.003 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.692 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.693 ns/op
                 ·gc.alloc.rate:      0.002 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.688 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.687 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 57.58% complete, ETA 00:24:34
# Fork: 2 of 3
# Warmup Iteration   1: 2.890 ns/op
# Warmup Iteration   2: 2.580 ns/op
# Warmup Iteration   3: 2.557 ns/op
# Warmup Iteration   4: 2.572 ns/op
# Warmup Iteration   5: 2.561 ns/op
Iteration   1: 2.556 ns/op
                 ·gc.alloc.rate:      0.001 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.564 ns/op
                 ·gc.alloc.rate:      1.003 MB/sec
                 ·gc.alloc.rate.norm: 0.003 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.567 ns/op
                 ·gc.alloc.rate:      0.422 MB/sec
                 ·gc.alloc.rate.norm: 0.001 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.564 ns/op
                 ·gc.alloc.rate:      0.161 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.558 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 60.61% complete, ETA 00:22:48
# Fork: 3 of 3
# Warmup Iteration   1: 2.910 ns/op
# Warmup Iteration   2: 2.492 ns/op
# Warmup Iteration   3: 2.490 ns/op
# Warmup Iteration   4: 2.505 ns/op
# Warmup Iteration   5: 2.503 ns/op
Iteration   1: 2.503 ns/op
                 ·gc.alloc.rate:      0.565 MB/sec
                 ·gc.alloc.rate.norm: 0.002 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.591 ns/op
                 ·gc.alloc.rate:      0.003 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.582 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.585 ns/op
                 ·gc.alloc.rate:      0.216 MB/sec
                 ·gc.alloc.rate.norm: 0.001 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.573 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_3":
  2.606 ±(99.9%) 0.069 ns/op [Average]
  (min, avg, max) = (2.503, 2.606, 2.693), stdev = 0.065
  CI (99.9%): [2.537, 2.675] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_3:·gc.alloc.rate":
  0.224 ±(99.9%) 0.383 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.224, 1.003), stdev = 0.358
  CI (99.9%): [≈ 0, 0.607] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_3:·gc.alloc.rate.norm":
  0.001 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (≈ 10⁻⁷, 0.001, 0.003), stdev = 0.001
  CI (99.9%): [≈ 0, 0.002] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_3:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_4
# Parameters: (value = 42)

# Run progress: 63.64% complete, ETA 00:21:03
# Fork: 1 of 3
# Warmup Iteration   1: 2.912 ns/op
# Warmup Iteration   2: 2.734 ns/op
# Warmup Iteration   3: 2.714 ns/op
# Warmup Iteration   4: 2.699 ns/op
# Warmup Iteration   5: 2.695 ns/op
Iteration   1: 2.686 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.682 ns/op
                 ·gc.alloc.rate:      0.073 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.682 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.706 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.693 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 66.67% complete, ETA 00:19:18
# Fork: 2 of 3
# Warmup Iteration   1: 2.860 ns/op
# Warmup Iteration   2: 2.504 ns/op
# Warmup Iteration   3: 2.483 ns/op
# Warmup Iteration   4: 2.478 ns/op
# Warmup Iteration   5: 2.500 ns/op
Iteration   1: 2.500 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.501 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.494 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.719 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.566 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 69.70% complete, ETA 00:17:32
# Fork: 3 of 3
# Warmup Iteration   1: 2.829 ns/op
# Warmup Iteration   2: 2.719 ns/op
# Warmup Iteration   3: 2.714 ns/op
# Warmup Iteration   4: 2.708 ns/op
# Warmup Iteration   5: 2.703 ns/op
Iteration   1: 2.550 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.475 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.487 ns/op
                 ·gc.alloc.rate:      0.101 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.699 ns/op
                 ·gc.alloc.rate:      0.415 MB/sec
                 ·gc.alloc.rate.norm: 0.001 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.487 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_4":
  2.595 ±(99.9%) 0.107 ns/op [Average]
  (min, avg, max) = (2.475, 2.595, 2.719), stdev = 0.100
  CI (99.9%): [2.488, 2.702] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_4:·gc.alloc.rate":
  0.039 ±(99.9%) 0.116 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.039, 0.415), stdev = 0.108
  CI (99.9%): [≈ 0, 0.155] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_4:·gc.alloc.rate.norm":
  ≈ 10⁻⁴ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_4:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_5
# Parameters: (value = 42)

# Run progress: 72.73% complete, ETA 00:15:47
# Fork: 1 of 3
# Warmup Iteration   1: 2.876 ns/op
# Warmup Iteration   2: 2.699 ns/op
# Warmup Iteration   3: 2.687 ns/op
# Warmup Iteration   4: 2.685 ns/op
# Warmup Iteration   5: 2.684 ns/op
Iteration   1: 2.466 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.476 ns/op
                 ·gc.alloc.rate:      0.029 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.567 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.493 ns/op
                 ·gc.alloc.rate:      0.075 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.500 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 75.76% complete, ETA 00:14:02
# Fork: 2 of 3
# Warmup Iteration   1: 2.980 ns/op
# Warmup Iteration   2: 2.744 ns/op
# Warmup Iteration   3: 2.716 ns/op
# Warmup Iteration   4: 2.706 ns/op
# Warmup Iteration   5: 2.694 ns/op
Iteration   1: 2.590 ns/op
                 ·gc.alloc.rate:      1.323 MB/sec
                 ·gc.alloc.rate.norm: 0.004 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.708 ns/op
                 ·gc.alloc.rate:      0.044 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.726 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.725 ns/op
                 ·gc.alloc.rate:      0.019 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.690 ns/op
                 ·gc.alloc.rate:      0.016 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 78.79% complete, ETA 00:12:17
# Fork: 3 of 3
# Warmup Iteration   1: 2.798 ns/op
# Warmup Iteration   2: 2.583 ns/op
# Warmup Iteration   3: 2.566 ns/op
# Warmup Iteration   4: 2.563 ns/op
# Warmup Iteration   5: 2.565 ns/op
Iteration   1: 2.567 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.564 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.561 ns/op
                 ·gc.alloc.rate:      0.035 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.564 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.561 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_5":
  2.584 ±(99.9%) 0.095 ns/op [Average]
  (min, avg, max) = (2.466, 2.584, 2.726), stdev = 0.089
  CI (99.9%): [2.489, 2.679] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_5:·gc.alloc.rate":
  0.103 ±(99.9%) 0.362 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.103, 1.323), stdev = 0.338
  CI (99.9%): [≈ 0, 0.464] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_5:·gc.alloc.rate.norm":
  ≈ 10⁻⁴ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_5:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_6
# Parameters: (value = 42)

# Run progress: 81.82% complete, ETA 00:10:31
# Fork: 1 of 3
# Warmup Iteration   1: 2.808 ns/op
# Warmup Iteration   2: 2.592 ns/op
# Warmup Iteration   3: 2.586 ns/op
# Warmup Iteration   4: 2.585 ns/op
# Warmup Iteration   5: 2.583 ns/op
Iteration   1: 2.582 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.615 ns/op
                 ·gc.alloc.rate:      0.458 MB/sec
                 ·gc.alloc.rate.norm: 0.001 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.584 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.578 ns/op
                 ·gc.alloc.rate:      0.016 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.577 ns/op
                 ·gc.alloc.rate:      0.011 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 84.85% complete, ETA 00:08:46
# Fork: 2 of 3
# Warmup Iteration   1: 2.951 ns/op
# Warmup Iteration   2: 2.732 ns/op
# Warmup Iteration   3: 2.705 ns/op
# Warmup Iteration   4: 2.556 ns/op
# Warmup Iteration   5: 2.562 ns/op
Iteration   1: 2.572 ns/op
                 ·gc.alloc.rate:      1.100 MB/sec
                 ·gc.alloc.rate.norm: 0.003 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.558 ns/op
                 ·gc.alloc.rate:      0.089 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.689 ns/op
                 ·gc.alloc.rate:      0.007 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.683 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.683 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 87.88% complete, ETA 00:07:01
# Fork: 3 of 3
# Warmup Iteration   1: 2.703 ns/op
# Warmup Iteration   2: 2.581 ns/op
# Warmup Iteration   3: 2.501 ns/op
# Warmup Iteration   4: 2.517 ns/op
# Warmup Iteration   5: 2.519 ns/op
Iteration   1: 2.521 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.522 ns/op
                 ·gc.alloc.rate:      0.424 MB/sec
                 ·gc.alloc.rate.norm: 0.001 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.528 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.592 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.593 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_6":
  2.592 ±(99.9%) 0.059 ns/op [Average]
  (min, avg, max) = (2.521, 2.592, 2.689), stdev = 0.055
  CI (99.9%): [2.533, 2.651] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_6:·gc.alloc.rate":
  0.140 ±(99.9%) 0.327 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.140, 1.100), stdev = 0.306
  CI (99.9%): [≈ 0, 0.468] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_6:·gc.alloc.rate.norm":
  ≈ 10⁻³ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_6:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_8
# Parameters: (value = 42)

# Run progress: 90.91% complete, ETA 00:05:15
# Fork: 1 of 3
# Warmup Iteration   1: 2.967 ns/op
# Warmup Iteration   2: 2.750 ns/op
# Warmup Iteration   3: 2.712 ns/op
# Warmup Iteration   4: 2.714 ns/op
# Warmup Iteration   5: 2.702 ns/op
Iteration   1: 2.706 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.704 ns/op
                 ·gc.alloc.rate:      0.021 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.679 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.680 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.679 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 93.94% complete, ETA 00:03:30
# Fork: 2 of 3
# Warmup Iteration   1: 2.836 ns/op
# Warmup Iteration   2: 2.578 ns/op
# Warmup Iteration   3: 2.564 ns/op
# Warmup Iteration   4: 2.568 ns/op
# Warmup Iteration   5: 2.572 ns/op
Iteration   1: 2.558 ns/op
                 ·gc.alloc.rate:      0.094 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.568 ns/op
                 ·gc.alloc.rate:      0.083 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.563 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.559 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.558 ns/op
                 ·gc.alloc.rate:      0.003 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 96.97% complete, ETA 00:01:45
# Fork: 3 of 3
# Warmup Iteration   1: 2.840 ns/op
# Warmup Iteration   2: 2.581 ns/op
# Warmup Iteration   3: 2.576 ns/op
# Warmup Iteration   4: 2.490 ns/op
# Warmup Iteration   5: 2.507 ns/op
Iteration   1: 2.501 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.508 ns/op
                 ·gc.alloc.rate:      0.084 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.507 ns/op
                 ·gc.alloc.rate:      0.091 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.505 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.503 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_8":
  2.585 ±(99.9%) 0.086 ns/op [Average]
  (min, avg, max) = (2.501, 2.585, 2.706), stdev = 0.081
  CI (99.9%): [2.499, 2.671] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_8:·gc.alloc.rate":
  0.025 ±(99.9%) 0.042 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.025, 0.094), stdev = 0.040
  CI (99.9%): [≈ 0, 0.068] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_8:·gc.alloc.rate.norm":
  ≈ 10⁻⁴ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_8:·gc.count":
  ≈ 0 counts


# Run complete. Total time: 00:57:55

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                                         (value)  Mode  Cnt   Score    Error   Units
ChainingLambdaBenchmark.baseline                                       42  avgt   15   2.590 ±  0.091   ns/op
ChainingLambdaBenchmark.baseline:·gc.alloc.rate                        42  avgt   15   0.162 ±  0.358  MB/sec
ChainingLambdaBenchmark.baseline:·gc.alloc.rate.norm                   42  avgt   15  ≈ 10⁻³             B/op
ChainingLambdaBenchmark.baseline:·gc.churn.G1_Eden_Space               42  avgt   15   0.254 ±  1.051  MB/sec
ChainingLambdaBenchmark.baseline:·gc.churn.G1_Eden_Space.norm          42  avgt   15   0.001 ±  0.003    B/op
ChainingLambdaBenchmark.baseline:·gc.count                             42  avgt   15   1.000           counts
ChainingLambdaBenchmark.baseline:·gc.time                              42  avgt   15   4.000               ms
ChainingLambdaBenchmark.depth_1                                        42  avgt   15   2.621 ±  0.093   ns/op
ChainingLambdaBenchmark.depth_1:·gc.alloc.rate                         42  avgt   15   0.279 ±  0.579  MB/sec
ChainingLambdaBenchmark.depth_1:·gc.alloc.rate.norm                    42  avgt   15   0.001 ±  0.002    B/op
ChainingLambdaBenchmark.depth_1:·gc.churn.G1_Eden_Space                42  avgt   15   0.495 ±  1.096  MB/sec
ChainingLambdaBenchmark.depth_1:·gc.churn.G1_Eden_Space.norm           42  avgt   15   0.001 ±  0.003    B/op
ChainingLambdaBenchmark.depth_1:·gc.churn.G1_Survivor_Space            42  avgt   15   0.002 ±  0.006  MB/sec
ChainingLambdaBenchmark.depth_1:·gc.churn.G1_Survivor_Space.norm       42  avgt   15  ≈ 10⁻⁵             B/op
ChainingLambdaBenchmark.depth_1:·gc.count                              42  avgt   15   3.000           counts
ChainingLambdaBenchmark.depth_1:·gc.time                               42  avgt   15   4.000               ms
ChainingLambdaBenchmark.depth_12                                       42  avgt   15   2.633 ±  0.088   ns/op
ChainingLambdaBenchmark.depth_12:·gc.alloc.rate                        42  avgt   15   0.160 ±  0.454  MB/sec
ChainingLambdaBenchmark.depth_12:·gc.alloc.rate.norm                   42  avgt   15  ≈ 10⁻³             B/op
ChainingLambdaBenchmark.depth_12:·gc.count                             42  avgt   15     ≈ 0           counts
ChainingLambdaBenchmark.depth_16                                       42  avgt   15   2.547 ±  0.081   ns/op
ChainingLambdaBenchmark.depth_16:·gc.alloc.rate                        42  avgt   15   0.117 ±  0.300  MB/sec
ChainingLambdaBenchmark.depth_16:·gc.alloc.rate.norm                   42  avgt   15  ≈ 10⁻³             B/op
ChainingLambdaBenchmark.depth_16:·gc.count                             42  avgt   15     ≈ 0           counts
ChainingLambdaBenchmark.depth_2                                        42  avgt   15   2.654 ±  0.076   ns/op
ChainingLambdaBenchmark.depth_2:·gc.alloc.rate                         42  avgt   15   0.221 ±  0.416  MB/sec
ChainingLambdaBenchmark.depth_2:·gc.alloc.rate.norm                    42  avgt   15   0.001 ±  0.001    B/op
ChainingLambdaBenchmark.depth_2:·gc.churn.G1_Eden_Space                42  avgt   15   0.330 ±  0.931  MB/sec
ChainingLambdaBenchmark.depth_2:·gc.churn.G1_Eden_Space.norm           42  avgt   15   0.001 ±  0.003    B/op
ChainingLambdaBenchmark.depth_2:·gc.churn.G1_Survivor_Space            42  avgt   15  ≈ 10⁻⁴           MB/sec
ChainingLambdaBenchmark.depth_2:·gc.churn.G1_Survivor_Space.norm       42  avgt   15  ≈ 10⁻⁶             B/op
ChainingLambdaBenchmark.depth_2:·gc.count                              42  avgt   15   2.000           counts
ChainingLambdaBenchmark.depth_2:·gc.time                               42  avgt   15   3.000               ms
ChainingLambdaBenchmark.depth_24                                       42  avgt   15   2.668 ±  0.058   ns/op
ChainingLambdaBenchmark.depth_24:·gc.alloc.rate                        42  avgt   15   0.014 ±  0.032  MB/sec
ChainingLambdaBenchmark.depth_24:·gc.alloc.rate.norm                   42  avgt   15  ≈ 10⁻⁴             B/op
ChainingLambdaBenchmark.depth_24:·gc.count                             42  avgt   15     ≈ 0           counts
ChainingLambdaBenchmark.depth_3                                        42  avgt   15   2.606 ±  0.069   ns/op
ChainingLambdaBenchmark.depth_3:·gc.alloc.rate                         42  avgt   15   0.224 ±  0.383  MB/sec
ChainingLambdaBenchmark.depth_3:·gc.alloc.rate.norm                    42  avgt   15   0.001 ±  0.001    B/op
ChainingLambdaBenchmark.depth_3:·gc.count                              42  avgt   15     ≈ 0           counts
ChainingLambdaBenchmark.depth_4                                        42  avgt   15   2.595 ±  0.107   ns/op
ChainingLambdaBenchmark.depth_4:·gc.alloc.rate                         42  avgt   15   0.039 ±  0.116  MB/sec
ChainingLambdaBenchmark.depth_4:·gc.alloc.rate.norm                    42  avgt   15  ≈ 10⁻⁴             B/op
ChainingLambdaBenchmark.depth_4:·gc.count                              42  avgt   15     ≈ 0           counts
ChainingLambdaBenchmark.depth_5                                        42  avgt   15   2.584 ±  0.095   ns/op
ChainingLambdaBenchmark.depth_5:·gc.alloc.rate                         42  avgt   15   0.103 ±  0.362  MB/sec
ChainingLambdaBenchmark.depth_5:·gc.alloc.rate.norm                    42  avgt   15  ≈ 10⁻⁴             B/op
ChainingLambdaBenchmark.depth_5:·gc.count                              42  avgt   15     ≈ 0           counts
ChainingLambdaBenchmark.depth_6                                        42  avgt   15   2.592 ±  0.059   ns/op
ChainingLambdaBenchmark.depth_6:·gc.alloc.rate                         42  avgt   15   0.140 ±  0.327  MB/sec
ChainingLambdaBenchmark.depth_6:·gc.alloc.rate.norm                    42  avgt   15  ≈ 10⁻³             B/op
ChainingLambdaBenchmark.depth_6:·gc.count                              42  avgt   15     ≈ 0           counts
ChainingLambdaBenchmark.depth_8                                        42  avgt   15   2.585 ±  0.086   ns/op
ChainingLambdaBenchmark.depth_8:·gc.alloc.rate                         42  avgt   15   0.025 ±  0.042  MB/sec
ChainingLambdaBenchmark.depth_8:·gc.alloc.rate.norm                    42  avgt   15  ≈ 10⁻⁴             B/op
ChainingLambdaBenchmark.depth_8:·gc.count                              42  avgt   15     ≈ 0           counts

Benchmark result is saved to results/report-openjdk-13/hotspotvm_graal_jit/ChainingLambdaBenchmark.json
Running java -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler -jar benchmarks/target/benchmarks.jar .*ChainingAnonymousClassBenchmark.* -prof gc -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_graal_jit/ChainingAnonymousClassBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.baseline
# Parameters: (value = 42)

# Run progress: 0.00% complete, ETA 00:55:00
# Fork: 1 of 3
# Warmup Iteration   1: 2.977 ns/op
# Warmup Iteration   2: 2.652 ns/op
# Warmup Iteration   3: 2.593 ns/op
# Warmup Iteration   4: 2.521 ns/op
# Warmup Iteration   5: 2.601 ns/op
Iteration   1: 2.547 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.567 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.509 ns/op
                 ·gc.alloc.rate:      0.504 MB/sec
                 ·gc.alloc.rate.norm: 0.001 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.652 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.496 ns/op
                 ·gc.alloc.rate:      0.089 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 3.03% complete, ETA 00:56:13
# Fork: 2 of 3
# Warmup Iteration   1: 2.927 ns/op
# Warmup Iteration   2: 2.506 ns/op
# Warmup Iteration   3: 2.587 ns/op
# Warmup Iteration   4: 2.589 ns/op
# Warmup Iteration   5: 2.574 ns/op
Iteration   1: 2.578 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.579 ns/op
                 ·gc.alloc.rate:      0.034 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.569 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.694 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.723 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 6.06% complete, ETA 00:54:27
# Fork: 3 of 3
# Warmup Iteration   1: 2.838 ns/op
# Warmup Iteration   2: 2.693 ns/op
# Warmup Iteration   3: 2.679 ns/op
# Warmup Iteration   4: 2.471 ns/op
# Warmup Iteration   5: 2.486 ns/op
Iteration   1: 2.691 ns/op
                 ·gc.alloc.rate:      0.066 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.477 ns/op
                 ·gc.alloc.rate:      0.003 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.476 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.730 ns/op
                 ·gc.alloc.rate:               0.507 MB/sec
                 ·gc.alloc.rate.norm:          0.002 B/op
                 ·gc.churn.G1_Eden_Space:      3.809 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 0.011 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     2.000 ms

Iteration   5: 2.688 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.baseline":
  2.599 ±(99.9%) 0.097 ns/op [Average]
  (min, avg, max) = (2.476, 2.599, 2.730), stdev = 0.091
  CI (99.9%): [2.502, 2.695] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.baseline:·gc.alloc.rate":
  0.080 ±(99.9%) 0.187 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.080, 0.507), stdev = 0.175
  CI (99.9%): [≈ 0, 0.267] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.baseline:·gc.alloc.rate.norm":
  ≈ 10⁻⁴ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.baseline:·gc.churn.G1_Eden_Space":
  0.254 ±(99.9%) 1.051 MB/sec [Average]
  (min, avg, max) = (≈ 0, 0.254, 3.809), stdev = 0.984
  CI (99.9%): [≈ 0, 1.305] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.baseline:·gc.churn.G1_Eden_Space.norm":
  0.001 ±(99.9%) 0.003 B/op [Average]
  (min, avg, max) = (≈ 0, 0.001, 0.011), stdev = 0.003
  CI (99.9%): [≈ 0, 0.004] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.baseline:·gc.count":
  1.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (≈ 0, 0.067, 1.000), stdev = 0.258
  CI (99.9%): [1.000, 1.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.baseline:·gc.time":
  2.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 0.133, 2.000), stdev = 0.516
  CI (99.9%): [2.000, 2.000] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_1
# Parameters: (value = 42)

# Run progress: 9.09% complete, ETA 00:52:41
# Fork: 1 of 3
# Warmup Iteration   1: 2.937 ns/op
# Warmup Iteration   2: 2.478 ns/op
# Warmup Iteration   3: 2.490 ns/op
# Warmup Iteration   4: 2.505 ns/op
# Warmup Iteration   5: 2.509 ns/op
Iteration   1: 2.747 ns/op
                 ·gc.alloc.rate:      0.425 MB/sec
                 ·gc.alloc.rate.norm: 0.001 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.732 ns/op
                 ·gc.alloc.rate:                   1.114 MB/sec
                 ·gc.alloc.rate.norm:              0.003 B/op
                 ·gc.churn.G1_Eden_Space:          3.047 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     0.009 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:                        1.000 counts
                 ·gc.time:                         3.000 ms

Iteration   3: 2.716 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.716 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.678 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 12.12% complete, ETA 00:50:55
# Fork: 2 of 3
# Warmup Iteration   1: 2.859 ns/op
# Warmup Iteration   2: 2.722 ns/op
# Warmup Iteration   3: 2.499 ns/op
# Warmup Iteration   4: 2.507 ns/op
# Warmup Iteration   5: 2.504 ns/op
Iteration   1: 2.514 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.520 ns/op
                 ·gc.alloc.rate:      0.002 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.520 ns/op
                 ·gc.alloc.rate:      0.035 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.729 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.596 ns/op
                 ·gc.alloc.rate:      0.022 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 15.15% complete, ETA 00:49:09
# Fork: 3 of 3
# Warmup Iteration   1: 2.790 ns/op
# Warmup Iteration   2: 2.711 ns/op
# Warmup Iteration   3: 2.724 ns/op
# Warmup Iteration   4: 2.713 ns/op
# Warmup Iteration   5: 2.561 ns/op
Iteration   1: 2.551 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.693 ns/op
                 ·gc.alloc.rate:      0.082 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.496 ns/op
                 ·gc.alloc.rate:                   1.474 MB/sec
                 ·gc.alloc.rate.norm:              0.004 B/op
                 ·gc.churn.G1_Eden_Space:          2.856 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     0.008 B/op
                 ·gc.churn.G1_Survivor_Space:      0.025 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        1.000 counts
                 ·gc.time:                         1.000 ms

Iteration   4: 2.574 ns/op
                 ·gc.alloc.rate:      0.075 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.567 ns/op
                 ·gc.alloc.rate:      0.012 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_1":
  2.623 ±(99.9%) 0.101 ns/op [Average]
  (min, avg, max) = (2.496, 2.623, 2.747), stdev = 0.094
  CI (99.9%): [2.522, 2.724] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_1:·gc.alloc.rate":
  0.216 ±(99.9%) 0.487 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.216, 1.474), stdev = 0.456
  CI (99.9%): [≈ 0, 0.704] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_1:·gc.alloc.rate.norm":
  0.001 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (≈ 10⁻⁷, 0.001, 0.004), stdev = 0.001
  CI (99.9%): [≈ 0, 0.002] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_1:·gc.churn.G1_Eden_Space":
  0.394 ±(99.9%) 1.111 MB/sec [Average]
  (min, avg, max) = (≈ 0, 0.394, 3.047), stdev = 1.039
  CI (99.9%): [≈ 0, 1.505] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_1:·gc.churn.G1_Eden_Space.norm":
  0.001 ±(99.9%) 0.003 B/op [Average]
  (min, avg, max) = (≈ 0, 0.001, 0.009), stdev = 0.003
  CI (99.9%): [≈ 0, 0.004] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_1:·gc.churn.G1_Survivor_Space":
  0.002 ±(99.9%) 0.007 MB/sec [Average]
  (min, avg, max) = (≈ 0, 0.002, 0.025), stdev = 0.007
  CI (99.9%): [≈ 0, 0.009] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_1:·gc.churn.G1_Survivor_Space.norm":
  ≈ 10⁻⁵ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_1:·gc.count":
  2.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (≈ 0, 0.133, 1.000), stdev = 0.352
  CI (99.9%): [2.000, 2.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_1:·gc.time":
  4.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 0.267, 3.000), stdev = 0.799
  CI (99.9%): [4.000, 4.000] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_12
# Parameters: (value = 42)

# Run progress: 18.18% complete, ETA 00:47:23
# Fork: 1 of 3
# Warmup Iteration   1: 2.967 ns/op
# Warmup Iteration   2: 2.604 ns/op
# Warmup Iteration   3: 2.596 ns/op
# Warmup Iteration   4: 2.601 ns/op
# Warmup Iteration   5: 2.593 ns/op
Iteration   1: 2.730 ns/op
                 ·gc.alloc.rate:      1.248 MB/sec
                 ·gc.alloc.rate.norm: 0.004 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.580 ns/op
                 ·gc.alloc.rate:      0.917 MB/sec
                 ·gc.alloc.rate.norm: 0.003 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.590 ns/op
                 ·gc.alloc.rate:      0.003 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.595 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.718 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 21.21% complete, ETA 00:45:38
# Fork: 2 of 3
# Warmup Iteration   1: 2.773 ns/op
# Warmup Iteration   2: 2.739 ns/op
# Warmup Iteration   3: 2.564 ns/op
# Warmup Iteration   4: 2.567 ns/op
# Warmup Iteration   5: 2.574 ns/op
Iteration   1: 2.575 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.574 ns/op
                 ·gc.alloc.rate:      0.092 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.712 ns/op
                 ·gc.alloc.rate:      0.015 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.718 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.684 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 24.24% complete, ETA 00:43:53
# Fork: 3 of 3
# Warmup Iteration   1: 2.789 ns/op
# Warmup Iteration   2: 2.501 ns/op
# Warmup Iteration   3: 2.573 ns/op
# Warmup Iteration   4: 2.701 ns/op
# Warmup Iteration   5: 2.691 ns/op
Iteration   1: 2.686 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.679 ns/op
                 ·gc.alloc.rate:      1.230 MB/sec
                 ·gc.alloc.rate.norm: 0.004 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.468 ns/op
                 ·gc.alloc.rate:      0.001 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.695 ns/op
                 ·gc.alloc.rate:      0.481 MB/sec
                 ·gc.alloc.rate.norm: 0.001 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.683 ns/op
                 ·gc.alloc.rate:      0.018 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_12":
  2.646 ±(99.9%) 0.082 ns/op [Average]
  (min, avg, max) = (2.468, 2.646, 2.730), stdev = 0.076
  CI (99.9%): [2.564, 2.727] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_12:·gc.alloc.rate":
  0.267 ±(99.9%) 0.502 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.267, 1.248), stdev = 0.469
  CI (99.9%): [≈ 0, 0.769] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_12:·gc.alloc.rate.norm":
  0.001 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (≈ 10⁻⁷, 0.001, 0.004), stdev = 0.001
  CI (99.9%): [≈ 0, 0.002] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_12:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_16
# Parameters: (value = 42)

# Run progress: 27.27% complete, ETA 00:42:07
# Fork: 1 of 3
# Warmup Iteration   1: 2.795 ns/op
# Warmup Iteration   2: 2.487 ns/op
# Warmup Iteration   3: 2.717 ns/op
# Warmup Iteration   4: 2.704 ns/op
# Warmup Iteration   5: 2.689 ns/op
Iteration   1: 2.693 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.681 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.678 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.682 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.471 ns/op
                 ·gc.alloc.rate:      0.023 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 30.30% complete, ETA 00:40:22
# Fork: 2 of 3
# Warmup Iteration   1: 2.769 ns/op
# Warmup Iteration   2: 2.709 ns/op
# Warmup Iteration   3: 2.689 ns/op
# Warmup Iteration   4: 2.689 ns/op
# Warmup Iteration   5: 2.479 ns/op
Iteration   1: 2.554 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.550 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.558 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.722 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.684 ns/op
                 ·gc.alloc.rate:      0.020 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 33.33% complete, ETA 00:38:37
# Fork: 3 of 3
# Warmup Iteration   1: 2.808 ns/op
# Warmup Iteration   2: 2.684 ns/op
# Warmup Iteration   3: 2.687 ns/op
# Warmup Iteration   4: 2.675 ns/op
# Warmup Iteration   5: 2.674 ns/op
Iteration   1: 2.467 ns/op
                 ·gc.alloc.rate:      0.036 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.698 ns/op
                 ·gc.alloc.rate:      0.518 MB/sec
                 ·gc.alloc.rate.norm: 0.002 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.480 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.484 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.708 ns/op
                 ·gc.alloc.rate:      0.268 MB/sec
                 ·gc.alloc.rate.norm: 0.001 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_16":
  2.607 ±(99.9%) 0.106 ns/op [Average]
  (min, avg, max) = (2.467, 2.607, 2.722), stdev = 0.100
  CI (99.9%): [2.501, 2.714] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_16:·gc.alloc.rate":
  0.058 ±(99.9%) 0.154 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.058, 0.518), stdev = 0.144
  CI (99.9%): [≈ 0, 0.212] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_16:·gc.alloc.rate.norm":
  ≈ 10⁻⁴ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_16:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_2
# Parameters: (value = 42)

# Run progress: 36.36% complete, ETA 00:36:51
# Fork: 1 of 3
# Warmup Iteration   1: 2.763 ns/op
# Warmup Iteration   2: 2.503 ns/op
# Warmup Iteration   3: 2.522 ns/op
# Warmup Iteration   4: 2.492 ns/op
# Warmup Iteration   5: 2.731 ns/op
Iteration   1: 2.721 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.679 ns/op
                 ·gc.alloc.rate:      0.018 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.486 ns/op
                 ·gc.alloc.rate:      0.493 MB/sec
                 ·gc.alloc.rate.norm: 0.001 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.475 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.726 ns/op
                 ·gc.alloc.rate:      0.038 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 39.39% complete, ETA 00:35:06
# Fork: 2 of 3
# Warmup Iteration   1: 2.913 ns/op
# Warmup Iteration   2: 2.729 ns/op
# Warmup Iteration   3: 2.718 ns/op
# Warmup Iteration   4: 2.542 ns/op
# Warmup Iteration   5: 2.557 ns/op
Iteration   1: 2.686 ns/op
                 ·gc.alloc.rate:      1.109 MB/sec
                 ·gc.alloc.rate.norm: 0.003 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.686 ns/op
                 ·gc.alloc.rate:               1.337 MB/sec
                 ·gc.alloc.rate.norm:          0.004 B/op
                 ·gc.churn.G1_Eden_Space:      2.666 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 0.008 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     2.000 ms

Iteration   3: 2.663 ns/op
                 ·gc.alloc.rate:      0.007 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.667 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.468 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 42.42% complete, ETA 00:33:21
# Fork: 3 of 3
# Warmup Iteration   1: 2.913 ns/op
# Warmup Iteration   2: 2.731 ns/op
# Warmup Iteration   3: 2.714 ns/op
# Warmup Iteration   4: 2.475 ns/op
# Warmup Iteration   5: 2.479 ns/op
Iteration   1: 2.491 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.747 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.726 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.681 ns/op
                 ·gc.alloc.rate:      0.009 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.466 ns/op
                 ·gc.alloc.rate:      0.115 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_2":
  2.624 ±(99.9%) 0.118 ns/op [Average]
  (min, avg, max) = (2.466, 2.624, 2.747), stdev = 0.110
  CI (99.9%): [2.506, 2.743] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_2:·gc.alloc.rate":
  0.209 ±(99.9%) 0.463 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.209, 1.337), stdev = 0.433
  CI (99.9%): [≈ 0, 0.671] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_2:·gc.alloc.rate.norm":
  0.001 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (≈ 10⁻⁷, 0.001, 0.004), stdev = 0.001
  CI (99.9%): [≈ 0, 0.002] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_2:·gc.churn.G1_Eden_Space":
  0.178 ±(99.9%) 0.736 MB/sec [Average]
  (min, avg, max) = (≈ 0, 0.178, 2.666), stdev = 0.688
  CI (99.9%): [≈ 0, 0.914] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_2:·gc.churn.G1_Eden_Space.norm":
  0.001 ±(99.9%) 0.002 B/op [Average]
  (min, avg, max) = (≈ 0, 0.001, 0.008), stdev = 0.002
  CI (99.9%): [≈ 0, 0.003] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_2:·gc.count":
  1.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (≈ 0, 0.067, 1.000), stdev = 0.258
  CI (99.9%): [1.000, 1.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_2:·gc.time":
  2.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 0.133, 2.000), stdev = 0.516
  CI (99.9%): [2.000, 2.000] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_24
# Parameters: (value = 42)

# Run progress: 45.45% complete, ETA 00:31:35
# Fork: 1 of 3
# Warmup Iteration   1: 2.885 ns/op
# Warmup Iteration   2: 2.601 ns/op
# Warmup Iteration   3: 2.568 ns/op
# Warmup Iteration   4: 2.569 ns/op
# Warmup Iteration   5: 2.571 ns/op
Iteration   1: 2.569 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.578 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.577 ns/op
                 ·gc.alloc.rate:      0.007 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.567 ns/op
                 ·gc.alloc.rate:      0.005 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.566 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 48.48% complete, ETA 00:29:50
# Fork: 2 of 3
# Warmup Iteration   1: 2.725 ns/op
# Warmup Iteration   2: 2.644 ns/op
# Warmup Iteration   3: 2.589 ns/op
# Warmup Iteration   4: 2.577 ns/op
# Warmup Iteration   5: 2.692 ns/op
Iteration   1: 2.691 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.687 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.474 ns/op
                 ·gc.alloc.rate:      0.054 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.495 ns/op
                 ·gc.alloc.rate:      0.056 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.745 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 51.52% complete, ETA 00:28:05
# Fork: 3 of 3
# Warmup Iteration   1: 2.966 ns/op
# Warmup Iteration   2: 2.751 ns/op
# Warmup Iteration   3: 2.719 ns/op
# Warmup Iteration   4: 2.709 ns/op
# Warmup Iteration   5: 2.715 ns/op
Iteration   1: 2.710 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.571 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.556 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.475 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.477 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_24":
  2.583 ±(99.9%) 0.094 ns/op [Average]
  (min, avg, max) = (2.474, 2.583, 2.745), stdev = 0.088
  CI (99.9%): [2.488, 2.677] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_24:·gc.alloc.rate":
  0.008 ±(99.9%) 0.020 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.008, 0.056), stdev = 0.019
  CI (99.9%): [≈ 0, 0.029] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_24:·gc.alloc.rate.norm":
  ≈ 10⁻⁵ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_24:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_3
# Parameters: (value = 42)

# Run progress: 54.55% complete, ETA 00:26:19
# Fork: 1 of 3
# Warmup Iteration   1: 2.942 ns/op
# Warmup Iteration   2: 2.741 ns/op
# Warmup Iteration   3: 2.704 ns/op
# Warmup Iteration   4: 2.699 ns/op
# Warmup Iteration   5: 2.695 ns/op
Iteration   1: 2.694 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.469 ns/op
                 ·gc.alloc.rate:      0.640 MB/sec
                 ·gc.alloc.rate.norm: 0.002 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.475 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.486 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.499 ns/op
                 ·gc.alloc.rate:      0.955 MB/sec
                 ·gc.alloc.rate.norm: 0.003 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 57.58% complete, ETA 00:24:34
# Fork: 2 of 3
# Warmup Iteration   1: 2.878 ns/op
# Warmup Iteration   2: 2.748 ns/op
# Warmup Iteration   3: 2.714 ns/op
# Warmup Iteration   4: 2.690 ns/op
# Warmup Iteration   5: 2.682 ns/op
Iteration   1: 2.708 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.701 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.468 ns/op
                 ·gc.alloc.rate:      0.483 MB/sec
                 ·gc.alloc.rate.norm: 0.001 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.715 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.468 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 60.61% complete, ETA 00:22:49
# Fork: 3 of 3
# Warmup Iteration   1: 2.767 ns/op
# Warmup Iteration   2: 2.585 ns/op
# Warmup Iteration   3: 2.566 ns/op
# Warmup Iteration   4: 2.571 ns/op
# Warmup Iteration   5: 2.567 ns/op
Iteration   1: 2.561 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.558 ns/op
                 ·gc.alloc.rate:      0.007 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.567 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.567 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.574 ns/op
                 ·gc.alloc.rate:      0.012 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_3":
  2.567 ±(99.9%) 0.101 ns/op [Average]
  (min, avg, max) = (2.468, 2.567, 2.715), stdev = 0.094
  CI (99.9%): [2.466, 2.668] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_3:·gc.alloc.rate":
  0.140 ±(99.9%) 0.321 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.140, 0.955), stdev = 0.300
  CI (99.9%): [≈ 0, 0.461] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_3:·gc.alloc.rate.norm":
  ≈ 10⁻³ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_3:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_4
# Parameters: (value = 42)

# Run progress: 63.64% complete, ETA 00:21:03
# Fork: 1 of 3
# Warmup Iteration   1: 2.783 ns/op
# Warmup Iteration   2: 2.591 ns/op
# Warmup Iteration   3: 2.580 ns/op
# Warmup Iteration   4: 2.498 ns/op
# Warmup Iteration   5: 2.492 ns/op
Iteration   1: 2.742 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.723 ns/op
                 ·gc.alloc.rate:      0.006 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.711 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.708 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.681 ns/op
                 ·gc.alloc.rate:      0.012 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 66.67% complete, ETA 00:19:18
# Fork: 2 of 3
# Warmup Iteration   1: 2.894 ns/op
# Warmup Iteration   2: 2.489 ns/op
# Warmup Iteration   3: 2.481 ns/op
# Warmup Iteration   4: 2.748 ns/op
# Warmup Iteration   5: 2.728 ns/op
Iteration   1: 2.722 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.720 ns/op
                 ·gc.alloc.rate:      0.029 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.717 ns/op
                 ·gc.alloc.rate:      0.178 MB/sec
                 ·gc.alloc.rate.norm: 0.001 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.698 ns/op
                 ·gc.alloc.rate:      0.035 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.701 ns/op
                 ·gc.alloc.rate:      0.017 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 69.70% complete, ETA 00:17:33
# Fork: 3 of 3
# Warmup Iteration   1: 2.976 ns/op
# Warmup Iteration   2: 2.693 ns/op
# Warmup Iteration   3: 2.674 ns/op
# Warmup Iteration   4: 2.672 ns/op
# Warmup Iteration   5: 2.676 ns/op
Iteration   1: 2.676 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.670 ns/op
                 ·gc.alloc.rate:      0.035 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.671 ns/op
                 ·gc.alloc.rate:      0.001 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.673 ns/op
                 ·gc.alloc.rate:      0.001 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.693 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_4":
  2.700 ±(99.9%) 0.024 ns/op [Average]
  (min, avg, max) = (2.670, 2.700, 2.742), stdev = 0.022
  CI (99.9%): [2.676, 2.725] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_4:·gc.alloc.rate":
  0.021 ±(99.9%) 0.049 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.021, 0.178), stdev = 0.045
  CI (99.9%): [≈ 0, 0.069] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_4:·gc.alloc.rate.norm":
  ≈ 10⁻⁴ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_4:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_5
# Parameters: (value = 42)

# Run progress: 72.73% complete, ETA 00:15:47
# Fork: 1 of 3
# Warmup Iteration   1: 2.900 ns/op
# Warmup Iteration   2: 2.692 ns/op
# Warmup Iteration   3: 2.673 ns/op
# Warmup Iteration   4: 2.661 ns/op
# Warmup Iteration   5: 2.662 ns/op
Iteration   1: 2.665 ns/op
                 ·gc.alloc.rate:      1.759 MB/sec
                 ·gc.alloc.rate.norm: 0.005 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.540 ns/op
                 ·gc.alloc.rate:      0.095 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.557 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.559 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.557 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 75.76% complete, ETA 00:14:02
# Fork: 2 of 3
# Warmup Iteration   1: 2.676 ns/op
# Warmup Iteration   2: 2.501 ns/op
# Warmup Iteration   3: 2.482 ns/op
# Warmup Iteration   4: 2.739 ns/op
# Warmup Iteration   5: 2.683 ns/op
Iteration   1: 2.717 ns/op
                 ·gc.alloc.rate:      1.102 MB/sec
                 ·gc.alloc.rate.norm: 0.003 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.712 ns/op
                 ·gc.alloc.rate:      1.276 MB/sec
                 ·gc.alloc.rate.norm: 0.004 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.698 ns/op
                 ·gc.alloc.rate:      0.006 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.696 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.699 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 78.79% complete, ETA 00:12:17
# Fork: 3 of 3
# Warmup Iteration   1: 2.887 ns/op
# Warmup Iteration   2: 2.499 ns/op
# Warmup Iteration   3: 2.551 ns/op
# Warmup Iteration   4: 2.566 ns/op
# Warmup Iteration   5: 2.563 ns/op
Iteration   1: 2.565 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.579 ns/op
                 ·gc.alloc.rate:      2.075 MB/sec
                 ·gc.alloc.rate.norm: 0.006 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.693 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.676 ns/op
                 ·gc.alloc.rate:      0.008 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.671 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_5":
  2.639 ±(99.9%) 0.074 ns/op [Average]
  (min, avg, max) = (2.540, 2.639, 2.717), stdev = 0.069
  CI (99.9%): [2.565, 2.712] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_5:·gc.alloc.rate":
  0.421 ±(99.9%) 0.787 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.421, 2.075), stdev = 0.736
  CI (99.9%): [≈ 0, 1.208] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_5:·gc.alloc.rate.norm":
  0.001 ±(99.9%) 0.002 B/op [Average]
  (min, avg, max) = (≈ 10⁻⁷, 0.001, 0.006), stdev = 0.002
  CI (99.9%): [≈ 0, 0.004] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_5:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_6
# Parameters: (value = 42)

# Run progress: 81.82% complete, ETA 00:10:31
# Fork: 1 of 3
# Warmup Iteration   1: 2.727 ns/op
# Warmup Iteration   2: 2.738 ns/op
# Warmup Iteration   3: 2.763 ns/op
# Warmup Iteration   4: 2.762 ns/op
# Warmup Iteration   5: 2.626 ns/op
Iteration   1: 2.603 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.538 ns/op
                 ·gc.alloc.rate:      0.504 MB/sec
                 ·gc.alloc.rate.norm: 0.001 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.531 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.751 ns/op
                 ·gc.alloc.rate:      0.310 MB/sec
                 ·gc.alloc.rate.norm: 0.001 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.767 ns/op
                 ·gc.alloc.rate:      1.034 MB/sec
                 ·gc.alloc.rate.norm: 0.003 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 84.85% complete, ETA 00:08:46
# Fork: 2 of 3
# Warmup Iteration   1: 2.889 ns/op
# Warmup Iteration   2: 2.704 ns/op
# Warmup Iteration   3: 2.681 ns/op
# Warmup Iteration   4: 2.679 ns/op
# Warmup Iteration   5: 2.675 ns/op
Iteration   1: 2.675 ns/op
                 ·gc.alloc.rate:      0.074 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.673 ns/op
                 ·gc.alloc.rate:      0.023 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.468 ns/op
                 ·gc.alloc.rate:      0.004 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.472 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.489 ns/op
                 ·gc.alloc.rate:      0.008 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 87.88% complete, ETA 00:07:01
# Fork: 3 of 3
# Warmup Iteration   1: 2.908 ns/op
# Warmup Iteration   2: 2.727 ns/op
# Warmup Iteration   3: 2.707 ns/op
# Warmup Iteration   4: 2.691 ns/op
# Warmup Iteration   5: 2.695 ns/op
Iteration   1: 2.463 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.488 ns/op
                 ·gc.alloc.rate:      1.064 MB/sec
                 ·gc.alloc.rate.norm: 0.003 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.482 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.489 ns/op
                 ·gc.alloc.rate:      0.008 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.487 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_6":
  2.558 ±(99.9%) 0.114 ns/op [Average]
  (min, avg, max) = (2.463, 2.558, 2.767), stdev = 0.107
  CI (99.9%): [2.444, 2.673] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_6:·gc.alloc.rate":
  0.202 ±(99.9%) 0.398 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.202, 1.064), stdev = 0.373
  CI (99.9%): [≈ 0, 0.600] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_6:·gc.alloc.rate.norm":
  0.001 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (≈ 10⁻⁷, 0.001, 0.003), stdev = 0.001
  CI (99.9%): [≈ 0, 0.002] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_6:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_8
# Parameters: (value = 42)

# Run progress: 90.91% complete, ETA 00:05:15
# Fork: 1 of 3
# Warmup Iteration   1: 2.763 ns/op
# Warmup Iteration   2: 2.528 ns/op
# Warmup Iteration   3: 2.515 ns/op
# Warmup Iteration   4: 2.514 ns/op
# Warmup Iteration   5: 2.515 ns/op
Iteration   1: 2.532 ns/op
                 ·gc.alloc.rate:      1.435 MB/sec
                 ·gc.alloc.rate.norm: 0.004 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.513 ns/op
                 ·gc.alloc.rate:      0.002 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.600 ns/op
                 ·gc.alloc.rate:      0.001 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.591 ns/op
                 ·gc.alloc.rate:      0.020 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.701 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 93.94% complete, ETA 00:03:30
# Fork: 2 of 3
# Warmup Iteration   1: 2.939 ns/op
# Warmup Iteration   2: 2.493 ns/op
# Warmup Iteration   3: 2.495 ns/op
# Warmup Iteration   4: 2.745 ns/op
# Warmup Iteration   5: 2.688 ns/op
Iteration   1: 2.681 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.695 ns/op
                 ·gc.alloc.rate:      0.853 MB/sec
                 ·gc.alloc.rate.norm: 0.003 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.696 ns/op
                 ·gc.alloc.rate:      0.026 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.469 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.486 ns/op
                 ·gc.alloc.rate:      0.008 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 96.97% complete, ETA 00:01:45
# Fork: 3 of 3
# Warmup Iteration   1: 2.727 ns/op
# Warmup Iteration   2: 2.754 ns/op
# Warmup Iteration   3: 2.726 ns/op
# Warmup Iteration   4: 2.705 ns/op
# Warmup Iteration   5: 2.702 ns/op
Iteration   1: 2.719 ns/op
                 ·gc.alloc.rate:      1.288 MB/sec
                 ·gc.alloc.rate.norm: 0.004 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.554 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.565 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.702 ns/op
                 ·gc.alloc.rate:      0.019 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.677 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_8":
  2.612 ±(99.9%) 0.094 ns/op [Average]
  (min, avg, max) = (2.469, 2.612, 2.719), stdev = 0.088
  CI (99.9%): [2.518, 2.707] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_8:·gc.alloc.rate":
  0.243 ±(99.9%) 0.539 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.243, 1.435), stdev = 0.504
  CI (99.9%): [≈ 0, 0.783] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_8:·gc.alloc.rate.norm":
  0.001 ±(99.9%) 0.002 B/op [Average]
  (min, avg, max) = (≈ 10⁻⁷, 0.001, 0.004), stdev = 0.001
  CI (99.9%): [≈ 0, 0.002] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_8:·gc.count":
  ≈ 0 counts


# Run complete. Total time: 00:57:55

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                                                 (value)  Mode  Cnt   Score    Error   Units
ChainingAnonymousClassBenchmark.baseline                                       42  avgt   15   2.599 ±  0.097   ns/op
ChainingAnonymousClassBenchmark.baseline:·gc.alloc.rate                        42  avgt   15   0.080 ±  0.187  MB/sec
ChainingAnonymousClassBenchmark.baseline:·gc.alloc.rate.norm                   42  avgt   15  ≈ 10⁻⁴             B/op
ChainingAnonymousClassBenchmark.baseline:·gc.churn.G1_Eden_Space               42  avgt   15   0.254 ±  1.051  MB/sec
ChainingAnonymousClassBenchmark.baseline:·gc.churn.G1_Eden_Space.norm          42  avgt   15   0.001 ±  0.003    B/op
ChainingAnonymousClassBenchmark.baseline:·gc.count                             42  avgt   15   1.000           counts
ChainingAnonymousClassBenchmark.baseline:·gc.time                              42  avgt   15   2.000               ms
ChainingAnonymousClassBenchmark.depth_1                                        42  avgt   15   2.623 ±  0.101   ns/op
ChainingAnonymousClassBenchmark.depth_1:·gc.alloc.rate                         42  avgt   15   0.216 ±  0.487  MB/sec
ChainingAnonymousClassBenchmark.depth_1:·gc.alloc.rate.norm                    42  avgt   15   0.001 ±  0.001    B/op
ChainingAnonymousClassBenchmark.depth_1:·gc.churn.G1_Eden_Space                42  avgt   15   0.394 ±  1.111  MB/sec
ChainingAnonymousClassBenchmark.depth_1:·gc.churn.G1_Eden_Space.norm           42  avgt   15   0.001 ±  0.003    B/op
ChainingAnonymousClassBenchmark.depth_1:·gc.churn.G1_Survivor_Space            42  avgt   15   0.002 ±  0.007  MB/sec
ChainingAnonymousClassBenchmark.depth_1:·gc.churn.G1_Survivor_Space.norm       42  avgt   15  ≈ 10⁻⁵             B/op
ChainingAnonymousClassBenchmark.depth_1:·gc.count                              42  avgt   15   2.000           counts
ChainingAnonymousClassBenchmark.depth_1:·gc.time                               42  avgt   15   4.000               ms
ChainingAnonymousClassBenchmark.depth_12                                       42  avgt   15   2.646 ±  0.082   ns/op
ChainingAnonymousClassBenchmark.depth_12:·gc.alloc.rate                        42  avgt   15   0.267 ±  0.502  MB/sec
ChainingAnonymousClassBenchmark.depth_12:·gc.alloc.rate.norm                   42  avgt   15   0.001 ±  0.001    B/op
ChainingAnonymousClassBenchmark.depth_12:·gc.count                             42  avgt   15     ≈ 0           counts
ChainingAnonymousClassBenchmark.depth_16                                       42  avgt   15   2.607 ±  0.106   ns/op
ChainingAnonymousClassBenchmark.depth_16:·gc.alloc.rate                        42  avgt   15   0.058 ±  0.154  MB/sec
ChainingAnonymousClassBenchmark.depth_16:·gc.alloc.rate.norm                   42  avgt   15  ≈ 10⁻⁴             B/op
ChainingAnonymousClassBenchmark.depth_16:·gc.count                             42  avgt   15     ≈ 0           counts
ChainingAnonymousClassBenchmark.depth_2                                        42  avgt   15   2.624 ±  0.118   ns/op
ChainingAnonymousClassBenchmark.depth_2:·gc.alloc.rate                         42  avgt   15   0.209 ±  0.463  MB/sec
ChainingAnonymousClassBenchmark.depth_2:·gc.alloc.rate.norm                    42  avgt   15   0.001 ±  0.001    B/op
ChainingAnonymousClassBenchmark.depth_2:·gc.churn.G1_Eden_Space                42  avgt   15   0.178 ±  0.736  MB/sec
ChainingAnonymousClassBenchmark.depth_2:·gc.churn.G1_Eden_Space.norm           42  avgt   15   0.001 ±  0.002    B/op
ChainingAnonymousClassBenchmark.depth_2:·gc.count                              42  avgt   15   1.000           counts
ChainingAnonymousClassBenchmark.depth_2:·gc.time                               42  avgt   15   2.000               ms
ChainingAnonymousClassBenchmark.depth_24                                       42  avgt   15   2.583 ±  0.094   ns/op
ChainingAnonymousClassBenchmark.depth_24:·gc.alloc.rate                        42  avgt   15   0.008 ±  0.020  MB/sec
ChainingAnonymousClassBenchmark.depth_24:·gc.alloc.rate.norm                   42  avgt   15  ≈ 10⁻⁵             B/op
ChainingAnonymousClassBenchmark.depth_24:·gc.count                             42  avgt   15     ≈ 0           counts
ChainingAnonymousClassBenchmark.depth_3                                        42  avgt   15   2.567 ±  0.101   ns/op
ChainingAnonymousClassBenchmark.depth_3:·gc.alloc.rate                         42  avgt   15   0.140 ±  0.321  MB/sec
ChainingAnonymousClassBenchmark.depth_3:·gc.alloc.rate.norm                    42  avgt   15  ≈ 10⁻³             B/op
ChainingAnonymousClassBenchmark.depth_3:·gc.count                              42  avgt   15     ≈ 0           counts
ChainingAnonymousClassBenchmark.depth_4                                        42  avgt   15   2.700 ±  0.024   ns/op
ChainingAnonymousClassBenchmark.depth_4:·gc.alloc.rate                         42  avgt   15   0.021 ±  0.049  MB/sec
ChainingAnonymousClassBenchmark.depth_4:·gc.alloc.rate.norm                    42  avgt   15  ≈ 10⁻⁴             B/op
ChainingAnonymousClassBenchmark.depth_4:·gc.count                              42  avgt   15     ≈ 0           counts
ChainingAnonymousClassBenchmark.depth_5                                        42  avgt   15   2.639 ±  0.074   ns/op
ChainingAnonymousClassBenchmark.depth_5:·gc.alloc.rate                         42  avgt   15   0.421 ±  0.787  MB/sec
ChainingAnonymousClassBenchmark.depth_5:·gc.alloc.rate.norm                    42  avgt   15   0.001 ±  0.002    B/op
ChainingAnonymousClassBenchmark.depth_5:·gc.count                              42  avgt   15     ≈ 0           counts
ChainingAnonymousClassBenchmark.depth_6                                        42  avgt   15   2.558 ±  0.114   ns/op
ChainingAnonymousClassBenchmark.depth_6:·gc.alloc.rate                         42  avgt   15   0.202 ±  0.398  MB/sec
ChainingAnonymousClassBenchmark.depth_6:·gc.alloc.rate.norm                    42  avgt   15   0.001 ±  0.001    B/op
ChainingAnonymousClassBenchmark.depth_6:·gc.count                              42  avgt   15     ≈ 0           counts
ChainingAnonymousClassBenchmark.depth_8                                        42  avgt   15   2.612 ±  0.094   ns/op
ChainingAnonymousClassBenchmark.depth_8:·gc.alloc.rate                         42  avgt   15   0.243 ±  0.539  MB/sec
ChainingAnonymousClassBenchmark.depth_8:·gc.alloc.rate.norm                    42  avgt   15   0.001 ±  0.002    B/op
ChainingAnonymousClassBenchmark.depth_8:·gc.count                              42  avgt   15     ≈ 0           counts

Benchmark result is saved to results/report-openjdk-13/hotspotvm_graal_jit/ChainingAnonymousClassBenchmark.json
Running java -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler -jar benchmarks/target/benchmarks.jar .*ChainingMethodRefBoundedBenchmark.* -prof gc -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_graal_jit/ChainingMethodRefBoundedBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.baseline
# Parameters: (value = 42)

# Run progress: 0.00% complete, ETA 00:55:00
# Fork: 1 of 3
# Warmup Iteration   1: 2.866 ns/op
# Warmup Iteration   2: 2.723 ns/op
# Warmup Iteration   3: 2.585 ns/op
# Warmup Iteration   4: 2.728 ns/op
# Warmup Iteration   5: 2.715 ns/op
Iteration   1: 2.727 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.476 ns/op
                 ·gc.alloc.rate:      0.664 MB/sec
                 ·gc.alloc.rate.norm: 0.002 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.593 ns/op
                 ·gc.alloc.rate:      0.006 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.592 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.585 ns/op
                 ·gc.alloc.rate:      0.169 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 3.03% complete, ETA 00:56:12
# Fork: 2 of 3
# Warmup Iteration   1: 2.817 ns/op
# Warmup Iteration   2: 2.566 ns/op
# Warmup Iteration   3: 2.579 ns/op
# Warmup Iteration   4: 2.569 ns/op
# Warmup Iteration   5: 2.486 ns/op
Iteration   1: 2.590 ns/op
                 ·gc.alloc.rate:               1.371 MB/sec
                 ·gc.alloc.rate.norm:          0.004 B/op
                 ·gc.churn.G1_Eden_Space:      1.904 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 0.005 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     2.000 ms

Iteration   2: 2.740 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.727 ns/op
                 ·gc.alloc.rate:      0.008 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.712 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.712 ns/op
                 ·gc.alloc.rate:               1.137 MB/sec
                 ·gc.alloc.rate.norm:          0.003 B/op
                 ·gc.churn.G1_Eden_Space:      1.904 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 0.006 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     4.000 ms


# Run progress: 6.06% complete, ETA 00:54:25
# Fork: 3 of 3
# Warmup Iteration   1: 2.845 ns/op
# Warmup Iteration   2: 2.565 ns/op
# Warmup Iteration   3: 2.568 ns/op
# Warmup Iteration   4: 2.719 ns/op
# Warmup Iteration   5: 2.479 ns/op
Iteration   1: 2.491 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.693 ns/op
                 ·gc.alloc.rate:      0.006 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.677 ns/op
                 ·gc.alloc.rate:      0.010 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.569 ns/op
                 ·gc.alloc.rate:                   0.677 MB/sec
                 ·gc.alloc.rate.norm:              0.002 B/op
                 ·gc.churn.G1_Eden_Space:          3.809 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     0.011 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:                        1.000 counts
                 ·gc.time:                         2.000 ms

Iteration   5: 2.727 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.baseline":
  2.641 ±(99.9%) 0.095 ns/op [Average]
  (min, avg, max) = (2.476, 2.641, 2.740), stdev = 0.089
  CI (99.9%): [2.545, 2.736] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.baseline:·gc.alloc.rate":
  0.270 ±(99.9%) 0.496 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.270, 1.371), stdev = 0.464
  CI (99.9%): [≈ 0, 0.765] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.baseline:·gc.alloc.rate.norm":
  0.001 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (≈ 10⁻⁷, 0.001, 0.004), stdev = 0.001
  CI (99.9%): [≈ 0, 0.002] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.baseline:·gc.churn.G1_Eden_Space":
  0.508 ±(99.9%) 1.209 MB/sec [Average]
  (min, avg, max) = (≈ 0, 0.508, 3.809), stdev = 1.130
  CI (99.9%): [≈ 0, 1.716] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.baseline:·gc.churn.G1_Eden_Space.norm":
  0.001 ±(99.9%) 0.003 B/op [Average]
  (min, avg, max) = (≈ 0, 0.001, 0.011), stdev = 0.003
  CI (99.9%): [≈ 0, 0.005] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.baseline:·gc.churn.G1_Survivor_Space":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.baseline:·gc.churn.G1_Survivor_Space.norm":
  ≈ 10⁻⁶ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.baseline:·gc.count":
  3.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (≈ 0, 0.200, 1.000), stdev = 0.414
  CI (99.9%): [3.000, 3.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.baseline:·gc.time":
  8.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 0.533, 4.000), stdev = 1.187
  CI (99.9%): [8.000, 8.000] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_1
# Parameters: (value = 42)

# Run progress: 9.09% complete, ETA 00:52:39
# Fork: 1 of 3
# Warmup Iteration   1: 2.925 ns/op
# Warmup Iteration   2: 2.723 ns/op
# Warmup Iteration   3: 2.700 ns/op
# Warmup Iteration   4: 2.692 ns/op
# Warmup Iteration   5: 2.686 ns/op
Iteration   1: 2.667 ns/op
                 ·gc.alloc.rate:      0.121 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.707 ns/op
                 ·gc.alloc.rate:               0.949 MB/sec
                 ·gc.alloc.rate.norm:          0.003 B/op
                 ·gc.churn.G1_Eden_Space:      2.476 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 0.007 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     2.000 ms

Iteration   3: 2.700 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.664 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.667 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 12.12% complete, ETA 00:50:54
# Fork: 2 of 3
# Warmup Iteration   1: 2.689 ns/op
# Warmup Iteration   2: 2.546 ns/op
# Warmup Iteration   3: 2.714 ns/op
# Warmup Iteration   4: 2.505 ns/op
# Warmup Iteration   5: 2.572 ns/op
Iteration   1: 2.580 ns/op
                 ·gc.alloc.rate:      1.476 MB/sec
                 ·gc.alloc.rate.norm: 0.004 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.498 ns/op
                 ·gc.alloc.rate:      0.123 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.501 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.516 ns/op
                 ·gc.alloc.rate:      0.122 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.504 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 15.15% complete, ETA 00:49:08
# Fork: 3 of 3
# Warmup Iteration   1: 2.926 ns/op
# Warmup Iteration   2: 2.505 ns/op
# Warmup Iteration   3: 2.510 ns/op
# Warmup Iteration   4: 2.507 ns/op
# Warmup Iteration   5: 2.525 ns/op
Iteration   1: 2.514 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.519 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.503 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.511 ns/op
                 ·gc.alloc.rate:      0.035 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.733 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_1":
  2.586 ±(99.9%) 0.098 ns/op [Average]
  (min, avg, max) = (2.498, 2.586, 2.733), stdev = 0.092
  CI (99.9%): [2.488, 2.684] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_1:·gc.alloc.rate":
  0.188 ±(99.9%) 0.460 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.188, 1.476), stdev = 0.430
  CI (99.9%): [≈ 0, 0.649] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_1:·gc.alloc.rate.norm":
  0.001 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (≈ 10⁻⁷, 0.001, 0.004), stdev = 0.001
  CI (99.9%): [≈ 0, 0.002] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_1:·gc.churn.G1_Eden_Space":
  0.165 ±(99.9%) 0.683 MB/sec [Average]
  (min, avg, max) = (≈ 0, 0.165, 2.476), stdev = 0.639
  CI (99.9%): [≈ 0, 0.848] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_1:·gc.churn.G1_Eden_Space.norm":
  ≈ 10⁻³ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_1:·gc.count":
  1.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (≈ 0, 0.067, 1.000), stdev = 0.258
  CI (99.9%): [1.000, 1.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_1:·gc.time":
  2.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 0.133, 2.000), stdev = 0.516
  CI (99.9%): [2.000, 2.000] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_12
# Parameters: (value = 42)

# Run progress: 18.18% complete, ETA 00:47:23
# Fork: 1 of 3
# Warmup Iteration   1: 2.818 ns/op
# Warmup Iteration   2: 2.751 ns/op
# Warmup Iteration   3: 2.694 ns/op
# Warmup Iteration   4: 2.693 ns/op
# Warmup Iteration   5: 2.690 ns/op
Iteration   1: 2.481 ns/op
                 ·gc.alloc.rate:      0.019 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.505 ns/op
                 ·gc.alloc.rate:      0.002 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.508 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.715 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.703 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 21.21% complete, ETA 00:45:38
# Fork: 2 of 3
# Warmup Iteration   1: 2.811 ns/op
# Warmup Iteration   2: 2.509 ns/op
# Warmup Iteration   3: 2.504 ns/op
# Warmup Iteration   4: 2.504 ns/op
# Warmup Iteration   5: 2.502 ns/op
Iteration   1: 2.503 ns/op
                 ·gc.alloc.rate:      0.001 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.597 ns/op
                 ·gc.alloc.rate:      1.085 MB/sec
                 ·gc.alloc.rate.norm: 0.003 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.511 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.509 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.512 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 24.24% complete, ETA 00:43:52
# Fork: 3 of 3
# Warmup Iteration   1: 2.760 ns/op
# Warmup Iteration   2: 2.733 ns/op
# Warmup Iteration   3: 2.737 ns/op
# Warmup Iteration   4: 2.718 ns/op
# Warmup Iteration   5: 2.714 ns/op
Iteration   1: 2.720 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.705 ns/op
                 ·gc.alloc.rate:      0.003 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.703 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.665 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.668 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_12":
  2.600 ±(99.9%) 0.104 ns/op [Average]
  (min, avg, max) = (2.481, 2.600, 2.720), stdev = 0.098
  CI (99.9%): [2.496, 2.705] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_12:·gc.alloc.rate":
  0.074 ±(99.9%) 0.299 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.074, 1.085), stdev = 0.280
  CI (99.9%): [≈ 0, 0.373] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_12:·gc.alloc.rate.norm":
  ≈ 10⁻⁴ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_12:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_16
# Parameters: (value = 42)

# Run progress: 27.27% complete, ETA 00:42:07
# Fork: 1 of 3
# Warmup Iteration   1: 2.718 ns/op
# Warmup Iteration   2: 2.718 ns/op
# Warmup Iteration   3: 2.682 ns/op
# Warmup Iteration   4: 2.673 ns/op
# Warmup Iteration   5: 2.676 ns/op
Iteration   1: 2.681 ns/op
                 ·gc.alloc.rate:      0.442 MB/sec
                 ·gc.alloc.rate.norm: 0.001 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.668 ns/op
                 ·gc.alloc.rate:      0.330 MB/sec
                 ·gc.alloc.rate.norm: 0.001 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.667 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.557 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.554 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 30.30% complete, ETA 00:40:22
# Fork: 2 of 3
# Warmup Iteration   1: 2.715 ns/op
# Warmup Iteration   2: 2.724 ns/op
# Warmup Iteration   3: 2.682 ns/op
# Warmup Iteration   4: 2.479 ns/op
# Warmup Iteration   5: 2.508 ns/op
Iteration   1: 2.580 ns/op
                 ·gc.alloc.rate:      0.008 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.579 ns/op
                 ·gc.alloc.rate:      0.072 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.579 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.580 ns/op
                 ·gc.alloc.rate:      0.018 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.581 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 33.33% complete, ETA 00:38:36
# Fork: 3 of 3
# Warmup Iteration   1: 2.815 ns/op
# Warmup Iteration   2: 3.081 ns/op
# Warmup Iteration   3: 2.726 ns/op
# Warmup Iteration   4: 2.711 ns/op
# Warmup Iteration   5: 2.708 ns/op
Iteration   1: 2.716 ns/op
                 ·gc.alloc.rate:      0.716 MB/sec
                 ·gc.alloc.rate.norm: 0.002 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.704 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.706 ns/op
                 ·gc.alloc.rate:      0.912 MB/sec
                 ·gc.alloc.rate.norm: 0.003 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.691 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.469 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_16":
  2.621 ±(99.9%) 0.079 ns/op [Average]
  (min, avg, max) = (2.469, 2.621, 2.716), stdev = 0.074
  CI (99.9%): [2.542, 2.700] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_16:·gc.alloc.rate":
  0.167 ±(99.9%) 0.318 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.167, 0.912), stdev = 0.297
  CI (99.9%): [≈ 0, 0.484] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_16:·gc.alloc.rate.norm":
  ≈ 10⁻³ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_16:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_2
# Parameters: (value = 42)

# Run progress: 36.36% complete, ETA 00:36:51
# Fork: 1 of 3
# Warmup Iteration   1: 2.946 ns/op
# Warmup Iteration   2: 2.567 ns/op
# Warmup Iteration   3: 2.572 ns/op
# Warmup Iteration   4: 2.581 ns/op
# Warmup Iteration   5: 2.685 ns/op
Iteration   1: 2.675 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.482 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.487 ns/op
                 ·gc.alloc.rate:      0.007 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.501 ns/op
                 ·gc.alloc.rate:      0.508 MB/sec
                 ·gc.alloc.rate.norm: 0.001 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.726 ns/op
                 ·gc.alloc.rate:      0.018 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 39.39% complete, ETA 00:35:06
# Fork: 2 of 3
# Warmup Iteration   1: 2.902 ns/op
# Warmup Iteration   2: 2.694 ns/op
# Warmup Iteration   3: 2.676 ns/op
# Warmup Iteration   4: 2.672 ns/op
# Warmup Iteration   5: 2.669 ns/op
Iteration   1: 2.666 ns/op
                 ·gc.alloc.rate:                   1.549 MB/sec
                 ·gc.alloc.rate.norm:              0.005 B/op
                 ·gc.churn.G1_Eden_Space:          2.476 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     0.007 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:                        1.000 counts
                 ·gc.time:                         2.000 ms

Iteration   2: 2.663 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.661 ns/op
                 ·gc.alloc.rate:      0.048 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.467 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.478 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 42.42% complete, ETA 00:33:20
# Fork: 3 of 3
# Warmup Iteration   1: 2.849 ns/op
# Warmup Iteration   2: 2.764 ns/op
# Warmup Iteration   3: 2.743 ns/op
# Warmup Iteration   4: 2.695 ns/op
# Warmup Iteration   5: 2.579 ns/op
Iteration   1: 2.581 ns/op
                 ·gc.alloc.rate:      0.001 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.608 ns/op
                 ·gc.alloc.rate:               1.451 MB/sec
                 ·gc.alloc.rate.norm:          0.004 B/op
                 ·gc.churn.G1_Eden_Space:      2.095 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 0.006 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     2.000 ms

Iteration   3: 2.596 ns/op
                 ·gc.alloc.rate:      0.022 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.590 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.590 ns/op
                 ·gc.alloc.rate:      0.112 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_2":
  2.585 ±(99.9%) 0.090 ns/op [Average]
  (min, avg, max) = (2.467, 2.585, 2.726), stdev = 0.084
  CI (99.9%): [2.495, 2.675] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_2:·gc.alloc.rate":
  0.248 ±(99.9%) 0.561 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.248, 1.549), stdev = 0.525
  CI (99.9%): [≈ 0, 0.809] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_2:·gc.alloc.rate.norm":
  0.001 ±(99.9%) 0.002 B/op [Average]
  (min, avg, max) = (≈ 10⁻⁷, 0.001, 0.005), stdev = 0.002
  CI (99.9%): [≈ 0, 0.002] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_2:·gc.churn.G1_Eden_Space":
  0.305 ±(99.9%) 0.863 MB/sec [Average]
  (min, avg, max) = (≈ 0, 0.305, 2.476), stdev = 0.807
  CI (99.9%): [≈ 0, 1.168] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_2:·gc.churn.G1_Eden_Space.norm":
  0.001 ±(99.9%) 0.003 B/op [Average]
  (min, avg, max) = (≈ 0, 0.001, 0.007), stdev = 0.002
  CI (99.9%): [≈ 0, 0.003] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_2:·gc.churn.G1_Survivor_Space":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_2:·gc.churn.G1_Survivor_Space.norm":
  ≈ 10⁻⁶ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_2:·gc.count":
  2.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (≈ 0, 0.133, 1.000), stdev = 0.352
  CI (99.9%): [2.000, 2.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_2:·gc.time":
  4.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 0.267, 2.000), stdev = 0.704
  CI (99.9%): [4.000, 4.000] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_24
# Parameters: (value = 42)

# Run progress: 45.45% complete, ETA 00:31:35
# Fork: 1 of 3
# Warmup Iteration   1: 2.848 ns/op
# Warmup Iteration   2: 2.577 ns/op
# Warmup Iteration   3: 2.569 ns/op
# Warmup Iteration   4: 2.490 ns/op
# Warmup Iteration   5: 2.498 ns/op
Iteration   1: 2.509 ns/op
                 ·gc.alloc.rate:      0.346 MB/sec
                 ·gc.alloc.rate.norm: 0.001 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.511 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.506 ns/op
                 ·gc.alloc.rate:      0.007 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.504 ns/op
                 ·gc.alloc.rate:      0.022 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.510 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 48.48% complete, ETA 00:29:50
# Fork: 2 of 3
# Warmup Iteration   1: 2.951 ns/op
# Warmup Iteration   2: 2.590 ns/op
# Warmup Iteration   3: 2.572 ns/op
# Warmup Iteration   4: 2.679 ns/op
# Warmup Iteration   5: 2.551 ns/op
Iteration   1: 2.557 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.554 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.674 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.473 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.485 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 51.52% complete, ETA 00:28:04
# Fork: 3 of 3
# Warmup Iteration   1: 2.765 ns/op
# Warmup Iteration   2: 2.654 ns/op
# Warmup Iteration   3: 2.583 ns/op
# Warmup Iteration   4: 2.575 ns/op
# Warmup Iteration   5: 2.569 ns/op
Iteration   1: 2.575 ns/op
                 ·gc.alloc.rate:      0.574 MB/sec
                 ·gc.alloc.rate.norm: 0.002 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.748 ns/op
                 ·gc.alloc.rate:      0.978 MB/sec
                 ·gc.alloc.rate.norm: 0.003 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.728 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.719 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.665 ns/op
                 ·gc.alloc.rate:      0.026 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_24":
  2.581 ±(99.9%) 0.104 ns/op [Average]
  (min, avg, max) = (2.473, 2.581, 2.748), stdev = 0.098
  CI (99.9%): [2.477, 2.685] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_24:·gc.alloc.rate":
  0.130 ±(99.9%) 0.307 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.130, 0.978), stdev = 0.287
  CI (99.9%): [≈ 0, 0.437] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_24:·gc.alloc.rate.norm":
  ≈ 10⁻³ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_24:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_3
# Parameters: (value = 42)

# Run progress: 54.55% complete, ETA 00:26:19
# Fork: 1 of 3
# Warmup Iteration   1: 2.772 ns/op
# Warmup Iteration   2: 2.699 ns/op
# Warmup Iteration   3: 2.677 ns/op
# Warmup Iteration   4: 2.672 ns/op
# Warmup Iteration   5: 2.664 ns/op
Iteration   1: 2.718 ns/op
                 ·gc.alloc.rate:      0.664 MB/sec
                 ·gc.alloc.rate.norm: 0.002 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.591 ns/op
                 ·gc.alloc.rate:      0.008 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.472 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.570 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.726 ns/op
                 ·gc.alloc.rate:      0.011 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 57.58% complete, ETA 00:24:34
# Fork: 2 of 3
# Warmup Iteration   1: 2.694 ns/op
# Warmup Iteration   2: 2.591 ns/op
# Warmup Iteration   3: 2.578 ns/op
# Warmup Iteration   4: 2.740 ns/op
# Warmup Iteration   5: 2.722 ns/op
Iteration   1: 2.554 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.565 ns/op
                 ·gc.alloc.rate:      0.153 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.711 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.715 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.474 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 60.61% complete, ETA 00:22:48
# Fork: 3 of 3
# Warmup Iteration   1: 2.722 ns/op
# Warmup Iteration   2: 2.694 ns/op
# Warmup Iteration   3: 2.703 ns/op
# Warmup Iteration   4: 2.541 ns/op
# Warmup Iteration   5: 2.667 ns/op
Iteration   1: 2.653 ns/op
                 ·gc.alloc.rate:      0.031 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.469 ns/op
                 ·gc.alloc.rate:      0.031 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.724 ns/op
                 ·gc.alloc.rate:                   1.611 MB/sec
                 ·gc.alloc.rate.norm:              0.005 B/op
                 ·gc.churn.G1_Eden_Space:          2.666 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     0.008 B/op
                 ·gc.churn.G1_Survivor_Space:      0.298 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        1.000 counts
                 ·gc.time:                         8.000 ms

Iteration   4: 2.476 ns/op
                 ·gc.alloc.rate:      0.098 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.482 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_3":
  2.593 ±(99.9%) 0.113 ns/op [Average]
  (min, avg, max) = (2.469, 2.593, 2.726), stdev = 0.106
  CI (99.9%): [2.480, 2.706] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_3:·gc.alloc.rate":
  0.174 ±(99.9%) 0.462 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.174, 1.611), stdev = 0.432
  CI (99.9%): [≈ 0, 0.636] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_3:·gc.alloc.rate.norm":
  0.001 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (≈ 10⁻⁷, 0.001, 0.005), stdev = 0.001
  CI (99.9%): [≈ 0, 0.002] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_3:·gc.churn.G1_Eden_Space":
  0.178 ±(99.9%) 0.736 MB/sec [Average]
  (min, avg, max) = (≈ 0, 0.178, 2.666), stdev = 0.688
  CI (99.9%): [≈ 0, 0.914] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_3:·gc.churn.G1_Eden_Space.norm":
  0.001 ±(99.9%) 0.002 B/op [Average]
  (min, avg, max) = (≈ 0, 0.001, 0.008), stdev = 0.002
  CI (99.9%): [≈ 0, 0.003] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_3:·gc.churn.G1_Survivor_Space":
  0.020 ±(99.9%) 0.082 MB/sec [Average]
  (min, avg, max) = (≈ 0, 0.020, 0.298), stdev = 0.077
  CI (99.9%): [≈ 0, 0.102] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_3:·gc.churn.G1_Survivor_Space.norm":
  ≈ 10⁻⁴ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_3:·gc.count":
  1.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (≈ 0, 0.067, 1.000), stdev = 0.258
  CI (99.9%): [1.000, 1.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_3:·gc.time":
  8.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 0.533, 8.000), stdev = 2.066
  CI (99.9%): [8.000, 8.000] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_4
# Parameters: (value = 42)

# Run progress: 63.64% complete, ETA 00:21:06
# Fork: 1 of 3
# Warmup Iteration   1: 2.705 ns/op
# Warmup Iteration   2: 2.520 ns/op
# Warmup Iteration   3: 2.500 ns/op
# Warmup Iteration   4: 2.494 ns/op
# Warmup Iteration   5: 2.497 ns/op
Iteration   1: 2.509 ns/op
                 ·gc.alloc.rate:      0.528 MB/sec
                 ·gc.alloc.rate.norm: 0.001 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.594 ns/op
                 ·gc.alloc.rate:      0.114 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.575 ns/op
                 ·gc.alloc.rate:      0.017 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.736 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.720 ns/op
                 ·gc.alloc.rate:      0.008 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 66.67% complete, ETA 00:19:20
# Fork: 2 of 3
# Warmup Iteration   1: 2.736 ns/op
# Warmup Iteration   2: 2.582 ns/op
# Warmup Iteration   3: 2.686 ns/op
# Warmup Iteration   4: 2.710 ns/op
# Warmup Iteration   5: 2.674 ns/op
Iteration   1: 2.687 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.679 ns/op
                 ·gc.alloc.rate:      0.512 MB/sec
                 ·gc.alloc.rate.norm: 0.002 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.670 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.665 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.670 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 69.70% complete, ETA 00:17:35
# Fork: 3 of 3
# Warmup Iteration   1: 2.896 ns/op
# Warmup Iteration   2: 2.728 ns/op
# Warmup Iteration   3: 2.708 ns/op
# Warmup Iteration   4: 2.710 ns/op
# Warmup Iteration   5: 2.706 ns/op
Iteration   1: 2.698 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.692 ns/op
                 ·gc.alloc.rate:      0.081 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.697 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.703 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.546 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_4":
  2.656 ±(99.9%) 0.072 ns/op [Average]
  (min, avg, max) = (2.509, 2.656, 2.736), stdev = 0.067
  CI (99.9%): [2.584, 2.728] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_4:·gc.alloc.rate":
  0.084 ±(99.9%) 0.193 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.084, 0.528), stdev = 0.180
  CI (99.9%): [≈ 0, 0.277] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_4:·gc.alloc.rate.norm":
  ≈ 10⁻⁴ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_4:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_5
# Parameters: (value = 42)

# Run progress: 72.73% complete, ETA 00:15:49
# Fork: 1 of 3
# Warmup Iteration   1: 2.887 ns/op
# Warmup Iteration   2: 2.488 ns/op
# Warmup Iteration   3: 2.479 ns/op
# Warmup Iteration   4: 2.572 ns/op
# Warmup Iteration   5: 2.573 ns/op
Iteration   1: 2.729 ns/op
                 ·gc.alloc.rate:      1.216 MB/sec
                 ·gc.alloc.rate.norm: 0.004 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.715 ns/op
                 ·gc.alloc.rate:      0.003 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.695 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.698 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.540 ns/op
                 ·gc.alloc.rate:      0.008 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 75.76% complete, ETA 00:14:04
# Fork: 2 of 3
# Warmup Iteration   1: 2.715 ns/op
# Warmup Iteration   2: 2.705 ns/op
# Warmup Iteration   3: 2.683 ns/op
# Warmup Iteration   4: 2.478 ns/op
# Warmup Iteration   5: 2.487 ns/op
Iteration   1: 2.502 ns/op
                 ·gc.alloc.rate:      0.946 MB/sec
                 ·gc.alloc.rate.norm: 0.003 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.519 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.739 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.715 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.711 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 78.79% complete, ETA 00:12:18
# Fork: 3 of 3
# Warmup Iteration   1: 2.936 ns/op
# Warmup Iteration   2: 2.750 ns/op
# Warmup Iteration   3: 2.713 ns/op
# Warmup Iteration   4: 2.726 ns/op
# Warmup Iteration   5: 2.715 ns/op
Iteration   1: 2.710 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.708 ns/op
                 ·gc.alloc.rate:      0.002 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.544 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.562 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.683 ns/op
                 ·gc.alloc.rate:      0.190 MB/sec
                 ·gc.alloc.rate.norm: 0.001 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_5":
  2.651 ±(99.9%) 0.094 ns/op [Average]
  (min, avg, max) = (2.502, 2.651, 2.739), stdev = 0.088
  CI (99.9%): [2.557, 2.746] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_5:·gc.alloc.rate":
  0.158 ±(99.9%) 0.408 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.158, 1.216), stdev = 0.381
  CI (99.9%): [≈ 0, 0.565] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_5:·gc.alloc.rate.norm":
  ≈ 10⁻³ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_5:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_6
# Parameters: (value = 42)

# Run progress: 81.82% complete, ETA 00:10:32
# Fork: 1 of 3
# Warmup Iteration   1: 2.679 ns/op
# Warmup Iteration   2: 2.507 ns/op
# Warmup Iteration   3: 2.497 ns/op
# Warmup Iteration   4: 2.592 ns/op
# Warmup Iteration   5: 2.588 ns/op
Iteration   1: 2.575 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.565 ns/op
                 ·gc.alloc.rate:      0.002 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.566 ns/op
                 ·gc.alloc.rate:      0.062 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.564 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.574 ns/op
                 ·gc.alloc.rate:      0.012 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 84.85% complete, ETA 00:08:47
# Fork: 2 of 3
# Warmup Iteration   1: 2.842 ns/op
# Warmup Iteration   2: 2.574 ns/op
# Warmup Iteration   3: 2.490 ns/op
# Warmup Iteration   4: 2.502 ns/op
# Warmup Iteration   5: 2.504 ns/op
Iteration   1: 2.507 ns/op
                 ·gc.alloc.rate:      0.551 MB/sec
                 ·gc.alloc.rate.norm: 0.002 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.505 ns/op
                 ·gc.alloc.rate:      0.124 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.504 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.501 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.512 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 87.88% complete, ETA 00:07:01
# Fork: 3 of 3
# Warmup Iteration   1: 2.573 ns/op
# Warmup Iteration   2: 2.548 ns/op
# Warmup Iteration   3: 2.552 ns/op
# Warmup Iteration   4: 2.552 ns/op
# Warmup Iteration   5: 2.542 ns/op
Iteration   1: 2.550 ns/op
                 ·gc.alloc.rate:      0.063 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.551 ns/op
                 ·gc.alloc.rate:      0.063 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.552 ns/op
                 ·gc.alloc.rate:      0.063 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.572 ns/op
                 ·gc.alloc.rate:      0.063 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.548 ns/op
                 ·gc.alloc.rate:      0.130 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_6":
  2.543 ±(99.9%) 0.031 ns/op [Average]
  (min, avg, max) = (2.501, 2.543, 2.575), stdev = 0.029
  CI (99.9%): [2.513, 2.574] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_6:·gc.alloc.rate":
  0.075 ±(99.9%) 0.149 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.075, 0.551), stdev = 0.139
  CI (99.9%): [≈ 0, 0.224] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_6:·gc.alloc.rate.norm":
  ≈ 10⁻⁴ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_6:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_8
# Parameters: (value = 42)

# Run progress: 90.91% complete, ETA 00:05:16
# Fork: 1 of 3
# Warmup Iteration   1: 2.796 ns/op
# Warmup Iteration   2: 2.592 ns/op
# Warmup Iteration   3: 2.582 ns/op
# Warmup Iteration   4: 2.500 ns/op
# Warmup Iteration   5: 2.501 ns/op
Iteration   1: 2.498 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.509 ns/op
                 ·gc.alloc.rate:      0.006 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.729 ns/op
                 ·gc.alloc.rate:      0.004 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.721 ns/op
                 ·gc.alloc.rate:      0.047 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.681 ns/op
                 ·gc.alloc.rate:      0.117 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 93.94% complete, ETA 00:03:31
# Fork: 2 of 3
# Warmup Iteration   1: 2.770 ns/op
# Warmup Iteration   2: 2.741 ns/op
# Warmup Iteration   3: 2.721 ns/op
# Warmup Iteration   4: 2.718 ns/op
# Warmup Iteration   5: 2.712 ns/op
Iteration   1: 2.703 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.547 ns/op
                 ·gc.alloc.rate:      0.033 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.551 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.562 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.564 ns/op
                 ·gc.alloc.rate:      0.116 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 96.97% complete, ETA 00:01:45
# Fork: 3 of 3
# Warmup Iteration   1: 2.717 ns/op
# Warmup Iteration   2: 2.746 ns/op
# Warmup Iteration   3: 2.490 ns/op
# Warmup Iteration   4: 2.499 ns/op
# Warmup Iteration   5: 2.500 ns/op
Iteration   1: 2.509 ns/op
                 ·gc.alloc.rate:      0.551 MB/sec
                 ·gc.alloc.rate.norm: 0.002 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.590 ns/op
                 ·gc.alloc.rate:      0.216 MB/sec
                 ·gc.alloc.rate.norm: 0.001 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.580 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.577 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.573 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_8":
  2.593 ±(99.9%) 0.083 ns/op [Average]
  (min, avg, max) = (2.498, 2.593, 2.729), stdev = 0.078
  CI (99.9%): [2.510, 2.676] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_8:·gc.alloc.rate":
  0.073 ±(99.9%) 0.157 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.073, 0.551), stdev = 0.147
  CI (99.9%): [≈ 0, 0.229] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_8:·gc.alloc.rate.norm":
  ≈ 10⁻⁴ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_8:·gc.count":
  ≈ 0 counts


# Run complete. Total time: 00:58:04

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                                                    (value)  Mode  Cnt   Score    Error   Units
ChainingMethodRefBoundedBenchmark.baseline                                        42  avgt   15   2.641 ±  0.095   ns/op
ChainingMethodRefBoundedBenchmark.baseline:·gc.alloc.rate                         42  avgt   15   0.270 ±  0.496  MB/sec
ChainingMethodRefBoundedBenchmark.baseline:·gc.alloc.rate.norm                    42  avgt   15   0.001 ±  0.001    B/op
ChainingMethodRefBoundedBenchmark.baseline:·gc.churn.G1_Eden_Space                42  avgt   15   0.508 ±  1.209  MB/sec
ChainingMethodRefBoundedBenchmark.baseline:·gc.churn.G1_Eden_Space.norm           42  avgt   15   0.001 ±  0.003    B/op
ChainingMethodRefBoundedBenchmark.baseline:·gc.churn.G1_Survivor_Space            42  avgt   15  ≈ 10⁻⁴           MB/sec
ChainingMethodRefBoundedBenchmark.baseline:·gc.churn.G1_Survivor_Space.norm       42  avgt   15  ≈ 10⁻⁶             B/op
ChainingMethodRefBoundedBenchmark.baseline:·gc.count                              42  avgt   15   3.000           counts
ChainingMethodRefBoundedBenchmark.baseline:·gc.time                               42  avgt   15   8.000               ms
ChainingMethodRefBoundedBenchmark.depth_1                                         42  avgt   15   2.586 ±  0.098   ns/op
ChainingMethodRefBoundedBenchmark.depth_1:·gc.alloc.rate                          42  avgt   15   0.188 ±  0.460  MB/sec
ChainingMethodRefBoundedBenchmark.depth_1:·gc.alloc.rate.norm                     42  avgt   15   0.001 ±  0.001    B/op
ChainingMethodRefBoundedBenchmark.depth_1:·gc.churn.G1_Eden_Space                 42  avgt   15   0.165 ±  0.683  MB/sec
ChainingMethodRefBoundedBenchmark.depth_1:·gc.churn.G1_Eden_Space.norm            42  avgt   15  ≈ 10⁻³             B/op
ChainingMethodRefBoundedBenchmark.depth_1:·gc.count                               42  avgt   15   1.000           counts
ChainingMethodRefBoundedBenchmark.depth_1:·gc.time                                42  avgt   15   2.000               ms
ChainingMethodRefBoundedBenchmark.depth_12                                        42  avgt   15   2.600 ±  0.104   ns/op
ChainingMethodRefBoundedBenchmark.depth_12:·gc.alloc.rate                         42  avgt   15   0.074 ±  0.299  MB/sec
ChainingMethodRefBoundedBenchmark.depth_12:·gc.alloc.rate.norm                    42  avgt   15  ≈ 10⁻⁴             B/op
ChainingMethodRefBoundedBenchmark.depth_12:·gc.count                              42  avgt   15     ≈ 0           counts
ChainingMethodRefBoundedBenchmark.depth_16                                        42  avgt   15   2.621 ±  0.079   ns/op
ChainingMethodRefBoundedBenchmark.depth_16:·gc.alloc.rate                         42  avgt   15   0.167 ±  0.318  MB/sec
ChainingMethodRefBoundedBenchmark.depth_16:·gc.alloc.rate.norm                    42  avgt   15  ≈ 10⁻³             B/op
ChainingMethodRefBoundedBenchmark.depth_16:·gc.count                              42  avgt   15     ≈ 0           counts
ChainingMethodRefBoundedBenchmark.depth_2                                         42  avgt   15   2.585 ±  0.090   ns/op
ChainingMethodRefBoundedBenchmark.depth_2:·gc.alloc.rate                          42  avgt   15   0.248 ±  0.561  MB/sec
ChainingMethodRefBoundedBenchmark.depth_2:·gc.alloc.rate.norm                     42  avgt   15   0.001 ±  0.002    B/op
ChainingMethodRefBoundedBenchmark.depth_2:·gc.churn.G1_Eden_Space                 42  avgt   15   0.305 ±  0.863  MB/sec
ChainingMethodRefBoundedBenchmark.depth_2:·gc.churn.G1_Eden_Space.norm            42  avgt   15   0.001 ±  0.003    B/op
ChainingMethodRefBoundedBenchmark.depth_2:·gc.churn.G1_Survivor_Space             42  avgt   15  ≈ 10⁻⁴           MB/sec
ChainingMethodRefBoundedBenchmark.depth_2:·gc.churn.G1_Survivor_Space.norm        42  avgt   15  ≈ 10⁻⁶             B/op
ChainingMethodRefBoundedBenchmark.depth_2:·gc.count                               42  avgt   15   2.000           counts
ChainingMethodRefBoundedBenchmark.depth_2:·gc.time                                42  avgt   15   4.000               ms
ChainingMethodRefBoundedBenchmark.depth_24                                        42  avgt   15   2.581 ±  0.104   ns/op
ChainingMethodRefBoundedBenchmark.depth_24:·gc.alloc.rate                         42  avgt   15   0.130 ±  0.307  MB/sec
ChainingMethodRefBoundedBenchmark.depth_24:·gc.alloc.rate.norm                    42  avgt   15  ≈ 10⁻³             B/op
ChainingMethodRefBoundedBenchmark.depth_24:·gc.count                              42  avgt   15     ≈ 0           counts
ChainingMethodRefBoundedBenchmark.depth_3                                         42  avgt   15   2.593 ±  0.113   ns/op
ChainingMethodRefBoundedBenchmark.depth_3:·gc.alloc.rate                          42  avgt   15   0.174 ±  0.462  MB/sec
ChainingMethodRefBoundedBenchmark.depth_3:·gc.alloc.rate.norm                     42  avgt   15   0.001 ±  0.001    B/op
ChainingMethodRefBoundedBenchmark.depth_3:·gc.churn.G1_Eden_Space                 42  avgt   15   0.178 ±  0.736  MB/sec
ChainingMethodRefBoundedBenchmark.depth_3:·gc.churn.G1_Eden_Space.norm            42  avgt   15   0.001 ±  0.002    B/op
ChainingMethodRefBoundedBenchmark.depth_3:·gc.churn.G1_Survivor_Space             42  avgt   15   0.020 ±  0.082  MB/sec
ChainingMethodRefBoundedBenchmark.depth_3:·gc.churn.G1_Survivor_Space.norm        42  avgt   15  ≈ 10⁻⁴             B/op
ChainingMethodRefBoundedBenchmark.depth_3:·gc.count                               42  avgt   15   1.000           counts
ChainingMethodRefBoundedBenchmark.depth_3:·gc.time                                42  avgt   15   8.000               ms
ChainingMethodRefBoundedBenchmark.depth_4                                         42  avgt   15   2.656 ±  0.072   ns/op
ChainingMethodRefBoundedBenchmark.depth_4:·gc.alloc.rate                          42  avgt   15   0.084 ±  0.193  MB/sec
ChainingMethodRefBoundedBenchmark.depth_4:·gc.alloc.rate.norm                     42  avgt   15  ≈ 10⁻⁴             B/op
ChainingMethodRefBoundedBenchmark.depth_4:·gc.count                               42  avgt   15     ≈ 0           counts
ChainingMethodRefBoundedBenchmark.depth_5                                         42  avgt   15   2.651 ±  0.094   ns/op
ChainingMethodRefBoundedBenchmark.depth_5:·gc.alloc.rate                          42  avgt   15   0.158 ±  0.408  MB/sec
ChainingMethodRefBoundedBenchmark.depth_5:·gc.alloc.rate.norm                     42  avgt   15  ≈ 10⁻³             B/op
ChainingMethodRefBoundedBenchmark.depth_5:·gc.count                               42  avgt   15     ≈ 0           counts
ChainingMethodRefBoundedBenchmark.depth_6                                         42  avgt   15   2.543 ±  0.031   ns/op
ChainingMethodRefBoundedBenchmark.depth_6:·gc.alloc.rate                          42  avgt   15   0.075 ±  0.149  MB/sec
ChainingMethodRefBoundedBenchmark.depth_6:·gc.alloc.rate.norm                     42  avgt   15  ≈ 10⁻⁴             B/op
ChainingMethodRefBoundedBenchmark.depth_6:·gc.count                               42  avgt   15     ≈ 0           counts
ChainingMethodRefBoundedBenchmark.depth_8                                         42  avgt   15   2.593 ±  0.083   ns/op
ChainingMethodRefBoundedBenchmark.depth_8:·gc.alloc.rate                          42  avgt   15   0.073 ±  0.157  MB/sec
ChainingMethodRefBoundedBenchmark.depth_8:·gc.alloc.rate.norm                     42  avgt   15  ≈ 10⁻⁴             B/op
ChainingMethodRefBoundedBenchmark.depth_8:·gc.count                               42  avgt   15     ≈ 0           counts

Benchmark result is saved to results/report-openjdk-13/hotspotvm_graal_jit/ChainingMethodRefBoundedBenchmark.json
Running java -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler -jar benchmarks/target/benchmarks.jar .*ChainingMethodRefUnboundedBenchmark.* -prof gc -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_graal_jit/ChainingMethodRefUnboundedBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.baseline
# Parameters: (value = 42)

# Run progress: 0.00% complete, ETA 00:55:00
# Fork: 1 of 3
# Warmup Iteration   1: 2.856 ns/op
# Warmup Iteration   2: 2.527 ns/op
# Warmup Iteration   3: 2.730 ns/op
# Warmup Iteration   4: 2.732 ns/op
# Warmup Iteration   5: 2.683 ns/op
Iteration   1: 2.642 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.551 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.728 ns/op
                 ·gc.alloc.rate:                   1.315 MB/sec
                 ·gc.alloc.rate.norm:              0.004 B/op
                 ·gc.churn.G1_Eden_Space:          2.095 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     0.006 B/op
                 ·gc.churn.G1_Survivor_Space:      0.110 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        1.000 counts
                 ·gc.time:                         3.000 ms

Iteration   4: 2.562 ns/op
                 ·gc.alloc.rate:      0.005 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.678 ns/op
                 ·gc.alloc.rate:      0.008 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 3.03% complete, ETA 00:56:13
# Fork: 2 of 3
# Warmup Iteration   1: 2.902 ns/op
# Warmup Iteration   2: 2.551 ns/op
# Warmup Iteration   3: 2.504 ns/op
# Warmup Iteration   4: 2.702 ns/op
# Warmup Iteration   5: 2.691 ns/op
Iteration   1: 2.514 ns/op
                 ·gc.alloc.rate:      0.156 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.490 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.516 ns/op
                 ·gc.alloc.rate:                   1.391 MB/sec
                 ·gc.alloc.rate.norm:              0.004 B/op
                 ·gc.churn.G1_Eden_Space:          2.095 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     0.006 B/op
                 ·gc.churn.G1_Survivor_Space:      0.109 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        1.000 counts
                 ·gc.time:                         3.000 ms

Iteration   4: 2.516 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.499 ns/op
                 ·gc.alloc.rate:      0.018 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 6.06% complete, ETA 00:54:26
# Fork: 3 of 3
# Warmup Iteration   1: 2.735 ns/op
# Warmup Iteration   2: 2.750 ns/op
# Warmup Iteration   3: 2.680 ns/op
# Warmup Iteration   4: 2.688 ns/op
# Warmup Iteration   5: 2.678 ns/op
Iteration   1: 2.478 ns/op
                 ·gc.alloc.rate:      0.022 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.500 ns/op
                 ·gc.alloc.rate:      0.029 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.585 ns/op
                 ·gc.alloc.rate:      0.082 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.723 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.567 ns/op
                 ·gc.alloc.rate:      0.001 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.baseline":
  2.570 ±(99.9%) 0.090 ns/op [Average]
  (min, avg, max) = (2.478, 2.570, 2.728), stdev = 0.084
  CI (99.9%): [2.480, 2.660] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.baseline:·gc.alloc.rate":
  0.202 ±(99.9%) 0.502 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.202, 1.391), stdev = 0.469
  CI (99.9%): [≈ 0, 0.704] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.baseline:·gc.alloc.rate.norm":
  0.001 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (≈ 10⁻⁷, 0.001, 0.004), stdev = 0.001
  CI (99.9%): [≈ 0, 0.002] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.baseline:·gc.churn.G1_Eden_Space":
  0.279 ±(99.9%) 0.788 MB/sec [Average]
  (min, avg, max) = (≈ 0, 0.279, 2.095), stdev = 0.737
  CI (99.9%): [≈ 0, 1.067] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.baseline:·gc.churn.G1_Eden_Space.norm":
  0.001 ±(99.9%) 0.002 B/op [Average]
  (min, avg, max) = (≈ 0, 0.001, 0.006), stdev = 0.002
  CI (99.9%): [≈ 0, 0.003] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.baseline:·gc.churn.G1_Survivor_Space":
  0.015 ±(99.9%) 0.041 MB/sec [Average]
  (min, avg, max) = (≈ 0, 0.015, 0.110), stdev = 0.039
  CI (99.9%): [≈ 0, 0.056] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.baseline:·gc.churn.G1_Survivor_Space.norm":
  ≈ 10⁻⁴ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.baseline:·gc.count":
  2.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (≈ 0, 0.133, 1.000), stdev = 0.352
  CI (99.9%): [2.000, 2.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.baseline:·gc.time":
  6.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 0.400, 3.000), stdev = 1.056
  CI (99.9%): [6.000, 6.000] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_1
# Parameters: (value = 42)

# Run progress: 9.09% complete, ETA 00:52:39
# Fork: 1 of 3
# Warmup Iteration   1: 2.760 ns/op
# Warmup Iteration   2: 2.588 ns/op
# Warmup Iteration   3: 2.590 ns/op
# Warmup Iteration   4: 2.576 ns/op
# Warmup Iteration   5: 2.679 ns/op
Iteration   1: 2.689 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.678 ns/op
                 ·gc.alloc.rate:      0.180 MB/sec
                 ·gc.alloc.rate.norm: 0.001 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.735 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.674 ns/op
                 ·gc.alloc.rate:               0.583 MB/sec
                 ·gc.alloc.rate.norm:          0.002 B/op
                 ·gc.churn.G1_Eden_Space:      3.809 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 0.011 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     3.000 ms

Iteration   5: 2.713 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 12.12% complete, ETA 00:50:54
# Fork: 2 of 3
# Warmup Iteration   1: 2.715 ns/op
# Warmup Iteration   2: 2.479 ns/op
# Warmup Iteration   3: 2.480 ns/op
# Warmup Iteration   4: 2.492 ns/op
# Warmup Iteration   5: 2.498 ns/op
Iteration   1: 2.494 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.505 ns/op
                 ·gc.alloc.rate:      1.230 MB/sec
                 ·gc.alloc.rate.norm: 0.003 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.737 ns/op
                 ·gc.alloc.rate:      0.021 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.720 ns/op
                 ·gc.alloc.rate:               0.986 MB/sec
                 ·gc.alloc.rate.norm:          0.003 B/op
                 ·gc.churn.G1_Eden_Space:      2.095 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 0.006 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     2.000 ms

Iteration   5: 2.706 ns/op
                 ·gc.alloc.rate:      0.011 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 15.15% complete, ETA 00:49:08
# Fork: 3 of 3
# Warmup Iteration   1: 2.917 ns/op
# Warmup Iteration   2: 2.681 ns/op
# Warmup Iteration   3: 2.677 ns/op
# Warmup Iteration   4: 2.679 ns/op
# Warmup Iteration   5: 2.698 ns/op
Iteration   1: 2.658 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.550 ns/op
                 ·gc.alloc.rate:      0.009 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.579 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.599 ns/op
                 ·gc.alloc.rate:      1.099 MB/sec
                 ·gc.alloc.rate.norm: 0.003 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.479 ns/op
                 ·gc.alloc.rate:      0.047 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_1":
  2.634 ±(99.9%) 0.098 ns/op [Average]
  (min, avg, max) = (2.479, 2.634, 2.737), stdev = 0.092
  CI (99.9%): [2.536, 2.733] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_1:·gc.alloc.rate":
  0.278 ±(99.9%) 0.487 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.278, 1.230), stdev = 0.456
  CI (99.9%): [≈ 0, 0.765] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_1:·gc.alloc.rate.norm":
  0.001 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (≈ 10⁻⁷, 0.001, 0.003), stdev = 0.001
  CI (99.9%): [≈ 0, 0.002] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_1:·gc.churn.G1_Eden_Space":
  0.394 ±(99.9%) 1.163 MB/sec [Average]
  (min, avg, max) = (≈ 0, 0.394, 3.809), stdev = 1.088
  CI (99.9%): [≈ 0, 1.557] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_1:·gc.churn.G1_Eden_Space.norm":
  0.001 ±(99.9%) 0.003 B/op [Average]
  (min, avg, max) = (≈ 0, 0.001, 0.011), stdev = 0.003
  CI (99.9%): [≈ 0, 0.005] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_1:·gc.count":
  2.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (≈ 0, 0.133, 1.000), stdev = 0.352
  CI (99.9%): [2.000, 2.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_1:·gc.time":
  5.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 0.333, 3.000), stdev = 0.900
  CI (99.9%): [5.000, 5.000] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_12
# Parameters: (value = 42)

# Run progress: 18.18% complete, ETA 00:47:23
# Fork: 1 of 3
# Warmup Iteration   1: 2.968 ns/op
# Warmup Iteration   2: 2.699 ns/op
# Warmup Iteration   3: 2.709 ns/op
# Warmup Iteration   4: 2.678 ns/op
# Warmup Iteration   5: 2.670 ns/op
Iteration   1: 2.668 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.677 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.676 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.665 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.555 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 21.21% complete, ETA 00:45:37
# Fork: 2 of 3
# Warmup Iteration   1: 2.766 ns/op
# Warmup Iteration   2: 2.695 ns/op
# Warmup Iteration   3: 2.682 ns/op
# Warmup Iteration   4: 2.723 ns/op
# Warmup Iteration   5: 2.477 ns/op
Iteration   1: 2.726 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.719 ns/op
                 ·gc.alloc.rate:      0.002 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.477 ns/op
                 ·gc.alloc.rate:      0.157 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.485 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.505 ns/op
                 ·gc.alloc.rate:      0.615 MB/sec
                 ·gc.alloc.rate.norm: 0.002 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 24.24% complete, ETA 00:43:52
# Fork: 3 of 3
# Warmup Iteration   1: 2.979 ns/op
# Warmup Iteration   2: 2.575 ns/op
# Warmup Iteration   3: 2.477 ns/op
# Warmup Iteration   4: 2.590 ns/op
# Warmup Iteration   5: 2.482 ns/op
Iteration   1: 2.588 ns/op
                 ·gc.alloc.rate:      0.210 MB/sec
                 ·gc.alloc.rate.norm: 0.001 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.575 ns/op
                 ·gc.alloc.rate:      0.525 MB/sec
                 ·gc.alloc.rate.norm: 0.001 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.572 ns/op
                 ·gc.alloc.rate:      0.007 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.568 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.571 ns/op
                 ·gc.alloc.rate:      0.087 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_12":
  2.602 ±(99.9%) 0.087 ns/op [Average]
  (min, avg, max) = (2.477, 2.602, 2.726), stdev = 0.082
  CI (99.9%): [2.515, 2.689] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_12:·gc.alloc.rate":
  0.107 ±(99.9%) 0.214 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.107, 0.615), stdev = 0.200
  CI (99.9%): [≈ 0, 0.320] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_12:·gc.alloc.rate.norm":
  ≈ 10⁻⁴ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_12:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_16
# Parameters: (value = 42)

# Run progress: 27.27% complete, ETA 00:42:07
# Fork: 1 of 3
# Warmup Iteration   1: 2.789 ns/op
# Warmup Iteration   2: 2.606 ns/op
# Warmup Iteration   3: 2.588 ns/op
# Warmup Iteration   4: 2.585 ns/op
# Warmup Iteration   5: 2.579 ns/op
Iteration   1: 2.731 ns/op
                 ·gc.alloc.rate:      0.480 MB/sec
                 ·gc.alloc.rate.norm: 0.001 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.684 ns/op
                 ·gc.alloc.rate:      0.008 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.678 ns/op
                 ·gc.alloc.rate:      0.136 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.679 ns/op
                 ·gc.alloc.rate:      0.918 MB/sec
                 ·gc.alloc.rate.norm: 0.003 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.545 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 30.30% complete, ETA 00:40:21
# Fork: 2 of 3
# Warmup Iteration   1: 2.897 ns/op
# Warmup Iteration   2: 2.581 ns/op
# Warmup Iteration   3: 2.582 ns/op
# Warmup Iteration   4: 2.574 ns/op
# Warmup Iteration   5: 2.581 ns/op
Iteration   1: 2.575 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.579 ns/op
                 ·gc.alloc.rate:      0.010 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.586 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.586 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.569 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 33.33% complete, ETA 00:38:36
# Fork: 3 of 3
# Warmup Iteration   1: 2.562 ns/op
# Warmup Iteration   2: 2.557 ns/op
# Warmup Iteration   3: 2.561 ns/op
# Warmup Iteration   4: 2.562 ns/op
# Warmup Iteration   5: 2.554 ns/op
Iteration   1: 2.480 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.485 ns/op
                 ·gc.alloc.rate:      0.061 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.492 ns/op
                 ·gc.alloc.rate:                   0.908 MB/sec
                 ·gc.alloc.rate.norm:              0.002 B/op
                 ·gc.churn.G1_Eden_Space:          1.714 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     0.005 B/op
                 ·gc.churn.G1_Survivor_Space:      0.035 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        1.000 counts
                 ·gc.time:                         3.000 ms

Iteration   4: 2.495 ns/op
                 ·gc.alloc.rate:      0.075 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.740 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_16":
  2.594 ±(99.9%) 0.095 ns/op [Average]
  (min, avg, max) = (2.480, 2.594, 2.740), stdev = 0.089
  CI (99.9%): [2.498, 2.689] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_16:·gc.alloc.rate":
  0.173 ±(99.9%) 0.347 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.173, 0.918), stdev = 0.325
  CI (99.9%): [≈ 0, 0.520] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_16:·gc.alloc.rate.norm":
  ≈ 10⁻³ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_16:·gc.churn.G1_Eden_Space":
  0.114 ±(99.9%) 0.473 MB/sec [Average]
  (min, avg, max) = (≈ 0, 0.114, 1.714), stdev = 0.443
  CI (99.9%): [≈ 0, 0.587] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_16:·gc.churn.G1_Eden_Space.norm":
  ≈ 10⁻⁴ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_16:·gc.churn.G1_Survivor_Space":
  0.002 ±(99.9%) 0.010 MB/sec [Average]
  (min, avg, max) = (≈ 0, 0.002, 0.035), stdev = 0.009
  CI (99.9%): [≈ 0, 0.012] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_16:·gc.churn.G1_Survivor_Space.norm":
  ≈ 10⁻⁵ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_16:·gc.count":
  1.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (≈ 0, 0.067, 1.000), stdev = 0.258
  CI (99.9%): [1.000, 1.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_16:·gc.time":
  3.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 0.200, 3.000), stdev = 0.775
  CI (99.9%): [3.000, 3.000] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_2
# Parameters: (value = 42)

# Run progress: 36.36% complete, ETA 00:37:00
# Fork: 1 of 3
# Warmup Iteration   1: 2.912 ns/op
# Warmup Iteration   2: 2.681 ns/op
# Warmup Iteration   3: 2.669 ns/op
# Warmup Iteration   4: 2.725 ns/op
# Warmup Iteration   5: 2.556 ns/op
Iteration   1: 2.556 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.693 ns/op
                 ·gc.alloc.rate:      0.423 MB/sec
                 ·gc.alloc.rate.norm: 0.001 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.668 ns/op
                 ·gc.alloc.rate:                   1.086 MB/sec
                 ·gc.alloc.rate.norm:              0.003 B/op
                 ·gc.churn.G1_Eden_Space:          2.095 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     0.006 B/op
                 ·gc.churn.G1_Survivor_Space:      0.103 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        1.000 counts
                 ·gc.time:                         2.000 ms

Iteration   4: 2.671 ns/op
                 ·gc.alloc.rate:      0.198 MB/sec
                 ·gc.alloc.rate.norm: 0.001 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.691 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 39.39% complete, ETA 00:35:13
# Fork: 2 of 3
# Warmup Iteration   1: 2.914 ns/op
# Warmup Iteration   2: 2.738 ns/op
# Warmup Iteration   3: 2.717 ns/op
# Warmup Iteration   4: 2.720 ns/op
# Warmup Iteration   5: 2.497 ns/op
Iteration   1: 2.591 ns/op
                 ·gc.alloc.rate:               1.171 MB/sec
                 ·gc.alloc.rate.norm:          0.003 B/op
                 ·gc.churn.G1_Eden_Space:      2.095 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 0.006 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     4.000 ms

Iteration   2: 2.599 ns/op
                 ·gc.alloc.rate:      0.813 MB/sec
                 ·gc.alloc.rate.norm: 0.002 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.591 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.587 ns/op
                 ·gc.alloc.rate:      0.008 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.596 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 42.42% complete, ETA 00:33:27
# Fork: 3 of 3
# Warmup Iteration   1: 2.680 ns/op
# Warmup Iteration   2: 2.704 ns/op
# Warmup Iteration   3: 2.720 ns/op
# Warmup Iteration   4: 2.730 ns/op
# Warmup Iteration   5: 2.474 ns/op
Iteration   1: 2.735 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.718 ns/op
                 ·gc.alloc.rate:      0.027 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.713 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.710 ns/op
                 ·gc.alloc.rate:      0.028 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.544 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_2":
  2.644 ±(99.9%) 0.070 ns/op [Average]
  (min, avg, max) = (2.544, 2.644, 2.735), stdev = 0.065
  CI (99.9%): [2.574, 2.714] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_2:·gc.alloc.rate":
  0.250 ±(99.9%) 0.451 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.250, 1.171), stdev = 0.422
  CI (99.9%): [≈ 0, 0.701] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_2:·gc.alloc.rate.norm":
  0.001 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (≈ 10⁻⁷, 0.001, 0.003), stdev = 0.001
  CI (99.9%): [≈ 0, 0.002] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_2:·gc.churn.G1_Eden_Space":
  0.279 ±(99.9%) 0.788 MB/sec [Average]
  (min, avg, max) = (≈ 0, 0.279, 2.095), stdev = 0.737
  CI (99.9%): [≈ 0, 1.067] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_2:·gc.churn.G1_Eden_Space.norm":
  0.001 ±(99.9%) 0.002 B/op [Average]
  (min, avg, max) = (≈ 0, 0.001, 0.006), stdev = 0.002
  CI (99.9%): [≈ 0, 0.003] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_2:·gc.churn.G1_Survivor_Space":
  0.007 ±(99.9%) 0.029 MB/sec [Average]
  (min, avg, max) = (≈ 0, 0.007, 0.103), stdev = 0.027
  CI (99.9%): [≈ 0, 0.035] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_2:·gc.churn.G1_Survivor_Space.norm":
  ≈ 10⁻⁵ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_2:·gc.count":
  2.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (≈ 0, 0.133, 1.000), stdev = 0.352
  CI (99.9%): [2.000, 2.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_2:·gc.time":
  6.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 0.400, 4.000), stdev = 1.121
  CI (99.9%): [6.000, 6.000] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_24
# Parameters: (value = 42)

# Run progress: 45.45% complete, ETA 00:31:41
# Fork: 1 of 3
# Warmup Iteration   1: 2.868 ns/op
# Warmup Iteration   2: 2.684 ns/op
# Warmup Iteration   3: 2.486 ns/op
# Warmup Iteration   4: 2.561 ns/op
# Warmup Iteration   5: 2.478 ns/op
Iteration   1: 2.732 ns/op
                 ·gc.alloc.rate:      0.012 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.708 ns/op
                 ·gc.alloc.rate:      0.514 MB/sec
                 ·gc.alloc.rate.norm: 0.002 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.671 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.549 ns/op
                 ·gc.alloc.rate:      0.002 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.678 ns/op
                 ·gc.alloc.rate:      0.068 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 48.48% complete, ETA 00:29:55
# Fork: 2 of 3
# Warmup Iteration   1: 2.728 ns/op
# Warmup Iteration   2: 2.585 ns/op
# Warmup Iteration   3: 2.551 ns/op
# Warmup Iteration   4: 2.553 ns/op
# Warmup Iteration   5: 2.576 ns/op
Iteration   1: 2.477 ns/op
                 ·gc.alloc.rate:      0.020 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.571 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.568 ns/op
                 ·gc.alloc.rate:      0.002 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.567 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.564 ns/op
                 ·gc.alloc.rate:      0.008 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 51.52% complete, ETA 00:28:09
# Fork: 3 of 3
# Warmup Iteration   1: 2.876 ns/op
# Warmup Iteration   2: 2.502 ns/op
# Warmup Iteration   3: 2.744 ns/op
# Warmup Iteration   4: 2.721 ns/op
# Warmup Iteration   5: 2.674 ns/op
Iteration   1: 2.719 ns/op
                 ·gc.alloc.rate:      0.019 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.710 ns/op
                 ·gc.alloc.rate:      0.082 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.703 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.553 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.560 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_24":
  2.622 ±(99.9%) 0.088 ns/op [Average]
  (min, avg, max) = (2.477, 2.622, 2.732), stdev = 0.083
  CI (99.9%): [2.534, 2.710] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_24:·gc.alloc.rate":
  0.049 ±(99.9%) 0.140 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.049, 0.514), stdev = 0.131
  CI (99.9%): [≈ 0, 0.189] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_24:·gc.alloc.rate.norm":
  ≈ 10⁻⁴ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_24:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_3
# Parameters: (value = 42)

# Run progress: 54.55% complete, ETA 00:26:23
# Fork: 1 of 3
# Warmup Iteration   1: 2.780 ns/op
# Warmup Iteration   2: 2.736 ns/op
# Warmup Iteration   3: 2.674 ns/op
# Warmup Iteration   4: 2.679 ns/op
# Warmup Iteration   5: 2.478 ns/op
Iteration   1: 2.475 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.487 ns/op
                 ·gc.alloc.rate:      0.360 MB/sec
                 ·gc.alloc.rate.norm: 0.001 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.710 ns/op
                 ·gc.alloc.rate:               0.808 MB/sec
                 ·gc.alloc.rate.norm:          0.002 B/op
                 ·gc.churn.G1_Eden_Space:      4.380 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 0.013 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     3.000 ms

Iteration   4: 2.483 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.484 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 57.58% complete, ETA 00:24:37
# Fork: 2 of 3
# Warmup Iteration   1: 2.901 ns/op
# Warmup Iteration   2: 2.588 ns/op
# Warmup Iteration   3: 2.726 ns/op
# Warmup Iteration   4: 2.738 ns/op
# Warmup Iteration   5: 2.715 ns/op
Iteration   1: 2.710 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.703 ns/op
                 ·gc.alloc.rate:      0.004 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.704 ns/op
                 ·gc.alloc.rate:      0.081 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.493 ns/op
                 ·gc.alloc.rate:      0.736 MB/sec
                 ·gc.alloc.rate.norm: 0.002 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.489 ns/op
                 ·gc.alloc.rate:      0.048 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 60.61% complete, ETA 00:22:52
# Fork: 3 of 3
# Warmup Iteration   1: 2.758 ns/op
# Warmup Iteration   2: 2.509 ns/op
# Warmup Iteration   3: 2.502 ns/op
# Warmup Iteration   4: 2.502 ns/op
# Warmup Iteration   5: 2.706 ns/op
Iteration   1: 2.686 ns/op
                 ·gc.alloc.rate:      0.723 MB/sec
                 ·gc.alloc.rate.norm: 0.002 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.676 ns/op
                 ·gc.alloc.rate:      0.002 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.668 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.665 ns/op
                 ·gc.alloc.rate:      0.001 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.687 ns/op
                 ·gc.alloc.rate:      0.076 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_3":
  2.608 ±(99.9%) 0.112 ns/op [Average]
  (min, avg, max) = (2.475, 2.608, 2.710), stdev = 0.105
  CI (99.9%): [2.496, 2.720] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_3:·gc.alloc.rate":
  0.189 ±(99.9%) 0.329 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.189, 0.808), stdev = 0.308
  CI (99.9%): [≈ 0, 0.518] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_3:·gc.alloc.rate.norm":
  0.001 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (≈ 10⁻⁷, 0.001, 0.002), stdev = 0.001
  CI (99.9%): [≈ 0, 0.001] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_3:·gc.churn.G1_Eden_Space":
  0.292 ±(99.9%) 1.209 MB/sec [Average]
  (min, avg, max) = (≈ 0, 0.292, 4.380), stdev = 1.131
  CI (99.9%): [≈ 0, 1.501] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_3:·gc.churn.G1_Eden_Space.norm":
  0.001 ±(99.9%) 0.004 B/op [Average]
  (min, avg, max) = (≈ 0, 0.001, 0.013), stdev = 0.003
  CI (99.9%): [≈ 0, 0.004] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_3:·gc.count":
  1.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (≈ 0, 0.067, 1.000), stdev = 0.258
  CI (99.9%): [1.000, 1.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_3:·gc.time":
  3.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 0.200, 3.000), stdev = 0.775
  CI (99.9%): [3.000, 3.000] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_4
# Parameters: (value = 42)

# Run progress: 63.64% complete, ETA 00:21:06
# Fork: 1 of 3
# Warmup Iteration   1: 2.687 ns/op
# Warmup Iteration   2: 2.499 ns/op
# Warmup Iteration   3: 2.723 ns/op
# Warmup Iteration   4: 2.722 ns/op
# Warmup Iteration   5: 2.714 ns/op
Iteration   1: 2.718 ns/op
                 ·gc.alloc.rate:                   1.721 MB/sec
                 ·gc.alloc.rate.norm:              0.005 B/op
                 ·gc.churn.G1_Eden_Space:          2.666 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     0.008 B/op
                 ·gc.churn.G1_Survivor_Space:      0.084 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        1.000 counts
                 ·gc.time:                         3.000 ms

Iteration   2: 2.471 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.479 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.482 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.578 ns/op
                 ·gc.alloc.rate:      0.008 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 66.67% complete, ETA 00:19:20
# Fork: 2 of 3
# Warmup Iteration   1: 2.686 ns/op
# Warmup Iteration   2: 2.764 ns/op
# Warmup Iteration   3: 2.497 ns/op
# Warmup Iteration   4: 2.506 ns/op
# Warmup Iteration   5: 2.511 ns/op
Iteration   1: 2.609 ns/op
                 ·gc.alloc.rate:      0.489 MB/sec
                 ·gc.alloc.rate.norm: 0.001 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.514 ns/op
                 ·gc.alloc.rate:      0.989 MB/sec
                 ·gc.alloc.rate.norm: 0.003 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.503 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.510 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.514 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 69.70% complete, ETA 00:17:35
# Fork: 3 of 3
# Warmup Iteration   1: 2.847 ns/op
# Warmup Iteration   2: 2.566 ns/op
# Warmup Iteration   3: 2.570 ns/op
# Warmup Iteration   4: 2.691 ns/op
# Warmup Iteration   5: 2.679 ns/op
Iteration   1: 2.668 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.489 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.480 ns/op
                 ·gc.alloc.rate:      0.094 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.562 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.575 ns/op
                 ·gc.alloc.rate:               0.715 MB/sec
                 ·gc.alloc.rate.norm:          0.002 B/op
                 ·gc.churn.G1_Eden_Space:      3.809 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 0.011 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     3.000 ms



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_4":
  2.543 ±(99.9%) 0.080 ns/op [Average]
  (min, avg, max) = (2.471, 2.543, 2.718), stdev = 0.074
  CI (99.9%): [2.464, 2.623] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_4:·gc.alloc.rate":
  0.268 ±(99.9%) 0.544 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.268, 1.721), stdev = 0.509
  CI (99.9%): [≈ 0, 0.812] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_4:·gc.alloc.rate.norm":
  0.001 ±(99.9%) 0.002 B/op [Average]
  (min, avg, max) = (≈ 10⁻⁷, 0.001, 0.005), stdev = 0.001
  CI (99.9%): [≈ 0, 0.002] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_4:·gc.churn.G1_Eden_Space":
  0.432 ±(99.9%) 1.240 MB/sec [Average]
  (min, avg, max) = (≈ 0, 0.432, 3.809), stdev = 1.159
  CI (99.9%): [≈ 0, 1.671] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_4:·gc.churn.G1_Eden_Space.norm":
  0.001 ±(99.9%) 0.004 B/op [Average]
  (min, avg, max) = (≈ 0, 0.001, 0.011), stdev = 0.003
  CI (99.9%): [≈ 0, 0.005] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_4:·gc.churn.G1_Survivor_Space":
  0.006 ±(99.9%) 0.023 MB/sec [Average]
  (min, avg, max) = (≈ 0, 0.006, 0.084), stdev = 0.022
  CI (99.9%): [≈ 0, 0.029] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_4:·gc.churn.G1_Survivor_Space.norm":
  ≈ 10⁻⁵ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_4:·gc.count":
  2.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (≈ 0, 0.133, 1.000), stdev = 0.352
  CI (99.9%): [2.000, 2.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_4:·gc.time":
  6.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 0.400, 3.000), stdev = 1.056
  CI (99.9%): [6.000, 6.000] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_5
# Parameters: (value = 42)

# Run progress: 72.73% complete, ETA 00:15:49
# Fork: 1 of 3
# Warmup Iteration   1: 2.763 ns/op
# Warmup Iteration   2: 2.537 ns/op
# Warmup Iteration   3: 2.572 ns/op
# Warmup Iteration   4: 2.571 ns/op
# Warmup Iteration   5: 2.576 ns/op
Iteration   1: 2.573 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.588 ns/op
                 ·gc.alloc.rate:      0.133 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.487 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.730 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.487 ns/op
                 ·gc.alloc.rate:      0.516 MB/sec
                 ·gc.alloc.rate.norm: 0.001 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 75.76% complete, ETA 00:14:04
# Fork: 2 of 3
# Warmup Iteration   1: 2.774 ns/op
# Warmup Iteration   2: 2.510 ns/op
# Warmup Iteration   3: 2.508 ns/op
# Warmup Iteration   4: 2.511 ns/op
# Warmup Iteration   5: 2.509 ns/op
Iteration   1: 2.504 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.577 ns/op
                 ·gc.alloc.rate:      0.085 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.693 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.490 ns/op
                 ·gc.alloc.rate:      0.001 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.576 ns/op
                 ·gc.alloc.rate:      0.553 MB/sec
                 ·gc.alloc.rate.norm: 0.002 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 78.79% complete, ETA 00:12:18
# Fork: 3 of 3
# Warmup Iteration   1: 2.905 ns/op
# Warmup Iteration   2: 2.698 ns/op
# Warmup Iteration   3: 2.572 ns/op
# Warmup Iteration   4: 2.568 ns/op
# Warmup Iteration   5: 2.567 ns/op
Iteration   1: 2.563 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.568 ns/op
                 ·gc.alloc.rate:      0.003 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.575 ns/op
                 ·gc.alloc.rate:      0.015 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.565 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.583 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻³ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_5":
  2.570 ±(99.9%) 0.073 ns/op [Average]
  (min, avg, max) = (2.487, 2.570, 2.730), stdev = 0.069
  CI (99.9%): [2.497, 2.644] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_5:·gc.alloc.rate":
  0.087 ±(99.9%) 0.199 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.087, 0.553), stdev = 0.186
  CI (99.9%): [≈ 0, 0.286] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_5:·gc.alloc.rate.norm":
  ≈ 10⁻⁴ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_5:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_6
# Parameters: (value = 42)

# Run progress: 81.82% complete, ETA 00:10:32
# Fork: 1 of 3
# Warmup Iteration   1: 2.798 ns/op
# Warmup Iteration   2: 2.578 ns/op
# Warmup Iteration   3: 2.689 ns/op
# Warmup Iteration   4: 2.685 ns/op
# Warmup Iteration   5: 2.726 ns/op
Iteration   1: 2.718 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.676 ns/op
                 ·gc.alloc.rate:      0.180 MB/sec
                 ·gc.alloc.rate.norm: 0.001 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.677 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.679 ns/op
                 ·gc.alloc.rate:      0.588 MB/sec
                 ·gc.alloc.rate.norm: 0.002 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.667 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 84.85% complete, ETA 00:08:47
# Fork: 2 of 3
# Warmup Iteration   1: 2.909 ns/op
# Warmup Iteration   2: 2.723 ns/op
# Warmup Iteration   3: 2.702 ns/op
# Warmup Iteration   4: 2.668 ns/op
# Warmup Iteration   5: 2.547 ns/op
Iteration   1: 2.476 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.522 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.502 ns/op
                 ·gc.alloc.rate:      0.081 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.719 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.723 ns/op
                 ·gc.alloc.rate:      0.197 MB/sec
                 ·gc.alloc.rate.norm: 0.001 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 87.88% complete, ETA 00:07:01
# Fork: 3 of 3
# Warmup Iteration   1: 2.797 ns/op
# Warmup Iteration   2: 2.519 ns/op
# Warmup Iteration   3: 2.592 ns/op
# Warmup Iteration   4: 2.601 ns/op
# Warmup Iteration   5: 2.764 ns/op
Iteration   1: 2.754 ns/op
                 ·gc.alloc.rate:                   1.357 MB/sec
                 ·gc.alloc.rate.norm:              0.004 B/op
                 ·gc.churn.G1_Eden_Space:          2.095 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     0.006 B/op
                 ·gc.churn.G1_Survivor_Space:      0.077 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        1.000 counts
                 ·gc.time:                         3.000 ms

Iteration   2: 2.741 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.726 ns/op
                 ·gc.alloc.rate:      0.026 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.728 ns/op
                 ·gc.alloc.rate:      0.043 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.721 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_6":
  2.668 ±(99.9%) 0.098 ns/op [Average]
  (min, avg, max) = (2.476, 2.668, 2.754), stdev = 0.091
  CI (99.9%): [2.571, 2.766] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_6:·gc.alloc.rate":
  0.165 ±(99.9%) 0.390 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.165, 1.357), stdev = 0.365
  CI (99.9%): [≈ 0, 0.555] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_6:·gc.alloc.rate.norm":
  ≈ 10⁻³ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_6:·gc.churn.G1_Eden_Space":
  0.140 ±(99.9%) 0.578 MB/sec [Average]
  (min, avg, max) = (≈ 0, 0.140, 2.095), stdev = 0.541
  CI (99.9%): [≈ 0, 0.718] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_6:·gc.churn.G1_Eden_Space.norm":
  ≈ 10⁻³ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_6:·gc.churn.G1_Survivor_Space":
  0.005 ±(99.9%) 0.021 MB/sec [Average]
  (min, avg, max) = (≈ 0, 0.005, 0.077), stdev = 0.020
  CI (99.9%): [≈ 0, 0.026] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_6:·gc.churn.G1_Survivor_Space.norm":
  ≈ 10⁻⁵ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_6:·gc.count":
  1.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (≈ 0, 0.067, 1.000), stdev = 0.258
  CI (99.9%): [1.000, 1.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_6:·gc.time":
  3.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 0.200, 3.000), stdev = 0.775
  CI (99.9%): [3.000, 3.000] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_8
# Parameters: (value = 42)

# Run progress: 90.91% complete, ETA 00:05:16
# Fork: 1 of 3
# Warmup Iteration   1: 2.637 ns/op
# Warmup Iteration   2: 2.706 ns/op
# Warmup Iteration   3: 2.708 ns/op
# Warmup Iteration   4: 2.693 ns/op
# Warmup Iteration   5: 2.546 ns/op
Iteration   1: 2.468 ns/op
                 ·gc.alloc.rate:      0.020 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.559 ns/op
                 ·gc.alloc.rate:      0.048 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.488 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.503 ns/op
                 ·gc.alloc.rate:               0.892 MB/sec
                 ·gc.alloc.rate.norm:          0.002 B/op
                 ·gc.churn.G1_Eden_Space:      2.857 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 0.008 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     3.000 ms

Iteration   5: 2.511 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 93.94% complete, ETA 00:03:31
# Fork: 2 of 3
# Warmup Iteration   1: 2.828 ns/op
# Warmup Iteration   2: 2.706 ns/op
# Warmup Iteration   3: 2.632 ns/op
# Warmup Iteration   4: 2.679 ns/op
# Warmup Iteration   5: 2.521 ns/op
Iteration   1: 2.507 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.754 ns/op
                 ·gc.alloc.rate:      0.001 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.498 ns/op
                 ·gc.alloc.rate:      0.091 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.684 ns/op
                 ·gc.alloc.rate:      0.010 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.506 ns/op
                 ·gc.alloc.rate:               0.474 MB/sec
                 ·gc.alloc.rate.norm:          0.001 B/op
                 ·gc.churn.G1_Eden_Space:      3.809 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 0.011 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     4.000 ms


# Run progress: 96.97% complete, ETA 00:01:45
# Fork: 3 of 3
# Warmup Iteration   1: 2.793 ns/op
# Warmup Iteration   2: 2.536 ns/op
# Warmup Iteration   3: 2.504 ns/op
# Warmup Iteration   4: 2.755 ns/op
# Warmup Iteration   5: 2.586 ns/op
Iteration   1: 2.498 ns/op
                 ·gc.alloc.rate:      0.003 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.597 ns/op
                 ·gc.alloc.rate:      0.020 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.600 ns/op
                 ·gc.alloc.rate:      0.448 MB/sec
                 ·gc.alloc.rate.norm: 0.001 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.585 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.587 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_8":
  2.556 ±(99.9%) 0.086 ns/op [Average]
  (min, avg, max) = (2.468, 2.556, 2.754), stdev = 0.080
  CI (99.9%): [2.471, 2.642] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_8:·gc.alloc.rate":
  0.134 ±(99.9%) 0.281 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.134, 0.892), stdev = 0.262
  CI (99.9%): [≈ 0, 0.414] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_8:·gc.alloc.rate.norm":
  ≈ 10⁻³ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_8:·gc.churn.G1_Eden_Space":
  0.444 ±(99.9%) 1.268 MB/sec [Average]
  (min, avg, max) = (≈ 0, 0.444, 3.809), stdev = 1.186
  CI (99.9%): [≈ 0, 1.713] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_8:·gc.churn.G1_Eden_Space.norm":
  0.001 ±(99.9%) 0.003 B/op [Average]
  (min, avg, max) = (≈ 0, 0.001, 0.011), stdev = 0.003
  CI (99.9%): [≈ 0, 0.005] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_8:·gc.count":
  2.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (≈ 0, 0.133, 1.000), stdev = 0.352
  CI (99.9%): [2.000, 2.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_8:·gc.time":
  7.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 0.467, 4.000), stdev = 1.246
  CI (99.9%): [7.000, 7.000] (assumes normal distribution)


# Run complete. Total time: 00:58:04

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                                                      (value)  Mode  Cnt   Score    Error   Units
ChainingMethodRefUnboundedBenchmark.baseline                                        42  avgt   15   2.570 ±  0.090   ns/op
ChainingMethodRefUnboundedBenchmark.baseline:·gc.alloc.rate                         42  avgt   15   0.202 ±  0.502  MB/sec
ChainingMethodRefUnboundedBenchmark.baseline:·gc.alloc.rate.norm                    42  avgt   15   0.001 ±  0.001    B/op
ChainingMethodRefUnboundedBenchmark.baseline:·gc.churn.G1_Eden_Space                42  avgt   15   0.279 ±  0.788  MB/sec
ChainingMethodRefUnboundedBenchmark.baseline:·gc.churn.G1_Eden_Space.norm           42  avgt   15   0.001 ±  0.002    B/op
ChainingMethodRefUnboundedBenchmark.baseline:·gc.churn.G1_Survivor_Space            42  avgt   15   0.015 ±  0.041  MB/sec
ChainingMethodRefUnboundedBenchmark.baseline:·gc.churn.G1_Survivor_Space.norm       42  avgt   15  ≈ 10⁻⁴             B/op
ChainingMethodRefUnboundedBenchmark.baseline:·gc.count                              42  avgt   15   2.000           counts
ChainingMethodRefUnboundedBenchmark.baseline:·gc.time                               42  avgt   15   6.000               ms
ChainingMethodRefUnboundedBenchmark.depth_1                                         42  avgt   15   2.634 ±  0.098   ns/op
ChainingMethodRefUnboundedBenchmark.depth_1:·gc.alloc.rate                          42  avgt   15   0.278 ±  0.487  MB/sec
ChainingMethodRefUnboundedBenchmark.depth_1:·gc.alloc.rate.norm                     42  avgt   15   0.001 ±  0.001    B/op
ChainingMethodRefUnboundedBenchmark.depth_1:·gc.churn.G1_Eden_Space                 42  avgt   15   0.394 ±  1.163  MB/sec
ChainingMethodRefUnboundedBenchmark.depth_1:·gc.churn.G1_Eden_Space.norm            42  avgt   15   0.001 ±  0.003    B/op
ChainingMethodRefUnboundedBenchmark.depth_1:·gc.count                               42  avgt   15   2.000           counts
ChainingMethodRefUnboundedBenchmark.depth_1:·gc.time                                42  avgt   15   5.000               ms
ChainingMethodRefUnboundedBenchmark.depth_12                                        42  avgt   15   2.602 ±  0.087   ns/op
ChainingMethodRefUnboundedBenchmark.depth_12:·gc.alloc.rate                         42  avgt   15   0.107 ±  0.214  MB/sec
ChainingMethodRefUnboundedBenchmark.depth_12:·gc.alloc.rate.norm                    42  avgt   15  ≈ 10⁻⁴             B/op
ChainingMethodRefUnboundedBenchmark.depth_12:·gc.count                              42  avgt   15     ≈ 0           counts
ChainingMethodRefUnboundedBenchmark.depth_16                                        42  avgt   15   2.594 ±  0.095   ns/op
ChainingMethodRefUnboundedBenchmark.depth_16:·gc.alloc.rate                         42  avgt   15   0.173 ±  0.347  MB/sec
ChainingMethodRefUnboundedBenchmark.depth_16:·gc.alloc.rate.norm                    42  avgt   15  ≈ 10⁻³             B/op
ChainingMethodRefUnboundedBenchmark.depth_16:·gc.churn.G1_Eden_Space                42  avgt   15   0.114 ±  0.473  MB/sec
ChainingMethodRefUnboundedBenchmark.depth_16:·gc.churn.G1_Eden_Space.norm           42  avgt   15  ≈ 10⁻⁴             B/op
ChainingMethodRefUnboundedBenchmark.depth_16:·gc.churn.G1_Survivor_Space            42  avgt   15   0.002 ±  0.010  MB/sec
ChainingMethodRefUnboundedBenchmark.depth_16:·gc.churn.G1_Survivor_Space.norm       42  avgt   15  ≈ 10⁻⁵             B/op
ChainingMethodRefUnboundedBenchmark.depth_16:·gc.count                              42  avgt   15   1.000           counts
ChainingMethodRefUnboundedBenchmark.depth_16:·gc.time                               42  avgt   15   3.000               ms
ChainingMethodRefUnboundedBenchmark.depth_2                                         42  avgt   15   2.644 ±  0.070   ns/op
ChainingMethodRefUnboundedBenchmark.depth_2:·gc.alloc.rate                          42  avgt   15   0.250 ±  0.451  MB/sec
ChainingMethodRefUnboundedBenchmark.depth_2:·gc.alloc.rate.norm                     42  avgt   15   0.001 ±  0.001    B/op
ChainingMethodRefUnboundedBenchmark.depth_2:·gc.churn.G1_Eden_Space                 42  avgt   15   0.279 ±  0.788  MB/sec
ChainingMethodRefUnboundedBenchmark.depth_2:·gc.churn.G1_Eden_Space.norm            42  avgt   15   0.001 ±  0.002    B/op
ChainingMethodRefUnboundedBenchmark.depth_2:·gc.churn.G1_Survivor_Space             42  avgt   15   0.007 ±  0.029  MB/sec
ChainingMethodRefUnboundedBenchmark.depth_2:·gc.churn.G1_Survivor_Space.norm        42  avgt   15  ≈ 10⁻⁵             B/op
ChainingMethodRefUnboundedBenchmark.depth_2:·gc.count                               42  avgt   15   2.000           counts
ChainingMethodRefUnboundedBenchmark.depth_2:·gc.time                                42  avgt   15   6.000               ms
ChainingMethodRefUnboundedBenchmark.depth_24                                        42  avgt   15   2.622 ±  0.088   ns/op
ChainingMethodRefUnboundedBenchmark.depth_24:·gc.alloc.rate                         42  avgt   15   0.049 ±  0.140  MB/sec
ChainingMethodRefUnboundedBenchmark.depth_24:·gc.alloc.rate.norm                    42  avgt   15  ≈ 10⁻⁴             B/op
ChainingMethodRefUnboundedBenchmark.depth_24:·gc.count                              42  avgt   15     ≈ 0           counts
ChainingMethodRefUnboundedBenchmark.depth_3                                         42  avgt   15   2.608 ±  0.112   ns/op
ChainingMethodRefUnboundedBenchmark.depth_3:·gc.alloc.rate                          42  avgt   15   0.189 ±  0.329  MB/sec
ChainingMethodRefUnboundedBenchmark.depth_3:·gc.alloc.rate.norm                     42  avgt   15   0.001 ±  0.001    B/op
ChainingMethodRefUnboundedBenchmark.depth_3:·gc.churn.G1_Eden_Space                 42  avgt   15   0.292 ±  1.209  MB/sec
ChainingMethodRefUnboundedBenchmark.depth_3:·gc.churn.G1_Eden_Space.norm            42  avgt   15   0.001 ±  0.004    B/op
ChainingMethodRefUnboundedBenchmark.depth_3:·gc.count                               42  avgt   15   1.000           counts
ChainingMethodRefUnboundedBenchmark.depth_3:·gc.time                                42  avgt   15   3.000               ms
ChainingMethodRefUnboundedBenchmark.depth_4                                         42  avgt   15   2.543 ±  0.080   ns/op
ChainingMethodRefUnboundedBenchmark.depth_4:·gc.alloc.rate                          42  avgt   15   0.268 ±  0.544  MB/sec
ChainingMethodRefUnboundedBenchmark.depth_4:·gc.alloc.rate.norm                     42  avgt   15   0.001 ±  0.002    B/op
ChainingMethodRefUnboundedBenchmark.depth_4:·gc.churn.G1_Eden_Space                 42  avgt   15   0.432 ±  1.240  MB/sec
ChainingMethodRefUnboundedBenchmark.depth_4:·gc.churn.G1_Eden_Space.norm            42  avgt   15   0.001 ±  0.004    B/op
ChainingMethodRefUnboundedBenchmark.depth_4:·gc.churn.G1_Survivor_Space             42  avgt   15   0.006 ±  0.023  MB/sec
ChainingMethodRefUnboundedBenchmark.depth_4:·gc.churn.G1_Survivor_Space.norm        42  avgt   15  ≈ 10⁻⁵             B/op
ChainingMethodRefUnboundedBenchmark.depth_4:·gc.count                               42  avgt   15   2.000           counts
ChainingMethodRefUnboundedBenchmark.depth_4:·gc.time                                42  avgt   15   6.000               ms
ChainingMethodRefUnboundedBenchmark.depth_5                                         42  avgt   15   2.570 ±  0.073   ns/op
ChainingMethodRefUnboundedBenchmark.depth_5:·gc.alloc.rate                          42  avgt   15   0.087 ±  0.199  MB/sec
ChainingMethodRefUnboundedBenchmark.depth_5:·gc.alloc.rate.norm                     42  avgt   15  ≈ 10⁻⁴             B/op
ChainingMethodRefUnboundedBenchmark.depth_5:·gc.count                               42  avgt   15     ≈ 0           counts
ChainingMethodRefUnboundedBenchmark.depth_6                                         42  avgt   15   2.668 ±  0.098   ns/op
ChainingMethodRefUnboundedBenchmark.depth_6:·gc.alloc.rate                          42  avgt   15   0.165 ±  0.390  MB/sec
ChainingMethodRefUnboundedBenchmark.depth_6:·gc.alloc.rate.norm                     42  avgt   15  ≈ 10⁻³             B/op
ChainingMethodRefUnboundedBenchmark.depth_6:·gc.churn.G1_Eden_Space                 42  avgt   15   0.140 ±  0.578  MB/sec
ChainingMethodRefUnboundedBenchmark.depth_6:·gc.churn.G1_Eden_Space.norm            42  avgt   15  ≈ 10⁻³             B/op
ChainingMethodRefUnboundedBenchmark.depth_6:·gc.churn.G1_Survivor_Space             42  avgt   15   0.005 ±  0.021  MB/sec
ChainingMethodRefUnboundedBenchmark.depth_6:·gc.churn.G1_Survivor_Space.norm        42  avgt   15  ≈ 10⁻⁵             B/op
ChainingMethodRefUnboundedBenchmark.depth_6:·gc.count                               42  avgt   15   1.000           counts
ChainingMethodRefUnboundedBenchmark.depth_6:·gc.time                                42  avgt   15   3.000               ms
ChainingMethodRefUnboundedBenchmark.depth_8                                         42  avgt   15   2.556 ±  0.086   ns/op
ChainingMethodRefUnboundedBenchmark.depth_8:·gc.alloc.rate                          42  avgt   15   0.134 ±  0.281  MB/sec
ChainingMethodRefUnboundedBenchmark.depth_8:·gc.alloc.rate.norm                     42  avgt   15  ≈ 10⁻³             B/op
ChainingMethodRefUnboundedBenchmark.depth_8:·gc.churn.G1_Eden_Space                 42  avgt   15   0.444 ±  1.268  MB/sec
ChainingMethodRefUnboundedBenchmark.depth_8:·gc.churn.G1_Eden_Space.norm            42  avgt   15   0.001 ±  0.003    B/op
ChainingMethodRefUnboundedBenchmark.depth_8:·gc.count                               42  avgt   15   2.000           counts
ChainingMethodRefUnboundedBenchmark.depth_8:·gc.time                                42  avgt   15   7.000               ms

Benchmark result is saved to results/report-openjdk-13/hotspotvm_graal_jit/ChainingMethodRefUnboundedBenchmark.json
Running java -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler -jar benchmarks/target/benchmarks.jar .*LambdaAllocationBenchmark.* -prof gc -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_graal_jit/LambdaAllocationBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.anonymous_class

# Run progress: 0.00% complete, ETA 00:35:00
# Fork: 1 of 3
# Warmup Iteration   1: 5.370 ns/op
# Warmup Iteration   2: 4.717 ns/op
# Warmup Iteration   3: 4.529 ns/op
# Warmup Iteration   4: 4.550 ns/op
# Warmup Iteration   5: 4.513 ns/op
Iteration   1: 4.499 ns/op
                 ·gc.alloc.rate:                   3231.081 MB/sec
                 ·gc.alloc.rate.norm:              16.006 B/op
                 ·gc.churn.G1_Eden_Space:          3234.525 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     16.023 B/op
                 ·gc.churn.G1_Survivor_Space:      0.073 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        88.000 counts
                 ·gc.time:                         45.000 ms

Iteration   2: 4.517 ns/op
                 ·gc.alloc.rate:                   3216.603 MB/sec
                 ·gc.alloc.rate.norm:              16.000 B/op
                 ·gc.churn.G1_Eden_Space:          3234.538 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     16.089 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:                        88.000 counts
                 ·gc.time:                         48.000 ms

Iteration   3: 4.454 ns/op
                 ·gc.alloc.rate:                   3264.034 MB/sec
                 ·gc.alloc.rate.norm:              16.008 B/op
                 ·gc.churn.G1_Eden_Space:          3271.227 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     16.043 B/op
                 ·gc.churn.G1_Survivor_Space:      0.011 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        89.000 counts
                 ·gc.time:                         49.000 ms

Iteration   4: 4.513 ns/op
                 ·gc.alloc.rate:                   3220.061 MB/sec
                 ·gc.alloc.rate.norm:              16.000 B/op
                 ·gc.churn.G1_Eden_Space:          3197.901 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     15.890 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:                        87.000 counts
                 ·gc.time:                         47.000 ms

Iteration   5: 4.560 ns/op
                 ·gc.alloc.rate:                   3186.321 MB/sec
                 ·gc.alloc.rate.norm:              16.000 B/op
                 ·gc.churn.G1_Eden_Space:          3197.581 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     16.057 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:                        87.000 counts
                 ·gc.time:                         53.000 ms


# Run progress: 4.76% complete, ETA 00:35:09
# Fork: 2 of 3
# Warmup Iteration   1: 5.755 ns/op
# Warmup Iteration   2: 5.352 ns/op
# Warmup Iteration   3: 5.366 ns/op
# Warmup Iteration   4: 5.233 ns/op
# Warmup Iteration   5: 5.180 ns/op
Iteration   1: 5.198 ns/op
                 ·gc.alloc.rate:                   2796.324 MB/sec
                 ·gc.alloc.rate.norm:              16.006 B/op
                 ·gc.churn.G1_Eden_Space:          2797.384 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     16.012 B/op
                 ·gc.churn.G1_Survivor_Space:      0.015 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        102.000 counts
                 ·gc.time:                         52.000 ms

Iteration   2: 5.267 ns/op
                 ·gc.alloc.rate:                   2759.163 MB/sec
                 ·gc.alloc.rate.norm:              16.003 B/op
                 ·gc.churn.G1_Eden_Space:          2742.493 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     15.906 B/op
                 ·gc.churn.G1_Survivor_Space:      0.006 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        100.000 counts
                 ·gc.time:                         51.000 ms

Iteration   3: 5.205 ns/op
                 ·gc.alloc.rate:                   2791.346 MB/sec
                 ·gc.alloc.rate.norm:              16.000 B/op
                 ·gc.churn.G1_Eden_Space:          2797.276 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     16.034 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:                        102.000 counts
                 ·gc.time:                         49.000 ms

Iteration   4: 5.305 ns/op
                 ·gc.alloc.rate:                   2739.167 MB/sec
                 ·gc.alloc.rate.norm:              16.001 B/op
                 ·gc.churn.G1_Eden_Space:          2742.334 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     16.019 B/op
                 ·gc.churn.G1_Survivor_Space:      0.006 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        100.000 counts
                 ·gc.time:                         47.000 ms

Iteration   5: 5.118 ns/op
                 ·gc.alloc.rate:                   2839.462 MB/sec
                 ·gc.alloc.rate.norm:              16.004 B/op
                 ·gc.churn.G1_Eden_Space:          2852.102 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     16.075 B/op
                 ·gc.churn.G1_Survivor_Space:      0.007 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        104.000 counts
                 ·gc.time:                         51.000 ms


# Run progress: 9.52% complete, ETA 00:33:22
# Fork: 3 of 3
# Warmup Iteration   1: 5.162 ns/op
# Warmup Iteration   2: 4.643 ns/op
# Warmup Iteration   3: 4.509 ns/op
# Warmup Iteration   4: 4.536 ns/op
# Warmup Iteration   5: 4.543 ns/op
Iteration   1: 4.505 ns/op
                 ·gc.alloc.rate:                   3226.860 MB/sec
                 ·gc.alloc.rate.norm:              16.007 B/op
                 ·gc.churn.G1_Eden_Space:          3235.155 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     16.048 B/op
                 ·gc.churn.G1_Survivor_Space:      0.012 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        137.000 counts
                 ·gc.time:                         64.000 ms

Iteration   2: 4.494 ns/op
                 ·gc.alloc.rate:                   3233.936 MB/sec
                 ·gc.alloc.rate.norm:              16.005 B/op
                 ·gc.churn.G1_Eden_Space:          3235.108 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     16.010 B/op
                 ·gc.churn.G1_Survivor_Space:      0.007 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        137.000 counts
                 ·gc.time:                         64.000 ms

Iteration   3: 4.473 ns/op
                 ·gc.alloc.rate:                   3249.412 MB/sec
                 ·gc.alloc.rate.norm:              16.006 B/op
                 ·gc.churn.G1_Eden_Space:          3251.711 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     16.017 B/op
                 ·gc.churn.G1_Survivor_Space:      0.008 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        126.000 counts
                 ·gc.time:                         62.000 ms

Iteration   4: 4.551 ns/op
                 ·gc.alloc.rate:                   3193.236 MB/sec
                 ·gc.alloc.rate.norm:              16.000 B/op
                 ·gc.churn.G1_Eden_Space:          3178.287 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     15.925 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:                        112.000 counts
                 ·gc.time:                         59.000 ms

Iteration   5: 4.601 ns/op
                 ·gc.alloc.rate:                   3160.757 MB/sec
                 ·gc.alloc.rate.norm:              16.015 B/op
                 ·gc.churn.G1_Eden_Space:          3178.064 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     16.103 B/op
                 ·gc.churn.G1_Survivor_Space:      0.015 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        112.000 counts
                 ·gc.time:                         57.000 ms



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.anonymous_class":
  4.751 ±(99.9%) 0.370 ns/op [Average]
  (min, avg, max) = (4.454, 4.751, 5.305), stdev = 0.347
  CI (99.9%): [4.380, 5.121] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.anonymous_class:·gc.alloc.rate":
  3073.851 ±(99.9%) 228.534 MB/sec [Average]
  (min, avg, max) = (2739.167, 3073.851, 3264.034), stdev = 213.771
  CI (99.9%): [2845.317, 3302.385] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.anonymous_class:·gc.alloc.rate.norm":
  16.004 ±(99.9%) 0.004 B/op [Average]
  (min, avg, max) = (16.000, 16.004, 16.015), stdev = 0.004
  CI (99.9%): [16.000, 16.008] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.anonymous_class:·gc.churn.G1_Eden_Space":
  3076.379 ±(99.9%) 230.074 MB/sec [Average]
  (min, avg, max) = (2742.334, 3076.379, 3271.227), stdev = 215.211
  CI (99.9%): [2846.305, 3306.453] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.anonymous_class:·gc.churn.G1_Eden_Space.norm":
  16.017 ±(99.9%) 0.068 B/op [Average]
  (min, avg, max) = (15.890, 16.017, 16.103), stdev = 0.063
  CI (99.9%): [15.949, 16.085] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.anonymous_class:·gc.churn.G1_Survivor_Space":
  0.012 ±(99.9%) 0.018 MB/sec [Average]
  (min, avg, max) = (0.003, 0.012, 0.073), stdev = 0.017
  CI (99.9%): [≈ 0, 0.030] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.anonymous_class:·gc.churn.G1_Survivor_Space.norm":
  ≈ 10⁻⁴ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.anonymous_class:·gc.count":
  1571.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (87.000, 104.733, 137.000), stdev = 17.190
  CI (99.9%): [1571.000, 1571.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.anonymous_class:·gc.time":
  798.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (45.000, 53.200, 64.000), stdev = 6.416
  CI (99.9%): [798.000, 798.000] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.bound_method_ref

# Run progress: 14.29% complete, ETA 00:31:36
# Fork: 1 of 3
# Warmup Iteration   1: 5.285 ns/op
# Warmup Iteration   2: 4.695 ns/op
# Warmup Iteration   3: 4.500 ns/op
# Warmup Iteration   4: 4.584 ns/op
# Warmup Iteration   5: 4.483 ns/op
Iteration   1: 4.638 ns/op
                 ·gc.alloc.rate:                   3132.577 MB/sec
                 ·gc.alloc.rate.norm:              16.000 B/op
                 ·gc.churn.G1_Eden_Space:          3159.470 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     16.137 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:                        105.000 counts
                 ·gc.time:                         58.000 ms

Iteration   2: 4.474 ns/op
                 ·gc.alloc.rate:                   3249.654 MB/sec
                 ·gc.alloc.rate.norm:              16.010 B/op
                 ·gc.churn.G1_Eden_Space:          3249.750 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     16.011 B/op
                 ·gc.churn.G1_Survivor_Space:      0.019 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        108.000 counts
                 ·gc.time:                         55.000 ms

Iteration   3: 4.579 ns/op
                 ·gc.alloc.rate:                   3173.833 MB/sec
                 ·gc.alloc.rate.norm:              16.002 B/op
                 ·gc.churn.G1_Eden_Space:          3159.340 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     15.929 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:                        105.000 counts
                 ·gc.time:                         52.000 ms

Iteration   4: 4.590 ns/op
                 ·gc.alloc.rate:                   3165.519 MB/sec
                 ·gc.alloc.rate.norm:              16.001 B/op
                 ·gc.churn.G1_Eden_Space:          3179.689 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     16.072 B/op
                 ·gc.churn.G1_Survivor_Space:      0.007 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        99.000 counts
                 ·gc.time:                         57.000 ms

Iteration   5: 4.494 ns/op
                 ·gc.alloc.rate:                   3233.095 MB/sec
                 ·gc.alloc.rate.norm:              16.000 B/op
                 ·gc.churn.G1_Eden_Space:          3239.387 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     16.031 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:                        90.000 counts
                 ·gc.time:                         44.000 ms


# Run progress: 19.05% complete, ETA 00:29:51
# Fork: 2 of 3
# Warmup Iteration   1: 5.161 ns/op
# Warmup Iteration   2: 4.594 ns/op
# Warmup Iteration   3: 4.490 ns/op
# Warmup Iteration   4: 4.547 ns/op
# Warmup Iteration   5: 4.534 ns/op
Iteration   1: 4.516 ns/op
                 ·gc.alloc.rate:                   3219.743 MB/sec
                 ·gc.alloc.rate.norm:              16.012 B/op
                 ·gc.churn.G1_Eden_Space:          3213.196 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     15.980 B/op
                 ·gc.churn.G1_Survivor_Space:      0.006 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:                        114.000 counts
                 ·gc.time:                         58.000 ms

Iteration   2: 4.534 ns/op
                 ·gc.alloc.rate:                   3205.740 MB/sec
                 ·gc.alloc.rate.norm:              16.004 B/op
                 ·gc.churn.G1_Eden_Space:          3213.058 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     16.041 B/op
                 ·gc.churn.G1_Survivor_Space:      0.013 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        114.000 counts
                 ·gc.time:                         63.000 ms

Iteration   3: 4.517 ns/op
                 ·gc.alloc.rate:                   3217.672 MB/sec
                 ·gc.alloc.rate.norm:              16.003 B/op
                 ·gc.churn.G1_Eden_Space:          3213.230 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     15.981 B/op
                 ·gc.churn.G1_Survivor_Space:      0.006 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:                        114.000 counts
                 ·gc.time:                         54.000 ms

Iteration   4: 4.573 ns/op
                 ·gc.alloc.rate:                   3177.806 MB/sec
                 ·gc.alloc.rate.norm:              16.000 B/op
                 ·gc.churn.G1_Eden_Space:          3197.766 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     16.100 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:                        110.000 counts
                 ·gc.time:                         63.000 ms

Iteration   5: 4.587 ns/op
                 ·gc.alloc.rate:                   3168.997 MB/sec
                 ·gc.alloc.rate.norm:              16.006 B/op
                 ·gc.churn.G1_Eden_Space:          3152.618 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     15.924 B/op
                 ·gc.churn.G1_Survivor_Space:      0.009 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        93.000 counts
                 ·gc.time:                         50.000 ms


# Run progress: 23.81% complete, ETA 00:28:05
# Fork: 3 of 3
# Warmup Iteration   1: 5.320 ns/op
# Warmup Iteration   2: 4.704 ns/op
# Warmup Iteration   3: 4.585 ns/op
# Warmup Iteration   4: 4.545 ns/op
# Warmup Iteration   5: 4.596 ns/op
Iteration   1: 4.547 ns/op
                 ·gc.alloc.rate:                   3195.458 MB/sec
                 ·gc.alloc.rate.norm:              16.000 B/op
                 ·gc.churn.G1_Eden_Space:          3188.818 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     15.967 B/op
                 ·gc.churn.G1_Survivor_Space:      0.006 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        92.000 counts
                 ·gc.time:                         48.000 ms

Iteration   2: 4.516 ns/op
                 ·gc.alloc.rate:                   3217.590 MB/sec
                 ·gc.alloc.rate.norm:              16.000 B/op
                 ·gc.churn.G1_Eden_Space:          3223.437 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     16.029 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:                        93.000 counts
                 ·gc.time:                         47.000 ms

Iteration   3: 4.598 ns/op
                 ·gc.alloc.rate:                   3162.517 MB/sec
                 ·gc.alloc.rate.norm:              16.012 B/op
                 ·gc.churn.G1_Eden_Space:          3154.106 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     15.969 B/op
                 ·gc.churn.G1_Survivor_Space:      0.016 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        91.000 counts
                 ·gc.time:                         56.000 ms

Iteration   4: 4.521 ns/op
                 ·gc.alloc.rate:                   3214.157 MB/sec
                 ·gc.alloc.rate.norm:              16.000 B/op
                 ·gc.churn.G1_Eden_Space:          3223.528 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     16.047 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:                        93.000 counts
                 ·gc.time:                         53.000 ms

Iteration   5: 4.508 ns/op
                 ·gc.alloc.rate:                   3223.205 MB/sec
                 ·gc.alloc.rate.norm:              16.001 B/op
                 ·gc.churn.G1_Eden_Space:          3223.466 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     16.002 B/op
                 ·gc.churn.G1_Survivor_Space:      0.006 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:                        93.000 counts
                 ·gc.time:                         51.000 ms



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.bound_method_ref":
  4.546 ±(99.9%) 0.049 ns/op [Average]
  (min, avg, max) = (4.474, 4.546, 4.638), stdev = 0.046
  CI (99.9%): [4.497, 4.595] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.bound_method_ref:·gc.alloc.rate":
  3197.171 ±(99.9%) 34.432 MB/sec [Average]
  (min, avg, max) = (3132.577, 3197.171, 3249.654), stdev = 32.208
  CI (99.9%): [3162.739, 3231.603] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.bound_method_ref:·gc.alloc.rate.norm":
  16.003 ±(99.9%) 0.005 B/op [Average]
  (min, avg, max) = (16.000, 16.003, 16.012), stdev = 0.005
  CI (99.9%): [15.999, 16.008] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.bound_method_ref:·gc.churn.G1_Eden_Space":
  3199.391 ±(99.9%) 34.267 MB/sec [Average]
  (min, avg, max) = (3152.618, 3199.391, 3249.750), stdev = 32.053
  CI (99.9%): [3165.124, 3233.658] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.bound_method_ref:·gc.churn.G1_Eden_Space.norm":
  16.015 ±(99.9%) 0.064 B/op [Average]
  (min, avg, max) = (15.924, 16.015, 16.137), stdev = 0.060
  CI (99.9%): [15.951, 16.079] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.bound_method_ref:·gc.churn.G1_Survivor_Space":
  0.007 ±(99.9%) 0.005 MB/sec [Average]
  (min, avg, max) = (0.002, 0.007, 0.019), stdev = 0.005
  CI (99.9%): [0.002, 0.013] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.bound_method_ref:·gc.churn.G1_Survivor_Space.norm":
  ≈ 10⁻⁴ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.bound_method_ref:·gc.count":
  1514.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (90.000, 100.933, 114.000), stdev = 9.377
  CI (99.9%): [1514.000, 1514.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.bound_method_ref:·gc.time":
  809.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (44.000, 53.933, 63.000), stdev = 5.496
  CI (99.9%): [809.000, 809.000] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.capturing_lambda
# Parameters: (param = 42)

# Run progress: 28.57% complete, ETA 00:26:20
# Fork: 1 of 3
# Warmup Iteration   1: 2.915 ns/op
# Warmup Iteration   2: 2.596 ns/op
# Warmup Iteration   3: 2.591 ns/op
# Warmup Iteration   4: 2.683 ns/op
# Warmup Iteration   5: 2.661 ns/op
Iteration   1: 2.654 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.650 ns/op
                 ·gc.alloc.rate:      0.021 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.648 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.630 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.637 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 33.33% complete, ETA 00:24:34
# Fork: 2 of 3
# Warmup Iteration   1: 2.857 ns/op
# Warmup Iteration   2: 2.752 ns/op
# Warmup Iteration   3: 2.732 ns/op
# Warmup Iteration   4: 2.530 ns/op
# Warmup Iteration   5: 2.633 ns/op
Iteration   1: 2.624 ns/op
                 ·gc.alloc.rate:      0.079 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.625 ns/op
                 ·gc.alloc.rate:      0.471 MB/sec
                 ·gc.alloc.rate.norm: 0.001 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.540 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.739 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.731 ns/op
                 ·gc.alloc.rate:      0.076 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 38.10% complete, ETA 00:22:49
# Fork: 3 of 3
# Warmup Iteration   1: 2.948 ns/op
# Warmup Iteration   2: 2.743 ns/op
# Warmup Iteration   3: 2.528 ns/op
# Warmup Iteration   4: 2.562 ns/op
# Warmup Iteration   5: 2.631 ns/op
Iteration   1: 2.623 ns/op
                 ·gc.alloc.rate:      0.004 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.786 ns/op
                 ·gc.alloc.rate:                   1.231 MB/sec
                 ·gc.alloc.rate.norm:              0.004 B/op
                 ·gc.churn.G1_Eden_Space:          3.809 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     0.012 B/op
                 ·gc.churn.G1_Survivor_Space:      0.012 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        1.000 counts
                 ·gc.time:                         3.000 ms

Iteration   3: 2.612 ns/op
                 ·gc.alloc.rate:      0.007 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.606 ns/op
                 ·gc.alloc.rate:      0.018 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.617 ns/op
                 ·gc.alloc.rate:      0.020 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.capturing_lambda":
  2.648 ±(99.9%) 0.065 ns/op [Average]
  (min, avg, max) = (2.540, 2.648, 2.786), stdev = 0.061
  CI (99.9%): [2.583, 2.713] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.capturing_lambda:·gc.alloc.rate":
  0.129 ±(99.9%) 0.350 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.129, 1.231), stdev = 0.328
  CI (99.9%): [≈ 0, 0.479] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.capturing_lambda:·gc.alloc.rate.norm":
  ≈ 10⁻³ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.capturing_lambda:·gc.churn.G1_Eden_Space":
  0.254 ±(99.9%) 1.051 MB/sec [Average]
  (min, avg, max) = (≈ 0, 0.254, 3.809), stdev = 0.983
  CI (99.9%): [≈ 0, 1.305] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.capturing_lambda:·gc.churn.G1_Eden_Space.norm":
  0.001 ±(99.9%) 0.003 B/op [Average]
  (min, avg, max) = (≈ 0, 0.001, 0.012), stdev = 0.003
  CI (99.9%): [≈ 0, 0.004] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.capturing_lambda:·gc.churn.G1_Survivor_Space":
  0.001 ±(99.9%) 0.003 MB/sec [Average]
  (min, avg, max) = (≈ 0, 0.001, 0.012), stdev = 0.003
  CI (99.9%): [≈ 0, 0.004] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.capturing_lambda:·gc.churn.G1_Survivor_Space.norm":
  ≈ 10⁻⁶ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.capturing_lambda:·gc.count":
  1.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (≈ 0, 0.067, 1.000), stdev = 0.258
  CI (99.9%): [1.000, 1.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.capturing_lambda:·gc.time":
  3.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 0.200, 3.000), stdev = 0.775
  CI (99.9%): [3.000, 3.000] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.inner_class

# Run progress: 42.86% complete, ETA 00:21:04
# Fork: 1 of 3
# Warmup Iteration   1: 5.115 ns/op
# Warmup Iteration   2: 4.568 ns/op
# Warmup Iteration   3: 4.507 ns/op
# Warmup Iteration   4: 4.516 ns/op
# Warmup Iteration   5: 4.549 ns/op
Iteration   1: 4.547 ns/op
                 ·gc.alloc.rate:                   3195.418 MB/sec
                 ·gc.alloc.rate.norm:              16.000 B/op
                 ·gc.churn.G1_Eden_Space:          3188.017 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     15.963 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:                        93.000 counts
                 ·gc.time:                         47.000 ms

Iteration   2: 4.581 ns/op
                 ·gc.alloc.rate:                   3176.336 MB/sec
                 ·gc.alloc.rate.norm:              16.021 B/op
                 ·gc.churn.G1_Eden_Space:          3188.071 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     16.080 B/op
                 ·gc.churn.G1_Survivor_Space:      0.040 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        93.000 counts
                 ·gc.time:                         54.000 ms

Iteration   3: 4.552 ns/op
                 ·gc.alloc.rate:                   3192.314 MB/sec
                 ·gc.alloc.rate.norm:              16.000 B/op
                 ·gc.churn.G1_Eden_Space:          3188.112 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     15.979 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:                        93.000 counts
                 ·gc.time:                         52.000 ms

Iteration   4: 4.546 ns/op
                 ·gc.alloc.rate:                   3196.656 MB/sec
                 ·gc.alloc.rate.norm:              16.001 B/op
                 ·gc.churn.G1_Eden_Space:          3222.413 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     16.130 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:                        94.000 counts
                 ·gc.time:                         50.000 ms

Iteration   5: 4.580 ns/op
                 ·gc.alloc.rate:                   3172.307 MB/sec
                 ·gc.alloc.rate.norm:              16.000 B/op
                 ·gc.churn.G1_Eden_Space:          3153.793 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     15.907 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:                        92.000 counts
                 ·gc.time:                         46.000 ms


# Run progress: 47.62% complete, ETA 00:19:18
# Fork: 2 of 3
# Warmup Iteration   1: 5.230 ns/op
# Warmup Iteration   2: 4.613 ns/op
# Warmup Iteration   3: 4.492 ns/op
# Warmup Iteration   4: 4.558 ns/op
# Warmup Iteration   5: 4.555 ns/op
Iteration   1: 4.516 ns/op
                 ·gc.alloc.rate:                   3217.500 MB/sec
                 ·gc.alloc.rate.norm:              16.000 B/op
                 ·gc.churn.G1_Eden_Space:          3204.407 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     15.935 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:                        94.000 counts
                 ·gc.time:                         50.000 ms

Iteration   2: 4.550 ns/op
                 ·gc.alloc.rate:                   3194.638 MB/sec
                 ·gc.alloc.rate.norm:              16.007 B/op
                 ·gc.churn.G1_Eden_Space:          3204.419 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     16.056 B/op
                 ·gc.churn.G1_Survivor_Space:      0.015 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        94.000 counts
                 ·gc.time:                         58.000 ms

Iteration   3: 4.432 ns/op
                 ·gc.alloc.rate:                   3278.543 MB/sec
                 ·gc.alloc.rate.norm:              16.001 B/op
                 ·gc.churn.G1_Eden_Space:          3272.613 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     15.972 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:                        96.000 counts
                 ·gc.time:                         50.000 ms

Iteration   4: 4.444 ns/op
                 ·gc.alloc.rate:                   3270.055 MB/sec
                 ·gc.alloc.rate.norm:              16.000 B/op
                 ·gc.churn.G1_Eden_Space:          3272.698 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     16.013 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:                        96.000 counts
                 ·gc.time:                         49.000 ms

Iteration   5: 4.526 ns/op
                 ·gc.alloc.rate:                   3210.389 MB/sec
                 ·gc.alloc.rate.norm:              16.001 B/op
                 ·gc.churn.G1_Eden_Space:          3204.638 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     15.972 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:                        94.000 counts
                 ·gc.time:                         51.000 ms


# Run progress: 52.38% complete, ETA 00:17:33
# Fork: 3 of 3
# Warmup Iteration   1: 5.135 ns/op
# Warmup Iteration   2: 4.749 ns/op
# Warmup Iteration   3: 4.553 ns/op
# Warmup Iteration   4: 4.570 ns/op
# Warmup Iteration   5: 4.539 ns/op
Iteration   1: 4.506 ns/op
                 ·gc.alloc.rate:                   3225.568 MB/sec
                 ·gc.alloc.rate.norm:              16.003 B/op
                 ·gc.churn.G1_Eden_Space:          3228.906 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     16.019 B/op
                 ·gc.churn.G1_Survivor_Space:      0.007 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        98.000 counts
                 ·gc.time:                         52.000 ms

Iteration   2: 4.559 ns/op
                 ·gc.alloc.rate:                   3188.254 MB/sec
                 ·gc.alloc.rate.norm:              16.005 B/op
                 ·gc.churn.G1_Eden_Space:          3195.884 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     16.043 B/op
                 ·gc.churn.G1_Survivor_Space:      0.006 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:                        97.000 counts
                 ·gc.time:                         48.000 ms

Iteration   3: 4.544 ns/op
                 ·gc.alloc.rate:                   3198.444 MB/sec
                 ·gc.alloc.rate.norm:              16.004 B/op
                 ·gc.churn.G1_Eden_Space:          3195.968 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     15.991 B/op
                 ·gc.churn.G1_Survivor_Space:      0.013 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        97.000 counts
                 ·gc.time:                         60.000 ms

Iteration   4: 4.477 ns/op
                 ·gc.alloc.rate:                   3245.849 MB/sec
                 ·gc.alloc.rate.norm:              16.000 B/op
                 ·gc.churn.G1_Eden_Space:          3261.860 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     16.079 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:                        99.000 counts
                 ·gc.time:                         60.000 ms

Iteration   5: 4.549 ns/op
                 ·gc.alloc.rate:                   3193.780 MB/sec
                 ·gc.alloc.rate.norm:              16.001 B/op
                 ·gc.churn.G1_Eden_Space:          3195.691 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     16.010 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:                        97.000 counts
                 ·gc.time:                         53.000 ms



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.inner_class":
  4.527 ±(99.9%) 0.048 ns/op [Average]
  (min, avg, max) = (4.432, 4.527, 4.581), stdev = 0.045
  CI (99.9%): [4.479, 4.575] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.inner_class:·gc.alloc.rate":
  3210.403 ±(99.9%) 34.106 MB/sec [Average]
  (min, avg, max) = (3172.307, 3210.403, 3278.543), stdev = 31.903
  CI (99.9%): [3176.297, 3244.510] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.inner_class:·gc.alloc.rate.norm":
  16.003 ±(99.9%) 0.006 B/op [Average]
  (min, avg, max) = (16.000, 16.003, 16.021), stdev = 0.005
  CI (99.9%): [15.997, 16.009] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.inner_class:·gc.churn.G1_Eden_Space":
  3211.833 ±(99.9%) 36.474 MB/sec [Average]
  (min, avg, max) = (3153.793, 3211.833, 3272.698), stdev = 34.118
  CI (99.9%): [3175.359, 3248.307] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.inner_class:·gc.churn.G1_Eden_Space.norm":
  16.010 ±(99.9%) 0.064 B/op [Average]
  (min, avg, max) = (15.907, 16.010, 16.130), stdev = 0.060
  CI (99.9%): [15.946, 16.074] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.inner_class:·gc.churn.G1_Survivor_Space":
  0.008 ±(99.9%) 0.010 MB/sec [Average]
  (min, avg, max) = (0.003, 0.008, 0.040), stdev = 0.010
  CI (99.9%): [≈ 0, 0.018] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.inner_class:·gc.churn.G1_Survivor_Space.norm":
  ≈ 10⁻⁴ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.inner_class:·gc.count":
  1427.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (92.000, 95.133, 99.000), stdev = 2.134
  CI (99.9%): [1427.000, 1427.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.inner_class:·gc.time":
  780.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (46.000, 52.000, 60.000), stdev = 4.375
  CI (99.9%): [780.000, 780.000] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.lambda

# Run progress: 57.14% complete, ETA 00:15:47
# Fork: 1 of 3
# Warmup Iteration   1: 2.920 ns/op
# Warmup Iteration   2: 2.793 ns/op
# Warmup Iteration   3: 2.767 ns/op
# Warmup Iteration   4: 2.757 ns/op
# Warmup Iteration   5: 2.750 ns/op
Iteration   1: 2.746 ns/op
                 ·gc.alloc.rate:                   1.394 MB/sec
                 ·gc.alloc.rate.norm:              0.004 B/op
                 ·gc.churn.G1_Eden_Space:          2.095 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     0.006 B/op
                 ·gc.churn.G1_Survivor_Space:      0.084 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        1.000 counts
                 ·gc.time:                         3.000 ms

Iteration   2: 2.746 ns/op
                 ·gc.alloc.rate:      0.434 MB/sec
                 ·gc.alloc.rate.norm: 0.001 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.744 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.733 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.731 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 61.90% complete, ETA 00:14:02
# Fork: 2 of 3
# Warmup Iteration   1: 2.789 ns/op
# Warmup Iteration   2: 2.607 ns/op
# Warmup Iteration   3: 2.789 ns/op
# Warmup Iteration   4: 2.635 ns/op
# Warmup Iteration   5: 2.628 ns/op
Iteration   1: 2.759 ns/op
                 ·gc.alloc.rate:      0.480 MB/sec
                 ·gc.alloc.rate.norm: 0.001 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.738 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.527 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.536 ns/op
                 ·gc.alloc.rate:      0.011 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.546 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 66.67% complete, ETA 00:12:17
# Fork: 3 of 3
# Warmup Iteration   1: 2.914 ns/op
# Warmup Iteration   2: 2.778 ns/op
# Warmup Iteration   3: 2.630 ns/op
# Warmup Iteration   4: 2.772 ns/op
# Warmup Iteration   5: 2.761 ns/op
Iteration   1: 2.757 ns/op
                 ·gc.alloc.rate:               1.279 MB/sec
                 ·gc.alloc.rate.norm:          0.004 B/op
                 ·gc.churn.G1_Eden_Space:      3.428 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 0.010 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     2.000 ms

Iteration   2: 2.526 ns/op
                 ·gc.alloc.rate:      0.555 MB/sec
                 ·gc.alloc.rate.norm: 0.002 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.532 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.735 ns/op
                 ·gc.alloc.rate:      0.017 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.724 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.lambda":
  2.672 ±(99.9%) 0.109 ns/op [Average]
  (min, avg, max) = (2.526, 2.672, 2.759), stdev = 0.102
  CI (99.9%): [2.563, 2.781] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.lambda:·gc.alloc.rate":
  0.278 ±(99.9%) 0.507 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.278, 1.394), stdev = 0.474
  CI (99.9%): [≈ 0, 0.785] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.lambda:·gc.alloc.rate.norm":
  0.001 ±(99.9%) 0.002 B/op [Average]
  (min, avg, max) = (≈ 10⁻⁷, 0.001, 0.004), stdev = 0.001
  CI (99.9%): [≈ 0, 0.002] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.lambda:·gc.churn.G1_Eden_Space":
  0.368 ±(99.9%) 1.073 MB/sec [Average]
  (min, avg, max) = (≈ 0, 0.368, 3.428), stdev = 1.004
  CI (99.9%): [≈ 0, 1.441] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.lambda:·gc.churn.G1_Eden_Space.norm":
  0.001 ±(99.9%) 0.003 B/op [Average]
  (min, avg, max) = (≈ 0, 0.001, 0.010), stdev = 0.003
  CI (99.9%): [≈ 0, 0.004] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.lambda:·gc.churn.G1_Survivor_Space":
  0.006 ±(99.9%) 0.023 MB/sec [Average]
  (min, avg, max) = (≈ 0, 0.006, 0.084), stdev = 0.022
  CI (99.9%): [≈ 0, 0.029] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.lambda:·gc.churn.G1_Survivor_Space.norm":
  ≈ 10⁻⁵ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.lambda:·gc.count":
  2.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (≈ 0, 0.133, 1.000), stdev = 0.352
  CI (99.9%): [2.000, 2.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.lambda:·gc.time":
  5.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 0.333, 3.000), stdev = 0.900
  CI (99.9%): [5.000, 5.000] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.static_method_ref

# Run progress: 71.43% complete, ETA 00:10:31
# Fork: 1 of 3
# Warmup Iteration   1: 2.935 ns/op
# Warmup Iteration   2: 2.720 ns/op
# Warmup Iteration   3: 2.720 ns/op
# Warmup Iteration   4: 2.762 ns/op
# Warmup Iteration   5: 2.757 ns/op
Iteration   1: 2.587 ns/op
                 ·gc.alloc.rate:      0.081 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.721 ns/op
                 ·gc.alloc.rate:      0.010 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.720 ns/op
                 ·gc.alloc.rate:      0.123 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.716 ns/op
                 ·gc.alloc.rate:      0.415 MB/sec
                 ·gc.alloc.rate.norm: 0.001 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.600 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 76.19% complete, ETA 00:08:46
# Fork: 2 of 3
# Warmup Iteration   1: 2.908 ns/op
# Warmup Iteration   2: 2.737 ns/op
# Warmup Iteration   3: 2.607 ns/op
# Warmup Iteration   4: 2.529 ns/op
# Warmup Iteration   5: 2.720 ns/op
Iteration   1: 2.533 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.534 ns/op
                 ·gc.alloc.rate:      0.422 MB/sec
                 ·gc.alloc.rate.norm: 0.001 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.535 ns/op
                 ·gc.alloc.rate:      0.076 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.612 ns/op
                 ·gc.alloc.rate:      0.078 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.623 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 80.95% complete, ETA 00:07:01
# Fork: 3 of 3
# Warmup Iteration   1: 2.805 ns/op
# Warmup Iteration   2: 2.545 ns/op
# Warmup Iteration   3: 2.760 ns/op
# Warmup Iteration   4: 2.764 ns/op
# Warmup Iteration   5: 2.605 ns/op
Iteration   1: 2.609 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.710 ns/op
                 ·gc.alloc.rate:               0.797 MB/sec
                 ·gc.alloc.rate.norm:          0.002 B/op
                 ·gc.churn.G1_Eden_Space:      3.809 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 0.011 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     2.000 ms

Iteration   3: 2.752 ns/op
                 ·gc.alloc.rate:      0.007 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.722 ns/op
                 ·gc.alloc.rate:      1.137 MB/sec
                 ·gc.alloc.rate.norm: 0.003 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.706 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.static_method_ref":
  2.645 ±(99.9%) 0.084 ns/op [Average]
  (min, avg, max) = (2.533, 2.645, 2.752), stdev = 0.079
  CI (99.9%): [2.561, 2.730] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.static_method_ref:·gc.alloc.rate":
  0.210 ±(99.9%) 0.367 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.210, 1.137), stdev = 0.343
  CI (99.9%): [≈ 0, 0.577] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.static_method_ref:·gc.alloc.rate.norm":
  0.001 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (≈ 10⁻⁷, 0.001, 0.003), stdev = 0.001
  CI (99.9%): [≈ 0, 0.002] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.static_method_ref:·gc.churn.G1_Eden_Space":
  0.254 ±(99.9%) 1.051 MB/sec [Average]
  (min, avg, max) = (≈ 0, 0.254, 3.809), stdev = 0.983
  CI (99.9%): [≈ 0, 1.305] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.static_method_ref:·gc.churn.G1_Eden_Space.norm":
  0.001 ±(99.9%) 0.003 B/op [Average]
  (min, avg, max) = (≈ 0, 0.001, 0.011), stdev = 0.003
  CI (99.9%): [≈ 0, 0.004] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.static_method_ref:·gc.count":
  1.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (≈ 0, 0.067, 1.000), stdev = 0.258
  CI (99.9%): [1.000, 1.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.static_method_ref:·gc.time":
  2.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 0.133, 2.000), stdev = 0.516
  CI (99.9%): [2.000, 2.000] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.unbound_method_ref

# Run progress: 85.71% complete, ETA 00:05:15
# Fork: 1 of 3
# Warmup Iteration   1: 2.733 ns/op
# Warmup Iteration   2: 2.777 ns/op
# Warmup Iteration   3: 2.771 ns/op
# Warmup Iteration   4: 2.752 ns/op
# Warmup Iteration   5: 2.752 ns/op
Iteration   1: 2.748 ns/op
                 ·gc.alloc.rate:      0.001 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.699 ns/op
                 ·gc.alloc.rate:      0.078 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.695 ns/op
                 ·gc.alloc.rate:      0.121 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.697 ns/op
                 ·gc.alloc.rate:      0.541 MB/sec
                 ·gc.alloc.rate.norm: 0.002 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.693 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 90.48% complete, ETA 00:03:30
# Fork: 2 of 3
# Warmup Iteration   1: 2.927 ns/op
# Warmup Iteration   2: 2.749 ns/op
# Warmup Iteration   3: 2.748 ns/op
# Warmup Iteration   4: 2.745 ns/op
# Warmup Iteration   5: 2.699 ns/op
Iteration   1: 2.743 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.760 ns/op
                 ·gc.alloc.rate:      0.003 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.697 ns/op
                 ·gc.alloc.rate:      0.079 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.518 ns/op
                 ·gc.alloc.rate:      0.001 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.582 ns/op
                 ·gc.alloc.rate:               0.580 MB/sec
                 ·gc.alloc.rate.norm:          0.002 B/op
                 ·gc.churn.G1_Eden_Space:      3.809 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 0.011 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     2.000 ms


# Run progress: 95.24% complete, ETA 00:01:45
# Fork: 3 of 3
# Warmup Iteration   1: 2.934 ns/op
# Warmup Iteration   2: 2.538 ns/op
# Warmup Iteration   3: 2.527 ns/op
# Warmup Iteration   4: 2.759 ns/op
# Warmup Iteration   5: 2.745 ns/op
Iteration   1: 2.742 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.746 ns/op
                 ·gc.alloc.rate:                   1.073 MB/sec
                 ·gc.alloc.rate.norm:              0.003 B/op
                 ·gc.churn.G1_Eden_Space:          2.095 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     0.006 B/op
                 ·gc.churn.G1_Survivor_Space:      0.052 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        1.000 counts
                 ·gc.time:                         3.000 ms

Iteration   3: 2.588 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.601 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.513 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.unbound_method_ref":
  2.668 ±(99.9%) 0.091 ns/op [Average]
  (min, avg, max) = (2.513, 2.668, 2.760), stdev = 0.085
  CI (99.9%): [2.577, 2.759] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.unbound_method_ref:·gc.alloc.rate":
  0.165 ±(99.9%) 0.338 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.165, 1.073), stdev = 0.316
  CI (99.9%): [≈ 0, 0.503] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.unbound_method_ref:·gc.alloc.rate.norm":
  ≈ 10⁻³ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.unbound_method_ref:·gc.churn.G1_Eden_Space":
  0.394 ±(99.9%) 1.163 MB/sec [Average]
  (min, avg, max) = (≈ 0, 0.394, 3.809), stdev = 1.088
  CI (99.9%): [≈ 0, 1.557] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.unbound_method_ref:·gc.churn.G1_Eden_Space.norm":
  0.001 ±(99.9%) 0.003 B/op [Average]
  (min, avg, max) = (≈ 0, 0.001, 0.011), stdev = 0.003
  CI (99.9%): [≈ 0, 0.004] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.unbound_method_ref:·gc.churn.G1_Survivor_Space":
  0.003 ±(99.9%) 0.014 MB/sec [Average]
  (min, avg, max) = (≈ 0, 0.003, 0.052), stdev = 0.013
  CI (99.9%): [≈ 0, 0.018] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.unbound_method_ref:·gc.churn.G1_Survivor_Space.norm":
  ≈ 10⁻⁵ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.unbound_method_ref:·gc.count":
  2.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (≈ 0, 0.133, 1.000), stdev = 0.352
  CI (99.9%): [2.000, 2.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.unbound_method_ref:·gc.time":
  5.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 0.333, 3.000), stdev = 0.900
  CI (99.9%): [5.000, 5.000] (assumes normal distribution)


# Run complete. Total time: 00:36:51

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                                                      (param)  Mode  Cnt     Score     Error   Units
LambdaAllocationBenchmark.anonymous_class                                          N/A  avgt   15     4.751 ±   0.370   ns/op
LambdaAllocationBenchmark.anonymous_class:·gc.alloc.rate                           N/A  avgt   15  3073.851 ± 228.534  MB/sec
LambdaAllocationBenchmark.anonymous_class:·gc.alloc.rate.norm                      N/A  avgt   15    16.004 ±   0.004    B/op
LambdaAllocationBenchmark.anonymous_class:·gc.churn.G1_Eden_Space                  N/A  avgt   15  3076.379 ± 230.074  MB/sec
LambdaAllocationBenchmark.anonymous_class:·gc.churn.G1_Eden_Space.norm             N/A  avgt   15    16.017 ±   0.068    B/op
LambdaAllocationBenchmark.anonymous_class:·gc.churn.G1_Survivor_Space              N/A  avgt   15     0.012 ±   0.018  MB/sec
LambdaAllocationBenchmark.anonymous_class:·gc.churn.G1_Survivor_Space.norm         N/A  avgt   15    ≈ 10⁻⁴              B/op
LambdaAllocationBenchmark.anonymous_class:·gc.count                                N/A  avgt   15  1571.000            counts
LambdaAllocationBenchmark.anonymous_class:·gc.time                                 N/A  avgt   15   798.000                ms
LambdaAllocationBenchmark.bound_method_ref                                         N/A  avgt   15     4.546 ±   0.049   ns/op
LambdaAllocationBenchmark.bound_method_ref:·gc.alloc.rate                          N/A  avgt   15  3197.171 ±  34.432  MB/sec
LambdaAllocationBenchmark.bound_method_ref:·gc.alloc.rate.norm                     N/A  avgt   15    16.003 ±   0.005    B/op
LambdaAllocationBenchmark.bound_method_ref:·gc.churn.G1_Eden_Space                 N/A  avgt   15  3199.391 ±  34.267  MB/sec
LambdaAllocationBenchmark.bound_method_ref:·gc.churn.G1_Eden_Space.norm            N/A  avgt   15    16.015 ±   0.064    B/op
LambdaAllocationBenchmark.bound_method_ref:·gc.churn.G1_Survivor_Space             N/A  avgt   15     0.007 ±   0.005  MB/sec
LambdaAllocationBenchmark.bound_method_ref:·gc.churn.G1_Survivor_Space.norm        N/A  avgt   15    ≈ 10⁻⁴              B/op
LambdaAllocationBenchmark.bound_method_ref:·gc.count                               N/A  avgt   15  1514.000            counts
LambdaAllocationBenchmark.bound_method_ref:·gc.time                                N/A  avgt   15   809.000                ms
LambdaAllocationBenchmark.capturing_lambda                                          42  avgt   15     2.648 ±   0.065   ns/op
LambdaAllocationBenchmark.capturing_lambda:·gc.alloc.rate                           42  avgt   15     0.129 ±   0.350  MB/sec
LambdaAllocationBenchmark.capturing_lambda:·gc.alloc.rate.norm                      42  avgt   15    ≈ 10⁻³              B/op
LambdaAllocationBenchmark.capturing_lambda:·gc.churn.G1_Eden_Space                  42  avgt   15     0.254 ±   1.051  MB/sec
LambdaAllocationBenchmark.capturing_lambda:·gc.churn.G1_Eden_Space.norm             42  avgt   15     0.001 ±   0.003    B/op
LambdaAllocationBenchmark.capturing_lambda:·gc.churn.G1_Survivor_Space              42  avgt   15     0.001 ±   0.003  MB/sec
LambdaAllocationBenchmark.capturing_lambda:·gc.churn.G1_Survivor_Space.norm         42  avgt   15    ≈ 10⁻⁶              B/op
LambdaAllocationBenchmark.capturing_lambda:·gc.count                                42  avgt   15     1.000            counts
LambdaAllocationBenchmark.capturing_lambda:·gc.time                                 42  avgt   15     3.000                ms
LambdaAllocationBenchmark.inner_class                                              N/A  avgt   15     4.527 ±   0.048   ns/op
LambdaAllocationBenchmark.inner_class:·gc.alloc.rate                               N/A  avgt   15  3210.403 ±  34.106  MB/sec
LambdaAllocationBenchmark.inner_class:·gc.alloc.rate.norm                          N/A  avgt   15    16.003 ±   0.006    B/op
LambdaAllocationBenchmark.inner_class:·gc.churn.G1_Eden_Space                      N/A  avgt   15  3211.833 ±  36.474  MB/sec
LambdaAllocationBenchmark.inner_class:·gc.churn.G1_Eden_Space.norm                 N/A  avgt   15    16.010 ±   0.064    B/op
LambdaAllocationBenchmark.inner_class:·gc.churn.G1_Survivor_Space                  N/A  avgt   15     0.008 ±   0.010  MB/sec
LambdaAllocationBenchmark.inner_class:·gc.churn.G1_Survivor_Space.norm             N/A  avgt   15    ≈ 10⁻⁴              B/op
LambdaAllocationBenchmark.inner_class:·gc.count                                    N/A  avgt   15  1427.000            counts
LambdaAllocationBenchmark.inner_class:·gc.time                                     N/A  avgt   15   780.000                ms
LambdaAllocationBenchmark.lambda                                                   N/A  avgt   15     2.672 ±   0.109   ns/op
LambdaAllocationBenchmark.lambda:·gc.alloc.rate                                    N/A  avgt   15     0.278 ±   0.507  MB/sec
LambdaAllocationBenchmark.lambda:·gc.alloc.rate.norm                               N/A  avgt   15     0.001 ±   0.002    B/op
LambdaAllocationBenchmark.lambda:·gc.churn.G1_Eden_Space                           N/A  avgt   15     0.368 ±   1.073  MB/sec
LambdaAllocationBenchmark.lambda:·gc.churn.G1_Eden_Space.norm                      N/A  avgt   15     0.001 ±   0.003    B/op
LambdaAllocationBenchmark.lambda:·gc.churn.G1_Survivor_Space                       N/A  avgt   15     0.006 ±   0.023  MB/sec
LambdaAllocationBenchmark.lambda:·gc.churn.G1_Survivor_Space.norm                  N/A  avgt   15    ≈ 10⁻⁵              B/op
LambdaAllocationBenchmark.lambda:·gc.count                                         N/A  avgt   15     2.000            counts
LambdaAllocationBenchmark.lambda:·gc.time                                          N/A  avgt   15     5.000                ms
LambdaAllocationBenchmark.static_method_ref                                        N/A  avgt   15     2.645 ±   0.084   ns/op
LambdaAllocationBenchmark.static_method_ref:·gc.alloc.rate                         N/A  avgt   15     0.210 ±   0.367  MB/sec
LambdaAllocationBenchmark.static_method_ref:·gc.alloc.rate.norm                    N/A  avgt   15     0.001 ±   0.001    B/op
LambdaAllocationBenchmark.static_method_ref:·gc.churn.G1_Eden_Space                N/A  avgt   15     0.254 ±   1.051  MB/sec
LambdaAllocationBenchmark.static_method_ref:·gc.churn.G1_Eden_Space.norm           N/A  avgt   15     0.001 ±   0.003    B/op
LambdaAllocationBenchmark.static_method_ref:·gc.count                              N/A  avgt   15     1.000            counts
LambdaAllocationBenchmark.static_method_ref:·gc.time                               N/A  avgt   15     2.000                ms
LambdaAllocationBenchmark.unbound_method_ref                                       N/A  avgt   15     2.668 ±   0.091   ns/op
LambdaAllocationBenchmark.unbound_method_ref:·gc.alloc.rate                        N/A  avgt   15     0.165 ±   0.338  MB/sec
LambdaAllocationBenchmark.unbound_method_ref:·gc.alloc.rate.norm                   N/A  avgt   15    ≈ 10⁻³              B/op
LambdaAllocationBenchmark.unbound_method_ref:·gc.churn.G1_Eden_Space               N/A  avgt   15     0.394 ±   1.163  MB/sec
LambdaAllocationBenchmark.unbound_method_ref:·gc.churn.G1_Eden_Space.norm          N/A  avgt   15     0.001 ±   0.003    B/op
LambdaAllocationBenchmark.unbound_method_ref:·gc.churn.G1_Survivor_Space           N/A  avgt   15     0.003 ±   0.014  MB/sec
LambdaAllocationBenchmark.unbound_method_ref:·gc.churn.G1_Survivor_Space.norm      N/A  avgt   15    ≈ 10⁻⁵              B/op
LambdaAllocationBenchmark.unbound_method_ref:·gc.count                             N/A  avgt   15     2.000            counts
LambdaAllocationBenchmark.unbound_method_ref:·gc.time                              N/A  avgt   15     5.000                ms

Benchmark result is saved to results/report-openjdk-13/hotspotvm_graal_jit/LambdaAllocationBenchmark.json
Running java -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler -jar benchmarks/target/benchmarks.jar .*ScalarReplacementBenchmark.* -prof gc -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_graal_jit/ScalarReplacementBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ScalarReplacementBenchmark.arg_escape_object
# Parameters: (objectEscapes = false, param = 3, size = 128)

# Run progress: 0.00% complete, ETA 00:20:00
# Fork: 1 of 3
# Warmup Iteration   1: 3.104 ns/op
# Warmup Iteration   2: 2.906 ns/op
# Warmup Iteration   3: 2.744 ns/op
# Warmup Iteration   4: 2.868 ns/op
# Warmup Iteration   5: 2.846 ns/op
Iteration   1: 2.845 ns/op
                 ·gc.alloc.rate:      0.027 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.741 ns/op
                 ·gc.alloc.rate:      0.012 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.631 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.751 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.748 ns/op
                 ·gc.alloc.rate:      0.030 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 8.33% complete, ETA 00:19:19
# Fork: 2 of 3
# Warmup Iteration   1: 2.903 ns/op
# Warmup Iteration   2: 2.671 ns/op
# Warmup Iteration   3: 2.894 ns/op
# Warmup Iteration   4: 2.902 ns/op
# Warmup Iteration   5: 2.724 ns/op
Iteration   1: 2.834 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.716 ns/op
                 ·gc.alloc.rate:      0.003 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.640 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.848 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.878 ns/op
                 ·gc.alloc.rate:      0.069 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 16.67% complete, ETA 00:17:33
# Fork: 3 of 3
# Warmup Iteration   1: 3.069 ns/op
# Warmup Iteration   2: 2.849 ns/op
# Warmup Iteration   3: 2.896 ns/op
# Warmup Iteration   4: 2.890 ns/op
# Warmup Iteration   5: 2.722 ns/op
Iteration   1: 2.835 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.631 ns/op
                 ·gc.alloc.rate:      0.018 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.876 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.875 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.714 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.ScalarReplacementBenchmark.arg_escape_object":
  2.771 ±(99.9%) 0.098 ns/op [Average]
  (min, avg, max) = (2.631, 2.771, 2.878), stdev = 0.092
  CI (99.9%): [2.673, 2.869] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.ScalarReplacementBenchmark.arg_escape_object:·gc.alloc.rate":
  0.011 ±(99.9%) 0.020 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.011, 0.069), stdev = 0.019
  CI (99.9%): [≈ 0, 0.031] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.ScalarReplacementBenchmark.arg_escape_object:·gc.alloc.rate.norm":
  ≈ 10⁻⁴ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.ScalarReplacementBenchmark.arg_escape_object:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ScalarReplacementBenchmark.branch_escape_object
# Parameters: (objectEscapes = false, param = 3, size = 128)

# Run progress: 25.00% complete, ETA 00:15:48
# Fork: 1 of 3
# Warmup Iteration   1: 3.513 ns/op
# Warmup Iteration   2: 3.236 ns/op
# Warmup Iteration   3: 2.893 ns/op
# Warmup Iteration   4: 2.908 ns/op
# Warmup Iteration   5: 2.908 ns/op
Iteration   1: 2.910 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.931 ns/op
                 ·gc.alloc.rate:      0.006 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 3.283 ns/op
                 ·gc.alloc.rate:      0.230 MB/sec
                 ·gc.alloc.rate.norm: 0.001 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 3.153 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 3.183 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 33.33% complete, ETA 00:14:02
# Fork: 2 of 3
# Warmup Iteration   1: 3.480 ns/op
# Warmup Iteration   2: 3.081 ns/op
# Warmup Iteration   3: 2.903 ns/op
# Warmup Iteration   4: 2.913 ns/op
# Warmup Iteration   5: 2.911 ns/op
Iteration   1: 3.181 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 3.162 ns/op
                 ·gc.alloc.rate:      0.047 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 3.164 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 3.110 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 3.107 ns/op
                 ·gc.alloc.rate:      0.050 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 41.67% complete, ETA 00:12:17
# Fork: 3 of 3
# Warmup Iteration   1: 3.310 ns/op
# Warmup Iteration   2: 3.064 ns/op
# Warmup Iteration   3: 2.913 ns/op
# Warmup Iteration   4: 2.905 ns/op
# Warmup Iteration   5: 2.913 ns/op
Iteration   1: 2.913 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.915 ns/op
                 ·gc.alloc.rate:      0.123 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻³ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.911 ns/op
                 ·gc.alloc.rate:      0.007 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.913 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.914 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.ScalarReplacementBenchmark.branch_escape_object":
  3.050 ±(99.9%) 0.146 ns/op [Average]
  (min, avg, max) = (2.910, 3.050, 3.283), stdev = 0.136
  CI (99.9%): [2.904, 3.196] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.ScalarReplacementBenchmark.branch_escape_object:·gc.alloc.rate":
  0.031 ±(99.9%) 0.069 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.031, 0.230), stdev = 0.065
  CI (99.9%): [≈ 0, 0.100] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.ScalarReplacementBenchmark.branch_escape_object:·gc.alloc.rate.norm":
  ≈ 10⁻⁴ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.ScalarReplacementBenchmark.branch_escape_object:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ScalarReplacementBenchmark.no_escape
# Parameters: (objectEscapes = false, param = 3, size = 128)

# Run progress: 50.00% complete, ETA 00:10:31
# Fork: 1 of 3
# Warmup Iteration   1: 3.238 ns/op
# Warmup Iteration   2: 2.775 ns/op
# Warmup Iteration   3: 3.033 ns/op
# Warmup Iteration   4: 3.010 ns/op
# Warmup Iteration   5: 2.969 ns/op
Iteration   1: 2.974 ns/op
                 ·gc.alloc.rate:      2.092 MB/sec
                 ·gc.alloc.rate.norm: 0.007 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.965 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 3.004 ns/op
                 ·gc.alloc.rate:      0.026 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.963 ns/op
                 ·gc.alloc.rate:      0.011 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.959 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 58.33% complete, ETA 00:08:46
# Fork: 2 of 3
# Warmup Iteration   1: 2.983 ns/op
# Warmup Iteration   2: 2.765 ns/op
# Warmup Iteration   3: 2.782 ns/op
# Warmup Iteration   4: 2.768 ns/op
# Warmup Iteration   5: 2.786 ns/op
Iteration   1: 2.862 ns/op
                 ·gc.alloc.rate:      0.019 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.853 ns/op
                 ·gc.alloc.rate:      0.419 MB/sec
                 ·gc.alloc.rate.norm: 0.001 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.853 ns/op
                 ·gc.alloc.rate:      0.029 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.972 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.970 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 66.67% complete, ETA 00:07:01
# Fork: 3 of 3
# Warmup Iteration   1: 3.234 ns/op
# Warmup Iteration   2: 2.986 ns/op
# Warmup Iteration   3: 2.748 ns/op
# Warmup Iteration   4: 2.981 ns/op
# Warmup Iteration   5: 2.964 ns/op
Iteration   1: 2.963 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.838 ns/op
                 ·gc.alloc.rate:      0.538 MB/sec
                 ·gc.alloc.rate.norm: 0.002 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.835 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.842 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.960 ns/op
                 ·gc.alloc.rate:      0.158 MB/sec
                 ·gc.alloc.rate.norm: 0.001 B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.ScalarReplacementBenchmark.no_escape":
  2.921 ±(99.9%) 0.068 ns/op [Average]
  (min, avg, max) = (2.835, 2.921, 3.004), stdev = 0.063
  CI (99.9%): [2.853, 2.989] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.ScalarReplacementBenchmark.no_escape:·gc.alloc.rate":
  0.220 ±(99.9%) 0.582 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.220, 2.092), stdev = 0.544
  CI (99.9%): [≈ 0, 0.801] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.ScalarReplacementBenchmark.no_escape:·gc.alloc.rate.norm":
  0.001 ±(99.9%) 0.002 B/op [Average]
  (min, avg, max) = (≈ 10⁻⁷, 0.001, 0.007), stdev = 0.002
  CI (99.9%): [≈ 0, 0.003] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.ScalarReplacementBenchmark.no_escape:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ScalarReplacementBenchmark.no_escape_array_object
# Parameters: (objectEscapes = false, param = 3, size = 128)

# Run progress: 75.00% complete, ETA 00:05:15
# Fork: 1 of 3
# Warmup Iteration   1: 3.471 ns/op
# Warmup Iteration   2: 3.147 ns/op
# Warmup Iteration   3: 3.108 ns/op
# Warmup Iteration   4: 3.014 ns/op
# Warmup Iteration   5: 3.023 ns/op
Iteration   1: 3.127 ns/op
                 ·gc.alloc.rate:      0.059 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 3.257 ns/op
                 ·gc.alloc.rate:      0.077 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 3.251 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 3.234 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 3.019 ns/op
                 ·gc.alloc.rate:      0.195 MB/sec
                 ·gc.alloc.rate.norm: 0.001 B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 83.33% complete, ETA 00:03:30
# Fork: 2 of 3
# Warmup Iteration   1: 3.416 ns/op
# Warmup Iteration   2: 3.296 ns/op
# Warmup Iteration   3: 3.235 ns/op
# Warmup Iteration   4: 3.221 ns/op
# Warmup Iteration   5: 3.012 ns/op
Iteration   1: 3.015 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 3.125 ns/op
                 ·gc.alloc.rate:      0.006 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 3.123 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 3.260 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 3.020 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 91.67% complete, ETA 00:01:45
# Fork: 3 of 3
# Warmup Iteration   1: 3.588 ns/op
# Warmup Iteration   2: 3.304 ns/op
# Warmup Iteration   3: 3.250 ns/op
# Warmup Iteration   4: 3.238 ns/op
# Warmup Iteration   5: 3.223 ns/op
Iteration   1: 3.221 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 3.235 ns/op
                 ·gc.alloc.rate:      0.001 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁶ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 3.281 ns/op
                 ·gc.alloc.rate:      0.020 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 3.274 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 3.274 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.ScalarReplacementBenchmark.no_escape_array_object":
  3.181 ±(99.9%) 0.107 ns/op [Average]
  (min, avg, max) = (3.015, 3.181, 3.281), stdev = 0.100
  CI (99.9%): [3.074, 3.288] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.ScalarReplacementBenchmark.no_escape_array_object:·gc.alloc.rate":
  0.024 ±(99.9%) 0.057 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.024, 0.195), stdev = 0.053
  CI (99.9%): [≈ 0, 0.081] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.ScalarReplacementBenchmark.no_escape_array_object:·gc.alloc.rate.norm":
  ≈ 10⁻⁴ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.ScalarReplacementBenchmark.no_escape_array_object:·gc.count":
  ≈ 0 counts


# Run complete. Total time: 00:21:03

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                                              (objectEscapes)  (param)  (size)  Mode  Cnt   Score    Error   Units
ScalarReplacementBenchmark.arg_escape_object                                     false        3     128  avgt   15   2.771 ±  0.098   ns/op
ScalarReplacementBenchmark.arg_escape_object:·gc.alloc.rate                      false        3     128  avgt   15   0.011 ±  0.020  MB/sec
ScalarReplacementBenchmark.arg_escape_object:·gc.alloc.rate.norm                 false        3     128  avgt   15  ≈ 10⁻⁴             B/op
ScalarReplacementBenchmark.arg_escape_object:·gc.count                           false        3     128  avgt   15     ≈ 0           counts
ScalarReplacementBenchmark.branch_escape_object                                  false        3     128  avgt   15   3.050 ±  0.146   ns/op
ScalarReplacementBenchmark.branch_escape_object:·gc.alloc.rate                   false        3     128  avgt   15   0.031 ±  0.069  MB/sec
ScalarReplacementBenchmark.branch_escape_object:·gc.alloc.rate.norm              false        3     128  avgt   15  ≈ 10⁻⁴             B/op
ScalarReplacementBenchmark.branch_escape_object:·gc.count                        false        3     128  avgt   15     ≈ 0           counts
ScalarReplacementBenchmark.no_escape                                             false        3     128  avgt   15   2.921 ±  0.068   ns/op
ScalarReplacementBenchmark.no_escape:·gc.alloc.rate                              false        3     128  avgt   15   0.220 ±  0.582  MB/sec
ScalarReplacementBenchmark.no_escape:·gc.alloc.rate.norm                         false        3     128  avgt   15   0.001 ±  0.002    B/op
ScalarReplacementBenchmark.no_escape:·gc.count                                   false        3     128  avgt   15     ≈ 0           counts
ScalarReplacementBenchmark.no_escape_array_object                                false        3     128  avgt   15   3.181 ±  0.107   ns/op
ScalarReplacementBenchmark.no_escape_array_object:·gc.alloc.rate                 false        3     128  avgt   15   0.024 ±  0.057  MB/sec
ScalarReplacementBenchmark.no_escape_array_object:·gc.alloc.rate.norm            false        3     128  avgt   15  ≈ 10⁻⁴             B/op
ScalarReplacementBenchmark.no_escape_array_object:·gc.count                      false        3     128  avgt   15     ≈ 0           counts

Benchmark result is saved to results/report-openjdk-13/hotspotvm_graal_jit/ScalarReplacementBenchmark.json
Running java -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler -jar benchmarks/target/benchmarks.jar .*PassingConsumerVsExternalForEachIteratorBenchmark.* -prof gc -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_graal_jit/PassingConsumerVsExternalForEachIteratorBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.PassingConsumerVsExternalForEachIteratorBenchmark.external_for_each

# Run progress: 0.00% complete, ETA 00:10:00
# Fork: 1 of 3
# Warmup Iteration   1: 299.979 ms/op
# Warmup Iteration   2: 304.969 ms/op
# Warmup Iteration   3: 315.119 ms/op
# Warmup Iteration   4: 312.612 ms/op
# Warmup Iteration   5: 314.354 ms/op
Iteration   1: 330.872 ms/op
                 ·gc.alloc.rate:                   908.760 MB/sec
                 ·gc.alloc.rate.norm:              330706073.548 B/op
                 ·gc.churn.G1_Eden_Space:          614.580 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     223651113.290 B/op
                 ·gc.churn.G1_Survivor_Space:      0.008 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 2864.258 B/op
                 ·gc.count:                        11.000 counts
                 ·gc.time:                         234.000 ms

Iteration   2: 330.376 ms/op
                 ·gc.alloc.rate:                   909.411 MB/sec
                 ·gc.alloc.rate.norm:              330464187.871 B/op
                 ·gc.churn.G1_Eden_Space:          672.623 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     244419683.097 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 641.032 B/op
                 ·gc.count:                        12.000 counts
                 ·gc.time:                         252.000 ms

Iteration   3: 333.908 ms/op
                 ·gc.alloc.rate:                   898.807 MB/sec
                 ·gc.alloc.rate.norm:              330456172.267 B/op
                 ·gc.churn.G1_Eden_Space:          634.099 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     233133397.333 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 456.000 B/op
                 ·gc.count:                        11.000 counts
                 ·gc.time:                         226.000 ms

Iteration   4: 333.473 ms/op
                 ·gc.alloc.rate:                   899.966 MB/sec
                 ·gc.alloc.rate.norm:              330456172.267 B/op
                 ·gc.churn.G1_Eden_Space:          628.063 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     230616814.933 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 601.600 B/op
                 ·gc.count:                        11.000 counts
                 ·gc.time:                         231.000 ms

Iteration   5: 340.991 ms/op
                 ·gc.alloc.rate:                   881.380 MB/sec
                 ·gc.alloc.rate.norm:              330571533.867 B/op
                 ·gc.churn.G1_Eden_Space:          673.588 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     252636910.933 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 344.000 B/op
                 ·gc.count:                        12.000 counts
                 ·gc.time:                         252.000 ms


# Run progress: 16.67% complete, ETA 00:09:02
# Fork: 2 of 3
# Warmup Iteration   1: 311.274 ms/op
# Warmup Iteration   2: 326.617 ms/op
# Warmup Iteration   3: 316.898 ms/op
# Warmup Iteration   4: 319.955 ms/op
# Warmup Iteration   5: 322.838 ms/op
Iteration   1: 322.228 ms/op
                 ·gc.alloc.rate:                   797.805 MB/sec
                 ·gc.alloc.rate.norm:              282668967.750 B/op
                 ·gc.churn.G1_Eden_Space:          527.531 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     186908672.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 427.750 B/op
                 ·gc.count:                        7.000 counts
                 ·gc.time:                         151.000 ms

Iteration   2: 322.708 ms/op
                 ·gc.alloc.rate:                   796.750 MB/sec
                 ·gc.alloc.rate.norm:              282703341.000 B/op
                 ·gc.churn.G1_Eden_Space:          524.922 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     186253312.000 B/op
                 ·gc.churn.G1_Survivor_Space:      ≈ 10⁻³ MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 127.500 B/op
                 ·gc.count:                        7.000 counts
                 ·gc.time:                         139.000 ms

Iteration   3: 317.764 ms/op
                 ·gc.alloc.rate:                   807.840 MB/sec
                 ·gc.alloc.rate.norm:              282456227.000 B/op
                 ·gc.churn.G1_Eden_Space:          533.819 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     186646528.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.006 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 2020.750 B/op
                 ·gc.count:                        7.000 counts
                 ·gc.time:                         149.000 ms

Iteration   4: 326.638 ms/op
                 ·gc.alloc.rate:                   788.275 MB/sec
                 ·gc.alloc.rate.norm:              283344257.806 B/op
                 ·gc.churn.G1_Eden_Space:          538.643 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     193614484.645 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 540.129 B/op
                 ·gc.count:                        7.000 counts
                 ·gc.time:                         152.000 ms

Iteration   5: 324.993 ms/op
                 ·gc.alloc.rate:                   789.607 MB/sec
                 ·gc.alloc.rate.norm:              282457986.839 B/op
                 ·gc.churn.G1_Eden_Space:          538.032 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     192464433.548 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 589.677 B/op
                 ·gc.count:                        7.000 counts
                 ·gc.time:                         148.000 ms


# Run progress: 33.33% complete, ETA 00:07:15
# Fork: 3 of 3
# Warmup Iteration   1: 307.871 ms/op
# Warmup Iteration   2: 319.373 ms/op
# Warmup Iteration   3: 322.124 ms/op
# Warmup Iteration   4: 331.603 ms/op
# Warmup Iteration   5: 334.774 ms/op
Iteration   1: 337.408 ms/op
                 ·gc.alloc.rate:                   760.935 MB/sec
                 ·gc.alloc.rate.norm:              282535181.600 B/op
                 ·gc.churn.G1_Eden_Space:          508.708 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     188883490.133 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 330.133 B/op
                 ·gc.count:                        10.000 counts
                 ·gc.time:                         209.000 ms

Iteration   2: 337.623 ms/op
                 ·gc.alloc.rate:                   760.308 MB/sec
                 ·gc.alloc.rate.norm:              282476825.600 B/op
                 ·gc.churn.G1_Eden_Space:          508.018 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     188743680.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.006 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 2246.400 B/op
                 ·gc.count:                        10.000 counts
                 ·gc.time:                         207.000 ms

Iteration   3: 337.114 ms/op
                 ·gc.alloc.rate:                   761.975 MB/sec
                 ·gc.alloc.rate.norm:              282692810.400 B/op
                 ·gc.churn.G1_Eden_Space:          509.685 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     189093205.333 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 688.000 B/op
                 ·gc.count:                        10.000 counts
                 ·gc.time:                         216.000 ms

Iteration   4: 334.827 ms/op
                 ·gc.alloc.rate:                   766.324 MB/sec
                 ·gc.alloc.rate.norm:              282462068.533 B/op
                 ·gc.churn.G1_Eden_Space:          512.064 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     188743680.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 1014.400 B/op
                 ·gc.count:                        10.000 counts
                 ·gc.time:                         211.000 ms

Iteration   5: 334.814 ms/op
                 ·gc.alloc.rate:                   766.305 MB/sec
                 ·gc.alloc.rate.norm:              282456254.667 B/op
                 ·gc.churn.G1_Eden_Space:          512.062 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     188743680.000 B/op
                 ·gc.churn.G1_Survivor_Space:      ≈ 10⁻³ MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 137.600 B/op
                 ·gc.count:                        10.000 counts
                 ·gc.time:                         211.000 ms



Result "com.ionutbalosin.jvm.jit.benchmark.PassingConsumerVsExternalForEachIteratorBenchmark.external_for_each":
  331.049 ±(99.9%) 7.241 ms/op [Average]
  (min, avg, max) = (317.764, 331.049, 340.991), stdev = 6.773
  CI (99.9%): [323.808, 338.290] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.PassingConsumerVsExternalForEachIteratorBenchmark.external_for_each:·gc.alloc.rate":
  819.630 ±(99.9%) 64.864 MB/sec [Average]
  (min, avg, max) = (760.308, 819.630, 909.411), stdev = 60.673
  CI (99.9%): [754.766, 884.493] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.PassingConsumerVsExternalForEachIteratorBenchmark.external_for_each:·gc.alloc.rate.norm":
  298593870.734 ±(99.9%) 24990958.667 B/op [Average]
  (min, avg, max) = (282456227.000, 298593870.734, 330706073.548), stdev = 23376558.245
  CI (99.9%): [273602912.067, 323584829.402] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.PassingConsumerVsExternalForEachIteratorBenchmark.external_for_each:·gc.churn.G1_Eden_Space":
  562.429 ±(99.9%) 66.988 MB/sec [Average]
  (min, avg, max) = (508.018, 562.429, 673.588), stdev = 62.661
  CI (99.9%): [495.441, 629.417] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.PassingConsumerVsExternalForEachIteratorBenchmark.external_for_each:·gc.churn.G1_Eden_Space.norm":
  204970205.683 ±(99.9%) 25914954.646 B/op [Average]
  (min, avg, max) = (186253312.000, 204970205.683, 252636910.933), stdev = 24240864.656
  CI (99.9%): [179055251.037, 230885160.329] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.PassingConsumerVsExternalForEachIteratorBenchmark.external_for_each:·gc.churn.G1_Survivor_Space":
  0.002 ±(99.9%) 0.002 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻³, 0.002, 0.008), stdev = 0.002
  CI (99.9%): [≈ 0, 0.005] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.PassingConsumerVsExternalForEachIteratorBenchmark.external_for_each:·gc.churn.G1_Survivor_Space.norm":
  868.615 ±(99.9%) 884.547 B/op [Average]
  (min, avg, max) = (127.500, 868.615, 2864.258), stdev = 827.406
  CI (99.9%): [≈ 0, 1753.162] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.PassingConsumerVsExternalForEachIteratorBenchmark.external_for_each:·gc.count":
  142.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (7.000, 9.467, 12.000), stdev = 1.922
  CI (99.9%): [142.000, 142.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.PassingConsumerVsExternalForEachIteratorBenchmark.external_for_each:·gc.time":
  2988.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (139.000, 199.200, 252.000), stdev = 40.134
  CI (99.9%): [2988.000, 2988.000] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.PassingConsumerVsExternalForEachIteratorBenchmark.passing_consumer

# Run progress: 50.00% complete, ETA 00:05:25
# Fork: 1 of 3
# Warmup Iteration   1: 360.383 ms/op
# Warmup Iteration   2: 327.437 ms/op
# Warmup Iteration   3: 327.408 ms/op
# Warmup Iteration   4: 328.316 ms/op
# Warmup Iteration   5: 330.431 ms/op
Iteration   1: 331.973 ms/op
                 ·gc.alloc.rate:                   907.719 MB/sec
                 ·gc.alloc.rate.norm:              331355301.935 B/op
                 ·gc.churn.G1_Eden_Space:          631.020 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     230348469.677 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 273.806 B/op
                 ·gc.count:                        9.000 counts
                 ·gc.time:                         191.000 ms

Iteration   2: 334.044 ms/op
                 ·gc.alloc.rate:                   898.507 MB/sec
                 ·gc.alloc.rate.norm:              330462178.933 B/op
                 ·gc.churn.G1_Eden_Space:          644.330 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     236978176.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 970.933 B/op
                 ·gc.count:                        9.000 counts
                 ·gc.time:                         187.000 ms

Iteration   3: 330.557 ms/op
                 ·gc.alloc.rate:                   909.252 MB/sec
                 ·gc.alloc.rate.norm:              330565804.387 B/op
                 ·gc.churn.G1_Eden_Space:          631.176 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     229469018.839 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 599.226 B/op
                 ·gc.count:                        9.000 counts
                 ·gc.time:                         179.000 ms

Iteration   4: 336.347 ms/op
                 ·gc.alloc.rate:                   892.637 MB/sec
                 ·gc.alloc.rate.norm:              330468093.333 B/op
                 ·gc.churn.G1_Eden_Space:          640.109 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     236978176.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 464.000 B/op
                 ·gc.count:                        9.000 counts
                 ·gc.time:                         185.000 ms

Iteration   5: 332.337 ms/op
                 ·gc.alloc.rate:                   904.638 MB/sec
                 ·gc.alloc.rate.norm:              330567983.742 B/op
                 ·gc.churn.G1_Eden_Space:          627.969 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     229469018.839 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 399.484 B/op
                 ·gc.count:                        9.000 counts
                 ·gc.time:                         180.000 ms


# Run progress: 66.67% complete, ETA 00:03:37
# Fork: 2 of 3
# Warmup Iteration   1: 313.642 ms/op
# Warmup Iteration   2: 307.397 ms/op
# Warmup Iteration   3: 321.450 ms/op
# Warmup Iteration   4: 308.930 ms/op
# Warmup Iteration   5: 304.637 ms/op
Iteration   1: 310.006 ms/op
                 ·gc.alloc.rate:                   829.066 MB/sec
                 ·gc.alloc.rate.norm:              282705906.667 B/op
                 ·gc.churn.G1_Eden_Space:          555.934 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     189569830.788 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 459.636 B/op
                 ·gc.count:                        6.000 counts
                 ·gc.time:                         128.000 ms

Iteration   2: 303.377 ms/op
                 ·gc.alloc.rate:                   846.003 MB/sec
                 ·gc.alloc.rate.norm:              282597210.909 B/op
                 ·gc.churn.G1_Eden_Space:          567.319 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     189506280.727 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 206.061 B/op
                 ·gc.count:                        6.000 counts
                 ·gc.time:                         123.000 ms

Iteration   3: 314.944 ms/op
                 ·gc.alloc.rate:                   814.825 MB/sec
                 ·gc.alloc.rate.norm:              282473373.500 B/op
                 ·gc.churn.G1_Eden_Space:          563.167 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     195231744.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 415.250 B/op
                 ·gc.count:                        6.000 counts
                 ·gc.time:                         124.000 ms

Iteration   4: 308.553 ms/op
                 ·gc.alloc.rate:                   832.601 MB/sec
                 ·gc.alloc.rate.norm:              282631601.455 B/op
                 ·gc.churn.G1_Eden_Space:          504.909 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     171394513.455 B/op
                 ·gc.churn.G1_Survivor_Space:      0.007 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 2262.788 B/op
                 ·gc.count:                        6.000 counts
                 ·gc.time:                         122.000 ms

Iteration   5: 309.617 ms/op
                 ·gc.alloc.rate:                   830.500 MB/sec
                 ·gc.alloc.rate.norm:              282853453.576 B/op
                 ·gc.churn.G1_Eden_Space:          590.938 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     201263041.939 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 484.364 B/op
                 ·gc.count:                        7.000 counts
                 ·gc.time:                         144.000 ms


# Run progress: 83.33% complete, ETA 00:01:48
# Fork: 3 of 3
# Warmup Iteration   1: 348.911 ms/op
# Warmup Iteration   2: 325.381 ms/op
# Warmup Iteration   3: 330.278 ms/op
# Warmup Iteration   4: 326.372 ms/op
# Warmup Iteration   5: 326.795 ms/op
Iteration   1: 327.424 ms/op
                 ·gc.alloc.rate:                   918.988 MB/sec
                 ·gc.alloc.rate.norm:              331092492.645 B/op
                 ·gc.churn.G1_Eden_Space:          672.408 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     242254881.032 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 399.484 B/op
                 ·gc.count:                        9.000 counts
                 ·gc.time:                         171.000 ms

Iteration   2: 326.638 ms/op
                 ·gc.alloc.rate:                   919.304 MB/sec
                 ·gc.alloc.rate.norm:              330458083.097 B/op
                 ·gc.churn.G1_Eden_Space:          669.226 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     240563629.419 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 332.903 B/op
                 ·gc.count:                        9.000 counts
                 ·gc.time:                         196.000 ms

Iteration   3: 330.731 ms/op
                 ·gc.alloc.rate:                   908.488 MB/sec
                 ·gc.alloc.rate.norm:              330468745.032 B/op
                 ·gc.churn.G1_Eden_Space:          664.306 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     241646030.452 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 781.935 B/op
                 ·gc.count:                        9.000 counts
                 ·gc.time:                         187.000 ms

Iteration   4: 325.786 ms/op
                 ·gc.alloc.rate:                   921.595 MB/sec
                 ·gc.alloc.rate.norm:              330456340.903 B/op
                 ·gc.churn.G1_Eden_Space:          670.897 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     240563629.419 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 449.032 B/op
                 ·gc.count:                        9.000 counts
                 ·gc.time:                         182.000 ms

Iteration   5: 326.628 ms/op
                 ·gc.alloc.rate:                   919.352 MB/sec
                 ·gc.alloc.rate.norm:              330462180.645 B/op
                 ·gc.churn.G1_Eden_Space:          672.264 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     241646030.452 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 199.742 B/op
                 ·gc.count:                        9.000 counts
                 ·gc.time:                         171.000 ms



Result "com.ionutbalosin.jvm.jit.benchmark.PassingConsumerVsExternalForEachIteratorBenchmark.passing_consumer":
  323.264 ±(99.9%) 11.585 ms/op [Average]
  (min, avg, max) = (303.377, 323.264, 336.347), stdev = 10.836
  CI (99.9%): [311.679, 334.849] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.PassingConsumerVsExternalForEachIteratorBenchmark.passing_consumer:·gc.alloc.rate":
  883.565 ±(99.9%) 42.755 MB/sec [Average]
  (min, avg, max) = (814.825, 883.565, 921.595), stdev = 39.993
  CI (99.9%): [840.810, 926.320] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.PassingConsumerVsExternalForEachIteratorBenchmark.passing_consumer:·gc.alloc.rate.norm":
  314641250.051 ±(99.9%) 25032081.389 B/op [Average]
  (min, avg, max) = (282473373.500, 314641250.051, 331355301.935), stdev = 23415024.464
  CI (99.9%): [289609168.662, 339673331.439] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.PassingConsumerVsExternalForEachIteratorBenchmark.passing_consumer:·gc.churn.G1_Eden_Space":
  620.398 ±(99.9%) 55.667 MB/sec [Average]
  (min, avg, max) = (504.909, 620.398, 672.408), stdev = 52.071
  CI (99.9%): [564.732, 676.065] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.PassingConsumerVsExternalForEachIteratorBenchmark.passing_consumer:·gc.churn.G1_Eden_Space.norm":
  221125498.069 ±(99.9%) 26037927.087 B/op [Average]
  (min, avg, max) = (171394513.455, 221125498.069, 242254881.032), stdev = 24355893.154
  CI (99.9%): [195087570.982, 247163425.156] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.PassingConsumerVsExternalForEachIteratorBenchmark.passing_consumer:·gc.churn.G1_Survivor_Space":
  0.002 ±(99.9%) 0.002 MB/sec [Average]
  (min, avg, max) = (0.001, 0.002, 0.007), stdev = 0.001
  CI (99.9%): [≈ 10⁻⁴, 0.003] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.PassingConsumerVsExternalForEachIteratorBenchmark.passing_consumer:·gc.churn.G1_Survivor_Space.norm":
  579.910 ±(99.9%) 542.981 B/op [Average]
  (min, avg, max) = (199.742, 579.910, 2262.788), stdev = 507.905
  CI (99.9%): [36.928, 1122.891] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.PassingConsumerVsExternalForEachIteratorBenchmark.passing_consumer:·gc.count":
  121.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (6.000, 8.067, 9.000), stdev = 1.387
  CI (99.9%): [121.000, 121.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.PassingConsumerVsExternalForEachIteratorBenchmark.passing_consumer:·gc.time":
  2470.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (122.000, 164.667, 196.000), stdev = 27.889
  CI (99.9%): [2470.000, 2470.000] (assumes normal distribution)


# Run complete. Total time: 00:10:51

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                                                                             Mode  Cnt          Score          Error   Units
PassingConsumerVsExternalForEachIteratorBenchmark.external_for_each                                   avgt   15        331.049 ±        7.241   ms/op
PassingConsumerVsExternalForEachIteratorBenchmark.external_for_each:·gc.alloc.rate                    avgt   15        819.630 ±       64.864  MB/sec
PassingConsumerVsExternalForEachIteratorBenchmark.external_for_each:·gc.alloc.rate.norm               avgt   15  298593870.734 ± 24990958.667    B/op
PassingConsumerVsExternalForEachIteratorBenchmark.external_for_each:·gc.churn.G1_Eden_Space           avgt   15        562.429 ±       66.988  MB/sec
PassingConsumerVsExternalForEachIteratorBenchmark.external_for_each:·gc.churn.G1_Eden_Space.norm      avgt   15  204970205.683 ± 25914954.646    B/op
PassingConsumerVsExternalForEachIteratorBenchmark.external_for_each:·gc.churn.G1_Survivor_Space       avgt   15          0.002 ±        0.002  MB/sec
PassingConsumerVsExternalForEachIteratorBenchmark.external_for_each:·gc.churn.G1_Survivor_Space.norm  avgt   15        868.615 ±      884.547    B/op
PassingConsumerVsExternalForEachIteratorBenchmark.external_for_each:·gc.count                         avgt   15        142.000                 counts
PassingConsumerVsExternalForEachIteratorBenchmark.external_for_each:·gc.time                          avgt   15       2988.000                     ms
PassingConsumerVsExternalForEachIteratorBenchmark.passing_consumer                                    avgt   15        323.264 ±       11.585   ms/op
PassingConsumerVsExternalForEachIteratorBenchmark.passing_consumer:·gc.alloc.rate                     avgt   15        883.565 ±       42.755  MB/sec
PassingConsumerVsExternalForEachIteratorBenchmark.passing_consumer:·gc.alloc.rate.norm                avgt   15  314641250.051 ± 25032081.389    B/op
PassingConsumerVsExternalForEachIteratorBenchmark.passing_consumer:·gc.churn.G1_Eden_Space            avgt   15        620.398 ±       55.667  MB/sec
PassingConsumerVsExternalForEachIteratorBenchmark.passing_consumer:·gc.churn.G1_Eden_Space.norm       avgt   15  221125498.069 ± 26037927.087    B/op
PassingConsumerVsExternalForEachIteratorBenchmark.passing_consumer:·gc.churn.G1_Survivor_Space        avgt   15          0.002 ±        0.002  MB/sec
PassingConsumerVsExternalForEachIteratorBenchmark.passing_consumer:·gc.churn.G1_Survivor_Space.norm   avgt   15        579.910 ±      542.981    B/op
PassingConsumerVsExternalForEachIteratorBenchmark.passing_consumer:·gc.count                          avgt   15        121.000                 counts
PassingConsumerVsExternalForEachIteratorBenchmark.passing_consumer:·gc.time                           avgt   15       2470.000                     ms

Benchmark result is saved to results/report-openjdk-13/hotspotvm_graal_jit/PassingConsumerVsExternalForEachIteratorBenchmark.json
Running java -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler -jar benchmarks/target/benchmarks.jar .*EnumValuesBenchmark.* -prof gc -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_graal_jit/EnumValuesBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.EnumValuesBenchmark.cached_enum_set_values
# Parameters: (iterations = 1000000)

# Run progress: 0.00% complete, ETA 00:10:00
# Fork: 1 of 3
# Warmup Iteration   1: 2.969 ns/op
# Warmup Iteration   2: 2.639 ns/op
# Warmup Iteration   3: 2.516 ns/op
# Warmup Iteration   4: 2.662 ns/op
# Warmup Iteration   5: 2.553 ns/op
Iteration   1: 2.542 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.457 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.626 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.508 ns/op
                 ·gc.alloc.rate:                   0.633 MB/sec
                 ·gc.alloc.rate.norm:              0.002 B/op
                 ·gc.churn.G1_Eden_Space:          1.904 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     0.005 B/op
                 ·gc.churn.G1_Survivor_Space:      0.010 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:                        1.000 counts
                 ·gc.time:                         2.000 ms

Iteration   5: 2.530 ns/op
                 ·gc.alloc.rate:      0.113 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 16.67% complete, ETA 00:08:47
# Fork: 2 of 3
# Warmup Iteration   1: 2.863 ns/op
# Warmup Iteration   2: 2.674 ns/op
# Warmup Iteration   3: 2.650 ns/op
# Warmup Iteration   4: 2.659 ns/op
# Warmup Iteration   5: 2.418 ns/op
Iteration   1: 2.423 ns/op
                 ·gc.alloc.rate:      0.018 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.428 ns/op
                 ·gc.alloc.rate:      0.391 MB/sec
                 ·gc.alloc.rate.norm: 0.001 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.445 ns/op
                 ·gc.alloc.rate:                   1.053 MB/sec
                 ·gc.alloc.rate.norm:              0.003 B/op
                 ·gc.churn.G1_Eden_Space:          2.476 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     0.007 B/op
                 ·gc.churn.G1_Survivor_Space:      0.089 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        1.000 counts
                 ·gc.time:                         3.000 ms

Iteration   4: 2.425 ns/op
                 ·gc.alloc.rate:      0.028 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.437 ns/op
                 ·gc.alloc.rate:      0.085 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 33.33% complete, ETA 00:07:01
# Fork: 3 of 3
# Warmup Iteration   1: 2.716 ns/op
# Warmup Iteration   2: 2.617 ns/op
# Warmup Iteration   3: 2.614 ns/op
# Warmup Iteration   4: 2.606 ns/op
# Warmup Iteration   5: 2.586 ns/op
Iteration   1: 2.585 ns/op
                 ·gc.alloc.rate:      0.080 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.629 ns/op
                 ·gc.alloc.rate:      0.109 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.487 ns/op
                 ·gc.alloc.rate:      1.470 MB/sec
                 ·gc.alloc.rate.norm: 0.004 B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.494 ns/op
                 ·gc.alloc.rate:               0.106 MB/sec
                 ·gc.alloc.rate.norm:          ≈ 10⁻⁴ B/op
                 ·gc.churn.G1_Eden_Space:      2.095 MB/sec
                 ·gc.churn.G1_Eden_Space.norm: 0.006 B/op
                 ·gc.count:                    1.000 counts
                 ·gc.time:                     2.000 ms

Iteration   5: 2.498 ns/op
                 ·gc.alloc.rate:      0.039 MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.EnumValuesBenchmark.cached_enum_set_values":
  2.501 ±(99.9%) 0.075 ns/op [Average]
  (min, avg, max) = (2.423, 2.501, 2.629), stdev = 0.070
  CI (99.9%): [2.426, 2.576] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.EnumValuesBenchmark.cached_enum_set_values:·gc.alloc.rate":
  0.275 ±(99.9%) 0.473 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.275, 1.470), stdev = 0.442
  CI (99.9%): [≈ 0, 0.748] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.EnumValuesBenchmark.cached_enum_set_values:·gc.alloc.rate.norm":
  0.001 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (≈ 10⁻⁷, 0.001, 0.004), stdev = 0.001
  CI (99.9%): [≈ 0, 0.002] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.EnumValuesBenchmark.cached_enum_set_values:·gc.churn.G1_Eden_Space":
  0.432 ±(99.9%) 0.963 MB/sec [Average]
  (min, avg, max) = (≈ 0, 0.432, 2.476), stdev = 0.900
  CI (99.9%): [≈ 0, 1.394] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.EnumValuesBenchmark.cached_enum_set_values:·gc.churn.G1_Eden_Space.norm":
  0.001 ±(99.9%) 0.003 B/op [Average]
  (min, avg, max) = (≈ 0, 0.001, 0.007), stdev = 0.002
  CI (99.9%): [≈ 0, 0.004] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.EnumValuesBenchmark.cached_enum_set_values:·gc.churn.G1_Survivor_Space":
  0.007 ±(99.9%) 0.024 MB/sec [Average]
  (min, avg, max) = (≈ 0, 0.007, 0.089), stdev = 0.023
  CI (99.9%): [≈ 0, 0.031] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.EnumValuesBenchmark.cached_enum_set_values:·gc.churn.G1_Survivor_Space.norm":
  ≈ 10⁻⁵ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.EnumValuesBenchmark.cached_enum_set_values:·gc.count":
  3.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (≈ 0, 0.200, 1.000), stdev = 0.414
  CI (99.9%): [3.000, 3.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.EnumValuesBenchmark.cached_enum_set_values:·gc.time":
  7.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (≈ 0, 0.467, 3.000), stdev = 0.990
  CI (99.9%): [7.000, 7.000] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.EnumValuesBenchmark.values
# Parameters: (iterations = 1000000)

# Run progress: 50.00% complete, ETA 00:05:16
# Fork: 1 of 3
# Warmup Iteration   1: 54.082 ns/op
# Warmup Iteration   2: 46.918 ns/op
# Warmup Iteration   3: 47.640 ns/op
# Warmup Iteration   4: 46.892 ns/op
# Warmup Iteration   5: 46.478 ns/op
Iteration   1: 46.957 ns/op
                 ·gc.alloc.rate:                   3561.009 MB/sec
                 ·gc.alloc.rate.norm:              184.091 B/op
                 ·gc.churn.G1_Eden_Space:          3582.764 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     185.216 B/op
                 ·gc.churn.G1_Survivor_Space:      0.016 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        126.000 counts
                 ·gc.time:                         66.000 ms

Iteration   2: 46.974 ns/op
                 ·gc.alloc.rate:                   3557.439 MB/sec
                 ·gc.alloc.rate.norm:              184.000 B/op
                 ·gc.churn.G1_Eden_Space:          3552.071 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     183.722 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        112.000 counts
                 ·gc.time:                         59.000 ms

Iteration   3: 47.056 ns/op
                 ·gc.alloc.rate:                   3551.391 MB/sec
                 ·gc.alloc.rate.norm:              184.002 B/op
                 ·gc.churn.G1_Eden_Space:          3557.396 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     184.313 B/op
                 ·gc.churn.G1_Survivor_Space:      0.006 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        104.000 counts
                 ·gc.time:                         54.000 ms

Iteration   4: 47.684 ns/op
                 ·gc.alloc.rate:                   3504.563 MB/sec
                 ·gc.alloc.rate.norm:              184.007 B/op
                 ·gc.churn.G1_Eden_Space:          3492.076 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     183.351 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        102.000 counts
                 ·gc.time:                         51.000 ms

Iteration   5: 46.923 ns/op
                 ·gc.alloc.rate:                   3563.005 MB/sec
                 ·gc.alloc.rate.norm:              184.068 B/op
                 ·gc.churn.G1_Eden_Space:          3585.217 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     185.216 B/op
                 ·gc.churn.G1_Survivor_Space:      0.025 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        105.000 counts
                 ·gc.time:                         57.000 ms


# Run progress: 66.67% complete, ETA 00:03:30
# Fork: 2 of 3
# Warmup Iteration   1: 53.917 ns/op
# Warmup Iteration   2: 47.324 ns/op
# Warmup Iteration   3: 46.391 ns/op
# Warmup Iteration   4: 45.994 ns/op
# Warmup Iteration   5: 46.376 ns/op
Iteration   1: 47.178 ns/op
                 ·gc.alloc.rate:                   3542.655 MB/sec
                 ·gc.alloc.rate.norm:              184.002 B/op
                 ·gc.churn.G1_Eden_Space:          3577.088 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     185.790 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        102.000 counts
                 ·gc.time:                         53.000 ms

Iteration   2: 46.350 ns/op
                 ·gc.alloc.rate:                   3606.656 MB/sec
                 ·gc.alloc.rate.norm:              184.068 B/op
                 ·gc.churn.G1_Eden_Space:          3589.826 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     183.210 B/op
                 ·gc.churn.G1_Survivor_Space:      0.088 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.004 B/op
                 ·gc.count:                        102.000 counts
                 ·gc.time:                         57.000 ms

Iteration   3: 46.689 ns/op
                 ·gc.alloc.rate:                   3579.695 MB/sec
                 ·gc.alloc.rate.norm:              184.001 B/op
                 ·gc.churn.G1_Eden_Space:          3580.872 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     184.062 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        102.000 counts
                 ·gc.time:                         53.000 ms

Iteration   4: 46.627 ns/op
                 ·gc.alloc.rate:                   3584.346 MB/sec
                 ·gc.alloc.rate.norm:              184.006 B/op
                 ·gc.churn.G1_Eden_Space:          3585.421 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     184.062 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        102.000 counts
                 ·gc.time:                         53.000 ms

Iteration   5: 46.781 ns/op
                 ·gc.alloc.rate:                   3572.829 MB/sec
                 ·gc.alloc.rate.norm:              184.041 B/op
                 ·gc.churn.G1_Eden_Space:          3589.930 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     184.922 B/op
                 ·gc.churn.G1_Survivor_Space:      0.007 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        102.000 counts
                 ·gc.time:                         54.000 ms


# Run progress: 83.33% complete, ETA 00:01:45
# Fork: 3 of 3
# Warmup Iteration   1: 53.846 ns/op
# Warmup Iteration   2: 47.585 ns/op
# Warmup Iteration   3: 47.061 ns/op
# Warmup Iteration   4: 47.548 ns/op
# Warmup Iteration   5: 46.579 ns/op
Iteration   1: 46.450 ns/op
                 ·gc.alloc.rate:                   3597.838 MB/sec
                 ·gc.alloc.rate.norm:              184.000 B/op
                 ·gc.churn.G1_Eden_Space:          3582.002 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     183.190 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        106.000 counts
                 ·gc.time:                         57.000 ms

Iteration   2: 47.408 ns/op
                 ·gc.alloc.rate:                   3527.685 MB/sec
                 ·gc.alloc.rate.norm:              184.158 B/op
                 ·gc.churn.G1_Eden_Space:          3524.520 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     183.993 B/op
                 ·gc.churn.G1_Survivor_Space:      0.118 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.006 B/op
                 ·gc.count:                        104.000 counts
                 ·gc.time:                         60.000 ms

Iteration   3: 46.048 ns/op
                 ·gc.alloc.rate:                   3629.380 MB/sec
                 ·gc.alloc.rate.norm:              184.000 B/op
                 ·gc.churn.G1_Eden_Space:          3647.806 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     184.934 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        108.000 counts
                 ·gc.time:                         52.000 ms

Iteration   4: 47.023 ns/op
                 ·gc.alloc.rate:                   3553.885 MB/sec
                 ·gc.alloc.rate.norm:              184.007 B/op
                 ·gc.churn.G1_Eden_Space:          3554.084 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     184.018 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        105.000 counts
                 ·gc.time:                         52.000 ms

Iteration   5: 46.827 ns/op
                 ·gc.alloc.rate:                   3568.705 MB/sec
                 ·gc.alloc.rate.norm:              184.002 B/op
                 ·gc.churn.G1_Eden_Space:          3586.164 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     184.902 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        106.000 counts
                 ·gc.time:                         52.000 ms



Result "com.ionutbalosin.jvm.jit.benchmark.EnumValuesBenchmark.values":
  46.865 ±(99.9%) 0.438 ns/op [Average]
  (min, avg, max) = (46.048, 46.865, 47.684), stdev = 0.410
  CI (99.9%): [46.427, 47.303] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.EnumValuesBenchmark.values:·gc.alloc.rate":
  3566.739 ±(99.9%) 33.208 MB/sec [Average]
  (min, avg, max) = (3504.563, 3566.739, 3629.380), stdev = 31.063
  CI (99.9%): [3533.531, 3599.947] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.EnumValuesBenchmark.values:·gc.alloc.rate.norm":
  184.030 ±(99.9%) 0.050 B/op [Average]
  (min, avg, max) = (184.000, 184.030, 184.158), stdev = 0.047
  CI (99.9%): [183.980, 184.080] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.EnumValuesBenchmark.values:·gc.churn.G1_Eden_Space":
  3572.483 ±(99.9%) 37.068 MB/sec [Average]
  (min, avg, max) = (3492.076, 3572.483, 3647.806), stdev = 34.674
  CI (99.9%): [3535.414, 3609.551] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.EnumValuesBenchmark.values:·gc.churn.G1_Eden_Space.norm":
  184.327 ±(99.9%) 0.856 B/op [Average]
  (min, avg, max) = (183.190, 184.327, 185.790), stdev = 0.801
  CI (99.9%): [183.470, 185.183] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.EnumValuesBenchmark.values:·gc.churn.G1_Survivor_Space":
  0.020 ±(99.9%) 0.037 MB/sec [Average]
  (min, avg, max) = (0.003, 0.020, 0.118), stdev = 0.035
  CI (99.9%): [≈ 0, 0.057] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.EnumValuesBenchmark.values:·gc.churn.G1_Survivor_Space.norm":
  0.001 ±(99.9%) 0.002 B/op [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.001, 0.006), stdev = 0.002
  CI (99.9%): [≈ 0, 0.003] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.EnumValuesBenchmark.values:·gc.count":
  1588.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (102.000, 105.867, 126.000), stdev = 6.243
  CI (99.9%): [1588.000, 1588.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.EnumValuesBenchmark.values:·gc.time":
  830.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (51.000, 55.333, 66.000), stdev = 4.047
  CI (99.9%): [830.000, 830.000] (assumes normal distribution)


# Run complete. Total time: 00:10:32

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                                                    (iterations)  Mode  Cnt     Score    Error   Units
EnumValuesBenchmark.cached_enum_set_values                                        1000000  avgt   15     2.501 ±  0.075   ns/op
EnumValuesBenchmark.cached_enum_set_values:·gc.alloc.rate                         1000000  avgt   15     0.275 ±  0.473  MB/sec
EnumValuesBenchmark.cached_enum_set_values:·gc.alloc.rate.norm                    1000000  avgt   15     0.001 ±  0.001    B/op
EnumValuesBenchmark.cached_enum_set_values:·gc.churn.G1_Eden_Space                1000000  avgt   15     0.432 ±  0.963  MB/sec
EnumValuesBenchmark.cached_enum_set_values:·gc.churn.G1_Eden_Space.norm           1000000  avgt   15     0.001 ±  0.003    B/op
EnumValuesBenchmark.cached_enum_set_values:·gc.churn.G1_Survivor_Space            1000000  avgt   15     0.007 ±  0.024  MB/sec
EnumValuesBenchmark.cached_enum_set_values:·gc.churn.G1_Survivor_Space.norm       1000000  avgt   15    ≈ 10⁻⁵             B/op
EnumValuesBenchmark.cached_enum_set_values:·gc.count                              1000000  avgt   15     3.000           counts
EnumValuesBenchmark.cached_enum_set_values:·gc.time                               1000000  avgt   15     7.000               ms
EnumValuesBenchmark.values                                                        1000000  avgt   15    46.865 ±  0.438   ns/op
EnumValuesBenchmark.values:·gc.alloc.rate                                         1000000  avgt   15  3566.739 ± 33.208  MB/sec
EnumValuesBenchmark.values:·gc.alloc.rate.norm                                    1000000  avgt   15   184.030 ±  0.050    B/op
EnumValuesBenchmark.values:·gc.churn.G1_Eden_Space                                1000000  avgt   15  3572.483 ± 37.068  MB/sec
EnumValuesBenchmark.values:·gc.churn.G1_Eden_Space.norm                           1000000  avgt   15   184.327 ±  0.856    B/op
EnumValuesBenchmark.values:·gc.churn.G1_Survivor_Space                            1000000  avgt   15     0.020 ±  0.037  MB/sec
EnumValuesBenchmark.values:·gc.churn.G1_Survivor_Space.norm                       1000000  avgt   15     0.001 ±  0.002    B/op
EnumValuesBenchmark.values:·gc.count                                              1000000  avgt   15  1588.000           counts
EnumValuesBenchmark.values:·gc.time                                               1000000  avgt   15   830.000               ms

Benchmark result is saved to results/report-openjdk-13/hotspotvm_graal_jit/EnumValuesBenchmark.json
Running java -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler -jar benchmarks/target/benchmarks.jar .*LogRecordBenchmark.* -prof gc -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_graal_jit/LogRecordBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.escape_lambda
# Parameters: (aBoolean = true, aInt = 42, aString = P1, theLevel = INFO)

# Run progress: 0.00% complete, ETA 01:10:00
# Fork: 1 of 3
# Warmup Iteration   1: 15437.765 ns/op
# Warmup Iteration   2: 10414.098 ns/op
# Warmup Iteration   3: 10240.387 ns/op
# Warmup Iteration   4: 10124.207 ns/op
# Warmup Iteration   5: 9931.730 ns/op
Iteration   1: 9810.558 ns/op
                 ·gc.alloc.rate:                   591.877 MB/sec
                 ·gc.alloc.rate.norm:              6394.268 B/op
                 ·gc.churn.G1_Eden_Space:          603.309 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6517.769 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.018 B/op
                 ·gc.count:                        32.000 counts
                 ·gc.time:                         19.000 ms

Iteration   2: 10129.213 ns/op
                 ·gc.alloc.rate:                   572.415 MB/sec
                 ·gc.alloc.rate.norm:              6384.716 B/op
                 ·gc.churn.G1_Eden_Space:          565.608 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6308.789 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.017 B/op
                 ·gc.count:                        30.000 counts
                 ·gc.time:                         17.000 ms

Iteration   3: 9858.206 ns/op
                 ·gc.alloc.rate:                   588.324 MB/sec
                 ·gc.alloc.rate.norm:              6386.358 B/op
                 ·gc.churn.G1_Eden_Space:          584.487 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6344.713 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.040 B/op
                 ·gc.count:                        31.000 counts
                 ·gc.time:                         20.000 ms

Iteration   4: 10083.481 ns/op
                 ·gc.alloc.rate:                   575.334 MB/sec
                 ·gc.alloc.rate.norm:              6388.188 B/op
                 ·gc.churn.G1_Eden_Space:          584.478 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6489.713 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.060 B/op
                 ·gc.count:                        31.000 counts
                 ·gc.time:                         22.000 ms

Iteration   5: 10141.488 ns/op
                 ·gc.alloc.rate:                   571.893 MB/sec
                 ·gc.alloc.rate.norm:              6386.483 B/op
                 ·gc.churn.G1_Eden_Space:          565.630 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6316.544 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.021 B/op
                 ·gc.count:                        30.000 counts
                 ·gc.time:                         17.000 ms


# Run progress: 2.38% complete, ETA 01:12:03
# Fork: 2 of 3
# Warmup Iteration   1: 15700.778 ns/op
# Warmup Iteration   2: 10390.312 ns/op
# Warmup Iteration   3: 10035.483 ns/op
# Warmup Iteration   4: 10055.316 ns/op
# Warmup Iteration   5: 11086.291 ns/op
Iteration   1: 10858.236 ns/op
                 ·gc.alloc.rate:                   534.982 MB/sec
                 ·gc.alloc.rate.norm:              6396.440 B/op
                 ·gc.churn.G1_Eden_Space:          537.448 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6425.920 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.018 B/op
                 ·gc.count:                        34.000 counts
                 ·gc.time:                         21.000 ms

Iteration   2: 10488.726 ns/op
                 ·gc.alloc.rate:                   553.684 MB/sec
                 ·gc.alloc.rate.norm:              6394.865 B/op
                 ·gc.churn.G1_Eden_Space:          553.245 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6389.793 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.024 B/op
                 ·gc.count:                        35.000 counts
                 ·gc.time:                         20.000 ms

Iteration   3: 10514.781 ns/op
                 ·gc.alloc.rate:                   552.338 MB/sec
                 ·gc.alloc.rate.norm:              6394.942 B/op
                 ·gc.churn.G1_Eden_Space:          553.265 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6405.675 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.036 B/op
                 ·gc.count:                        35.000 counts
                 ·gc.time:                         20.000 ms

Iteration   4: 10525.503 ns/op
                 ·gc.alloc.rate:                   551.726 MB/sec
                 ·gc.alloc.rate.norm:              6394.583 B/op
                 ·gc.churn.G1_Eden_Space:          553.250 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6412.242 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.026 B/op
                 ·gc.count:                        35.000 counts
                 ·gc.time:                         20.000 ms

Iteration   5: 10410.937 ns/op
                 ·gc.alloc.rate:                   558.336 MB/sec
                 ·gc.alloc.rate.norm:              6400.996 B/op
                 ·gc.churn.G1_Eden_Space:          569.034 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6523.641 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.030 B/op
                 ·gc.count:                        36.000 counts
                 ·gc.time:                         21.000 ms


# Run progress: 4.76% complete, ETA 01:10:15
# Fork: 3 of 3
# Warmup Iteration   1: 15111.169 ns/op
# Warmup Iteration   2: 10530.641 ns/op
# Warmup Iteration   3: 10182.888 ns/op
# Warmup Iteration   4: 10086.072 ns/op
# Warmup Iteration   5: 9751.995 ns/op
Iteration   1: 10148.015 ns/op
                 ·gc.alloc.rate:                   569.220 MB/sec
                 ·gc.alloc.rate.norm:              6361.096 B/op
                 ·gc.churn.G1_Eden_Space:          569.021 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6358.875 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.030 B/op
                 ·gc.count:                        36.000 counts
                 ·gc.time:                         19.000 ms

Iteration   2: 9868.926 ns/op
                 ·gc.alloc.rate:                   585.374 MB/sec
                 ·gc.alloc.rate.norm:              6361.388 B/op
                 ·gc.churn.G1_Eden_Space:          584.844 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6355.627 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.039 B/op
                 ·gc.count:                        37.000 counts
                 ·gc.time:                         20.000 ms

Iteration   3: 10273.580 ns/op
                 ·gc.alloc.rate:                   562.354 MB/sec
                 ·gc.alloc.rate.norm:              6361.610 B/op
                 ·gc.churn.G1_Eden_Space:          569.069 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6437.575 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.040 B/op
                 ·gc.count:                        36.000 counts
                 ·gc.time:                         20.000 ms

Iteration   4: 9956.637 ns/op
                 ·gc.alloc.rate:                   580.717 MB/sec
                 ·gc.alloc.rate.norm:              6366.534 B/op
                 ·gc.churn.G1_Eden_Space:          584.888 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6412.268 B/op
                 ·gc.churn.G1_Survivor_Space:      0.007 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.073 B/op
                 ·gc.count:                        37.000 counts
                 ·gc.time:                         21.000 ms

Iteration   5: 10135.850 ns/op
                 ·gc.alloc.rate:                   571.287 MB/sec
                 ·gc.alloc.rate.norm:              6376.332 B/op
                 ·gc.churn.G1_Eden_Space:          569.038 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6351.225 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.049 B/op
                 ·gc.count:                        36.000 counts
                 ·gc.time:                         21.000 ms



Result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.escape_lambda":
  10213.609 ±(99.9%) 317.515 ns/op [Average]
  (min, avg, max) = (9810.558, 10213.609, 10858.236), stdev = 297.004
  CI (99.9%): [9896.094, 10531.125] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.escape_lambda:·gc.alloc.rate":
  567.991 ±(99.9%) 16.850 MB/sec [Average]
  (min, avg, max) = (534.982, 567.991, 591.877), stdev = 15.762
  CI (99.9%): [551.141, 584.841] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.escape_lambda:·gc.alloc.rate.norm":
  6383.253 ±(99.9%) 15.176 B/op [Average]
  (min, avg, max) = (6361.096, 6383.253, 6400.996), stdev = 14.196
  CI (99.9%): [6368.077, 6398.429] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.escape_lambda:·gc.churn.G1_Eden_Space":
  569.774 ±(99.9%) 17.874 MB/sec [Average]
  (min, avg, max) = (537.448, 569.774, 603.309), stdev = 16.719
  CI (99.9%): [551.901, 587.648] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.escape_lambda:·gc.churn.G1_Eden_Space.norm":
  6403.358 ±(99.9%) 72.246 B/op [Average]
  (min, avg, max) = (6308.789, 6403.358, 6523.641), stdev = 67.579
  CI (99.9%): [6331.112, 6475.604] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.escape_lambda:·gc.churn.G1_Survivor_Space":
  0.003 ±(99.9%) 0.002 MB/sec [Average]
  (min, avg, max) = (0.001, 0.003, 0.007), stdev = 0.001
  CI (99.9%): [0.002, 0.005] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.escape_lambda:·gc.churn.G1_Survivor_Space.norm":
  0.035 ±(99.9%) 0.017 B/op [Average]
  (min, avg, max) = (0.017, 0.035, 0.073), stdev = 0.016
  CI (99.9%): [0.018, 0.052] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.escape_lambda:·gc.count":
  511.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (30.000, 34.067, 37.000), stdev = 2.549
  CI (99.9%): [511.000, 511.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.escape_lambda:·gc.time":
  298.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (17.000, 19.867, 22.000), stdev = 1.407
  CI (99.9%): [298.000, 298.000] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.escape_lambda
# Parameters: (aBoolean = true, aInt = 42, aString = P1, theLevel = FINE)

# Run progress: 7.14% complete, ETA 01:08:29
# Fork: 1 of 3
# Warmup Iteration   1: 151.435 ns/op
# Warmup Iteration   2: 133.416 ns/op
# Warmup Iteration   3: 136.254 ns/op
# Warmup Iteration   4: 134.431 ns/op
# Warmup Iteration   5: 132.198 ns/op
Iteration   1: 136.855 ns/op
                 ·gc.alloc.rate:                   1327.749 MB/sec
                 ·gc.alloc.rate.norm:              200.097 B/op
                 ·gc.churn.G1_Eden_Space:          1327.748 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     200.096 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        83.000 counts
                 ·gc.time:                         37.000 ms

Iteration   2: 135.132 ns/op
                 ·gc.alloc.rate:                   1344.118 MB/sec
                 ·gc.alloc.rate.norm:              200.002 B/op
                 ·gc.churn.G1_Eden_Space:          1343.807 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     199.956 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        84.000 counts
                 ·gc.time:                         38.000 ms

Iteration   3: 134.270 ns/op
                 ·gc.alloc.rate:                   1353.716 MB/sec
                 ·gc.alloc.rate.norm:              200.151 B/op
                 ·gc.churn.G1_Eden_Space:          1359.784 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     201.048 B/op
                 ·gc.churn.G1_Survivor_Space:      0.006 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        85.000 counts
                 ·gc.time:                         40.000 ms

Iteration   4: 136.620 ns/op
                 ·gc.alloc.rate:                   1332.069 MB/sec
                 ·gc.alloc.rate.norm:              200.398 B/op
                 ·gc.churn.G1_Eden_Space:          1327.773 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     199.752 B/op
                 ·gc.churn.G1_Survivor_Space:      0.079 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.012 B/op
                 ·gc.count:                        83.000 counts
                 ·gc.time:                         38.000 ms

Iteration   5: 134.714 ns/op
                 ·gc.alloc.rate:                   1348.318 MB/sec
                 ·gc.alloc.rate.norm:              200.000 B/op
                 ·gc.churn.G1_Eden_Space:          1359.867 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     201.713 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        85.000 counts
                 ·gc.time:                         36.000 ms


# Run progress: 9.52% complete, ETA 01:06:43
# Fork: 2 of 3
# Warmup Iteration   1: 151.668 ns/op
# Warmup Iteration   2: 135.106 ns/op
# Warmup Iteration   3: 135.212 ns/op
# Warmup Iteration   4: 131.938 ns/op
# Warmup Iteration   5: 135.331 ns/op
Iteration   1: 132.237 ns/op
                 ·gc.alloc.rate:                   1373.581 MB/sec
                 ·gc.alloc.rate.norm:              200.014 B/op
                 ·gc.churn.G1_Eden_Space:          1375.770 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     200.332 B/op
                 ·gc.churn.G1_Survivor_Space:      0.009 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        86.000 counts
                 ·gc.time:                         37.000 ms

Iteration   2: 139.054 ns/op
                 ·gc.alloc.rate:                   1306.245 MB/sec
                 ·gc.alloc.rate.norm:              200.002 B/op
                 ·gc.churn.G1_Eden_Space:          1311.858 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     200.862 B/op
                 ·gc.churn.G1_Survivor_Space:      0.007 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        82.000 counts
                 ·gc.time:                         38.000 ms

Iteration   3: 133.956 ns/op
                 ·gc.alloc.rate:                   1356.835 MB/sec
                 ·gc.alloc.rate.norm:              200.142 B/op
                 ·gc.churn.G1_Eden_Space:          1359.786 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     200.577 B/op
                 ·gc.churn.G1_Survivor_Space:      0.009 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        85.000 counts
                 ·gc.time:                         39.000 ms

Iteration   4: 137.688 ns/op
                 ·gc.alloc.rate:                   1319.878 MB/sec
                 ·gc.alloc.rate.norm:              200.117 B/op
                 ·gc.churn.G1_Eden_Space:          1311.769 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     198.887 B/op
                 ·gc.churn.G1_Survivor_Space:      0.012 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.002 B/op
                 ·gc.count:                        82.000 counts
                 ·gc.time:                         39.000 ms

Iteration   5: 136.609 ns/op
                 ·gc.alloc.rate:                   1329.538 MB/sec
                 ·gc.alloc.rate.norm:              200.000 B/op
                 ·gc.churn.G1_Eden_Space:          1343.701 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     202.131 B/op
                 ·gc.churn.G1_Survivor_Space:      0.010 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        84.000 counts
                 ·gc.time:                         38.000 ms


# Run progress: 11.90% complete, ETA 01:04:57
# Fork: 3 of 3
# Warmup Iteration   1: 154.810 ns/op
# Warmup Iteration   2: 134.626 ns/op
# Warmup Iteration   3: 138.827 ns/op
# Warmup Iteration   4: 134.201 ns/op
# Warmup Iteration   5: 134.173 ns/op
Iteration   1: 133.740 ns/op
                 ·gc.alloc.rate:                   1358.377 MB/sec
                 ·gc.alloc.rate.norm:              200.048 B/op
                 ·gc.churn.G1_Eden_Space:          1359.778 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     200.254 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        85.000 counts
                 ·gc.time:                         40.000 ms

Iteration   2: 138.342 ns/op
                 ·gc.alloc.rate:                   1312.887 MB/sec
                 ·gc.alloc.rate.norm:              200.002 B/op
                 ·gc.churn.G1_Eden_Space:          1311.748 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     199.829 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        82.000 counts
                 ·gc.time:                         35.000 ms

Iteration   3: 130.727 ns/op
                 ·gc.alloc.rate:                   1392.043 MB/sec
                 ·gc.alloc.rate.norm:              200.388 B/op
                 ·gc.churn.G1_Eden_Space:          1391.759 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     200.347 B/op
                 ·gc.churn.G1_Survivor_Space:      0.016 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.002 B/op
                 ·gc.count:                        87.000 counts
                 ·gc.time:                         41.000 ms

Iteration   4: 130.489 ns/op
                 ·gc.alloc.rate:                   1392.818 MB/sec
                 ·gc.alloc.rate.norm:              200.125 B/op
                 ·gc.churn.G1_Eden_Space:          1391.821 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     199.982 B/op
                 ·gc.churn.G1_Survivor_Space:      0.010 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.002 B/op
                 ·gc.count:                        87.000 counts
                 ·gc.time:                         42.000 ms

Iteration   5: 137.843 ns/op
                 ·gc.alloc.rate:                   1317.618 MB/sec
                 ·gc.alloc.rate.norm:              200.000 B/op
                 ·gc.churn.G1_Eden_Space:          1327.756 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     201.539 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        83.000 counts
                 ·gc.time:                         38.000 ms



Result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.escape_lambda":
  135.218 ±(99.9%) 2.863 ns/op [Average]
  (min, avg, max) = (130.489, 135.218, 139.054), stdev = 2.678
  CI (99.9%): [132.356, 138.081] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.escape_lambda:·gc.alloc.rate":
  1344.386 ±(99.9%) 29.047 MB/sec [Average]
  (min, avg, max) = (1306.245, 1344.386, 1392.818), stdev = 27.171
  CI (99.9%): [1315.339, 1373.433] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.escape_lambda:·gc.alloc.rate.norm":
  200.099 ±(99.9%) 0.142 B/op [Average]
  (min, avg, max) = (200.000, 200.099, 200.398), stdev = 0.133
  CI (99.9%): [199.957, 200.241] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.escape_lambda:·gc.churn.G1_Eden_Space":
  1346.982 ±(99.9%) 29.063 MB/sec [Average]
  (min, avg, max) = (1311.748, 1346.982, 1391.821), stdev = 27.185
  CI (99.9%): [1317.919, 1376.044] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.escape_lambda:·gc.churn.G1_Eden_Space.norm":
  200.487 ±(99.9%) 0.908 B/op [Average]
  (min, avg, max) = (198.887, 200.487, 202.131), stdev = 0.849
  CI (99.9%): [199.579, 201.395] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.escape_lambda:·gc.churn.G1_Survivor_Space":
  0.012 ±(99.9%) 0.020 MB/sec [Average]
  (min, avg, max) = (0.002, 0.012, 0.079), stdev = 0.019
  CI (99.9%): [≈ 0, 0.032] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.escape_lambda:·gc.churn.G1_Survivor_Space.norm":
  0.002 ±(99.9%) 0.003 B/op [Average]
  (min, avg, max) = (≈ 10⁻³, 0.002, 0.012), stdev = 0.003
  CI (99.9%): [≈ 0, 0.005] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.escape_lambda:·gc.count":
  1263.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (82.000, 84.200, 87.000), stdev = 1.699
  CI (99.9%): [1263.000, 1263.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.escape_lambda:·gc.time":
  576.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (35.000, 38.400, 42.000), stdev = 1.844
  CI (99.9%): [576.000, 576.000] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_parametrized
# Parameters: (aBoolean = true, aInt = 42, aString = P1, theLevel = INFO)

# Run progress: 14.29% complete, ETA 01:03:12
# Fork: 1 of 3
# Warmup Iteration   1: 17547.492 ns/op
# Warmup Iteration   2: 12137.221 ns/op
# Warmup Iteration   3: 12339.671 ns/op
# Warmup Iteration   4: 12127.613 ns/op
# Warmup Iteration   5: 12671.063 ns/op
Iteration   1: 12739.837 ns/op
                 ·gc.alloc.rate:                   670.684 MB/sec
                 ·gc.alloc.rate.norm:              9408.213 B/op
                 ·gc.churn.G1_Eden_Space:          679.931 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     9537.925 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.055 B/op
                 ·gc.count:                        35.000 counts
                 ·gc.time:                         19.000 ms

Iteration   2: 12244.561 ns/op
                 ·gc.alloc.rate:                   697.927 MB/sec
                 ·gc.alloc.rate.norm:              9410.038 B/op
                 ·gc.churn.G1_Eden_Space:          699.308 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     9428.657 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.028 B/op
                 ·gc.count:                        36.000 counts
                 ·gc.time:                         22.000 ms

Iteration   3: 12010.268 ns/op
                 ·gc.alloc.rate:                   712.311 MB/sec
                 ·gc.alloc.rate.norm:              9420.247 B/op
                 ·gc.churn.G1_Eden_Space:          699.325 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     9248.508 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.059 B/op
                 ·gc.count:                        36.000 counts
                 ·gc.time:                         22.000 ms

Iteration   4: 12014.625 ns/op
                 ·gc.alloc.rate:                   711.562 MB/sec
                 ·gc.alloc.rate.norm:              9414.160 B/op
                 ·gc.churn.G1_Eden_Space:          718.720 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     9508.859 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.070 B/op
                 ·gc.count:                        37.000 counts
                 ·gc.time:                         23.000 ms

Iteration   5: 12089.977 ns/op
                 ·gc.alloc.rate:                   707.406 MB/sec
                 ·gc.alloc.rate.norm:              9417.293 B/op
                 ·gc.churn.G1_Eden_Space:          718.766 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     9568.523 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.046 B/op
                 ·gc.count:                        37.000 counts
                 ·gc.time:                         24.000 ms


# Run progress: 16.67% complete, ETA 01:01:27
# Fork: 2 of 3
# Warmup Iteration   1: 20033.137 ns/op
# Warmup Iteration   2: 12685.858 ns/op
# Warmup Iteration   3: 12855.138 ns/op
# Warmup Iteration   4: 13261.480 ns/op
# Warmup Iteration   5: 13041.883 ns/op
Iteration   1: 12735.947 ns/op
                 ·gc.alloc.rate:                   668.577 MB/sec
                 ·gc.alloc.rate.norm:              9376.225 B/op
                 ·gc.churn.G1_Eden_Space:          666.942 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     9353.295 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.040 B/op
                 ·gc.count:                        34.000 counts
                 ·gc.time:                         20.000 ms

Iteration   2: 12997.592 ns/op
                 ·gc.alloc.rate:                   655.132 MB/sec
                 ·gc.alloc.rate.norm:              9376.477 B/op
                 ·gc.churn.G1_Eden_Space:          647.323 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     9264.720 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.027 B/op
                 ·gc.count:                        33.000 counts
                 ·gc.time:                         23.000 ms

Iteration   3: 13247.807 ns/op
                 ·gc.alloc.rate:                   641.727 MB/sec
                 ·gc.alloc.rate.norm:              9361.486 B/op
                 ·gc.churn.G1_Eden_Space:          647.324 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     9443.127 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.046 B/op
                 ·gc.count:                        33.000 counts
                 ·gc.time:                         18.000 ms

Iteration   4: 12980.575 ns/op
                 ·gc.alloc.rate:                   655.271 MB/sec
                 ·gc.alloc.rate.norm:              9365.967 B/op
                 ·gc.churn.G1_Eden_Space:          647.340 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     9252.610 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.054 B/op
                 ·gc.count:                        33.000 counts
                 ·gc.time:                         22.000 ms

Iteration   5: 12719.862 ns/op
                 ·gc.alloc.rate:                   668.357 MB/sec
                 ·gc.alloc.rate.norm:              9361.250 B/op
                 ·gc.churn.G1_Eden_Space:          666.944 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     9341.470 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.040 B/op
                 ·gc.count:                        34.000 counts
                 ·gc.time:                         22.000 ms


# Run progress: 19.05% complete, ETA 00:59:41
# Fork: 3 of 3
# Warmup Iteration   1: 19908.889 ns/op
# Warmup Iteration   2: 13046.548 ns/op
# Warmup Iteration   3: 13022.404 ns/op
# Warmup Iteration   4: 12904.214 ns/op
# Warmup Iteration   5: 13280.207 ns/op
Iteration   1: 12900.275 ns/op
                 ·gc.alloc.rate:                   662.866 MB/sec
                 ·gc.alloc.rate.norm:              9416.335 B/op
                 ·gc.churn.G1_Eden_Space:          661.209 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     9392.805 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.032 B/op
                 ·gc.count:                        28.000 counts
                 ·gc.time:                         20.000 ms

Iteration   2: 12966.942 ns/op
                 ·gc.alloc.rate:                   659.764 MB/sec
                 ·gc.alloc.rate.norm:              9420.492 B/op
                 ·gc.churn.G1_Eden_Space:          661.222 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     9441.315 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.024 B/op
                 ·gc.count:                        28.000 counts
                 ·gc.time:                         18.000 ms

Iteration   3: 13241.654 ns/op
                 ·gc.alloc.rate:                   645.834 MB/sec
                 ·gc.alloc.rate.norm:              9417.213 B/op
                 ·gc.churn.G1_Eden_Space:          637.597 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     9297.103 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.040 B/op
                 ·gc.count:                        27.000 counts
                 ·gc.time:                         17.000 ms

Iteration   4: 13089.682 ns/op
                 ·gc.alloc.rate:                   653.426 MB/sec
                 ·gc.alloc.rate.norm:              9417.841 B/op
                 ·gc.churn.G1_Eden_Space:          661.261 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     9530.775 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.020 B/op
                 ·gc.count:                        28.000 counts
                 ·gc.time:                         18.000 ms

Iteration   5: 12931.660 ns/op
                 ·gc.alloc.rate:                   661.309 MB/sec
                 ·gc.alloc.rate.norm:              9416.770 B/op
                 ·gc.churn.G1_Eden_Space:          661.238 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     9415.749 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.040 B/op
                 ·gc.count:                        28.000 counts
                 ·gc.time:                         19.000 ms



Result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_parametrized":
  12727.418 ±(99.9%) 460.235 ns/op [Average]
  (min, avg, max) = (12010.268, 12727.418, 13247.807), stdev = 430.504
  CI (99.9%): [12267.183, 13187.652] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_parametrized:·gc.alloc.rate":
  671.477 ±(99.9%) 25.550 MB/sec [Average]
  (min, avg, max) = (641.727, 671.477, 712.311), stdev = 23.899
  CI (99.9%): [645.927, 697.027] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_parametrized:·gc.alloc.rate.norm":
  9400.001 ±(99.9%) 25.430 B/op [Average]
  (min, avg, max) = (9361.250, 9400.001, 9420.492), stdev = 23.788
  CI (99.9%): [9374.570, 9425.431] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_parametrized:·gc.churn.G1_Eden_Space":
  671.630 ±(99.9%) 27.771 MB/sec [Average]
  (min, avg, max) = (637.597, 671.630, 718.766), stdev = 25.977
  CI (99.9%): [643.859, 699.401] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_parametrized:·gc.churn.G1_Eden_Space.norm":
  9401.696 ±(99.9%) 114.355 B/op [Average]
  (min, avg, max) = (9248.508, 9401.696, 9568.523), stdev = 106.968
  CI (99.9%): [9287.341, 9516.051] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_parametrized:·gc.churn.G1_Survivor_Space":
  0.003 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.001, 0.003, 0.005), stdev = 0.001
  CI (99.9%): [0.002, 0.004] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_parametrized:·gc.churn.G1_Survivor_Space.norm":
  0.041 ±(99.9%) 0.015 B/op [Average]
  (min, avg, max) = (0.020, 0.041, 0.070), stdev = 0.014
  CI (99.9%): [0.026, 0.056] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_parametrized:·gc.count":
  487.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (27.000, 32.467, 37.000), stdev = 3.662
  CI (99.9%): [487.000, 487.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_parametrized:·gc.time":
  307.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (17.000, 20.467, 24.000), stdev = 2.232
  CI (99.9%): [307.000, 307.000] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_parametrized
# Parameters: (aBoolean = true, aInt = 42, aString = P1, theLevel = FINE)

# Run progress: 21.43% complete, ETA 00:57:56
# Fork: 1 of 3
# Warmup Iteration   1: 110.530 ns/op
# Warmup Iteration   2: 96.671 ns/op
# Warmup Iteration   3: 100.081 ns/op
# Warmup Iteration   4: 98.190 ns/op
# Warmup Iteration   5: 100.125 ns/op
Iteration   1: 98.096 ns/op
                 ·gc.alloc.rate:                   1556.862 MB/sec
                 ·gc.alloc.rate.norm:              168.167 B/op
                 ·gc.churn.G1_Eden_Space:          1563.198 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     168.851 B/op
                 ·gc.churn.G1_Survivor_Space:      0.006 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        48.000 counts
                 ·gc.time:                         33.000 ms

Iteration   2: 102.275 ns/op
                 ·gc.alloc.rate:                   1492.284 MB/sec
                 ·gc.alloc.rate.norm:              168.054 B/op
                 ·gc.churn.G1_Eden_Space:          1498.108 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     168.710 B/op
                 ·gc.churn.G1_Survivor_Space:      0.007 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        46.000 counts
                 ·gc.time:                         36.000 ms

Iteration   3: 99.319 ns/op
                 ·gc.alloc.rate:                   1537.294 MB/sec
                 ·gc.alloc.rate.norm:              168.121 B/op
                 ·gc.churn.G1_Eden_Space:          1530.659 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     167.395 B/op
                 ·gc.churn.G1_Survivor_Space:      0.008 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        47.000 counts
                 ·gc.time:                         29.000 ms

Iteration   4: 99.732 ns/op
                 ·gc.alloc.rate:                   1530.203 MB/sec
                 ·gc.alloc.rate.norm:              168.045 B/op
                 ·gc.churn.G1_Eden_Space:          1530.620 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     168.091 B/op
                 ·gc.churn.G1_Survivor_Space:      0.006 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        47.000 counts
                 ·gc.time:                         31.000 ms

Iteration   5: 101.652 ns/op
                 ·gc.alloc.rate:                   1500.885 MB/sec
                 ·gc.alloc.rate.norm:              168.002 B/op
                 ·gc.churn.G1_Eden_Space:          1498.032 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     167.682 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        46.000 counts
                 ·gc.time:                         28.000 ms


# Run progress: 23.81% complete, ETA 00:56:10
# Fork: 2 of 3
# Warmup Iteration   1: 112.481 ns/op
# Warmup Iteration   2: 99.672 ns/op
# Warmup Iteration   3: 98.318 ns/op
# Warmup Iteration   4: 99.386 ns/op
# Warmup Iteration   5: 101.534 ns/op
Iteration   1: 100.067 ns/op
                 ·gc.alloc.rate:                   1525.908 MB/sec
                 ·gc.alloc.rate.norm:              168.145 B/op
                 ·gc.churn.G1_Eden_Space:          1550.554 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     170.860 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        46.000 counts
                 ·gc.time:                         27.000 ms

Iteration   2: 100.658 ns/op
                 ·gc.alloc.rate:                   1515.876 MB/sec
                 ·gc.alloc.rate.norm:              168.027 B/op
                 ·gc.churn.G1_Eden_Space:          1516.821 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     168.132 B/op
                 ·gc.churn.G1_Survivor_Space:      0.006 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        45.000 counts
                 ·gc.time:                         31.000 ms

Iteration   3: 99.132 ns/op
                 ·gc.alloc.rate:                   1540.245 MB/sec
                 ·gc.alloc.rate.norm:              168.131 B/op
                 ·gc.churn.G1_Eden_Space:          1550.619 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     169.264 B/op
                 ·gc.churn.G1_Survivor_Space:      0.007 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        46.000 counts
                 ·gc.time:                         32.000 ms

Iteration   4: 97.710 ns/op
                 ·gc.alloc.rate:                   1561.777 MB/sec
                 ·gc.alloc.rate.norm:              168.037 B/op
                 ·gc.churn.G1_Eden_Space:          1550.600 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     166.835 B/op
                 ·gc.churn.G1_Survivor_Space:      0.007 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        46.000 counts
                 ·gc.time:                         29.000 ms

Iteration   5: 98.586 ns/op
                 ·gc.alloc.rate:                   1548.033 MB/sec
                 ·gc.alloc.rate.norm:              168.048 B/op
                 ·gc.churn.G1_Eden_Space:          1550.656 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     168.332 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        46.000 counts
                 ·gc.time:                         32.000 ms


# Run progress: 26.19% complete, ETA 00:54:25
# Fork: 3 of 3
# Warmup Iteration   1: 110.744 ns/op
# Warmup Iteration   2: 101.578 ns/op
# Warmup Iteration   3: 101.038 ns/op
# Warmup Iteration   4: 102.096 ns/op
# Warmup Iteration   5: 98.264 ns/op
Iteration   1: 99.306 ns/op
                 ·gc.alloc.rate:                   1536.719 MB/sec
                 ·gc.alloc.rate.norm:              168.044 B/op
                 ·gc.churn.G1_Eden_Space:          1548.491 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     169.331 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        47.000 counts
                 ·gc.time:                         35.000 ms

Iteration   2: 98.883 ns/op
                 ·gc.alloc.rate:                   1543.704 MB/sec
                 ·gc.alloc.rate.norm:              168.092 B/op
                 ·gc.churn.G1_Eden_Space:          1548.426 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     168.606 B/op
                 ·gc.churn.G1_Survivor_Space:      0.008 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        47.000 counts
                 ·gc.time:                         35.000 ms

Iteration   3: 101.893 ns/op
                 ·gc.alloc.rate:                   1498.565 MB/sec
                 ·gc.alloc.rate.norm:              168.139 B/op
                 ·gc.churn.G1_Eden_Space:          1482.607 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     166.349 B/op
                 ·gc.churn.G1_Survivor_Space:      0.006 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        45.000 counts
                 ·gc.time:                         29.000 ms

Iteration   4: 97.447 ns/op
                 ·gc.alloc.rate:                   1566.354 MB/sec
                 ·gc.alloc.rate.norm:              168.078 B/op
                 ·gc.churn.G1_Eden_Space:          1581.435 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     169.696 B/op
                 ·gc.churn.G1_Survivor_Space:      0.006 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        48.000 counts
                 ·gc.time:                         30.000 ms

Iteration   5: 97.310 ns/op
                 ·gc.alloc.rate:                   1567.909 MB/sec
                 ·gc.alloc.rate.norm:              168.005 B/op
                 ·gc.churn.G1_Eden_Space:          1548.516 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     165.927 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        47.000 counts
                 ·gc.time:                         28.000 ms



Result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_parametrized":
  99.471 ±(99.9%) 1.699 ns/op [Average]
  (min, avg, max) = (97.310, 99.471, 102.275), stdev = 1.589
  CI (99.9%): [97.772, 101.170] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_parametrized:·gc.alloc.rate":
  1534.841 ±(99.9%) 26.076 MB/sec [Average]
  (min, avg, max) = (1492.284, 1534.841, 1567.909), stdev = 24.392
  CI (99.9%): [1508.765, 1560.918] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_parametrized:·gc.alloc.rate.norm":
  168.076 ±(99.9%) 0.057 B/op [Average]
  (min, avg, max) = (168.002, 168.076, 168.167), stdev = 0.053
  CI (99.9%): [168.018, 168.133] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_parametrized:·gc.churn.G1_Eden_Space":
  1536.623 ±(99.9%) 28.958 MB/sec [Average]
  (min, avg, max) = (1482.607, 1536.623, 1581.435), stdev = 27.088
  CI (99.9%): [1507.665, 1565.581] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_parametrized:·gc.churn.G1_Eden_Space.norm":
  168.271 ±(99.9%) 1.397 B/op [Average]
  (min, avg, max) = (165.927, 168.271, 170.860), stdev = 1.307
  CI (99.9%): [166.874, 169.668] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_parametrized:·gc.churn.G1_Survivor_Space":
  0.006 ±(99.9%) 0.002 MB/sec [Average]
  (min, avg, max) = (0.003, 0.006, 0.008), stdev = 0.002
  CI (99.9%): [0.004, 0.007] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_parametrized:·gc.churn.G1_Survivor_Space.norm":
  0.001 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (≈ 10⁻³, 0.001, 0.001), stdev = 0.001
  CI (99.9%): [≈ 10⁻³, 0.001] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_parametrized:·gc.count":
  697.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (45.000, 46.467, 48.000), stdev = 0.915
  CI (99.9%): [697.000, 697.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_parametrized:·gc.time":
  465.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (27.000, 31.000, 36.000), stdev = 2.803
  CI (99.9%): [465.000, 465.000] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_unparametrized
# Parameters: (aBoolean = true, aInt = 42, aString = P1, theLevel = INFO)

# Run progress: 28.57% complete, ETA 00:52:40
# Fork: 1 of 3
# Warmup Iteration   1: 15448.362 ns/op
# Warmup Iteration   2: 10872.097 ns/op
# Warmup Iteration   3: 10402.990 ns/op
# Warmup Iteration   4: 10739.777 ns/op
# Warmup Iteration   5: 10670.732 ns/op
Iteration   1: 10668.240 ns/op
                 ·gc.alloc.rate:                   551.902 MB/sec
                 ·gc.alloc.rate.norm:              6483.225 B/op
                 ·gc.churn.G1_Eden_Space:          562.212 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6604.329 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.025 B/op
                 ·gc.count:                        36.000 counts
                 ·gc.time:                         22.000 ms

Iteration   2: 10208.800 ns/op
                 ·gc.alloc.rate:                   576.961 MB/sec
                 ·gc.alloc.rate.norm:              6486.010 B/op
                 ·gc.churn.G1_Eden_Space:          577.799 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6495.435 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.040 B/op
                 ·gc.count:                        37.000 counts
                 ·gc.time:                         19.000 ms

Iteration   3: 10424.079 ns/op
                 ·gc.alloc.rate:                   564.601 MB/sec
                 ·gc.alloc.rate.norm:              6480.866 B/op
                 ·gc.churn.G1_Eden_Space:          562.185 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6453.139 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.041 B/op
                 ·gc.count:                        36.000 counts
                 ·gc.time:                         19.000 ms

Iteration   4: 10213.457 ns/op
                 ·gc.alloc.rate:                   576.587 MB/sec
                 ·gc.alloc.rate.norm:              6484.874 B/op
                 ·gc.churn.G1_Eden_Space:          577.788 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6498.374 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.047 B/op
                 ·gc.count:                        37.000 counts
                 ·gc.time:                         20.000 ms

Iteration   5: 9959.318 ns/op
                 ·gc.alloc.rate:                   592.548 MB/sec
                 ·gc.alloc.rate.norm:              6498.354 B/op
                 ·gc.churn.G1_Eden_Space:          593.427 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6507.991 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.048 B/op
                 ·gc.count:                        38.000 counts
                 ·gc.time:                         23.000 ms


# Run progress: 30.95% complete, ETA 00:50:54
# Fork: 2 of 3
# Warmup Iteration   1: 14375.770 ns/op
# Warmup Iteration   2: 10233.659 ns/op
# Warmup Iteration   3: 10410.249 ns/op
# Warmup Iteration   4: 10141.870 ns/op
# Warmup Iteration   5: 9639.875 ns/op
Iteration   1: 10352.631 ns/op
                 ·gc.alloc.rate:                   563.822 MB/sec
                 ·gc.alloc.rate.norm:              6427.445 B/op
                 ·gc.churn.G1_Eden_Space:          573.245 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6534.868 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.019 B/op
                 ·gc.count:                        35.000 counts
                 ·gc.time:                         19.000 ms

Iteration   2: 10053.471 ns/op
                 ·gc.alloc.rate:                   580.515 MB/sec
                 ·gc.alloc.rate.norm:              6426.703 B/op
                 ·gc.churn.G1_Eden_Space:          573.224 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6345.991 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.021 B/op
                 ·gc.count:                        35.000 counts
                 ·gc.time:                         20.000 ms

Iteration   3: 9689.627 ns/op
                 ·gc.alloc.rate:                   602.184 MB/sec
                 ·gc.alloc.rate.norm:              6425.116 B/op
                 ·gc.churn.G1_Eden_Space:          606.002 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6465.849 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.052 B/op
                 ·gc.count:                        37.000 counts
                 ·gc.time:                         17.000 ms

Iteration   4: 10052.222 ns/op
                 ·gc.alloc.rate:                   580.947 MB/sec
                 ·gc.alloc.rate.norm:              6430.571 B/op
                 ·gc.churn.G1_Eden_Space:          573.236 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6345.213 B/op
                 ·gc.churn.G1_Survivor_Space:      0.007 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.077 B/op
                 ·gc.count:                        35.000 counts
                 ·gc.time:                         21.000 ms

Iteration   5: 10011.611 ns/op
                 ·gc.alloc.rate:                   583.509 MB/sec
                 ·gc.alloc.rate.norm:              6432.720 B/op
                 ·gc.churn.G1_Eden_Space:          589.633 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6500.225 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.020 B/op
                 ·gc.count:                        36.000 counts
                 ·gc.time:                         19.000 ms


# Run progress: 33.33% complete, ETA 00:49:09
# Fork: 3 of 3
# Warmup Iteration   1: 15569.313 ns/op
# Warmup Iteration   2: 10698.268 ns/op
# Warmup Iteration   3: 10021.922 ns/op
# Warmup Iteration   4: 10631.151 ns/op
# Warmup Iteration   5: 10995.736 ns/op
Iteration   1: 10877.039 ns/op
                 ·gc.alloc.rate:                   539.293 MB/sec
                 ·gc.alloc.rate.norm:              6459.157 B/op
                 ·gc.churn.G1_Eden_Space:          537.450 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6437.075 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.038 B/op
                 ·gc.count:                        34.000 counts
                 ·gc.time:                         18.000 ms

Iteration   2: 10682.444 ns/op
                 ·gc.alloc.rate:                   548.932 MB/sec
                 ·gc.alloc.rate.norm:              6457.158 B/op
                 ·gc.churn.G1_Eden_Space:          553.240 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6507.830 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.033 B/op
                 ·gc.count:                        35.000 counts
                 ·gc.time:                         20.000 ms

Iteration   3: 10208.596 ns/op
                 ·gc.alloc.rate:                   574.424 MB/sec
                 ·gc.alloc.rate.norm:              6457.407 B/op
                 ·gc.churn.G1_Eden_Space:          584.836 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6574.460 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.046 B/op
                 ·gc.count:                        37.000 counts
                 ·gc.time:                         20.000 ms

Iteration   4: 10647.378 ns/op
                 ·gc.alloc.rate:                   551.848 MB/sec
                 ·gc.alloc.rate.norm:              6470.157 B/op
                 ·gc.churn.G1_Eden_Space:          553.243 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6486.516 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.046 B/op
                 ·gc.count:                        35.000 counts
                 ·gc.time:                         20.000 ms

Iteration   5: 10711.789 ns/op
                 ·gc.alloc.rate:                   547.835 MB/sec
                 ·gc.alloc.rate.norm:              6461.995 B/op
                 ·gc.churn.G1_Eden_Space:          537.424 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6339.193 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.027 B/op
                 ·gc.count:                        34.000 counts
                 ·gc.time:                         18.000 ms



Result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_unparametrized":
  10317.380 ±(99.9%) 365.545 ns/op [Average]
  (min, avg, max) = (9689.627, 10317.380, 10877.039), stdev = 341.931
  CI (99.9%): [9951.835, 10682.925] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_unparametrized:·gc.alloc.rate":
  569.061 ±(99.9%) 19.500 MB/sec [Average]
  (min, avg, max) = (539.293, 569.061, 602.184), stdev = 18.240
  CI (99.9%): [549.561, 588.560] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_unparametrized:·gc.alloc.rate.norm":
  6458.784 ±(99.9%) 26.859 B/op [Average]
  (min, avg, max) = (6425.116, 6458.784, 6498.354), stdev = 25.124
  CI (99.9%): [6431.925, 6485.643] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_unparametrized:·gc.churn.G1_Eden_Space":
  570.329 ±(99.9%) 21.007 MB/sec [Average]
  (min, avg, max) = (537.424, 570.329, 606.002), stdev = 19.650
  CI (99.9%): [549.322, 591.337] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_unparametrized:·gc.churn.G1_Eden_Space.norm":
  6473.099 ±(99.9%) 84.747 B/op [Average]
  (min, avg, max) = (6339.193, 6473.099, 6604.329), stdev = 79.273
  CI (99.9%): [6388.352, 6557.847] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_unparametrized:·gc.churn.G1_Survivor_Space":
  0.003 ±(99.9%) 0.002 MB/sec [Average]
  (min, avg, max) = (0.002, 0.003, 0.007), stdev = 0.001
  CI (99.9%): [0.002, 0.005] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_unparametrized:·gc.churn.G1_Survivor_Space.norm":
  0.039 ±(99.9%) 0.016 B/op [Average]
  (min, avg, max) = (0.019, 0.039, 0.077), stdev = 0.015
  CI (99.9%): [0.022, 0.055] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_unparametrized:·gc.count":
  537.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (34.000, 35.800, 38.000), stdev = 1.207
  CI (99.9%): [537.000, 537.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_unparametrized:·gc.time":
  295.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (17.000, 19.667, 23.000), stdev = 1.543
  CI (99.9%): [295.000, 295.000] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_unparametrized
# Parameters: (aBoolean = true, aInt = 42, aString = P1, theLevel = FINE)

# Run progress: 35.71% complete, ETA 00:47:23
# Fork: 1 of 3
# Warmup Iteration   1: 151.578 ns/op
# Warmup Iteration   2: 137.711 ns/op
# Warmup Iteration   3: 131.775 ns/op
# Warmup Iteration   4: 133.083 ns/op
# Warmup Iteration   5: 132.241 ns/op
Iteration   1: 133.312 ns/op
                 ·gc.alloc.rate:                   1362.420 MB/sec
                 ·gc.alloc.rate.norm:              200.002 B/op
                 ·gc.churn.G1_Eden_Space:          1375.196 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     201.878 B/op
                 ·gc.churn.G1_Survivor_Space:      0.012 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.002 B/op
                 ·gc.count:                        87.000 counts
                 ·gc.time:                         41.000 ms

Iteration   2: 138.658 ns/op
                 ·gc.alloc.rate:                   1309.873 MB/sec
                 ·gc.alloc.rate.norm:              200.003 B/op
                 ·gc.churn.G1_Eden_Space:          1311.835 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     200.302 B/op
                 ·gc.churn.G1_Survivor_Space:      0.009 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        83.000 counts
                 ·gc.time:                         40.000 ms

Iteration   3: 135.004 ns/op
                 ·gc.alloc.rate:                   1346.227 MB/sec
                 ·gc.alloc.rate.norm:              200.131 B/op
                 ·gc.churn.G1_Eden_Space:          1343.590 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     199.739 B/op
                 ·gc.churn.G1_Survivor_Space:      0.008 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        85.000 counts
                 ·gc.time:                         37.000 ms

Iteration   4: 134.887 ns/op
                 ·gc.alloc.rate:                   1347.148 MB/sec
                 ·gc.alloc.rate.norm:              200.089 B/op
                 ·gc.churn.G1_Eden_Space:          1343.631 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     199.566 B/op
                 ·gc.churn.G1_Survivor_Space:      0.014 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.002 B/op
                 ·gc.count:                        85.000 counts
                 ·gc.time:                         38.000 ms

Iteration   5: 136.085 ns/op
                 ·gc.alloc.rate:                   1334.992 MB/sec
                 ·gc.alloc.rate.norm:              200.047 B/op
                 ·gc.churn.G1_Eden_Space:          1343.611 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     201.339 B/op
                 ·gc.churn.G1_Survivor_Space:      0.008 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        85.000 counts
                 ·gc.time:                         41.000 ms


# Run progress: 38.10% complete, ETA 00:45:38
# Fork: 2 of 3
# Warmup Iteration   1: 159.354 ns/op
# Warmup Iteration   2: 136.525 ns/op
# Warmup Iteration   3: 136.050 ns/op
# Warmup Iteration   4: 136.534 ns/op
# Warmup Iteration   5: 135.671 ns/op
Iteration   1: 129.089 ns/op
                 ·gc.alloc.rate:                   1407.687 MB/sec
                 ·gc.alloc.rate.norm:              200.096 B/op
                 ·gc.churn.G1_Eden_Space:          1407.791 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     200.110 B/op
                 ·gc.churn.G1_Survivor_Space:      0.008 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        88.000 counts
                 ·gc.time:                         42.000 ms

Iteration   2: 132.692 ns/op
                 ·gc.alloc.rate:                   1368.862 MB/sec
                 ·gc.alloc.rate.norm:              200.002 B/op
                 ·gc.churn.G1_Eden_Space:          1359.830 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     198.682 B/op
                 ·gc.churn.G1_Survivor_Space:      0.008 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        85.000 counts
                 ·gc.time:                         39.000 ms

Iteration   3: 135.606 ns/op
                 ·gc.alloc.rate:                   1342.606 MB/sec
                 ·gc.alloc.rate.norm:              200.490 B/op
                 ·gc.churn.G1_Eden_Space:          1343.735 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     200.658 B/op
                 ·gc.churn.G1_Survivor_Space:      0.129 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.019 B/op
                 ·gc.count:                        84.000 counts
                 ·gc.time:                         40.000 ms

Iteration   4: 134.007 ns/op
                 ·gc.alloc.rate:                   1356.088 MB/sec
                 ·gc.alloc.rate.norm:              200.096 B/op
                 ·gc.churn.G1_Eden_Space:          1359.863 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     200.653 B/op
                 ·gc.churn.G1_Survivor_Space:      0.024 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.003 B/op
                 ·gc.count:                        85.000 counts
                 ·gc.time:                         42.000 ms

Iteration   5: 137.370 ns/op
                 ·gc.alloc.rate:                   1322.279 MB/sec
                 ·gc.alloc.rate.norm:              200.018 B/op
                 ·gc.churn.G1_Eden_Space:          1327.772 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     200.849 B/op
                 ·gc.churn.G1_Survivor_Space:      0.007 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        83.000 counts
                 ·gc.time:                         37.000 ms


# Run progress: 40.48% complete, ETA 00:43:53
# Fork: 3 of 3
# Warmup Iteration   1: 156.412 ns/op
# Warmup Iteration   2: 132.895 ns/op
# Warmup Iteration   3: 138.522 ns/op
# Warmup Iteration   4: 138.564 ns/op
# Warmup Iteration   5: 132.908 ns/op
Iteration   1: 132.879 ns/op
                 ·gc.alloc.rate:                   1368.851 MB/sec
                 ·gc.alloc.rate.norm:              200.288 B/op
                 ·gc.churn.G1_Eden_Space:          1375.807 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     201.305 B/op
                 ·gc.churn.G1_Survivor_Space:      0.012 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.002 B/op
                 ·gc.count:                        86.000 counts
                 ·gc.time:                         38.000 ms

Iteration   2: 132.855 ns/op
                 ·gc.alloc.rate:                   1367.179 MB/sec
                 ·gc.alloc.rate.norm:              200.004 B/op
                 ·gc.churn.G1_Eden_Space:          1359.823 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     198.927 B/op
                 ·gc.churn.G1_Survivor_Space:      0.007 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        85.000 counts
                 ·gc.time:                         37.000 ms

Iteration   3: 133.185 ns/op
                 ·gc.alloc.rate:                   1364.780 MB/sec
                 ·gc.alloc.rate.norm:              200.155 B/op
                 ·gc.churn.G1_Eden_Space:          1375.772 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     201.768 B/op
                 ·gc.churn.G1_Survivor_Space:      0.009 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        86.000 counts
                 ·gc.time:                         42.000 ms

Iteration   4: 134.426 ns/op
                 ·gc.alloc.rate:                   1351.871 MB/sec
                 ·gc.alloc.rate.norm:              200.108 B/op
                 ·gc.churn.G1_Eden_Space:          1343.797 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     198.913 B/op
                 ·gc.churn.G1_Survivor_Space:      0.014 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.002 B/op
                 ·gc.count:                        84.000 counts
                 ·gc.time:                         45.000 ms

Iteration   5: 133.864 ns/op
                 ·gc.alloc.rate:                   1356.897 MB/sec
                 ·gc.alloc.rate.norm:              200.017 B/op
                 ·gc.churn.G1_Eden_Space:          1359.756 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     200.439 B/op
                 ·gc.churn.G1_Survivor_Space:      0.008 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        85.000 counts
                 ·gc.time:                         39.000 ms



Result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_unparametrized":
  134.261 ±(99.9%) 2.399 ns/op [Average]
  (min, avg, max) = (129.089, 134.261, 138.658), stdev = 2.244
  CI (99.9%): [131.862, 136.660] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_unparametrized:·gc.alloc.rate":
  1353.851 ±(99.9%) 24.334 MB/sec [Average]
  (min, avg, max) = (1309.873, 1353.851, 1407.687), stdev = 22.762
  CI (99.9%): [1329.517, 1378.184] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_unparametrized:·gc.alloc.rate.norm":
  200.103 ±(99.9%) 0.141 B/op [Average]
  (min, avg, max) = (200.002, 200.103, 200.490), stdev = 0.132
  CI (99.9%): [199.962, 200.245] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_unparametrized:·gc.churn.G1_Eden_Space":
  1355.454 ±(99.9%) 24.570 MB/sec [Average]
  (min, avg, max) = (1311.835, 1355.454, 1407.791), stdev = 22.983
  CI (99.9%): [1330.884, 1380.024] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_unparametrized:·gc.churn.G1_Eden_Space.norm":
  200.342 ±(99.9%) 1.092 B/op [Average]
  (min, avg, max) = (198.682, 200.342, 201.878), stdev = 1.021
  CI (99.9%): [199.250, 201.433] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_unparametrized:·gc.churn.G1_Survivor_Space":
  0.018 ±(99.9%) 0.033 MB/sec [Average]
  (min, avg, max) = (0.007, 0.018, 0.129), stdev = 0.031
  CI (99.9%): [≈ 0, 0.052] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_unparametrized:·gc.churn.G1_Survivor_Space.norm":
  0.003 ±(99.9%) 0.005 B/op [Average]
  (min, avg, max) = (0.001, 0.003, 0.019), stdev = 0.005
  CI (99.9%): [≈ 0, 0.008] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_unparametrized:·gc.count":
  1276.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (83.000, 85.067, 88.000), stdev = 1.335
  CI (99.9%): [1276.000, 1276.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_unparametrized:·gc.time":
  598.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (37.000, 39.867, 45.000), stdev = 2.326
  CI (99.9%): [598.000, 598.000] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.no_escape_lambda
# Parameters: (aBoolean = true, aInt = 42, aString = P1, theLevel = INFO)

# Run progress: 42.86% complete, ETA 00:42:07
# Fork: 1 of 3
# Warmup Iteration   1: 15468.829 ns/op
# Warmup Iteration   2: 10434.569 ns/op
# Warmup Iteration   3: 10245.712 ns/op
# Warmup Iteration   4: 10677.901 ns/op
# Warmup Iteration   5: 10227.824 ns/op
Iteration   1: 10441.341 ns/op
                 ·gc.alloc.rate:                   559.728 MB/sec
                 ·gc.alloc.rate.norm:              6435.247 B/op
                 ·gc.churn.G1_Eden_Space:          553.263 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6360.918 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.045 B/op
                 ·gc.count:                        35.000 counts
                 ·gc.time:                         18.000 ms

Iteration   2: 10211.115 ns/op
                 ·gc.alloc.rate:                   572.352 MB/sec
                 ·gc.alloc.rate.norm:              6435.037 B/op
                 ·gc.churn.G1_Eden_Space:          584.905 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6576.165 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.040 B/op
                 ·gc.count:                        37.000 counts
                 ·gc.time:                         21.000 ms

Iteration   3: 9916.530 ns/op
                 ·gc.alloc.rate:                   589.093 MB/sec
                 ·gc.alloc.rate.norm:              6432.527 B/op
                 ·gc.churn.G1_Eden_Space:          584.874 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6386.452 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.041 B/op
                 ·gc.count:                        37.000 counts
                 ·gc.time:                         22.000 ms

Iteration   4: 10033.390 ns/op
                 ·gc.alloc.rate:                   582.461 MB/sec
                 ·gc.alloc.rate.norm:              6435.261 B/op
                 ·gc.churn.G1_Eden_Space:          584.851 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6461.664 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.035 B/op
                 ·gc.count:                        37.000 counts
                 ·gc.time:                         21.000 ms

Iteration   5: 10051.291 ns/op
                 ·gc.alloc.rate:                   582.677 MB/sec
                 ·gc.alloc.rate.norm:              6449.128 B/op
                 ·gc.churn.G1_Eden_Space:          584.852 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6473.199 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.053 B/op
                 ·gc.count:                        37.000 counts
                 ·gc.time:                         20.000 ms


# Run progress: 45.24% complete, ETA 00:40:22
# Fork: 2 of 3
# Warmup Iteration   1: 15630.467 ns/op
# Warmup Iteration   2: 10563.179 ns/op
# Warmup Iteration   3: 10431.034 ns/op
# Warmup Iteration   4: 10542.487 ns/op
# Warmup Iteration   5: 10619.922 ns/op
Iteration   1: 10789.433 ns/op
                 ·gc.alloc.rate:                   541.828 MB/sec
                 ·gc.alloc.rate.norm:              6437.579 B/op
                 ·gc.churn.G1_Eden_Space:          537.419 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6385.195 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.024 B/op
                 ·gc.count:                        34.000 counts
                 ·gc.time:                         20.000 ms

Iteration   2: 10782.593 ns/op
                 ·gc.alloc.rate:                   543.141 MB/sec
                 ·gc.alloc.rate.norm:              6448.951 B/op
                 ·gc.churn.G1_Eden_Space:          553.236 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6568.821 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.029 B/op
                 ·gc.count:                        35.000 counts
                 ·gc.time:                         21.000 ms

Iteration   3: 10955.245 ns/op
                 ·gc.alloc.rate:                   533.246 MB/sec
                 ·gc.alloc.rate.norm:              6432.663 B/op
                 ·gc.churn.G1_Eden_Space:          537.414 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6482.944 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.047 B/op
                 ·gc.count:                        34.000 counts
                 ·gc.time:                         20.000 ms

Iteration   4: 10107.460 ns/op
                 ·gc.alloc.rate:                   578.243 MB/sec
                 ·gc.alloc.rate.norm:              6435.687 B/op
                 ·gc.churn.G1_Eden_Space:          569.060 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6333.482 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.038 B/op
                 ·gc.count:                        36.000 counts
                 ·gc.time:                         23.000 ms

Iteration   5: 10447.519 ns/op
                 ·gc.alloc.rate:                   559.833 MB/sec
                 ·gc.alloc.rate.norm:              6440.465 B/op
                 ·gc.churn.G1_Eden_Space:          569.052 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6546.527 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.024 B/op
                 ·gc.count:                        36.000 counts
                 ·gc.time:                         22.000 ms


# Run progress: 47.62% complete, ETA 00:38:37
# Fork: 3 of 3
# Warmup Iteration   1: 15445.044 ns/op
# Warmup Iteration   2: 10498.738 ns/op
# Warmup Iteration   3: 10553.979 ns/op
# Warmup Iteration   4: 10418.926 ns/op
# Warmup Iteration   5: 10576.867 ns/op
Iteration   1: 10086.649 ns/op
                 ·gc.alloc.rate:                   581.570 MB/sec
                 ·gc.alloc.rate.norm:              6459.072 B/op
                 ·gc.churn.G1_Eden_Space:          584.899 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6496.051 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.040 B/op
                 ·gc.count:                        37.000 counts
                 ·gc.time:                         22.000 ms

Iteration   2: 10440.010 ns/op
                 ·gc.alloc.rate:                   561.721 MB/sec
                 ·gc.alloc.rate.norm:              6457.737 B/op
                 ·gc.churn.G1_Eden_Space:          553.233 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6360.161 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.041 B/op
                 ·gc.count:                        35.000 counts
                 ·gc.time:                         19.000 ms

Iteration   3: 10636.599 ns/op
                 ·gc.alloc.rate:                   551.265 MB/sec
                 ·gc.alloc.rate.norm:              6456.565 B/op
                 ·gc.churn.G1_Eden_Space:          553.255 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6479.872 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.048 B/op
                 ·gc.count:                        35.000 counts
                 ·gc.time:                         21.000 ms

Iteration   4: 10376.035 ns/op
                 ·gc.alloc.rate:                   565.682 MB/sec
                 ·gc.alloc.rate.norm:              6462.780 B/op
                 ·gc.churn.G1_Eden_Space:          569.095 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6501.771 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.050 B/op
                 ·gc.count:                        36.000 counts
                 ·gc.time:                         21.000 ms

Iteration   5: 10205.181 ns/op
                 ·gc.alloc.rate:                   576.123 MB/sec
                 ·gc.alloc.rate.norm:              6474.173 B/op
                 ·gc.churn.G1_Eden_Space:          584.859 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6572.340 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.036 B/op
                 ·gc.count:                        37.000 counts
                 ·gc.time:                         23.000 ms



Result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.no_escape_lambda":
  10365.359 ±(99.9%) 337.777 ns/op [Average]
  (min, avg, max) = (9916.530, 10365.359, 10955.245), stdev = 315.957
  CI (99.9%): [10027.583, 10703.136] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.no_escape_lambda:·gc.alloc.rate":
  565.264 ±(99.9%) 18.299 MB/sec [Average]
  (min, avg, max) = (533.246, 565.264, 589.093), stdev = 17.117
  CI (99.9%): [546.965, 583.564] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.no_escape_lambda:·gc.alloc.rate.norm":
  6446.191 ±(99.9%) 14.090 B/op [Average]
  (min, avg, max) = (6432.527, 6446.191, 6474.173), stdev = 13.180
  CI (99.9%): [6432.101, 6460.281] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.no_escape_lambda:·gc.churn.G1_Eden_Space":
  566.951 ±(99.9%) 19.031 MB/sec [Average]
  (min, avg, max) = (537.414, 566.951, 584.905), stdev = 17.801
  CI (99.9%): [547.920, 585.982] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.no_escape_lambda:·gc.churn.G1_Eden_Space.norm":
  6465.704 ±(99.9%) 88.478 B/op [Average]
  (min, avg, max) = (6333.482, 6465.704, 6576.165), stdev = 82.763
  CI (99.9%): [6377.226, 6554.182] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.no_escape_lambda:·gc.churn.G1_Survivor_Space":
  0.003 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.002, 0.003, 0.005), stdev = 0.001
  CI (99.9%): [0.003, 0.004] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.no_escape_lambda:·gc.churn.G1_Survivor_Space.norm":
  0.039 ±(99.9%) 0.009 B/op [Average]
  (min, avg, max) = (0.024, 0.039, 0.053), stdev = 0.009
  CI (99.9%): [0.030, 0.049] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.no_escape_lambda:·gc.count":
  538.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (34.000, 35.867, 37.000), stdev = 1.125
  CI (99.9%): [538.000, 538.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.no_escape_lambda:·gc.time":
  314.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (18.000, 20.933, 23.000), stdev = 1.387
  CI (99.9%): [314.000, 314.000] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.no_escape_lambda
# Parameters: (aBoolean = true, aInt = 42, aString = P1, theLevel = FINE)

# Run progress: 50.00% complete, ETA 00:36:51
# Fork: 1 of 3
# Warmup Iteration   1: 153.165 ns/op
# Warmup Iteration   2: 133.002 ns/op
# Warmup Iteration   3: 136.670 ns/op
# Warmup Iteration   4: 139.476 ns/op
# Warmup Iteration   5: 135.925 ns/op
Iteration   1: 138.903 ns/op
                 ·gc.alloc.rate:                   1308.531 MB/sec
                 ·gc.alloc.rate.norm:              200.154 B/op
                 ·gc.churn.G1_Eden_Space:          1311.722 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     200.642 B/op
                 ·gc.churn.G1_Survivor_Space:      0.008 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        82.000 counts
                 ·gc.time:                         38.000 ms

Iteration   2: 134.595 ns/op
                 ·gc.alloc.rate:                   1349.396 MB/sec
                 ·gc.alloc.rate.norm:              200.002 B/op
                 ·gc.churn.G1_Eden_Space:          1359.719 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     201.532 B/op
                 ·gc.churn.G1_Survivor_Space:      0.008 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        85.000 counts
                 ·gc.time:                         42.000 ms

Iteration   3: 132.405 ns/op
                 ·gc.alloc.rate:                   1374.559 MB/sec
                 ·gc.alloc.rate.norm:              200.407 B/op
                 ·gc.churn.G1_Eden_Space:          1375.790 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     200.587 B/op
                 ·gc.churn.G1_Survivor_Space:      0.010 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        86.000 counts
                 ·gc.time:                         36.000 ms

Iteration   4: 130.356 ns/op
                 ·gc.alloc.rate:                   1394.215 MB/sec
                 ·gc.alloc.rate.norm:              200.126 B/op
                 ·gc.churn.G1_Eden_Space:          1391.798 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     199.779 B/op
                 ·gc.churn.G1_Survivor_Space:      0.017 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.002 B/op
                 ·gc.count:                        87.000 counts
                 ·gc.time:                         41.000 ms

Iteration   5: 132.222 ns/op
                 ·gc.alloc.rate:                   1374.265 MB/sec
                 ·gc.alloc.rate.norm:              200.083 B/op
                 ·gc.churn.G1_Eden_Space:          1375.815 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     200.308 B/op
                 ·gc.churn.G1_Survivor_Space:      0.008 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        86.000 counts
                 ·gc.time:                         35.000 ms


# Run progress: 52.38% complete, ETA 00:35:06
# Fork: 2 of 3
# Warmup Iteration   1: 155.837 ns/op
# Warmup Iteration   2: 139.857 ns/op
# Warmup Iteration   3: 136.043 ns/op
# Warmup Iteration   4: 133.187 ns/op
# Warmup Iteration   5: 136.742 ns/op
Iteration   1: 132.662 ns/op
                 ·gc.alloc.rate:                   1533.435 MB/sec
                 ·gc.alloc.rate.norm:              224.002 B/op
                 ·gc.churn.G1_Eden_Space:          1523.219 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     222.510 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        93.000 counts
                 ·gc.time:                         40.000 ms

Iteration   2: 134.996 ns/op
                 ·gc.alloc.rate:                   1506.911 MB/sec
                 ·gc.alloc.rate.norm:              224.000 B/op
                 ·gc.churn.G1_Eden_Space:          1506.844 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     223.990 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        92.000 counts
                 ·gc.time:                         42.000 ms

Iteration   3: 137.623 ns/op
                 ·gc.alloc.rate:                   1480.279 MB/sec
                 ·gc.alloc.rate.norm:              224.320 B/op
                 ·gc.churn.G1_Eden_Space:          1490.475 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     225.865 B/op
                 ·gc.churn.G1_Survivor_Space:      0.012 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.002 B/op
                 ·gc.count:                        91.000 counts
                 ·gc.time:                         39.000 ms

Iteration   4: 142.453 ns/op
                 ·gc.alloc.rate:                   1428.101 MB/sec
                 ·gc.alloc.rate.norm:              224.003 B/op
                 ·gc.churn.G1_Eden_Space:          1424.999 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     223.516 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        87.000 counts
                 ·gc.time:                         33.000 ms

Iteration   5: 135.929 ns/op
                 ·gc.alloc.rate:                   1496.652 MB/sec
                 ·gc.alloc.rate.norm:              224.018 B/op
                 ·gc.churn.G1_Eden_Space:          1506.810 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     225.538 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        92.000 counts
                 ·gc.time:                         37.000 ms


# Run progress: 54.76% complete, ETA 00:33:21
# Fork: 3 of 3
# Warmup Iteration   1: 156.978 ns/op
# Warmup Iteration   2: 136.341 ns/op
# Warmup Iteration   3: 140.237 ns/op
# Warmup Iteration   4: 141.710 ns/op
# Warmup Iteration   5: 140.998 ns/op
Iteration   1: 138.631 ns/op
                 ·gc.alloc.rate:                   1467.443 MB/sec
                 ·gc.alloc.rate.norm:              224.002 B/op
                 ·gc.churn.G1_Eden_Space:          1470.104 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     224.408 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        93.000 counts
                 ·gc.time:                         40.000 ms

Iteration   2: 135.909 ns/op
                 ·gc.alloc.rate:                   1496.753 MB/sec
                 ·gc.alloc.rate.norm:              224.000 B/op
                 ·gc.churn.G1_Eden_Space:          1501.659 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     224.734 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        95.000 counts
                 ·gc.time:                         42.000 ms

Iteration   3: 138.002 ns/op
                 ·gc.alloc.rate:                   1475.916 MB/sec
                 ·gc.alloc.rate.norm:              224.280 B/op
                 ·gc.churn.G1_Eden_Space:          1470.071 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     223.392 B/op
                 ·gc.churn.G1_Survivor_Space:      0.021 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.003 B/op
                 ·gc.count:                        93.000 counts
                 ·gc.time:                         42.000 ms

Iteration   4: 139.862 ns/op
                 ·gc.alloc.rate:                   1454.880 MB/sec
                 ·gc.alloc.rate.norm:              224.068 B/op
                 ·gc.churn.G1_Eden_Space:          1454.232 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     223.968 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        92.000 counts
                 ·gc.time:                         40.000 ms

Iteration   5: 138.312 ns/op
                 ·gc.alloc.rate:                   1470.866 MB/sec
                 ·gc.alloc.rate.norm:              224.018 B/op
                 ·gc.churn.G1_Eden_Space:          1485.758 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     226.286 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        94.000 counts
                 ·gc.time:                         42.000 ms



Result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.no_escape_lambda":
  136.191 ±(99.9%) 3.575 ns/op [Average]
  (min, avg, max) = (130.356, 136.191, 142.453), stdev = 3.344
  CI (99.9%): [132.616, 139.766] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.no_escape_lambda:·gc.alloc.rate":
  1440.814 ±(99.9%) 70.453 MB/sec [Average]
  (min, avg, max) = (1308.531, 1440.814, 1533.435), stdev = 65.901
  CI (99.9%): [1370.361, 1511.266] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.no_escape_lambda:·gc.alloc.rate.norm":
  216.099 ±(99.9%) 12.477 B/op [Average]
  (min, avg, max) = (200.002, 216.099, 224.320), stdev = 11.671
  CI (99.9%): [203.622, 228.576] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.no_escape_lambda:·gc.churn.G1_Eden_Space":
  1443.268 ±(99.9%) 69.896 MB/sec [Average]
  (min, avg, max) = (1311.722, 1443.268, 1523.219), stdev = 65.381
  CI (99.9%): [1373.372, 1513.164] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.no_escape_lambda:·gc.churn.G1_Eden_Space.norm":
  216.470 ±(99.9%) 12.489 B/op [Average]
  (min, avg, max) = (199.779, 216.470, 226.286), stdev = 11.682
  CI (99.9%): [203.981, 228.960] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.no_escape_lambda:·gc.churn.G1_Survivor_Space":
  0.008 ±(99.9%) 0.006 MB/sec [Average]
  (min, avg, max) = (0.003, 0.008, 0.021), stdev = 0.005
  CI (99.9%): [0.002, 0.013] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.no_escape_lambda:·gc.churn.G1_Survivor_Space.norm":
  0.001 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (0.001, 0.001, 0.003), stdev = 0.001
  CI (99.9%): [≈ 10⁻⁴, 0.002] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.no_escape_lambda:·gc.count":
  1348.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (82.000, 89.867, 95.000), stdev = 3.962
  CI (99.9%): [1348.000, 1348.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.no_escape_lambda:·gc.time":
  589.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (33.000, 39.267, 42.000), stdev = 2.890
  CI (99.9%): [589.000, 589.000] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.string_format
# Parameters: (aBoolean = true, aInt = 42, aString = P1, theLevel = INFO)

# Run progress: 57.14% complete, ETA 00:31:35
# Fork: 1 of 3
# Warmup Iteration   1: 16581.796 ns/op
# Warmup Iteration   2: 12090.195 ns/op
# Warmup Iteration   3: 12145.562 ns/op
# Warmup Iteration   4: 11949.026 ns/op
# Warmup Iteration   5: 11151.406 ns/op
Iteration   1: 12372.830 ns/op
                 ·gc.alloc.rate:                   533.358 MB/sec
                 ·gc.alloc.rate.norm:              7266.577 B/op
                 ·gc.churn.G1_Eden_Space:          537.443 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     7322.239 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.036 B/op
                 ·gc.count:                        34.000 counts
                 ·gc.time:                         17.000 ms

Iteration   2: 12274.261 ns/op
                 ·gc.alloc.rate:                   537.626 MB/sec
                 ·gc.alloc.rate.norm:              7266.407 B/op
                 ·gc.churn.G1_Eden_Space:          537.443 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     7263.929 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.033 B/op
                 ·gc.count:                        34.000 counts
                 ·gc.time:                         19.000 ms

Iteration   3: 11956.814 ns/op
                 ·gc.alloc.rate:                   551.821 MB/sec
                 ·gc.alloc.rate.norm:              7265.362 B/op
                 ·gc.churn.G1_Eden_Space:          553.250 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     7284.181 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.064 B/op
                 ·gc.count:                        35.000 counts
                 ·gc.time:                         21.000 ms

Iteration   4: 11905.517 ns/op
                 ·gc.alloc.rate:                   554.558 MB/sec
                 ·gc.alloc.rate.norm:              7269.916 B/op
                 ·gc.churn.G1_Eden_Space:          553.263 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     7252.944 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.058 B/op
                 ·gc.count:                        35.000 counts
                 ·gc.time:                         20.000 ms

Iteration   5: 11651.696 ns/op
                 ·gc.alloc.rate:                   566.704 MB/sec
                 ·gc.alloc.rate.norm:              7270.901 B/op
                 ·gc.churn.G1_Eden_Space:          569.056 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     7301.071 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.029 B/op
                 ·gc.count:                        36.000 counts
                 ·gc.time:                         21.000 ms


# Run progress: 59.52% complete, ETA 00:29:50
# Fork: 2 of 3
# Warmup Iteration   1: 17085.309 ns/op
# Warmup Iteration   2: 12131.932 ns/op
# Warmup Iteration   3: 11616.120 ns/op
# Warmup Iteration   4: 11782.991 ns/op
# Warmup Iteration   5: 12265.516 ns/op
Iteration   1: 12322.138 ns/op
                 ·gc.alloc.rate:                   535.799 MB/sec
                 ·gc.alloc.rate.norm:              7270.109 B/op
                 ·gc.churn.G1_Eden_Space:          537.433 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     7292.276 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.035 B/op
                 ·gc.count:                        34.000 counts
                 ·gc.time:                         20.000 ms

Iteration   2: 12075.696 ns/op
                 ·gc.alloc.rate:                   546.400 MB/sec
                 ·gc.alloc.rate.norm:              7265.249 B/op
                 ·gc.churn.G1_Eden_Space:          537.461 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     7146.392 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.030 B/op
                 ·gc.count:                        34.000 counts
                 ·gc.time:                         19.000 ms

Iteration   3: 12554.271 ns/op
                 ·gc.alloc.rate:                   525.562 MB/sec
                 ·gc.alloc.rate.norm:              7265.406 B/op
                 ·gc.churn.G1_Eden_Space:          537.447 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     7429.707 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.057 B/op
                 ·gc.count:                        34.000 counts
                 ·gc.time:                         20.000 ms

Iteration   4: 12479.731 ns/op
                 ·gc.alloc.rate:                   529.070 MB/sec
                 ·gc.alloc.rate.norm:              7270.449 B/op
                 ·gc.churn.G1_Eden_Space:          521.639 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     7168.332 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.047 B/op
                 ·gc.count:                        33.000 counts
                 ·gc.time:                         18.000 ms

Iteration   5: 11984.780 ns/op
                 ·gc.alloc.rate:                   550.530 MB/sec
                 ·gc.alloc.rate.norm:              7265.329 B/op
                 ·gc.churn.G1_Eden_Space:          553.250 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     7301.230 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.045 B/op
                 ·gc.count:                        35.000 counts
                 ·gc.time:                         17.000 ms


# Run progress: 61.90% complete, ETA 00:28:05
# Fork: 3 of 3
# Warmup Iteration   1: 18318.014 ns/op
# Warmup Iteration   2: 11735.794 ns/op
# Warmup Iteration   3: 11260.456 ns/op
# Warmup Iteration   4: 11279.011 ns/op
# Warmup Iteration   5: 11268.357 ns/op
Iteration   1: 11863.708 ns/op
                 ·gc.alloc.rate:                   556.405 MB/sec
                 ·gc.alloc.rate.norm:              7269.007 B/op
                 ·gc.churn.G1_Eden_Space:          553.224 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     7227.441 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.020 B/op
                 ·gc.count:                        35.000 counts
                 ·gc.time:                         20.000 ms

Iteration   2: 11360.707 ns/op
                 ·gc.alloc.rate:                   580.849 MB/sec
                 ·gc.alloc.rate.norm:              7266.100 B/op
                 ·gc.churn.G1_Eden_Space:          584.880 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     7316.522 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.042 B/op
                 ·gc.count:                        37.000 counts
                 ·gc.time:                         21.000 ms

Iteration   3: 11318.808 ns/op
                 ·gc.alloc.rate:                   582.977 MB/sec
                 ·gc.alloc.rate.norm:              7265.698 B/op
                 ·gc.churn.G1_Eden_Space:          584.889 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     7289.533 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.046 B/op
                 ·gc.count:                        37.000 counts
                 ·gc.time:                         18.000 ms

Iteration   4: 11523.236 ns/op
                 ·gc.alloc.rate:                   573.806 MB/sec
                 ·gc.alloc.rate.norm:              7280.834 B/op
                 ·gc.churn.G1_Eden_Space:          569.060 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     7220.618 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.063 B/op
                 ·gc.count:                        36.000 counts
                 ·gc.time:                         21.000 ms

Iteration   5: 12100.296 ns/op
                 ·gc.alloc.rate:                   546.752 MB/sec
                 ·gc.alloc.rate.norm:              7285.266 B/op
                 ·gc.churn.G1_Eden_Space:          553.228 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     7371.552 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.066 B/op
                 ·gc.count:                        35.000 counts
                 ·gc.time:                         19.000 ms



Result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.string_format":
  11982.966 ±(99.9%) 415.789 ns/op [Average]
  (min, avg, max) = (11318.808, 11982.966, 12554.271), stdev = 388.930
  CI (99.9%): [11567.177, 12398.755] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.string_format:·gc.alloc.rate":
  551.481 ±(99.9%) 19.395 MB/sec [Average]
  (min, avg, max) = (525.562, 551.481, 582.977), stdev = 18.142
  CI (99.9%): [532.086, 570.876] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.string_format:·gc.alloc.rate.norm":
  7269.507 ±(99.9%) 6.351 B/op [Average]
  (min, avg, max) = (7265.249, 7269.507, 7285.266), stdev = 5.941
  CI (99.9%): [7263.156, 7275.859] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.string_format:·gc.churn.G1_Eden_Space":
  552.198 ±(99.9%) 19.656 MB/sec [Average]
  (min, avg, max) = (521.639, 552.198, 584.889), stdev = 18.386
  CI (99.9%): [532.542, 571.854] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.string_format:·gc.churn.G1_Eden_Space.norm":
  7279.198 ±(99.9%) 77.015 B/op [Average]
  (min, avg, max) = (7146.392, 7279.198, 7429.707), stdev = 72.040
  CI (99.9%): [7202.183, 7356.213] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.string_format:·gc.churn.G1_Survivor_Space":
  0.003 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.002, 0.003, 0.005), stdev = 0.001
  CI (99.9%): [0.002, 0.005] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.string_format:·gc.churn.G1_Survivor_Space.norm":
  0.045 ±(99.9%) 0.015 B/op [Average]
  (min, avg, max) = (0.020, 0.045, 0.066), stdev = 0.014
  CI (99.9%): [0.029, 0.060] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.string_format:·gc.count":
  524.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (33.000, 34.933, 37.000), stdev = 1.163
  CI (99.9%): [524.000, 524.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.string_format:·gc.time":
  291.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (17.000, 19.400, 21.000), stdev = 1.404
  CI (99.9%): [291.000, 291.000] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.string_format
# Parameters: (aBoolean = true, aInt = 42, aString = P1, theLevel = FINE)

# Run progress: 64.29% complete, ETA 00:26:19
# Fork: 1 of 3
# Warmup Iteration   1: 1212.960 ns/op
# Warmup Iteration   2: 978.003 ns/op
# Warmup Iteration   3: 1011.328 ns/op
# Warmup Iteration   4: 993.543 ns/op
# Warmup Iteration   5: 995.869 ns/op
Iteration   1: 1016.222 ns/op
                 ·gc.alloc.rate:                   924.203 MB/sec
                 ·gc.alloc.rate.norm:              1034.214 B/op
                 ·gc.churn.G1_Eden_Space:          932.599 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     1043.610 B/op
                 ·gc.churn.G1_Survivor_Space:      0.007 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.008 B/op
                 ·gc.count:                        59.000 counts
                 ·gc.time:                         33.000 ms

Iteration   2: 993.572 ns/op
                 ·gc.alloc.rate:                   944.463 MB/sec
                 ·gc.alloc.rate.norm:              1033.330 B/op
                 ·gc.churn.G1_Eden_Space:          948.406 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     1037.645 B/op
                 ·gc.churn.G1_Survivor_Space:      0.008 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.009 B/op
                 ·gc.count:                        60.000 counts
                 ·gc.time:                         33.000 ms

Iteration   3: 1009.326 ns/op
                 ·gc.alloc.rate:                   928.816 MB/sec
                 ·gc.alloc.rate.norm:              1032.310 B/op
                 ·gc.churn.G1_Eden_Space:          916.798 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     1018.953 B/op
                 ·gc.churn.G1_Survivor_Space:      0.007 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.008 B/op
                 ·gc.count:                        58.000 counts
                 ·gc.time:                         29.000 ms

Iteration   4: 1002.768 ns/op
                 ·gc.alloc.rate:                   934.668 MB/sec
                 ·gc.alloc.rate.norm:              1032.015 B/op
                 ·gc.churn.G1_Eden_Space:          948.458 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     1047.241 B/op
                 ·gc.churn.G1_Survivor_Space:      0.007 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.008 B/op
                 ·gc.count:                        60.000 counts
                 ·gc.time:                         29.000 ms

Iteration   5: 960.768 ns/op
                 ·gc.alloc.rate:                   975.469 MB/sec
                 ·gc.alloc.rate.norm:              1032.000 B/op
                 ·gc.churn.G1_Eden_Space:          964.228 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     1020.108 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.006 B/op
                 ·gc.count:                        61.000 counts
                 ·gc.time:                         28.000 ms


# Run progress: 66.67% complete, ETA 00:24:34
# Fork: 2 of 3
# Warmup Iteration   1: 1201.539 ns/op
# Warmup Iteration   2: 1000.956 ns/op
# Warmup Iteration   3: 981.521 ns/op
# Warmup Iteration   4: 993.549 ns/op
# Warmup Iteration   5: 995.941 ns/op
Iteration   1: 991.866 ns/op
                 ·gc.alloc.rate:                   945.131 MB/sec
                 ·gc.alloc.rate.norm:              1032.302 B/op
                 ·gc.churn.G1_Eden_Space:          926.305 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     1011.740 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.003 B/op
                 ·gc.count:                        32.000 counts
                 ·gc.time:                         23.000 ms

Iteration   2: 999.535 ns/op
                 ·gc.alloc.rate:                   937.709 MB/sec
                 ·gc.alloc.rate.norm:              1032.118 B/op
                 ·gc.churn.G1_Eden_Space:          955.237 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     1051.411 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.004 B/op
                 ·gc.count:                        33.000 counts
                 ·gc.time:                         21.000 ms

Iteration   3: 1020.425 ns/op
                 ·gc.alloc.rate:                   918.571 MB/sec
                 ·gc.alloc.rate.norm:              1032.121 B/op
                 ·gc.churn.G1_Eden_Space:          897.404 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     1008.337 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.003 B/op
                 ·gc.count:                        31.000 counts
                 ·gc.time:                         20.000 ms

Iteration   4: 997.104 ns/op
                 ·gc.alloc.rate:                   940.512 MB/sec
                 ·gc.alloc.rate.norm:              1032.683 B/op
                 ·gc.churn.G1_Eden_Space:          955.239 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     1048.853 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.003 B/op
                 ·gc.count:                        33.000 counts
                 ·gc.time:                         22.000 ms

Iteration   5: 1005.099 ns/op
                 ·gc.alloc.rate:                   932.523 MB/sec
                 ·gc.alloc.rate.norm:              1032.086 B/op
                 ·gc.churn.G1_Eden_Space:          926.329 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     1025.231 B/op
                 ·gc.churn.G1_Survivor_Space:      0.006 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.007 B/op
                 ·gc.count:                        32.000 counts
                 ·gc.time:                         21.000 ms


# Run progress: 69.05% complete, ETA 00:22:49
# Fork: 3 of 3
# Warmup Iteration   1: 1191.465 ns/op
# Warmup Iteration   2: 997.278 ns/op
# Warmup Iteration   3: 969.669 ns/op
# Warmup Iteration   4: 936.923 ns/op
# Warmup Iteration   5: 983.236 ns/op
Iteration   1: 976.856 ns/op
                 ·gc.alloc.rate:                   959.653 MB/sec
                 ·gc.alloc.rate.norm:              1032.236 B/op
                 ·gc.churn.G1_Eden_Space:          977.781 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     1051.734 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.003 B/op
                 ·gc.count:                        34.000 counts
                 ·gc.time:                         20.000 ms

Iteration   2: 946.711 ns/op
                 ·gc.alloc.rate:                   990.103 MB/sec
                 ·gc.alloc.rate.norm:              1032.156 B/op
                 ·gc.churn.G1_Eden_Space:          977.748 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     1019.276 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.004 B/op
                 ·gc.count:                        34.000 counts
                 ·gc.time:                         20.000 ms

Iteration   3: 981.761 ns/op
                 ·gc.alloc.rate:                   954.916 MB/sec
                 ·gc.alloc.rate.norm:              1032.334 B/op
                 ·gc.churn.G1_Eden_Space:          948.994 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     1025.932 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.004 B/op
                 ·gc.count:                        33.000 counts
                 ·gc.time:                         20.000 ms

Iteration   4: 969.316 ns/op
                 ·gc.alloc.rate:                   967.356 MB/sec
                 ·gc.alloc.rate.norm:              1032.531 B/op
                 ·gc.churn.G1_Eden_Space:          977.735 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     1043.609 B/op
                 ·gc.churn.G1_Survivor_Space:      0.006 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.007 B/op
                 ·gc.count:                        34.000 counts
                 ·gc.time:                         24.000 ms

Iteration   5: 983.801 ns/op
                 ·gc.alloc.rate:                   954.414 MB/sec
                 ·gc.alloc.rate.norm:              1033.924 B/op
                 ·gc.churn.G1_Eden_Space:          948.995 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     1028.054 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.003 B/op
                 ·gc.count:                        33.000 counts
                 ·gc.time:                         21.000 ms



Result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.string_format":
  990.342 ±(99.9%) 22.074 ns/op [Average]
  (min, avg, max) = (946.711, 990.342, 1020.425), stdev = 20.648
  CI (99.9%): [968.268, 1012.416] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.string_format:·gc.alloc.rate":
  947.234 ±(99.9%) 21.225 MB/sec [Average]
  (min, avg, max) = (918.571, 947.234, 990.103), stdev = 19.853
  CI (99.9%): [926.009, 968.458] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.string_format:·gc.alloc.rate.norm":
  1032.557 ±(99.9%) 0.749 B/op [Average]
  (min, avg, max) = (1032.000, 1032.557, 1034.214), stdev = 0.701
  CI (99.9%): [1031.808, 1033.307] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.string_format:·gc.churn.G1_Eden_Space":
  946.817 ±(99.9%) 25.098 MB/sec [Average]
  (min, avg, max) = (897.404, 946.817, 977.781), stdev = 23.477
  CI (99.9%): [921.719, 971.916] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.string_format:·gc.churn.G1_Eden_Space.norm":
  1032.116 ±(99.9%) 15.975 B/op [Average]
  (min, avg, max) = (1008.337, 1032.116, 1051.734), stdev = 14.943
  CI (99.9%): [1016.141, 1048.090] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.string_format:·gc.churn.G1_Survivor_Space":
  0.005 ±(99.9%) 0.002 MB/sec [Average]
  (min, avg, max) = (0.002, 0.005, 0.008), stdev = 0.002
  CI (99.9%): [0.003, 0.007] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.string_format:·gc.churn.G1_Survivor_Space.norm":
  0.005 ±(99.9%) 0.002 B/op [Average]
  (min, avg, max) = (0.003, 0.005, 0.009), stdev = 0.002
  CI (99.9%): [0.003, 0.007] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.string_format:·gc.count":
  627.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (31.000, 41.800, 61.000), stdev = 13.067
  CI (99.9%): [627.000, 627.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.string_format:·gc.time":
  364.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (20.000, 24.267, 33.000), stdev = 4.803
  CI (99.9%): [364.000, 364.000] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_parametrized
# Parameters: (aBoolean = true, aInt = 42, aString = P1, theLevel = INFO)

# Run progress: 71.43% complete, ETA 00:21:03
# Fork: 1 of 3
# Warmup Iteration   1: 18865.958 ns/op
# Warmup Iteration   2: 12907.924 ns/op
# Warmup Iteration   3: 12761.479 ns/op
# Warmup Iteration   4: 12436.826 ns/op
# Warmup Iteration   5: 12583.202 ns/op
Iteration   1: 12799.632 ns/op
                 ·gc.alloc.rate:                   669.502 MB/sec
                 ·gc.alloc.rate.norm:              9436.245 B/op
                 ·gc.churn.G1_Eden_Space:          679.892 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     9582.692 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.050 B/op
                 ·gc.count:                        35.000 counts
                 ·gc.time:                         30.000 ms

Iteration   2: 12823.839 ns/op
                 ·gc.alloc.rate:                   668.164 MB/sec
                 ·gc.alloc.rate.norm:              9434.843 B/op
                 ·gc.churn.G1_Eden_Space:          660.486 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     9326.437 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.032 B/op
                 ·gc.count:                        34.000 counts
                 ·gc.time:                         21.000 ms

Iteration   3: 12599.077 ns/op
                 ·gc.alloc.rate:                   679.927 MB/sec
                 ·gc.alloc.rate.norm:              9433.033 B/op
                 ·gc.churn.G1_Eden_Space:          679.889 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     9432.503 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.072 B/op
                 ·gc.count:                        35.000 counts
                 ·gc.time:                         22.000 ms

Iteration   4: 12567.727 ns/op
                 ·gc.alloc.rate:                   682.956 MB/sec
                 ·gc.alloc.rate.norm:              9451.360 B/op
                 ·gc.churn.G1_Eden_Space:          679.702 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     9406.326 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.057 B/op
                 ·gc.count:                        35.000 counts
                 ·gc.time:                         21.000 ms

Iteration   5: 12522.814 ns/op
                 ·gc.alloc.rate:                   684.424 MB/sec
                 ·gc.alloc.rate.norm:              9438.244 B/op
                 ·gc.churn.G1_Eden_Space:          699.286 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     9643.201 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.031 B/op
                 ·gc.count:                        36.000 counts
                 ·gc.time:                         26.000 ms


# Run progress: 73.81% complete, ETA 00:19:18
# Fork: 2 of 3
# Warmup Iteration   1: 18955.059 ns/op
# Warmup Iteration   2: 13562.245 ns/op
# Warmup Iteration   3: 12714.910 ns/op
# Warmup Iteration   4: 13299.278 ns/op
# Warmup Iteration   5: 12981.252 ns/op
Iteration   1: 12154.909 ns/op
                 ·gc.alloc.rate:                   704.864 MB/sec
                 ·gc.alloc.rate.norm:              9434.033 B/op
                 ·gc.churn.G1_Eden_Space:          719.901 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     9635.292 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.030 B/op
                 ·gc.count:                        45.000 counts
                 ·gc.time:                         29.000 ms

Iteration   2: 12277.316 ns/op
                 ·gc.alloc.rate:                   697.711 MB/sec
                 ·gc.alloc.rate.norm:              9432.783 B/op
                 ·gc.churn.G1_Eden_Space:          687.866 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     9299.678 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.054 B/op
                 ·gc.count:                        43.000 counts
                 ·gc.time:                         27.000 ms

Iteration   3: 12544.918 ns/op
                 ·gc.alloc.rate:                   683.521 MB/sec
                 ·gc.alloc.rate.norm:              9442.006 B/op
                 ·gc.churn.G1_Eden_Space:          687.891 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     9502.375 B/op
                 ·gc.churn.G1_Survivor_Space:      0.006 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.083 B/op
                 ·gc.count:                        43.000 counts
                 ·gc.time:                         26.000 ms

Iteration   4: 12153.256 ns/op
                 ·gc.alloc.rate:                   706.891 MB/sec
                 ·gc.alloc.rate.norm:              9459.921 B/op
                 ·gc.churn.G1_Eden_Space:          703.892 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     9419.790 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.062 B/op
                 ·gc.count:                        44.000 counts
                 ·gc.time:                         30.000 ms

Iteration   5: 12446.950 ns/op
                 ·gc.alloc.rate:                   688.378 MB/sec
                 ·gc.alloc.rate.norm:              9435.172 B/op
                 ·gc.churn.G1_Eden_Space:          687.874 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     9428.265 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.028 B/op
                 ·gc.count:                        43.000 counts
                 ·gc.time:                         25.000 ms


# Run progress: 76.19% complete, ETA 00:17:33
# Fork: 3 of 3
# Warmup Iteration   1: 20163.251 ns/op
# Warmup Iteration   2: 13059.443 ns/op
# Warmup Iteration   3: 13110.047 ns/op
# Warmup Iteration   4: 12883.713 ns/op
# Warmup Iteration   5: 12296.811 ns/op
Iteration   1: 13090.769 ns/op
                 ·gc.alloc.rate:                   656.148 MB/sec
                 ·gc.alloc.rate.norm:              9458.530 B/op
                 ·gc.churn.G1_Eden_Space:          655.885 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     9454.743 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.037 B/op
                 ·gc.count:                        41.000 counts
                 ·gc.time:                         23.000 ms

Iteration   2: 12714.309 ns/op
                 ·gc.alloc.rate:                   675.857 MB/sec
                 ·gc.alloc.rate.norm:              9462.324 B/op
                 ·gc.churn.G1_Eden_Space:          687.886 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     9630.739 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.063 B/op
                 ·gc.count:                        43.000 counts
                 ·gc.time:                         25.000 ms

Iteration   3: 12546.446 ns/op
                 ·gc.alloc.rate:                   684.807 MB/sec
                 ·gc.alloc.rate.norm:              9461.062 B/op
                 ·gc.churn.G1_Eden_Space:          671.887 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     9282.565 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.061 B/op
                 ·gc.count:                        42.000 counts
                 ·gc.time:                         29.000 ms

Iteration   4: 13079.073 ns/op
                 ·gc.alloc.rate:                   657.699 MB/sec
                 ·gc.alloc.rate.norm:              9471.582 B/op
                 ·gc.churn.G1_Eden_Space:          671.939 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     9676.644 B/op
                 ·gc.churn.G1_Survivor_Space:      0.006 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.083 B/op
                 ·gc.count:                        42.000 counts
                 ·gc.time:                         25.000 ms

Iteration   5: 12364.857 ns/op
                 ·gc.alloc.rate:                   694.984 MB/sec
                 ·gc.alloc.rate.norm:              9462.478 B/op
                 ·gc.churn.G1_Eden_Space:          687.902 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     9366.048 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.036 B/op
                 ·gc.count:                        43.000 counts
                 ·gc.time:                         25.000 ms



Result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_parametrized":
  12579.059 ±(99.9%) 307.760 ns/op [Average]
  (min, avg, max) = (12153.256, 12579.059, 13090.769), stdev = 287.879
  CI (99.9%): [12271.299, 12886.820] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_parametrized:·gc.alloc.rate":
  682.389 ±(99.9%) 16.318 MB/sec [Average]
  (min, avg, max) = (656.148, 682.389, 706.891), stdev = 15.264
  CI (99.9%): [666.071, 698.706] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_parametrized:·gc.alloc.rate.norm":
  9447.574 ±(99.9%) 14.738 B/op [Average]
  (min, avg, max) = (9432.783, 9447.574, 9471.582), stdev = 13.786
  CI (99.9%): [9432.837, 9462.312] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_parametrized:·gc.churn.G1_Eden_Space":
  684.145 ±(99.9%) 17.335 MB/sec [Average]
  (min, avg, max) = (655.885, 684.145, 719.901), stdev = 16.215
  CI (99.9%): [666.810, 701.480] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_parametrized:·gc.churn.G1_Eden_Space.norm":
  9472.486 ±(99.9%) 141.431 B/op [Average]
  (min, avg, max) = (9282.565, 9472.486, 9676.644), stdev = 132.295
  CI (99.9%): [9331.055, 9613.918] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_parametrized:·gc.churn.G1_Survivor_Space":
  0.004 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.002, 0.004, 0.006), stdev = 0.001
  CI (99.9%): [0.002, 0.005] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_parametrized:·gc.churn.G1_Survivor_Space.norm":
  0.052 ±(99.9%) 0.020 B/op [Average]
  (min, avg, max) = (0.028, 0.052, 0.083), stdev = 0.019
  CI (99.9%): [0.032, 0.072] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_parametrized:·gc.count":
  604.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (34.000, 40.267, 45.000), stdev = 3.973
  CI (99.9%): [604.000, 604.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_parametrized:·gc.time":
  384.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (21.000, 25.600, 30.000), stdev = 3.019
  CI (99.9%): [384.000, 384.000] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_parametrized
# Parameters: (aBoolean = true, aInt = 42, aString = P1, theLevel = FINE)

# Run progress: 78.57% complete, ETA 00:15:47
# Fork: 1 of 3
# Warmup Iteration   1: 108.066 ns/op
# Warmup Iteration   2: 99.013 ns/op
# Warmup Iteration   3: 99.169 ns/op
# Warmup Iteration   4: 96.863 ns/op
# Warmup Iteration   5: 99.370 ns/op
Iteration   1: 101.637 ns/op
                 ·gc.alloc.rate:                   1502.186 MB/sec
                 ·gc.alloc.rate.norm:              168.127 B/op
                 ·gc.churn.G1_Eden_Space:          1506.763 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     168.640 B/op
                 ·gc.churn.G1_Survivor_Space:      0.072 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.008 B/op
                 ·gc.count:                        92.000 counts
                 ·gc.time:                         42.000 ms

Iteration   2: 97.721 ns/op
                 ·gc.alloc.rate:                   1561.237 MB/sec
                 ·gc.alloc.rate.norm:              168.000 B/op
                 ·gc.churn.G1_Eden_Space:          1555.921 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     167.428 B/op
                 ·gc.churn.G1_Survivor_Space:      0.009 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        95.000 counts
                 ·gc.time:                         52.000 ms

Iteration   3: 95.162 ns/op
                 ·gc.alloc.rate:                   1606.417 MB/sec
                 ·gc.alloc.rate.norm:              168.331 B/op
                 ·gc.churn.G1_Eden_Space:          1621.482 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     169.909 B/op
                 ·gc.churn.G1_Survivor_Space:      0.050 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.005 B/op
                 ·gc.count:                        99.000 counts
                 ·gc.time:                         55.000 ms

Iteration   4: 97.388 ns/op
                 ·gc.alloc.rate:                   1566.592 MB/sec
                 ·gc.alloc.rate.norm:              168.000 B/op
                 ·gc.churn.G1_Eden_Space:          1555.942 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     166.858 B/op
                 ·gc.churn.G1_Survivor_Space:      0.006 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        95.000 counts
                 ·gc.time:                         45.000 ms

Iteration   5: 100.801 ns/op
                 ·gc.alloc.rate:                   1513.701 MB/sec
                 ·gc.alloc.rate.norm:              168.017 B/op
                 ·gc.churn.G1_Eden_Space:          1523.180 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     169.069 B/op
                 ·gc.churn.G1_Survivor_Space:      0.007 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        93.000 counts
                 ·gc.time:                         42.000 ms


# Run progress: 80.95% complete, ETA 00:14:02
# Fork: 2 of 3
# Warmup Iteration   1: 107.534 ns/op
# Warmup Iteration   2: 99.955 ns/op
# Warmup Iteration   3: 99.303 ns/op
# Warmup Iteration   4: 99.920 ns/op
# Warmup Iteration   5: 99.035 ns/op
Iteration   1: 98.190 ns/op
                 ·gc.alloc.rate:                   1554.151 MB/sec
                 ·gc.alloc.rate.norm:              168.037 B/op
                 ·gc.churn.G1_Eden_Space:          1575.391 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     170.333 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        47.000 counts
                 ·gc.time:                         33.000 ms

Iteration   2: 98.213 ns/op
                 ·gc.alloc.rate:                   1554.408 MB/sec
                 ·gc.alloc.rate.norm:              168.099 B/op
                 ·gc.churn.G1_Eden_Space:          1541.886 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     166.745 B/op
                 ·gc.churn.G1_Survivor_Space:      0.007 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        46.000 counts
                 ·gc.time:                         31.000 ms

Iteration   3: 98.860 ns/op
                 ·gc.alloc.rate:                   1544.718 MB/sec
                 ·gc.alloc.rate.norm:              168.162 B/op
                 ·gc.churn.G1_Eden_Space:          1541.821 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     167.846 B/op
                 ·gc.churn.G1_Survivor_Space:      0.007 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        46.000 counts
                 ·gc.time:                         31.000 ms

Iteration   4: 98.811 ns/op
                 ·gc.alloc.rate:                   1544.237 MB/sec
                 ·gc.alloc.rate.norm:              168.019 B/op
                 ·gc.churn.G1_Eden_Space:          1575.247 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     171.393 B/op
                 ·gc.churn.G1_Survivor_Space:      0.006 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        47.000 counts
                 ·gc.time:                         32.000 ms

Iteration   5: 100.877 ns/op
                 ·gc.alloc.rate:                   1512.525 MB/sec
                 ·gc.alloc.rate.norm:              168.002 B/op
                 ·gc.churn.G1_Eden_Space:          1508.441 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     167.548 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        45.000 counts
                 ·gc.time:                         28.000 ms


# Run progress: 83.33% complete, ETA 00:12:17
# Fork: 3 of 3
# Warmup Iteration   1: 109.999 ns/op
# Warmup Iteration   2: 97.927 ns/op
# Warmup Iteration   3: 97.490 ns/op
# Warmup Iteration   4: 96.761 ns/op
# Warmup Iteration   5: 97.822 ns/op
Iteration   1: 99.010 ns/op
                 ·gc.alloc.rate:                   1541.416 MB/sec
                 ·gc.alloc.rate.norm:              168.047 B/op
                 ·gc.churn.G1_Eden_Space:          1541.901 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     168.099 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        46.000 counts
                 ·gc.time:                         31.000 ms

Iteration   2: 98.025 ns/op
                 ·gc.alloc.rate:                   1556.980 MB/sec
                 ·gc.alloc.rate.norm:              168.064 B/op
                 ·gc.churn.G1_Eden_Space:          1575.330 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     170.045 B/op
                 ·gc.churn.G1_Survivor_Space:      0.007 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        47.000 counts
                 ·gc.time:                         34.000 ms

Iteration   3: 97.179 ns/op
                 ·gc.alloc.rate:                   1571.929 MB/sec
                 ·gc.alloc.rate.norm:              168.203 B/op
                 ·gc.churn.G1_Eden_Space:          1575.447 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     168.580 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        47.000 counts
                 ·gc.time:                         35.000 ms

Iteration   4: 99.591 ns/op
                 ·gc.alloc.rate:                   1532.104 MB/sec
                 ·gc.alloc.rate.norm:              168.008 B/op
                 ·gc.churn.G1_Eden_Space:          1541.955 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     169.088 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        46.000 counts
                 ·gc.time:                         30.000 ms

Iteration   5: 95.981 ns/op
                 ·gc.alloc.rate:                   1589.637 MB/sec
                 ·gc.alloc.rate.norm:              168.000 B/op
                 ·gc.churn.G1_Eden_Space:          1575.448 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     166.500 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        47.000 counts
                 ·gc.time:                         31.000 ms



Result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_parametrized":
  98.496 ±(99.9%) 1.894 ns/op [Average]
  (min, avg, max) = (95.162, 98.496, 101.637), stdev = 1.772
  CI (99.9%): [96.602, 100.390] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_parametrized:·gc.alloc.rate":
  1550.149 ±(99.9%) 30.217 MB/sec [Average]
  (min, avg, max) = (1502.186, 1550.149, 1606.417), stdev = 28.265
  CI (99.9%): [1519.932, 1580.366] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_parametrized:·gc.alloc.rate.norm":
  168.074 ±(99.9%) 0.102 B/op [Average]
  (min, avg, max) = (168.000, 168.074, 168.331), stdev = 0.096
  CI (99.9%): [167.972, 168.177] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_parametrized:·gc.churn.G1_Eden_Space":
  1554.410 ±(99.9%) 32.181 MB/sec [Average]
  (min, avg, max) = (1506.763, 1554.410, 1621.482), stdev = 30.102
  CI (99.9%): [1522.229, 1586.592] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_parametrized:·gc.churn.G1_Eden_Space.norm":
  168.539 ±(99.9%) 1.544 B/op [Average]
  (min, avg, max) = (166.500, 168.539, 171.393), stdev = 1.444
  CI (99.9%): [166.995, 170.083] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_parametrized:·gc.churn.G1_Survivor_Space":
  0.013 ±(99.9%) 0.021 MB/sec [Average]
  (min, avg, max) = (0.003, 0.013, 0.072), stdev = 0.020
  CI (99.9%): [≈ 0, 0.034] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_parametrized:·gc.churn.G1_Survivor_Space.norm":
  0.001 ±(99.9%) 0.002 B/op [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.001, 0.008), stdev = 0.002
  CI (99.9%): [≈ 0, 0.004] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_parametrized:·gc.count":
  938.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (45.000, 62.533, 99.000), stdev = 23.667
  CI (99.9%): [938.000, 938.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_parametrized:·gc.time":
  552.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (28.000, 36.800, 55.000), stdev = 8.411
  CI (99.9%): [552.000, 552.000] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_unparametrized
# Parameters: (aBoolean = true, aInt = 42, aString = P1, theLevel = INFO)

# Run progress: 85.71% complete, ETA 00:10:31
# Fork: 1 of 3
# Warmup Iteration   1: 15700.344 ns/op
# Warmup Iteration   2: 10522.142 ns/op
# Warmup Iteration   3: 11047.242 ns/op
# Warmup Iteration   4: 10888.476 ns/op
# Warmup Iteration   5: 10375.944 ns/op
Iteration   1: 10295.206 ns/op
                 ·gc.alloc.rate:                   570.382 MB/sec
                 ·gc.alloc.rate.norm:              6466.238 B/op
                 ·gc.churn.G1_Eden_Space:          569.045 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6451.081 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.021 B/op
                 ·gc.count:                        36.000 counts
                 ·gc.time:                         22.000 ms

Iteration   2: 10307.354 ns/op
                 ·gc.alloc.rate:                   569.712 MB/sec
                 ·gc.alloc.rate.norm:              6466.248 B/op
                 ·gc.churn.G1_Eden_Space:          569.049 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6458.728 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.036 B/op
                 ·gc.count:                        36.000 counts
                 ·gc.time:                         21.000 ms

Iteration   3: 10320.736 ns/op
                 ·gc.alloc.rate:                   568.870 MB/sec
                 ·gc.alloc.rate.norm:              6464.669 B/op
                 ·gc.churn.G1_Eden_Space:          569.082 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6467.073 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.036 B/op
                 ·gc.count:                        36.000 counts
                 ·gc.time:                         19.000 ms

Iteration   4: 10196.659 ns/op
                 ·gc.alloc.rate:                   576.271 MB/sec
                 ·gc.alloc.rate.norm:              6470.112 B/op
                 ·gc.churn.G1_Eden_Space:          584.890 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6566.878 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.035 B/op
                 ·gc.count:                        37.000 counts
                 ·gc.time:                         22.000 ms

Iteration   5: 10277.142 ns/op
                 ·gc.alloc.rate:                   571.457 MB/sec
                 ·gc.alloc.rate.norm:              6466.886 B/op
                 ·gc.churn.G1_Eden_Space:          569.061 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6439.771 B/op
                 ·gc.churn.G1_Survivor_Space:      0.007 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.078 B/op
                 ·gc.count:                        36.000 counts
                 ·gc.time:                         21.000 ms


# Run progress: 88.10% complete, ETA 00:08:46
# Fork: 2 of 3
# Warmup Iteration   1: 15191.935 ns/op
# Warmup Iteration   2: 10052.655 ns/op
# Warmup Iteration   3: 10278.460 ns/op
# Warmup Iteration   4: 10698.273 ns/op
# Warmup Iteration   5: 10590.113 ns/op
Iteration   1: 10097.456 ns/op
                 ·gc.alloc.rate:                   581.560 MB/sec
                 ·gc.alloc.rate.norm:              6466.110 B/op
                 ·gc.churn.G1_Eden_Space:          575.925 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6403.466 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.035 B/op
                 ·gc.count:                        36.000 counts
                 ·gc.time:                         21.000 ms

Iteration   2: 10602.147 ns/op
                 ·gc.alloc.rate:                   553.819 MB/sec
                 ·gc.alloc.rate.norm:              6465.764 B/op
                 ·gc.churn.G1_Eden_Space:          559.897 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6536.723 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.031 B/op
                 ·gc.count:                        35.000 counts
                 ·gc.time:                         20.000 ms

Iteration   3: 10477.131 ns/op
                 ·gc.alloc.rate:                   560.327 MB/sec
                 ·gc.alloc.rate.norm:              6464.557 B/op
                 ·gc.churn.G1_Eden_Space:          559.891 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6459.529 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.034 B/op
                 ·gc.count:                        35.000 counts
                 ·gc.time:                         18.000 ms

Iteration   4: 10680.892 ns/op
                 ·gc.alloc.rate:                   549.917 MB/sec
                 ·gc.alloc.rate.norm:              6467.732 B/op
                 ·gc.churn.G1_Eden_Space:          543.912 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6397.095 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.036 B/op
                 ·gc.count:                        34.000 counts
                 ·gc.time:                         20.000 ms

Iteration   5: 9999.150 ns/op
                 ·gc.alloc.rate:                   589.110 MB/sec
                 ·gc.alloc.rate.norm:              6486.161 B/op
                 ·gc.churn.G1_Eden_Space:          591.931 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6517.225 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.029 B/op
                 ·gc.count:                        37.000 counts
                 ·gc.time:                         22.000 ms


# Run progress: 90.48% complete, ETA 00:07:01
# Fork: 3 of 3
# Warmup Iteration   1: 15691.706 ns/op
# Warmup Iteration   2: 10473.408 ns/op
# Warmup Iteration   3: 10242.451 ns/op
# Warmup Iteration   4: 10670.009 ns/op
# Warmup Iteration   5: 10493.370 ns/op
Iteration   1: 9829.870 ns/op
                 ·gc.alloc.rate:                   597.791 MB/sec
                 ·gc.alloc.rate.norm:              6470.692 B/op
                 ·gc.churn.G1_Eden_Space:          600.659 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6501.729 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.021 B/op
                 ·gc.count:                        38.000 counts
                 ·gc.time:                         22.000 ms

Iteration   2: 9904.052 ns/op
                 ·gc.alloc.rate:                   592.871 MB/sec
                 ·gc.alloc.rate.norm:              6465.559 B/op
                 ·gc.churn.G1_Eden_Space:          584.877 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6378.381 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.039 B/op
                 ·gc.count:                        37.000 counts
                 ·gc.time:                         21.000 ms

Iteration   3: 10223.628 ns/op
                 ·gc.alloc.rate:                   575.100 MB/sec
                 ·gc.alloc.rate.norm:              6474.737 B/op
                 ·gc.churn.G1_Eden_Space:          584.821 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6584.179 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.044 B/op
                 ·gc.count:                        37.000 counts
                 ·gc.time:                         21.000 ms

Iteration   4: 9976.115 ns/op
                 ·gc.alloc.rate:                   588.865 MB/sec
                 ·gc.alloc.rate.norm:              6468.680 B/op
                 ·gc.churn.G1_Eden_Space:          584.869 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6424.787 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.033 B/op
                 ·gc.count:                        37.000 counts
                 ·gc.time:                         23.000 ms

Iteration   5: 10133.425 ns/op
                 ·gc.alloc.rate:                   580.507 MB/sec
                 ·gc.alloc.rate.norm:              6477.300 B/op
                 ·gc.churn.G1_Eden_Space:          584.888 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6526.180 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.049 B/op
                 ·gc.count:                        37.000 counts
                 ·gc.time:                         20.000 ms



Result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_unparametrized":
  10221.398 ±(99.9%) 261.021 ns/op [Average]
  (min, avg, max) = (9829.870, 10221.398, 10680.892), stdev = 244.160
  CI (99.9%): [9960.376, 10482.419] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_unparametrized:·gc.alloc.rate":
  575.104 ±(99.9%) 14.839 MB/sec [Average]
  (min, avg, max) = (549.917, 575.104, 597.791), stdev = 13.881
  CI (99.9%): [560.265, 589.943] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_unparametrized:·gc.alloc.rate.norm":
  6469.430 ±(99.9%) 6.313 B/op [Average]
  (min, avg, max) = (6464.557, 6469.430, 6486.161), stdev = 5.905
  CI (99.9%): [6463.117, 6475.742] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_unparametrized:·gc.churn.G1_Eden_Space":
  575.520 ±(99.9%) 15.631 MB/sec [Average]
  (min, avg, max) = (543.912, 575.520, 600.659), stdev = 14.621
  CI (99.9%): [559.889, 591.151] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_unparametrized:·gc.churn.G1_Eden_Space.norm":
  6474.188 ±(99.9%) 66.825 B/op [Average]
  (min, avg, max) = (6378.381, 6474.188, 6584.179), stdev = 62.508
  CI (99.9%): [6407.364, 6541.013] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_unparametrized:·gc.churn.G1_Survivor_Space":
  0.003 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.002, 0.003, 0.007), stdev = 0.001
  CI (99.9%): [0.002, 0.005] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_unparametrized:·gc.churn.G1_Survivor_Space.norm":
  0.037 ±(99.9%) 0.015 B/op [Average]
  (min, avg, max) = (0.021, 0.037, 0.078), stdev = 0.014
  CI (99.9%): [0.023, 0.052] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_unparametrized:·gc.count":
  544.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (34.000, 36.267, 38.000), stdev = 1.033
  CI (99.9%): [544.000, 544.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_unparametrized:·gc.time":
  313.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (18.000, 20.867, 23.000), stdev = 1.302
  CI (99.9%): [313.000, 313.000] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_unparametrized
# Parameters: (aBoolean = true, aInt = 42, aString = P1, theLevel = FINE)

# Run progress: 92.86% complete, ETA 00:05:15
# Fork: 1 of 3
# Warmup Iteration   1: 153.033 ns/op
# Warmup Iteration   2: 134.399 ns/op
# Warmup Iteration   3: 129.474 ns/op
# Warmup Iteration   4: 129.957 ns/op
# Warmup Iteration   5: 128.242 ns/op
Iteration   1: 131.683 ns/op
                 ·gc.alloc.rate:                   1379.955 MB/sec
                 ·gc.alloc.rate.norm:              200.106 B/op
                 ·gc.churn.G1_Eden_Space:          1375.725 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     199.493 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        43.000 counts
                 ·gc.time:                         28.000 ms

Iteration   2: 133.952 ns/op
                 ·gc.alloc.rate:                   1356.239 MB/sec
                 ·gc.alloc.rate.norm:              200.044 B/op
                 ·gc.churn.G1_Eden_Space:          1375.803 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     202.929 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        43.000 counts
                 ·gc.time:                         23.000 ms

Iteration   3: 129.797 ns/op
                 ·gc.alloc.rate:                   1400.898 MB/sec
                 ·gc.alloc.rate.norm:              200.234 B/op
                 ·gc.churn.G1_Eden_Space:          1407.717 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     201.208 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        44.000 counts
                 ·gc.time:                         28.000 ms

Iteration   4: 127.044 ns/op
                 ·gc.alloc.rate:                   1430.185 MB/sec
                 ·gc.alloc.rate.norm:              200.076 B/op
                 ·gc.churn.G1_Eden_Space:          1407.772 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     196.941 B/op
                 ·gc.churn.G1_Survivor_Space:      0.017 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.002 B/op
                 ·gc.count:                        44.000 counts
                 ·gc.time:                         26.000 ms

Iteration   5: 128.586 ns/op
                 ·gc.alloc.rate:                   1412.457 MB/sec
                 ·gc.alloc.rate.norm:              200.000 B/op
                 ·gc.churn.G1_Eden_Space:          1439.739 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     203.863 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        45.000 counts
                 ·gc.time:                         23.000 ms


# Run progress: 95.24% complete, ETA 00:03:30
# Fork: 2 of 3
# Warmup Iteration   1: 154.781 ns/op
# Warmup Iteration   2: 134.321 ns/op
# Warmup Iteration   3: 134.856 ns/op
# Warmup Iteration   4: 132.646 ns/op
# Warmup Iteration   5: 130.711 ns/op
Iteration   1: 132.262 ns/op
                 ·gc.alloc.rate:                   1373.637 MB/sec
                 ·gc.alloc.rate.norm:              200.057 B/op
                 ·gc.churn.G1_Eden_Space:          1375.778 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     200.369 B/op
                 ·gc.churn.G1_Survivor_Space:      0.009 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        86.000 counts
                 ·gc.time:                         39.000 ms

Iteration   2: 130.056 ns/op
                 ·gc.alloc.rate:                   1396.564 MB/sec
                 ·gc.alloc.rate.norm:              200.002 B/op
                 ·gc.churn.G1_Eden_Space:          1407.787 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     201.609 B/op
                 ·gc.churn.G1_Survivor_Space:      0.010 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        88.000 counts
                 ·gc.time:                         40.000 ms

Iteration   3: 129.711 ns/op
                 ·gc.alloc.rate:                   1402.789 MB/sec
                 ·gc.alloc.rate.norm:              200.363 B/op
                 ·gc.churn.G1_Eden_Space:          1391.771 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     198.789 B/op
                 ·gc.churn.G1_Survivor_Space:      0.092 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.013 B/op
                 ·gc.count:                        87.000 counts
                 ·gc.time:                         43.000 ms

Iteration   4: 133.214 ns/op
                 ·gc.alloc.rate:                   1364.387 MB/sec
                 ·gc.alloc.rate.norm:              200.128 B/op
                 ·gc.churn.G1_Eden_Space:          1375.870 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     201.812 B/op
                 ·gc.churn.G1_Survivor_Space:      0.006 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        86.000 counts
                 ·gc.time:                         36.000 ms

Iteration   5: 127.833 ns/op
                 ·gc.alloc.rate:                   1421.048 MB/sec
                 ·gc.alloc.rate.norm:              200.031 B/op
                 ·gc.churn.G1_Eden_Space:          1423.791 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     200.417 B/op
                 ·gc.churn.G1_Survivor_Space:      0.008 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        89.000 counts
                 ·gc.time:                         38.000 ms


# Run progress: 97.62% complete, ETA 00:01:45
# Fork: 3 of 3
# Warmup Iteration   1: 157.353 ns/op
# Warmup Iteration   2: 130.698 ns/op
# Warmup Iteration   3: 133.094 ns/op
# Warmup Iteration   4: 131.431 ns/op
# Warmup Iteration   5: 133.149 ns/op
Iteration   1: 132.721 ns/op
                 ·gc.alloc.rate:                   1368.836 MB/sec
                 ·gc.alloc.rate.norm:              200.047 B/op
                 ·gc.churn.G1_Eden_Space:          1354.100 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     197.893 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        45.000 counts
                 ·gc.time:                         27.000 ms

Iteration   2: 135.330 ns/op
                 ·gc.alloc.rate:                   1342.598 MB/sec
                 ·gc.alloc.rate.norm:              200.073 B/op
                 ·gc.churn.G1_Eden_Space:          1354.070 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     201.782 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        45.000 counts
                 ·gc.time:                         28.000 ms

Iteration   3: 130.050 ns/op
                 ·gc.alloc.rate:                   1398.028 MB/sec
                 ·gc.alloc.rate.norm:              200.210 B/op
                 ·gc.churn.G1_Eden_Space:          1384.131 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     198.219 B/op
                 ·gc.churn.G1_Survivor_Space:      0.012 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.002 B/op
                 ·gc.count:                        46.000 counts
                 ·gc.time:                         29.000 ms

Iteration   4: 129.439 ns/op
                 ·gc.alloc.rate:                   1403.269 MB/sec
                 ·gc.alloc.rate.norm:              200.011 B/op
                 ·gc.churn.G1_Eden_Space:          1414.246 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     201.575 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        47.000 counts
                 ·gc.time:                         34.000 ms

Iteration   5: 130.364 ns/op
                 ·gc.alloc.rate:                   1394.663 MB/sec
                 ·gc.alloc.rate.norm:              200.214 B/op
                 ·gc.churn.G1_Eden_Space:          1384.099 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     198.697 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        46.000 counts
                 ·gc.time:                         26.000 ms



Result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_unparametrized":
  130.803 ±(99.9%) 2.492 ns/op [Average]
  (min, avg, max) = (127.044, 130.803, 135.330), stdev = 2.331
  CI (99.9%): [128.311, 133.294] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_unparametrized:·gc.alloc.rate":
  1389.703 ±(99.9%) 26.387 MB/sec [Average]
  (min, avg, max) = (1342.598, 1389.703, 1430.185), stdev = 24.682
  CI (99.9%): [1363.317, 1416.090] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_unparametrized:·gc.alloc.rate.norm":
  200.106 ±(99.9%) 0.112 B/op [Average]
  (min, avg, max) = (200.000, 200.106, 200.363), stdev = 0.105
  CI (99.9%): [199.994, 200.218] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_unparametrized:·gc.churn.G1_Eden_Space":
  1391.493 ±(99.9%) 26.459 MB/sec [Average]
  (min, avg, max) = (1354.070, 1391.493, 1439.739), stdev = 24.750
  CI (99.9%): [1365.034, 1417.952] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_unparametrized:·gc.churn.G1_Eden_Space.norm":
  200.373 ±(99.9%) 2.121 B/op [Average]
  (min, avg, max) = (196.941, 200.373, 203.863), stdev = 1.984
  CI (99.9%): [198.252, 202.494] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_unparametrized:·gc.churn.G1_Survivor_Space":
  0.013 ±(99.9%) 0.024 MB/sec [Average]
  (min, avg, max) = (0.004, 0.013, 0.092), stdev = 0.022
  CI (99.9%): [≈ 0, 0.037] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_unparametrized:·gc.churn.G1_Survivor_Space.norm":
  0.002 ±(99.9%) 0.003 B/op [Average]
  (min, avg, max) = (0.001, 0.002, 0.013), stdev = 0.003
  CI (99.9%): [≈ 0, 0.005] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_unparametrized:·gc.count":
  884.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (43.000, 58.933, 89.000), stdev = 20.728
  CI (99.9%): [884.000, 884.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_unparametrized:·gc.time":
  468.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (23.000, 31.200, 43.000), stdev = 6.527
  CI (99.9%): [468.000, 468.000] (assumes normal distribution)


# Run complete. Total time: 01:13:43

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                                                     (aBoolean)  (aInt)  (aString)  (theLevel)  Mode  Cnt      Score     Error   Units
LogRecordBenchmark.escape_lambda                                                    true      42         P1        INFO  avgt   15  10213.609 ± 317.515   ns/op
LogRecordBenchmark.escape_lambda:·gc.alloc.rate                                     true      42         P1        INFO  avgt   15    567.991 ±  16.850  MB/sec
LogRecordBenchmark.escape_lambda:·gc.alloc.rate.norm                                true      42         P1        INFO  avgt   15   6383.253 ±  15.176    B/op
LogRecordBenchmark.escape_lambda:·gc.churn.G1_Eden_Space                            true      42         P1        INFO  avgt   15    569.774 ±  17.874  MB/sec
LogRecordBenchmark.escape_lambda:·gc.churn.G1_Eden_Space.norm                       true      42         P1        INFO  avgt   15   6403.358 ±  72.246    B/op
LogRecordBenchmark.escape_lambda:·gc.churn.G1_Survivor_Space                        true      42         P1        INFO  avgt   15      0.003 ±   0.002  MB/sec
LogRecordBenchmark.escape_lambda:·gc.churn.G1_Survivor_Space.norm                   true      42         P1        INFO  avgt   15      0.035 ±   0.017    B/op
LogRecordBenchmark.escape_lambda:·gc.count                                          true      42         P1        INFO  avgt   15    511.000            counts
LogRecordBenchmark.escape_lambda:·gc.time                                           true      42         P1        INFO  avgt   15    298.000                ms
LogRecordBenchmark.escape_lambda                                                    true      42         P1        FINE  avgt   15    135.218 ±   2.863   ns/op
LogRecordBenchmark.escape_lambda:·gc.alloc.rate                                     true      42         P1        FINE  avgt   15   1344.386 ±  29.047  MB/sec
LogRecordBenchmark.escape_lambda:·gc.alloc.rate.norm                                true      42         P1        FINE  avgt   15    200.099 ±   0.142    B/op
LogRecordBenchmark.escape_lambda:·gc.churn.G1_Eden_Space                            true      42         P1        FINE  avgt   15   1346.982 ±  29.063  MB/sec
LogRecordBenchmark.escape_lambda:·gc.churn.G1_Eden_Space.norm                       true      42         P1        FINE  avgt   15    200.487 ±   0.908    B/op
LogRecordBenchmark.escape_lambda:·gc.churn.G1_Survivor_Space                        true      42         P1        FINE  avgt   15      0.012 ±   0.020  MB/sec
LogRecordBenchmark.escape_lambda:·gc.churn.G1_Survivor_Space.norm                   true      42         P1        FINE  avgt   15      0.002 ±   0.003    B/op
LogRecordBenchmark.escape_lambda:·gc.count                                          true      42         P1        FINE  avgt   15   1263.000            counts
LogRecordBenchmark.escape_lambda:·gc.time                                           true      42         P1        FINE  avgt   15    576.000                ms
LogRecordBenchmark.guarded_parametrized                                             true      42         P1        INFO  avgt   15  12727.418 ± 460.235   ns/op
LogRecordBenchmark.guarded_parametrized:·gc.alloc.rate                              true      42         P1        INFO  avgt   15    671.477 ±  25.550  MB/sec
LogRecordBenchmark.guarded_parametrized:·gc.alloc.rate.norm                         true      42         P1        INFO  avgt   15   9400.001 ±  25.430    B/op
LogRecordBenchmark.guarded_parametrized:·gc.churn.G1_Eden_Space                     true      42         P1        INFO  avgt   15    671.630 ±  27.771  MB/sec
LogRecordBenchmark.guarded_parametrized:·gc.churn.G1_Eden_Space.norm                true      42         P1        INFO  avgt   15   9401.696 ± 114.355    B/op
LogRecordBenchmark.guarded_parametrized:·gc.churn.G1_Survivor_Space                 true      42         P1        INFO  avgt   15      0.003 ±   0.001  MB/sec
LogRecordBenchmark.guarded_parametrized:·gc.churn.G1_Survivor_Space.norm            true      42         P1        INFO  avgt   15      0.041 ±   0.015    B/op
LogRecordBenchmark.guarded_parametrized:·gc.count                                   true      42         P1        INFO  avgt   15    487.000            counts
LogRecordBenchmark.guarded_parametrized:·gc.time                                    true      42         P1        INFO  avgt   15    307.000                ms
LogRecordBenchmark.guarded_parametrized                                             true      42         P1        FINE  avgt   15     99.471 ±   1.699   ns/op
LogRecordBenchmark.guarded_parametrized:·gc.alloc.rate                              true      42         P1        FINE  avgt   15   1534.841 ±  26.076  MB/sec
LogRecordBenchmark.guarded_parametrized:·gc.alloc.rate.norm                         true      42         P1        FINE  avgt   15    168.076 ±   0.057    B/op
LogRecordBenchmark.guarded_parametrized:·gc.churn.G1_Eden_Space                     true      42         P1        FINE  avgt   15   1536.623 ±  28.958  MB/sec
LogRecordBenchmark.guarded_parametrized:·gc.churn.G1_Eden_Space.norm                true      42         P1        FINE  avgt   15    168.271 ±   1.397    B/op
LogRecordBenchmark.guarded_parametrized:·gc.churn.G1_Survivor_Space                 true      42         P1        FINE  avgt   15      0.006 ±   0.002  MB/sec
LogRecordBenchmark.guarded_parametrized:·gc.churn.G1_Survivor_Space.norm            true      42         P1        FINE  avgt   15      0.001 ±   0.001    B/op
LogRecordBenchmark.guarded_parametrized:·gc.count                                   true      42         P1        FINE  avgt   15    697.000            counts
LogRecordBenchmark.guarded_parametrized:·gc.time                                    true      42         P1        FINE  avgt   15    465.000                ms
LogRecordBenchmark.guarded_unparametrized                                           true      42         P1        INFO  avgt   15  10317.380 ± 365.545   ns/op
LogRecordBenchmark.guarded_unparametrized:·gc.alloc.rate                            true      42         P1        INFO  avgt   15    569.061 ±  19.500  MB/sec
LogRecordBenchmark.guarded_unparametrized:·gc.alloc.rate.norm                       true      42         P1        INFO  avgt   15   6458.784 ±  26.859    B/op
LogRecordBenchmark.guarded_unparametrized:·gc.churn.G1_Eden_Space                   true      42         P1        INFO  avgt   15    570.329 ±  21.007  MB/sec
LogRecordBenchmark.guarded_unparametrized:·gc.churn.G1_Eden_Space.norm              true      42         P1        INFO  avgt   15   6473.099 ±  84.747    B/op
LogRecordBenchmark.guarded_unparametrized:·gc.churn.G1_Survivor_Space               true      42         P1        INFO  avgt   15      0.003 ±   0.002  MB/sec
LogRecordBenchmark.guarded_unparametrized:·gc.churn.G1_Survivor_Space.norm          true      42         P1        INFO  avgt   15      0.039 ±   0.016    B/op
LogRecordBenchmark.guarded_unparametrized:·gc.count                                 true      42         P1        INFO  avgt   15    537.000            counts
LogRecordBenchmark.guarded_unparametrized:·gc.time                                  true      42         P1        INFO  avgt   15    295.000                ms
LogRecordBenchmark.guarded_unparametrized                                           true      42         P1        FINE  avgt   15    134.261 ±   2.399   ns/op
LogRecordBenchmark.guarded_unparametrized:·gc.alloc.rate                            true      42         P1        FINE  avgt   15   1353.851 ±  24.334  MB/sec
LogRecordBenchmark.guarded_unparametrized:·gc.alloc.rate.norm                       true      42         P1        FINE  avgt   15    200.103 ±   0.141    B/op
LogRecordBenchmark.guarded_unparametrized:·gc.churn.G1_Eden_Space                   true      42         P1        FINE  avgt   15   1355.454 ±  24.570  MB/sec
LogRecordBenchmark.guarded_unparametrized:·gc.churn.G1_Eden_Space.norm              true      42         P1        FINE  avgt   15    200.342 ±   1.092    B/op
LogRecordBenchmark.guarded_unparametrized:·gc.churn.G1_Survivor_Space               true      42         P1        FINE  avgt   15      0.018 ±   0.033  MB/sec
LogRecordBenchmark.guarded_unparametrized:·gc.churn.G1_Survivor_Space.norm          true      42         P1        FINE  avgt   15      0.003 ±   0.005    B/op
LogRecordBenchmark.guarded_unparametrized:·gc.count                                 true      42         P1        FINE  avgt   15   1276.000            counts
LogRecordBenchmark.guarded_unparametrized:·gc.time                                  true      42         P1        FINE  avgt   15    598.000                ms
LogRecordBenchmark.no_escape_lambda                                                 true      42         P1        INFO  avgt   15  10365.359 ± 337.777   ns/op
LogRecordBenchmark.no_escape_lambda:·gc.alloc.rate                                  true      42         P1        INFO  avgt   15    565.264 ±  18.299  MB/sec
LogRecordBenchmark.no_escape_lambda:·gc.alloc.rate.norm                             true      42         P1        INFO  avgt   15   6446.191 ±  14.090    B/op
LogRecordBenchmark.no_escape_lambda:·gc.churn.G1_Eden_Space                         true      42         P1        INFO  avgt   15    566.951 ±  19.031  MB/sec
LogRecordBenchmark.no_escape_lambda:·gc.churn.G1_Eden_Space.norm                    true      42         P1        INFO  avgt   15   6465.704 ±  88.478    B/op
LogRecordBenchmark.no_escape_lambda:·gc.churn.G1_Survivor_Space                     true      42         P1        INFO  avgt   15      0.003 ±   0.001  MB/sec
LogRecordBenchmark.no_escape_lambda:·gc.churn.G1_Survivor_Space.norm                true      42         P1        INFO  avgt   15      0.039 ±   0.009    B/op
LogRecordBenchmark.no_escape_lambda:·gc.count                                       true      42         P1        INFO  avgt   15    538.000            counts
LogRecordBenchmark.no_escape_lambda:·gc.time                                        true      42         P1        INFO  avgt   15    314.000                ms
LogRecordBenchmark.no_escape_lambda                                                 true      42         P1        FINE  avgt   15    136.191 ±   3.575   ns/op
LogRecordBenchmark.no_escape_lambda:·gc.alloc.rate                                  true      42         P1        FINE  avgt   15   1440.814 ±  70.453  MB/sec
LogRecordBenchmark.no_escape_lambda:·gc.alloc.rate.norm                             true      42         P1        FINE  avgt   15    216.099 ±  12.477    B/op
LogRecordBenchmark.no_escape_lambda:·gc.churn.G1_Eden_Space                         true      42         P1        FINE  avgt   15   1443.268 ±  69.896  MB/sec
LogRecordBenchmark.no_escape_lambda:·gc.churn.G1_Eden_Space.norm                    true      42         P1        FINE  avgt   15    216.470 ±  12.489    B/op
LogRecordBenchmark.no_escape_lambda:·gc.churn.G1_Survivor_Space                     true      42         P1        FINE  avgt   15      0.008 ±   0.006  MB/sec
LogRecordBenchmark.no_escape_lambda:·gc.churn.G1_Survivor_Space.norm                true      42         P1        FINE  avgt   15      0.001 ±   0.001    B/op
LogRecordBenchmark.no_escape_lambda:·gc.count                                       true      42         P1        FINE  avgt   15   1348.000            counts
LogRecordBenchmark.no_escape_lambda:·gc.time                                        true      42         P1        FINE  avgt   15    589.000                ms
LogRecordBenchmark.string_format                                                    true      42         P1        INFO  avgt   15  11982.966 ± 415.789   ns/op
LogRecordBenchmark.string_format:·gc.alloc.rate                                     true      42         P1        INFO  avgt   15    551.481 ±  19.395  MB/sec
LogRecordBenchmark.string_format:·gc.alloc.rate.norm                                true      42         P1        INFO  avgt   15   7269.507 ±   6.351    B/op
LogRecordBenchmark.string_format:·gc.churn.G1_Eden_Space                            true      42         P1        INFO  avgt   15    552.198 ±  19.656  MB/sec
LogRecordBenchmark.string_format:·gc.churn.G1_Eden_Space.norm                       true      42         P1        INFO  avgt   15   7279.198 ±  77.015    B/op
LogRecordBenchmark.string_format:·gc.churn.G1_Survivor_Space                        true      42         P1        INFO  avgt   15      0.003 ±   0.001  MB/sec
LogRecordBenchmark.string_format:·gc.churn.G1_Survivor_Space.norm                   true      42         P1        INFO  avgt   15      0.045 ±   0.015    B/op
LogRecordBenchmark.string_format:·gc.count                                          true      42         P1        INFO  avgt   15    524.000            counts
LogRecordBenchmark.string_format:·gc.time                                           true      42         P1        INFO  avgt   15    291.000                ms
LogRecordBenchmark.string_format                                                    true      42         P1        FINE  avgt   15    990.342 ±  22.074   ns/op
LogRecordBenchmark.string_format:·gc.alloc.rate                                     true      42         P1        FINE  avgt   15    947.234 ±  21.225  MB/sec
LogRecordBenchmark.string_format:·gc.alloc.rate.norm                                true      42         P1        FINE  avgt   15   1032.557 ±   0.749    B/op
LogRecordBenchmark.string_format:·gc.churn.G1_Eden_Space                            true      42         P1        FINE  avgt   15    946.817 ±  25.098  MB/sec
LogRecordBenchmark.string_format:·gc.churn.G1_Eden_Space.norm                       true      42         P1        FINE  avgt   15   1032.116 ±  15.975    B/op
LogRecordBenchmark.string_format:·gc.churn.G1_Survivor_Space                        true      42         P1        FINE  avgt   15      0.005 ±   0.002  MB/sec
LogRecordBenchmark.string_format:·gc.churn.G1_Survivor_Space.norm                   true      42         P1        FINE  avgt   15      0.005 ±   0.002    B/op
LogRecordBenchmark.string_format:·gc.count                                          true      42         P1        FINE  avgt   15    627.000            counts
LogRecordBenchmark.string_format:·gc.time                                           true      42         P1        FINE  avgt   15    364.000                ms
LogRecordBenchmark.unguarded_parametrized                                           true      42         P1        INFO  avgt   15  12579.059 ± 307.760   ns/op
LogRecordBenchmark.unguarded_parametrized:·gc.alloc.rate                            true      42         P1        INFO  avgt   15    682.389 ±  16.318  MB/sec
LogRecordBenchmark.unguarded_parametrized:·gc.alloc.rate.norm                       true      42         P1        INFO  avgt   15   9447.574 ±  14.738    B/op
LogRecordBenchmark.unguarded_parametrized:·gc.churn.G1_Eden_Space                   true      42         P1        INFO  avgt   15    684.145 ±  17.335  MB/sec
LogRecordBenchmark.unguarded_parametrized:·gc.churn.G1_Eden_Space.norm              true      42         P1        INFO  avgt   15   9472.486 ± 141.431    B/op
LogRecordBenchmark.unguarded_parametrized:·gc.churn.G1_Survivor_Space               true      42         P1        INFO  avgt   15      0.004 ±   0.001  MB/sec
LogRecordBenchmark.unguarded_parametrized:·gc.churn.G1_Survivor_Space.norm          true      42         P1        INFO  avgt   15      0.052 ±   0.020    B/op
LogRecordBenchmark.unguarded_parametrized:·gc.count                                 true      42         P1        INFO  avgt   15    604.000            counts
LogRecordBenchmark.unguarded_parametrized:·gc.time                                  true      42         P1        INFO  avgt   15    384.000                ms
LogRecordBenchmark.unguarded_parametrized                                           true      42         P1        FINE  avgt   15     98.496 ±   1.894   ns/op
LogRecordBenchmark.unguarded_parametrized:·gc.alloc.rate                            true      42         P1        FINE  avgt   15   1550.149 ±  30.217  MB/sec
LogRecordBenchmark.unguarded_parametrized:·gc.alloc.rate.norm                       true      42         P1        FINE  avgt   15    168.074 ±   0.102    B/op
LogRecordBenchmark.unguarded_parametrized:·gc.churn.G1_Eden_Space                   true      42         P1        FINE  avgt   15   1554.410 ±  32.181  MB/sec
LogRecordBenchmark.unguarded_parametrized:·gc.churn.G1_Eden_Space.norm              true      42         P1        FINE  avgt   15    168.539 ±   1.544    B/op
LogRecordBenchmark.unguarded_parametrized:·gc.churn.G1_Survivor_Space               true      42         P1        FINE  avgt   15      0.013 ±   0.021  MB/sec
LogRecordBenchmark.unguarded_parametrized:·gc.churn.G1_Survivor_Space.norm          true      42         P1        FINE  avgt   15      0.001 ±   0.002    B/op
LogRecordBenchmark.unguarded_parametrized:·gc.count                                 true      42         P1        FINE  avgt   15    938.000            counts
LogRecordBenchmark.unguarded_parametrized:·gc.time                                  true      42         P1        FINE  avgt   15    552.000                ms
LogRecordBenchmark.unguarded_unparametrized                                         true      42         P1        INFO  avgt   15  10221.398 ± 261.021   ns/op
LogRecordBenchmark.unguarded_unparametrized:·gc.alloc.rate                          true      42         P1        INFO  avgt   15    575.104 ±  14.839  MB/sec
LogRecordBenchmark.unguarded_unparametrized:·gc.alloc.rate.norm                     true      42         P1        INFO  avgt   15   6469.430 ±   6.313    B/op
LogRecordBenchmark.unguarded_unparametrized:·gc.churn.G1_Eden_Space                 true      42         P1        INFO  avgt   15    575.520 ±  15.631  MB/sec
LogRecordBenchmark.unguarded_unparametrized:·gc.churn.G1_Eden_Space.norm            true      42         P1        INFO  avgt   15   6474.188 ±  66.825    B/op
LogRecordBenchmark.unguarded_unparametrized:·gc.churn.G1_Survivor_Space             true      42         P1        INFO  avgt   15      0.003 ±   0.001  MB/sec
LogRecordBenchmark.unguarded_unparametrized:·gc.churn.G1_Survivor_Space.norm        true      42         P1        INFO  avgt   15      0.037 ±   0.015    B/op
LogRecordBenchmark.unguarded_unparametrized:·gc.count                               true      42         P1        INFO  avgt   15    544.000            counts
LogRecordBenchmark.unguarded_unparametrized:·gc.time                                true      42         P1        INFO  avgt   15    313.000                ms
LogRecordBenchmark.unguarded_unparametrized                                         true      42         P1        FINE  avgt   15    130.803 ±   2.492   ns/op
LogRecordBenchmark.unguarded_unparametrized:·gc.alloc.rate                          true      42         P1        FINE  avgt   15   1389.703 ±  26.387  MB/sec
LogRecordBenchmark.unguarded_unparametrized:·gc.alloc.rate.norm                     true      42         P1        FINE  avgt   15    200.106 ±   0.112    B/op
LogRecordBenchmark.unguarded_unparametrized:·gc.churn.G1_Eden_Space                 true      42         P1        FINE  avgt   15   1391.493 ±  26.459  MB/sec
LogRecordBenchmark.unguarded_unparametrized:·gc.churn.G1_Eden_Space.norm            true      42         P1        FINE  avgt   15    200.373 ±   2.121    B/op
LogRecordBenchmark.unguarded_unparametrized:·gc.churn.G1_Survivor_Space             true      42         P1        FINE  avgt   15      0.013 ±   0.024  MB/sec
LogRecordBenchmark.unguarded_unparametrized:·gc.churn.G1_Survivor_Space.norm        true      42         P1        FINE  avgt   15      0.002 ±   0.003    B/op
LogRecordBenchmark.unguarded_unparametrized:·gc.count                               true      42         P1        FINE  avgt   15    884.000            counts
LogRecordBenchmark.unguarded_unparametrized:·gc.time                                true      42         P1        FINE  avgt   15    468.000                ms

Benchmark result is saved to results/report-openjdk-13/hotspotvm_graal_jit/LogRecordBenchmark.json
Running java -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler -jar benchmarks/target/benchmarks.jar .*StringInterpolationBenchmark.* -prof gc -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_graal_jit/StringInterpolationBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StringInterpolationBenchmark.concat_default
# Parameters: (size = 16)

# Run progress: 0.00% complete, ETA 00:20:00
# Fork: 1 of 3
# Warmup Iteration   1: 105.176 ns/op
# Warmup Iteration   2: 86.941 ns/op
# Warmup Iteration   3: 84.285 ns/op
# Warmup Iteration   4: 81.290 ns/op
# Warmup Iteration   5: 82.258 ns/op
Iteration   1: 81.442 ns/op
                 ·gc.alloc.rate:                   1965.914 MB/sec
                 ·gc.alloc.rate.norm:              176.305 B/op
                 ·gc.churn.G1_Eden_Space:          1955.116 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     175.337 B/op
                 ·gc.churn.G1_Survivor_Space:      0.014 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        58.000 counts
                 ·gc.time:                         39.000 ms

Iteration   2: 80.923 ns/op
                 ·gc.alloc.rate:                   1976.159 MB/sec
                 ·gc.alloc.rate.norm:              176.086 B/op
                 ·gc.churn.G1_Eden_Space:          1988.861 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     177.218 B/op
                 ·gc.churn.G1_Survivor_Space:      0.013 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        59.000 counts
                 ·gc.time:                         36.000 ms

Iteration   3: 82.539 ns/op
                 ·gc.alloc.rate:                   1936.925 MB/sec
                 ·gc.alloc.rate.norm:              176.042 B/op
                 ·gc.churn.G1_Eden_Space:          1921.412 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     174.632 B/op
                 ·gc.churn.G1_Survivor_Space:      0.006 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        57.000 counts
                 ·gc.time:                         33.000 ms

Iteration   4: 81.556 ns/op
                 ·gc.alloc.rate:                   1960.069 MB/sec
                 ·gc.alloc.rate.norm:              176.015 B/op
                 ·gc.churn.G1_Eden_Space:          1955.240 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     175.581 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        58.000 counts
                 ·gc.time:                         37.000 ms

Iteration   5: 80.766 ns/op
                 ·gc.alloc.rate:                   1978.936 MB/sec
                 ·gc.alloc.rate.norm:              176.000 B/op
                 ·gc.churn.G1_Eden_Space:          1988.821 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     176.879 B/op
                 ·gc.churn.G1_Survivor_Space:      0.007 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        59.000 counts
                 ·gc.time:                         35.000 ms


# Run progress: 8.33% complete, ETA 00:19:19
# Fork: 2 of 3
# Warmup Iteration   1: 90.439 ns/op
# Warmup Iteration   2: 83.975 ns/op
# Warmup Iteration   3: 84.280 ns/op
# Warmup Iteration   4: 82.291 ns/op
# Warmup Iteration   5: 80.932 ns/op
Iteration   1: 84.233 ns/op
                 ·gc.alloc.rate:                   1898.245 MB/sec
                 ·gc.alloc.rate.norm:              176.080 B/op
                 ·gc.churn.G1_Eden_Space:          1903.600 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     176.576 B/op
                 ·gc.churn.G1_Survivor_Space:      0.008 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        119.000 counts
                 ·gc.time:                         54.000 ms

Iteration   2: 82.213 ns/op
                 ·gc.alloc.rate:                   1945.108 MB/sec
                 ·gc.alloc.rate.norm:              176.095 B/op
                 ·gc.churn.G1_Eden_Space:          1935.583 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     175.233 B/op
                 ·gc.churn.G1_Survivor_Space:      0.019 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.002 B/op
                 ·gc.count:                        121.000 counts
                 ·gc.time:                         54.000 ms

Iteration   3: 83.769 ns/op
                 ·gc.alloc.rate:                   1908.013 MB/sec
                 ·gc.alloc.rate.norm:              176.001 B/op
                 ·gc.churn.G1_Eden_Space:          1919.673 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     177.076 B/op
                 ·gc.churn.G1_Survivor_Space:      0.011 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        120.000 counts
                 ·gc.time:                         53.000 ms

Iteration   4: 81.307 ns/op
                 ·gc.alloc.rate:                   1967.192 MB/sec
                 ·gc.alloc.rate.norm:              176.126 B/op
                 ·gc.churn.G1_Eden_Space:          1967.674 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     176.169 B/op
                 ·gc.churn.G1_Survivor_Space:      0.010 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        123.000 counts
                 ·gc.time:                         53.000 ms

Iteration   5: 83.946 ns/op
                 ·gc.alloc.rate:                   1904.333 MB/sec
                 ·gc.alloc.rate.norm:              176.032 B/op
                 ·gc.churn.G1_Eden_Space:          1903.700 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     175.974 B/op
                 ·gc.churn.G1_Survivor_Space:      0.016 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        119.000 counts
                 ·gc.time:                         52.000 ms


# Run progress: 16.67% complete, ETA 00:17:33
# Fork: 3 of 3
# Warmup Iteration   1: 95.671 ns/op
# Warmup Iteration   2: 88.627 ns/op
# Warmup Iteration   3: 82.818 ns/op
# Warmup Iteration   4: 82.568 ns/op
# Warmup Iteration   5: 83.504 ns/op
Iteration   1: 81.676 ns/op
                 ·gc.alloc.rate:                   1960.975 MB/sec
                 ·gc.alloc.rate.norm:              176.367 B/op
                 ·gc.churn.G1_Eden_Space:          1976.796 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     177.790 B/op
                 ·gc.churn.G1_Survivor_Space:      0.013 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        60.000 counts
                 ·gc.time:                         38.000 ms

Iteration   2: 82.603 ns/op
                 ·gc.alloc.rate:                   1936.050 MB/sec
                 ·gc.alloc.rate.norm:              176.111 B/op
                 ·gc.churn.G1_Eden_Space:          1910.824 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     173.816 B/op
                 ·gc.churn.G1_Survivor_Space:      0.013 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        58.000 counts
                 ·gc.time:                         35.000 ms

Iteration   3: 82.554 ns/op
                 ·gc.alloc.rate:                   1936.430 MB/sec
                 ·gc.alloc.rate.norm:              176.033 B/op
                 ·gc.churn.G1_Eden_Space:          1943.842 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     176.707 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        59.000 counts
                 ·gc.time:                         32.000 ms

Iteration   4: 80.560 ns/op
                 ·gc.alloc.rate:                   1984.042 MB/sec
                 ·gc.alloc.rate.norm:              176.001 B/op
                 ·gc.churn.G1_Eden_Space:          1976.850 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     175.363 B/op
                 ·gc.churn.G1_Survivor_Space:      0.006 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        60.000 counts
                 ·gc.time:                         29.000 ms

Iteration   5: 84.408 ns/op
                 ·gc.alloc.rate:                   1893.578 MB/sec
                 ·gc.alloc.rate.norm:              176.000 B/op
                 ·gc.churn.G1_Eden_Space:          1910.924 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     177.612 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        58.000 counts
                 ·gc.time:                         33.000 ms



Result "com.ionutbalosin.jvm.jit.benchmark.StringInterpolationBenchmark.concat_default":
  82.300 ±(99.9%) 1.377 ns/op [Average]
  (min, avg, max) = (80.560, 82.300, 84.408), stdev = 1.288
  CI (99.9%): [80.923, 83.676] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.StringInterpolationBenchmark.concat_default:·gc.alloc.rate":
  1943.465 ±(99.9%) 32.695 MB/sec [Average]
  (min, avg, max) = (1893.578, 1943.465, 1984.042), stdev = 30.583
  CI (99.9%): [1910.770, 1976.160] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.StringInterpolationBenchmark.concat_default:·gc.alloc.rate.norm":
  176.086 ±(99.9%) 0.118 B/op [Average]
  (min, avg, max) = (176.000, 176.086, 176.367), stdev = 0.111
  CI (99.9%): [175.968, 176.205] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.StringInterpolationBenchmark.concat_default:·gc.churn.G1_Eden_Space":
  1943.928 ±(99.9%) 33.333 MB/sec [Average]
  (min, avg, max) = (1903.600, 1943.928, 1988.861), stdev = 31.180
  CI (99.9%): [1910.595, 1977.260] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.StringInterpolationBenchmark.concat_default:·gc.churn.G1_Eden_Space.norm":
  176.131 ±(99.9%) 1.215 B/op [Average]
  (min, avg, max) = (173.816, 176.131, 177.790), stdev = 1.136
  CI (99.9%): [174.916, 177.346] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.StringInterpolationBenchmark.concat_default:·gc.churn.G1_Survivor_Space":
  0.010 ±(99.9%) 0.005 MB/sec [Average]
  (min, avg, max) = (0.005, 0.010, 0.019), stdev = 0.004
  CI (99.9%): [0.006, 0.015] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.StringInterpolationBenchmark.concat_default:·gc.churn.G1_Survivor_Space.norm":
  0.001 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (≈ 10⁻³, 0.001, 0.002), stdev = 0.001
  CI (99.9%): [≈ 10⁻³, 0.001] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.StringInterpolationBenchmark.concat_default:·gc.count":
  1188.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (57.000, 79.200, 123.000), stdev = 30.179
  CI (99.9%): [1188.000, 1188.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.StringInterpolationBenchmark.concat_default:·gc.time":
  613.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (29.000, 40.867, 54.000), stdev = 9.357
  CI (99.9%): [613.000, 613.000] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StringInterpolationBenchmark.string_buffer
# Parameters: (size = 16)

# Run progress: 25.00% complete, ETA 00:15:48
# Fork: 1 of 3
# Warmup Iteration   1: 152.062 ns/op
# Warmup Iteration   2: 139.649 ns/op
# Warmup Iteration   3: 135.929 ns/op
# Warmup Iteration   4: 135.678 ns/op
# Warmup Iteration   5: 137.320 ns/op
Iteration   1: 134.333 ns/op
                 ·gc.alloc.rate:                   2271.560 MB/sec
                 ·gc.alloc.rate.norm:              336.007 B/op
                 ·gc.churn.G1_Eden_Space:          2274.157 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     336.391 B/op
                 ·gc.churn.G1_Survivor_Space:      0.010 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        96.000 counts
                 ·gc.time:                         50.000 ms

Iteration   2: 139.606 ns/op
                 ·gc.alloc.rate:                   2185.668 MB/sec
                 ·gc.alloc.rate.norm:              336.000 B/op
                 ·gc.churn.G1_Eden_Space:          2168.749 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     333.399 B/op
                 ·gc.churn.G1_Survivor_Space:      0.006 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        78.000 counts
                 ·gc.time:                         41.000 ms

Iteration   3: 132.999 ns/op
                 ·gc.alloc.rate:                   2295.565 MB/sec
                 ·gc.alloc.rate.norm:              336.193 B/op
                 ·gc.churn.G1_Eden_Space:          2307.822 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     337.988 B/op
                 ·gc.churn.G1_Survivor_Space:      0.009 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        83.000 counts
                 ·gc.time:                         45.000 ms

Iteration   4: 136.698 ns/op
                 ·gc.alloc.rate:                   2232.653 MB/sec
                 ·gc.alloc.rate.norm:              336.065 B/op
                 ·gc.churn.G1_Eden_Space:          2224.440 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     334.829 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        80.000 counts
                 ·gc.time:                         44.000 ms

Iteration   5: 137.478 ns/op
                 ·gc.alloc.rate:                   2219.542 MB/sec
                 ·gc.alloc.rate.norm:              336.003 B/op
                 ·gc.churn.G1_Eden_Space:          2224.427 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     336.742 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        80.000 counts
                 ·gc.time:                         43.000 ms


# Run progress: 33.33% complete, ETA 00:14:02
# Fork: 2 of 3
# Warmup Iteration   1: 152.451 ns/op
# Warmup Iteration   2: 142.608 ns/op
# Warmup Iteration   3: 139.230 ns/op
# Warmup Iteration   4: 138.569 ns/op
# Warmup Iteration   5: 139.795 ns/op
Iteration   1: 138.985 ns/op
                 ·gc.alloc.rate:                   2195.423 MB/sec
                 ·gc.alloc.rate.norm:              336.000 B/op
                 ·gc.churn.G1_Eden_Space:          2191.244 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     335.360 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        106.000 counts
                 ·gc.time:                         51.000 ms

Iteration   2: 139.241 ns/op
                 ·gc.alloc.rate:                   2193.344 MB/sec
                 ·gc.alloc.rate.norm:              336.286 B/op
                 ·gc.churn.G1_Eden_Space:          2196.260 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     336.733 B/op
                 ·gc.churn.G1_Survivor_Space:      0.011 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.002 B/op
                 ·gc.count:                        93.000 counts
                 ·gc.time:                         52.000 ms

Iteration   3: 137.742 ns/op
                 ·gc.alloc.rate:                   2215.174 MB/sec
                 ·gc.alloc.rate.norm:              336.000 B/op
                 ·gc.churn.G1_Eden_Space:          2219.751 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     336.694 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        94.000 counts
                 ·gc.time:                         47.000 ms

Iteration   4: 137.983 ns/op
                 ·gc.alloc.rate:                   2211.601 MB/sec
                 ·gc.alloc.rate.norm:              336.020 B/op
                 ·gc.churn.G1_Eden_Space:          2219.920 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     337.284 B/op
                 ·gc.churn.G1_Survivor_Space:      0.006 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        94.000 counts
                 ·gc.time:                         46.000 ms

Iteration   5: 140.192 ns/op
                 ·gc.alloc.rate:                   2176.494 MB/sec
                 ·gc.alloc.rate.norm:              336.000 B/op
                 ·gc.churn.G1_Eden_Space:          2172.548 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     335.391 B/op
                 ·gc.churn.G1_Survivor_Space:      0.006 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        92.000 counts
                 ·gc.time:                         50.000 ms


# Run progress: 41.67% complete, ETA 00:12:17
# Fork: 3 of 3
# Warmup Iteration   1: 152.322 ns/op
# Warmup Iteration   2: 138.501 ns/op
# Warmup Iteration   3: 137.496 ns/op
# Warmup Iteration   4: 137.728 ns/op
# Warmup Iteration   5: 138.140 ns/op
Iteration   1: 139.885 ns/op
                 ·gc.alloc.rate:                   2182.305 MB/sec
                 ·gc.alloc.rate.norm:              336.154 B/op
                 ·gc.churn.G1_Eden_Space:          2201.923 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     339.176 B/op
                 ·gc.churn.G1_Survivor_Space:      0.020 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.003 B/op
                 ·gc.count:                        94.000 counts
                 ·gc.time:                         48.000 ms

Iteration   2: 136.398 ns/op
                 ·gc.alloc.rate:                   2238.264 MB/sec
                 ·gc.alloc.rate.norm:              336.173 B/op
                 ·gc.churn.G1_Eden_Space:          2225.369 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     334.236 B/op
                 ·gc.churn.G1_Survivor_Space:      0.007 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        95.000 counts
                 ·gc.time:                         44.000 ms

Iteration   3: 137.785 ns/op
                 ·gc.alloc.rate:                   2215.149 MB/sec
                 ·gc.alloc.rate.norm:              336.082 B/op
                 ·gc.churn.G1_Eden_Space:          2225.404 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     337.638 B/op
                 ·gc.churn.G1_Survivor_Space:      0.014 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.002 B/op
                 ·gc.count:                        95.000 counts
                 ·gc.time:                         52.000 ms

Iteration   4: 135.142 ns/op
                 ·gc.alloc.rate:                   2258.041 MB/sec
                 ·gc.alloc.rate.norm:              336.020 B/op
                 ·gc.churn.G1_Eden_Space:          2248.814 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     334.647 B/op
                 ·gc.churn.G1_Survivor_Space:      0.007 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        96.000 counts
                 ·gc.time:                         50.000 ms

Iteration   5: 138.078 ns/op
                 ·gc.alloc.rate:                   2209.890 MB/sec
                 ·gc.alloc.rate.norm:              336.001 B/op
                 ·gc.churn.G1_Eden_Space:          2225.389 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     338.358 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        95.000 counts
                 ·gc.time:                         45.000 ms



Result "com.ionutbalosin.jvm.jit.benchmark.StringInterpolationBenchmark.string_buffer":
  137.503 ±(99.9%) 2.232 ns/op [Average]
  (min, avg, max) = (132.999, 137.503, 140.192), stdev = 2.088
  CI (99.9%): [135.271, 139.735] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.StringInterpolationBenchmark.string_buffer:·gc.alloc.rate":
  2220.045 ±(99.9%) 36.518 MB/sec [Average]
  (min, avg, max) = (2176.494, 2220.045, 2295.565), stdev = 34.159
  CI (99.9%): [2183.527, 2256.563] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.StringInterpolationBenchmark.string_buffer:·gc.alloc.rate.norm":
  336.067 ±(99.9%) 0.098 B/op [Average]
  (min, avg, max) = (336.000, 336.067, 336.286), stdev = 0.092
  CI (99.9%): [335.969, 336.165] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.StringInterpolationBenchmark.string_buffer:·gc.churn.G1_Eden_Space":
  2221.748 ±(99.9%) 38.495 MB/sec [Average]
  (min, avg, max) = (2168.749, 2221.748, 2307.822), stdev = 36.008
  CI (99.9%): [2183.253, 2260.243] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.StringInterpolationBenchmark.string_buffer:·gc.churn.G1_Eden_Space.norm":
  336.324 ±(99.9%) 1.760 B/op [Average]
  (min, avg, max) = (333.399, 336.324, 339.176), stdev = 1.646
  CI (99.9%): [334.565, 338.084] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.StringInterpolationBenchmark.string_buffer:·gc.churn.G1_Survivor_Space":
  0.008 ±(99.9%) 0.005 MB/sec [Average]
  (min, avg, max) = (0.004, 0.008, 0.020), stdev = 0.004
  CI (99.9%): [0.003, 0.013] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.StringInterpolationBenchmark.string_buffer:·gc.churn.G1_Survivor_Space.norm":
  0.001 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (0.001, 0.001, 0.003), stdev = 0.001
  CI (99.9%): [≈ 10⁻³, 0.002] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.StringInterpolationBenchmark.string_buffer:·gc.count":
  1371.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (78.000, 91.400, 106.000), stdev = 7.689
  CI (99.9%): [1371.000, 1371.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.StringInterpolationBenchmark.string_buffer:·gc.time":
  708.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (41.000, 47.200, 52.000), stdev = 3.509
  CI (99.9%): [708.000, 708.000] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StringInterpolationBenchmark.string_builder
# Parameters: (size = 16)

# Run progress: 50.00% complete, ETA 00:10:31
# Fork: 1 of 3
# Warmup Iteration   1: 133.401 ns/op
# Warmup Iteration   2: 114.592 ns/op
# Warmup Iteration   3: 116.556 ns/op
# Warmup Iteration   4: 117.888 ns/op
# Warmup Iteration   5: 116.558 ns/op
Iteration   1: 118.040 ns/op
                 ·gc.alloc.rate:                   2523.636 MB/sec
                 ·gc.alloc.rate.norm:              328.017 B/op
                 ·gc.churn.G1_Eden_Space:          2536.771 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     329.725 B/op
                 ·gc.churn.G1_Survivor_Space:      0.008 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        90.000 counts
                 ·gc.time:                         43.000 ms

Iteration   2: 119.672 ns/op
                 ·gc.alloc.rate:                   2489.014 MB/sec
                 ·gc.alloc.rate.norm:              328.001 B/op
                 ·gc.churn.G1_Eden_Space:          2480.316 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     326.854 B/op
                 ·gc.churn.G1_Survivor_Space:      0.006 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        88.000 counts
                 ·gc.time:                         45.000 ms

Iteration   3: 118.698 ns/op
                 ·gc.alloc.rate:                   2512.859 MB/sec
                 ·gc.alloc.rate.norm:              328.439 B/op
                 ·gc.churn.G1_Eden_Space:          2508.561 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     327.877 B/op
                 ·gc.churn.G1_Survivor_Space:      0.015 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.002 B/op
                 ·gc.count:                        89.000 counts
                 ·gc.time:                         45.000 ms

Iteration   4: 116.889 ns/op
                 ·gc.alloc.rate:                   2548.523 MB/sec
                 ·gc.alloc.rate.norm:              328.015 B/op
                 ·gc.churn.G1_Eden_Space:          2565.010 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     330.137 B/op
                 ·gc.churn.G1_Survivor_Space:      0.006 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        91.000 counts
                 ·gc.time:                         45.000 ms

Iteration   5: 115.563 ns/op
                 ·gc.alloc.rate:                   2577.594 MB/sec
                 ·gc.alloc.rate.norm:              328.011 B/op
                 ·gc.churn.G1_Eden_Space:          2564.881 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     326.394 B/op
                 ·gc.churn.G1_Survivor_Space:      0.008 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        91.000 counts
                 ·gc.time:                         46.000 ms


# Run progress: 58.33% complete, ETA 00:08:46
# Fork: 2 of 3
# Warmup Iteration   1: 144.333 ns/op
# Warmup Iteration   2: 123.671 ns/op
# Warmup Iteration   3: 120.394 ns/op
# Warmup Iteration   4: 119.240 ns/op
# Warmup Iteration   5: 117.348 ns/op
Iteration   1: 120.465 ns/op
                 ·gc.alloc.rate:                   2472.611 MB/sec
                 ·gc.alloc.rate.norm:              328.005 B/op
                 ·gc.churn.G1_Eden_Space:          2474.569 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     328.265 B/op
                 ·gc.churn.G1_Survivor_Space:      0.010 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        89.000 counts
                 ·gc.time:                         46.000 ms

Iteration   2: 117.598 ns/op
                 ·gc.alloc.rate:                   2534.488 MB/sec
                 ·gc.alloc.rate.norm:              328.198 B/op
                 ·gc.churn.G1_Eden_Space:          2530.290 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     327.654 B/op
                 ·gc.churn.G1_Survivor_Space:      0.009 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        91.000 counts
                 ·gc.time:                         48.000 ms

Iteration   3: 118.230 ns/op
                 ·gc.alloc.rate:                   2520.755 MB/sec
                 ·gc.alloc.rate.norm:              328.184 B/op
                 ·gc.churn.G1_Eden_Space:          2530.195 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     329.414 B/op
                 ·gc.churn.G1_Survivor_Space:      0.015 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.002 B/op
                 ·gc.count:                        91.000 counts
                 ·gc.time:                         46.000 ms

Iteration   4: 119.992 ns/op
                 ·gc.alloc.rate:                   2482.887 MB/sec
                 ·gc.alloc.rate.norm:              328.063 B/op
                 ·gc.churn.G1_Eden_Space:          2474.672 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     326.977 B/op
                 ·gc.churn.G1_Survivor_Space:      0.007 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        89.000 counts
                 ·gc.time:                         41.000 ms

Iteration   5: 120.917 ns/op
                 ·gc.alloc.rate:                   2463.317 MB/sec
                 ·gc.alloc.rate.norm:              328.001 B/op
                 ·gc.churn.G1_Eden_Space:          2474.542 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     329.496 B/op
                 ·gc.churn.G1_Survivor_Space:      0.009 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        89.000 counts
                 ·gc.time:                         45.000 ms


# Run progress: 66.67% complete, ETA 00:07:01
# Fork: 3 of 3
# Warmup Iteration   1: 133.404 ns/op
# Warmup Iteration   2: 115.755 ns/op
# Warmup Iteration   3: 116.142 ns/op
# Warmup Iteration   4: 113.275 ns/op
# Warmup Iteration   5: 112.002 ns/op
Iteration   1: 111.387 ns/op
                 ·gc.alloc.rate:                   2674.261 MB/sec
                 ·gc.alloc.rate.norm:              328.012 B/op
                 ·gc.churn.G1_Eden_Space:          2673.082 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     327.867 B/op
                 ·gc.churn.G1_Survivor_Space:      0.007 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        116.000 counts
                 ·gc.time:                         54.000 ms

Iteration   2: 112.652 ns/op
                 ·gc.alloc.rate:                   2645.260 MB/sec
                 ·gc.alloc.rate.norm:              328.147 B/op
                 ·gc.churn.G1_Eden_Space:          2649.954 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     328.730 B/op
                 ·gc.churn.G1_Survivor_Space:      0.010 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        115.000 counts
                 ·gc.time:                         55.000 ms

Iteration   3: 114.811 ns/op
                 ·gc.alloc.rate:                   2594.813 MB/sec
                 ·gc.alloc.rate.norm:              328.045 B/op
                 ·gc.churn.G1_Eden_Space:          2603.982 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     329.204 B/op
                 ·gc.churn.G1_Survivor_Space:      0.006 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        113.000 counts
                 ·gc.time:                         54.000 ms

Iteration   4: 111.611 ns/op
                 ·gc.alloc.rate:                   2668.953 MB/sec
                 ·gc.alloc.rate.norm:              328.004 B/op
                 ·gc.churn.G1_Eden_Space:          2673.198 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     328.526 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        116.000 counts
                 ·gc.time:                         58.000 ms

Iteration   5: 114.849 ns/op
                 ·gc.alloc.rate:                   2594.235 MB/sec
                 ·gc.alloc.rate.norm:              328.074 B/op
                 ·gc.churn.G1_Eden_Space:          2583.839 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     326.759 B/op
                 ·gc.churn.G1_Survivor_Space:      0.008 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        102.000 counts
                 ·gc.time:                         45.000 ms



Result "com.ionutbalosin.jvm.jit.benchmark.StringInterpolationBenchmark.string_builder":
  116.758 ±(99.9%) 3.373 ns/op [Average]
  (min, avg, max) = (111.387, 116.758, 120.917), stdev = 3.155
  CI (99.9%): [113.386, 120.131] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.StringInterpolationBenchmark.string_builder:·gc.alloc.rate":
  2553.547 ±(99.9%) 74.562 MB/sec [Average]
  (min, avg, max) = (2463.317, 2553.547, 2674.261), stdev = 69.745
  CI (99.9%): [2478.985, 2628.109] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.StringInterpolationBenchmark.string_builder:·gc.alloc.rate.norm":
  328.081 ±(99.9%) 0.128 B/op [Average]
  (min, avg, max) = (328.001, 328.081, 328.439), stdev = 0.120
  CI (99.9%): [327.953, 328.209] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.StringInterpolationBenchmark.string_builder:·gc.churn.G1_Eden_Space":
  2554.924 ±(99.9%) 75.078 MB/sec [Average]
  (min, avg, max) = (2474.542, 2554.924, 2673.198), stdev = 70.228
  CI (99.9%): [2479.847, 2630.002] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.StringInterpolationBenchmark.string_builder:·gc.churn.G1_Eden_Space.norm":
  328.259 ±(99.9%) 1.269 B/op [Average]
  (min, avg, max) = (326.394, 328.259, 330.137), stdev = 1.187
  CI (99.9%): [326.989, 329.528] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.StringInterpolationBenchmark.string_builder:·gc.churn.G1_Survivor_Space":
  0.009 ±(99.9%) 0.003 MB/sec [Average]
  (min, avg, max) = (0.004, 0.009, 0.015), stdev = 0.003
  CI (99.9%): [0.005, 0.012] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.StringInterpolationBenchmark.string_builder:·gc.churn.G1_Survivor_Space.norm":
  0.001 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (0.001, 0.001, 0.002), stdev = 0.001
  CI (99.9%): [0.001, 0.002] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.StringInterpolationBenchmark.string_builder:·gc.count":
  1460.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (88.000, 97.333, 116.000), stdev = 11.512
  CI (99.9%): [1460.000, 1460.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.StringInterpolationBenchmark.string_builder:·gc.time":
  716.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (41.000, 47.733, 58.000), stdev = 5.007
  CI (99.9%): [716.000, 716.000] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:+EnableJVMCI -XX:+UseJVMCICompiler
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StringInterpolationBenchmark.string_format
# Parameters: (size = 16)

# Run progress: 75.00% complete, ETA 00:05:15
# Fork: 1 of 3
# Warmup Iteration   1: 1599.304 ns/op
# Warmup Iteration   2: 1290.153 ns/op
# Warmup Iteration   3: 1237.745 ns/op
# Warmup Iteration   4: 1241.120 ns/op
# Warmup Iteration   5: 1235.442 ns/op
Iteration   1: 1253.365 ns/op
                 ·gc.alloc.rate:                   905.444 MB/sec
                 ·gc.alloc.rate.norm:              1249.701 B/op
                 ·gc.churn.G1_Eden_Space:          919.052 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     1268.483 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.007 B/op
                 ·gc.count:                        38.000 counts
                 ·gc.time:                         22.000 ms

Iteration   2: 1243.405 ns/op
                 ·gc.alloc.rate:                   911.631 MB/sec
                 ·gc.alloc.rate.norm:              1248.225 B/op
                 ·gc.churn.G1_Eden_Space:          894.879 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     1225.287 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.006 B/op
                 ·gc.count:                        37.000 counts
                 ·gc.time:                         23.000 ms

Iteration   3: 1238.705 ns/op
                 ·gc.alloc.rate:                   916.428 MB/sec
                 ·gc.alloc.rate.norm:              1249.990 B/op
                 ·gc.churn.G1_Eden_Space:          919.111 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     1253.650 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.005 B/op
                 ·gc.count:                        38.000 counts
                 ·gc.time:                         23.000 ms

Iteration   4: 1239.717 ns/op
                 ·gc.alloc.rate:                   914.624 MB/sec
                 ·gc.alloc.rate.norm:              1248.901 B/op
                 ·gc.churn.G1_Eden_Space:          918.849 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     1254.671 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.005 B/op
                 ·gc.count:                        38.000 counts
                 ·gc.time:                         22.000 ms

Iteration   5: 1214.644 ns/op
                 ·gc.alloc.rate:                   934.278 MB/sec
                 ·gc.alloc.rate.norm:              1249.570 B/op
                 ·gc.churn.G1_Eden_Space:          943.311 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     1261.651 B/op
                 ·gc.churn.G1_Survivor_Space:      0.007 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.010 B/op
                 ·gc.count:                        39.000 counts
                 ·gc.time:                         26.000 ms


# Run progress: 83.33% complete, ETA 00:03:30
# Fork: 2 of 3
# Warmup Iteration   1: 1625.950 ns/op
# Warmup Iteration   2: 1302.702 ns/op
# Warmup Iteration   3: 1283.841 ns/op
# Warmup Iteration   4: 1240.310 ns/op
# Warmup Iteration   5: 1263.193 ns/op
Iteration   1: 1200.978 ns/op
                 ·gc.alloc.rate:                   943.881 MB/sec
                 ·gc.alloc.rate.norm:              1248.195 B/op
                 ·gc.churn.G1_Eden_Space:          942.748 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     1246.696 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.007 B/op
                 ·gc.count:                        50.000 counts
                 ·gc.time:                         28.000 ms

Iteration   2: 1271.872 ns/op
                 ·gc.alloc.rate:                   891.594 MB/sec
                 ·gc.alloc.rate.norm:              1248.704 B/op
                 ·gc.churn.G1_Eden_Space:          904.978 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     1267.448 B/op
                 ·gc.churn.G1_Survivor_Space:      0.008 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.012 B/op
                 ·gc.count:                        48.000 counts
                 ·gc.time:                         28.000 ms

Iteration   3: 1247.849 ns/op
                 ·gc.alloc.rate:                   909.447 MB/sec
                 ·gc.alloc.rate.norm:              1249.649 B/op
                 ·gc.churn.G1_Eden_Space:          904.998 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     1243.536 B/op
                 ·gc.churn.G1_Survivor_Space:      0.007 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.009 B/op
                 ·gc.count:                        48.000 counts
                 ·gc.time:                         27.000 ms

Iteration   4: 1285.328 ns/op
                 ·gc.alloc.rate:                   882.423 MB/sec
                 ·gc.alloc.rate.norm:              1248.990 B/op
                 ·gc.churn.G1_Eden_Space:          886.104 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     1254.200 B/op
                 ·gc.churn.G1_Survivor_Space:      0.007 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.010 B/op
                 ·gc.count:                        47.000 counts
                 ·gc.time:                         27.000 ms

Iteration   5: 1244.656 ns/op
                 ·gc.alloc.rate:                   910.542 MB/sec
                 ·gc.alloc.rate.norm:              1248.000 B/op
                 ·gc.churn.G1_Eden_Space:          904.958 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     1240.347 B/op
                 ·gc.churn.G1_Survivor_Space:      0.006 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.009 B/op
                 ·gc.count:                        48.000 counts
                 ·gc.time:                         26.000 ms


# Run progress: 91.67% complete, ETA 00:01:45
# Fork: 3 of 3
# Warmup Iteration   1: 1398.063 ns/op
# Warmup Iteration   2: 1143.981 ns/op
# Warmup Iteration   3: 1121.631 ns/op
# Warmup Iteration   4: 1122.781 ns/op
# Warmup Iteration   5: 1133.803 ns/op
Iteration   1: 1162.619 ns/op
                 ·gc.alloc.rate:                   950.045 MB/sec
                 ·gc.alloc.rate.norm:              1216.264 B/op
                 ·gc.churn.G1_Eden_Space:          961.561 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     1231.007 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.005 B/op
                 ·gc.count:                        33.000 counts
                 ·gc.time:                         20.000 ms

Iteration   2: 1105.332 ns/op
                 ·gc.alloc.rate:                   999.322 MB/sec
                 ·gc.alloc.rate.norm:              1216.298 B/op
                 ·gc.churn.G1_Eden_Space:          990.712 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     1205.819 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.005 B/op
                 ·gc.count:                        34.000 counts
                 ·gc.time:                         23.000 ms

Iteration   3: 1091.891 ns/op
                 ·gc.alloc.rate:                   1011.566 MB/sec
                 ·gc.alloc.rate.norm:              1216.229 B/op
                 ·gc.churn.G1_Eden_Space:          1019.854 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     1226.193 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.003 B/op
                 ·gc.count:                        35.000 counts
                 ·gc.time:                         19.000 ms

Iteration   4: 1147.058 ns/op
                 ·gc.alloc.rate:                   963.205 MB/sec
                 ·gc.alloc.rate.norm:              1216.617 B/op
                 ·gc.churn.G1_Eden_Space:          961.557 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     1214.536 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.007 B/op
                 ·gc.count:                        33.000 counts
                 ·gc.time:                         27.000 ms

Iteration   5: 1118.382 ns/op
                 ·gc.alloc.rate:                   987.666 MB/sec
                 ·gc.alloc.rate.norm:              1216.360 B/op
                 ·gc.churn.G1_Eden_Space:          990.667 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     1220.055 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.006 B/op
                 ·gc.count:                        34.000 counts
                 ·gc.time:                         19.000 ms



Result "com.ionutbalosin.jvm.jit.benchmark.StringInterpolationBenchmark.string_format":
  1204.387 ±(99.9%) 67.599 ns/op [Average]
  (min, avg, max) = (1091.891, 1204.387, 1285.328), stdev = 63.232
  CI (99.9%): [1136.788, 1271.985] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.StringInterpolationBenchmark.string_format:·gc.alloc.rate":
  935.473 ±(99.9%) 42.331 MB/sec [Average]
  (min, avg, max) = (882.423, 935.473, 1011.566), stdev = 39.597
  CI (99.9%): [893.142, 977.804] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.StringInterpolationBenchmark.string_format:·gc.alloc.rate.norm":
  1238.113 ±(99.9%) 17.037 B/op [Average]
  (min, avg, max) = (1216.229, 1238.113, 1249.990), stdev = 15.937
  CI (99.9%): [1221.076, 1255.150] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.StringInterpolationBenchmark.string_format:·gc.churn.G1_Eden_Space":
  937.556 ±(99.9%) 42.683 MB/sec [Average]
  (min, avg, max) = (886.104, 937.556, 1019.854), stdev = 39.926
  CI (99.9%): [894.873, 980.239] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.StringInterpolationBenchmark.string_format:·gc.churn.G1_Eden_Space.norm":
  1240.905 ±(99.9%) 20.965 B/op [Average]
  (min, avg, max) = (1205.819, 1240.905, 1268.483), stdev = 19.611
  CI (99.9%): [1219.940, 1261.871] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.StringInterpolationBenchmark.string_format:·gc.churn.G1_Survivor_Space":
  0.005 ±(99.9%) 0.002 MB/sec [Average]
  (min, avg, max) = (0.003, 0.005, 0.008), stdev = 0.002
  CI (99.9%): [0.004, 0.007] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.StringInterpolationBenchmark.string_format:·gc.churn.G1_Survivor_Space.norm":
  0.007 ±(99.9%) 0.003 B/op [Average]
  (min, avg, max) = (0.003, 0.007, 0.012), stdev = 0.002
  CI (99.9%): [0.004, 0.010] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.StringInterpolationBenchmark.string_format:·gc.count":
  600.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (33.000, 40.000, 50.000), stdev = 6.313
  CI (99.9%): [600.000, 600.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.StringInterpolationBenchmark.string_format:·gc.time":
  360.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (19.000, 24.000, 28.000), stdev = 3.207
  CI (99.9%): [360.000, 360.000] (assumes normal distribution)


# Run complete. Total time: 00:21:03

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                                                     (size)  Mode  Cnt     Score    Error   Units
StringInterpolationBenchmark.concat_default                                       16  avgt   15    82.300 ±  1.377   ns/op
StringInterpolationBenchmark.concat_default:·gc.alloc.rate                        16  avgt   15  1943.465 ± 32.695  MB/sec
StringInterpolationBenchmark.concat_default:·gc.alloc.rate.norm                   16  avgt   15   176.086 ±  0.118    B/op
StringInterpolationBenchmark.concat_default:·gc.churn.G1_Eden_Space               16  avgt   15  1943.928 ± 33.333  MB/sec
StringInterpolationBenchmark.concat_default:·gc.churn.G1_Eden_Space.norm          16  avgt   15   176.131 ±  1.215    B/op
StringInterpolationBenchmark.concat_default:·gc.churn.G1_Survivor_Space           16  avgt   15     0.010 ±  0.005  MB/sec
StringInterpolationBenchmark.concat_default:·gc.churn.G1_Survivor_Space.norm      16  avgt   15     0.001 ±  0.001    B/op
StringInterpolationBenchmark.concat_default:·gc.count                             16  avgt   15  1188.000           counts
StringInterpolationBenchmark.concat_default:·gc.time                              16  avgt   15   613.000               ms
StringInterpolationBenchmark.string_buffer                                        16  avgt   15   137.503 ±  2.232   ns/op
StringInterpolationBenchmark.string_buffer:·gc.alloc.rate                         16  avgt   15  2220.045 ± 36.518  MB/sec
StringInterpolationBenchmark.string_buffer:·gc.alloc.rate.norm                    16  avgt   15   336.067 ±  0.098    B/op
StringInterpolationBenchmark.string_buffer:·gc.churn.G1_Eden_Space                16  avgt   15  2221.748 ± 38.495  MB/sec
StringInterpolationBenchmark.string_buffer:·gc.churn.G1_Eden_Space.norm           16  avgt   15   336.324 ±  1.760    B/op
StringInterpolationBenchmark.string_buffer:·gc.churn.G1_Survivor_Space            16  avgt   15     0.008 ±  0.005  MB/sec
StringInterpolationBenchmark.string_buffer:·gc.churn.G1_Survivor_Space.norm       16  avgt   15     0.001 ±  0.001    B/op
StringInterpolationBenchmark.string_buffer:·gc.count                              16  avgt   15  1371.000           counts
StringInterpolationBenchmark.string_buffer:·gc.time                               16  avgt   15   708.000               ms
StringInterpolationBenchmark.string_builder                                       16  avgt   15   116.758 ±  3.373   ns/op
StringInterpolationBenchmark.string_builder:·gc.alloc.rate                        16  avgt   15  2553.547 ± 74.562  MB/sec
StringInterpolationBenchmark.string_builder:·gc.alloc.rate.norm                   16  avgt   15   328.081 ±  0.128    B/op
StringInterpolationBenchmark.string_builder:·gc.churn.G1_Eden_Space               16  avgt   15  2554.924 ± 75.078  MB/sec
StringInterpolationBenchmark.string_builder:·gc.churn.G1_Eden_Space.norm          16  avgt   15   328.259 ±  1.269    B/op
StringInterpolationBenchmark.string_builder:·gc.churn.G1_Survivor_Space           16  avgt   15     0.009 ±  0.003  MB/sec
StringInterpolationBenchmark.string_builder:·gc.churn.G1_Survivor_Space.norm      16  avgt   15     0.001 ±  0.001    B/op
StringInterpolationBenchmark.string_builder:·gc.count                             16  avgt   15  1460.000           counts
StringInterpolationBenchmark.string_builder:·gc.time                              16  avgt   15   716.000               ms
StringInterpolationBenchmark.string_format                                        16  avgt   15  1204.387 ± 67.599   ns/op
StringInterpolationBenchmark.string_format:·gc.alloc.rate                         16  avgt   15   935.473 ± 42.331  MB/sec
StringInterpolationBenchmark.string_format:·gc.alloc.rate.norm                    16  avgt   15  1238.113 ± 17.037    B/op
StringInterpolationBenchmark.string_format:·gc.churn.G1_Eden_Space                16  avgt   15   937.556 ± 42.683  MB/sec
StringInterpolationBenchmark.string_format:·gc.churn.G1_Eden_Space.norm           16  avgt   15  1240.905 ± 20.965    B/op
StringInterpolationBenchmark.string_format:·gc.churn.G1_Survivor_Space            16  avgt   15     0.005 ±  0.002  MB/sec
StringInterpolationBenchmark.string_format:·gc.churn.G1_Survivor_Space.norm       16  avgt   15     0.007 ±  0.003    B/op
StringInterpolationBenchmark.string_format:·gc.count                              16  avgt   15   600.000           counts
StringInterpolationBenchmark.string_format:·gc.time                               16  avgt   15   360.000               ms

Benchmark result is saved to results/report-openjdk-13/hotspotvm_graal_jit/StringInterpolationBenchmark.json
Finished hotspotvm_graal_jit JMH Tests Suite!
Time Elapsed : 2422 minutes and 34 seconds.
