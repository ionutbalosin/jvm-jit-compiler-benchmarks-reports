Welcome to JMH Tests Suites
##################################################################################################
############################       HotSpot C1/C2 JIT Test Suite       ############################
##################################################################################################
Launching hotspotvm_c1_c2_jit JMH Tests Suite ...
Create results/report-openjdk-13/hotspotvm_c1_c2_jit folder
Running java  -jar benchmarks/target/benchmarks.jar .*LockCoarseningBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_c1_c2_jit/LockCoarseningBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.locks.LockCoarseningBenchmark.lock_baseline
# Parameters: (value = 42)

# Run progress: 0.00% complete, ETA 00:10:00
# Fork: 1 of 3
# Warmup Iteration   1: 4.712 ns/op
# Warmup Iteration   2: 4.335 ns/op
# Warmup Iteration   3: 3.933 ns/op
# Warmup Iteration   4: 3.914 ns/op
# Warmup Iteration   5: 3.874 ns/op
Iteration   1: 3.861 ns/op
Iteration   2: 3.850 ns/op
Iteration   3: 3.880 ns/op
Iteration   4: 3.852 ns/op
Iteration   5: 3.847 ns/op

# Run progress: 16.67% complete, ETA 00:08:21
# Fork: 2 of 3
# Warmup Iteration   1: 4.484 ns/op
# Warmup Iteration   2: 4.457 ns/op
# Warmup Iteration   3: 3.928 ns/op
# Warmup Iteration   4: 3.827 ns/op
# Warmup Iteration   5: 3.815 ns/op
Iteration   1: 3.786 ns/op
Iteration   2: 4.110 ns/op
Iteration   3: 3.690 ns/op
Iteration   4: 3.730 ns/op
Iteration   5: 3.780 ns/op

# Run progress: 33.33% complete, ETA 00:06:41
# Fork: 3 of 3
# Warmup Iteration   1: 4.675 ns/op
# Warmup Iteration   2: 4.553 ns/op
# Warmup Iteration   3: 4.111 ns/op
# Warmup Iteration   4: 4.089 ns/op
# Warmup Iteration   5: 4.077 ns/op
Iteration   1: 4.076 ns/op
Iteration   2: 4.078 ns/op
Iteration   3: 4.075 ns/op
Iteration   4: 4.074 ns/op
Iteration   5: 4.067 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.locks.LockCoarseningBenchmark.lock_baseline":
  3.917 ±(99.9%) 0.157 ns/op [Average]
  (min, avg, max) = (3.690, 3.917, 4.110), stdev = 0.147
  CI (99.9%): [3.760, 4.074] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.locks.LockCoarseningBenchmark.lock_coarsening_10x
# Parameters: (value = 42)

# Run progress: 50.00% complete, ETA 00:05:00
# Fork: 1 of 3
# Warmup Iteration   1: 4.196 ns/op
# Warmup Iteration   2: 4.140 ns/op
# Warmup Iteration   3: 3.777 ns/op
# Warmup Iteration   4: 3.786 ns/op
# Warmup Iteration   5: 3.779 ns/op
Iteration   1: 3.792 ns/op
Iteration   2: 3.795 ns/op
Iteration   3: 3.795 ns/op
Iteration   4: 4.162 ns/op
Iteration   5: 4.124 ns/op

# Run progress: 66.67% complete, ETA 00:03:20
# Fork: 2 of 3
# Warmup Iteration   1: 4.637 ns/op
# Warmup Iteration   2: 4.194 ns/op
# Warmup Iteration   3: 4.151 ns/op
# Warmup Iteration   4: 4.126 ns/op
# Warmup Iteration   5: 4.117 ns/op
Iteration   1: 4.115 ns/op
Iteration   2: 3.774 ns/op
Iteration   3: 3.791 ns/op
Iteration   4: 4.166 ns/op
Iteration   5: 4.134 ns/op

# Run progress: 83.33% complete, ETA 00:01:40
# Fork: 3 of 3
# Warmup Iteration   1: 4.247 ns/op
# Warmup Iteration   2: 4.270 ns/op
# Warmup Iteration   3: 3.837 ns/op
# Warmup Iteration   4: 3.843 ns/op
# Warmup Iteration   5: 3.843 ns/op
Iteration   1: 3.844 ns/op
Iteration   2: 4.167 ns/op
Iteration   3: 4.147 ns/op
Iteration   4: 4.139 ns/op
Iteration   5: 4.127 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.locks.LockCoarseningBenchmark.lock_coarsening_10x":
  4.005 ±(99.9%) 0.188 ns/op [Average]
  (min, avg, max) = (3.774, 4.005, 4.167), stdev = 0.175
  CI (99.9%): [3.817, 4.192] (assumes normal distribution)


# Run complete. Total time: 00:10:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    (value)  Mode  Cnt  Score   Error  Units
LockCoarseningBenchmark.lock_baseline             42  avgt   15  3.917 ± 0.157  ns/op
LockCoarseningBenchmark.lock_coarsening_10x       42  avgt   15  4.005 ± 0.188  ns/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_c1_c2_jit/LockCoarseningBenchmark.json
Running java  -jar benchmarks/target/benchmarks.jar .*LockElisionBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_c1_c2_jit/LockElisionBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.locks.LockElisionBenchmark.lock_baseline
# Parameters: (value = 42)

# Run progress: 0.00% complete, ETA 00:10:00
# Fork: 1 of 3
# Warmup Iteration   1: 2.833 ns/op
# Warmup Iteration   2: 2.884 ns/op
# Warmup Iteration   3: 3.013 ns/op
# Warmup Iteration   4: 3.023 ns/op
# Warmup Iteration   5: 2.703 ns/op
Iteration   1: 2.734 ns/op
Iteration   2: 2.749 ns/op
Iteration   3: 2.752 ns/op
Iteration   4: 2.741 ns/op
Iteration   5: 2.771 ns/op

# Run progress: 16.67% complete, ETA 00:08:21
# Fork: 2 of 3
# Warmup Iteration   1: 3.126 ns/op
# Warmup Iteration   2: 3.159 ns/op
# Warmup Iteration   3: 2.993 ns/op
# Warmup Iteration   4: 2.978 ns/op
# Warmup Iteration   5: 2.976 ns/op
Iteration   1: 2.979 ns/op
Iteration   2: 2.985 ns/op
Iteration   3: 2.982 ns/op
Iteration   4: 2.982 ns/op
Iteration   5: 2.982 ns/op

# Run progress: 33.33% complete, ETA 00:06:41
# Fork: 3 of 3
# Warmup Iteration   1: 2.826 ns/op
# Warmup Iteration   2: 3.151 ns/op
# Warmup Iteration   3: 2.997 ns/op
# Warmup Iteration   4: 2.973 ns/op
# Warmup Iteration   5: 2.984 ns/op
Iteration   1: 2.976 ns/op
Iteration   2: 2.999 ns/op
Iteration   3: 2.998 ns/op
Iteration   4: 2.992 ns/op
Iteration   5: 2.992 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.locks.LockElisionBenchmark.lock_baseline":
  2.908 ±(99.9%) 0.124 ns/op [Average]
  (min, avg, max) = (2.734, 2.908, 2.999), stdev = 0.116
  CI (99.9%): [2.783, 3.032] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.locks.LockElisionBenchmark.lock_elision_10x
# Parameters: (value = 42)

# Run progress: 50.00% complete, ETA 00:05:00
# Fork: 1 of 3
# Warmup Iteration   1: 2.816 ns/op
# Warmup Iteration   2: 2.880 ns/op
# Warmup Iteration   3: 2.740 ns/op
# Warmup Iteration   4: 2.759 ns/op
# Warmup Iteration   5: 2.751 ns/op
Iteration   1: 2.752 ns/op
Iteration   2: 2.755 ns/op
Iteration   3: 2.759 ns/op
Iteration   4: 2.763 ns/op
Iteration   5: 2.765 ns/op

# Run progress: 66.67% complete, ETA 00:03:20
# Fork: 2 of 3
# Warmup Iteration   1: 3.155 ns/op
# Warmup Iteration   2: 2.908 ns/op
# Warmup Iteration   3: 2.774 ns/op
# Warmup Iteration   4: 2.798 ns/op
# Warmup Iteration   5: 2.752 ns/op
Iteration   1: 2.757 ns/op
Iteration   2: 2.753 ns/op
Iteration   3: 3.042 ns/op
Iteration   4: 3.019 ns/op
Iteration   5: 3.006 ns/op

# Run progress: 83.33% complete, ETA 00:01:40
# Fork: 3 of 3
# Warmup Iteration   1: 3.113 ns/op
# Warmup Iteration   2: 3.150 ns/op
# Warmup Iteration   3: 3.006 ns/op
# Warmup Iteration   4: 3.001 ns/op
# Warmup Iteration   5: 3.002 ns/op
Iteration   1: 2.995 ns/op
Iteration   2: 2.994 ns/op
Iteration   3: 2.997 ns/op
Iteration   4: 2.998 ns/op
Iteration   5: 2.994 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.locks.LockElisionBenchmark.lock_elision_10x":
  2.890 ±(99.9%) 0.137 ns/op [Average]
  (min, avg, max) = (2.752, 2.890, 3.042), stdev = 0.129
  CI (99.9%): [2.752, 3.027] (assumes normal distribution)


# Run complete. Total time: 00:10:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                              (value)  Mode  Cnt  Score   Error  Units
LockElisionBenchmark.lock_baseline          42  avgt   15  2.908 ± 0.124  ns/op
LockElisionBenchmark.lock_elision_10x       42  avgt   15  2.890 ± 0.137  ns/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_c1_c2_jit/LockElisionBenchmark.json
Running java  -jar benchmarks/target/benchmarks.jar .*LocksBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_c1_c2_jit/LocksBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.locks.LocksBenchmark.fair_reentrant_lock

# Run progress: 0.00% complete, ETA 00:35:00
# Fork: 1 of 3
# Warmup Iteration   1: 44931.273 ±(99.9%) 4.011 ns/op
# Warmup Iteration   2: 45046.201 ±(99.9%) 5.159 ns/op
# Warmup Iteration   3: 44900.834 ±(99.9%) 3.957 ns/op
# Warmup Iteration   4: 45130.111 ±(99.9%) 1.128 ns/op
# Warmup Iteration   5: 44527.879 ±(99.9%) 55.025 ns/op
Iteration   1: 44442.238 ±(99.9%) 3.500 ns/op
Iteration   2: 45151.694 ±(99.9%) 1.415 ns/op
Iteration   3: 44973.331 ±(99.9%) 342.519 ns/op
Iteration   4: 44342.659 ±(99.9%) 27.569 ns/op
Iteration   5: 43927.755 ±(99.9%) 2.927 ns/op

# Run progress: 4.76% complete, ETA 00:33:26
# Fork: 2 of 3
# Warmup Iteration   1: 45956.358 ±(99.9%) 6.139 ns/op
# Warmup Iteration   2: 43505.536 ±(99.9%) 2.468 ns/op
# Warmup Iteration   3: 44846.002 ±(99.9%) 1.930 ns/op
# Warmup Iteration   4: 45105.367 ±(99.9%) 0.410 ns/op
# Warmup Iteration   5: 45543.048 ±(99.9%) 3.083 ns/op
Iteration   1: 44823.415 ±(99.9%) 2.090 ns/op
Iteration   2: 43970.121 ±(99.9%) 2.515 ns/op
Iteration   3: 44302.634 ±(99.9%) 1.036 ns/op
Iteration   4: 45033.703 ±(99.9%) 1.888 ns/op
Iteration   5: 43372.586 ±(99.9%) 2.442 ns/op

# Run progress: 9.52% complete, ETA 00:31:45
# Fork: 3 of 3
# Warmup Iteration   1: 44223.464 ±(99.9%) 4.255 ns/op
# Warmup Iteration   2: 43356.437 ±(99.9%) 3.863 ns/op
# Warmup Iteration   3: 44343.733 ±(99.9%) 31.654 ns/op
# Warmup Iteration   4: 45664.164 ±(99.9%) 3.204 ns/op
# Warmup Iteration   5: 44809.132 ±(99.9%) 1.554 ns/op
Iteration   1: 45058.084 ±(99.9%) 4.734 ns/op
Iteration   2: 45135.105 ±(99.9%) 3.023 ns/op
Iteration   3: 44203.242 ±(99.9%) 1.976 ns/op
Iteration   4: 44763.437 ±(99.9%) 2.272 ns/op
Iteration   5: 45100.890 ±(99.9%) 3.544 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.locks.LocksBenchmark.fair_reentrant_lock":
  44573.393 ±(99.9%) 581.146 ns/op [Average]
  (min, avg, max) = (43372.586, 44573.393, 45151.694), stdev = 543.604
  CI (99.9%): [43992.247, 45154.539] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.locks.LocksBenchmark.fair_reentrant_read_write_lock

# Run progress: 14.29% complete, ETA 00:30:05
# Fork: 1 of 3
# Warmup Iteration   1: 86736.862 ±(99.9%) 63.372 ns/op
# Warmup Iteration   2: 89159.612 ±(99.9%) 8.685 ns/op
# Warmup Iteration   3: 88465.181 ±(99.9%) 9.180 ns/op
# Warmup Iteration   4: 89193.568 ±(99.9%) 7.398 ns/op
# Warmup Iteration   5: 90044.962 ±(99.9%) 8.892 ns/op
Iteration   1: 89771.826 ±(99.9%) 4.556 ns/op
Iteration   2: 90554.583 ±(99.9%) 7.198 ns/op
Iteration   3: 88977.032 ±(99.9%) 3.472 ns/op
Iteration   4: 89034.287 ±(99.9%) 1.675 ns/op
Iteration   5: 87905.380 ±(99.9%) 2.243 ns/op

# Run progress: 19.05% complete, ETA 00:28:25
# Fork: 2 of 3
# Warmup Iteration   1: 86939.646 ±(99.9%) 14.858 ns/op
# Warmup Iteration   2: 87758.359 ±(99.9%) 47.073 ns/op
# Warmup Iteration   3: 89405.283 ±(99.9%) 4.340 ns/op
# Warmup Iteration   4: 90837.133 ±(99.9%) 7.403 ns/op
# Warmup Iteration   5: 90051.281 ±(99.9%) 1.214 ns/op
Iteration   1: 89965.630 ±(99.9%) 4.167 ns/op
Iteration   2: 86824.911 ±(99.9%) 10.437 ns/op
Iteration   3: 89569.164 ±(99.9%) 3.584 ns/op
Iteration   4: 88872.995 ±(99.9%) 4.053 ns/op
Iteration   5: 87922.083 ±(99.9%) 1.982 ns/op

# Run progress: 23.81% complete, ETA 00:26:44
# Fork: 3 of 3
# Warmup Iteration   1: 88804.391 ±(99.9%) 27.824 ns/op
# Warmup Iteration   2: 88095.053 ±(99.9%) 3.386 ns/op
# Warmup Iteration   3: 89479.879 ±(99.9%) 72.460 ns/op
# Warmup Iteration   4: 90143.265 ±(99.9%) 7.100 ns/op
# Warmup Iteration   5: 89575.633 ±(99.9%) 15.338 ns/op
Iteration   1: 88901.690 ±(99.9%) 2.966 ns/op
Iteration   2: 87522.793 ±(99.9%) 6.189 ns/op
Iteration   3: 89221.228 ±(99.9%) 7.739 ns/op
Iteration   4: 88813.173 ±(99.9%) 2.948 ns/op
Iteration   5: 83050.763 ±(99.9%) 6.794 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.locks.LocksBenchmark.fair_reentrant_read_write_lock":
  88460.503 ±(99.9%) 1909.852 ns/op [Average]
  (min, avg, max) = (83050.763, 88460.503, 90554.583), stdev = 1786.477
  CI (99.9%): [86550.651, 90370.355] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.locks.LocksBenchmark.fair_semaphore

# Run progress: 28.57% complete, ETA 00:25:04
# Fork: 1 of 3
# Warmup Iteration   1: 644.789 ±(99.9%) 248.248 ns/op
# Warmup Iteration   2: 655.992 ±(99.9%) 256.960 ns/op
# Warmup Iteration   3: 669.097 ±(99.9%) 206.487 ns/op
# Warmup Iteration   4: 679.615 ±(99.9%) 185.968 ns/op
# Warmup Iteration   5: 686.458 ±(99.9%) 235.219 ns/op
Iteration   1: 690.919 ±(99.9%) 222.081 ns/op
Iteration   2: 693.956 ±(99.9%) 215.059 ns/op
Iteration   3: 695.668 ±(99.9%) 222.258 ns/op
Iteration   4: 691.886 ±(99.9%) 225.792 ns/op
Iteration   5: 699.788 ±(99.9%) 257.188 ns/op

# Run progress: 33.33% complete, ETA 00:23:23
# Fork: 2 of 3
# Warmup Iteration   1: 707.376 ±(99.9%) 262.708 ns/op
# Warmup Iteration   2: 704.202 ±(99.9%) 277.998 ns/op
# Warmup Iteration   3: 705.793 ±(99.9%) 231.491 ns/op
# Warmup Iteration   4: 705.713 ±(99.9%) 234.150 ns/op
# Warmup Iteration   5: 698.715 ±(99.9%) 186.261 ns/op
Iteration   1: 708.701 ±(99.9%) 243.024 ns/op
Iteration   2: 713.321 ±(99.9%) 224.206 ns/op
Iteration   3: 713.176 ±(99.9%) 236.106 ns/op
Iteration   4: 711.808 ±(99.9%) 247.304 ns/op
Iteration   5: 700.511 ±(99.9%) 238.273 ns/op

# Run progress: 38.10% complete, ETA 00:21:43
# Fork: 3 of 3
# Warmup Iteration   1: 716.900 ±(99.9%) 600.290 ns/op
# Warmup Iteration   2: 721.412 ±(99.9%) 508.711 ns/op
# Warmup Iteration   3: 716.499 ±(99.9%) 463.446 ns/op
# Warmup Iteration   4: 720.653 ±(99.9%) 488.846 ns/op
# Warmup Iteration   5: 720.573 ±(99.9%) 531.208 ns/op
Iteration   1: 722.708 ±(99.9%) 500.883 ns/op
Iteration   2: 716.477 ±(99.9%) 427.959 ns/op
Iteration   3: 724.553 ±(99.9%) 509.723 ns/op
Iteration   4: 723.157 ±(99.9%) 494.385 ns/op
Iteration   5: 723.088 ±(99.9%) 521.874 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.locks.LocksBenchmark.fair_semaphore":
  708.648 ±(99.9%) 13.117 ns/op [Average]
  (min, avg, max) = (690.919, 708.648, 724.553), stdev = 12.270
  CI (99.9%): [695.531, 721.765] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.locks.LocksBenchmark.reentrant_lock

# Run progress: 42.86% complete, ETA 00:20:03
# Fork: 1 of 3
# Warmup Iteration   1: 581.375 ±(99.9%) 229.320 ns/op
# Warmup Iteration   2: 626.842 ±(99.9%) 160.391 ns/op
# Warmup Iteration   3: 568.442 ±(99.9%) 119.681 ns/op
# Warmup Iteration   4: 571.416 ±(99.9%) 103.470 ns/op
# Warmup Iteration   5: 573.351 ±(99.9%) 86.476 ns/op
Iteration   1: 570.921 ±(99.9%) 102.612 ns/op
Iteration   2: 570.487 ±(99.9%) 112.017 ns/op
Iteration   3: 583.851 ±(99.9%) 99.696 ns/op
Iteration   4: 580.582 ±(99.9%) 96.596 ns/op
Iteration   5: 572.107 ±(99.9%) 144.838 ns/op

# Run progress: 47.62% complete, ETA 00:18:22
# Fork: 2 of 3
# Warmup Iteration   1: 584.485 ±(99.9%) 45.915 ns/op
# Warmup Iteration   2: 601.058 ±(99.9%) 81.400 ns/op
# Warmup Iteration   3: 551.032 ±(99.9%) 73.988 ns/op
# Warmup Iteration   4: 563.352 ±(99.9%) 83.138 ns/op
# Warmup Iteration   5: 560.762 ±(99.9%) 76.589 ns/op
Iteration   1: 554.449 ±(99.9%) 50.545 ns/op
Iteration   2: 558.322 ±(99.9%) 47.247 ns/op
Iteration   3: 554.572 ±(99.9%) 62.256 ns/op
Iteration   4: 564.945 ±(99.9%) 74.202 ns/op
Iteration   5: 555.520 ±(99.9%) 90.741 ns/op

# Run progress: 52.38% complete, ETA 00:16:42
# Fork: 3 of 3
# Warmup Iteration   1: 590.636 ±(99.9%) 113.048 ns/op
# Warmup Iteration   2: 652.963 ±(99.9%) 209.655 ns/op
# Warmup Iteration   3: 590.900 ±(99.9%) 389.362 ns/op
# Warmup Iteration   4: 586.469 ±(99.9%) 228.714 ns/op
# Warmup Iteration   5: 589.066 ±(99.9%) 389.602 ns/op
Iteration   1: 567.123 ±(99.9%) 326.327 ns/op
Iteration   2: 592.537 ±(99.9%) 334.324 ns/op
Iteration   3: 590.127 ±(99.9%) 309.994 ns/op
Iteration   4: 562.460 ±(99.9%) 241.015 ns/op
Iteration   5: 594.856 ±(99.9%) 282.674 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.locks.LocksBenchmark.reentrant_lock":
  571.524 ±(99.9%) 14.907 ns/op [Average]
  (min, avg, max) = (554.449, 571.524, 594.856), stdev = 13.944
  CI (99.9%): [556.617, 586.431] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.locks.LocksBenchmark.reentrant_read_write_lock

# Run progress: 57.14% complete, ETA 00:15:02
# Fork: 1 of 3
# Warmup Iteration   1: 6754.913 ±(99.9%) 601.264 ns/op
# Warmup Iteration   2: 6842.472 ±(99.9%) 389.525 ns/op
# Warmup Iteration   3: 6982.009 ±(99.9%) 496.893 ns/op
# Warmup Iteration   4: 6958.848 ±(99.9%) 391.169 ns/op
# Warmup Iteration   5: 6798.959 ±(99.9%) 729.885 ns/op
Iteration   1: 6502.948 ±(99.9%) 819.214 ns/op
Iteration   2: 6624.539 ±(99.9%) 502.901 ns/op
Iteration   3: 6646.923 ±(99.9%) 369.275 ns/op
Iteration   4: 6679.773 ±(99.9%) 303.586 ns/op
Iteration   5: 6636.733 ±(99.9%) 334.102 ns/op

# Run progress: 61.90% complete, ETA 00:13:22
# Fork: 2 of 3
# Warmup Iteration   1: 6506.902 ±(99.9%) 1198.294 ns/op
# Warmup Iteration   2: 6459.744 ±(99.9%) 539.912 ns/op
# Warmup Iteration   3: 6689.840 ±(99.9%) 600.287 ns/op
# Warmup Iteration   4: 6749.647 ±(99.9%) 861.456 ns/op
# Warmup Iteration   5: 6539.022 ±(99.9%) 591.513 ns/op
Iteration   1: 6514.608 ±(99.9%) 718.908 ns/op
Iteration   2: 6226.865 ±(99.9%) 1076.940 ns/op
Iteration   3: 6496.406 ±(99.9%) 670.053 ns/op
Iteration   4: 6568.830 ±(99.9%) 691.567 ns/op
Iteration   5: 6525.347 ±(99.9%) 808.531 ns/op

# Run progress: 66.67% complete, ETA 00:11:41
# Fork: 3 of 3
# Warmup Iteration   1: 6948.050 ±(99.9%) 361.352 ns/op
# Warmup Iteration   2: 6904.830 ±(99.9%) 435.322 ns/op
# Warmup Iteration   3: 6917.869 ±(99.9%) 848.534 ns/op
# Warmup Iteration   4: 7004.881 ±(99.9%) 586.508 ns/op
# Warmup Iteration   5: 6874.914 ±(99.9%) 593.226 ns/op
Iteration   1: 6777.847 ±(99.9%) 583.406 ns/op
Iteration   2: 6768.100 ±(99.9%) 427.599 ns/op
Iteration   3: 6749.285 ±(99.9%) 402.422 ns/op
Iteration   4: 6625.956 ±(99.9%) 227.038 ns/op
Iteration   5: 6766.392 ±(99.9%) 414.506 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.locks.LocksBenchmark.reentrant_read_write_lock":
  6607.370 ±(99.9%) 154.777 ns/op [Average]
  (min, avg, max) = (6226.865, 6607.370, 6777.847), stdev = 144.779
  CI (99.9%): [6452.593, 6762.147] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.locks.LocksBenchmark.semaphore

# Run progress: 71.43% complete, ETA 00:10:01
# Fork: 1 of 3
# Warmup Iteration   1: 578.904 ±(99.9%) 652.964 ns/op
# Warmup Iteration   2: 586.532 ±(99.9%) 735.653 ns/op
# Warmup Iteration   3: 609.641 ±(99.9%) 716.477 ns/op
# Warmup Iteration   4: 606.777 ±(99.9%) 394.014 ns/op
# Warmup Iteration   5: 619.244 ±(99.9%) 695.138 ns/op
Iteration   1: 624.520 ±(99.9%) 737.374 ns/op
Iteration   2: 619.820 ±(99.9%) 683.400 ns/op
Iteration   3: 626.441 ±(99.9%) 714.674 ns/op
Iteration   4: 632.133 ±(99.9%) 734.345 ns/op
Iteration   5: 630.817 ±(99.9%) 727.294 ns/op

# Run progress: 76.19% complete, ETA 00:08:21
# Fork: 2 of 3
# Warmup Iteration   1: 645.681 ±(99.9%) 369.692 ns/op
# Warmup Iteration   2: 648.939 ±(99.9%) 465.422 ns/op
# Warmup Iteration   3: 648.080 ±(99.9%) 454.626 ns/op
# Warmup Iteration   4: 646.011 ±(99.9%) 470.473 ns/op
# Warmup Iteration   5: 650.402 ±(99.9%) 449.885 ns/op
Iteration   1: 652.115 ±(99.9%) 466.508 ns/op
Iteration   2: 654.584 ±(99.9%) 454.676 ns/op
Iteration   3: 650.960 ±(99.9%) 475.072 ns/op
Iteration   4: 652.752 ±(99.9%) 463.281 ns/op
Iteration   5: 653.304 ±(99.9%) 472.353 ns/op

# Run progress: 80.95% complete, ETA 00:06:41
# Fork: 3 of 3
# Warmup Iteration   1: 659.711 ±(99.9%) 162.566 ns/op
# Warmup Iteration   2: 663.662 ±(99.9%) 181.566 ns/op
# Warmup Iteration   3: 667.772 ±(99.9%) 158.012 ns/op
# Warmup Iteration   4: 665.831 ±(99.9%) 125.216 ns/op
# Warmup Iteration   5: 666.231 ±(99.9%) 174.878 ns/op
Iteration   1: 664.560 ±(99.9%) 166.219 ns/op
Iteration   2: 665.845 ±(99.9%) 170.118 ns/op
Iteration   3: 666.852 ±(99.9%) 161.527 ns/op
Iteration   4: 668.711 ±(99.9%) 150.501 ns/op
Iteration   5: 668.835 ±(99.9%) 156.698 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.locks.LocksBenchmark.semaphore":
  648.817 ±(99.9%) 18.688 ns/op [Average]
  (min, avg, max) = (619.820, 648.817, 668.835), stdev = 17.481
  CI (99.9%): [630.129, 667.504] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 4 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.locks.LocksBenchmark.synchronized

# Run progress: 85.71% complete, ETA 00:05:00
# Fork: 1 of 3
# Warmup Iteration   1: 364.550 ±(99.9%) 135.141 ns/op
# Warmup Iteration   2: 363.472 ±(99.9%) 101.268 ns/op
# Warmup Iteration   3: 365.356 ±(99.9%) 126.033 ns/op
# Warmup Iteration   4: 372.044 ±(99.9%) 74.832 ns/op
# Warmup Iteration   5: 348.025 ±(99.9%) 55.560 ns/op
Iteration   1: 343.524 ±(99.9%) 145.237 ns/op
Iteration   2: 346.849 ±(99.9%) 124.596 ns/op
Iteration   3: 340.479 ±(99.9%) 23.867 ns/op
Iteration   4: 347.174 ±(99.9%) 156.260 ns/op
Iteration   5: 343.817 ±(99.9%) 132.388 ns/op

# Run progress: 90.48% complete, ETA 00:03:20
# Fork: 2 of 3
# Warmup Iteration   1: 355.913 ±(99.9%) 121.214 ns/op
# Warmup Iteration   2: 351.402 ±(99.9%) 113.928 ns/op
# Warmup Iteration   3: 370.573 ±(99.9%) 130.029 ns/op
# Warmup Iteration   4: 361.346 ±(99.9%) 195.560 ns/op
# Warmup Iteration   5: 367.970 ±(99.9%) 76.264 ns/op
Iteration   1: 366.264 ±(99.9%) 17.725 ns/op
Iteration   2: 373.316 ±(99.9%) 217.188 ns/op
Iteration   3: 366.248 ±(99.9%) 43.941 ns/op
Iteration   4: 368.862 ±(99.9%) 27.510 ns/op
Iteration   5: 375.235 ±(99.9%) 135.168 ns/op

# Run progress: 95.24% complete, ETA 00:01:40
# Fork: 3 of 3
# Warmup Iteration   1: 352.326 ±(99.9%) 113.029 ns/op
# Warmup Iteration   2: 331.712 ±(99.9%) 172.661 ns/op
# Warmup Iteration   3: 338.929 ±(99.9%) 120.830 ns/op
# Warmup Iteration   4: 335.804 ±(99.9%) 123.434 ns/op
# Warmup Iteration   5: 318.469 ±(99.9%) 217.551 ns/op
Iteration   1: 323.935 ±(99.9%) 119.742 ns/op
Iteration   2: 317.316 ±(99.9%) 111.206 ns/op
Iteration   3: 325.546 ±(99.9%) 119.004 ns/op
Iteration   4: 316.817 ±(99.9%) 54.937 ns/op
Iteration   5: 316.236 ±(99.9%) 76.789 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.locks.LocksBenchmark.synchronized":
  344.775 ±(99.9%) 22.912 ns/op [Average]
  (min, avg, max) = (316.236, 344.775, 375.235), stdev = 21.432
  CI (99.9%): [321.862, 367.687] (assumes normal distribution)


# Run complete. Total time: 00:35:05

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      Mode  Cnt      Score      Error  Units
LocksBenchmark.fair_reentrant_lock             avgt   15  44573.393 ±  581.146  ns/op
LocksBenchmark.fair_reentrant_read_write_lock  avgt   15  88460.503 ± 1909.852  ns/op
LocksBenchmark.fair_semaphore                  avgt   15    708.648 ±   13.117  ns/op
LocksBenchmark.reentrant_lock                  avgt   15    571.524 ±   14.907  ns/op
LocksBenchmark.reentrant_read_write_lock       avgt   15   6607.370 ±  154.777  ns/op
LocksBenchmark.semaphore                       avgt   15    648.817 ±   18.688  ns/op
LocksBenchmark.synchronized                    avgt   15    344.775 ±   22.912  ns/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_c1_c2_jit/LocksBenchmark.json
Running java  -jar benchmarks/target/benchmarks.jar .*CounterBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_c1_c2_jit/CounterBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 8 threads (1 group; 4x "get", 4x "increment" in each group), will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.CounterBenchmark.read_write_counter
# Parameters: (counterType = LAC)

# Run progress: 0.00% complete, ETA 00:35:00
# Fork: 1 of 3
# Warmup Iteration   1: 0.103 ops/ns
# Warmup Iteration   2: 0.101 ops/ns
# Warmup Iteration   3: 0.103 ops/ns
# Warmup Iteration   4: 0.104 ops/ns
# Warmup Iteration   5: 0.103 ops/ns
Iteration   1: 0.108 ops/ns
                 get:       0.030 ops/ns
                 increment: 0.077 ops/ns

Iteration   2: 0.106 ops/ns
                 get:       0.032 ops/ns
                 increment: 0.074 ops/ns

Iteration   3: 0.100 ops/ns
                 get:       0.029 ops/ns
                 increment: 0.070 ops/ns

Iteration   4: 0.104 ops/ns
                 get:       0.026 ops/ns
                 increment: 0.078 ops/ns

Iteration   5: 0.102 ops/ns
                 get:       0.030 ops/ns
                 increment: 0.073 ops/ns


# Run progress: 4.76% complete, ETA 00:33:26
# Fork: 2 of 3
# Warmup Iteration   1: 0.106 ops/ns
# Warmup Iteration   2: 0.104 ops/ns
# Warmup Iteration   3: 0.106 ops/ns
# Warmup Iteration   4: 0.098 ops/ns
# Warmup Iteration   5: 0.105 ops/ns
Iteration   1: 0.104 ops/ns
                 get:       0.031 ops/ns
                 increment: 0.073 ops/ns

Iteration   2: 0.100 ops/ns
                 get:       0.030 ops/ns
                 increment: 0.070 ops/ns

Iteration   3: 0.100 ops/ns
                 get:       0.031 ops/ns
                 increment: 0.068 ops/ns

Iteration   4: 0.105 ops/ns
                 get:       0.031 ops/ns
                 increment: 0.074 ops/ns

Iteration   5: 0.105 ops/ns
                 get:       0.034 ops/ns
                 increment: 0.072 ops/ns


# Run progress: 9.52% complete, ETA 00:31:46
# Fork: 3 of 3
# Warmup Iteration   1: 0.103 ops/ns
# Warmup Iteration   2: 0.108 ops/ns
# Warmup Iteration   3: 0.107 ops/ns
# Warmup Iteration   4: 0.107 ops/ns
# Warmup Iteration   5: 0.106 ops/ns
Iteration   1: 0.104 ops/ns
                 get:       0.030 ops/ns
                 increment: 0.073 ops/ns

Iteration   2: 0.098 ops/ns
                 get:       0.030 ops/ns
                 increment: 0.068 ops/ns

Iteration   3: 0.105 ops/ns
                 get:       0.026 ops/ns
                 increment: 0.079 ops/ns

Iteration   4: 0.106 ops/ns
                 get:       0.027 ops/ns
                 increment: 0.079 ops/ns

Iteration   5: 0.102 ops/ns
                 get:       0.033 ops/ns
                 increment: 0.069 ops/ns



Result "com.ionutbalosin.jvm.jit.benchmark.CounterBenchmark.read_write_counter":
  0.103 ±(99.9%) 0.003 ops/ns [Average]
  (min, avg, max) = (0.098, 0.103, 0.108), stdev = 0.003
  CI (99.9%): [0.100, 0.106] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.CounterBenchmark.read_write_counter:get":
  0.030 ±(99.9%) 0.002 ops/ns [Average]
  (min, avg, max) = (0.026, 0.030, 0.034), stdev = 0.002
  CI (99.9%): [0.028, 0.033] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.CounterBenchmark.read_write_counter:increment":
  0.073 ±(99.9%) 0.004 ops/ns [Average]
  (min, avg, max) = (0.068, 0.073, 0.079), stdev = 0.004
  CI (99.9%): [0.069, 0.077] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 8 threads (1 group; 4x "get", 4x "increment" in each group), will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.CounterBenchmark.read_write_counter
# Parameters: (counterType = ALC)

# Run progress: 14.29% complete, ETA 00:30:05
# Fork: 1 of 3
# Warmup Iteration   1: 0.098 ops/ns
# Warmup Iteration   2: 0.087 ops/ns
# Warmup Iteration   3: 0.092 ops/ns
# Warmup Iteration   4: 0.114 ops/ns
# Warmup Iteration   5: 0.072 ops/ns
Iteration   1: 0.101 ops/ns
                 get:       0.059 ops/ns
                 increment: 0.042 ops/ns

Iteration   2: 0.108 ops/ns
                 get:       0.078 ops/ns
                 increment: 0.030 ops/ns

Iteration   3: 0.069 ops/ns
                 get:       0.027 ops/ns
                 increment: 0.042 ops/ns

Iteration   4: 0.105 ops/ns
                 get:       0.074 ops/ns
                 increment: 0.030 ops/ns

Iteration   5: 0.089 ops/ns
                 get:       0.047 ops/ns
                 increment: 0.041 ops/ns


# Run progress: 19.05% complete, ETA 00:28:24
# Fork: 2 of 3
# Warmup Iteration   1: 0.106 ops/ns
# Warmup Iteration   2: 0.109 ops/ns
# Warmup Iteration   3: 0.107 ops/ns
# Warmup Iteration   4: 0.114 ops/ns
# Warmup Iteration   5: 0.102 ops/ns
Iteration   1: 0.094 ops/ns
                 get:       0.046 ops/ns
                 increment: 0.048 ops/ns

Iteration   2: 0.072 ops/ns
                 get:       0.026 ops/ns
                 increment: 0.046 ops/ns

Iteration   3: 0.115 ops/ns
                 get:       0.077 ops/ns
                 increment: 0.038 ops/ns

Iteration   4: 0.067 ops/ns
                 get:       0.022 ops/ns
                 increment: 0.046 ops/ns

Iteration   5: 0.108 ops/ns
                 get:       0.062 ops/ns
                 increment: 0.045 ops/ns


# Run progress: 23.81% complete, ETA 00:26:44
# Fork: 3 of 3
# Warmup Iteration   1: 0.080 ops/ns
# Warmup Iteration   2: 0.091 ops/ns
# Warmup Iteration   3: 0.134 ops/ns
# Warmup Iteration   4: 0.100 ops/ns
# Warmup Iteration   5: 0.099 ops/ns
Iteration   1: 0.131 ops/ns
                 get:       0.104 ops/ns
                 increment: 0.027 ops/ns

Iteration   2: 0.071 ops/ns
                 get:       0.035 ops/ns
                 increment: 0.036 ops/ns

Iteration   3: 0.090 ops/ns
                 get:       0.057 ops/ns
                 increment: 0.033 ops/ns

Iteration   4: 0.095 ops/ns
                 get:       0.060 ops/ns
                 increment: 0.034 ops/ns

Iteration   5: 0.100 ops/ns
                 get:       0.070 ops/ns
                 increment: 0.030 ops/ns



Result "com.ionutbalosin.jvm.jit.benchmark.CounterBenchmark.read_write_counter":
  0.094 ±(99.9%) 0.020 ops/ns [Average]
  (min, avg, max) = (0.067, 0.094, 0.131), stdev = 0.019
  CI (99.9%): [0.075, 0.114] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.CounterBenchmark.read_write_counter:get":
  0.056 ±(99.9%) 0.025 ops/ns [Average]
  (min, avg, max) = (0.022, 0.056, 0.104), stdev = 0.023
  CI (99.9%): [0.032, 0.081] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.CounterBenchmark.read_write_counter:increment":
  0.038 ±(99.9%) 0.007 ops/ns [Average]
  (min, avg, max) = (0.027, 0.038, 0.048), stdev = 0.007
  CI (99.9%): [0.031, 0.045] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 8 threads (1 group; 4x "get", 4x "increment" in each group), will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.CounterBenchmark.read_write_counter
# Parameters: (counterType = SC)

# Run progress: 28.57% complete, ETA 00:25:04
# Fork: 1 of 3
# Warmup Iteration   1: 0.270 ops/ns
# Warmup Iteration   2: 0.311 ops/ns
# Warmup Iteration   3: 0.348 ops/ns
# Warmup Iteration   4: 0.370 ops/ns
# Warmup Iteration   5: 0.336 ops/ns
Iteration   1: 0.385 ops/ns
                 get:       0.376 ops/ns
                 increment: 0.009 ops/ns

Iteration   2: 0.343 ops/ns
                 get:       0.333 ops/ns
                 increment: 0.010 ops/ns

Iteration   3: 0.324 ops/ns
                 get:       0.314 ops/ns
                 increment: 0.010 ops/ns

Iteration   4: 0.352 ops/ns
                 get:       0.342 ops/ns
                 increment: 0.010 ops/ns

Iteration   5: 0.335 ops/ns
                 get:       0.326 ops/ns
                 increment: 0.009 ops/ns


# Run progress: 33.33% complete, ETA 00:23:24
# Fork: 2 of 3
# Warmup Iteration   1: 0.303 ops/ns
# Warmup Iteration   2: 0.307 ops/ns
# Warmup Iteration   3: 0.375 ops/ns
# Warmup Iteration   4: 0.328 ops/ns
# Warmup Iteration   5: 0.374 ops/ns
Iteration   1: 0.380 ops/ns
                 get:       0.370 ops/ns
                 increment: 0.009 ops/ns

Iteration   2: 0.318 ops/ns
                 get:       0.308 ops/ns
                 increment: 0.010 ops/ns

Iteration   3: 0.354 ops/ns
                 get:       0.344 ops/ns
                 increment: 0.010 ops/ns

Iteration   4: 0.340 ops/ns
                 get:       0.330 ops/ns
                 increment: 0.010 ops/ns

Iteration   5: 0.377 ops/ns
                 get:       0.367 ops/ns
                 increment: 0.010 ops/ns


# Run progress: 38.10% complete, ETA 00:21:43
# Fork: 3 of 3
# Warmup Iteration   1: 0.310 ops/ns
# Warmup Iteration   2: 0.290 ops/ns
# Warmup Iteration   3: 0.323 ops/ns
# Warmup Iteration   4: 0.387 ops/ns
# Warmup Iteration   5: 0.350 ops/ns
Iteration   1: 0.362 ops/ns
                 get:       0.353 ops/ns
                 increment: 0.009 ops/ns

Iteration   2: 0.357 ops/ns
                 get:       0.347 ops/ns
                 increment: 0.010 ops/ns

Iteration   3: 0.352 ops/ns
                 get:       0.342 ops/ns
                 increment: 0.010 ops/ns

Iteration   4: 0.375 ops/ns
                 get:       0.366 ops/ns
                 increment: 0.009 ops/ns

Iteration   5: 0.361 ops/ns
                 get:       0.352 ops/ns
                 increment: 0.009 ops/ns



Result "com.ionutbalosin.jvm.jit.benchmark.CounterBenchmark.read_write_counter":
  0.354 ±(99.9%) 0.021 ops/ns [Average]
  (min, avg, max) = (0.318, 0.354, 0.385), stdev = 0.020
  CI (99.9%): [0.333, 0.376] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.CounterBenchmark.read_write_counter:get":
  0.345 ±(99.9%) 0.022 ops/ns [Average]
  (min, avg, max) = (0.308, 0.345, 0.376), stdev = 0.020
  CI (99.9%): [0.323, 0.366] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.CounterBenchmark.read_write_counter:increment":
  0.010 ±(99.9%) 0.001 ops/ns [Average]
  (min, avg, max) = (0.009, 0.010, 0.010), stdev = 0.001
  CI (99.9%): [0.009, 0.010] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 8 threads (1 group; 4x "get", 4x "increment" in each group), will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.CounterBenchmark.read_write_counter
# Parameters: (counterType = VC)

# Run progress: 42.86% complete, ETA 00:20:03
# Fork: 1 of 3
# Warmup Iteration   1: 0.128 ops/ns
# Warmup Iteration   2: 0.132 ops/ns
# Warmup Iteration   3: 0.154 ops/ns
# Warmup Iteration   4: 0.124 ops/ns
# Warmup Iteration   5: 0.115 ops/ns
Iteration   1: 0.112 ops/ns
                 get:       0.082 ops/ns
                 increment: 0.030 ops/ns

Iteration   2: 0.112 ops/ns
                 get:       0.082 ops/ns
                 increment: 0.030 ops/ns

Iteration   3: 0.126 ops/ns
                 get:       0.093 ops/ns
                 increment: 0.033 ops/ns

Iteration   4: 0.143 ops/ns
                 get:       0.111 ops/ns
                 increment: 0.033 ops/ns

Iteration   5: 0.154 ops/ns
                 get:       0.114 ops/ns
                 increment: 0.041 ops/ns


# Run progress: 47.62% complete, ETA 00:18:23
# Fork: 2 of 3
# Warmup Iteration   1: 0.106 ops/ns
# Warmup Iteration   2: 0.098 ops/ns
# Warmup Iteration   3: 0.133 ops/ns
# Warmup Iteration   4: 0.111 ops/ns
# Warmup Iteration   5: 0.138 ops/ns
Iteration   1: 0.110 ops/ns
                 get:       0.081 ops/ns
                 increment: 0.030 ops/ns

Iteration   2: 0.137 ops/ns
                 get:       0.103 ops/ns
                 increment: 0.034 ops/ns

Iteration   3: 0.137 ops/ns
                 get:       0.104 ops/ns
                 increment: 0.033 ops/ns

Iteration   4: 0.152 ops/ns
                 get:       0.120 ops/ns
                 increment: 0.032 ops/ns

Iteration   5: 0.148 ops/ns
                 get:       0.116 ops/ns
                 increment: 0.032 ops/ns


# Run progress: 52.38% complete, ETA 00:16:42
# Fork: 3 of 3
# Warmup Iteration   1: 0.124 ops/ns
# Warmup Iteration   2: 0.139 ops/ns
# Warmup Iteration   3: 0.111 ops/ns
# Warmup Iteration   4: 0.138 ops/ns
# Warmup Iteration   5: 0.183 ops/ns
Iteration   1: 0.114 ops/ns
                 get:       0.083 ops/ns
                 increment: 0.030 ops/ns

Iteration   2: 0.130 ops/ns
                 get:       0.096 ops/ns
                 increment: 0.034 ops/ns

Iteration   3: 0.111 ops/ns
                 get:       0.081 ops/ns
                 increment: 0.030 ops/ns

Iteration   4: 0.110 ops/ns
                 get:       0.080 ops/ns
                 increment: 0.030 ops/ns

Iteration   5: 0.133 ops/ns
                 get:       0.100 ops/ns
                 increment: 0.033 ops/ns



Result "com.ionutbalosin.jvm.jit.benchmark.CounterBenchmark.read_write_counter":
  0.129 ±(99.9%) 0.017 ops/ns [Average]
  (min, avg, max) = (0.110, 0.129, 0.154), stdev = 0.016
  CI (99.9%): [0.111, 0.146] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.CounterBenchmark.read_write_counter:get":
  0.096 ±(99.9%) 0.015 ops/ns [Average]
  (min, avg, max) = (0.080, 0.096, 0.120), stdev = 0.014
  CI (99.9%): [0.081, 0.112] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.CounterBenchmark.read_write_counter:increment":
  0.032 ±(99.9%) 0.003 ops/ns [Average]
  (min, avg, max) = (0.030, 0.032, 0.041), stdev = 0.003
  CI (99.9%): [0.029, 0.035] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 8 threads (1 group; 4x "get", 4x "increment" in each group), will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.CounterBenchmark.read_write_counter
# Parameters: (counterType = OSLC)

# Run progress: 57.14% complete, ETA 00:15:02
# Fork: 1 of 3
# Warmup Iteration   1: 0.034 ops/ns
# Warmup Iteration   2: 0.030 ops/ns
# Warmup Iteration   3: 0.035 ops/ns
# Warmup Iteration   4: 0.036 ops/ns
# Warmup Iteration   5: 0.034 ops/ns
Iteration   1: 0.035 ops/ns
                 get:       0.024 ops/ns
                 increment: 0.010 ops/ns

Iteration   2: 0.036 ops/ns
                 get:       0.026 ops/ns
                 increment: 0.010 ops/ns

Iteration   3: 0.033 ops/ns
                 get:       0.023 ops/ns
                 increment: 0.010 ops/ns

Iteration   4: 0.031 ops/ns
                 get:       0.021 ops/ns
                 increment: 0.010 ops/ns

Iteration   5: 0.026 ops/ns
                 get:       0.017 ops/ns
                 increment: 0.009 ops/ns


# Run progress: 61.90% complete, ETA 00:13:22
# Fork: 2 of 3
# Warmup Iteration   1: 0.030 ops/ns
# Warmup Iteration   2: 0.035 ops/ns
# Warmup Iteration   3: 0.036 ops/ns
# Warmup Iteration   4: 0.040 ops/ns
# Warmup Iteration   5: 0.041 ops/ns
Iteration   1: 0.040 ops/ns
                 get:       0.031 ops/ns
                 increment: 0.009 ops/ns

Iteration   2: 0.038 ops/ns
                 get:       0.029 ops/ns
                 increment: 0.009 ops/ns

Iteration   3: 0.029 ops/ns
                 get:       0.021 ops/ns
                 increment: 0.008 ops/ns

Iteration   4: 0.029 ops/ns
                 get:       0.022 ops/ns
                 increment: 0.008 ops/ns

Iteration   5: 0.029 ops/ns
                 get:       0.021 ops/ns
                 increment: 0.008 ops/ns


# Run progress: 66.67% complete, ETA 00:11:42
# Fork: 3 of 3
# Warmup Iteration   1: 0.028 ops/ns
# Warmup Iteration   2: 0.030 ops/ns
# Warmup Iteration   3: 0.029 ops/ns
# Warmup Iteration   4: 0.031 ops/ns
# Warmup Iteration   5: 0.037 ops/ns
Iteration   1: 0.032 ops/ns
                 get:       0.023 ops/ns
                 increment: 0.008 ops/ns

Iteration   2: 0.031 ops/ns
                 get:       0.023 ops/ns
                 increment: 0.009 ops/ns

Iteration   3: 0.030 ops/ns
                 get:       0.021 ops/ns
                 increment: 0.009 ops/ns

Iteration   4: 0.031 ops/ns
                 get:       0.023 ops/ns
                 increment: 0.009 ops/ns

Iteration   5: 0.031 ops/ns
                 get:       0.022 ops/ns
                 increment: 0.009 ops/ns



Result "com.ionutbalosin.jvm.jit.benchmark.CounterBenchmark.read_write_counter":
  0.032 ±(99.9%) 0.004 ops/ns [Average]
  (min, avg, max) = (0.026, 0.032, 0.040), stdev = 0.004
  CI (99.9%): [0.028, 0.036] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.CounterBenchmark.read_write_counter:get":
  0.023 ±(99.9%) 0.004 ops/ns [Average]
  (min, avg, max) = (0.017, 0.023, 0.031), stdev = 0.003
  CI (99.9%): [0.019, 0.027] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.CounterBenchmark.read_write_counter:increment":
  0.009 ±(99.9%) 0.001 ops/ns [Average]
  (min, avg, max) = (0.008, 0.009, 0.010), stdev = 0.001
  CI (99.9%): [0.008, 0.010] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 8 threads (1 group; 4x "get", 4x "increment" in each group), will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.CounterBenchmark.read_write_counter
# Parameters: (counterType = RLC)

# Run progress: 71.43% complete, ETA 00:10:01
# Fork: 1 of 3
# Warmup Iteration   1: 0.012 ops/ns
# Warmup Iteration   2: 0.013 ops/ns
# Warmup Iteration   3: 0.013 ops/ns
# Warmup Iteration   4: 0.013 ops/ns
# Warmup Iteration   5: 0.013 ops/ns
Iteration   1: 0.013 ops/ns
                 get:       0.006 ops/ns
                 increment: 0.008 ops/ns

Iteration   2: 0.013 ops/ns
                 get:       0.005 ops/ns
                 increment: 0.007 ops/ns

Iteration   3: 0.013 ops/ns
                 get:       0.005 ops/ns
                 increment: 0.008 ops/ns

Iteration   4: 0.013 ops/ns
                 get:       0.006 ops/ns
                 increment: 0.008 ops/ns

Iteration   5: 0.013 ops/ns
                 get:       0.006 ops/ns
                 increment: 0.008 ops/ns


# Run progress: 76.19% complete, ETA 00:08:21
# Fork: 2 of 3
# Warmup Iteration   1: 0.013 ops/ns
# Warmup Iteration   2: 0.013 ops/ns
# Warmup Iteration   3: 0.013 ops/ns
# Warmup Iteration   4: 0.013 ops/ns
# Warmup Iteration   5: 0.013 ops/ns
Iteration   1: 0.013 ops/ns
                 get:       0.006 ops/ns
                 increment: 0.008 ops/ns

Iteration   2: 0.012 ops/ns
                 get:       0.005 ops/ns
                 increment: 0.007 ops/ns

Iteration   3: 0.012 ops/ns
                 get:       0.005 ops/ns
                 increment: 0.007 ops/ns

Iteration   4: 0.012 ops/ns
                 get:       0.005 ops/ns
                 increment: 0.007 ops/ns

Iteration   5: 0.012 ops/ns
                 get:       0.005 ops/ns
                 increment: 0.007 ops/ns


# Run progress: 80.95% complete, ETA 00:06:41
# Fork: 3 of 3
# Warmup Iteration   1: 0.011 ops/ns
# Warmup Iteration   2: 0.011 ops/ns
# Warmup Iteration   3: 0.011 ops/ns
# Warmup Iteration   4: 0.011 ops/ns
# Warmup Iteration   5: 0.011 ops/ns
Iteration   1: 0.011 ops/ns
                 get:       0.005 ops/ns
                 increment: 0.006 ops/ns

Iteration   2: 0.011 ops/ns
                 get:       0.005 ops/ns
                 increment: 0.006 ops/ns

Iteration   3: 0.013 ops/ns
                 get:       0.006 ops/ns
                 increment: 0.008 ops/ns

Iteration   4: 0.013 ops/ns
                 get:       0.006 ops/ns
                 increment: 0.008 ops/ns

Iteration   5: 0.013 ops/ns
                 get:       0.006 ops/ns
                 increment: 0.008 ops/ns



Result "com.ionutbalosin.jvm.jit.benchmark.CounterBenchmark.read_write_counter":
  0.013 ±(99.9%) 0.001 ops/ns [Average]
  (min, avg, max) = (0.011, 0.013, 0.013), stdev = 0.001
  CI (99.9%): [0.012, 0.013] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.CounterBenchmark.read_write_counter:get":
  0.005 ±(99.9%) 0.001 ops/ns [Average]
  (min, avg, max) = (0.005, 0.005, 0.006), stdev = 0.001
  CI (99.9%): [0.005, 0.006] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.CounterBenchmark.read_write_counter:increment":
  0.007 ±(99.9%) 0.001 ops/ns [Average]
  (min, avg, max) = (0.006, 0.007, 0.008), stdev = 0.001
  CI (99.9%): [0.007, 0.008] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 8 threads (1 group; 4x "get", 4x "increment" in each group), will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.CounterBenchmark.read_write_counter
# Parameters: (counterType = CASC)

# Run progress: 85.71% complete, ETA 00:05:00
# Fork: 1 of 3
# Warmup Iteration   1: 0.100 ops/ns
# Warmup Iteration   2: 0.100 ops/ns
# Warmup Iteration   3: 0.106 ops/ns
# Warmup Iteration   4: 0.105 ops/ns
# Warmup Iteration   5: 0.121 ops/ns
Iteration   1: 0.106 ops/ns
                 get:       0.097 ops/ns
                 increment: 0.009 ops/ns

Iteration   2: 0.111 ops/ns
                 get:       0.102 ops/ns
                 increment: 0.009 ops/ns

Iteration   3: 0.094 ops/ns
                 get:       0.085 ops/ns
                 increment: 0.009 ops/ns

Iteration   4: 0.104 ops/ns
                 get:       0.094 ops/ns
                 increment: 0.009 ops/ns

Iteration   5: 0.093 ops/ns
                 get:       0.085 ops/ns
                 increment: 0.009 ops/ns


# Run progress: 90.48% complete, ETA 00:03:20
# Fork: 2 of 3
# Warmup Iteration   1: 0.090 ops/ns
# Warmup Iteration   2: 0.080 ops/ns
# Warmup Iteration   3: 0.107 ops/ns
# Warmup Iteration   4: 0.107 ops/ns
# Warmup Iteration   5: 0.103 ops/ns
Iteration   1: 0.105 ops/ns
                 get:       0.097 ops/ns
                 increment: 0.009 ops/ns

Iteration   2: 0.104 ops/ns
                 get:       0.096 ops/ns
                 increment: 0.009 ops/ns

Iteration   3: 0.105 ops/ns
                 get:       0.096 ops/ns
                 increment: 0.008 ops/ns

Iteration   4: 0.089 ops/ns
                 get:       0.081 ops/ns
                 increment: 0.008 ops/ns

Iteration   5: 0.123 ops/ns
                 get:       0.115 ops/ns
                 increment: 0.008 ops/ns


# Run progress: 95.24% complete, ETA 00:01:40
# Fork: 3 of 3
# Warmup Iteration   1: 0.096 ops/ns
# Warmup Iteration   2: 0.107 ops/ns
# Warmup Iteration   3: 0.094 ops/ns
# Warmup Iteration   4: 0.128 ops/ns
# Warmup Iteration   5: 0.109 ops/ns
Iteration   1: 0.107 ops/ns
                 get:       0.098 ops/ns
                 increment: 0.009 ops/ns

Iteration   2: 0.104 ops/ns
                 get:       0.096 ops/ns
                 increment: 0.008 ops/ns

Iteration   3: 0.142 ops/ns
                 get:       0.134 ops/ns
                 increment: 0.008 ops/ns

Iteration   4: 0.110 ops/ns
                 get:       0.101 ops/ns
                 increment: 0.009 ops/ns

Iteration   5: 0.106 ops/ns
                 get:       0.097 ops/ns
                 increment: 0.009 ops/ns



Result "com.ionutbalosin.jvm.jit.benchmark.CounterBenchmark.read_write_counter":
  0.107 ±(99.9%) 0.013 ops/ns [Average]
  (min, avg, max) = (0.089, 0.107, 0.142), stdev = 0.013
  CI (99.9%): [0.093, 0.120] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.CounterBenchmark.read_write_counter:get":
  0.098 ±(99.9%) 0.013 ops/ns [Average]
  (min, avg, max) = (0.081, 0.098, 0.134), stdev = 0.013
  CI (99.9%): [0.085, 0.112] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.CounterBenchmark.read_write_counter:increment":
  0.009 ±(99.9%) 0.001 ops/ns [Average]
  (min, avg, max) = (0.008, 0.009, 0.009), stdev = 0.001
  CI (99.9%): [0.008, 0.009] (assumes normal distribution)


# Run complete. Total time: 00:35:06

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      (counterType)   Mode  Cnt  Score    Error   Units
CounterBenchmark.read_write_counter                      LAC  thrpt   15  0.103 ±  0.003  ops/ns
CounterBenchmark.read_write_counter:get                  LAC  thrpt   15  0.030 ±  0.002  ops/ns
CounterBenchmark.read_write_counter:increment            LAC  thrpt   15  0.073 ±  0.004  ops/ns
CounterBenchmark.read_write_counter                      ALC  thrpt   15  0.094 ±  0.020  ops/ns
CounterBenchmark.read_write_counter:get                  ALC  thrpt   15  0.056 ±  0.025  ops/ns
CounterBenchmark.read_write_counter:increment            ALC  thrpt   15  0.038 ±  0.007  ops/ns
CounterBenchmark.read_write_counter                       SC  thrpt   15  0.354 ±  0.021  ops/ns
CounterBenchmark.read_write_counter:get                   SC  thrpt   15  0.345 ±  0.022  ops/ns
CounterBenchmark.read_write_counter:increment             SC  thrpt   15  0.010 ±  0.001  ops/ns
CounterBenchmark.read_write_counter                       VC  thrpt   15  0.129 ±  0.017  ops/ns
CounterBenchmark.read_write_counter:get                   VC  thrpt   15  0.096 ±  0.015  ops/ns
CounterBenchmark.read_write_counter:increment             VC  thrpt   15  0.032 ±  0.003  ops/ns
CounterBenchmark.read_write_counter                     OSLC  thrpt   15  0.032 ±  0.004  ops/ns
CounterBenchmark.read_write_counter:get                 OSLC  thrpt   15  0.023 ±  0.004  ops/ns
CounterBenchmark.read_write_counter:increment           OSLC  thrpt   15  0.009 ±  0.001  ops/ns
CounterBenchmark.read_write_counter                      RLC  thrpt   15  0.013 ±  0.001  ops/ns
CounterBenchmark.read_write_counter:get                  RLC  thrpt   15  0.005 ±  0.001  ops/ns
CounterBenchmark.read_write_counter:increment            RLC  thrpt   15  0.007 ±  0.001  ops/ns
CounterBenchmark.read_write_counter                     CASC  thrpt   15  0.107 ±  0.013  ops/ns
CounterBenchmark.read_write_counter:get                 CASC  thrpt   15  0.098 ±  0.013  ops/ns
CounterBenchmark.read_write_counter:increment           CASC  thrpt   15  0.009 ±  0.001  ops/ns

Benchmark result is saved to results/report-openjdk-13/hotspotvm_c1_c2_jit/CounterBenchmark.json
Running java  -jar benchmarks/target/benchmarks.jar .*RecursiveLockBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_c1_c2_jit/RecursiveLockBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.locks.RecursiveLockBenchmark.lock_baseline
# Parameters: (value = 42)

# Run progress: 0.00% complete, ETA 00:10:00
# Fork: 1 of 3
# Warmup Iteration   1: 4.876 ns/op
# Warmup Iteration   2: 4.627 ns/op
# Warmup Iteration   3: 4.143 ns/op
# Warmup Iteration   4: 4.099 ns/op
# Warmup Iteration   5: 4.073 ns/op
Iteration   1: 4.063 ns/op
Iteration   2: 4.047 ns/op
Iteration   3: 4.029 ns/op
Iteration   4: 4.032 ns/op
Iteration   5: 4.016 ns/op

# Run progress: 16.67% complete, ETA 00:08:21
# Fork: 2 of 3
# Warmup Iteration   1: 4.489 ns/op
# Warmup Iteration   2: 4.808 ns/op
# Warmup Iteration   3: 4.334 ns/op
# Warmup Iteration   4: 4.306 ns/op
# Warmup Iteration   5: 4.296 ns/op
Iteration   1: 4.296 ns/op
Iteration   2: 4.265 ns/op
Iteration   3: 4.261 ns/op
Iteration   4: 3.870 ns/op
Iteration   5: 3.897 ns/op

# Run progress: 33.33% complete, ETA 00:06:41
# Fork: 3 of 3
# Warmup Iteration   1: 4.870 ns/op
# Warmup Iteration   2: 4.744 ns/op
# Warmup Iteration   3: 4.282 ns/op
# Warmup Iteration   4: 3.871 ns/op
# Warmup Iteration   5: 3.897 ns/op
Iteration   1: 3.908 ns/op
Iteration   2: 3.924 ns/op
Iteration   3: 3.915 ns/op
Iteration   4: 3.908 ns/op
Iteration   5: 3.920 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.locks.RecursiveLockBenchmark.lock_baseline":
  4.023 ±(99.9%) 0.154 ns/op [Average]
  (min, avg, max) = (3.870, 4.023, 4.296), stdev = 0.144
  CI (99.9%): [3.870, 4.177] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.locks.RecursiveLockBenchmark.lock_recursive_10x
# Parameters: (value = 42)

# Run progress: 50.00% complete, ETA 00:05:00
# Fork: 1 of 3
# Warmup Iteration   1: 263.834 ns/op
# Warmup Iteration   2: 260.302 ns/op
# Warmup Iteration   3: 259.803 ns/op
# Warmup Iteration   4: 232.830 ns/op
# Warmup Iteration   5: 234.321 ns/op
Iteration   1: 234.689 ns/op
Iteration   2: 235.965 ns/op
Iteration   3: 236.675 ns/op
Iteration   4: 236.889 ns/op
Iteration   5: 235.790 ns/op

# Run progress: 66.67% complete, ETA 00:03:20
# Fork: 2 of 3
# Warmup Iteration   1: 243.365 ns/op
# Warmup Iteration   2: 245.991 ns/op
# Warmup Iteration   3: 240.463 ns/op
# Warmup Iteration   4: 239.101 ns/op
# Warmup Iteration   5: 238.913 ns/op
Iteration   1: 238.175 ns/op
Iteration   2: 238.066 ns/op
Iteration   3: 237.288 ns/op
Iteration   4: 236.642 ns/op
Iteration   5: 236.835 ns/op

# Run progress: 83.33% complete, ETA 00:01:40
# Fork: 3 of 3
# Warmup Iteration   1: 219.360 ns/op
# Warmup Iteration   2: 219.616 ns/op
# Warmup Iteration   3: 217.540 ns/op
# Warmup Iteration   4: 217.505 ns/op
# Warmup Iteration   5: 217.996 ns/op
Iteration   1: 217.823 ns/op
Iteration   2: 217.995 ns/op
Iteration   3: 218.399 ns/op
Iteration   4: 218.687 ns/op
Iteration   5: 218.386 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.locks.RecursiveLockBenchmark.lock_recursive_10x":
  230.554 ±(99.9%) 9.665 ns/op [Average]
  (min, avg, max) = (217.823, 230.554, 238.175), stdev = 9.040
  CI (99.9%): [220.889, 240.218] (assumes normal distribution)


# Run complete. Total time: 00:10:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                  (value)  Mode  Cnt    Score   Error  Units
RecursiveLockBenchmark.lock_baseline            42  avgt   15    4.023 ± 0.154  ns/op
RecursiveLockBenchmark.lock_recursive_10x       42  avgt   15  230.554 ± 9.665  ns/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_c1_c2_jit/RecursiveLockBenchmark.json
Running java  -jar benchmarks/target/benchmarks.jar .*ArrayCopyBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_c1_c2_jit/ArrayCopyBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.array_clone
# Parameters: (size = 16384, stride = 256)

# Run progress: 0.00% complete, ETA 02:20:00
# Fork: 1 of 3
# Warmup Iteration   1: 1269.768 ns/op
# Warmup Iteration   2: 1231.040 ns/op
# Warmup Iteration   3: 1232.981 ns/op
# Warmup Iteration   4: 1229.452 ns/op
# Warmup Iteration   5: 1236.678 ns/op
Iteration   1: 1231.661 ns/op
Iteration   2: 1231.444 ns/op
Iteration   3: 1231.656 ns/op
Iteration   4: 1235.357 ns/op
Iteration   5: 1229.927 ns/op

# Run progress: 1.19% complete, ETA 02:18:43
# Fork: 2 of 3
# Warmup Iteration   1: 1269.982 ns/op
# Warmup Iteration   2: 1238.232 ns/op
# Warmup Iteration   3: 1237.190 ns/op
# Warmup Iteration   4: 1235.647 ns/op
# Warmup Iteration   5: 1236.506 ns/op
Iteration   1: 1231.113 ns/op
Iteration   2: 1235.294 ns/op
Iteration   3: 1235.591 ns/op
Iteration   4: 1237.346 ns/op
Iteration   5: 1234.196 ns/op

# Run progress: 2.38% complete, ETA 02:17:02
# Fork: 3 of 3
# Warmup Iteration   1: 1283.887 ns/op
# Warmup Iteration   2: 1239.984 ns/op
# Warmup Iteration   3: 1231.486 ns/op
# Warmup Iteration   4: 1233.875 ns/op
# Warmup Iteration   5: 1236.207 ns/op
Iteration   1: 1228.011 ns/op
Iteration   2: 1234.533 ns/op
Iteration   3: 1234.924 ns/op
Iteration   4: 1228.615 ns/op
Iteration   5: 1235.513 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.array_clone":
  1233.012 ±(99.9%) 3.042 ns/op [Average]
  (min, avg, max) = (1228.011, 1233.012, 1237.346), stdev = 2.845
  CI (99.9%): [1229.970, 1236.054] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.array_clone
# Parameters: (size = 16384, stride = 512)

# Run progress: 3.57% complete, ETA 02:15:21
# Fork: 1 of 3
# Warmup Iteration   1: 1277.324 ns/op
# Warmup Iteration   2: 1235.906 ns/op
# Warmup Iteration   3: 1233.114 ns/op
# Warmup Iteration   4: 1232.540 ns/op
# Warmup Iteration   5: 1233.949 ns/op
Iteration   1: 1230.115 ns/op
Iteration   2: 1234.876 ns/op
Iteration   3: 1231.304 ns/op
Iteration   4: 1233.653 ns/op
Iteration   5: 1234.385 ns/op

# Run progress: 4.76% complete, ETA 02:13:41
# Fork: 2 of 3
# Warmup Iteration   1: 1279.973 ns/op
# Warmup Iteration   2: 1234.113 ns/op
# Warmup Iteration   3: 1234.808 ns/op
# Warmup Iteration   4: 1233.821 ns/op
# Warmup Iteration   5: 1237.745 ns/op
Iteration   1: 1232.330 ns/op
Iteration   2: 1235.150 ns/op
Iteration   3: 1233.133 ns/op
Iteration   4: 1237.639 ns/op
Iteration   5: 1236.198 ns/op

# Run progress: 5.95% complete, ETA 02:12:00
# Fork: 3 of 3
# Warmup Iteration   1: 1277.349 ns/op
# Warmup Iteration   2: 1235.230 ns/op
# Warmup Iteration   3: 1231.954 ns/op
# Warmup Iteration   4: 1234.537 ns/op
# Warmup Iteration   5: 1230.608 ns/op
Iteration   1: 1231.072 ns/op
Iteration   2: 1235.609 ns/op
Iteration   3: 1231.359 ns/op
Iteration   4: 1233.736 ns/op
Iteration   5: 1234.763 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.array_clone":
  1233.688 ±(99.9%) 2.280 ns/op [Average]
  (min, avg, max) = (1230.115, 1233.688, 1237.639), stdev = 2.133
  CI (99.9%): [1231.408, 1235.968] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.array_clone
# Parameters: (size = 32768, stride = 256)

# Run progress: 7.14% complete, ETA 02:10:20
# Fork: 1 of 3
# Warmup Iteration   1: 2656.575 ns/op
# Warmup Iteration   2: 2579.765 ns/op
# Warmup Iteration   3: 2576.434 ns/op
# Warmup Iteration   4: 2570.366 ns/op
# Warmup Iteration   5: 2564.548 ns/op
Iteration   1: 2574.139 ns/op
Iteration   2: 2567.320 ns/op
Iteration   3: 2563.243 ns/op
Iteration   4: 2571.130 ns/op
Iteration   5: 2571.016 ns/op

# Run progress: 8.33% complete, ETA 02:08:40
# Fork: 2 of 3
# Warmup Iteration   1: 2660.801 ns/op
# Warmup Iteration   2: 2581.307 ns/op
# Warmup Iteration   3: 2577.136 ns/op
# Warmup Iteration   4: 2577.168 ns/op
# Warmup Iteration   5: 2559.928 ns/op
Iteration   1: 2575.029 ns/op
Iteration   2: 2575.397 ns/op
Iteration   3: 2592.868 ns/op
Iteration   4: 2578.388 ns/op
Iteration   5: 2586.131 ns/op

# Run progress: 9.52% complete, ETA 02:06:59
# Fork: 3 of 3
# Warmup Iteration   1: 2675.112 ns/op
# Warmup Iteration   2: 2578.137 ns/op
# Warmup Iteration   3: 2586.803 ns/op
# Warmup Iteration   4: 2574.818 ns/op
# Warmup Iteration   5: 2578.247 ns/op
Iteration   1: 2559.853 ns/op
Iteration   2: 2569.342 ns/op
Iteration   3: 2580.315 ns/op
Iteration   4: 2575.220 ns/op
Iteration   5: 2579.588 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.array_clone":
  2574.599 ±(99.9%) 8.999 ns/op [Average]
  (min, avg, max) = (2559.853, 2574.599, 2592.868), stdev = 8.418
  CI (99.9%): [2565.600, 2583.598] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.array_clone
# Parameters: (size = 32768, stride = 512)

# Run progress: 10.71% complete, ETA 02:05:19
# Fork: 1 of 3
# Warmup Iteration   1: 2668.102 ns/op
# Warmup Iteration   2: 2593.705 ns/op
# Warmup Iteration   3: 2574.668 ns/op
# Warmup Iteration   4: 2584.353 ns/op
# Warmup Iteration   5: 2580.933 ns/op
Iteration   1: 2576.769 ns/op
Iteration   2: 2577.405 ns/op
Iteration   3: 2581.287 ns/op
Iteration   4: 2573.775 ns/op
Iteration   5: 2576.358 ns/op

# Run progress: 11.90% complete, ETA 02:03:39
# Fork: 2 of 3
# Warmup Iteration   1: 2643.332 ns/op
# Warmup Iteration   2: 2572.256 ns/op
# Warmup Iteration   3: 2554.064 ns/op
# Warmup Iteration   4: 2558.422 ns/op
# Warmup Iteration   5: 2554.866 ns/op
Iteration   1: 2550.779 ns/op
Iteration   2: 2555.797 ns/op
Iteration   3: 2554.842 ns/op
Iteration   4: 2553.435 ns/op
Iteration   5: 2547.555 ns/op

# Run progress: 13.10% complete, ETA 02:01:58
# Fork: 3 of 3
# Warmup Iteration   1: 2672.022 ns/op
# Warmup Iteration   2: 2596.625 ns/op
# Warmup Iteration   3: 2570.259 ns/op
# Warmup Iteration   4: 2576.371 ns/op
# Warmup Iteration   5: 2572.066 ns/op
Iteration   1: 2581.649 ns/op
Iteration   2: 2580.169 ns/op
Iteration   3: 2585.243 ns/op
Iteration   4: 2574.691 ns/op
Iteration   5: 2577.281 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.array_clone":
  2569.802 ±(99.9%) 14.020 ns/op [Average]
  (min, avg, max) = (2547.555, 2569.802, 2585.243), stdev = 13.114
  CI (99.9%): [2555.782, 2583.822] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.arrays_compare
# Parameters: (size = 16384, stride = 256)

# Run progress: 14.29% complete, ETA 02:00:18
# Fork: 1 of 3
# Warmup Iteration   1: 407.706 ns/op
# Warmup Iteration   2: 394.823 ns/op
# Warmup Iteration   3: 388.084 ns/op
# Warmup Iteration   4: 384.851 ns/op
# Warmup Iteration   5: 383.155 ns/op
Iteration   1: 381.046 ns/op
Iteration   2: 378.887 ns/op
Iteration   3: 377.713 ns/op
Iteration   4: 347.381 ns/op
Iteration   5: 347.880 ns/op

# Run progress: 15.48% complete, ETA 01:58:38
# Fork: 2 of 3
# Warmup Iteration   1: 347.088 ns/op
# Warmup Iteration   2: 346.233 ns/op
# Warmup Iteration   3: 345.583 ns/op
# Warmup Iteration   4: 346.103 ns/op
# Warmup Iteration   5: 346.452 ns/op
Iteration   1: 345.464 ns/op
Iteration   2: 346.250 ns/op
Iteration   3: 346.330 ns/op
Iteration   4: 346.051 ns/op
Iteration   5: 345.925 ns/op

# Run progress: 16.67% complete, ETA 01:56:57
# Fork: 3 of 3
# Warmup Iteration   1: 379.027 ns/op
# Warmup Iteration   2: 346.158 ns/op
# Warmup Iteration   3: 345.685 ns/op
# Warmup Iteration   4: 346.239 ns/op
# Warmup Iteration   5: 346.547 ns/op
Iteration   1: 347.066 ns/op
Iteration   2: 347.475 ns/op
Iteration   3: 347.216 ns/op
Iteration   4: 346.377 ns/op
Iteration   5: 346.768 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.arrays_compare":
  353.189 ±(99.9%) 14.433 ns/op [Average]
  (min, avg, max) = (345.464, 353.189, 381.046), stdev = 13.501
  CI (99.9%): [338.755, 367.622] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.arrays_compare
# Parameters: (size = 16384, stride = 512)

# Run progress: 17.86% complete, ETA 01:55:17
# Fork: 1 of 3
# Warmup Iteration   1: 379.981 ns/op
# Warmup Iteration   2: 377.191 ns/op
# Warmup Iteration   3: 374.036 ns/op
# Warmup Iteration   4: 373.050 ns/op
# Warmup Iteration   5: 372.386 ns/op
Iteration   1: 370.381 ns/op
Iteration   2: 371.071 ns/op
Iteration   3: 371.046 ns/op
Iteration   4: 369.913 ns/op
Iteration   5: 369.808 ns/op

# Run progress: 19.05% complete, ETA 01:53:37
# Fork: 2 of 3
# Warmup Iteration   1: 335.687 ns/op
# Warmup Iteration   2: 336.859 ns/op
# Warmup Iteration   3: 336.578 ns/op
# Warmup Iteration   4: 337.591 ns/op
# Warmup Iteration   5: 338.815 ns/op
Iteration   1: 339.369 ns/op
Iteration   2: 375.674 ns/op
Iteration   3: 373.397 ns/op
Iteration   4: 371.940 ns/op
Iteration   5: 370.369 ns/op

# Run progress: 20.24% complete, ETA 01:51:56
# Fork: 3 of 3
# Warmup Iteration   1: 336.820 ns/op
# Warmup Iteration   2: 337.340 ns/op
# Warmup Iteration   3: 373.753 ns/op
# Warmup Iteration   4: 371.668 ns/op
# Warmup Iteration   5: 339.986 ns/op
Iteration   1: 342.577 ns/op
Iteration   2: 343.961 ns/op
Iteration   3: 344.276 ns/op
Iteration   4: 344.476 ns/op
Iteration   5: 344.831 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.arrays_compare":
  360.206 ±(99.9%) 15.456 ns/op [Average]
  (min, avg, max) = (339.369, 360.206, 375.674), stdev = 14.457
  CI (99.9%): [344.750, 375.662] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.arrays_compare
# Parameters: (size = 32768, stride = 256)

# Run progress: 21.43% complete, ETA 01:50:16
# Fork: 1 of 3
# Warmup Iteration   1: 1071.684 ns/op
# Warmup Iteration   2: 976.625 ns/op
# Warmup Iteration   3: 1082.524 ns/op
# Warmup Iteration   4: 1071.321 ns/op
# Warmup Iteration   5: 1065.595 ns/op
Iteration   1: 1064.455 ns/op
Iteration   2: 1061.126 ns/op
Iteration   3: 1062.644 ns/op
Iteration   4: 1062.203 ns/op
Iteration   5: 1061.071 ns/op

# Run progress: 22.62% complete, ETA 01:48:35
# Fork: 2 of 3
# Warmup Iteration   1: 953.934 ns/op
# Warmup Iteration   2: 962.326 ns/op
# Warmup Iteration   3: 966.256 ns/op
# Warmup Iteration   4: 967.038 ns/op
# Warmup Iteration   5: 967.479 ns/op
Iteration   1: 968.622 ns/op
Iteration   2: 967.567 ns/op
Iteration   3: 968.328 ns/op
Iteration   4: 969.276 ns/op
Iteration   5: 970.483 ns/op

# Run progress: 23.81% complete, ETA 01:46:55
# Fork: 3 of 3
# Warmup Iteration   1: 1081.896 ns/op
# Warmup Iteration   2: 1070.282 ns/op
# Warmup Iteration   3: 1062.979 ns/op
# Warmup Iteration   4: 1057.791 ns/op
# Warmup Iteration   5: 1058.483 ns/op
Iteration   1: 1054.232 ns/op
Iteration   2: 1053.674 ns/op
Iteration   3: 1054.462 ns/op
Iteration   4: 1052.473 ns/op
Iteration   5: 1053.729 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.arrays_compare":
  1028.290 ±(99.9%) 46.680 ns/op [Average]
  (min, avg, max) = (967.567, 1028.290, 1064.455), stdev = 43.665
  CI (99.9%): [981.609, 1074.970] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.arrays_compare
# Parameters: (size = 32768, stride = 512)

# Run progress: 25.00% complete, ETA 01:45:15
# Fork: 1 of 3
# Warmup Iteration   1: 1062.301 ns/op
# Warmup Iteration   2: 952.727 ns/op
# Warmup Iteration   3: 960.625 ns/op
# Warmup Iteration   4: 962.159 ns/op
# Warmup Iteration   5: 964.346 ns/op
Iteration   1: 964.554 ns/op
Iteration   2: 964.918 ns/op
Iteration   3: 966.124 ns/op
Iteration   4: 966.476 ns/op
Iteration   5: 966.762 ns/op

# Run progress: 26.19% complete, ETA 01:43:34
# Fork: 2 of 3
# Warmup Iteration   1: 984.740 ns/op
# Warmup Iteration   2: 982.847 ns/op
# Warmup Iteration   3: 978.209 ns/op
# Warmup Iteration   4: 979.062 ns/op
# Warmup Iteration   5: 1072.652 ns/op
Iteration   1: 1073.985 ns/op
Iteration   2: 1067.900 ns/op
Iteration   3: 1063.255 ns/op
Iteration   4: 1061.438 ns/op
Iteration   5: 1058.010 ns/op

# Run progress: 27.38% complete, ETA 01:41:54
# Fork: 3 of 3
# Warmup Iteration   1: 996.384 ns/op
# Warmup Iteration   2: 1012.471 ns/op
# Warmup Iteration   3: 1018.297 ns/op
# Warmup Iteration   4: 1019.937 ns/op
# Warmup Iteration   5: 1010.876 ns/op
Iteration   1: 1011.327 ns/op
Iteration   2: 1012.630 ns/op
Iteration   3: 1028.920 ns/op
Iteration   4: 1031.001 ns/op
Iteration   5: 1031.701 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.arrays_compare":
  1017.933 ±(99.9%) 45.495 ns/op [Average]
  (min, avg, max) = (964.554, 1017.933, 1073.985), stdev = 42.556
  CI (99.9%): [972.438, 1063.429] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.arrays_copyOf
# Parameters: (size = 16384, stride = 256)

# Run progress: 28.57% complete, ETA 01:40:14
# Fork: 1 of 3
# Warmup Iteration   1: 1983.736 ns/op
# Warmup Iteration   2: 1898.519 ns/op
# Warmup Iteration   3: 1890.659 ns/op
# Warmup Iteration   4: 1897.458 ns/op
# Warmup Iteration   5: 1900.796 ns/op
Iteration   1: 1909.146 ns/op
Iteration   2: 1899.630 ns/op
Iteration   3: 1909.569 ns/op
Iteration   4: 1896.245 ns/op
Iteration   5: 1906.333 ns/op

# Run progress: 29.76% complete, ETA 01:38:34
# Fork: 2 of 3
# Warmup Iteration   1: 1993.561 ns/op
# Warmup Iteration   2: 1899.161 ns/op
# Warmup Iteration   3: 1900.975 ns/op
# Warmup Iteration   4: 1904.976 ns/op
# Warmup Iteration   5: 1904.876 ns/op
Iteration   1: 1902.963 ns/op
Iteration   2: 1913.632 ns/op
Iteration   3: 1907.903 ns/op
Iteration   4: 1901.005 ns/op
Iteration   5: 1912.185 ns/op

# Run progress: 30.95% complete, ETA 01:36:54
# Fork: 3 of 3
# Warmup Iteration   1: 2009.475 ns/op
# Warmup Iteration   2: 1924.536 ns/op
# Warmup Iteration   3: 1905.991 ns/op
# Warmup Iteration   4: 1916.692 ns/op
# Warmup Iteration   5: 1921.634 ns/op
Iteration   1: 1910.610 ns/op
Iteration   2: 1950.664 ns/op
Iteration   3: 1953.879 ns/op
Iteration   4: 1947.065 ns/op
Iteration   5: 1957.483 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.arrays_copyOf":
  1918.554 ±(99.9%) 23.166 ns/op [Average]
  (min, avg, max) = (1896.245, 1918.554, 1957.483), stdev = 21.670
  CI (99.9%): [1895.388, 1941.720] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.arrays_copyOf
# Parameters: (size = 16384, stride = 512)

# Run progress: 32.14% complete, ETA 01:35:13
# Fork: 1 of 3
# Warmup Iteration   1: 1982.989 ns/op
# Warmup Iteration   2: 1876.420 ns/op
# Warmup Iteration   3: 1882.632 ns/op
# Warmup Iteration   4: 1893.491 ns/op
# Warmup Iteration   5: 1886.724 ns/op
Iteration   1: 1878.064 ns/op
Iteration   2: 1882.372 ns/op
Iteration   3: 1890.500 ns/op
Iteration   4: 1884.482 ns/op
Iteration   5: 1889.723 ns/op

# Run progress: 33.33% complete, ETA 01:33:33
# Fork: 2 of 3
# Warmup Iteration   1: 1967.432 ns/op
# Warmup Iteration   2: 1900.487 ns/op
# Warmup Iteration   3: 1864.579 ns/op
# Warmup Iteration   4: 1889.400 ns/op
# Warmup Iteration   5: 1875.654 ns/op
Iteration   1: 1886.321 ns/op
Iteration   2: 1890.154 ns/op
Iteration   3: 1882.650 ns/op
Iteration   4: 1884.412 ns/op
Iteration   5: 1876.599 ns/op

# Run progress: 34.52% complete, ETA 01:31:53
# Fork: 3 of 3
# Warmup Iteration   1: 1968.398 ns/op
# Warmup Iteration   2: 1886.947 ns/op
# Warmup Iteration   3: 1880.829 ns/op
# Warmup Iteration   4: 1881.378 ns/op
# Warmup Iteration   5: 1883.050 ns/op
Iteration   1: 1883.940 ns/op
Iteration   2: 1884.926 ns/op
Iteration   3: 1875.613 ns/op
Iteration   4: 1880.076 ns/op
Iteration   5: 1877.619 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.arrays_copyOf":
  1883.163 ±(99.9%) 5.190 ns/op [Average]
  (min, avg, max) = (1875.613, 1883.163, 1890.500), stdev = 4.855
  CI (99.9%): [1877.973, 1888.353] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.arrays_copyOf
# Parameters: (size = 32768, stride = 256)

# Run progress: 35.71% complete, ETA 01:30:13
# Fork: 1 of 3
# Warmup Iteration   1: 3998.272 ns/op
# Warmup Iteration   2: 3824.778 ns/op
# Warmup Iteration   3: 3786.766 ns/op
# Warmup Iteration   4: 3800.605 ns/op
# Warmup Iteration   5: 3788.298 ns/op
Iteration   1: 3805.454 ns/op
Iteration   2: 3757.868 ns/op
Iteration   3: 3800.531 ns/op
Iteration   4: 3798.049 ns/op
Iteration   5: 3804.639 ns/op

# Run progress: 36.90% complete, ETA 01:28:32
# Fork: 2 of 3
# Warmup Iteration   1: 3985.009 ns/op
# Warmup Iteration   2: 3781.163 ns/op
# Warmup Iteration   3: 3817.700 ns/op
# Warmup Iteration   4: 3823.752 ns/op
# Warmup Iteration   5: 3813.653 ns/op
Iteration   1: 3773.444 ns/op
Iteration   2: 3790.828 ns/op
Iteration   3: 3778.170 ns/op
Iteration   4: 3775.319 ns/op
Iteration   5: 3820.274 ns/op

# Run progress: 38.10% complete, ETA 01:26:52
# Fork: 3 of 3
# Warmup Iteration   1: 3990.485 ns/op
# Warmup Iteration   2: 3780.545 ns/op
# Warmup Iteration   3: 3806.425 ns/op
# Warmup Iteration   4: 3802.816 ns/op
# Warmup Iteration   5: 3812.499 ns/op
Iteration   1: 3812.069 ns/op
Iteration   2: 3807.525 ns/op
Iteration   3: 3813.746 ns/op
Iteration   4: 3779.384 ns/op
Iteration   5: 3815.210 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.arrays_copyOf":
  3795.501 ±(99.9%) 19.919 ns/op [Average]
  (min, avg, max) = (3757.868, 3795.501, 3820.274), stdev = 18.633
  CI (99.9%): [3775.581, 3815.420] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.arrays_copyOf
# Parameters: (size = 32768, stride = 512)

# Run progress: 39.29% complete, ETA 01:25:12
# Fork: 1 of 3
# Warmup Iteration   1: 3923.327 ns/op
# Warmup Iteration   2: 3744.697 ns/op
# Warmup Iteration   3: 3730.190 ns/op
# Warmup Iteration   4: 3744.304 ns/op
# Warmup Iteration   5: 3744.975 ns/op
Iteration   1: 3736.100 ns/op
Iteration   2: 3744.023 ns/op
Iteration   3: 3712.189 ns/op
Iteration   4: 3738.671 ns/op
Iteration   5: 3754.105 ns/op

# Run progress: 40.48% complete, ETA 01:23:32
# Fork: 2 of 3
# Warmup Iteration   1: 3948.028 ns/op
# Warmup Iteration   2: 3716.010 ns/op
# Warmup Iteration   3: 3756.539 ns/op
# Warmup Iteration   4: 3763.115 ns/op
# Warmup Iteration   5: 3755.710 ns/op
Iteration   1: 3759.864 ns/op
Iteration   2: 3749.232 ns/op
Iteration   3: 3750.588 ns/op
Iteration   4: 3772.843 ns/op
Iteration   5: 3753.333 ns/op

# Run progress: 41.67% complete, ETA 01:21:52
# Fork: 3 of 3
# Warmup Iteration   1: 3920.446 ns/op
# Warmup Iteration   2: 3745.082 ns/op
# Warmup Iteration   3: 3761.291 ns/op
# Warmup Iteration   4: 3772.495 ns/op
# Warmup Iteration   5: 3747.406 ns/op
Iteration   1: 3731.028 ns/op
Iteration   2: 3729.725 ns/op
Iteration   3: 3756.570 ns/op
Iteration   4: 3734.680 ns/op
Iteration   5: 3746.817 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.arrays_copyOf":
  3744.651 ±(99.9%) 15.818 ns/op [Average]
  (min, avg, max) = (3712.189, 3744.651, 3772.843), stdev = 14.796
  CI (99.9%): [3728.834, 3760.469] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.arrays_equals
# Parameters: (size = 16384, stride = 256)

# Run progress: 42.86% complete, ETA 01:20:11
# Fork: 1 of 3
# Warmup Iteration   1: 378.463 ns/op
# Warmup Iteration   2: 334.963 ns/op
# Warmup Iteration   3: 328.209 ns/op
# Warmup Iteration   4: 324.733 ns/op
# Warmup Iteration   5: 324.046 ns/op
Iteration   1: 324.665 ns/op
Iteration   2: 323.626 ns/op
Iteration   3: 323.640 ns/op
Iteration   4: 323.195 ns/op
Iteration   5: 322.798 ns/op

# Run progress: 44.05% complete, ETA 01:18:31
# Fork: 2 of 3
# Warmup Iteration   1: 353.062 ns/op
# Warmup Iteration   2: 323.356 ns/op
# Warmup Iteration   3: 319.468 ns/op
# Warmup Iteration   4: 319.123 ns/op
# Warmup Iteration   5: 318.866 ns/op
Iteration   1: 320.047 ns/op
Iteration   2: 319.395 ns/op
Iteration   3: 314.719 ns/op
Iteration   4: 314.290 ns/op
Iteration   5: 314.063 ns/op

# Run progress: 45.24% complete, ETA 01:16:51
# Fork: 3 of 3
# Warmup Iteration   1: 328.654 ns/op
# Warmup Iteration   2: 330.261 ns/op
# Warmup Iteration   3: 324.949 ns/op
# Warmup Iteration   4: 324.266 ns/op
# Warmup Iteration   5: 324.518 ns/op
Iteration   1: 325.248 ns/op
Iteration   2: 322.907 ns/op
Iteration   3: 324.198 ns/op
Iteration   4: 324.147 ns/op
Iteration   5: 324.509 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.arrays_equals":
  321.430 ±(99.9%) 4.265 ns/op [Average]
  (min, avg, max) = (314.063, 321.430, 325.248), stdev = 3.989
  CI (99.9%): [317.165, 325.694] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.arrays_equals
# Parameters: (size = 16384, stride = 512)

# Run progress: 46.43% complete, ETA 01:15:10
# Fork: 1 of 3
# Warmup Iteration   1: 319.715 ns/op
# Warmup Iteration   2: 349.986 ns/op
# Warmup Iteration   3: 342.719 ns/op
# Warmup Iteration   4: 341.172 ns/op
# Warmup Iteration   5: 340.971 ns/op
Iteration   1: 340.615 ns/op
Iteration   2: 339.573 ns/op
Iteration   3: 339.550 ns/op
Iteration   4: 338.713 ns/op
Iteration   5: 338.742 ns/op

# Run progress: 47.62% complete, ETA 01:13:30
# Fork: 2 of 3
# Warmup Iteration   1: 342.472 ns/op
# Warmup Iteration   2: 344.225 ns/op
# Warmup Iteration   3: 339.109 ns/op
# Warmup Iteration   4: 339.286 ns/op
# Warmup Iteration   5: 304.493 ns/op
Iteration   1: 339.690 ns/op
Iteration   2: 311.472 ns/op
Iteration   3: 312.549 ns/op
Iteration   4: 313.018 ns/op
Iteration   5: 313.272 ns/op

# Run progress: 48.81% complete, ETA 01:11:50
# Fork: 3 of 3
# Warmup Iteration   1: 314.634 ns/op
# Warmup Iteration   2: 317.937 ns/op
# Warmup Iteration   3: 313.493 ns/op
# Warmup Iteration   4: 313.354 ns/op
# Warmup Iteration   5: 313.574 ns/op
Iteration   1: 343.651 ns/op
Iteration   2: 341.281 ns/op
Iteration   3: 340.274 ns/op
Iteration   4: 339.080 ns/op
Iteration   5: 338.267 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.arrays_equals":
  332.650 ±(99.9%) 13.470 ns/op [Average]
  (min, avg, max) = (311.472, 332.650, 343.651), stdev = 12.599
  CI (99.9%): [319.180, 346.119] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.arrays_equals
# Parameters: (size = 32768, stride = 256)

# Run progress: 50.00% complete, ETA 01:10:10
# Fork: 1 of 3
# Warmup Iteration   1: 1062.898 ns/op
# Warmup Iteration   2: 960.510 ns/op
# Warmup Iteration   3: 961.093 ns/op
# Warmup Iteration   4: 965.748 ns/op
# Warmup Iteration   5: 967.828 ns/op
Iteration   1: 968.578 ns/op
Iteration   2: 966.734 ns/op
Iteration   3: 967.679 ns/op
Iteration   4: 967.831 ns/op
Iteration   5: 1085.302 ns/op

# Run progress: 51.19% complete, ETA 01:08:29
# Fork: 2 of 3
# Warmup Iteration   1: 1077.754 ns/op
# Warmup Iteration   2: 1068.982 ns/op
# Warmup Iteration   3: 1050.864 ns/op
# Warmup Iteration   4: 1050.693 ns/op
# Warmup Iteration   5: 1047.767 ns/op
Iteration   1: 1047.457 ns/op
Iteration   2: 1047.189 ns/op
Iteration   3: 1044.602 ns/op
Iteration   4: 1045.991 ns/op
Iteration   5: 1045.369 ns/op

# Run progress: 52.38% complete, ETA 01:06:49
# Fork: 3 of 3
# Warmup Iteration   1: 958.101 ns/op
# Warmup Iteration   2: 959.872 ns/op
# Warmup Iteration   3: 1067.655 ns/op
# Warmup Iteration   4: 1059.105 ns/op
# Warmup Iteration   5: 1055.050 ns/op
Iteration   1: 1053.668 ns/op
Iteration   2: 1053.323 ns/op
Iteration   3: 1051.990 ns/op
Iteration   4: 1051.118 ns/op
Iteration   5: 1049.728 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.arrays_equals":
  1029.771 ±(99.9%) 42.676 ns/op [Average]
  (min, avg, max) = (966.734, 1029.771, 1085.302), stdev = 39.919
  CI (99.9%): [987.094, 1072.447] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.arrays_equals
# Parameters: (size = 32768, stride = 512)

# Run progress: 53.57% complete, ETA 01:05:09
# Fork: 1 of 3
# Warmup Iteration   1: 1067.210 ns/op
# Warmup Iteration   2: 1064.884 ns/op
# Warmup Iteration   3: 1055.288 ns/op
# Warmup Iteration   4: 1053.768 ns/op
# Warmup Iteration   5: 1051.175 ns/op
Iteration   1: 1054.229 ns/op
Iteration   2: 951.030 ns/op
Iteration   3: 956.645 ns/op
Iteration   4: 957.988 ns/op
Iteration   5: 961.820 ns/op

# Run progress: 54.76% complete, ETA 01:03:29
# Fork: 2 of 3
# Warmup Iteration   1: 962.385 ns/op
# Warmup Iteration   2: 971.458 ns/op
# Warmup Iteration   3: 960.925 ns/op
# Warmup Iteration   4: 962.914 ns/op
# Warmup Iteration   5: 962.316 ns/op
Iteration   1: 962.189 ns/op
Iteration   2: 961.124 ns/op
Iteration   3: 963.113 ns/op
Iteration   4: 964.886 ns/op
Iteration   5: 965.474 ns/op

# Run progress: 55.95% complete, ETA 01:01:48
# Fork: 3 of 3
# Warmup Iteration   1: 1082.011 ns/op
# Warmup Iteration   2: 1070.875 ns/op
# Warmup Iteration   3: 1051.514 ns/op
# Warmup Iteration   4: 1047.507 ns/op
# Warmup Iteration   5: 1046.854 ns/op
Iteration   1: 1046.725 ns/op
Iteration   2: 1044.710 ns/op
Iteration   3: 1048.271 ns/op
Iteration   4: 1044.538 ns/op
Iteration   5: 1043.847 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.arrays_equals":
  995.106 ±(99.9%) 47.145 ns/op [Average]
  (min, avg, max) = (951.030, 995.106, 1054.229), stdev = 44.100
  CI (99.9%): [947.961, 1042.251] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.arrays_mismatch
# Parameters: (size = 16384, stride = 256)

# Run progress: 57.14% complete, ETA 01:00:08
# Fork: 1 of 3
# Warmup Iteration   1: 335.830 ns/op
# Warmup Iteration   2: 336.140 ns/op
# Warmup Iteration   3: 337.131 ns/op
# Warmup Iteration   4: 337.917 ns/op
# Warmup Iteration   5: 343.948 ns/op
Iteration   1: 345.071 ns/op
Iteration   2: 344.274 ns/op
Iteration   3: 343.100 ns/op
Iteration   4: 342.560 ns/op
Iteration   5: 342.333 ns/op

# Run progress: 58.33% complete, ETA 00:58:28
# Fork: 2 of 3
# Warmup Iteration   1: 377.495 ns/op
# Warmup Iteration   2: 334.716 ns/op
# Warmup Iteration   3: 337.051 ns/op
# Warmup Iteration   4: 338.118 ns/op
# Warmup Iteration   5: 338.566 ns/op
Iteration   1: 337.682 ns/op
Iteration   2: 338.940 ns/op
Iteration   3: 338.996 ns/op
Iteration   4: 339.134 ns/op
Iteration   5: 339.249 ns/op

# Run progress: 59.52% complete, ETA 00:56:48
# Fork: 3 of 3
# Warmup Iteration   1: 376.851 ns/op
# Warmup Iteration   2: 336.286 ns/op
# Warmup Iteration   3: 337.271 ns/op
# Warmup Iteration   4: 337.814 ns/op
# Warmup Iteration   5: 338.230 ns/op
Iteration   1: 337.852 ns/op
Iteration   2: 338.514 ns/op
Iteration   3: 338.481 ns/op
Iteration   4: 338.780 ns/op
Iteration   5: 376.162 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.arrays_mismatch":
  342.742 ±(99.9%) 10.222 ns/op [Average]
  (min, avg, max) = (337.682, 342.742, 376.162), stdev = 9.562
  CI (99.9%): [332.520, 352.964] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.arrays_mismatch
# Parameters: (size = 16384, stride = 512)

# Run progress: 60.71% complete, ETA 00:55:07
# Fork: 1 of 3
# Warmup Iteration   1: 374.251 ns/op
# Warmup Iteration   2: 370.653 ns/op
# Warmup Iteration   3: 369.335 ns/op
# Warmup Iteration   4: 369.346 ns/op
# Warmup Iteration   5: 369.762 ns/op
Iteration   1: 368.304 ns/op
Iteration   2: 369.546 ns/op
Iteration   3: 369.243 ns/op
Iteration   4: 337.432 ns/op
Iteration   5: 338.648 ns/op

# Run progress: 61.90% complete, ETA 00:53:27
# Fork: 2 of 3
# Warmup Iteration   1: 336.872 ns/op
# Warmup Iteration   2: 373.775 ns/op
# Warmup Iteration   3: 370.710 ns/op
# Warmup Iteration   4: 369.749 ns/op
# Warmup Iteration   5: 333.390 ns/op
Iteration   1: 335.347 ns/op
Iteration   2: 337.084 ns/op
Iteration   3: 338.013 ns/op
Iteration   4: 338.001 ns/op
Iteration   5: 338.150 ns/op

# Run progress: 63.10% complete, ETA 00:51:47
# Fork: 3 of 3
# Warmup Iteration   1: 376.588 ns/op
# Warmup Iteration   2: 371.869 ns/op
# Warmup Iteration   3: 370.847 ns/op
# Warmup Iteration   4: 369.969 ns/op
# Warmup Iteration   5: 368.600 ns/op
Iteration   1: 368.371 ns/op
Iteration   2: 368.678 ns/op
Iteration   3: 368.264 ns/op
Iteration   4: 368.697 ns/op
Iteration   5: 368.566 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.arrays_mismatch":
  354.156 ±(99.9%) 17.236 ns/op [Average]
  (min, avg, max) = (335.347, 354.156, 369.546), stdev = 16.122
  CI (99.9%): [336.921, 371.392] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.arrays_mismatch
# Parameters: (size = 32768, stride = 256)

# Run progress: 64.29% complete, ETA 00:50:07
# Fork: 1 of 3
# Warmup Iteration   1: 1051.222 ns/op
# Warmup Iteration   2: 946.854 ns/op
# Warmup Iteration   3: 954.009 ns/op
# Warmup Iteration   4: 956.056 ns/op
# Warmup Iteration   5: 962.948 ns/op
Iteration   1: 965.075 ns/op
Iteration   2: 965.248 ns/op
Iteration   3: 966.564 ns/op
Iteration   4: 967.198 ns/op
Iteration   5: 966.558 ns/op

# Run progress: 65.48% complete, ETA 00:48:26
# Fork: 2 of 3
# Warmup Iteration   1: 1078.436 ns/op
# Warmup Iteration   2: 1064.993 ns/op
# Warmup Iteration   3: 1060.720 ns/op
# Warmup Iteration   4: 1054.443 ns/op
# Warmup Iteration   5: 1049.704 ns/op
Iteration   1: 1051.596 ns/op
Iteration   2: 1051.523 ns/op
Iteration   3: 1050.345 ns/op
Iteration   4: 1048.994 ns/op
Iteration   5: 1049.164 ns/op

# Run progress: 66.67% complete, ETA 00:46:46
# Fork: 3 of 3
# Warmup Iteration   1: 1050.354 ns/op
# Warmup Iteration   2: 1047.715 ns/op
# Warmup Iteration   3: 1046.584 ns/op
# Warmup Iteration   4: 1045.859 ns/op
# Warmup Iteration   5: 1046.125 ns/op
Iteration   1: 1044.696 ns/op
Iteration   2: 1045.529 ns/op
Iteration   3: 1045.479 ns/op
Iteration   4: 1047.597 ns/op
Iteration   5: 1046.996 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.arrays_mismatch":
  1020.837 ±(99.9%) 42.866 ns/op [Average]
  (min, avg, max) = (965.075, 1020.837, 1051.596), stdev = 40.097
  CI (99.9%): [977.971, 1063.704] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.arrays_mismatch
# Parameters: (size = 32768, stride = 512)

# Run progress: 67.86% complete, ETA 00:45:06
# Fork: 1 of 3
# Warmup Iteration   1: 965.589 ns/op
# Warmup Iteration   2: 958.082 ns/op
# Warmup Iteration   3: 964.242 ns/op
# Warmup Iteration   4: 966.972 ns/op
# Warmup Iteration   5: 967.942 ns/op
Iteration   1: 1071.726 ns/op
Iteration   2: 1062.303 ns/op
Iteration   3: 1058.943 ns/op
Iteration   4: 953.645 ns/op
Iteration   5: 962.649 ns/op

# Run progress: 69.05% complete, ETA 00:43:26
# Fork: 2 of 3
# Warmup Iteration   1: 1070.048 ns/op
# Warmup Iteration   2: 1059.378 ns/op
# Warmup Iteration   3: 963.271 ns/op
# Warmup Iteration   4: 966.040 ns/op
# Warmup Iteration   5: 966.418 ns/op
Iteration   1: 969.702 ns/op
Iteration   2: 971.301 ns/op
Iteration   3: 971.638 ns/op
Iteration   4: 970.804 ns/op
Iteration   5: 972.129 ns/op

# Run progress: 70.24% complete, ETA 00:41:45
# Fork: 3 of 3
# Warmup Iteration   1: 968.937 ns/op
# Warmup Iteration   2: 1077.690 ns/op
# Warmup Iteration   3: 1063.593 ns/op
# Warmup Iteration   4: 1058.710 ns/op
# Warmup Iteration   5: 1056.227 ns/op
Iteration   1: 1055.953 ns/op
Iteration   2: 1052.486 ns/op
Iteration   3: 961.724 ns/op
Iteration   4: 967.659 ns/op
Iteration   5: 969.041 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.arrays_mismatch":
  998.114 ±(99.9%) 49.091 ns/op [Average]
  (min, avg, max) = (953.645, 998.114, 1071.726), stdev = 45.920
  CI (99.9%): [949.022, 1047.205] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.manual_array_copy
# Parameters: (size = 16384, stride = 256)

# Run progress: 71.43% complete, ETA 00:40:05
# Fork: 1 of 3
# Warmup Iteration   1: 2138.724 ns/op
# Warmup Iteration   2: 2102.134 ns/op
# Warmup Iteration   3: 2073.702 ns/op
# Warmup Iteration   4: 2074.295 ns/op
# Warmup Iteration   5: 2069.059 ns/op
Iteration   1: 2053.689 ns/op
Iteration   2: 2095.603 ns/op
Iteration   3: 2087.584 ns/op
Iteration   4: 2082.234 ns/op
Iteration   5: 2081.262 ns/op

# Run progress: 72.62% complete, ETA 00:38:25
# Fork: 2 of 3
# Warmup Iteration   1: 2133.028 ns/op
# Warmup Iteration   2: 2112.828 ns/op
# Warmup Iteration   3: 2133.893 ns/op
# Warmup Iteration   4: 2183.285 ns/op
# Warmup Iteration   5: 2193.411 ns/op
Iteration   1: 2153.281 ns/op
Iteration   2: 2114.404 ns/op
Iteration   3: 2133.440 ns/op
Iteration   4: 2191.575 ns/op
Iteration   5: 2157.521 ns/op

# Run progress: 73.81% complete, ETA 00:36:45
# Fork: 3 of 3
# Warmup Iteration   1: 2127.176 ns/op
# Warmup Iteration   2: 2175.573 ns/op
# Warmup Iteration   3: 2108.090 ns/op
# Warmup Iteration   4: 2113.871 ns/op
# Warmup Iteration   5: 2093.888 ns/op
Iteration   1: 2068.817 ns/op
Iteration   2: 2089.922 ns/op
Iteration   3: 2101.507 ns/op
Iteration   4: 2118.050 ns/op
Iteration   5: 2087.050 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.manual_array_copy":
  2107.729 ±(99.9%) 39.917 ns/op [Average]
  (min, avg, max) = (2053.689, 2107.729, 2191.575), stdev = 37.338
  CI (99.9%): [2067.813, 2147.646] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.manual_array_copy
# Parameters: (size = 16384, stride = 512)

# Run progress: 75.00% complete, ETA 00:35:04
# Fork: 1 of 3
# Warmup Iteration   1: 1455.886 ns/op
# Warmup Iteration   2: 1386.284 ns/op
# Warmup Iteration   3: 1378.697 ns/op
# Warmup Iteration   4: 1372.256 ns/op
# Warmup Iteration   5: 1367.498 ns/op
Iteration   1: 1357.051 ns/op
Iteration   2: 1377.034 ns/op
Iteration   3: 1375.710 ns/op
Iteration   4: 1392.123 ns/op
Iteration   5: 1360.724 ns/op

# Run progress: 76.19% complete, ETA 00:33:24
# Fork: 2 of 3
# Warmup Iteration   1: 1479.896 ns/op
# Warmup Iteration   2: 1430.399 ns/op
# Warmup Iteration   3: 1362.903 ns/op
# Warmup Iteration   4: 1364.068 ns/op
# Warmup Iteration   5: 1407.896 ns/op
Iteration   1: 1398.376 ns/op
Iteration   2: 1408.522 ns/op
Iteration   3: 1420.323 ns/op
Iteration   4: 1393.687 ns/op
Iteration   5: 1396.030 ns/op

# Run progress: 77.38% complete, ETA 00:31:44
# Fork: 3 of 3
# Warmup Iteration   1: 1495.627 ns/op
# Warmup Iteration   2: 1431.737 ns/op
# Warmup Iteration   3: 1435.180 ns/op
# Warmup Iteration   4: 1425.416 ns/op
# Warmup Iteration   5: 1404.333 ns/op
Iteration   1: 1448.719 ns/op
Iteration   2: 1421.726 ns/op
Iteration   3: 1416.742 ns/op
Iteration   4: 1414.177 ns/op
Iteration   5: 1399.043 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.manual_array_copy":
  1398.666 ±(99.9%) 26.205 ns/op [Average]
  (min, avg, max) = (1357.051, 1398.666, 1448.719), stdev = 24.512
  CI (99.9%): [1372.461, 1424.871] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.manual_array_copy
# Parameters: (size = 32768, stride = 256)

# Run progress: 78.57% complete, ETA 00:30:04
# Fork: 1 of 3
# Warmup Iteration   1: 4500.627 ns/op
# Warmup Iteration   2: 4335.251 ns/op
# Warmup Iteration   3: 4142.246 ns/op
# Warmup Iteration   4: 4452.363 ns/op
# Warmup Iteration   5: 4291.326 ns/op
Iteration   1: 4259.858 ns/op
Iteration   2: 4236.304 ns/op
Iteration   3: 4166.498 ns/op
Iteration   4: 4289.655 ns/op
Iteration   5: 4252.913 ns/op

# Run progress: 79.76% complete, ETA 00:28:24
# Fork: 2 of 3
# Warmup Iteration   1: 4489.434 ns/op
# Warmup Iteration   2: 4382.527 ns/op
# Warmup Iteration   3: 4548.227 ns/op
# Warmup Iteration   4: 4479.125 ns/op
# Warmup Iteration   5: 4522.707 ns/op
Iteration   1: 4544.187 ns/op
Iteration   2: 4443.650 ns/op
Iteration   3: 4444.468 ns/op
Iteration   4: 4485.526 ns/op
Iteration   5: 4463.833 ns/op

# Run progress: 80.95% complete, ETA 00:26:43
# Fork: 3 of 3
# Warmup Iteration   1: 4361.535 ns/op
# Warmup Iteration   2: 4329.229 ns/op
# Warmup Iteration   3: 4284.706 ns/op
# Warmup Iteration   4: 4215.681 ns/op
# Warmup Iteration   5: 4300.778 ns/op
Iteration   1: 4331.845 ns/op
Iteration   2: 4243.070 ns/op
Iteration   3: 4255.019 ns/op
Iteration   4: 4244.999 ns/op
Iteration   5: 4286.935 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.manual_array_copy":
  4329.917 ±(99.9%) 122.646 ns/op [Average]
  (min, avg, max) = (4166.498, 4329.917, 4544.187), stdev = 114.723
  CI (99.9%): [4207.272, 4452.563] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.manual_array_copy
# Parameters: (size = 32768, stride = 512)

# Run progress: 82.14% complete, ETA 00:25:03
# Fork: 1 of 3
# Warmup Iteration   1: 3075.596 ns/op
# Warmup Iteration   2: 2946.249 ns/op
# Warmup Iteration   3: 3061.753 ns/op
# Warmup Iteration   4: 3080.259 ns/op
# Warmup Iteration   5: 3038.543 ns/op
Iteration   1: 3032.819 ns/op
Iteration   2: 3027.642 ns/op
Iteration   3: 3089.494 ns/op
Iteration   4: 3023.903 ns/op
Iteration   5: 3009.932 ns/op

# Run progress: 83.33% complete, ETA 00:23:23
# Fork: 2 of 3
# Warmup Iteration   1: 3041.026 ns/op
# Warmup Iteration   2: 3000.606 ns/op
# Warmup Iteration   3: 2968.605 ns/op
# Warmup Iteration   4: 3082.599 ns/op
# Warmup Iteration   5: 2963.846 ns/op
Iteration   1: 2945.523 ns/op
Iteration   2: 2952.430 ns/op
Iteration   3: 3012.787 ns/op
Iteration   4: 3002.207 ns/op
Iteration   5: 2930.371 ns/op

# Run progress: 84.52% complete, ETA 00:21:43
# Fork: 3 of 3
# Warmup Iteration   1: 3073.569 ns/op
# Warmup Iteration   2: 2987.671 ns/op
# Warmup Iteration   3: 3013.650 ns/op
# Warmup Iteration   4: 2966.245 ns/op
# Warmup Iteration   5: 3016.655 ns/op
Iteration   1: 3015.052 ns/op
Iteration   2: 3044.590 ns/op
Iteration   3: 2968.985 ns/op
Iteration   4: 2964.171 ns/op
Iteration   5: 2978.311 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.manual_array_copy":
  2999.881 ±(99.9%) 45.803 ns/op [Average]
  (min, avg, max) = (2930.371, 2999.881, 3089.494), stdev = 42.844
  CI (99.9%): [2954.079, 3045.684] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.system_array_copy
# Parameters: (size = 16384, stride = 256)

# Run progress: 85.71% complete, ETA 00:20:02
# Fork: 1 of 3
# Warmup Iteration   1: 1297.952 ns/op
# Warmup Iteration   2: 1274.365 ns/op
# Warmup Iteration   3: 1257.713 ns/op
# Warmup Iteration   4: 1260.317 ns/op
# Warmup Iteration   5: 1260.993 ns/op
Iteration   1: 1249.490 ns/op
Iteration   2: 1240.943 ns/op
Iteration   3: 1260.573 ns/op
Iteration   4: 1240.678 ns/op
Iteration   5: 1239.664 ns/op

# Run progress: 86.90% complete, ETA 00:18:22
# Fork: 2 of 3
# Warmup Iteration   1: 1307.980 ns/op
# Warmup Iteration   2: 1263.179 ns/op
# Warmup Iteration   3: 1244.594 ns/op
# Warmup Iteration   4: 1267.296 ns/op
# Warmup Iteration   5: 1268.231 ns/op
Iteration   1: 1254.036 ns/op
Iteration   2: 1267.543 ns/op
Iteration   3: 1288.920 ns/op
Iteration   4: 1279.374 ns/op
Iteration   5: 1263.204 ns/op

# Run progress: 88.10% complete, ETA 00:16:42
# Fork: 3 of 3
# Warmup Iteration   1: 1363.223 ns/op
# Warmup Iteration   2: 1291.899 ns/op
# Warmup Iteration   3: 1305.159 ns/op
# Warmup Iteration   4: 1272.982 ns/op
# Warmup Iteration   5: 1261.653 ns/op
Iteration   1: 1274.919 ns/op
Iteration   2: 1266.647 ns/op
Iteration   3: 1302.606 ns/op
Iteration   4: 1314.121 ns/op
Iteration   5: 1325.264 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.system_array_copy":
  1271.199 ±(99.9%) 28.521 ns/op [Average]
  (min, avg, max) = (1239.664, 1271.199, 1325.264), stdev = 26.679
  CI (99.9%): [1242.678, 1299.720] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.system_array_copy
# Parameters: (size = 16384, stride = 512)

# Run progress: 89.29% complete, ETA 00:15:02
# Fork: 1 of 3
# Warmup Iteration   1: 1219.965 ns/op
# Warmup Iteration   2: 1201.930 ns/op
# Warmup Iteration   3: 1234.483 ns/op
# Warmup Iteration   4: 1199.357 ns/op
# Warmup Iteration   5: 1203.716 ns/op
Iteration   1: 1230.071 ns/op
Iteration   2: 1221.784 ns/op
Iteration   3: 1223.851 ns/op
Iteration   4: 1223.554 ns/op
Iteration   5: 1231.290 ns/op

# Run progress: 90.48% complete, ETA 00:13:21
# Fork: 2 of 3
# Warmup Iteration   1: 1217.179 ns/op
# Warmup Iteration   2: 1196.492 ns/op
# Warmup Iteration   3: 1179.123 ns/op
# Warmup Iteration   4: 1183.659 ns/op
# Warmup Iteration   5: 1195.799 ns/op
Iteration   1: 1186.199 ns/op
Iteration   2: 1194.469 ns/op
Iteration   3: 1184.510 ns/op
Iteration   4: 1159.282 ns/op
Iteration   5: 1204.718 ns/op

# Run progress: 91.67% complete, ETA 00:11:41
# Fork: 3 of 3
# Warmup Iteration   1: 1182.183 ns/op
# Warmup Iteration   2: 1141.454 ns/op
# Warmup Iteration   3: 1211.624 ns/op
# Warmup Iteration   4: 1207.955 ns/op
# Warmup Iteration   5: 1196.558 ns/op
Iteration   1: 1166.948 ns/op
Iteration   2: 1201.578 ns/op
Iteration   3: 1190.565 ns/op
Iteration   4: 1225.881 ns/op
Iteration   5: 1203.587 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.system_array_copy":
  1203.219 ±(99.9%) 24.468 ns/op [Average]
  (min, avg, max) = (1159.282, 1203.219, 1231.290), stdev = 22.888
  CI (99.9%): [1178.751, 1227.688] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.system_array_copy
# Parameters: (size = 32768, stride = 256)

# Run progress: 92.86% complete, ETA 00:10:01
# Fork: 1 of 3
# Warmup Iteration   1: 3128.679 ns/op
# Warmup Iteration   2: 3017.601 ns/op
# Warmup Iteration   3: 2960.271 ns/op
# Warmup Iteration   4: 2943.931 ns/op
# Warmup Iteration   5: 2951.300 ns/op
Iteration   1: 2956.611 ns/op
Iteration   2: 2965.895 ns/op
Iteration   3: 2918.336 ns/op
Iteration   4: 2962.926 ns/op
Iteration   5: 2866.437 ns/op

# Run progress: 94.05% complete, ETA 00:08:21
# Fork: 2 of 3
# Warmup Iteration   1: 3059.170 ns/op
# Warmup Iteration   2: 2946.541 ns/op
# Warmup Iteration   3: 2903.665 ns/op
# Warmup Iteration   4: 2893.606 ns/op
# Warmup Iteration   5: 2895.749 ns/op
Iteration   1: 2837.150 ns/op
Iteration   2: 2876.805 ns/op
Iteration   3: 2856.934 ns/op
Iteration   4: 2877.704 ns/op
Iteration   5: 2895.685 ns/op

# Run progress: 95.24% complete, ETA 00:06:40
# Fork: 3 of 3
# Warmup Iteration   1: 3008.379 ns/op
# Warmup Iteration   2: 2991.822 ns/op
# Warmup Iteration   3: 2911.284 ns/op
# Warmup Iteration   4: 2920.730 ns/op
# Warmup Iteration   5: 2969.338 ns/op
Iteration   1: 2949.367 ns/op
Iteration   2: 2913.955 ns/op
Iteration   3: 2920.060 ns/op
Iteration   4: 2885.977 ns/op
Iteration   5: 2891.023 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.system_array_copy":
  2904.991 ±(99.9%) 43.110 ns/op [Average]
  (min, avg, max) = (2837.150, 2904.991, 2965.895), stdev = 40.325
  CI (99.9%): [2861.881, 2948.101] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.system_array_copy
# Parameters: (size = 32768, stride = 512)

# Run progress: 96.43% complete, ETA 00:05:00
# Fork: 1 of 3
# Warmup Iteration   1: 2899.170 ns/op
# Warmup Iteration   2: 2767.632 ns/op
# Warmup Iteration   3: 2755.439 ns/op
# Warmup Iteration   4: 2719.493 ns/op
# Warmup Iteration   5: 2725.289 ns/op
Iteration   1: 2734.462 ns/op
Iteration   2: 2813.961 ns/op
Iteration   3: 2726.463 ns/op
Iteration   4: 2753.317 ns/op
Iteration   5: 2797.994 ns/op

# Run progress: 97.62% complete, ETA 00:03:20
# Fork: 2 of 3
# Warmup Iteration   1: 2810.863 ns/op
# Warmup Iteration   2: 2770.217 ns/op
# Warmup Iteration   3: 2694.084 ns/op
# Warmup Iteration   4: 2678.368 ns/op
# Warmup Iteration   5: 2724.427 ns/op
Iteration   1: 2719.063 ns/op
Iteration   2: 2717.343 ns/op
Iteration   3: 2699.144 ns/op
Iteration   4: 2677.109 ns/op
Iteration   5: 2694.109 ns/op

# Run progress: 98.81% complete, ETA 00:01:40
# Fork: 3 of 3
# Warmup Iteration   1: 2905.193 ns/op
# Warmup Iteration   2: 2777.039 ns/op
# Warmup Iteration   3: 2722.857 ns/op
# Warmup Iteration   4: 2792.151 ns/op
# Warmup Iteration   5: 2751.277 ns/op
Iteration   1: 2677.847 ns/op
Iteration   2: 2698.991 ns/op
Iteration   3: 2756.536 ns/op
Iteration   4: 2760.081 ns/op
Iteration   5: 2665.081 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ArrayCopyBenchmark.system_array_copy":
  2726.100 ±(99.9%) 46.812 ns/op [Average]
  (min, avg, max) = (2665.081, 2726.100, 2813.961), stdev = 43.788
  CI (99.9%): [2679.288, 2772.912] (assumes normal distribution)


# Run complete. Total time: 02:20:20

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                             (size)  (stride)  Mode  Cnt     Score     Error  Units
ArrayCopyBenchmark.array_clone         16384       256  avgt   15  1233.012 ±   3.042  ns/op
ArrayCopyBenchmark.array_clone         16384       512  avgt   15  1233.688 ±   2.280  ns/op
ArrayCopyBenchmark.array_clone         32768       256  avgt   15  2574.599 ±   8.999  ns/op
ArrayCopyBenchmark.array_clone         32768       512  avgt   15  2569.802 ±  14.020  ns/op
ArrayCopyBenchmark.arrays_compare      16384       256  avgt   15   353.189 ±  14.433  ns/op
ArrayCopyBenchmark.arrays_compare      16384       512  avgt   15   360.206 ±  15.456  ns/op
ArrayCopyBenchmark.arrays_compare      32768       256  avgt   15  1028.290 ±  46.680  ns/op
ArrayCopyBenchmark.arrays_compare      32768       512  avgt   15  1017.933 ±  45.495  ns/op
ArrayCopyBenchmark.arrays_copyOf       16384       256  avgt   15  1918.554 ±  23.166  ns/op
ArrayCopyBenchmark.arrays_copyOf       16384       512  avgt   15  1883.163 ±   5.190  ns/op
ArrayCopyBenchmark.arrays_copyOf       32768       256  avgt   15  3795.501 ±  19.919  ns/op
ArrayCopyBenchmark.arrays_copyOf       32768       512  avgt   15  3744.651 ±  15.818  ns/op
ArrayCopyBenchmark.arrays_equals       16384       256  avgt   15   321.430 ±   4.265  ns/op
ArrayCopyBenchmark.arrays_equals       16384       512  avgt   15   332.650 ±  13.470  ns/op
ArrayCopyBenchmark.arrays_equals       32768       256  avgt   15  1029.771 ±  42.676  ns/op
ArrayCopyBenchmark.arrays_equals       32768       512  avgt   15   995.106 ±  47.145  ns/op
ArrayCopyBenchmark.arrays_mismatch     16384       256  avgt   15   342.742 ±  10.222  ns/op
ArrayCopyBenchmark.arrays_mismatch     16384       512  avgt   15   354.156 ±  17.236  ns/op
ArrayCopyBenchmark.arrays_mismatch     32768       256  avgt   15  1020.837 ±  42.866  ns/op
ArrayCopyBenchmark.arrays_mismatch     32768       512  avgt   15   998.114 ±  49.091  ns/op
ArrayCopyBenchmark.manual_array_copy   16384       256  avgt   15  2107.729 ±  39.917  ns/op
ArrayCopyBenchmark.manual_array_copy   16384       512  avgt   15  1398.666 ±  26.205  ns/op
ArrayCopyBenchmark.manual_array_copy   32768       256  avgt   15  4329.917 ± 122.646  ns/op
ArrayCopyBenchmark.manual_array_copy   32768       512  avgt   15  2999.881 ±  45.803  ns/op
ArrayCopyBenchmark.system_array_copy   16384       256  avgt   15  1271.199 ±  28.521  ns/op
ArrayCopyBenchmark.system_array_copy   16384       512  avgt   15  1203.219 ±  24.468  ns/op
ArrayCopyBenchmark.system_array_copy   32768       256  avgt   15  2904.991 ±  43.110  ns/op
ArrayCopyBenchmark.system_array_copy   32768       512  avgt   15  2726.100 ±  46.812  ns/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_c1_c2_jit/ArrayCopyBenchmark.json
Running java  -jar benchmarks/target/benchmarks.jar .*ListToArrayBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_c1_c2_jit/ListToArrayBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ListToArrayBenchmark.defensive_copy
# Parameters: (size = 128)

# Run progress: 0.00% complete, ETA 00:50:00
# Fork: 1 of 3
# Warmup Iteration   1: 0.044 us/op
# Warmup Iteration   2: 0.042 us/op
# Warmup Iteration   3: 0.041 us/op
# Warmup Iteration   4: 0.042 us/op
# Warmup Iteration   5: 0.041 us/op
Iteration   1: 0.042 us/op
Iteration   2: 0.042 us/op
Iteration   3: 0.042 us/op
Iteration   4: 0.042 us/op
Iteration   5: 0.042 us/op

# Run progress: 3.33% complete, ETA 00:48:27
# Fork: 2 of 3
# Warmup Iteration   1: 0.043 us/op
# Warmup Iteration   2: 0.042 us/op
# Warmup Iteration   3: 0.042 us/op
# Warmup Iteration   4: 0.042 us/op
# Warmup Iteration   5: 0.042 us/op
Iteration   1: 0.042 us/op
Iteration   2: 0.042 us/op
Iteration   3: 0.042 us/op
Iteration   4: 0.042 us/op
Iteration   5: 0.042 us/op

# Run progress: 6.67% complete, ETA 00:46:47
# Fork: 3 of 3
# Warmup Iteration   1: 0.044 us/op
# Warmup Iteration   2: 0.042 us/op
# Warmup Iteration   3: 0.042 us/op
# Warmup Iteration   4: 0.042 us/op
# Warmup Iteration   5: 0.042 us/op
Iteration   1: 0.042 us/op
Iteration   2: 0.042 us/op
Iteration   3: 0.042 us/op
Iteration   4: 0.042 us/op
Iteration   5: 0.041 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.ListToArrayBenchmark.defensive_copy":
  0.042 ±(99.9%) 0.001 us/op [Average]
  (min, avg, max) = (0.041, 0.042, 0.042), stdev = 0.001
  CI (99.9%): [0.042, 0.042] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ListToArrayBenchmark.defensive_copy
# Parameters: (size = 8192)

# Run progress: 10.00% complete, ETA 00:45:07
# Fork: 1 of 3
# Warmup Iteration   1: 2.706 us/op
# Warmup Iteration   2: 2.632 us/op
# Warmup Iteration   3: 2.579 us/op
# Warmup Iteration   4: 2.527 us/op
# Warmup Iteration   5: 2.597 us/op
Iteration   1: 2.609 us/op
Iteration   2: 2.651 us/op
Iteration   3: 2.576 us/op
Iteration   4: 2.567 us/op
Iteration   5: 2.524 us/op

# Run progress: 13.33% complete, ETA 00:43:26
# Fork: 2 of 3
# Warmup Iteration   1: 2.689 us/op
# Warmup Iteration   2: 2.672 us/op
# Warmup Iteration   3: 2.585 us/op
# Warmup Iteration   4: 2.579 us/op
# Warmup Iteration   5: 2.619 us/op
Iteration   1: 2.571 us/op
Iteration   2: 2.675 us/op
Iteration   3: 2.545 us/op
Iteration   4: 2.633 us/op
Iteration   5: 2.659 us/op

# Run progress: 16.67% complete, ETA 00:41:46
# Fork: 3 of 3
# Warmup Iteration   1: 2.697 us/op
# Warmup Iteration   2: 2.569 us/op
# Warmup Iteration   3: 2.582 us/op
# Warmup Iteration   4: 2.530 us/op
# Warmup Iteration   5: 2.624 us/op
Iteration   1: 2.592 us/op
Iteration   2: 2.586 us/op
Iteration   3: 2.607 us/op
Iteration   4: 2.508 us/op
Iteration   5: 2.546 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.ListToArrayBenchmark.defensive_copy":
  2.590 ±(99.9%) 0.053 us/op [Average]
  (min, avg, max) = (2.508, 2.590, 2.675), stdev = 0.049
  CI (99.9%): [2.537, 2.643] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ListToArrayBenchmark.sized_array_fixed_size
# Parameters: (size = 128)

# Run progress: 20.00% complete, ETA 00:40:06
# Fork: 1 of 3
# Warmup Iteration   1: 0.182 us/op
# Warmup Iteration   2: 0.175 us/op
# Warmup Iteration   3: 0.171 us/op
# Warmup Iteration   4: 0.174 us/op
# Warmup Iteration   5: 0.174 us/op
Iteration   1: 0.171 us/op
Iteration   2: 0.163 us/op
Iteration   3: 0.177 us/op
Iteration   4: 0.178 us/op
Iteration   5: 0.174 us/op

# Run progress: 23.33% complete, ETA 00:38:25
# Fork: 2 of 3
# Warmup Iteration   1: 0.178 us/op
# Warmup Iteration   2: 0.175 us/op
# Warmup Iteration   3: 0.173 us/op
# Warmup Iteration   4: 0.167 us/op
# Warmup Iteration   5: 0.174 us/op
Iteration   1: 0.178 us/op
Iteration   2: 0.175 us/op
Iteration   3: 0.174 us/op
Iteration   4: 0.169 us/op
Iteration   5: 0.165 us/op

# Run progress: 26.67% complete, ETA 00:36:45
# Fork: 3 of 3
# Warmup Iteration   1: 0.168 us/op
# Warmup Iteration   2: 0.178 us/op
# Warmup Iteration   3: 0.170 us/op
# Warmup Iteration   4: 0.169 us/op
# Warmup Iteration   5: 0.175 us/op
Iteration   1: 0.175 us/op
Iteration   2: 0.173 us/op
Iteration   3: 0.174 us/op
Iteration   4: 0.169 us/op
Iteration   5: 0.167 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.ListToArrayBenchmark.sized_array_fixed_size":
  0.172 ±(99.9%) 0.005 us/op [Average]
  (min, avg, max) = (0.163, 0.172, 0.178), stdev = 0.005
  CI (99.9%): [0.167, 0.177] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ListToArrayBenchmark.sized_array_fixed_size
# Parameters: (size = 8192)

# Run progress: 30.00% complete, ETA 00:35:05
# Fork: 1 of 3
# Warmup Iteration   1: 10.391 us/op
# Warmup Iteration   2: 9.936 us/op
# Warmup Iteration   3: 9.846 us/op
# Warmup Iteration   4: 9.840 us/op
# Warmup Iteration   5: 9.820 us/op
Iteration   1: 9.911 us/op
Iteration   2: 10.143 us/op
Iteration   3: 9.856 us/op
Iteration   4: 9.673 us/op
Iteration   5: 9.793 us/op

# Run progress: 33.33% complete, ETA 00:33:24
# Fork: 2 of 3
# Warmup Iteration   1: 10.495 us/op
# Warmup Iteration   2: 9.879 us/op
# Warmup Iteration   3: 9.792 us/op
# Warmup Iteration   4: 10.296 us/op
# Warmup Iteration   5: 10.062 us/op
Iteration   1: 10.232 us/op
Iteration   2: 10.049 us/op
Iteration   3: 10.337 us/op
Iteration   4: 9.853 us/op
Iteration   5: 9.941 us/op

# Run progress: 36.67% complete, ETA 00:31:44
# Fork: 3 of 3
# Warmup Iteration   1: 10.610 us/op
# Warmup Iteration   2: 10.276 us/op
# Warmup Iteration   3: 9.707 us/op
# Warmup Iteration   4: 9.597 us/op
# Warmup Iteration   5: 9.667 us/op
Iteration   1: 9.851 us/op
Iteration   2: 9.911 us/op
Iteration   3: 10.154 us/op
Iteration   4: 9.916 us/op
Iteration   5: 9.635 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.ListToArrayBenchmark.sized_array_fixed_size":
  9.950 ±(99.9%) 0.212 us/op [Average]
  (min, avg, max) = (9.635, 9.950, 10.337), stdev = 0.198
  CI (99.9%): [9.738, 10.162] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ListToArrayBenchmark.sized_array_from_list
# Parameters: (size = 128)

# Run progress: 40.00% complete, ETA 00:30:04
# Fork: 1 of 3
# Warmup Iteration   1: 0.179 us/op
# Warmup Iteration   2: 0.163 us/op
# Warmup Iteration   3: 0.175 us/op
# Warmup Iteration   4: 0.171 us/op
# Warmup Iteration   5: 0.177 us/op
Iteration   1: 0.182 us/op
Iteration   2: 0.182 us/op
Iteration   3: 0.183 us/op
Iteration   4: 0.178 us/op
Iteration   5: 0.181 us/op

# Run progress: 43.33% complete, ETA 00:28:24
# Fork: 2 of 3
# Warmup Iteration   1: 0.179 us/op
# Warmup Iteration   2: 0.170 us/op
# Warmup Iteration   3: 0.178 us/op
# Warmup Iteration   4: 0.168 us/op
# Warmup Iteration   5: 0.169 us/op
Iteration   1: 0.168 us/op
Iteration   2: 0.168 us/op
Iteration   3: 0.178 us/op
Iteration   4: 0.175 us/op
Iteration   5: 0.172 us/op

# Run progress: 46.67% complete, ETA 00:26:43
# Fork: 3 of 3
# Warmup Iteration   1: 0.172 us/op
# Warmup Iteration   2: 0.169 us/op
# Warmup Iteration   3: 0.174 us/op
# Warmup Iteration   4: 0.170 us/op
# Warmup Iteration   5: 0.172 us/op
Iteration   1: 0.173 us/op
Iteration   2: 0.170 us/op
Iteration   3: 0.170 us/op
Iteration   4: 0.170 us/op
Iteration   5: 0.177 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.ListToArrayBenchmark.sized_array_from_list":
  0.175 ±(99.9%) 0.006 us/op [Average]
  (min, avg, max) = (0.168, 0.175, 0.183), stdev = 0.005
  CI (99.9%): [0.169, 0.181] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ListToArrayBenchmark.sized_array_from_list
# Parameters: (size = 8192)

# Run progress: 50.00% complete, ETA 00:25:03
# Fork: 1 of 3
# Warmup Iteration   1: 10.377 us/op
# Warmup Iteration   2: 10.122 us/op
# Warmup Iteration   3: 10.155 us/op
# Warmup Iteration   4: 9.753 us/op
# Warmup Iteration   5: 9.848 us/op
Iteration   1: 9.817 us/op
Iteration   2: 9.696 us/op
Iteration   3: 10.347 us/op
Iteration   4: 10.272 us/op
Iteration   5: 10.117 us/op

# Run progress: 53.33% complete, ETA 00:23:23
# Fork: 2 of 3
# Warmup Iteration   1: 10.187 us/op
# Warmup Iteration   2: 10.185 us/op
# Warmup Iteration   3: 10.219 us/op
# Warmup Iteration   4: 10.149 us/op
# Warmup Iteration   5: 9.949 us/op
Iteration   1: 9.922 us/op
Iteration   2: 10.117 us/op
Iteration   3: 10.003 us/op
Iteration   4: 10.081 us/op
Iteration   5: 9.824 us/op

# Run progress: 56.67% complete, ETA 00:21:43
# Fork: 3 of 3
# Warmup Iteration   1: 10.146 us/op
# Warmup Iteration   2: 10.230 us/op
# Warmup Iteration   3: 9.843 us/op
# Warmup Iteration   4: 9.906 us/op
# Warmup Iteration   5: 9.727 us/op
Iteration   1: 9.901 us/op
Iteration   2: 10.346 us/op
Iteration   3: 10.094 us/op
Iteration   4: 9.804 us/op
Iteration   5: 9.823 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.ListToArrayBenchmark.sized_array_from_list":
  10.011 ±(99.9%) 0.221 us/op [Average]
  (min, avg, max) = (9.696, 10.011, 10.347), stdev = 0.207
  CI (99.9%): [9.790, 10.232] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ListToArrayBenchmark.to_array
# Parameters: (size = 128)

# Run progress: 60.00% complete, ETA 00:20:02
# Fork: 1 of 3
# Warmup Iteration   1: 0.040 us/op
# Warmup Iteration   2: 0.038 us/op
# Warmup Iteration   3: 0.038 us/op
# Warmup Iteration   4: 0.038 us/op
# Warmup Iteration   5: 0.038 us/op
Iteration   1: 0.038 us/op
Iteration   2: 0.038 us/op
Iteration   3: 0.038 us/op
Iteration   4: 0.038 us/op
Iteration   5: 0.038 us/op

# Run progress: 63.33% complete, ETA 00:18:22
# Fork: 2 of 3
# Warmup Iteration   1: 0.040 us/op
# Warmup Iteration   2: 0.039 us/op
# Warmup Iteration   3: 0.038 us/op
# Warmup Iteration   4: 0.038 us/op
# Warmup Iteration   5: 0.038 us/op
Iteration   1: 0.038 us/op
Iteration   2: 0.038 us/op
Iteration   3: 0.038 us/op
Iteration   4: 0.038 us/op
Iteration   5: 0.038 us/op

# Run progress: 66.67% complete, ETA 00:16:42
# Fork: 3 of 3
# Warmup Iteration   1: 0.040 us/op
# Warmup Iteration   2: 0.039 us/op
# Warmup Iteration   3: 0.038 us/op
# Warmup Iteration   4: 0.038 us/op
# Warmup Iteration   5: 0.038 us/op
Iteration   1: 0.038 us/op
Iteration   2: 0.039 us/op
Iteration   3: 0.038 us/op
Iteration   4: 0.039 us/op
Iteration   5: 0.038 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.ListToArrayBenchmark.to_array":
  0.038 ±(99.9%) 0.001 us/op [Average]
  (min, avg, max) = (0.038, 0.038, 0.039), stdev = 0.001
  CI (99.9%): [0.038, 0.038] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ListToArrayBenchmark.to_array
# Parameters: (size = 8192)

# Run progress: 70.00% complete, ETA 00:15:02
# Fork: 1 of 3
# Warmup Iteration   1: 2.674 us/op
# Warmup Iteration   2: 2.580 us/op
# Warmup Iteration   3: 2.532 us/op
# Warmup Iteration   4: 2.601 us/op
# Warmup Iteration   5: 2.561 us/op
Iteration   1: 2.548 us/op
Iteration   2: 2.575 us/op
Iteration   3: 2.598 us/op
Iteration   4: 2.571 us/op
Iteration   5: 2.593 us/op

# Run progress: 73.33% complete, ETA 00:13:21
# Fork: 2 of 3
# Warmup Iteration   1: 2.681 us/op
# Warmup Iteration   2: 2.518 us/op
# Warmup Iteration   3: 2.507 us/op
# Warmup Iteration   4: 2.598 us/op
# Warmup Iteration   5: 2.521 us/op
Iteration   1: 2.514 us/op
Iteration   2: 2.581 us/op
Iteration   3: 2.491 us/op
Iteration   4: 2.509 us/op
Iteration   5: 2.536 us/op

# Run progress: 76.67% complete, ETA 00:11:41
# Fork: 3 of 3
# Warmup Iteration   1: 2.701 us/op
# Warmup Iteration   2: 2.613 us/op
# Warmup Iteration   3: 2.577 us/op
# Warmup Iteration   4: 2.574 us/op
# Warmup Iteration   5: 2.567 us/op
Iteration   1: 2.605 us/op
Iteration   2: 2.547 us/op
Iteration   3: 2.593 us/op
Iteration   4: 2.559 us/op
Iteration   5: 2.602 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.ListToArrayBenchmark.to_array":
  2.561 ±(99.9%) 0.039 us/op [Average]
  (min, avg, max) = (2.491, 2.561, 2.605), stdev = 0.036
  CI (99.9%): [2.523, 2.600] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ListToArrayBenchmark.zero_sized_array
# Parameters: (size = 128)

# Run progress: 80.00% complete, ETA 00:10:01
# Fork: 1 of 3
# Warmup Iteration   1: 0.166 us/op
# Warmup Iteration   2: 0.160 us/op
# Warmup Iteration   3: 0.165 us/op
# Warmup Iteration   4: 0.169 us/op
# Warmup Iteration   5: 0.164 us/op
Iteration   1: 0.159 us/op
Iteration   2: 0.165 us/op
Iteration   3: 0.154 us/op
Iteration   4: 0.158 us/op
Iteration   5: 0.156 us/op

# Run progress: 83.33% complete, ETA 00:08:21
# Fork: 2 of 3
# Warmup Iteration   1: 0.166 us/op
# Warmup Iteration   2: 0.169 us/op
# Warmup Iteration   3: 0.154 us/op
# Warmup Iteration   4: 0.155 us/op
# Warmup Iteration   5: 0.157 us/op
Iteration   1: 0.161 us/op
Iteration   2: 0.159 us/op
Iteration   3: 0.157 us/op
Iteration   4: 0.163 us/op
Iteration   5: 0.153 us/op

# Run progress: 86.67% complete, ETA 00:06:40
# Fork: 3 of 3
# Warmup Iteration   1: 0.163 us/op
# Warmup Iteration   2: 0.154 us/op
# Warmup Iteration   3: 0.162 us/op
# Warmup Iteration   4: 0.158 us/op
# Warmup Iteration   5: 0.160 us/op
Iteration   1: 0.161 us/op
Iteration   2: 0.160 us/op
Iteration   3: 0.160 us/op
Iteration   4: 0.161 us/op
Iteration   5: 0.159 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.ListToArrayBenchmark.zero_sized_array":
  0.159 ±(99.9%) 0.003 us/op [Average]
  (min, avg, max) = (0.153, 0.159, 0.165), stdev = 0.003
  CI (99.9%): [0.156, 0.163] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ListToArrayBenchmark.zero_sized_array
# Parameters: (size = 8192)

# Run progress: 90.00% complete, ETA 00:05:00
# Fork: 1 of 3
# Warmup Iteration   1: 10.262 us/op
# Warmup Iteration   2: 10.703 us/op
# Warmup Iteration   3: 10.018 us/op
# Warmup Iteration   4: 9.839 us/op
# Warmup Iteration   5: 10.490 us/op
Iteration   1: 9.858 us/op
Iteration   2: 10.264 us/op
Iteration   3: 10.350 us/op
Iteration   4: 10.122 us/op
Iteration   5: 10.001 us/op

# Run progress: 93.33% complete, ETA 00:03:20
# Fork: 2 of 3
# Warmup Iteration   1: 10.488 us/op
# Warmup Iteration   2: 10.659 us/op
# Warmup Iteration   3: 10.269 us/op
# Warmup Iteration   4: 10.067 us/op
# Warmup Iteration   5: 9.994 us/op
Iteration   1: 10.259 us/op
Iteration   2: 10.379 us/op
Iteration   3: 10.305 us/op
Iteration   4: 10.327 us/op
Iteration   5: 10.206 us/op

# Run progress: 96.67% complete, ETA 00:01:40
# Fork: 3 of 3
# Warmup Iteration   1: 10.354 us/op
# Warmup Iteration   2: 10.574 us/op
# Warmup Iteration   3: 10.419 us/op
# Warmup Iteration   4: 10.406 us/op
# Warmup Iteration   5: 10.316 us/op
Iteration   1: 10.086 us/op
Iteration   2: 10.041 us/op
Iteration   3: 10.157 us/op
Iteration   4: 10.376 us/op
Iteration   5: 10.281 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.ListToArrayBenchmark.zero_sized_array":
  10.201 ±(99.9%) 0.164 us/op [Average]
  (min, avg, max) = (9.858, 10.201, 10.379), stdev = 0.153
  CI (99.9%): [10.037, 10.365] (assumes normal distribution)


# Run complete. Total time: 00:50:07

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    (size)  Mode  Cnt   Score    Error  Units
ListToArrayBenchmark.defensive_copy             128  avgt   15   0.042 ±  0.001  us/op
ListToArrayBenchmark.defensive_copy            8192  avgt   15   2.590 ±  0.053  us/op
ListToArrayBenchmark.sized_array_fixed_size     128  avgt   15   0.172 ±  0.005  us/op
ListToArrayBenchmark.sized_array_fixed_size    8192  avgt   15   9.950 ±  0.212  us/op
ListToArrayBenchmark.sized_array_from_list      128  avgt   15   0.175 ±  0.006  us/op
ListToArrayBenchmark.sized_array_from_list     8192  avgt   15  10.011 ±  0.221  us/op
ListToArrayBenchmark.to_array                   128  avgt   15   0.038 ±  0.001  us/op
ListToArrayBenchmark.to_array                  8192  avgt   15   2.561 ±  0.039  us/op
ListToArrayBenchmark.zero_sized_array           128  avgt   15   0.159 ±  0.003  us/op
ListToArrayBenchmark.zero_sized_array          8192  avgt   15  10.201 ±  0.164  us/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_c1_c2_jit/ListToArrayBenchmark.json
Running java  -jar benchmarks/target/benchmarks.jar .*IfConditionalBranchBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_c1_c2_jit/IfConditionalBranchBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.IfConditionalBranchBenchmark.branchless_baseline
# Parameters: (thresholdLimit = 4096)

# Run progress: 0.00% complete, ETA 00:15:00
# Fork: 1 of 3
# Warmup Iteration   1: 4206.421 ns/op
# Warmup Iteration   2: 4190.337 ns/op
# Warmup Iteration   3: 4475.312 ns/op
# Warmup Iteration   4: 4447.543 ns/op
# Warmup Iteration   5: 4434.695 ns/op
Iteration   1: 4432.035 ns/op
Iteration   2: 4415.843 ns/op
Iteration   3: 4386.255 ns/op
Iteration   4: 4411.588 ns/op
Iteration   5: 4413.847 ns/op

# Run progress: 11.11% complete, ETA 00:13:21
# Fork: 2 of 3
# Warmup Iteration   1: 4381.691 ns/op
# Warmup Iteration   2: 4340.537 ns/op
# Warmup Iteration   3: 4430.135 ns/op
# Warmup Iteration   4: 4194.296 ns/op
# Warmup Iteration   5: 4188.099 ns/op
Iteration   1: 4182.422 ns/op
Iteration   2: 4195.184 ns/op
Iteration   3: 4197.210 ns/op
Iteration   4: 4183.841 ns/op
Iteration   5: 4191.774 ns/op

# Run progress: 22.22% complete, ETA 00:11:41
# Fork: 3 of 3
# Warmup Iteration   1: 4201.390 ns/op
# Warmup Iteration   2: 4192.307 ns/op
# Warmup Iteration   3: 4190.973 ns/op
# Warmup Iteration   4: 4197.011 ns/op
# Warmup Iteration   5: 4192.892 ns/op
Iteration   1: 4195.209 ns/op
Iteration   2: 4195.581 ns/op
Iteration   3: 4197.259 ns/op
Iteration   4: 4194.312 ns/op
Iteration   5: 4195.624 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.IfConditionalBranchBenchmark.branchless_baseline":
  4265.866 ±(99.9%) 114.756 ns/op [Average]
  (min, avg, max) = (4182.422, 4265.866, 4432.035), stdev = 107.343
  CI (99.9%): [4151.109, 4380.622] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.IfConditionalBranchBenchmark.predictable_branch
# Parameters: (thresholdLimit = 4096)

# Run progress: 33.33% complete, ETA 00:10:01
# Fork: 1 of 3
# Warmup Iteration   1: 4504.890 ns/op
# Warmup Iteration   2: 4490.358 ns/op
# Warmup Iteration   3: 4492.917 ns/op
# Warmup Iteration   4: 4492.506 ns/op
# Warmup Iteration   5: 4891.297 ns/op
Iteration   1: 4871.558 ns/op
Iteration   2: 4842.283 ns/op
Iteration   3: 4831.442 ns/op
Iteration   4: 4814.866 ns/op
Iteration   5: 4811.672 ns/op

# Run progress: 44.44% complete, ETA 00:08:21
# Fork: 2 of 3
# Warmup Iteration   1: 4441.462 ns/op
# Warmup Iteration   2: 4425.967 ns/op
# Warmup Iteration   3: 4821.337 ns/op
# Warmup Iteration   4: 4799.421 ns/op
# Warmup Iteration   5: 4794.076 ns/op
Iteration   1: 4782.317 ns/op
Iteration   2: 4771.366 ns/op
Iteration   3: 4771.290 ns/op
Iteration   4: 4765.535 ns/op
Iteration   5: 4756.504 ns/op

# Run progress: 55.56% complete, ETA 00:06:40
# Fork: 3 of 3
# Warmup Iteration   1: 4774.724 ns/op
# Warmup Iteration   2: 4757.088 ns/op
# Warmup Iteration   3: 4762.424 ns/op
# Warmup Iteration   4: 4778.004 ns/op
# Warmup Iteration   5: 4765.331 ns/op
Iteration   1: 4770.482 ns/op
Iteration   2: 4761.956 ns/op
Iteration   3: 4760.931 ns/op
Iteration   4: 4760.888 ns/op
Iteration   5: 4764.071 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.IfConditionalBranchBenchmark.predictable_branch":
  4789.144 ±(99.9%) 38.534 ns/op [Average]
  (min, avg, max) = (4756.504, 4789.144, 4871.558), stdev = 36.044
  CI (99.9%): [4750.610, 4827.678] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.IfConditionalBranchBenchmark.unpredictable_branch
# Parameters: (thresholdLimit = 4096)

# Run progress: 66.67% complete, ETA 00:05:00
# Fork: 1 of 3
# Warmup Iteration   1: 8640.713 ns/op
# Warmup Iteration   2: 8708.378 ns/op
# Warmup Iteration   3: 8720.964 ns/op
# Warmup Iteration   4: 8732.094 ns/op
# Warmup Iteration   5: 8724.789 ns/op
Iteration   1: 8719.087 ns/op
Iteration   2: 8747.452 ns/op
Iteration   3: 8731.974 ns/op
Iteration   4: 8757.500 ns/op
Iteration   5: 8765.070 ns/op

# Run progress: 77.78% complete, ETA 00:03:20
# Fork: 2 of 3
# Warmup Iteration   1: 8724.183 ns/op
# Warmup Iteration   2: 8709.726 ns/op
# Warmup Iteration   3: 8710.354 ns/op
# Warmup Iteration   4: 8699.013 ns/op
# Warmup Iteration   5: 8739.507 ns/op
Iteration   1: 8723.153 ns/op
Iteration   2: 8731.739 ns/op
Iteration   3: 8716.983 ns/op
Iteration   4: 8697.451 ns/op
Iteration   5: 8694.447 ns/op

# Run progress: 88.89% complete, ETA 00:01:40
# Fork: 3 of 3
# Warmup Iteration   1: 8707.476 ns/op
# Warmup Iteration   2: 8397.308 ns/op
# Warmup Iteration   3: 8385.942 ns/op
# Warmup Iteration   4: 8391.204 ns/op
# Warmup Iteration   5: 8394.368 ns/op
Iteration   1: 8393.516 ns/op
Iteration   2: 8391.514 ns/op
Iteration   3: 8392.171 ns/op
Iteration   4: 8389.136 ns/op
Iteration   5: 8393.368 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.IfConditionalBranchBenchmark.unpredictable_branch":
  8616.304 ±(99.9%) 176.704 ns/op [Average]
  (min, avg, max) = (8389.136, 8616.304, 8765.070), stdev = 165.289
  CI (99.9%): [8439.600, 8793.008] (assumes normal distribution)


# Run complete. Total time: 00:15:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                          (thresholdLimit)  Mode  Cnt     Score     Error  Units
IfConditionalBranchBenchmark.branchless_baseline               4096  avgt   15  4265.866 ± 114.756  ns/op
IfConditionalBranchBenchmark.predictable_branch                4096  avgt   15  4789.144 ±  38.534  ns/op
IfConditionalBranchBenchmark.unpredictable_branch              4096  avgt   15  8616.304 ± 176.704  ns/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_c1_c2_jit/IfConditionalBranchBenchmark.json
Running java  -jar benchmarks/target/benchmarks.jar .*NullChecksBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_c1_c2_jit/NullChecksBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.NullChecksBenchmark.explicit_null_check
# Parameters: (size = 1024, upperNullThreshold = 0.0)

# Run progress: 0.00% complete, ETA 00:30:00
# Fork: 1 of 3
# Warmup Iteration   1: 1974.118 ns/op
# Warmup Iteration   2: 1975.158 ns/op
# Warmup Iteration   3: 1970.785 ns/op
# Warmup Iteration   4: 1973.798 ns/op
# Warmup Iteration   5: 1974.251 ns/op
Iteration   1: 1970.998 ns/op
Iteration   2: 1970.814 ns/op
Iteration   3: 1969.765 ns/op
Iteration   4: 1971.253 ns/op
Iteration   5: 1972.213 ns/op

# Run progress: 5.56% complete, ETA 00:28:25
# Fork: 2 of 3
# Warmup Iteration   1: 1958.146 ns/op
# Warmup Iteration   2: 1961.618 ns/op
# Warmup Iteration   3: 1950.001 ns/op
# Warmup Iteration   4: 1948.415 ns/op
# Warmup Iteration   5: 1950.386 ns/op
Iteration   1: 1953.202 ns/op
Iteration   2: 2154.200 ns/op
Iteration   3: 2145.973 ns/op
Iteration   4: 2137.289 ns/op
Iteration   5: 2121.613 ns/op

# Run progress: 11.11% complete, ETA 00:26:44
# Fork: 3 of 3
# Warmup Iteration   1: 1928.906 ns/op
# Warmup Iteration   2: 1947.538 ns/op
# Warmup Iteration   3: 1934.680 ns/op
# Warmup Iteration   4: 1939.636 ns/op
# Warmup Iteration   5: 1946.569 ns/op
Iteration   1: 1945.559 ns/op
Iteration   2: 1945.379 ns/op
Iteration   3: 1949.490 ns/op
Iteration   4: 1949.978 ns/op
Iteration   5: 1949.967 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.NullChecksBenchmark.explicit_null_check":
  2007.180 ±(99.9%) 89.376 ns/op [Average]
  (min, avg, max) = (1945.379, 2007.180, 2154.200), stdev = 83.602
  CI (99.9%): [1917.804, 2096.555] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.NullChecksBenchmark.explicit_null_check
# Parameters: (size = 1024, upperNullThreshold = 0.5)

# Run progress: 16.67% complete, ETA 00:25:03
# Fork: 1 of 3
# Warmup Iteration   1: 663393.215 ns/op
# Warmup Iteration   2: 673397.205 ns/op
# Warmup Iteration   3: 685805.090 ns/op
# Warmup Iteration   4: 681778.100 ns/op
# Warmup Iteration   5: 644818.445 ns/op
Iteration   1: 624698.442 ns/op
Iteration   2: 620817.819 ns/op
Iteration   3: 616746.233 ns/op
Iteration   4: 655759.371 ns/op
Iteration   5: 668699.195 ns/op

# Run progress: 22.22% complete, ETA 00:23:23
# Fork: 2 of 3
# Warmup Iteration   1: 641801.574 ns/op
# Warmup Iteration   2: 660179.481 ns/op
# Warmup Iteration   3: 658215.255 ns/op
# Warmup Iteration   4: 631818.267 ns/op
# Warmup Iteration   5: 613889.025 ns/op
Iteration   1: 615864.641 ns/op
Iteration   2: 644933.330 ns/op
Iteration   3: 636834.249 ns/op
Iteration   4: 641710.597 ns/op
Iteration   5: 590137.291 ns/op

# Run progress: 27.78% complete, ETA 00:21:43
# Fork: 3 of 3
# Warmup Iteration   1: 639318.184 ns/op
# Warmup Iteration   2: 652728.345 ns/op
# Warmup Iteration   3: 642988.273 ns/op
# Warmup Iteration   4: 663363.279 ns/op
# Warmup Iteration   5: 687157.963 ns/op
Iteration   1: 683673.618 ns/op
Iteration   2: 673883.486 ns/op
Iteration   3: 666079.593 ns/op
Iteration   4: 597198.800 ns/op
Iteration   5: 636267.967 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.NullChecksBenchmark.explicit_null_check":
  638220.309 ±(99.9%) 29768.117 ns/op [Average]
  (min, avg, max) = (590137.291, 638220.309, 683673.618), stdev = 27845.115
  CI (99.9%): [608452.192, 667988.426] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.NullChecksBenchmark.explicit_null_check
# Parameters: (size = 1024, upperNullThreshold = 1.0)

# Run progress: 33.33% complete, ETA 00:20:02
# Fork: 1 of 3
# Warmup Iteration   1: 1256838.024 ns/op
# Warmup Iteration   2: 1334979.154 ns/op
# Warmup Iteration   3: 1336506.457 ns/op
# Warmup Iteration   4: 1326706.145 ns/op
# Warmup Iteration   5: 1324545.460 ns/op
Iteration   1: 1330924.850 ns/op
Iteration   2: 1303227.474 ns/op
Iteration   3: 1197400.241 ns/op
Iteration   4: 1327918.836 ns/op
Iteration   5: 1318035.420 ns/op

# Run progress: 38.89% complete, ETA 00:18:22
# Fork: 2 of 3
# Warmup Iteration   1: 1285223.328 ns/op
# Warmup Iteration   2: 1282235.421 ns/op
# Warmup Iteration   3: 1325865.931 ns/op
# Warmup Iteration   4: 1276279.751 ns/op
# Warmup Iteration   5: 1234410.306 ns/op
Iteration   1: 1210371.137 ns/op
Iteration   2: 1247537.407 ns/op
Iteration   3: 1220650.022 ns/op
Iteration   4: 1224976.297 ns/op
Iteration   5: 1219845.963 ns/op

# Run progress: 44.44% complete, ETA 00:16:42
# Fork: 3 of 3
# Warmup Iteration   1: 1313817.914 ns/op
# Warmup Iteration   2: 1187240.639 ns/op
# Warmup Iteration   3: 1212594.294 ns/op
# Warmup Iteration   4: 1304364.723 ns/op
# Warmup Iteration   5: 1259492.669 ns/op
Iteration   1: 1330978.836 ns/op
Iteration   2: 1331000.370 ns/op
Iteration   3: 1323848.642 ns/op
Iteration   4: 1320647.329 ns/op
Iteration   5: 1249319.442 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.NullChecksBenchmark.explicit_null_check":
  1277112.151 ±(99.9%) 56684.709 ns/op [Average]
  (min, avg, max) = (1197400.241, 1277112.151, 1331000.370), stdev = 53022.912
  CI (99.9%): [1220427.442, 1333796.860] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.NullChecksBenchmark.implicit_null_check
# Parameters: (size = 1024, upperNullThreshold = 0.0)

# Run progress: 50.00% complete, ETA 00:15:02
# Fork: 1 of 3
# Warmup Iteration   1: 1937.761 ns/op
# Warmup Iteration   2: 2156.425 ns/op
# Warmup Iteration   3: 2139.580 ns/op
# Warmup Iteration   4: 2130.114 ns/op
# Warmup Iteration   5: 2119.314 ns/op
Iteration   1: 2119.505 ns/op
Iteration   2: 2119.728 ns/op
Iteration   3: 2120.737 ns/op
Iteration   4: 2109.464 ns/op
Iteration   5: 2108.201 ns/op

# Run progress: 55.56% complete, ETA 00:13:21
# Fork: 2 of 3
# Warmup Iteration   1: 2138.006 ns/op
# Warmup Iteration   2: 2135.947 ns/op
# Warmup Iteration   3: 2126.934 ns/op
# Warmup Iteration   4: 2123.399 ns/op
# Warmup Iteration   5: 2127.651 ns/op
Iteration   1: 2107.479 ns/op
Iteration   2: 1905.859 ns/op
Iteration   3: 1918.341 ns/op
Iteration   4: 1923.263 ns/op
Iteration   5: 2140.998 ns/op

# Run progress: 61.11% complete, ETA 00:11:41
# Fork: 3 of 3
# Warmup Iteration   1: 2133.167 ns/op
# Warmup Iteration   2: 2133.139 ns/op
# Warmup Iteration   3: 2114.902 ns/op
# Warmup Iteration   4: 2110.961 ns/op
# Warmup Iteration   5: 2101.756 ns/op
Iteration   1: 2100.349 ns/op
Iteration   2: 2103.301 ns/op
Iteration   3: 2101.691 ns/op
Iteration   4: 2100.550 ns/op
Iteration   5: 2093.615 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.NullChecksBenchmark.implicit_null_check":
  2071.539 ±(99.9%) 87.097 ns/op [Average]
  (min, avg, max) = (1905.859, 2071.539, 2140.998), stdev = 81.470
  CI (99.9%): [1984.442, 2158.635] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.NullChecksBenchmark.implicit_null_check
# Parameters: (size = 1024, upperNullThreshold = 0.5)

# Run progress: 66.67% complete, ETA 00:10:01
# Fork: 1 of 3
# Warmup Iteration   1: 49127.945 ns/op
# Warmup Iteration   2: 44185.819 ns/op
# Warmup Iteration   3: 44591.677 ns/op
# Warmup Iteration   4: 44751.023 ns/op
# Warmup Iteration   5: 44833.281 ns/op
Iteration   1: 44887.770 ns/op
Iteration   2: 44930.264 ns/op
Iteration   3: 44792.992 ns/op
Iteration   4: 44857.886 ns/op
Iteration   5: 44833.844 ns/op

# Run progress: 72.22% complete, ETA 00:08:21
# Fork: 2 of 3
# Warmup Iteration   1: 45249.243 ns/op
# Warmup Iteration   2: 46234.983 ns/op
# Warmup Iteration   3: 46311.778 ns/op
# Warmup Iteration   4: 46253.359 ns/op
# Warmup Iteration   5: 46172.125 ns/op
Iteration   1: 45319.217 ns/op
Iteration   2: 50371.656 ns/op
Iteration   3: 50030.378 ns/op
Iteration   4: 49774.017 ns/op
Iteration   5: 49667.081 ns/op

# Run progress: 77.78% complete, ETA 00:06:40
# Fork: 3 of 3
# Warmup Iteration   1: 51886.579 ns/op
# Warmup Iteration   2: 47064.003 ns/op
# Warmup Iteration   3: 47602.341 ns/op
# Warmup Iteration   4: 47820.241 ns/op
# Warmup Iteration   5: 48051.810 ns/op
Iteration   1: 48219.077 ns/op
Iteration   2: 48235.219 ns/op
Iteration   3: 48283.588 ns/op
Iteration   4: 48391.539 ns/op
Iteration   5: 48399.901 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.NullChecksBenchmark.implicit_null_check":
  47399.629 ±(99.9%) 2342.925 ns/op [Average]
  (min, avg, max) = (44792.992, 47399.629, 50371.656), stdev = 2191.574
  CI (99.9%): [45056.703, 49742.554] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.NullChecksBenchmark.implicit_null_check
# Parameters: (size = 1024, upperNullThreshold = 1.0)

# Run progress: 83.33% complete, ETA 00:05:02
# Fork: 1 of 3
# Warmup Iteration   1: 86934.422 ns/op
# Warmup Iteration   2: 90311.744 ns/op
# Warmup Iteration   3: 87866.110 ns/op
# Warmup Iteration   4: 81195.232 ns/op
# Warmup Iteration   5: 81824.216 ns/op
Iteration   1: 81993.491 ns/op
Iteration   2: 81781.579 ns/op
Iteration   3: 81963.750 ns/op
Iteration   4: 82125.529 ns/op
Iteration   5: 82178.302 ns/op

# Run progress: 88.89% complete, ETA 00:03:22
# Fork: 2 of 3
# Warmup Iteration   1: 81275.152 ns/op
# Warmup Iteration   2: 81695.725 ns/op
# Warmup Iteration   3: 81240.357 ns/op
# Warmup Iteration   4: 81572.741 ns/op
# Warmup Iteration   5: 81623.975 ns/op
Iteration   1: 81810.237 ns/op
Iteration   2: 81618.442 ns/op
Iteration   3: 81679.073 ns/op
Iteration   4: 81709.152 ns/op
Iteration   5: 81781.677 ns/op

# Run progress: 94.44% complete, ETA 00:01:42
# Fork: 3 of 3
# Warmup Iteration   1: 86563.523 ns/op
# Warmup Iteration   2: 79778.085 ns/op
# Warmup Iteration   3: 82409.292 ns/op
# Warmup Iteration   4: 82812.656 ns/op
# Warmup Iteration   5: 83272.020 ns/op
Iteration   1: 91047.741 ns/op
Iteration   2: 90342.214 ns/op
Iteration   3: 90004.955 ns/op
Iteration   4: 89763.007 ns/op
Iteration   5: 89658.437 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.NullChecksBenchmark.implicit_null_check":
  84630.506 ±(99.9%) 4344.137 ns/op [Average]
  (min, avg, max) = (81618.442, 84630.506, 91047.741), stdev = 4063.509
  CI (99.9%): [80286.368, 88974.643] (assumes normal distribution)


# Run complete. Total time: 00:30:44

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                (size)  (upperNullThreshold)  Mode  Cnt        Score       Error  Units
NullChecksBenchmark.explicit_null_check    1024                   0.0  avgt   15     2007.180 ±    89.376  ns/op
NullChecksBenchmark.explicit_null_check    1024                   0.5  avgt   15   638220.309 ± 29768.117  ns/op
NullChecksBenchmark.explicit_null_check    1024                   1.0  avgt   15  1277112.151 ± 56684.709  ns/op
NullChecksBenchmark.implicit_null_check    1024                   0.0  avgt   15     2071.539 ±    87.097  ns/op
NullChecksBenchmark.implicit_null_check    1024                   0.5  avgt   15    47399.629 ±  2342.925  ns/op
NullChecksBenchmark.implicit_null_check    1024                   1.0  avgt   15    84630.506 ±  4344.137  ns/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_c1_c2_jit/NullChecksBenchmark.json
Running java  -jar benchmarks/target/benchmarks.jar .*CodeCacheBusterBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_c1_c2_jit/CodeCacheBusterBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.CodeCacheBusterBenchmark.code_cache_buster

# Run progress: 0.00% complete, ETA 00:05:00
# Fork: 1 of 3
# Warmup Iteration   1: 431.514 us/op
# Warmup Iteration   2: 382.008 us/op
# Warmup Iteration   3: 323.168 us/op
# Warmup Iteration   4: 295.433 us/op
# Warmup Iteration   5: 295.727 us/op
Iteration   1: 295.388 us/op
Iteration   2: 295.057 us/op
Iteration   3: 293.677 us/op
Iteration   4: 295.301 us/op
Iteration   5: 294.323 us/op

# Run progress: 33.33% complete, ETA 00:03:40
# Fork: 2 of 3
# Warmup Iteration   1: 440.045 us/op
# Warmup Iteration   2: 385.891 us/op
# Warmup Iteration   3: 331.230 us/op
# Warmup Iteration   4: 305.294 us/op
# Warmup Iteration   5: 309.958 us/op
Iteration   1: 309.551 us/op
Iteration   2: 308.104 us/op
Iteration   3: 310.298 us/op
Iteration   4: 309.991 us/op
Iteration   5: 309.523 us/op

# Run progress: 66.67% complete, ETA 00:01:50
# Fork: 3 of 3
# Warmup Iteration   1: 442.681 us/op
# Warmup Iteration   2: 398.946 us/op
# Warmup Iteration   3: 360.991 us/op
# Warmup Iteration   4: 330.433 us/op
# Warmup Iteration   5: 330.874 us/op
Iteration   1: 324.759 us/op
Iteration   2: 319.186 us/op
Iteration   3: 318.517 us/op
Iteration   4: 320.083 us/op
Iteration   5: 320.273 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.CodeCacheBusterBenchmark.code_cache_buster":
  308.269 ±(99.9%) 11.802 us/op [Average]
  (min, avg, max) = (293.677, 308.269, 324.759), stdev = 11.039
  CI (99.9%): [296.467, 320.070] (assumes normal distribution)


# Run complete. Total time: 00:05:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                   Mode  Cnt    Score    Error  Units
CodeCacheBusterBenchmark.code_cache_buster  avgt   15  308.269 ± 11.802  us/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_c1_c2_jit/CodeCacheBusterBenchmark.json
Running java  -jar benchmarks/target/benchmarks.jar .*MethodArgsBusterBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_c1_c2_jit/MethodArgsBusterBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MethodArgsBusterBenchmark.method_args_buster

# Run progress: 0.00% complete, ETA 00:05:00
# Fork: 1 of 3
# Warmup Iteration   1: 191.911 ns/op
# Warmup Iteration   2: 195.925 ns/op
# Warmup Iteration   3: 196.334 ns/op
# Warmup Iteration   4: 196.436 ns/op
# Warmup Iteration   5: 196.454 ns/op
Iteration   1: 196.566 ns/op
Iteration   2: 196.471 ns/op
Iteration   3: 196.507 ns/op
Iteration   4: 196.587 ns/op
Iteration   5: 196.823 ns/op

# Run progress: 33.33% complete, ETA 00:03:40
# Fork: 2 of 3
# Warmup Iteration   1: 192.475 ns/op
# Warmup Iteration   2: 213.350 ns/op
# Warmup Iteration   3: 212.899 ns/op
# Warmup Iteration   4: 212.669 ns/op
# Warmup Iteration   5: 212.497 ns/op
Iteration   1: 212.210 ns/op
Iteration   2: 212.250 ns/op
Iteration   3: 212.625 ns/op
Iteration   4: 212.374 ns/op
Iteration   5: 212.181 ns/op

# Run progress: 66.67% complete, ETA 00:01:50
# Fork: 3 of 3
# Warmup Iteration   1: 208.438 ns/op
# Warmup Iteration   2: 210.638 ns/op
# Warmup Iteration   3: 211.937 ns/op
# Warmup Iteration   4: 212.090 ns/op
# Warmup Iteration   5: 212.428 ns/op
Iteration   1: 212.316 ns/op
Iteration   2: 211.699 ns/op
Iteration   3: 211.821 ns/op
Iteration   4: 211.941 ns/op
Iteration   5: 196.226 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MethodArgsBusterBenchmark.method_args_buster":
  205.907 ±(99.9%) 8.476 ns/op [Average]
  (min, avg, max) = (196.226, 205.907, 212.625), stdev = 7.928
  CI (99.9%): [197.430, 214.383] (assumes normal distribution)


# Run complete. Total time: 00:05:30

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                     Mode  Cnt    Score   Error  Units
MethodArgsBusterBenchmark.method_args_buster  avgt   15  205.907 ± 8.476  ns/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_c1_c2_jit/MethodArgsBusterBenchmark.json
Running java  -jar benchmarks/target/benchmarks.jar .*CanonicalizeInductionVariableBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_c1_c2_jit/CanonicalizeInductionVariableBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.CanonicalizeInductionVariableBenchmark.baseline

# Run progress: 0.00% complete, ETA 00:10:00
# Fork: 1 of 3
# Warmup Iteration   1: 6876.152 us/op
# Warmup Iteration   2: 6980.017 us/op
# Warmup Iteration   3: 7020.601 us/op
# Warmup Iteration   4: 6989.828 us/op
# Warmup Iteration   5: 6845.503 us/op
Iteration   1: 6742.314 us/op
Iteration   2: 6761.732 us/op
Iteration   3: 6883.513 us/op
Iteration   4: 7772.022 us/op
Iteration   5: 6753.064 us/op

# Run progress: 16.67% complete, ETA 00:09:11
# Fork: 2 of 3
# Warmup Iteration   1: 6939.676 us/op
# Warmup Iteration   2: 7550.588 us/op
# Warmup Iteration   3: 7549.382 us/op
# Warmup Iteration   4: 7553.281 us/op
# Warmup Iteration   5: 7736.098 us/op
Iteration   1: 7648.608 us/op
Iteration   2: 7644.160 us/op
Iteration   3: 7740.457 us/op
Iteration   4: 7785.280 us/op
Iteration   5: 7750.884 us/op

# Run progress: 33.33% complete, ETA 00:07:21
# Fork: 3 of 3
# Warmup Iteration   1: 6887.762 us/op
# Warmup Iteration   2: 7529.718 us/op
# Warmup Iteration   3: 7522.903 us/op
# Warmup Iteration   4: 7546.315 us/op
# Warmup Iteration   5: 7787.630 us/op
Iteration   1: 7811.587 us/op
Iteration   2: 7781.659 us/op
Iteration   3: 7771.308 us/op
Iteration   4: 7748.898 us/op
Iteration   5: 7762.117 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.CanonicalizeInductionVariableBenchmark.baseline":
  7490.507 ±(99.9%) 474.279 us/op [Average]
  (min, avg, max) = (6742.314, 7490.507, 7811.587), stdev = 443.641
  CI (99.9%): [7016.228, 7964.786] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.CanonicalizeInductionVariableBenchmark.canonicalize_induction_var

# Run progress: 50.00% complete, ETA 00:05:30
# Fork: 1 of 3
# Warmup Iteration   1: 7139.860 us/op
# Warmup Iteration   2: 7243.092 us/op
# Warmup Iteration   3: 7258.100 us/op
# Warmup Iteration   4: 7291.571 us/op
# Warmup Iteration   5: 7305.130 us/op
Iteration   1: 7334.097 us/op
Iteration   2: 7365.873 us/op
Iteration   3: 7374.123 us/op
Iteration   4: 7388.762 us/op
Iteration   5: 7368.559 us/op

# Run progress: 66.67% complete, ETA 00:03:40
# Fork: 2 of 3
# Warmup Iteration   1: 7876.442 us/op
# Warmup Iteration   2: 7928.446 us/op
# Warmup Iteration   3: 7955.927 us/op
# Warmup Iteration   4: 7962.318 us/op
# Warmup Iteration   5: 7972.236 us/op
Iteration   1: 7975.128 us/op
Iteration   2: 7960.230 us/op
Iteration   3: 7959.187 us/op
Iteration   4: 7971.974 us/op
Iteration   5: 7965.663 us/op

# Run progress: 83.33% complete, ETA 00:01:50
# Fork: 3 of 3
# Warmup Iteration   1: 7793.665 us/op
# Warmup Iteration   2: 7868.089 us/op
# Warmup Iteration   3: 7911.305 us/op
# Warmup Iteration   4: 7925.736 us/op
# Warmup Iteration   5: 7935.283 us/op
Iteration   1: 7951.092 us/op
Iteration   2: 7950.598 us/op
Iteration   3: 7929.521 us/op
Iteration   4: 7932.155 us/op
Iteration   5: 7927.755 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.CanonicalizeInductionVariableBenchmark.canonicalize_induction_var":
  7756.981 ±(99.9%) 306.289 us/op [Average]
  (min, avg, max) = (7334.097, 7756.981, 7975.128), stdev = 286.503
  CI (99.9%): [7450.692, 8063.270] (assumes normal distribution)


# Run complete. Total time: 00:11:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                                          Mode  Cnt     Score     Error  Units
CanonicalizeInductionVariableBenchmark.baseline                    avgt   15  7490.507 ± 474.279  us/op
CanonicalizeInductionVariableBenchmark.canonicalize_induction_var  avgt   15  7756.981 ± 306.289  us/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_c1_c2_jit/CanonicalizeInductionVariableBenchmark.json
Running java  -jar benchmarks/target/benchmarks.jar .*DeadCodeEliminationBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_c1_c2_jit/DeadCodeEliminationBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.DeadCodeEliminationBenchmark.baseline
# Parameters: (circleRadius = 42, iterations = 32768)

# Run progress: 0.00% complete, ETA 00:15:00
# Fork: 1 of 3
# Warmup Iteration   1: 1.024 ns/op
# Warmup Iteration   2: 1.022 ns/op
# Warmup Iteration   3: 1.021 ns/op
# Warmup Iteration   4: 1.022 ns/op
# Warmup Iteration   5: 1.022 ns/op
Iteration   1: 1.022 ns/op
Iteration   2: 1.021 ns/op
Iteration   3: 1.020 ns/op
Iteration   4: 1.022 ns/op
Iteration   5: 1.021 ns/op

# Run progress: 11.11% complete, ETA 00:14:42
# Fork: 2 of 3
# Warmup Iteration   1: 1.023 ns/op
# Warmup Iteration   2: 1.022 ns/op
# Warmup Iteration   3: 1.022 ns/op
# Warmup Iteration   4: 1.022 ns/op
# Warmup Iteration   5: 1.022 ns/op
Iteration   1: 1.022 ns/op
Iteration   2: 1.022 ns/op
Iteration   3: 1.020 ns/op
Iteration   4: 1.022 ns/op
Iteration   5: 1.018 ns/op

# Run progress: 22.22% complete, ETA 00:12:51
# Fork: 3 of 3
# Warmup Iteration   1: 1.024 ns/op
# Warmup Iteration   2: 1.024 ns/op
# Warmup Iteration   3: 1.022 ns/op
# Warmup Iteration   4: 1.022 ns/op
# Warmup Iteration   5: 1.021 ns/op
Iteration   1: 1.015 ns/op
Iteration   2: 1.021 ns/op
Iteration   3: 1.022 ns/op
Iteration   4: 1.021 ns/op
Iteration   5: 1.022 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.DeadCodeEliminationBenchmark.baseline":
  1.021 ±(99.9%) 0.002 ns/op [Average]
  (min, avg, max) = (1.015, 1.021, 1.022), stdev = 0.002
  CI (99.9%): [1.019, 1.023] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.DeadCodeEliminationBenchmark.dead_native_method_calls
# Parameters: (circleRadius = 42, iterations = 32768)

# Run progress: 33.33% complete, ETA 00:11:01
# Fork: 1 of 3
# Warmup Iteration   1: 158.983 ns/op
# Warmup Iteration   2: 159.019 ns/op
# Warmup Iteration   3: 158.929 ns/op
# Warmup Iteration   4: 158.484 ns/op
# Warmup Iteration   5: 158.251 ns/op
Iteration   1: 158.874 ns/op
Iteration   2: 158.929 ns/op
Iteration   3: 158.541 ns/op
Iteration   4: 158.965 ns/op
Iteration   5: 158.936 ns/op

# Run progress: 44.44% complete, ETA 00:09:11
# Fork: 2 of 3
# Warmup Iteration   1: 159.077 ns/op
# Warmup Iteration   2: 158.954 ns/op
# Warmup Iteration   3: 158.956 ns/op
# Warmup Iteration   4: 158.885 ns/op
# Warmup Iteration   5: 158.794 ns/op
Iteration   1: 158.951 ns/op
Iteration   2: 159.009 ns/op
Iteration   3: 158.387 ns/op
Iteration   4: 158.433 ns/op
Iteration   5: 159.046 ns/op

# Run progress: 55.56% complete, ETA 00:07:20
# Fork: 3 of 3
# Warmup Iteration   1: 159.279 ns/op
# Warmup Iteration   2: 158.632 ns/op
# Warmup Iteration   3: 158.870 ns/op
# Warmup Iteration   4: 158.901 ns/op
# Warmup Iteration   5: 158.871 ns/op
Iteration   1: 158.918 ns/op
Iteration   2: 158.949 ns/op
Iteration   3: 158.936 ns/op
Iteration   4: 158.983 ns/op
Iteration   5: 158.949 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.DeadCodeEliminationBenchmark.dead_native_method_calls":
  158.854 ±(99.9%) 0.227 ns/op [Average]
  (min, avg, max) = (158.387, 158.854, 159.046), stdev = 0.213
  CI (99.9%): [158.626, 159.081] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.DeadCodeEliminationBenchmark.dead_user_defined_method_calls
# Parameters: (circleRadius = 42, iterations = 32768)

# Run progress: 66.67% complete, ETA 00:05:30
# Fork: 1 of 3
# Warmup Iteration   1: 5270.966 ns/op
# Warmup Iteration   2: 5267.409 ns/op
# Warmup Iteration   3: 5271.658 ns/op
# Warmup Iteration   4: 5264.169 ns/op
# Warmup Iteration   5: 5274.598 ns/op
Iteration   1: 5274.272 ns/op
Iteration   2: 5272.817 ns/op
Iteration   3: 5275.188 ns/op
Iteration   4: 5262.437 ns/op
Iteration   5: 5266.917 ns/op

# Run progress: 77.78% complete, ETA 00:03:40
# Fork: 2 of 3
# Warmup Iteration   1: 5281.489 ns/op
# Warmup Iteration   2: 5280.954 ns/op
# Warmup Iteration   3: 5276.376 ns/op
# Warmup Iteration   4: 5275.690 ns/op
# Warmup Iteration   5: 5274.285 ns/op
Iteration   1: 5268.101 ns/op
Iteration   2: 5270.817 ns/op
Iteration   3: 5262.615 ns/op
Iteration   4: 5275.875 ns/op
Iteration   5: 5256.488 ns/op

# Run progress: 88.89% complete, ETA 00:01:50
# Fork: 3 of 3
# Warmup Iteration   1: 5279.964 ns/op
# Warmup Iteration   2: 5282.192 ns/op
# Warmup Iteration   3: 5267.601 ns/op
# Warmup Iteration   4: 5267.103 ns/op
# Warmup Iteration   5: 5272.925 ns/op
Iteration   1: 5273.887 ns/op
Iteration   2: 5279.956 ns/op
Iteration   3: 5274.778 ns/op
Iteration   4: 5270.086 ns/op
Iteration   5: 5255.274 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.DeadCodeEliminationBenchmark.dead_user_defined_method_calls":
  5269.300 ±(99.9%) 7.784 ns/op [Average]
  (min, avg, max) = (5255.274, 5269.300, 5279.956), stdev = 7.282
  CI (99.9%): [5261.516, 5277.085] (assumes normal distribution)


# Run complete. Total time: 00:16:33

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                                    (circleRadius)  (iterations)  Mode  Cnt     Score   Error  Units
DeadCodeEliminationBenchmark.baseline                                    42         32768  avgt   15     1.021 ± 0.002  ns/op
DeadCodeEliminationBenchmark.dead_native_method_calls                    42         32768  avgt   15   158.854 ± 0.227  ns/op
DeadCodeEliminationBenchmark.dead_user_defined_method_calls              42         32768  avgt   15  5269.300 ± 7.784  ns/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_c1_c2_jit/DeadCodeEliminationBenchmark.json
Running java  -jar benchmarks/target/benchmarks.jar .*LoopControlFlowBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_c1_c2_jit/LoopControlFlowBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.LoopControlFlowBenchmark.loop_continue
# Parameters: (size = 262144, upperNullThreshold = 0)

# Run progress: 0.00% complete, ETA 00:40:00
# Fork: 1 of 3
# Warmup Iteration   1: 152.448 us/op
# Warmup Iteration   2: 152.773 us/op
# Warmup Iteration   3: 121.549 us/op
# Warmup Iteration   4: 122.164 us/op
# Warmup Iteration   5: 122.425 us/op
Iteration   1: 134.336 us/op
Iteration   2: 133.470 us/op
Iteration   3: 133.011 us/op
Iteration   4: 132.829 us/op
Iteration   5: 133.044 us/op

# Run progress: 4.17% complete, ETA 00:42:16
# Fork: 2 of 3
# Warmup Iteration   1: 158.636 us/op
# Warmup Iteration   2: 154.779 us/op
# Warmup Iteration   3: 122.022 us/op
# Warmup Iteration   4: 122.870 us/op
# Warmup Iteration   5: 134.431 us/op
Iteration   1: 133.691 us/op
Iteration   2: 133.404 us/op
Iteration   3: 133.013 us/op
Iteration   4: 133.050 us/op
Iteration   5: 133.422 us/op

# Run progress: 8.33% complete, ETA 00:40:25
# Fork: 3 of 3
# Warmup Iteration   1: 157.539 us/op
# Warmup Iteration   2: 165.524 us/op
# Warmup Iteration   3: 137.238 us/op
# Warmup Iteration   4: 137.154 us/op
# Warmup Iteration   5: 137.217 us/op
Iteration   1: 136.994 us/op
Iteration   2: 137.223 us/op
Iteration   3: 137.261 us/op
Iteration   4: 136.390 us/op
Iteration   5: 127.490 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.LoopControlFlowBenchmark.loop_continue":
  133.909 ±(99.9%) 2.623 us/op [Average]
  (min, avg, max) = (127.490, 133.909, 137.261), stdev = 2.453
  CI (99.9%): [131.286, 136.531] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.LoopControlFlowBenchmark.loop_continue
# Parameters: (size = 262144, upperNullThreshold = 16)

# Run progress: 12.50% complete, ETA 00:38:35
# Fork: 1 of 3
# Warmup Iteration   1: 822.815 us/op
# Warmup Iteration   2: 823.150 us/op
# Warmup Iteration   3: 819.163 us/op
# Warmup Iteration   4: 817.857 us/op
# Warmup Iteration   5: 817.930 us/op
Iteration   1: 821.797 us/op
Iteration   2: 821.413 us/op
Iteration   3: 821.180 us/op
Iteration   4: 820.434 us/op
Iteration   5: 820.580 us/op

# Run progress: 16.67% complete, ETA 00:36:45
# Fork: 2 of 3
# Warmup Iteration   1: 822.368 us/op
# Warmup Iteration   2: 821.436 us/op
# Warmup Iteration   3: 819.728 us/op
# Warmup Iteration   4: 819.854 us/op
# Warmup Iteration   5: 860.233 us/op
Iteration   1: 858.937 us/op
Iteration   2: 855.400 us/op
Iteration   3: 855.121 us/op
Iteration   4: 854.998 us/op
Iteration   5: 852.439 us/op

# Run progress: 20.83% complete, ETA 00:34:54
# Fork: 3 of 3
# Warmup Iteration   1: 834.141 us/op
# Warmup Iteration   2: 847.146 us/op
# Warmup Iteration   3: 851.227 us/op
# Warmup Iteration   4: 854.305 us/op
# Warmup Iteration   5: 818.346 us/op
Iteration   1: 820.338 us/op
Iteration   2: 820.497 us/op
Iteration   3: 821.837 us/op
Iteration   4: 822.100 us/op
Iteration   5: 820.559 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.LoopControlFlowBenchmark.loop_continue":
  832.509 ±(99.9%) 17.954 us/op [Average]
  (min, avg, max) = (820.338, 832.509, 858.937), stdev = 16.794
  CI (99.9%): [814.555, 850.462] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.LoopControlFlowBenchmark.loop_if_comparison
# Parameters: (size = 262144, upperNullThreshold = 0)

# Run progress: 25.00% complete, ETA 00:33:04
# Fork: 1 of 3
# Warmup Iteration   1: 154.066 us/op
# Warmup Iteration   2: 153.348 us/op
# Warmup Iteration   3: 123.134 us/op
# Warmup Iteration   4: 123.929 us/op
# Warmup Iteration   5: 124.489 us/op
Iteration   1: 125.402 us/op
Iteration   2: 125.617 us/op
Iteration   3: 126.005 us/op
Iteration   4: 126.262 us/op
Iteration   5: 126.293 us/op

# Run progress: 29.17% complete, ETA 00:31:14
# Fork: 2 of 3
# Warmup Iteration   1: 166.202 us/op
# Warmup Iteration   2: 167.818 us/op
# Warmup Iteration   3: 168.334 us/op
# Warmup Iteration   4: 139.701 us/op
# Warmup Iteration   5: 139.276 us/op
Iteration   1: 139.558 us/op
Iteration   2: 139.604 us/op
Iteration   3: 139.871 us/op
Iteration   4: 139.763 us/op
Iteration   5: 139.407 us/op

# Run progress: 33.33% complete, ETA 00:29:24
# Fork: 3 of 3
# Warmup Iteration   1: 154.910 us/op
# Warmup Iteration   2: 154.588 us/op
# Warmup Iteration   3: 124.736 us/op
# Warmup Iteration   4: 125.812 us/op
# Warmup Iteration   5: 126.940 us/op
Iteration   1: 127.319 us/op
Iteration   2: 127.453 us/op
Iteration   3: 128.586 us/op
Iteration   4: 127.832 us/op
Iteration   5: 127.771 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.LoopControlFlowBenchmark.loop_if_comparison":
  131.116 ±(99.9%) 6.734 us/op [Average]
  (min, avg, max) = (125.402, 131.116, 139.871), stdev = 6.299
  CI (99.9%): [124.382, 137.851] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.LoopControlFlowBenchmark.loop_if_comparison
# Parameters: (size = 262144, upperNullThreshold = 16)

# Run progress: 37.50% complete, ETA 00:27:33
# Fork: 1 of 3
# Warmup Iteration   1: 822.346 us/op
# Warmup Iteration   2: 822.005 us/op
# Warmup Iteration   3: 867.443 us/op
# Warmup Iteration   4: 866.746 us/op
# Warmup Iteration   5: 868.288 us/op
Iteration   1: 866.730 us/op
Iteration   2: 868.309 us/op
Iteration   3: 875.720 us/op
Iteration   4: 821.192 us/op
Iteration   5: 820.804 us/op

# Run progress: 41.67% complete, ETA 00:25:43
# Fork: 2 of 3
# Warmup Iteration   1: 816.677 us/op
# Warmup Iteration   2: 819.061 us/op
# Warmup Iteration   3: 821.850 us/op
# Warmup Iteration   4: 819.514 us/op
# Warmup Iteration   5: 821.326 us/op
Iteration   1: 821.054 us/op
Iteration   2: 820.989 us/op
Iteration   3: 865.044 us/op
Iteration   4: 860.415 us/op
Iteration   5: 859.328 us/op

# Run progress: 45.83% complete, ETA 00:23:53
# Fork: 3 of 3
# Warmup Iteration   1: 821.928 us/op
# Warmup Iteration   2: 856.351 us/op
# Warmup Iteration   3: 861.115 us/op
# Warmup Iteration   4: 864.486 us/op
# Warmup Iteration   5: 866.264 us/op
Iteration   1: 866.343 us/op
Iteration   2: 820.969 us/op
Iteration   3: 821.368 us/op
Iteration   4: 819.574 us/op
Iteration   5: 815.433 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.LoopControlFlowBenchmark.loop_if_comparison":
  841.552 ±(99.9%) 25.619 us/op [Average]
  (min, avg, max) = (815.433, 841.552, 875.720), stdev = 23.964
  CI (99.9%): [815.932, 867.171] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.LoopControlFlowBenchmark.loop_try_catch
# Parameters: (size = 262144, upperNullThreshold = 0)

# Run progress: 50.00% complete, ETA 00:22:03
# Fork: 1 of 3
# Warmup Iteration   1: 151.120 us/op
# Warmup Iteration   2: 160.600 us/op
# Warmup Iteration   3: 131.141 us/op
# Warmup Iteration   4: 131.148 us/op
# Warmup Iteration   5: 131.291 us/op
Iteration   1: 131.441 us/op
Iteration   2: 131.525 us/op
Iteration   3: 131.402 us/op
Iteration   4: 131.374 us/op
Iteration   5: 131.340 us/op

# Run progress: 54.17% complete, ETA 00:20:12
# Fork: 2 of 3
# Warmup Iteration   1: 151.825 us/op
# Warmup Iteration   2: 151.828 us/op
# Warmup Iteration   3: 127.205 us/op
# Warmup Iteration   4: 131.203 us/op
# Warmup Iteration   5: 132.314 us/op
Iteration   1: 131.875 us/op
Iteration   2: 132.046 us/op
Iteration   3: 132.156 us/op
Iteration   4: 132.198 us/op
Iteration   5: 132.064 us/op

# Run progress: 58.33% complete, ETA 00:18:22
# Fork: 3 of 3
# Warmup Iteration   1: 158.305 us/op
# Warmup Iteration   2: 160.345 us/op
# Warmup Iteration   3: 130.511 us/op
# Warmup Iteration   4: 131.123 us/op
# Warmup Iteration   5: 131.254 us/op
Iteration   1: 131.343 us/op
Iteration   2: 131.391 us/op
Iteration   3: 131.434 us/op
Iteration   4: 131.229 us/op
Iteration   5: 131.537 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.LoopControlFlowBenchmark.loop_try_catch":
  131.624 ±(99.9%) 0.363 us/op [Average]
  (min, avg, max) = (131.229, 131.624, 132.198), stdev = 0.340
  CI (99.9%): [131.260, 131.987] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.LoopControlFlowBenchmark.loop_try_catch
# Parameters: (size = 262144, upperNullThreshold = 16)

# Run progress: 62.50% complete, ETA 00:16:32
# Fork: 1 of 3
# Warmup Iteration   1: 1667.949 us/op
# Warmup Iteration   2: 1751.723 us/op
# Warmup Iteration   3: 1594.327 us/op
# Warmup Iteration   4: 1605.396 us/op
# Warmup Iteration   5: 1612.669 us/op
Iteration   1: 1633.878 us/op
Iteration   2: 1623.837 us/op
Iteration   3: 1627.594 us/op
Iteration   4: 1634.334 us/op
Iteration   5: 1628.883 us/op

# Run progress: 66.67% complete, ETA 00:14:42
# Fork: 2 of 3
# Warmup Iteration   1: 1633.029 us/op
# Warmup Iteration   2: 1759.625 us/op
# Warmup Iteration   3: 1758.725 us/op
# Warmup Iteration   4: 1750.547 us/op
# Warmup Iteration   5: 1746.001 us/op
Iteration   1: 1752.572 us/op
Iteration   2: 1752.807 us/op
Iteration   3: 1752.104 us/op
Iteration   4: 1750.110 us/op
Iteration   5: 1747.428 us/op

# Run progress: 70.83% complete, ETA 00:12:51
# Fork: 3 of 3
# Warmup Iteration   1: 1757.776 us/op
# Warmup Iteration   2: 1576.595 us/op
# Warmup Iteration   3: 1593.638 us/op
# Warmup Iteration   4: 1599.643 us/op
# Warmup Iteration   5: 1611.572 us/op
Iteration   1: 1618.222 us/op
Iteration   2: 1619.577 us/op
Iteration   3: 1621.096 us/op
Iteration   4: 1615.041 us/op
Iteration   5: 1622.980 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.LoopControlFlowBenchmark.loop_try_catch":
  1666.697 ±(99.9%) 66.216 us/op [Average]
  (min, avg, max) = (1615.041, 1666.697, 1752.807), stdev = 61.938
  CI (99.9%): [1600.482, 1732.913] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.LoopControlFlowBenchmark.stream
# Parameters: (size = 262144, upperNullThreshold = 0)

# Run progress: 75.00% complete, ETA 00:11:01
# Fork: 1 of 3
# Warmup Iteration   1: 2489.245 us/op
# Warmup Iteration   2: 1766.379 us/op
# Warmup Iteration   3: 1795.765 us/op
# Warmup Iteration   4: 1752.694 us/op
# Warmup Iteration   5: 1806.064 us/op
Iteration   1: 1788.382 us/op
Iteration   2: 1821.874 us/op
Iteration   3: 1823.657 us/op
Iteration   4: 1791.851 us/op
Iteration   5: 1790.827 us/op

# Run progress: 79.17% complete, ETA 00:09:11
# Fork: 2 of 3
# Warmup Iteration   1: 2549.551 us/op
# Warmup Iteration   2: 1805.819 us/op
# Warmup Iteration   3: 1785.855 us/op
# Warmup Iteration   4: 1770.116 us/op
# Warmup Iteration   5: 1795.705 us/op
Iteration   1: 1833.593 us/op
Iteration   2: 1779.669 us/op
Iteration   3: 1824.917 us/op
Iteration   4: 1749.211 us/op
Iteration   5: 1809.942 us/op

# Run progress: 83.33% complete, ETA 00:07:21
# Fork: 3 of 3
# Warmup Iteration   1: 2619.541 us/op
# Warmup Iteration   2: 1783.846 us/op
# Warmup Iteration   3: 1795.517 us/op
# Warmup Iteration   4: 1820.667 us/op
# Warmup Iteration   5: 1813.467 us/op
Iteration   1: 1809.094 us/op
Iteration   2: 1808.785 us/op
Iteration   3: 1780.197 us/op
Iteration   4: 1827.739 us/op
Iteration   5: 1846.248 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.LoopControlFlowBenchmark.stream":
  1805.732 ±(99.9%) 27.304 us/op [Average]
  (min, avg, max) = (1749.211, 1805.732, 1846.248), stdev = 25.540
  CI (99.9%): [1778.429, 1833.036] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.LoopControlFlowBenchmark.stream
# Parameters: (size = 262144, upperNullThreshold = 16)

# Run progress: 87.50% complete, ETA 00:05:30
# Fork: 1 of 3
# Warmup Iteration   1: 2654.457 us/op
# Warmup Iteration   2: 1820.381 us/op
# Warmup Iteration   3: 1824.745 us/op
# Warmup Iteration   4: 1799.958 us/op
# Warmup Iteration   5: 1738.070 us/op
Iteration   1: 1745.061 us/op
Iteration   2: 1789.636 us/op
Iteration   3: 1784.118 us/op
Iteration   4: 1849.027 us/op
Iteration   5: 1806.112 us/op

# Run progress: 91.67% complete, ETA 00:03:40
# Fork: 2 of 3
# Warmup Iteration   1: 2617.807 us/op
# Warmup Iteration   2: 1835.255 us/op
# Warmup Iteration   3: 1781.025 us/op
# Warmup Iteration   4: 1795.294 us/op
# Warmup Iteration   5: 1773.350 us/op
Iteration   1: 1770.943 us/op
Iteration   2: 1789.131 us/op
Iteration   3: 1818.098 us/op
Iteration   4: 1773.234 us/op
Iteration   5: 1795.211 us/op

# Run progress: 95.83% complete, ETA 00:01:50
# Fork: 3 of 3
# Warmup Iteration   1: 2620.443 us/op
# Warmup Iteration   2: 1842.864 us/op
# Warmup Iteration   3: 1847.650 us/op
# Warmup Iteration   4: 1741.713 us/op
# Warmup Iteration   5: 1752.573 us/op
Iteration   1: 1826.313 us/op
Iteration   2: 1794.160 us/op
Iteration   3: 1791.279 us/op
Iteration   4: 1819.829 us/op
Iteration   5: 1768.619 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.LoopControlFlowBenchmark.stream":
  1794.718 ±(99.9%) 28.010 us/op [Average]
  (min, avg, max) = (1745.061, 1794.718, 1849.027), stdev = 26.200
  CI (99.9%): [1766.709, 1822.728] (assumes normal distribution)


# Run complete. Total time: 00:44:06

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    (size)  (upperNullThreshold)  Mode  Cnt     Score    Error  Units
LoopControlFlowBenchmark.loop_continue       262144                     0  avgt   15   133.909 ±  2.623  us/op
LoopControlFlowBenchmark.loop_continue       262144                    16  avgt   15   832.509 ± 17.954  us/op
LoopControlFlowBenchmark.loop_if_comparison  262144                     0  avgt   15   131.116 ±  6.734  us/op
LoopControlFlowBenchmark.loop_if_comparison  262144                    16  avgt   15   841.552 ± 25.619  us/op
LoopControlFlowBenchmark.loop_try_catch      262144                     0  avgt   15   131.624 ±  0.363  us/op
LoopControlFlowBenchmark.loop_try_catch      262144                    16  avgt   15  1666.697 ± 66.216  us/op
LoopControlFlowBenchmark.stream              262144                     0  avgt   15  1805.732 ± 27.304  us/op
LoopControlFlowBenchmark.stream              262144                    16  avgt   15  1794.718 ± 28.010  us/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_c1_c2_jit/LoopControlFlowBenchmark.json
Running java  -jar benchmarks/target/benchmarks.jar .*LoopFusionBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_c1_c2_jit/LoopFusionBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.LoopFusionBenchmark.baseline
# Parameters: (size = 262144)

# Run progress: 0.00% complete, ETA 00:10:00
# Fork: 1 of 3
# Warmup Iteration   1: 380.704 us/op
# Warmup Iteration   2: 384.741 us/op
# Warmup Iteration   3: 384.618 us/op
# Warmup Iteration   4: 374.412 us/op
# Warmup Iteration   5: 373.986 us/op
Iteration   1: 373.897 us/op
Iteration   2: 374.247 us/op
Iteration   3: 374.108 us/op
Iteration   4: 374.144 us/op
Iteration   5: 373.784 us/op

# Run progress: 16.67% complete, ETA 00:09:11
# Fork: 2 of 3
# Warmup Iteration   1: 381.894 us/op
# Warmup Iteration   2: 385.939 us/op
# Warmup Iteration   3: 386.305 us/op
# Warmup Iteration   4: 387.408 us/op
# Warmup Iteration   5: 387.256 us/op
Iteration   1: 387.136 us/op
Iteration   2: 386.995 us/op
Iteration   3: 385.535 us/op
Iteration   4: 387.609 us/op
Iteration   5: 387.555 us/op

# Run progress: 33.33% complete, ETA 00:07:21
# Fork: 3 of 3
# Warmup Iteration   1: 381.089 us/op
# Warmup Iteration   2: 385.467 us/op
# Warmup Iteration   3: 385.994 us/op
# Warmup Iteration   4: 386.765 us/op
# Warmup Iteration   5: 386.921 us/op
Iteration   1: 386.330 us/op
Iteration   2: 384.861 us/op
Iteration   3: 385.304 us/op
Iteration   4: 386.573 us/op
Iteration   5: 386.925 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.LoopFusionBenchmark.baseline":
  382.333 ±(99.9%) 6.545 us/op [Average]
  (min, avg, max) = (373.784, 382.333, 387.609), stdev = 6.122
  CI (99.9%): [375.788, 388.879] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.LoopFusionBenchmark.loop_fusion
# Parameters: (size = 262144)

# Run progress: 50.00% complete, ETA 00:05:30
# Fork: 1 of 3
# Warmup Iteration   1: 203.031 us/op
# Warmup Iteration   2: 205.440 us/op
# Warmup Iteration   3: 206.834 us/op
# Warmup Iteration   4: 207.588 us/op
# Warmup Iteration   5: 207.647 us/op
Iteration   1: 207.435 us/op
Iteration   2: 207.667 us/op
Iteration   3: 207.730 us/op
Iteration   4: 207.920 us/op
Iteration   5: 208.043 us/op

# Run progress: 66.67% complete, ETA 00:03:40
# Fork: 2 of 3
# Warmup Iteration   1: 194.135 us/op
# Warmup Iteration   2: 206.838 us/op
# Warmup Iteration   3: 207.513 us/op
# Warmup Iteration   4: 207.313 us/op
# Warmup Iteration   5: 207.317 us/op
Iteration   1: 207.338 us/op
Iteration   2: 207.679 us/op
Iteration   3: 207.840 us/op
Iteration   4: 207.810 us/op
Iteration   5: 207.829 us/op

# Run progress: 83.33% complete, ETA 00:01:50
# Fork: 3 of 3
# Warmup Iteration   1: 204.445 us/op
# Warmup Iteration   2: 205.846 us/op
# Warmup Iteration   3: 206.545 us/op
# Warmup Iteration   4: 206.743 us/op
# Warmup Iteration   5: 207.188 us/op
Iteration   1: 207.069 us/op
Iteration   2: 207.463 us/op
Iteration   3: 207.700 us/op
Iteration   4: 207.832 us/op
Iteration   5: 207.567 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.LoopFusionBenchmark.loop_fusion":
  207.661 ±(99.9%) 0.269 us/op [Average]
  (min, avg, max) = (207.069, 207.661, 208.043), stdev = 0.251
  CI (99.9%): [207.392, 207.930] (assumes normal distribution)


# Run complete. Total time: 00:11:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                        (size)  Mode  Cnt    Score   Error  Units
LoopFusionBenchmark.baseline     262144  avgt   15  382.333 ± 6.545  us/op
LoopFusionBenchmark.loop_fusion  262144  avgt   15  207.661 ± 0.269  us/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_c1_c2_jit/LoopFusionBenchmark.json
Running java  -jar benchmarks/target/benchmarks.jar .*LoopInterchangeBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_c1_c2_jit/LoopInterchangeBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.LoopInterchangeBenchmark.loop
# Parameters: (size = 512)

# Run progress: 0.00% complete, ETA 00:10:00
# Fork: 1 of 3
# Warmup Iteration   1: 368.605 us/op
# Warmup Iteration   2: 367.711 us/op
# Warmup Iteration   3: 369.608 us/op
# Warmup Iteration   4: 369.856 us/op
# Warmup Iteration   5: 372.612 us/op
Iteration   1: 373.736 us/op
Iteration   2: 372.187 us/op
Iteration   3: 344.760 us/op
Iteration   4: 344.815 us/op
Iteration   5: 345.329 us/op

# Run progress: 16.67% complete, ETA 00:09:11
# Fork: 2 of 3
# Warmup Iteration   1: 370.563 us/op
# Warmup Iteration   2: 373.771 us/op
# Warmup Iteration   3: 375.411 us/op
# Warmup Iteration   4: 376.138 us/op
# Warmup Iteration   5: 378.001 us/op
Iteration   1: 377.963 us/op
Iteration   2: 377.704 us/op
Iteration   3: 371.269 us/op
Iteration   4: 371.818 us/op
Iteration   5: 372.656 us/op

# Run progress: 33.33% complete, ETA 00:07:20
# Fork: 3 of 3
# Warmup Iteration   1: 360.461 us/op
# Warmup Iteration   2: 365.048 us/op
# Warmup Iteration   3: 365.659 us/op
# Warmup Iteration   4: 366.693 us/op
# Warmup Iteration   5: 369.479 us/op
Iteration   1: 367.357 us/op
Iteration   2: 339.853 us/op
Iteration   3: 342.467 us/op
Iteration   4: 343.483 us/op
Iteration   5: 345.384 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.LoopInterchangeBenchmark.loop":
  359.385 ±(99.9%) 16.479 us/op [Average]
  (min, avg, max) = (339.853, 359.385, 377.963), stdev = 15.414
  CI (99.9%): [342.907, 375.864] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.LoopInterchangeBenchmark.manual_interchange
# Parameters: (size = 512)

# Run progress: 50.00% complete, ETA 00:05:30
# Fork: 1 of 3
# Warmup Iteration   1: 80.506 us/op
# Warmup Iteration   2: 80.312 us/op
# Warmup Iteration   3: 80.293 us/op
# Warmup Iteration   4: 80.343 us/op
# Warmup Iteration   5: 79.971 us/op
Iteration   1: 80.001 us/op
Iteration   2: 80.000 us/op
Iteration   3: 88.866 us/op
Iteration   4: 88.072 us/op
Iteration   5: 87.762 us/op

# Run progress: 66.67% complete, ETA 00:03:40
# Fork: 2 of 3
# Warmup Iteration   1: 85.107 us/op
# Warmup Iteration   2: 85.975 us/op
# Warmup Iteration   3: 86.260 us/op
# Warmup Iteration   4: 86.389 us/op
# Warmup Iteration   5: 86.418 us/op
Iteration   1: 86.815 us/op
Iteration   2: 86.927 us/op
Iteration   3: 86.887 us/op
Iteration   4: 86.828 us/op
Iteration   5: 86.596 us/op

# Run progress: 83.33% complete, ETA 00:01:50
# Fork: 3 of 3
# Warmup Iteration   1: 80.527 us/op
# Warmup Iteration   2: 80.146 us/op
# Warmup Iteration   3: 79.944 us/op
# Warmup Iteration   4: 79.977 us/op
# Warmup Iteration   5: 79.929 us/op
Iteration   1: 80.418 us/op
Iteration   2: 80.252 us/op
Iteration   3: 81.292 us/op
Iteration   4: 81.243 us/op
Iteration   5: 87.772 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.LoopInterchangeBenchmark.manual_interchange":
  84.649 ±(99.9%) 3.787 us/op [Average]
  (min, avg, max) = (80.000, 84.649, 88.866), stdev = 3.543
  CI (99.9%): [80.862, 88.436] (assumes normal distribution)


# Run complete. Total time: 00:11:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    (size)  Mode  Cnt    Score    Error  Units
LoopInterchangeBenchmark.loop                   512  avgt   15  359.385 ± 16.479  us/op
LoopInterchangeBenchmark.manual_interchange     512  avgt   15   84.649 ±  3.787  us/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_c1_c2_jit/LoopInterchangeBenchmark.json
Running java  -jar benchmarks/target/benchmarks.jar .*LoopInvariantCodeMotionBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_c1_c2_jit/LoopInvariantCodeMotionBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.LoopInvariantCodeMotionBenchmark.loop_with_invariant_code
# Parameters: (iterations = 16384, value = 42)

# Run progress: 0.00% complete, ETA 00:10:00
# Fork: 1 of 3
# Warmup Iteration   1: 2828.787 us/op
# Warmup Iteration   2: 2824.480 us/op
# Warmup Iteration   3: 2824.819 us/op
# Warmup Iteration   4: 2824.617 us/op
# Warmup Iteration   5: 2822.051 us/op
Iteration   1: 2823.839 us/op
Iteration   2: 2824.756 us/op
Iteration   3: 2822.912 us/op
Iteration   4: 2812.796 us/op
Iteration   5: 2806.692 us/op

# Run progress: 16.67% complete, ETA 00:09:11
# Fork: 2 of 3
# Warmup Iteration   1: 2841.636 us/op
# Warmup Iteration   2: 2872.376 us/op
# Warmup Iteration   3: 2880.085 us/op
# Warmup Iteration   4: 2882.446 us/op
# Warmup Iteration   5: 2878.768 us/op
Iteration   1: 2879.830 us/op
Iteration   2: 2867.236 us/op
Iteration   3: 2873.093 us/op
Iteration   4: 2884.855 us/op
Iteration   5: 2888.534 us/op

# Run progress: 33.33% complete, ETA 00:07:21
# Fork: 3 of 3
# Warmup Iteration   1: 2841.857 us/op
# Warmup Iteration   2: 2867.726 us/op
# Warmup Iteration   3: 2881.675 us/op
# Warmup Iteration   4: 2890.309 us/op
# Warmup Iteration   5: 2888.267 us/op
Iteration   1: 2895.192 us/op
Iteration   2: 2887.963 us/op
Iteration   3: 2881.160 us/op
Iteration   4: 2877.584 us/op
Iteration   5: 2889.135 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.LoopInvariantCodeMotionBenchmark.loop_with_invariant_code":
  2861.038 ±(99.9%) 34.587 us/op [Average]
  (min, avg, max) = (2806.692, 2861.038, 2895.192), stdev = 32.353
  CI (99.9%): [2826.451, 2895.626] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.LoopInvariantCodeMotionBenchmark.manual_hoisting_and_sinking
# Parameters: (iterations = 16384, value = 42)

# Run progress: 50.00% complete, ETA 00:05:30
# Fork: 1 of 3
# Warmup Iteration   1: 790.821 us/op
# Warmup Iteration   2: 790.347 us/op
# Warmup Iteration   3: 791.363 us/op
# Warmup Iteration   4: 792.474 us/op
# Warmup Iteration   5: 790.325 us/op
Iteration   1: 794.005 us/op
Iteration   2: 793.543 us/op
Iteration   3: 792.584 us/op
Iteration   4: 815.895 us/op
Iteration   5: 793.369 us/op

# Run progress: 66.67% complete, ETA 00:03:40
# Fork: 2 of 3
# Warmup Iteration   1: 787.323 us/op
# Warmup Iteration   2: 790.140 us/op
# Warmup Iteration   3: 791.401 us/op
# Warmup Iteration   4: 789.650 us/op
# Warmup Iteration   5: 789.250 us/op
Iteration   1: 790.088 us/op
Iteration   2: 787.569 us/op
Iteration   3: 789.985 us/op
Iteration   4: 816.899 us/op
Iteration   5: 788.754 us/op

# Run progress: 83.33% complete, ETA 00:01:50
# Fork: 3 of 3
# Warmup Iteration   1: 792.105 us/op
# Warmup Iteration   2: 791.443 us/op
# Warmup Iteration   3: 789.822 us/op
# Warmup Iteration   4: 786.475 us/op
# Warmup Iteration   5: 789.204 us/op
Iteration   1: 786.084 us/op
Iteration   2: 789.340 us/op
Iteration   3: 789.488 us/op
Iteration   4: 817.160 us/op
Iteration   5: 789.887 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.LoopInvariantCodeMotionBenchmark.manual_hoisting_and_sinking":
  795.643 ±(99.9%) 11.864 us/op [Average]
  (min, avg, max) = (786.084, 795.643, 817.160), stdev = 11.098
  CI (99.9%): [783.779, 807.507] (assumes normal distribution)


# Run complete. Total time: 00:11:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                                     (iterations)  (value)  Mode  Cnt     Score    Error  Units
LoopInvariantCodeMotionBenchmark.loop_with_invariant_code            16384       42  avgt   15  2861.038 ± 34.587  us/op
LoopInvariantCodeMotionBenchmark.manual_hoisting_and_sinking         16384       42  avgt   15   795.643 ± 11.864  us/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_c1_c2_jit/LoopInvariantCodeMotionBenchmark.json
Running java  -jar benchmarks/target/benchmarks.jar .*LoopReductionBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_c1_c2_jit/LoopReductionBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.LoopReductionBenchmark.baseline
# Parameters: (iterations = 1048576, offset = 128)

# Run progress: 0.00% complete, ETA 00:10:00
# Fork: 1 of 3
# Warmup Iteration   1: 0.526 ns/op
# Warmup Iteration   2: 0.542 ns/op
# Warmup Iteration   3: 0.551 ns/op
# Warmup Iteration   4: 0.553 ns/op
# Warmup Iteration   5: 0.555 ns/op
Iteration   1: 0.554 ns/op
Iteration   2: 0.557 ns/op
Iteration   3: 0.556 ns/op
Iteration   4: 0.557 ns/op
Iteration   5: 0.555 ns/op

# Run progress: 16.67% complete, ETA 00:09:11
# Fork: 2 of 3
# Warmup Iteration   1: 0.570 ns/op
# Warmup Iteration   2: 0.529 ns/op
# Warmup Iteration   3: 0.551 ns/op
# Warmup Iteration   4: 0.554 ns/op
# Warmup Iteration   5: 0.555 ns/op
Iteration   1: 0.548 ns/op
Iteration   2: 0.548 ns/op
Iteration   3: 0.548 ns/op
Iteration   4: 0.548 ns/op
Iteration   5: 0.548 ns/op

# Run progress: 33.33% complete, ETA 00:07:21
# Fork: 3 of 3
# Warmup Iteration   1: 0.575 ns/op
# Warmup Iteration   2: 0.580 ns/op
# Warmup Iteration   3: 0.593 ns/op
# Warmup Iteration   4: 0.592 ns/op
# Warmup Iteration   5: 0.592 ns/op
Iteration   1: 0.592 ns/op
Iteration   2: 0.590 ns/op
Iteration   3: 0.591 ns/op
Iteration   4: 0.593 ns/op
Iteration   5: 0.590 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.LoopReductionBenchmark.baseline":
  0.565 ±(99.9%) 0.021 ns/op [Average]
  (min, avg, max) = (0.548, 0.565, 0.593), stdev = 0.020
  CI (99.9%): [0.544, 0.586] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.LoopReductionBenchmark.loop_reduction
# Parameters: (iterations = 1048576, offset = 128)

# Run progress: 50.00% complete, ETA 00:05:30
# Fork: 1 of 3
# Warmup Iteration   1: 2.062 ns/op
# Warmup Iteration   2: 2.116 ns/op
# Warmup Iteration   3: 1.990 ns/op
# Warmup Iteration   4: 1.992 ns/op
# Warmup Iteration   5: 1.992 ns/op
Iteration   1: 1.999 ns/op
Iteration   2: 2.000 ns/op
Iteration   3: 2.000 ns/op
Iteration   4: 2.004 ns/op
Iteration   5: 1.964 ns/op

# Run progress: 66.67% complete, ETA 00:03:40
# Fork: 2 of 3
# Warmup Iteration   1: 2.240 ns/op
# Warmup Iteration   2: 2.298 ns/op
# Warmup Iteration   3: 2.139 ns/op
# Warmup Iteration   4: 2.127 ns/op
# Warmup Iteration   5: 2.130 ns/op
Iteration   1: 2.128 ns/op
Iteration   2: 2.128 ns/op
Iteration   3: 2.127 ns/op
Iteration   4: 2.129 ns/op
Iteration   5: 2.133 ns/op

# Run progress: 83.33% complete, ETA 00:01:50
# Fork: 3 of 3
# Warmup Iteration   1: 2.208 ns/op
# Warmup Iteration   2: 2.278 ns/op
# Warmup Iteration   3: 2.127 ns/op
# Warmup Iteration   4: 2.131 ns/op
# Warmup Iteration   5: 2.130 ns/op
Iteration   1: 2.129 ns/op
Iteration   2: 1.998 ns/op
Iteration   3: 1.995 ns/op
Iteration   4: 1.992 ns/op
Iteration   5: 1.997 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.LoopReductionBenchmark.loop_reduction":
  2.048 ±(99.9%) 0.074 ns/op [Average]
  (min, avg, max) = (1.964, 2.048, 2.133), stdev = 0.069
  CI (99.9%): [1.975, 2.122] (assumes normal distribution)


# Run complete. Total time: 00:11:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                              (iterations)  (offset)  Mode  Cnt  Score   Error  Units
LoopReductionBenchmark.baseline             1048576       128  avgt   15  0.565 ± 0.021  ns/op
LoopReductionBenchmark.loop_reduction       1048576       128  avgt   15  2.048 ± 0.074  ns/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_c1_c2_jit/LoopReductionBenchmark.json
Running java  -jar benchmarks/target/benchmarks.jar .*LoopUnswitchBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_c1_c2_jit/LoopUnswitchBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.LoopUnswitchBenchmark.baseline
# Parameters: (magicNumber = 64, size = 262144)

# Run progress: 0.00% complete, ETA 00:10:00
# Fork: 1 of 3
# Warmup Iteration   1: 397.341 us/op
# Warmup Iteration   2: 403.467 us/op
# Warmup Iteration   3: 402.178 us/op
# Warmup Iteration   4: 402.080 us/op
# Warmup Iteration   5: 402.402 us/op
Iteration   1: 379.569 us/op
Iteration   2: 382.284 us/op
Iteration   3: 382.139 us/op
Iteration   4: 382.240 us/op
Iteration   5: 382.238 us/op

# Run progress: 16.67% complete, ETA 00:09:11
# Fork: 2 of 3
# Warmup Iteration   1: 392.290 us/op
# Warmup Iteration   2: 392.242 us/op
# Warmup Iteration   3: 391.658 us/op
# Warmup Iteration   4: 391.338 us/op
# Warmup Iteration   5: 391.872 us/op
Iteration   1: 390.382 us/op
Iteration   2: 391.764 us/op
Iteration   3: 391.722 us/op
Iteration   4: 391.562 us/op
Iteration   5: 391.690 us/op

# Run progress: 33.33% complete, ETA 00:07:21
# Fork: 3 of 3
# Warmup Iteration   1: 404.166 us/op
# Warmup Iteration   2: 421.375 us/op
# Warmup Iteration   3: 423.566 us/op
# Warmup Iteration   4: 423.711 us/op
# Warmup Iteration   5: 424.431 us/op
Iteration   1: 425.144 us/op
Iteration   2: 424.143 us/op
Iteration   3: 424.603 us/op
Iteration   4: 424.620 us/op
Iteration   5: 424.750 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.LoopUnswitchBenchmark.baseline":
  399.257 ±(99.9%) 20.367 us/op [Average]
  (min, avg, max) = (379.569, 399.257, 425.144), stdev = 19.051
  CI (99.9%): [378.890, 419.623] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.LoopUnswitchBenchmark.loop_unswitch
# Parameters: (magicNumber = 64, size = 262144)

# Run progress: 50.00% complete, ETA 00:05:30
# Fork: 1 of 3
# Warmup Iteration   1: 1104.502 us/op
# Warmup Iteration   2: 1122.359 us/op
# Warmup Iteration   3: 1125.748 us/op
# Warmup Iteration   4: 1126.585 us/op
# Warmup Iteration   5: 1126.499 us/op
Iteration   1: 1128.281 us/op
Iteration   2: 1130.244 us/op
Iteration   3: 1131.758 us/op
Iteration   4: 1129.332 us/op
Iteration   5: 1129.377 us/op

# Run progress: 66.67% complete, ETA 00:03:40
# Fork: 2 of 3
# Warmup Iteration   1: 1170.276 us/op
# Warmup Iteration   2: 1184.360 us/op
# Warmup Iteration   3: 1190.335 us/op
# Warmup Iteration   4: 1194.031 us/op
# Warmup Iteration   5: 1195.417 us/op
Iteration   1: 1195.153 us/op
Iteration   2: 1195.668 us/op
Iteration   3: 1196.078 us/op
Iteration   4: 1196.742 us/op
Iteration   5: 1196.962 us/op

# Run progress: 83.33% complete, ETA 00:01:50
# Fork: 3 of 3
# Warmup Iteration   1: 1124.919 us/op
# Warmup Iteration   2: 1133.177 us/op
# Warmup Iteration   3: 1139.274 us/op
# Warmup Iteration   4: 1141.307 us/op
# Warmup Iteration   5: 1239.069 us/op
Iteration   1: 1229.858 us/op
Iteration   2: 1226.455 us/op
Iteration   3: 1224.607 us/op
Iteration   4: 1226.307 us/op
Iteration   5: 1227.047 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.LoopUnswitchBenchmark.loop_unswitch":
  1184.258 ±(99.9%) 44.839 us/op [Average]
  (min, avg, max) = (1128.281, 1184.258, 1229.858), stdev = 41.943
  CI (99.9%): [1139.418, 1229.097] (assumes normal distribution)


# Run complete. Total time: 00:11:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                            (magicNumber)  (size)  Mode  Cnt     Score    Error  Units
LoopUnswitchBenchmark.baseline                  64  262144  avgt   15   399.257 ± 20.367  us/op
LoopUnswitchBenchmark.loop_unswitch             64  262144  avgt   15  1184.258 ± 44.839  us/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_c1_c2_jit/LoopUnswitchBenchmark.json
Running java  -jar benchmarks/target/benchmarks.jar .*ListLoopIteratorBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_c1_c2_jit/ListLoopIteratorBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ListLoopIteratorBenchmark.counted_loop
# Parameters: (size = 262144)

# Run progress: 0.00% complete, ETA 00:30:00
# Fork: 1 of 3
# Warmup Iteration   1: 989.771 us/op
# Warmup Iteration   2: 1002.664 us/op
# Warmup Iteration   3: 1004.340 us/op
# Warmup Iteration   4: 1006.390 us/op
# Warmup Iteration   5: 1003.084 us/op
Iteration   1: 1004.471 us/op
Iteration   2: 1006.923 us/op
Iteration   3: 1005.288 us/op
Iteration   4: 1006.718 us/op
Iteration   5: 1006.812 us/op

# Run progress: 5.56% complete, ETA 00:31:14
# Fork: 2 of 3
# Warmup Iteration   1: 986.325 us/op
# Warmup Iteration   2: 922.108 us/op
# Warmup Iteration   3: 929.581 us/op
# Warmup Iteration   4: 932.586 us/op
# Warmup Iteration   5: 934.773 us/op
Iteration   1: 935.584 us/op
Iteration   2: 935.644 us/op
Iteration   3: 1023.948 us/op
Iteration   4: 1020.094 us/op
Iteration   5: 1041.353 us/op

# Run progress: 11.11% complete, ETA 00:29:23
# Fork: 3 of 3
# Warmup Iteration   1: 988.819 us/op
# Warmup Iteration   2: 999.894 us/op
# Warmup Iteration   3: 1000.340 us/op
# Warmup Iteration   4: 922.902 us/op
# Warmup Iteration   5: 931.414 us/op
Iteration   1: 934.405 us/op
Iteration   2: 934.601 us/op
Iteration   3: 936.465 us/op
Iteration   4: 936.407 us/op
Iteration   5: 1048.775 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.ListLoopIteratorBenchmark.counted_loop":
  985.166 ±(99.9%) 46.865 us/op [Average]
  (min, avg, max) = (934.405, 985.166, 1048.775), stdev = 43.838
  CI (99.9%): [938.301, 1032.031] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ListLoopIteratorBenchmark.do_while_loop
# Parameters: (size = 262144)

# Run progress: 16.67% complete, ETA 00:27:33
# Fork: 1 of 3
# Warmup Iteration   1: 999.652 us/op
# Warmup Iteration   2: 1010.909 us/op
# Warmup Iteration   3: 1010.956 us/op
# Warmup Iteration   4: 1013.541 us/op
# Warmup Iteration   5: 1014.927 us/op
Iteration   1: 1012.565 us/op
Iteration   2: 1013.359 us/op
Iteration   3: 1011.991 us/op
Iteration   4: 1012.606 us/op
Iteration   5: 1014.466 us/op

# Run progress: 22.22% complete, ETA 00:25:43
# Fork: 2 of 3
# Warmup Iteration   1: 998.891 us/op
# Warmup Iteration   2: 939.472 us/op
# Warmup Iteration   3: 946.293 us/op
# Warmup Iteration   4: 948.790 us/op
# Warmup Iteration   5: 952.016 us/op
Iteration   1: 956.151 us/op
Iteration   2: 954.938 us/op
Iteration   3: 957.683 us/op
Iteration   4: 959.224 us/op
Iteration   5: 970.207 us/op

# Run progress: 27.78% complete, ETA 00:23:53
# Fork: 3 of 3
# Warmup Iteration   1: 1053.673 us/op
# Warmup Iteration   2: 1062.139 us/op
# Warmup Iteration   3: 1064.198 us/op
# Warmup Iteration   4: 1064.548 us/op
# Warmup Iteration   5: 1063.295 us/op
Iteration   1: 1064.131 us/op
Iteration   2: 1079.574 us/op
Iteration   3: 1021.942 us/op
Iteration   4: 1025.101 us/op
Iteration   5: 1028.821 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.ListLoopIteratorBenchmark.do_while_loop":
  1005.517 ±(99.9%) 41.477 us/op [Average]
  (min, avg, max) = (954.938, 1005.517, 1079.574), stdev = 38.797
  CI (99.9%): [964.041, 1046.994] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ListLoopIteratorBenchmark.for_each
# Parameters: (size = 262144)

# Run progress: 33.33% complete, ETA 00:22:03
# Fork: 1 of 3
# Warmup Iteration   1: 1017.474 us/op
# Warmup Iteration   2: 1032.744 us/op
# Warmup Iteration   3: 1037.807 us/op
# Warmup Iteration   4: 1038.315 us/op
# Warmup Iteration   5: 1040.894 us/op
Iteration   1: 1040.293 us/op
Iteration   2: 1043.316 us/op
Iteration   3: 1043.453 us/op
Iteration   4: 1043.087 us/op
Iteration   5: 1044.006 us/op

# Run progress: 38.89% complete, ETA 00:20:12
# Fork: 2 of 3
# Warmup Iteration   1: 1017.811 us/op
# Warmup Iteration   2: 1024.921 us/op
# Warmup Iteration   3: 1025.830 us/op
# Warmup Iteration   4: 1025.462 us/op
# Warmup Iteration   5: 1027.177 us/op
Iteration   1: 1025.840 us/op
Iteration   2: 1027.643 us/op
Iteration   3: 1030.494 us/op
Iteration   4: 1030.884 us/op
Iteration   5: 1027.076 us/op

# Run progress: 44.44% complete, ETA 00:18:22
# Fork: 3 of 3
# Warmup Iteration   1: 932.412 us/op
# Warmup Iteration   2: 958.380 us/op
# Warmup Iteration   3: 964.043 us/op
# Warmup Iteration   4: 965.425 us/op
# Warmup Iteration   5: 1039.676 us/op
Iteration   1: 1036.505 us/op
Iteration   2: 1031.821 us/op
Iteration   3: 1029.418 us/op
Iteration   4: 1028.966 us/op
Iteration   5: 1028.442 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.ListLoopIteratorBenchmark.for_each":
  1034.083 ±(99.9%) 7.360 us/op [Average]
  (min, avg, max) = (1025.840, 1034.083, 1044.006), stdev = 6.884
  CI (99.9%): [1026.723, 1041.443] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ListLoopIteratorBenchmark.for_each_with_consumer
# Parameters: (size = 262144)

# Run progress: 50.00% complete, ETA 00:16:32
# Fork: 1 of 3
# Warmup Iteration   1: 1112.027 us/op
# Warmup Iteration   2: 1056.444 us/op
# Warmup Iteration   3: 1060.494 us/op
# Warmup Iteration   4: 1062.002 us/op
# Warmup Iteration   5: 1060.820 us/op
Iteration   1: 1061.348 us/op
Iteration   2: 1112.808 us/op
Iteration   3: 1161.044 us/op
Iteration   4: 1162.774 us/op
Iteration   5: 1163.619 us/op

# Run progress: 55.56% complete, ETA 00:14:41
# Fork: 2 of 3
# Warmup Iteration   1: 1132.580 us/op
# Warmup Iteration   2: 1114.893 us/op
# Warmup Iteration   3: 1114.567 us/op
# Warmup Iteration   4: 1117.666 us/op
# Warmup Iteration   5: 1118.869 us/op
Iteration   1: 1120.375 us/op
Iteration   2: 1126.380 us/op
Iteration   3: 1157.876 us/op
Iteration   4: 1159.776 us/op
Iteration   5: 1162.286 us/op

# Run progress: 61.11% complete, ETA 00:12:51
# Fork: 3 of 3
# Warmup Iteration   1: 1033.939 us/op
# Warmup Iteration   2: 984.738 us/op
# Warmup Iteration   3: 988.935 us/op
# Warmup Iteration   4: 993.268 us/op
# Warmup Iteration   5: 996.278 us/op
Iteration   1: 997.682 us/op
Iteration   2: 1087.997 us/op
Iteration   3: 1099.553 us/op
Iteration   4: 1079.845 us/op
Iteration   5: 1081.337 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.ListLoopIteratorBenchmark.for_each_with_consumer":
  1115.647 ±(99.9%) 51.889 us/op [Average]
  (min, avg, max) = (997.682, 1115.647, 1163.619), stdev = 48.537
  CI (99.9%): [1063.758, 1167.535] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ListLoopIteratorBenchmark.loop_iterator
# Parameters: (size = 262144)

# Run progress: 66.67% complete, ETA 00:11:01
# Fork: 1 of 3
# Warmup Iteration   1: 902.528 us/op
# Warmup Iteration   2: 897.801 us/op
# Warmup Iteration   3: 902.109 us/op
# Warmup Iteration   4: 905.644 us/op
# Warmup Iteration   5: 906.960 us/op
Iteration   1: 909.607 us/op
Iteration   2: 909.388 us/op
Iteration   3: 910.513 us/op
Iteration   4: 910.494 us/op
Iteration   5: 989.229 us/op

# Run progress: 72.22% complete, ETA 00:09:11
# Fork: 2 of 3
# Warmup Iteration   1: 966.543 us/op
# Warmup Iteration   2: 972.863 us/op
# Warmup Iteration   3: 973.060 us/op
# Warmup Iteration   4: 975.090 us/op
# Warmup Iteration   5: 974.935 us/op
Iteration   1: 973.808 us/op
Iteration   2: 972.859 us/op
Iteration   3: 972.954 us/op
Iteration   4: 972.734 us/op
Iteration   5: 977.036 us/op

# Run progress: 77.78% complete, ETA 00:07:20
# Fork: 3 of 3
# Warmup Iteration   1: 956.280 us/op
# Warmup Iteration   2: 966.743 us/op
# Warmup Iteration   3: 968.210 us/op
# Warmup Iteration   4: 967.957 us/op
# Warmup Iteration   5: 967.536 us/op
Iteration   1: 969.635 us/op
Iteration   2: 968.627 us/op
Iteration   3: 967.132 us/op
Iteration   4: 968.275 us/op
Iteration   5: 980.221 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.ListLoopIteratorBenchmark.loop_iterator":
  956.834 ±(99.9%) 31.786 us/op [Average]
  (min, avg, max) = (909.388, 956.834, 989.229), stdev = 29.733
  CI (99.9%): [925.048, 988.620] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ListLoopIteratorBenchmark.while_loop
# Parameters: (size = 262144)

# Run progress: 83.33% complete, ETA 00:05:30
# Fork: 1 of 3
# Warmup Iteration   1: 922.495 us/op
# Warmup Iteration   2: 992.348 us/op
# Warmup Iteration   3: 994.526 us/op
# Warmup Iteration   4: 921.924 us/op
# Warmup Iteration   5: 928.758 us/op
Iteration   1: 932.480 us/op
Iteration   2: 934.680 us/op
Iteration   3: 935.348 us/op
Iteration   4: 935.306 us/op
Iteration   5: 981.673 us/op

# Run progress: 88.89% complete, ETA 00:03:40
# Fork: 2 of 3
# Warmup Iteration   1: 917.782 us/op
# Warmup Iteration   2: 1004.725 us/op
# Warmup Iteration   3: 1005.120 us/op
# Warmup Iteration   4: 1004.089 us/op
# Warmup Iteration   5: 1003.028 us/op
Iteration   1: 999.775 us/op
Iteration   2: 999.584 us/op
Iteration   3: 1030.073 us/op
Iteration   4: 1025.249 us/op
Iteration   5: 1015.930 us/op

# Run progress: 94.44% complete, ETA 00:01:50
# Fork: 3 of 3
# Warmup Iteration   1: 982.893 us/op
# Warmup Iteration   2: 934.286 us/op
# Warmup Iteration   3: 937.211 us/op
# Warmup Iteration   4: 940.395 us/op
# Warmup Iteration   5: 943.122 us/op
Iteration   1: 945.355 us/op
Iteration   2: 946.481 us/op
Iteration   3: 946.599 us/op
Iteration   4: 947.400 us/op
Iteration   5: 989.661 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.ListLoopIteratorBenchmark.while_loop":
  971.040 ±(99.9%) 38.670 us/op [Average]
  (min, avg, max) = (932.480, 971.040, 1030.073), stdev = 36.172
  CI (99.9%): [932.370, 1009.710] (assumes normal distribution)


# Run complete. Total time: 00:33:04

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                         (size)  Mode  Cnt     Score    Error  Units
ListLoopIteratorBenchmark.counted_loop            262144  avgt   15   985.166 ± 46.865  us/op
ListLoopIteratorBenchmark.do_while_loop           262144  avgt   15  1005.517 ± 41.477  us/op
ListLoopIteratorBenchmark.for_each                262144  avgt   15  1034.083 ±  7.360  us/op
ListLoopIteratorBenchmark.for_each_with_consumer  262144  avgt   15  1115.647 ± 51.889  us/op
ListLoopIteratorBenchmark.loop_iterator           262144  avgt   15   956.834 ± 31.786  us/op
ListLoopIteratorBenchmark.while_loop              262144  avgt   15   971.040 ± 38.670  us/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_c1_c2_jit/ListLoopIteratorBenchmark.json
Running java  -jar benchmarks/target/benchmarks.jar .*ScalarEvolutionAndLoopOptimizationBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_c1_c2_jit/ScalarEvolutionAndLoopOptimizationBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ScalarEvolutionAndLoopOptimizationBenchmark.reduction_formula
# Parameters: (size = 16384)

# Run progress: 0.00% complete, ETA 00:10:00
# Fork: 1 of 3
# Warmup Iteration   1: 2.724 ns/op
# Warmup Iteration   2: 2.753 ns/op
# Warmup Iteration   3: 2.524 ns/op
# Warmup Iteration   4: 2.534 ns/op
# Warmup Iteration   5: 2.535 ns/op
Iteration   1: 2.541 ns/op
Iteration   2: 2.541 ns/op
Iteration   3: 2.543 ns/op
Iteration   4: 2.543 ns/op
Iteration   5: 2.546 ns/op

# Run progress: 16.67% complete, ETA 00:09:11
# Fork: 2 of 3
# Warmup Iteration   1: 2.729 ns/op
# Warmup Iteration   2: 2.946 ns/op
# Warmup Iteration   3: 2.684 ns/op
# Warmup Iteration   4: 2.685 ns/op
# Warmup Iteration   5: 2.684 ns/op
Iteration   1: 2.682 ns/op
Iteration   2: 2.705 ns/op
Iteration   3: 2.704 ns/op
Iteration   4: 2.704 ns/op
Iteration   5: 2.706 ns/op

# Run progress: 33.33% complete, ETA 00:07:20
# Fork: 3 of 3
# Warmup Iteration   1: 2.709 ns/op
# Warmup Iteration   2: 2.696 ns/op
# Warmup Iteration   3: 2.481 ns/op
# Warmup Iteration   4: 2.487 ns/op
# Warmup Iteration   5: 2.486 ns/op
Iteration   1: 2.487 ns/op
Iteration   2: 2.488 ns/op
Iteration   3: 2.489 ns/op
Iteration   4: 2.492 ns/op
Iteration   5: 2.723 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ScalarEvolutionAndLoopOptimizationBenchmark.reduction_formula":
  2.593 ±(99.9%) 0.103 ns/op [Average]
  (min, avg, max) = (2.487, 2.593, 2.723), stdev = 0.097
  CI (99.9%): [2.489, 2.696] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ScalarEvolutionAndLoopOptimizationBenchmark.sum_from_0_to_N
# Parameters: (size = 16384)

# Run progress: 50.00% complete, ETA 00:05:30
# Fork: 1 of 3
# Warmup Iteration   1: 4458.366 ns/op
# Warmup Iteration   2: 4454.078 ns/op
# Warmup Iteration   3: 4449.468 ns/op
# Warmup Iteration   4: 4448.033 ns/op
# Warmup Iteration   5: 4443.985 ns/op
Iteration   1: 4448.491 ns/op
Iteration   2: 4442.801 ns/op
Iteration   3: 4452.445 ns/op
Iteration   4: 4448.198 ns/op
Iteration   5: 4445.603 ns/op

# Run progress: 66.67% complete, ETA 00:03:40
# Fork: 2 of 3
# Warmup Iteration   1: 4446.483 ns/op
# Warmup Iteration   2: 4453.150 ns/op
# Warmup Iteration   3: 4450.479 ns/op
# Warmup Iteration   4: 4453.658 ns/op
# Warmup Iteration   5: 4450.885 ns/op
Iteration   1: 4445.041 ns/op
Iteration   2: 4450.936 ns/op
Iteration   3: 4442.414 ns/op
Iteration   4: 4449.219 ns/op
Iteration   5: 4448.916 ns/op

# Run progress: 83.33% complete, ETA 00:01:50
# Fork: 3 of 3
# Warmup Iteration   1: 4456.085 ns/op
# Warmup Iteration   2: 4452.208 ns/op
# Warmup Iteration   3: 4447.906 ns/op
# Warmup Iteration   4: 4446.617 ns/op
# Warmup Iteration   5: 4448.372 ns/op
Iteration   1: 4441.280 ns/op
Iteration   2: 4447.212 ns/op
Iteration   3: 4446.892 ns/op
Iteration   4: 4443.384 ns/op
Iteration   5: 4418.100 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ScalarEvolutionAndLoopOptimizationBenchmark.sum_from_0_to_N":
  4444.729 ±(99.9%) 8.598 ns/op [Average]
  (min, avg, max) = (4418.100, 4444.729, 4452.445), stdev = 8.042
  CI (99.9%): [4436.131, 4453.327] (assumes normal distribution)


# Run complete. Total time: 00:11:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                                      (size)  Mode  Cnt     Score   Error  Units
ScalarEvolutionAndLoopOptimizationBenchmark.reduction_formula   16384  avgt   15     2.593 ± 0.103  ns/op
ScalarEvolutionAndLoopOptimizationBenchmark.sum_from_0_to_N     16384  avgt   15  4444.729 ± 8.598  ns/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_c1_c2_jit/ScalarEvolutionAndLoopOptimizationBenchmark.json
Running java  -jar benchmarks/target/benchmarks.jar .*StraightenCodeBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_c1_c2_jit/StraightenCodeBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StraightenCodeBenchmark.straighten_1_int
# Parameters: (size = 65536)

# Run progress: 0.00% complete, ETA 00:30:00
# Fork: 1 of 3
# Warmup Iteration   1: 244.115 us/op
# Warmup Iteration   2: 243.552 us/op
# Warmup Iteration   3: 244.697 us/op
# Warmup Iteration   4: 248.194 us/op
# Warmup Iteration   5: 247.665 us/op
Iteration   1: 247.340 us/op
Iteration   2: 248.122 us/op
Iteration   3: 247.941 us/op
Iteration   4: 248.190 us/op
Iteration   5: 248.751 us/op

# Run progress: 5.56% complete, ETA 00:31:14
# Fork: 2 of 3
# Warmup Iteration   1: 243.998 us/op
# Warmup Iteration   2: 249.505 us/op
# Warmup Iteration   3: 249.528 us/op
# Warmup Iteration   4: 250.774 us/op
# Warmup Iteration   5: 251.330 us/op
Iteration   1: 250.971 us/op
Iteration   2: 251.469 us/op
Iteration   3: 251.358 us/op
Iteration   4: 251.365 us/op
Iteration   5: 251.460 us/op

# Run progress: 11.11% complete, ETA 00:29:24
# Fork: 3 of 3
# Warmup Iteration   1: 251.860 us/op
# Warmup Iteration   2: 250.627 us/op
# Warmup Iteration   3: 253.502 us/op
# Warmup Iteration   4: 250.608 us/op
# Warmup Iteration   5: 244.304 us/op
Iteration   1: 243.962 us/op
Iteration   2: 244.067 us/op
Iteration   3: 244.044 us/op
Iteration   4: 253.687 us/op
Iteration   5: 253.272 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.StraightenCodeBenchmark.straighten_1_int":
  249.067 ±(99.9%) 3.464 us/op [Average]
  (min, avg, max) = (243.962, 249.067, 253.687), stdev = 3.240
  CI (99.9%): [245.603, 252.531] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StraightenCodeBenchmark.straighten_1_long
# Parameters: (size = 65536)

# Run progress: 16.67% complete, ETA 00:27:33
# Fork: 1 of 3
# Warmup Iteration   1: 243.644 us/op
# Warmup Iteration   2: 244.564 us/op
# Warmup Iteration   3: 241.892 us/op
# Warmup Iteration   4: 239.693 us/op
# Warmup Iteration   5: 239.588 us/op
Iteration   1: 239.527 us/op
Iteration   2: 239.595 us/op
Iteration   3: 239.628 us/op
Iteration   4: 239.743 us/op
Iteration   5: 239.619 us/op

# Run progress: 22.22% complete, ETA 00:25:43
# Fork: 2 of 3
# Warmup Iteration   1: 236.152 us/op
# Warmup Iteration   2: 243.582 us/op
# Warmup Iteration   3: 246.386 us/op
# Warmup Iteration   4: 246.060 us/op
# Warmup Iteration   5: 245.098 us/op
Iteration   1: 246.669 us/op
Iteration   2: 245.689 us/op
Iteration   3: 246.846 us/op
Iteration   4: 246.639 us/op
Iteration   5: 246.927 us/op

# Run progress: 27.78% complete, ETA 00:23:53
# Fork: 3 of 3
# Warmup Iteration   1: 247.337 us/op
# Warmup Iteration   2: 250.157 us/op
# Warmup Iteration   3: 247.063 us/op
# Warmup Iteration   4: 244.737 us/op
# Warmup Iteration   5: 245.854 us/op
Iteration   1: 236.915 us/op
Iteration   2: 236.720 us/op
Iteration   3: 236.796 us/op
Iteration   4: 236.969 us/op
Iteration   5: 236.980 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.StraightenCodeBenchmark.straighten_1_long":
  241.017 ±(99.9%) 4.516 us/op [Average]
  (min, avg, max) = (236.720, 241.017, 246.927), stdev = 4.224
  CI (99.9%): [236.501, 245.533] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StraightenCodeBenchmark.straighten_2_int
# Parameters: (size = 65536)

# Run progress: 33.33% complete, ETA 00:22:02
# Fork: 1 of 3
# Warmup Iteration   1: 219.173 us/op
# Warmup Iteration   2: 221.091 us/op
# Warmup Iteration   3: 243.295 us/op
# Warmup Iteration   4: 264.462 us/op
# Warmup Iteration   5: 255.981 us/op
Iteration   1: 255.831 us/op
Iteration   2: 255.981 us/op
Iteration   3: 255.801 us/op
Iteration   4: 254.931 us/op
Iteration   5: 255.826 us/op

# Run progress: 38.89% complete, ETA 00:20:12
# Fork: 2 of 3
# Warmup Iteration   1: 220.161 us/op
# Warmup Iteration   2: 222.323 us/op
# Warmup Iteration   3: 242.496 us/op
# Warmup Iteration   4: 267.918 us/op
# Warmup Iteration   5: 267.701 us/op
Iteration   1: 267.806 us/op
Iteration   2: 268.451 us/op
Iteration   3: 268.658 us/op
Iteration   4: 268.625 us/op
Iteration   5: 267.801 us/op

# Run progress: 44.44% complete, ETA 00:18:22
# Fork: 3 of 3
# Warmup Iteration   1: 216.714 us/op
# Warmup Iteration   2: 216.635 us/op
# Warmup Iteration   3: 233.451 us/op
# Warmup Iteration   4: 256.614 us/op
# Warmup Iteration   5: 256.579 us/op
Iteration   1: 256.661 us/op
Iteration   2: 256.217 us/op
Iteration   3: 256.350 us/op
Iteration   4: 256.698 us/op
Iteration   5: 256.645 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.StraightenCodeBenchmark.straighten_2_int":
  260.152 ±(99.9%) 6.372 us/op [Average]
  (min, avg, max) = (254.931, 260.152, 268.658), stdev = 5.961
  CI (99.9%): [253.780, 266.525] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StraightenCodeBenchmark.straighten_2_long
# Parameters: (size = 65536)

# Run progress: 50.00% complete, ETA 00:16:32
# Fork: 1 of 3
# Warmup Iteration   1: 222.459 us/op
# Warmup Iteration   2: 225.858 us/op
# Warmup Iteration   3: 229.398 us/op
# Warmup Iteration   4: 223.931 us/op
# Warmup Iteration   5: 223.974 us/op
Iteration   1: 224.540 us/op
Iteration   2: 225.040 us/op
Iteration   3: 224.868 us/op
Iteration   4: 225.127 us/op
Iteration   5: 224.770 us/op

# Run progress: 55.56% complete, ETA 00:14:41
# Fork: 2 of 3
# Warmup Iteration   1: 220.424 us/op
# Warmup Iteration   2: 220.186 us/op
# Warmup Iteration   3: 224.012 us/op
# Warmup Iteration   4: 218.894 us/op
# Warmup Iteration   5: 218.847 us/op
Iteration   1: 218.864 us/op
Iteration   2: 218.929 us/op
Iteration   3: 219.315 us/op
Iteration   4: 218.911 us/op
Iteration   5: 218.576 us/op

# Run progress: 61.11% complete, ETA 00:12:51
# Fork: 3 of 3
# Warmup Iteration   1: 221.907 us/op
# Warmup Iteration   2: 224.609 us/op
# Warmup Iteration   3: 226.203 us/op
# Warmup Iteration   4: 225.637 us/op
# Warmup Iteration   5: 225.665 us/op
Iteration   1: 225.695 us/op
Iteration   2: 226.897 us/op
Iteration   3: 227.030 us/op
Iteration   4: 226.698 us/op
Iteration   5: 226.180 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.StraightenCodeBenchmark.straighten_2_long":
  223.429 ±(99.9%) 3.625 us/op [Average]
  (min, avg, max) = (218.576, 223.429, 227.030), stdev = 3.391
  CI (99.9%): [219.805, 227.054] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StraightenCodeBenchmark.straighten_3_int
# Parameters: (size = 65536)

# Run progress: 66.67% complete, ETA 00:11:01
# Fork: 1 of 3
# Warmup Iteration   1: 233.507 us/op
# Warmup Iteration   2: 236.224 us/op
# Warmup Iteration   3: 240.325 us/op
# Warmup Iteration   4: 231.701 us/op
# Warmup Iteration   5: 231.670 us/op
Iteration   1: 231.739 us/op
Iteration   2: 230.931 us/op
Iteration   3: 231.029 us/op
Iteration   4: 231.552 us/op
Iteration   5: 231.542 us/op

# Run progress: 72.22% complete, ETA 00:09:11
# Fork: 2 of 3
# Warmup Iteration   1: 228.921 us/op
# Warmup Iteration   2: 229.660 us/op
# Warmup Iteration   3: 234.342 us/op
# Warmup Iteration   4: 256.427 us/op
# Warmup Iteration   5: 256.410 us/op
Iteration   1: 256.537 us/op
Iteration   2: 256.433 us/op
Iteration   3: 255.990 us/op
Iteration   4: 256.188 us/op
Iteration   5: 256.406 us/op

# Run progress: 77.78% complete, ETA 00:07:20
# Fork: 3 of 3
# Warmup Iteration   1: 236.904 us/op
# Warmup Iteration   2: 237.378 us/op
# Warmup Iteration   3: 241.000 us/op
# Warmup Iteration   4: 238.477 us/op
# Warmup Iteration   5: 239.454 us/op
Iteration   1: 239.286 us/op
Iteration   2: 238.411 us/op
Iteration   3: 240.046 us/op
Iteration   4: 240.277 us/op
Iteration   5: 240.337 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.StraightenCodeBenchmark.straighten_3_int":
  242.447 ±(99.9%) 11.492 us/op [Average]
  (min, avg, max) = (230.931, 242.447, 256.537), stdev = 10.749
  CI (99.9%): [230.955, 253.939] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StraightenCodeBenchmark.straighten_3_long
# Parameters: (size = 65536)

# Run progress: 83.33% complete, ETA 00:05:30
# Fork: 1 of 3
# Warmup Iteration   1: 100.789 us/op
# Warmup Iteration   2: 99.059 us/op
# Warmup Iteration   3: 103.721 us/op
# Warmup Iteration   4: 104.338 us/op
# Warmup Iteration   5: 111.662 us/op
Iteration   1: 111.110 us/op
Iteration   2: 111.040 us/op
Iteration   3: 110.737 us/op
Iteration   4: 110.687 us/op
Iteration   5: 110.533 us/op

# Run progress: 88.89% complete, ETA 00:03:40
# Fork: 2 of 3
# Warmup Iteration   1: 101.029 us/op
# Warmup Iteration   2: 99.209 us/op
# Warmup Iteration   3: 104.407 us/op
# Warmup Iteration   4: 103.818 us/op
# Warmup Iteration   5: 102.765 us/op
Iteration   1: 103.166 us/op
Iteration   2: 103.435 us/op
Iteration   3: 103.553 us/op
Iteration   4: 103.846 us/op
Iteration   5: 103.972 us/op

# Run progress: 94.44% complete, ETA 00:01:50
# Fork: 3 of 3
# Warmup Iteration   1: 106.481 us/op
# Warmup Iteration   2: 99.145 us/op
# Warmup Iteration   3: 102.533 us/op
# Warmup Iteration   4: 102.308 us/op
# Warmup Iteration   5: 102.768 us/op
Iteration   1: 110.966 us/op
Iteration   2: 110.106 us/op
Iteration   3: 111.355 us/op
Iteration   4: 111.091 us/op
Iteration   5: 110.721 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.StraightenCodeBenchmark.straighten_3_long":
  108.421 ±(99.9%) 3.794 us/op [Average]
  (min, avg, max) = (103.166, 108.421, 111.355), stdev = 3.549
  CI (99.9%): [104.627, 112.215] (assumes normal distribution)


# Run complete. Total time: 00:33:04

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                  (size)  Mode  Cnt    Score    Error  Units
StraightenCodeBenchmark.straighten_1_int    65536  avgt   15  249.067 ±  3.464  us/op
StraightenCodeBenchmark.straighten_1_long   65536  avgt   15  241.017 ±  4.516  us/op
StraightenCodeBenchmark.straighten_2_int    65536  avgt   15  260.152 ±  6.372  us/op
StraightenCodeBenchmark.straighten_2_long   65536  avgt   15  223.429 ±  3.625  us/op
StraightenCodeBenchmark.straighten_3_int    65536  avgt   15  242.447 ± 11.492  us/op
StraightenCodeBenchmark.straighten_3_long   65536  avgt   15  108.421 ±  3.794  us/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_c1_c2_jit/StraightenCodeBenchmark.json
Running java  -jar benchmarks/target/benchmarks.jar .*StrengthReductionBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_c1_c2_jit/StrengthReductionBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StrengthReductionBenchmark.addition
# Parameters: (heavyComputation = true, value = 179426549)

# Run progress: 0.00% complete, ETA 00:15:00
# Fork: 1 of 3
# Warmup Iteration   1: 9.960 ns/op
# Warmup Iteration   2: 10.002 ns/op
# Warmup Iteration   3: 9.863 ns/op
# Warmup Iteration   4: 9.858 ns/op
# Warmup Iteration   5: 9.856 ns/op
Iteration   1: 9.863 ns/op
Iteration   2: 9.840 ns/op
Iteration   3: 9.837 ns/op
Iteration   4: 9.861 ns/op
Iteration   5: 9.863 ns/op

# Run progress: 11.11% complete, ETA 00:14:42
# Fork: 2 of 3
# Warmup Iteration   1: 10.006 ns/op
# Warmup Iteration   2: 10.017 ns/op
# Warmup Iteration   3: 9.865 ns/op
# Warmup Iteration   4: 9.864 ns/op
# Warmup Iteration   5: 9.863 ns/op
Iteration   1: 9.859 ns/op
Iteration   2: 9.849 ns/op
Iteration   3: 9.866 ns/op
Iteration   4: 9.847 ns/op
Iteration   5: 9.861 ns/op

# Run progress: 22.22% complete, ETA 00:12:51
# Fork: 3 of 3
# Warmup Iteration   1: 10.025 ns/op
# Warmup Iteration   2: 9.987 ns/op
# Warmup Iteration   3: 9.831 ns/op
# Warmup Iteration   4: 9.858 ns/op
# Warmup Iteration   5: 9.857 ns/op
Iteration   1: 9.857 ns/op
Iteration   2: 9.857 ns/op
Iteration   3: 9.867 ns/op
Iteration   4: 9.985 ns/op
Iteration   5: 9.864 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StrengthReductionBenchmark.addition":
  9.865 ±(99.9%) 0.037 ns/op [Average]
  (min, avg, max) = (9.837, 9.865, 9.985), stdev = 0.034
  CI (99.9%): [9.828, 9.902] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StrengthReductionBenchmark.multiplication
# Parameters: (heavyComputation = true, value = 179426549)

# Run progress: 33.33% complete, ETA 00:11:01
# Fork: 1 of 3
# Warmup Iteration   1: 2.358 ns/op
# Warmup Iteration   2: 2.358 ns/op
# Warmup Iteration   3: 2.059 ns/op
# Warmup Iteration   4: 2.060 ns/op
# Warmup Iteration   5: 2.059 ns/op
Iteration   1: 2.057 ns/op
Iteration   2: 2.062 ns/op
Iteration   3: 2.068 ns/op
Iteration   4: 2.069 ns/op
Iteration   5: 2.061 ns/op

# Run progress: 44.44% complete, ETA 00:09:11
# Fork: 2 of 3
# Warmup Iteration   1: 2.334 ns/op
# Warmup Iteration   2: 2.367 ns/op
# Warmup Iteration   3: 2.060 ns/op
# Warmup Iteration   4: 2.064 ns/op
# Warmup Iteration   5: 2.067 ns/op
Iteration   1: 2.069 ns/op
Iteration   2: 2.070 ns/op
Iteration   3: 2.069 ns/op
Iteration   4: 2.066 ns/op
Iteration   5: 2.073 ns/op

# Run progress: 55.56% complete, ETA 00:07:20
# Fork: 3 of 3
# Warmup Iteration   1: 2.203 ns/op
# Warmup Iteration   2: 2.370 ns/op
# Warmup Iteration   3: 2.070 ns/op
# Warmup Iteration   4: 2.068 ns/op
# Warmup Iteration   5: 2.066 ns/op
Iteration   1: 2.069 ns/op
Iteration   2: 2.067 ns/op
Iteration   3: 2.069 ns/op
Iteration   4: 2.072 ns/op
Iteration   5: 2.072 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StrengthReductionBenchmark.multiplication":
  2.068 ±(99.9%) 0.005 ns/op [Average]
  (min, avg, max) = (2.057, 2.068, 2.073), stdev = 0.004
  CI (99.9%): [2.063, 2.072] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StrengthReductionBenchmark.shift
# Parameters: (heavyComputation = true, value = 179426549)

# Run progress: 66.67% complete, ETA 00:05:30
# Fork: 1 of 3
# Warmup Iteration   1: 2.218 ns/op
# Warmup Iteration   2: 2.239 ns/op
# Warmup Iteration   3: 1.953 ns/op
# Warmup Iteration   4: 2.093 ns/op
# Warmup Iteration   5: 2.089 ns/op
Iteration   1: 2.090 ns/op
Iteration   2: 2.089 ns/op
Iteration   3: 2.084 ns/op
Iteration   4: 2.088 ns/op
Iteration   5: 2.089 ns/op

# Run progress: 77.78% complete, ETA 00:03:40
# Fork: 2 of 3
# Warmup Iteration   1: 2.358 ns/op
# Warmup Iteration   2: 2.217 ns/op
# Warmup Iteration   3: 1.947 ns/op
# Warmup Iteration   4: 1.953 ns/op
# Warmup Iteration   5: 1.958 ns/op
Iteration   1: 1.962 ns/op
Iteration   2: 1.969 ns/op
Iteration   3: 1.971 ns/op
Iteration   4: 1.970 ns/op
Iteration   5: 1.971 ns/op

# Run progress: 88.89% complete, ETA 00:01:50
# Fork: 3 of 3
# Warmup Iteration   1: 2.361 ns/op
# Warmup Iteration   2: 2.190 ns/op
# Warmup Iteration   3: 1.919 ns/op
# Warmup Iteration   4: 1.923 ns/op
# Warmup Iteration   5: 1.926 ns/op
Iteration   1: 1.932 ns/op
Iteration   2: 1.933 ns/op
Iteration   3: 1.932 ns/op
Iteration   4: 1.930 ns/op
Iteration   5: 1.933 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StrengthReductionBenchmark.shift":
  1.996 ±(99.9%) 0.074 ns/op [Average]
  (min, avg, max) = (1.930, 1.996, 2.090), stdev = 0.069
  CI (99.9%): [1.922, 2.070] (assumes normal distribution)


# Run complete. Total time: 00:16:32

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                  (heavyComputation)    (value)  Mode  Cnt  Score   Error  Units
StrengthReductionBenchmark.addition                      true  179426549  avgt   15  9.865 ± 0.037  ns/op
StrengthReductionBenchmark.multiplication                true  179426549  avgt   15  2.068 ± 0.005  ns/op
StrengthReductionBenchmark.shift                         true  179426549  avgt   15  1.996 ± 0.074  ns/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_c1_c2_jit/StrengthReductionBenchmark.json
Running java  -jar benchmarks/target/benchmarks.jar .*TailRecursionBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_c1_c2_jit/TailRecursionBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -Xss20M
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.TailRecursionBenchmark.fibonacci_baseline
# Parameters: (param = 32768)

# Run progress: 0.00% complete, ETA 00:10:00
# Fork: 1 of 3
# Warmup Iteration   1: 17.086 us/op
# Warmup Iteration   2: 17.626 us/op
# Warmup Iteration   3: 17.349 us/op
# Warmup Iteration   4: 17.472 us/op
# Warmup Iteration   5: 17.454 us/op
Iteration   1: 17.566 us/op
Iteration   2: 17.554 us/op
Iteration   3: 17.536 us/op
Iteration   4: 17.566 us/op
Iteration   5: 17.568 us/op

# Run progress: 16.67% complete, ETA 00:09:11
# Fork: 2 of 3
# Warmup Iteration   1: 17.169 us/op
# Warmup Iteration   2: 17.495 us/op
# Warmup Iteration   3: 17.416 us/op
# Warmup Iteration   4: 17.509 us/op
# Warmup Iteration   5: 17.565 us/op
Iteration   1: 17.587 us/op
Iteration   2: 17.551 us/op
Iteration   3: 17.532 us/op
Iteration   4: 17.511 us/op
Iteration   5: 17.560 us/op

# Run progress: 33.33% complete, ETA 00:07:20
# Fork: 3 of 3
# Warmup Iteration   1: 18.274 us/op
# Warmup Iteration   2: 17.643 us/op
# Warmup Iteration   3: 18.537 us/op
# Warmup Iteration   4: 18.521 us/op
# Warmup Iteration   5: 18.516 us/op
Iteration   1: 18.498 us/op
Iteration   2: 18.491 us/op
Iteration   3: 18.483 us/op
Iteration   4: 17.652 us/op
Iteration   5: 17.717 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.TailRecursionBenchmark.fibonacci_baseline":
  17.758 ±(99.9%) 0.409 us/op [Average]
  (min, avg, max) = (17.511, 17.758, 18.498), stdev = 0.383
  CI (99.9%): [17.349, 18.167] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -Xss20M
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.TailRecursionBenchmark.fibonacci_tail_recursive
# Parameters: (param = 32768)

# Run progress: 50.00% complete, ETA 00:05:30
# Fork: 1 of 3
# Warmup Iteration   1: 66.162 us/op
# Warmup Iteration   2: 65.325 us/op
# Warmup Iteration   3: 67.610 us/op
# Warmup Iteration   4: 68.033 us/op
# Warmup Iteration   5: 68.240 us/op
Iteration   1: 64.508 us/op
Iteration   2: 66.569 us/op
Iteration   3: 66.698 us/op
Iteration   4: 66.813 us/op
Iteration   5: 66.729 us/op

# Run progress: 66.67% complete, ETA 00:03:40
# Fork: 2 of 3
# Warmup Iteration   1: 63.572 us/op
# Warmup Iteration   2: 63.842 us/op
# Warmup Iteration   3: 65.473 us/op
# Warmup Iteration   4: 65.743 us/op
# Warmup Iteration   5: 65.776 us/op
Iteration   1: 65.937 us/op
Iteration   2: 65.824 us/op
Iteration   3: 65.680 us/op
Iteration   4: 63.998 us/op
Iteration   5: 64.092 us/op

# Run progress: 83.33% complete, ETA 00:01:50
# Fork: 3 of 3
# Warmup Iteration   1: 65.973 us/op
# Warmup Iteration   2: 64.662 us/op
# Warmup Iteration   3: 63.732 us/op
# Warmup Iteration   4: 63.763 us/op
# Warmup Iteration   5: 63.681 us/op
Iteration   1: 63.729 us/op
Iteration   2: 63.770 us/op
Iteration   3: 63.774 us/op
Iteration   4: 63.787 us/op
Iteration   5: 63.767 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.TailRecursionBenchmark.fibonacci_tail_recursive":
  65.045 ±(99.9%) 1.379 us/op [Average]
  (min, avg, max) = (63.729, 65.045, 66.813), stdev = 1.290
  CI (99.9%): [63.666, 66.424] (assumes normal distribution)


# Run complete. Total time: 00:11:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        (param)  Mode  Cnt   Score   Error  Units
TailRecursionBenchmark.fibonacci_baseline          32768  avgt   15  17.758 ± 0.409  us/op
TailRecursionBenchmark.fibonacci_tail_recursive    32768  avgt   15  65.045 ± 1.379  us/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_c1_c2_jit/TailRecursionBenchmark.json
Running java  -jar benchmarks/target/benchmarks.jar .*StoreAfterStoreBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_c1_c2_jit/StoreAfterStoreBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StoreAfterStoreBenchmark.redundant_non_zero_volatile_stores

# Run progress: 0.00% complete, ETA 00:10:00
# Fork: 1 of 3
# Warmup Iteration   1: 15.147 ns/op
# Warmup Iteration   2: 15.681 ns/op
# Warmup Iteration   3: 13.690 ns/op
# Warmup Iteration   4: 13.182 ns/op
# Warmup Iteration   5: 13.519 ns/op
Iteration   1: 13.576 ns/op
Iteration   2: 14.146 ns/op
Iteration   3: 13.733 ns/op
Iteration   4: 13.703 ns/op
Iteration   5: 13.755 ns/op

# Run progress: 16.67% complete, ETA 00:09:11
# Fork: 2 of 3
# Warmup Iteration   1: 15.004 ns/op
# Warmup Iteration   2: 15.611 ns/op
# Warmup Iteration   3: 13.741 ns/op
# Warmup Iteration   4: 13.453 ns/op
# Warmup Iteration   5: 13.475 ns/op
Iteration   1: 14.013 ns/op
Iteration   2: 13.819 ns/op
Iteration   3: 13.940 ns/op
Iteration   4: 13.791 ns/op
Iteration   5: 13.626 ns/op

# Run progress: 33.33% complete, ETA 00:07:21
# Fork: 3 of 3
# Warmup Iteration   1: 15.299 ns/op
# Warmup Iteration   2: 15.463 ns/op
# Warmup Iteration   3: 13.282 ns/op
# Warmup Iteration   4: 13.695 ns/op
# Warmup Iteration   5: 13.628 ns/op
Iteration   1: 13.535 ns/op
Iteration   2: 14.067 ns/op
Iteration   3: 13.446 ns/op
Iteration   4: 13.477 ns/op
Iteration   5: 13.690 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StoreAfterStoreBenchmark.redundant_non_zero_volatile_stores":
  13.754 ±(99.9%) 0.228 ns/op [Average]
  (min, avg, max) = (13.446, 13.754, 14.146), stdev = 0.213
  CI (99.9%): [13.527, 13.982] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StoreAfterStoreBenchmark.redundant_zero_volatile_stores

# Run progress: 50.00% complete, ETA 00:05:30
# Fork: 1 of 3
# Warmup Iteration   1: 14.811 ns/op
# Warmup Iteration   2: 14.934 ns/op
# Warmup Iteration   3: 14.083 ns/op
# Warmup Iteration   4: 14.032 ns/op
# Warmup Iteration   5: 13.841 ns/op
Iteration   1: 14.014 ns/op
Iteration   2: 13.895 ns/op
Iteration   3: 13.815 ns/op
Iteration   4: 13.912 ns/op
Iteration   5: 13.735 ns/op

# Run progress: 66.67% complete, ETA 00:03:40
# Fork: 2 of 3
# Warmup Iteration   1: 14.987 ns/op
# Warmup Iteration   2: 14.477 ns/op
# Warmup Iteration   3: 13.524 ns/op
# Warmup Iteration   4: 13.342 ns/op
# Warmup Iteration   5: 13.755 ns/op
Iteration   1: 13.866 ns/op
Iteration   2: 13.743 ns/op
Iteration   3: 13.603 ns/op
Iteration   4: 13.874 ns/op
Iteration   5: 13.638 ns/op

# Run progress: 83.33% complete, ETA 00:01:50
# Fork: 3 of 3
# Warmup Iteration   1: 14.419 ns/op
# Warmup Iteration   2: 14.184 ns/op
# Warmup Iteration   3: 13.422 ns/op
# Warmup Iteration   4: 13.752 ns/op
# Warmup Iteration   5: 13.360 ns/op
Iteration   1: 13.492 ns/op
Iteration   2: 13.696 ns/op
Iteration   3: 13.653 ns/op
Iteration   4: 13.990 ns/op
Iteration   5: 13.358 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StoreAfterStoreBenchmark.redundant_zero_volatile_stores":
  13.752 ±(99.9%) 0.197 ns/op [Average]
  (min, avg, max) = (13.358, 13.752, 14.014), stdev = 0.184
  CI (99.9%): [13.555, 13.949] (assumes normal distribution)


# Run complete. Total time: 00:11:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                                    Mode  Cnt   Score   Error  Units
StoreAfterStoreBenchmark.redundant_non_zero_volatile_stores  avgt   15  13.754 ± 0.228  ns/op
StoreAfterStoreBenchmark.redundant_zero_volatile_stores      avgt   15  13.752 ± 0.197  ns/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_c1_c2_jit/StoreAfterStoreBenchmark.json
Running java  -jar benchmarks/target/benchmarks.jar .*PostAllocationStoresBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_c1_c2_jit/PostAllocationStoresBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.PostAllocationStoresBenchmark.no_store

# Run progress: 0.00% complete, ETA 00:20:00
# Fork: 1 of 3
# Warmup Iteration   1: 13.829 ns/op
# Warmup Iteration   2: 13.322 ns/op
# Warmup Iteration   3: 12.956 ns/op
# Warmup Iteration   4: 12.901 ns/op
# Warmup Iteration   5: 13.120 ns/op
Iteration   1: 13.038 ns/op
Iteration   2: 13.176 ns/op
Iteration   3: 13.243 ns/op
Iteration   4: 12.838 ns/op
Iteration   5: 13.131 ns/op

# Run progress: 8.33% complete, ETA 00:20:13
# Fork: 2 of 3
# Warmup Iteration   1: 13.835 ns/op
# Warmup Iteration   2: 13.566 ns/op
# Warmup Iteration   3: 13.241 ns/op
# Warmup Iteration   4: 13.211 ns/op
# Warmup Iteration   5: 13.211 ns/op
Iteration   1: 13.013 ns/op
Iteration   2: 13.141 ns/op
Iteration   3: 13.304 ns/op
Iteration   4: 12.964 ns/op
Iteration   5: 13.229 ns/op

# Run progress: 16.67% complete, ETA 00:18:22
# Fork: 3 of 3
# Warmup Iteration   1: 13.898 ns/op
# Warmup Iteration   2: 13.461 ns/op
# Warmup Iteration   3: 13.053 ns/op
# Warmup Iteration   4: 12.962 ns/op
# Warmup Iteration   5: 13.075 ns/op
Iteration   1: 13.739 ns/op
Iteration   2: 13.621 ns/op
Iteration   3: 13.470 ns/op
Iteration   4: 13.044 ns/op
Iteration   5: 13.058 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.PostAllocationStoresBenchmark.no_store":
  13.201 ±(99.9%) 0.264 ns/op [Average]
  (min, avg, max) = (12.838, 13.201, 13.739), stdev = 0.247
  CI (99.9%): [12.936, 13.465] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.PostAllocationStoresBenchmark.non_null_or_zero_store

# Run progress: 25.00% complete, ETA 00:16:32
# Fork: 1 of 3
# Warmup Iteration   1: 13.950 ns/op
# Warmup Iteration   2: 13.617 ns/op
# Warmup Iteration   3: 12.758 ns/op
# Warmup Iteration   4: 12.735 ns/op
# Warmup Iteration   5: 12.778 ns/op
Iteration   1: 12.690 ns/op
Iteration   2: 12.888 ns/op
Iteration   3: 12.838 ns/op
Iteration   4: 12.861 ns/op
Iteration   5: 12.857 ns/op

# Run progress: 33.33% complete, ETA 00:14:42
# Fork: 2 of 3
# Warmup Iteration   1: 13.901 ns/op
# Warmup Iteration   2: 13.647 ns/op
# Warmup Iteration   3: 12.875 ns/op
# Warmup Iteration   4: 12.825 ns/op
# Warmup Iteration   5: 12.941 ns/op
Iteration   1: 12.728 ns/op
Iteration   2: 12.865 ns/op
Iteration   3: 12.913 ns/op
Iteration   4: 12.895 ns/op
Iteration   5: 12.867 ns/op

# Run progress: 41.67% complete, ETA 00:12:51
# Fork: 3 of 3
# Warmup Iteration   1: 13.867 ns/op
# Warmup Iteration   2: 13.628 ns/op
# Warmup Iteration   3: 12.858 ns/op
# Warmup Iteration   4: 12.820 ns/op
# Warmup Iteration   5: 12.908 ns/op
Iteration   1: 12.872 ns/op
Iteration   2: 12.856 ns/op
Iteration   3: 12.876 ns/op
Iteration   4: 12.887 ns/op
Iteration   5: 12.957 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.PostAllocationStoresBenchmark.non_null_or_zero_store":
  12.857 ±(99.9%) 0.071 ns/op [Average]
  (min, avg, max) = (12.690, 12.857, 12.957), stdev = 0.067
  CI (99.9%): [12.785, 12.928] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.PostAllocationStoresBenchmark.redundant_null_or_zero_store

# Run progress: 50.00% complete, ETA 00:11:01
# Fork: 1 of 3
# Warmup Iteration   1: 13.895 ns/op
# Warmup Iteration   2: 13.277 ns/op
# Warmup Iteration   3: 13.097 ns/op
# Warmup Iteration   4: 13.194 ns/op
# Warmup Iteration   5: 13.164 ns/op
Iteration   1: 13.011 ns/op
Iteration   2: 13.034 ns/op
Iteration   3: 12.987 ns/op
Iteration   4: 13.173 ns/op
Iteration   5: 12.744 ns/op

# Run progress: 58.33% complete, ETA 00:09:11
# Fork: 2 of 3
# Warmup Iteration   1: 13.517 ns/op
# Warmup Iteration   2: 13.243 ns/op
# Warmup Iteration   3: 12.867 ns/op
# Warmup Iteration   4: 13.129 ns/op
# Warmup Iteration   5: 13.092 ns/op
Iteration   1: 13.232 ns/op
Iteration   2: 12.905 ns/op
Iteration   3: 12.832 ns/op
Iteration   4: 13.013 ns/op
Iteration   5: 13.099 ns/op

# Run progress: 66.67% complete, ETA 00:07:21
# Fork: 3 of 3
# Warmup Iteration   1: 13.820 ns/op
# Warmup Iteration   2: 13.271 ns/op
# Warmup Iteration   3: 12.921 ns/op
# Warmup Iteration   4: 12.878 ns/op
# Warmup Iteration   5: 12.893 ns/op
Iteration   1: 12.840 ns/op
Iteration   2: 13.027 ns/op
Iteration   3: 12.835 ns/op
Iteration   4: 12.852 ns/op
Iteration   5: 13.144 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.PostAllocationStoresBenchmark.redundant_null_or_zero_store":
  12.982 ±(99.9%) 0.154 ns/op [Average]
  (min, avg, max) = (12.744, 12.982, 13.232), stdev = 0.144
  CI (99.9%): [12.828, 13.136] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.PostAllocationStoresBenchmark.redundant_null_or_zero_volatile_store

# Run progress: 75.00% complete, ETA 00:05:30
# Fork: 1 of 3
# Warmup Iteration   1: 34.968 ns/op
# Warmup Iteration   2: 34.029 ns/op
# Warmup Iteration   3: 34.569 ns/op
# Warmup Iteration   4: 34.305 ns/op
# Warmup Iteration   5: 33.872 ns/op
Iteration   1: 34.419 ns/op
Iteration   2: 33.664 ns/op
Iteration   3: 34.303 ns/op
Iteration   4: 33.796 ns/op
Iteration   5: 33.654 ns/op

# Run progress: 83.33% complete, ETA 00:03:40
# Fork: 2 of 3
# Warmup Iteration   1: 35.516 ns/op
# Warmup Iteration   2: 33.688 ns/op
# Warmup Iteration   3: 34.544 ns/op
# Warmup Iteration   4: 34.333 ns/op
# Warmup Iteration   5: 34.029 ns/op
Iteration   1: 35.014 ns/op
Iteration   2: 33.828 ns/op
Iteration   3: 34.622 ns/op
Iteration   4: 34.552 ns/op
Iteration   5: 34.387 ns/op

# Run progress: 91.67% complete, ETA 00:01:50
# Fork: 3 of 3
# Warmup Iteration   1: 35.097 ns/op
# Warmup Iteration   2: 34.622 ns/op
# Warmup Iteration   3: 33.785 ns/op
# Warmup Iteration   4: 34.120 ns/op
# Warmup Iteration   5: 33.946 ns/op
Iteration   1: 34.757 ns/op
Iteration   2: 34.874 ns/op
Iteration   3: 34.560 ns/op
Iteration   4: 34.393 ns/op
Iteration   5: 34.154 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.PostAllocationStoresBenchmark.redundant_null_or_zero_volatile_store":
  34.332 ±(99.9%) 0.462 ns/op [Average]
  (min, avg, max) = (33.654, 34.332, 35.014), stdev = 0.432
  CI (99.9%): [33.870, 34.794] (assumes normal distribution)


# Run complete. Total time: 00:22:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                                            Mode  Cnt   Score   Error  Units
PostAllocationStoresBenchmark.no_store                               avgt   15  13.201 ± 0.264  ns/op
PostAllocationStoresBenchmark.non_null_or_zero_store                 avgt   15  12.857 ± 0.071  ns/op
PostAllocationStoresBenchmark.redundant_null_or_zero_store           avgt   15  12.982 ± 0.154  ns/op
PostAllocationStoresBenchmark.redundant_null_or_zero_volatile_store  avgt   15  34.332 ± 0.462  ns/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_c1_c2_jit/PostAllocationStoresBenchmark.json
Running java  -jar benchmarks/target/benchmarks.jar .*ExceptionStackTraceBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_c1_c2_jit/ExceptionStackTraceBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ExceptionStackTraceBenchmark.constant_exc
# Parameters: (message = Something wrong happened., stackDepth = 1)

# Run progress: 0.00% complete, ETA 01:15:00
# Fork: 1 of 3
# Warmup Iteration   1: 3.446 ns/op
# Warmup Iteration   2: 3.342 ns/op
# Warmup Iteration   3: 2.734 ns/op
# Warmup Iteration   4: 2.735 ns/op
# Warmup Iteration   5: 2.850 ns/op
Iteration   1: 2.896 ns/op
Iteration   2: 2.883 ns/op
Iteration   3: 2.870 ns/op
Iteration   4: 2.869 ns/op
Iteration   5: 2.863 ns/op

# Run progress: 2.22% complete, ETA 01:20:52
# Fork: 2 of 3
# Warmup Iteration   1: 3.257 ns/op
# Warmup Iteration   2: 3.272 ns/op
# Warmup Iteration   3: 2.850 ns/op
# Warmup Iteration   4: 2.846 ns/op
# Warmup Iteration   5: 2.868 ns/op
Iteration   1: 2.869 ns/op
Iteration   2: 2.865 ns/op
Iteration   3: 2.865 ns/op
Iteration   4: 2.887 ns/op
Iteration   5: 2.861 ns/op

# Run progress: 4.44% complete, ETA 01:19:00
# Fork: 3 of 3
# Warmup Iteration   1: 3.009 ns/op
# Warmup Iteration   2: 3.034 ns/op
# Warmup Iteration   3: 2.647 ns/op
# Warmup Iteration   4: 2.658 ns/op
# Warmup Iteration   5: 2.670 ns/op
Iteration   1: 2.664 ns/op
Iteration   2: 2.890 ns/op
Iteration   3: 2.874 ns/op
Iteration   4: 2.869 ns/op
Iteration   5: 2.867 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ExceptionStackTraceBenchmark.constant_exc":
  2.860 ±(99.9%) 0.059 ns/op [Average]
  (min, avg, max) = (2.664, 2.860, 2.896), stdev = 0.055
  CI (99.9%): [2.801, 2.919] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ExceptionStackTraceBenchmark.constant_exc
# Parameters: (message = Something wrong happened., stackDepth = 64)

# Run progress: 6.67% complete, ETA 01:17:10
# Fork: 1 of 3
# Warmup Iteration   1: 67.649 ns/op
# Warmup Iteration   2: 69.050 ns/op
# Warmup Iteration   3: 67.421 ns/op
# Warmup Iteration   4: 67.354 ns/op
# Warmup Iteration   5: 67.387 ns/op
Iteration   1: 67.378 ns/op
Iteration   2: 67.298 ns/op
Iteration   3: 67.811 ns/op
Iteration   4: 67.784 ns/op
Iteration   5: 63.641 ns/op

# Run progress: 8.89% complete, ETA 01:15:20
# Fork: 2 of 3
# Warmup Iteration   1: 68.036 ns/op
# Warmup Iteration   2: 68.459 ns/op
# Warmup Iteration   3: 67.242 ns/op
# Warmup Iteration   4: 67.277 ns/op
# Warmup Iteration   5: 67.294 ns/op
Iteration   1: 67.360 ns/op
Iteration   2: 67.200 ns/op
Iteration   3: 67.584 ns/op
Iteration   4: 63.732 ns/op
Iteration   5: 63.951 ns/op

# Run progress: 11.11% complete, ETA 01:13:29
# Fork: 3 of 3
# Warmup Iteration   1: 64.494 ns/op
# Warmup Iteration   2: 64.167 ns/op
# Warmup Iteration   3: 62.903 ns/op
# Warmup Iteration   4: 63.196 ns/op
# Warmup Iteration   5: 63.507 ns/op
Iteration   1: 63.467 ns/op
Iteration   2: 63.407 ns/op
Iteration   3: 63.463 ns/op
Iteration   4: 63.656 ns/op
Iteration   5: 63.646 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ExceptionStackTraceBenchmark.constant_exc":
  65.425 ±(99.9%) 2.146 ns/op [Average]
  (min, avg, max) = (63.407, 65.425, 67.811), stdev = 2.007
  CI (99.9%): [63.279, 67.571] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ExceptionStackTraceBenchmark.constant_exc
# Parameters: (message = Something wrong happened., stackDepth = 128)

# Run progress: 13.33% complete, ETA 01:11:39
# Fork: 1 of 3
# Warmup Iteration   1: 126.840 ns/op
# Warmup Iteration   2: 127.393 ns/op
# Warmup Iteration   3: 125.895 ns/op
# Warmup Iteration   4: 125.928 ns/op
# Warmup Iteration   5: 125.791 ns/op
Iteration   1: 125.859 ns/op
Iteration   2: 126.055 ns/op
Iteration   3: 125.962 ns/op
Iteration   4: 126.049 ns/op
Iteration   5: 126.045 ns/op

# Run progress: 15.56% complete, ETA 01:09:49
# Fork: 2 of 3
# Warmup Iteration   1: 126.335 ns/op
# Warmup Iteration   2: 119.354 ns/op
# Warmup Iteration   3: 118.927 ns/op
# Warmup Iteration   4: 119.572 ns/op
# Warmup Iteration   5: 119.678 ns/op
Iteration   1: 119.682 ns/op
Iteration   2: 119.941 ns/op
Iteration   3: 119.995 ns/op
Iteration   4: 119.990 ns/op
Iteration   5: 120.058 ns/op

# Run progress: 17.78% complete, ETA 01:07:58
# Fork: 3 of 3
# Warmup Iteration   1: 126.352 ns/op
# Warmup Iteration   2: 127.392 ns/op
# Warmup Iteration   3: 125.746 ns/op
# Warmup Iteration   4: 125.921 ns/op
# Warmup Iteration   5: 125.986 ns/op
Iteration   1: 126.027 ns/op
Iteration   2: 125.928 ns/op
Iteration   3: 125.562 ns/op
Iteration   4: 125.640 ns/op
Iteration   5: 125.765 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ExceptionStackTraceBenchmark.constant_exc":
  123.904 ±(99.9%) 3.112 ns/op [Average]
  (min, avg, max) = (119.682, 123.904, 126.055), stdev = 2.911
  CI (99.9%): [120.792, 127.016] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ExceptionStackTraceBenchmark.get_stack_trace
# Parameters: (message = Something wrong happened., stackDepth = 1)

# Run progress: 20.00% complete, ETA 01:06:08
# Fork: 1 of 3
# Warmup Iteration   1: 6395.571 ns/op
# Warmup Iteration   2: 6005.242 ns/op
# Warmup Iteration   3: 6091.957 ns/op
# Warmup Iteration   4: 6077.428 ns/op
# Warmup Iteration   5: 6000.212 ns/op
Iteration   1: 6083.907 ns/op
Iteration   2: 5973.031 ns/op
Iteration   3: 6161.186 ns/op
Iteration   4: 6111.389 ns/op
Iteration   5: 6447.361 ns/op

# Run progress: 22.22% complete, ETA 01:04:18
# Fork: 2 of 3
# Warmup Iteration   1: 6117.462 ns/op
# Warmup Iteration   2: 6243.727 ns/op
# Warmup Iteration   3: 6403.610 ns/op
# Warmup Iteration   4: 6389.799 ns/op
# Warmup Iteration   5: 6077.139 ns/op
Iteration   1: 6131.690 ns/op
Iteration   2: 6014.604 ns/op
Iteration   3: 6031.949 ns/op
Iteration   4: 6049.108 ns/op
Iteration   5: 6035.016 ns/op

# Run progress: 24.44% complete, ETA 01:02:28
# Fork: 3 of 3
# Warmup Iteration   1: 6055.615 ns/op
# Warmup Iteration   2: 6109.316 ns/op
# Warmup Iteration   3: 6242.808 ns/op
# Warmup Iteration   4: 6333.998 ns/op
# Warmup Iteration   5: 6337.873 ns/op
Iteration   1: 6301.961 ns/op
Iteration   2: 6270.880 ns/op
Iteration   3: 6334.369 ns/op
Iteration   4: 6338.489 ns/op
Iteration   5: 5940.112 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ExceptionStackTraceBenchmark.get_stack_trace":
  6148.337 ±(99.9%) 164.868 ns/op [Average]
  (min, avg, max) = (5940.112, 6148.337, 6447.361), stdev = 154.218
  CI (99.9%): [5983.468, 6313.205] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ExceptionStackTraceBenchmark.get_stack_trace
# Parameters: (message = Something wrong happened., stackDepth = 64)

# Run progress: 26.67% complete, ETA 01:00:37
# Fork: 1 of 3
# Warmup Iteration   1: 22061.480 ns/op
# Warmup Iteration   2: 20380.299 ns/op
# Warmup Iteration   3: 21995.384 ns/op
# Warmup Iteration   4: 22225.497 ns/op
# Warmup Iteration   5: 22170.990 ns/op
Iteration   1: 20895.531 ns/op
Iteration   2: 21239.005 ns/op
Iteration   3: 21165.339 ns/op
Iteration   4: 21383.957 ns/op
Iteration   5: 20922.620 ns/op

# Run progress: 28.89% complete, ETA 00:58:47
# Fork: 2 of 3
# Warmup Iteration   1: 21373.330 ns/op
# Warmup Iteration   2: 21094.044 ns/op
# Warmup Iteration   3: 21847.132 ns/op
# Warmup Iteration   4: 21151.066 ns/op
# Warmup Iteration   5: 20558.173 ns/op
Iteration   1: 20611.098 ns/op
Iteration   2: 20637.312 ns/op
Iteration   3: 22175.674 ns/op
Iteration   4: 22331.372 ns/op
Iteration   5: 22200.397 ns/op

# Run progress: 31.11% complete, ETA 00:56:57
# Fork: 3 of 3
# Warmup Iteration   1: 20807.275 ns/op
# Warmup Iteration   2: 20925.509 ns/op
# Warmup Iteration   3: 20987.541 ns/op
# Warmup Iteration   4: 20825.160 ns/op
# Warmup Iteration   5: 22099.766 ns/op
Iteration   1: 22349.062 ns/op
Iteration   2: 21039.774 ns/op
Iteration   3: 21107.530 ns/op
Iteration   4: 21505.339 ns/op
Iteration   5: 22566.035 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ExceptionStackTraceBenchmark.get_stack_trace":
  21475.336 ±(99.9%) 715.955 ns/op [Average]
  (min, avg, max) = (20611.098, 21475.336, 22566.035), stdev = 669.705
  CI (99.9%): [20759.381, 22191.291] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ExceptionStackTraceBenchmark.get_stack_trace
# Parameters: (message = Something wrong happened., stackDepth = 128)

# Run progress: 33.33% complete, ETA 00:55:07
# Fork: 1 of 3
# Warmup Iteration   1: 38146.898 ns/op
# Warmup Iteration   2: 35337.392 ns/op
# Warmup Iteration   3: 36629.622 ns/op
# Warmup Iteration   4: 36266.393 ns/op
# Warmup Iteration   5: 36488.930 ns/op
Iteration   1: 38481.917 ns/op
Iteration   2: 37519.646 ns/op
Iteration   3: 36880.052 ns/op
Iteration   4: 36029.203 ns/op
Iteration   5: 36023.519 ns/op

# Run progress: 35.56% complete, ETA 00:53:16
# Fork: 2 of 3
# Warmup Iteration   1: 37276.937 ns/op
# Warmup Iteration   2: 37928.619 ns/op
# Warmup Iteration   3: 38314.288 ns/op
# Warmup Iteration   4: 37225.304 ns/op
# Warmup Iteration   5: 36528.895 ns/op
Iteration   1: 35821.810 ns/op
Iteration   2: 38795.282 ns/op
Iteration   3: 37229.940 ns/op
Iteration   4: 36259.394 ns/op
Iteration   5: 36515.601 ns/op

# Run progress: 37.78% complete, ETA 00:51:26
# Fork: 3 of 3
# Warmup Iteration   1: 36205.366 ns/op
# Warmup Iteration   2: 38386.885 ns/op
# Warmup Iteration   3: 38331.510 ns/op
# Warmup Iteration   4: 37739.470 ns/op
# Warmup Iteration   5: 36756.756 ns/op
Iteration   1: 36283.563 ns/op
Iteration   2: 38837.029 ns/op
Iteration   3: 38678.202 ns/op
Iteration   4: 38622.244 ns/op
Iteration   5: 38664.652 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ExceptionStackTraceBenchmark.get_stack_trace":
  37376.137 ±(99.9%) 1271.640 ns/op [Average]
  (min, avg, max) = (35821.810, 37376.137, 38837.029), stdev = 1189.493
  CI (99.9%): [36104.497, 38647.777] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ExceptionStackTraceBenchmark.lambda_function_exc
# Parameters: (message = Something wrong happened., stackDepth = 1)

# Run progress: 40.00% complete, ETA 00:49:36
# Fork: 1 of 3
# Warmup Iteration   1: 1106.339 ns/op
# Warmup Iteration   2: 1121.390 ns/op
# Warmup Iteration   3: 1098.788 ns/op
# Warmup Iteration   4: 1084.899 ns/op
# Warmup Iteration   5: 1066.263 ns/op
Iteration   1: 1142.128 ns/op
Iteration   2: 1098.953 ns/op
Iteration   3: 1087.941 ns/op
Iteration   4: 1140.084 ns/op
Iteration   5: 1067.094 ns/op

# Run progress: 42.22% complete, ETA 00:47:46
# Fork: 2 of 3
# Warmup Iteration   1: 1094.982 ns/op
# Warmup Iteration   2: 1115.469 ns/op
# Warmup Iteration   3: 1143.227 ns/op
# Warmup Iteration   4: 1076.069 ns/op
# Warmup Iteration   5: 1078.664 ns/op
Iteration   1: 1098.695 ns/op
Iteration   2: 1114.853 ns/op
Iteration   3: 1107.639 ns/op
Iteration   4: 1130.437 ns/op
Iteration   5: 1081.005 ns/op

# Run progress: 44.44% complete, ETA 00:45:55
# Fork: 3 of 3
# Warmup Iteration   1: 1103.983 ns/op
# Warmup Iteration   2: 1105.158 ns/op
# Warmup Iteration   3: 1122.385 ns/op
# Warmup Iteration   4: 1090.249 ns/op
# Warmup Iteration   5: 1075.454 ns/op
Iteration   1: 1071.109 ns/op
Iteration   2: 1103.411 ns/op
Iteration   3: 1096.777 ns/op
Iteration   4: 1087.455 ns/op
Iteration   5: 1085.365 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ExceptionStackTraceBenchmark.lambda_function_exc":
  1100.863 ±(99.9%) 24.571 ns/op [Average]
  (min, avg, max) = (1067.094, 1100.863, 1142.128), stdev = 22.984
  CI (99.9%): [1076.292, 1125.434] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ExceptionStackTraceBenchmark.lambda_function_exc
# Parameters: (message = Something wrong happened., stackDepth = 64)

# Run progress: 46.67% complete, ETA 00:44:05
# Fork: 1 of 3
# Warmup Iteration   1: 3650.816 ns/op
# Warmup Iteration   2: 3677.420 ns/op
# Warmup Iteration   3: 3511.677 ns/op
# Warmup Iteration   4: 3567.590 ns/op
# Warmup Iteration   5: 3652.426 ns/op
Iteration   1: 3581.435 ns/op
Iteration   2: 3610.240 ns/op
Iteration   3: 3632.974 ns/op
Iteration   4: 3546.480 ns/op
Iteration   5: 3496.978 ns/op

# Run progress: 48.89% complete, ETA 00:42:15
# Fork: 2 of 3
# Warmup Iteration   1: 3554.661 ns/op
# Warmup Iteration   2: 3441.580 ns/op
# Warmup Iteration   3: 3648.782 ns/op
# Warmup Iteration   4: 3642.607 ns/op
# Warmup Iteration   5: 3638.468 ns/op
Iteration   1: 3485.388 ns/op
Iteration   2: 3371.837 ns/op
Iteration   3: 3624.973 ns/op
Iteration   4: 3400.031 ns/op
Iteration   5: 3449.724 ns/op

# Run progress: 51.11% complete, ETA 00:40:25
# Fork: 3 of 3
# Warmup Iteration   1: 3393.547 ns/op
# Warmup Iteration   2: 3382.706 ns/op
# Warmup Iteration   3: 3468.207 ns/op
# Warmup Iteration   4: 3662.656 ns/op
# Warmup Iteration   5: 3653.507 ns/op
Iteration   1: 3667.568 ns/op
Iteration   2: 3543.526 ns/op
Iteration   3: 3630.055 ns/op
Iteration   4: 3585.252 ns/op
Iteration   5: 3507.839 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ExceptionStackTraceBenchmark.lambda_function_exc":
  3542.287 ±(99.9%) 95.110 ns/op [Average]
  (min, avg, max) = (3371.837, 3542.287, 3667.568), stdev = 88.966
  CI (99.9%): [3447.176, 3637.397] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ExceptionStackTraceBenchmark.lambda_function_exc
# Parameters: (message = Something wrong happened., stackDepth = 128)

# Run progress: 53.33% complete, ETA 00:38:34
# Fork: 1 of 3
# Warmup Iteration   1: 6307.307 ns/op
# Warmup Iteration   2: 5943.826 ns/op
# Warmup Iteration   3: 5956.423 ns/op
# Warmup Iteration   4: 5940.462 ns/op
# Warmup Iteration   5: 6154.736 ns/op
Iteration   1: 6381.060 ns/op
Iteration   2: 6405.165 ns/op
Iteration   3: 5877.130 ns/op
Iteration   4: 6008.019 ns/op
Iteration   5: 6024.743 ns/op

# Run progress: 55.56% complete, ETA 00:36:44
# Fork: 2 of 3
# Warmup Iteration   1: 6111.387 ns/op
# Warmup Iteration   2: 5971.928 ns/op
# Warmup Iteration   3: 6281.620 ns/op
# Warmup Iteration   4: 5997.245 ns/op
# Warmup Iteration   5: 6247.233 ns/op
Iteration   1: 6360.423 ns/op
Iteration   2: 6350.571 ns/op
Iteration   3: 6154.400 ns/op
Iteration   4: 5982.916 ns/op
Iteration   5: 6173.557 ns/op

# Run progress: 57.78% complete, ETA 00:34:54
# Fork: 3 of 3
# Warmup Iteration   1: 6177.505 ns/op
# Warmup Iteration   2: 5985.581 ns/op
# Warmup Iteration   3: 5979.545 ns/op
# Warmup Iteration   4: 5985.171 ns/op
# Warmup Iteration   5: 6003.054 ns/op
Iteration   1: 6447.887 ns/op
Iteration   2: 6513.090 ns/op
Iteration   3: 6472.144 ns/op
Iteration   4: 6387.238 ns/op
Iteration   5: 6120.321 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ExceptionStackTraceBenchmark.lambda_function_exc":
  6243.911 ±(99.9%) 219.655 ns/op [Average]
  (min, avg, max) = (5877.130, 6243.911, 6513.090), stdev = 205.465
  CI (99.9%): [6024.256, 6463.566] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ExceptionStackTraceBenchmark.new_exc
# Parameters: (message = Something wrong happened., stackDepth = 1)

# Run progress: 60.00% complete, ETA 00:33:04
# Fork: 1 of 3
# Warmup Iteration   1: 1019.526 ns/op
# Warmup Iteration   2: 1020.402 ns/op
# Warmup Iteration   3: 987.157 ns/op
# Warmup Iteration   4: 992.305 ns/op
# Warmup Iteration   5: 1076.238 ns/op
Iteration   1: 1037.538 ns/op
Iteration   2: 1043.946 ns/op
Iteration   3: 1008.527 ns/op
Iteration   4: 998.706 ns/op
Iteration   5: 1020.172 ns/op

# Run progress: 62.22% complete, ETA 00:31:13
# Fork: 2 of 3
# Warmup Iteration   1: 1071.615 ns/op
# Warmup Iteration   2: 1041.156 ns/op
# Warmup Iteration   3: 1122.283 ns/op
# Warmup Iteration   4: 1046.195 ns/op
# Warmup Iteration   5: 1082.247 ns/op
Iteration   1: 1056.890 ns/op
Iteration   2: 1102.601 ns/op
Iteration   3: 1082.104 ns/op
Iteration   4: 1103.241 ns/op
Iteration   5: 1054.278 ns/op

# Run progress: 64.44% complete, ETA 00:29:23
# Fork: 3 of 3
# Warmup Iteration   1: 1039.692 ns/op
# Warmup Iteration   2: 1060.841 ns/op
# Warmup Iteration   3: 1012.813 ns/op
# Warmup Iteration   4: 1015.982 ns/op
# Warmup Iteration   5: 1026.208 ns/op
Iteration   1: 1056.926 ns/op
Iteration   2: 1055.226 ns/op
Iteration   3: 1088.338 ns/op
Iteration   4: 1025.176 ns/op
Iteration   5: 1021.071 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ExceptionStackTraceBenchmark.new_exc":
  1050.316 ±(99.9%) 35.141 ns/op [Average]
  (min, avg, max) = (998.706, 1050.316, 1103.241), stdev = 32.871
  CI (99.9%): [1015.175, 1085.458] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ExceptionStackTraceBenchmark.new_exc
# Parameters: (message = Something wrong happened., stackDepth = 64)

# Run progress: 66.67% complete, ETA 00:27:33
# Fork: 1 of 3
# Warmup Iteration   1: 3434.581 ns/op
# Warmup Iteration   2: 3311.429 ns/op
# Warmup Iteration   3: 3396.157 ns/op
# Warmup Iteration   4: 3485.561 ns/op
# Warmup Iteration   5: 3348.822 ns/op
Iteration   1: 3556.938 ns/op
Iteration   2: 3615.868 ns/op
Iteration   3: 3414.242 ns/op
Iteration   4: 3422.856 ns/op
Iteration   5: 3417.782 ns/op

# Run progress: 68.89% complete, ETA 00:25:43
# Fork: 2 of 3
# Warmup Iteration   1: 3298.813 ns/op
# Warmup Iteration   2: 3301.557 ns/op
# Warmup Iteration   3: 3330.901 ns/op
# Warmup Iteration   4: 3248.509 ns/op
# Warmup Iteration   5: 3502.017 ns/op
Iteration   1: 3521.249 ns/op
Iteration   2: 3289.891 ns/op
Iteration   3: 3422.429 ns/op
Iteration   4: 3386.549 ns/op
Iteration   5: 3338.188 ns/op

# Run progress: 71.11% complete, ETA 00:23:53
# Fork: 3 of 3
# Warmup Iteration   1: 3525.004 ns/op
# Warmup Iteration   2: 3385.062 ns/op
# Warmup Iteration   3: 3506.404 ns/op
# Warmup Iteration   4: 3268.862 ns/op
# Warmup Iteration   5: 3316.293 ns/op
Iteration   1: 3497.838 ns/op
Iteration   2: 3530.153 ns/op
Iteration   3: 3351.312 ns/op
Iteration   4: 3546.478 ns/op
Iteration   5: 3536.714 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ExceptionStackTraceBenchmark.new_exc":
  3456.566 ±(99.9%) 100.869 ns/op [Average]
  (min, avg, max) = (3289.891, 3456.566, 3615.868), stdev = 94.353
  CI (99.9%): [3355.697, 3557.435] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ExceptionStackTraceBenchmark.new_exc
# Parameters: (message = Something wrong happened., stackDepth = 128)

# Run progress: 73.33% complete, ETA 00:22:02
# Fork: 1 of 3
# Warmup Iteration   1: 5959.133 ns/op
# Warmup Iteration   2: 5973.645 ns/op
# Warmup Iteration   3: 6058.482 ns/op
# Warmup Iteration   4: 6044.667 ns/op
# Warmup Iteration   5: 5911.117 ns/op
Iteration   1: 6080.242 ns/op
Iteration   2: 5865.255 ns/op
Iteration   3: 6058.256 ns/op
Iteration   4: 6042.508 ns/op
Iteration   5: 5965.607 ns/op

# Run progress: 75.56% complete, ETA 00:20:12
# Fork: 2 of 3
# Warmup Iteration   1: 5684.625 ns/op
# Warmup Iteration   2: 5659.613 ns/op
# Warmup Iteration   3: 6005.459 ns/op
# Warmup Iteration   4: 5829.770 ns/op
# Warmup Iteration   5: 5963.776 ns/op
Iteration   1: 5950.446 ns/op
Iteration   2: 6002.467 ns/op
Iteration   3: 6014.250 ns/op
Iteration   4: 6007.763 ns/op
Iteration   5: 5922.542 ns/op

# Run progress: 77.78% complete, ETA 00:18:22
# Fork: 3 of 3
# Warmup Iteration   1: 5564.896 ns/op
# Warmup Iteration   2: 5584.297 ns/op
# Warmup Iteration   3: 6075.647 ns/op
# Warmup Iteration   4: 5849.212 ns/op
# Warmup Iteration   5: 5748.355 ns/op
Iteration   1: 6016.043 ns/op
Iteration   2: 5612.893 ns/op
Iteration   3: 5778.589 ns/op
Iteration   4: 5633.771 ns/op
Iteration   5: 5648.482 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ExceptionStackTraceBenchmark.new_exc":
  5906.608 ±(99.9%) 172.781 ns/op [Average]
  (min, avg, max) = (5612.893, 5906.608, 6080.242), stdev = 161.619
  CI (99.9%): [5733.827, 6079.389] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ExceptionStackTraceBenchmark.new_exc_override_fillInStackTrace
# Parameters: (message = Something wrong happened., stackDepth = 1)

# Run progress: 80.00% complete, ETA 00:16:32
# Fork: 1 of 3
# Warmup Iteration   1: 10.194 ns/op
# Warmup Iteration   2: 10.253 ns/op
# Warmup Iteration   3: 9.440 ns/op
# Warmup Iteration   4: 9.321 ns/op
# Warmup Iteration   5: 9.437 ns/op
Iteration   1: 9.348 ns/op
Iteration   2: 9.600 ns/op
Iteration   3: 9.806 ns/op
Iteration   4: 9.193 ns/op
Iteration   5: 9.704 ns/op

# Run progress: 82.22% complete, ETA 00:14:41
# Fork: 2 of 3
# Warmup Iteration   1: 10.427 ns/op
# Warmup Iteration   2: 10.463 ns/op
# Warmup Iteration   3: 9.261 ns/op
# Warmup Iteration   4: 9.730 ns/op
# Warmup Iteration   5: 9.343 ns/op
Iteration   1: 9.602 ns/op
Iteration   2: 9.656 ns/op
Iteration   3: 9.417 ns/op
Iteration   4: 9.697 ns/op
Iteration   5: 9.352 ns/op

# Run progress: 84.44% complete, ETA 00:12:51
# Fork: 3 of 3
# Warmup Iteration   1: 10.323 ns/op
# Warmup Iteration   2: 10.607 ns/op
# Warmup Iteration   3: 9.433 ns/op
# Warmup Iteration   4: 9.389 ns/op
# Warmup Iteration   5: 9.761 ns/op
Iteration   1: 9.555 ns/op
Iteration   2: 9.717 ns/op
Iteration   3: 9.526 ns/op
Iteration   4: 9.532 ns/op
Iteration   5: 9.618 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ExceptionStackTraceBenchmark.new_exc_override_fillInStackTrace":
  9.555 ±(99.9%) 0.177 ns/op [Average]
  (min, avg, max) = (9.193, 9.555, 9.806), stdev = 0.166
  CI (99.9%): [9.378, 9.732] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ExceptionStackTraceBenchmark.new_exc_override_fillInStackTrace
# Parameters: (message = Something wrong happened., stackDepth = 64)

# Run progress: 86.67% complete, ETA 00:11:01
# Fork: 1 of 3
# Warmup Iteration   1: 78.356 ns/op
# Warmup Iteration   2: 76.957 ns/op
# Warmup Iteration   3: 76.896 ns/op
# Warmup Iteration   4: 76.264 ns/op
# Warmup Iteration   5: 76.955 ns/op
Iteration   1: 76.869 ns/op
Iteration   2: 73.219 ns/op
Iteration   3: 75.041 ns/op
Iteration   4: 75.571 ns/op
Iteration   5: 74.357 ns/op

# Run progress: 88.89% complete, ETA 00:09:11
# Fork: 2 of 3
# Warmup Iteration   1: 78.193 ns/op
# Warmup Iteration   2: 74.650 ns/op
# Warmup Iteration   3: 74.618 ns/op
# Warmup Iteration   4: 75.305 ns/op
# Warmup Iteration   5: 78.114 ns/op
Iteration   1: 77.609 ns/op
Iteration   2: 75.313 ns/op
Iteration   3: 77.761 ns/op
Iteration   4: 73.578 ns/op
Iteration   5: 75.608 ns/op

# Run progress: 91.11% complete, ETA 00:07:20
# Fork: 3 of 3
# Warmup Iteration   1: 75.443 ns/op
# Warmup Iteration   2: 74.378 ns/op
# Warmup Iteration   3: 75.927 ns/op
# Warmup Iteration   4: 75.275 ns/op
# Warmup Iteration   5: 74.759 ns/op
Iteration   1: 77.452 ns/op
Iteration   2: 75.658 ns/op
Iteration   3: 77.398 ns/op
Iteration   4: 76.886 ns/op
Iteration   5: 73.708 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ExceptionStackTraceBenchmark.new_exc_override_fillInStackTrace":
  75.735 ±(99.9%) 1.657 ns/op [Average]
  (min, avg, max) = (73.219, 75.735, 77.761), stdev = 1.550
  CI (99.9%): [74.078, 77.392] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ExceptionStackTraceBenchmark.new_exc_override_fillInStackTrace
# Parameters: (message = Something wrong happened., stackDepth = 128)

# Run progress: 93.33% complete, ETA 00:05:30
# Fork: 1 of 3
# Warmup Iteration   1: 132.465 ns/op
# Warmup Iteration   2: 129.254 ns/op
# Warmup Iteration   3: 134.262 ns/op
# Warmup Iteration   4: 137.663 ns/op
# Warmup Iteration   5: 138.215 ns/op
Iteration   1: 136.920 ns/op
Iteration   2: 137.853 ns/op
Iteration   3: 138.271 ns/op
Iteration   4: 137.961 ns/op
Iteration   5: 137.915 ns/op

# Run progress: 95.56% complete, ETA 00:03:40
# Fork: 2 of 3
# Warmup Iteration   1: 137.887 ns/op
# Warmup Iteration   2: 137.506 ns/op
# Warmup Iteration   3: 132.560 ns/op
# Warmup Iteration   4: 130.442 ns/op
# Warmup Iteration   5: 134.019 ns/op
Iteration   1: 134.159 ns/op
Iteration   2: 130.418 ns/op
Iteration   3: 131.466 ns/op
Iteration   4: 131.588 ns/op
Iteration   5: 131.453 ns/op

# Run progress: 97.78% complete, ETA 00:01:50
# Fork: 3 of 3
# Warmup Iteration   1: 136.554 ns/op
# Warmup Iteration   2: 130.244 ns/op
# Warmup Iteration   3: 129.535 ns/op
# Warmup Iteration   4: 132.508 ns/op
# Warmup Iteration   5: 136.789 ns/op
Iteration   1: 137.506 ns/op
Iteration   2: 137.996 ns/op
Iteration   3: 133.296 ns/op
Iteration   4: 133.746 ns/op
Iteration   5: 129.689 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ExceptionStackTraceBenchmark.new_exc_override_fillInStackTrace":
  134.682 ±(99.9%) 3.436 ns/op [Average]
  (min, avg, max) = (129.689, 134.682, 138.271), stdev = 3.214
  CI (99.9%): [131.246, 138.118] (assumes normal distribution)


# Run complete. Total time: 01:22:40

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                                                       (message)  (stackDepth)  Mode  Cnt      Score      Error  Units
ExceptionStackTraceBenchmark.constant_exc                       Something wrong happened.             1  avgt   15      2.860 ±    0.059  ns/op
ExceptionStackTraceBenchmark.constant_exc                       Something wrong happened.            64  avgt   15     65.425 ±    2.146  ns/op
ExceptionStackTraceBenchmark.constant_exc                       Something wrong happened.           128  avgt   15    123.904 ±    3.112  ns/op
ExceptionStackTraceBenchmark.get_stack_trace                    Something wrong happened.             1  avgt   15   6148.337 ±  164.868  ns/op
ExceptionStackTraceBenchmark.get_stack_trace                    Something wrong happened.            64  avgt   15  21475.336 ±  715.955  ns/op
ExceptionStackTraceBenchmark.get_stack_trace                    Something wrong happened.           128  avgt   15  37376.137 ± 1271.640  ns/op
ExceptionStackTraceBenchmark.lambda_function_exc                Something wrong happened.             1  avgt   15   1100.863 ±   24.571  ns/op
ExceptionStackTraceBenchmark.lambda_function_exc                Something wrong happened.            64  avgt   15   3542.287 ±   95.110  ns/op
ExceptionStackTraceBenchmark.lambda_function_exc                Something wrong happened.           128  avgt   15   6243.911 ±  219.655  ns/op
ExceptionStackTraceBenchmark.new_exc                            Something wrong happened.             1  avgt   15   1050.316 ±   35.141  ns/op
ExceptionStackTraceBenchmark.new_exc                            Something wrong happened.            64  avgt   15   3456.566 ±  100.869  ns/op
ExceptionStackTraceBenchmark.new_exc                            Something wrong happened.           128  avgt   15   5906.608 ±  172.781  ns/op
ExceptionStackTraceBenchmark.new_exc_override_fillInStackTrace  Something wrong happened.             1  avgt   15      9.555 ±    0.177  ns/op
ExceptionStackTraceBenchmark.new_exc_override_fillInStackTrace  Something wrong happened.            64  avgt   15     75.735 ±    1.657  ns/op
ExceptionStackTraceBenchmark.new_exc_override_fillInStackTrace  Something wrong happened.           128  avgt   15    134.682 ±    3.436  ns/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_c1_c2_jit/ExceptionStackTraceBenchmark.json
Running java  -jar benchmarks/target/benchmarks.jar .*ExceptionThrowBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_c1_c2_jit/ExceptionThrowBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ExceptionThrowBenchmark.constant_exc
# Parameters: (message = Something wrong happened.)

# Run progress: 0.00% complete, ETA 00:20:00
# Fork: 1 of 3
# Warmup Iteration   1: 2.869 ns/op
# Warmup Iteration   2: 2.957 ns/op
# Warmup Iteration   3: 2.476 ns/op
# Warmup Iteration   4: 2.647 ns/op
# Warmup Iteration   5: 2.633 ns/op
Iteration   1: 2.628 ns/op
Iteration   2: 2.624 ns/op
Iteration   3: 2.619 ns/op
Iteration   4: 2.618 ns/op
Iteration   5: 2.619 ns/op

# Run progress: 8.33% complete, ETA 00:20:12
# Fork: 2 of 3
# Warmup Iteration   1: 2.856 ns/op
# Warmup Iteration   2: 2.950 ns/op
# Warmup Iteration   3: 2.470 ns/op
# Warmup Iteration   4: 2.477 ns/op
# Warmup Iteration   5: 2.482 ns/op
Iteration   1: 2.488 ns/op
Iteration   2: 2.487 ns/op
Iteration   3: 2.646 ns/op
Iteration   4: 2.643 ns/op
Iteration   5: 2.638 ns/op

# Run progress: 16.67% complete, ETA 00:18:22
# Fork: 3 of 3
# Warmup Iteration   1: 2.863 ns/op
# Warmup Iteration   2: 2.953 ns/op
# Warmup Iteration   3: 2.478 ns/op
# Warmup Iteration   4: 2.480 ns/op
# Warmup Iteration   5: 2.483 ns/op
Iteration   1: 2.488 ns/op
Iteration   2: 2.454 ns/op
Iteration   3: 2.453 ns/op
Iteration   4: 2.503 ns/op
Iteration   5: 2.508 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ExceptionThrowBenchmark.constant_exc":
  2.561 ±(99.9%) 0.083 ns/op [Average]
  (min, avg, max) = (2.453, 2.561, 2.646), stdev = 0.077
  CI (99.9%): [2.478, 2.644] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ExceptionThrowBenchmark.lambda_function_exc
# Parameters: (message = Something wrong happened.)

# Run progress: 25.00% complete, ETA 00:16:32
# Fork: 1 of 3
# Warmup Iteration   1: 1111.684 ns/op
# Warmup Iteration   2: 1077.264 ns/op
# Warmup Iteration   3: 1140.999 ns/op
# Warmup Iteration   4: 1095.250 ns/op
# Warmup Iteration   5: 1116.129 ns/op
Iteration   1: 1169.487 ns/op
Iteration   2: 1131.419 ns/op
Iteration   3: 1164.545 ns/op
Iteration   4: 1087.586 ns/op
Iteration   5: 1150.280 ns/op

# Run progress: 33.33% complete, ETA 00:14:41
# Fork: 2 of 3
# Warmup Iteration   1: 1092.154 ns/op
# Warmup Iteration   2: 1111.640 ns/op
# Warmup Iteration   3: 1086.472 ns/op
# Warmup Iteration   4: 1064.447 ns/op
# Warmup Iteration   5: 1103.544 ns/op
Iteration   1: 1100.506 ns/op
Iteration   2: 1084.850 ns/op
Iteration   3: 1109.499 ns/op
Iteration   4: 1112.770 ns/op
Iteration   5: 1108.944 ns/op

# Run progress: 41.67% complete, ETA 00:12:51
# Fork: 3 of 3
# Warmup Iteration   1: 1084.523 ns/op
# Warmup Iteration   2: 1046.862 ns/op
# Warmup Iteration   3: 1137.284 ns/op
# Warmup Iteration   4: 1130.550 ns/op
# Warmup Iteration   5: 1141.692 ns/op
Iteration   1: 1126.157 ns/op
Iteration   2: 1127.662 ns/op
Iteration   3: 1131.677 ns/op
Iteration   4: 1153.233 ns/op
Iteration   5: 1081.107 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ExceptionThrowBenchmark.lambda_function_exc":
  1122.648 ±(99.9%) 30.206 ns/op [Average]
  (min, avg, max) = (1081.107, 1122.648, 1169.487), stdev = 28.254
  CI (99.9%): [1092.443, 1152.854] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ExceptionThrowBenchmark.new_exc
# Parameters: (message = Something wrong happened.)

# Run progress: 50.00% complete, ETA 00:11:01
# Fork: 1 of 3
# Warmup Iteration   1: 1043.096 ns/op
# Warmup Iteration   2: 1062.501 ns/op
# Warmup Iteration   3: 1030.071 ns/op
# Warmup Iteration   4: 1059.854 ns/op
# Warmup Iteration   5: 1008.349 ns/op
Iteration   1: 1084.978 ns/op
Iteration   2: 1010.513 ns/op
Iteration   3: 1032.205 ns/op
Iteration   4: 1032.808 ns/op
Iteration   5: 1082.308 ns/op

# Run progress: 58.33% complete, ETA 00:09:11
# Fork: 2 of 3
# Warmup Iteration   1: 1082.547 ns/op
# Warmup Iteration   2: 1055.921 ns/op
# Warmup Iteration   3: 1097.347 ns/op
# Warmup Iteration   4: 1071.751 ns/op
# Warmup Iteration   5: 1081.701 ns/op
Iteration   1: 1068.344 ns/op
Iteration   2: 1057.629 ns/op
Iteration   3: 1091.320 ns/op
Iteration   4: 1097.809 ns/op
Iteration   5: 1069.049 ns/op

# Run progress: 66.67% complete, ETA 00:07:20
# Fork: 3 of 3
# Warmup Iteration   1: 1022.454 ns/op
# Warmup Iteration   2: 1042.036 ns/op
# Warmup Iteration   3: 1100.591 ns/op
# Warmup Iteration   4: 1052.124 ns/op
# Warmup Iteration   5: 1056.695 ns/op
Iteration   1: 1104.686 ns/op
Iteration   2: 1100.283 ns/op
Iteration   3: 1088.956 ns/op
Iteration   4: 1077.903 ns/op
Iteration   5: 1061.458 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ExceptionThrowBenchmark.new_exc":
  1070.683 ±(99.9%) 29.581 ns/op [Average]
  (min, avg, max) = (1010.513, 1070.683, 1104.686), stdev = 27.670
  CI (99.9%): [1041.102, 1100.264] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ExceptionThrowBenchmark.new_exc_override_fillInStackTrace
# Parameters: (message = Something wrong happened.)

# Run progress: 75.00% complete, ETA 00:05:30
# Fork: 1 of 3
# Warmup Iteration   1: 20.383 ns/op
# Warmup Iteration   2: 19.825 ns/op
# Warmup Iteration   3: 20.759 ns/op
# Warmup Iteration   4: 20.343 ns/op
# Warmup Iteration   5: 20.085 ns/op
Iteration   1: 21.064 ns/op
Iteration   2: 20.293 ns/op
Iteration   3: 20.041 ns/op
Iteration   4: 20.871 ns/op
Iteration   5: 20.601 ns/op

# Run progress: 83.33% complete, ETA 00:03:40
# Fork: 2 of 3
# Warmup Iteration   1: 21.037 ns/op
# Warmup Iteration   2: 21.104 ns/op
# Warmup Iteration   3: 20.386 ns/op
# Warmup Iteration   4: 20.058 ns/op
# Warmup Iteration   5: 20.160 ns/op
Iteration   1: 20.298 ns/op
Iteration   2: 20.655 ns/op
Iteration   3: 20.183 ns/op
Iteration   4: 20.888 ns/op
Iteration   5: 21.102 ns/op

# Run progress: 91.67% complete, ETA 00:01:50
# Fork: 3 of 3
# Warmup Iteration   1: 20.896 ns/op
# Warmup Iteration   2: 20.538 ns/op
# Warmup Iteration   3: 21.039 ns/op
# Warmup Iteration   4: 19.784 ns/op
# Warmup Iteration   5: 20.543 ns/op
Iteration   1: 20.327 ns/op
Iteration   2: 20.346 ns/op
Iteration   3: 20.783 ns/op
Iteration   4: 21.061 ns/op
Iteration   5: 20.614 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ExceptionThrowBenchmark.new_exc_override_fillInStackTrace":
  20.609 ±(99.9%) 0.371 ns/op [Average]
  (min, avg, max) = (20.041, 20.609, 21.102), stdev = 0.347
  CI (99.9%): [20.238, 20.979] (assumes normal distribution)


# Run complete. Total time: 00:22:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                                                  (message)  Mode  Cnt     Score    Error  Units
ExceptionThrowBenchmark.constant_exc                       Something wrong happened.  avgt   15     2.561 ±  0.083  ns/op
ExceptionThrowBenchmark.lambda_function_exc                Something wrong happened.  avgt   15  1122.648 ± 30.206  ns/op
ExceptionThrowBenchmark.new_exc                            Something wrong happened.  avgt   15  1070.683 ± 29.581  ns/op
ExceptionThrowBenchmark.new_exc_override_fillInStackTrace  Something wrong happened.  avgt   15    20.609 ±  0.371  ns/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_c1_c2_jit/ExceptionThrowBenchmark.json
Running java  -jar benchmarks/target/benchmarks.jar .*StackFrameIteratorBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_c1_c2_jit/StackFrameIteratorBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StackFrameIteratorBenchmark.get_caller_stack_frame_StackWalker
# Parameters: (stackDepth = 1)

# Run progress: 0.00% complete, ETA 01:45:00
# Fork: 1 of 3
# Warmup Iteration   1: 700.606 ns/op
# Warmup Iteration   2: 698.504 ns/op
# Warmup Iteration   3: 738.624 ns/op
# Warmup Iteration   4: 745.443 ns/op
# Warmup Iteration   5: 703.141 ns/op
Iteration   1: 709.434 ns/op
Iteration   2: 715.691 ns/op
Iteration   3: 727.466 ns/op
Iteration   4: 744.461 ns/op
Iteration   5: 737.606 ns/op

# Run progress: 1.59% complete, ETA 01:53:56
# Fork: 2 of 3
# Warmup Iteration   1: 684.291 ns/op
# Warmup Iteration   2: 739.107 ns/op
# Warmup Iteration   3: 730.714 ns/op
# Warmup Iteration   4: 716.433 ns/op
# Warmup Iteration   5: 718.883 ns/op
Iteration   1: 745.218 ns/op
Iteration   2: 721.894 ns/op
Iteration   3: 743.023 ns/op
Iteration   4: 704.705 ns/op
Iteration   5: 698.284 ns/op

# Run progress: 3.17% complete, ETA 01:52:05
# Fork: 3 of 3
# Warmup Iteration   1: 717.675 ns/op
# Warmup Iteration   2: 692.739 ns/op
# Warmup Iteration   3: 686.015 ns/op
# Warmup Iteration   4: 734.343 ns/op
# Warmup Iteration   5: 686.315 ns/op
Iteration   1: 698.181 ns/op
Iteration   2: 708.043 ns/op
Iteration   3: 739.700 ns/op
Iteration   4: 736.850 ns/op
Iteration   5: 735.502 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StackFrameIteratorBenchmark.get_caller_stack_frame_StackWalker":
  724.404 ±(99.9%) 18.538 ns/op [Average]
  (min, avg, max) = (698.181, 724.404, 745.218), stdev = 17.341
  CI (99.9%): [705.865, 742.942] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StackFrameIteratorBenchmark.get_caller_stack_frame_StackWalker
# Parameters: (stackDepth = 64)

# Run progress: 4.76% complete, ETA 01:50:14
# Fork: 1 of 3
# Warmup Iteration   1: 746.756 ns/op
# Warmup Iteration   2: 713.962 ns/op
# Warmup Iteration   3: 745.580 ns/op
# Warmup Iteration   4: 747.757 ns/op
# Warmup Iteration   5: 717.301 ns/op
Iteration   1: 729.484 ns/op
Iteration   2: 706.941 ns/op
Iteration   3: 708.610 ns/op
Iteration   4: 727.663 ns/op
Iteration   5: 749.717 ns/op

# Run progress: 6.35% complete, ETA 01:48:24
# Fork: 2 of 3
# Warmup Iteration   1: 740.964 ns/op
# Warmup Iteration   2: 688.715 ns/op
# Warmup Iteration   3: 726.483 ns/op
# Warmup Iteration   4: 741.414 ns/op
# Warmup Iteration   5: 714.176 ns/op
Iteration   1: 751.653 ns/op
Iteration   2: 749.577 ns/op
Iteration   3: 737.444 ns/op
Iteration   4: 750.831 ns/op
Iteration   5: 748.783 ns/op

# Run progress: 7.94% complete, ETA 01:46:34
# Fork: 3 of 3
# Warmup Iteration   1: 702.723 ns/op
# Warmup Iteration   2: 723.186 ns/op
# Warmup Iteration   3: 700.867 ns/op
# Warmup Iteration   4: 716.913 ns/op
# Warmup Iteration   5: 722.788 ns/op
Iteration   1: 728.523 ns/op
Iteration   2: 721.167 ns/op
Iteration   3: 718.653 ns/op
Iteration   4: 764.272 ns/op
Iteration   5: 759.748 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StackFrameIteratorBenchmark.get_caller_stack_frame_StackWalker":
  736.871 ±(99.9%) 19.459 ns/op [Average]
  (min, avg, max) = (706.941, 736.871, 764.272), stdev = 18.202
  CI (99.9%): [717.412, 756.330] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StackFrameIteratorBenchmark.get_caller_stack_frame_StackWalker
# Parameters: (stackDepth = 128)

# Run progress: 9.52% complete, ETA 01:44:43
# Fork: 1 of 3
# Warmup Iteration   1: 713.956 ns/op
# Warmup Iteration   2: 681.912 ns/op
# Warmup Iteration   3: 696.000 ns/op
# Warmup Iteration   4: 696.333 ns/op
# Warmup Iteration   5: 696.975 ns/op
Iteration   1: 697.123 ns/op
Iteration   2: 733.090 ns/op
Iteration   3: 707.994 ns/op
Iteration   4: 706.982 ns/op
Iteration   5: 707.560 ns/op

# Run progress: 11.11% complete, ETA 01:42:53
# Fork: 2 of 3
# Warmup Iteration   1: 714.036 ns/op
# Warmup Iteration   2: 694.195 ns/op
# Warmup Iteration   3: 715.922 ns/op
# Warmup Iteration   4: 685.336 ns/op
# Warmup Iteration   5: 692.073 ns/op
Iteration   1: 704.503 ns/op
Iteration   2: 709.375 ns/op
Iteration   3: 741.724 ns/op
Iteration   4: 739.579 ns/op
Iteration   5: 738.109 ns/op

# Run progress: 12.70% complete, ETA 01:41:03
# Fork: 3 of 3
# Warmup Iteration   1: 713.554 ns/op
# Warmup Iteration   2: 709.480 ns/op
# Warmup Iteration   3: 723.750 ns/op
# Warmup Iteration   4: 697.517 ns/op
# Warmup Iteration   5: 707.351 ns/op
Iteration   1: 689.439 ns/op
Iteration   2: 689.005 ns/op
Iteration   3: 742.202 ns/op
Iteration   4: 736.446 ns/op
Iteration   5: 724.397 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StackFrameIteratorBenchmark.get_caller_stack_frame_StackWalker":
  717.835 ±(99.9%) 20.813 ns/op [Average]
  (min, avg, max) = (689.005, 717.835, 742.202), stdev = 19.469
  CI (99.9%): [697.022, 738.649] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StackFrameIteratorBenchmark.get_the_Nth_backwards_stack_frame_GetStackTrace
# Parameters: (stackDepth = 1)

# Run progress: 14.29% complete, ETA 01:39:13
# Fork: 1 of 3
# Warmup Iteration   1: 6771.077 ns/op
# Warmup Iteration   2: 7257.244 ns/op
# Warmup Iteration   3: 6925.250 ns/op
# Warmup Iteration   4: 6847.227 ns/op
# Warmup Iteration   5: 6750.504 ns/op
Iteration   1: 6768.836 ns/op
Iteration   2: 7152.622 ns/op
Iteration   3: 6833.182 ns/op
Iteration   4: 7043.546 ns/op
Iteration   5: 6814.962 ns/op

# Run progress: 15.87% complete, ETA 01:37:22
# Fork: 2 of 3
# Warmup Iteration   1: 7204.517 ns/op
# Warmup Iteration   2: 7186.394 ns/op
# Warmup Iteration   3: 7156.562 ns/op
# Warmup Iteration   4: 7206.744 ns/op
# Warmup Iteration   5: 7179.530 ns/op
Iteration   1: 7180.640 ns/op
Iteration   2: 7157.093 ns/op
Iteration   3: 6869.538 ns/op
Iteration   4: 7177.355 ns/op
Iteration   5: 7211.943 ns/op

# Run progress: 17.46% complete, ETA 01:35:32
# Fork: 3 of 3
# Warmup Iteration   1: 6769.161 ns/op
# Warmup Iteration   2: 6879.447 ns/op
# Warmup Iteration   3: 7213.919 ns/op
# Warmup Iteration   4: 7253.356 ns/op
# Warmup Iteration   5: 7360.602 ns/op
Iteration   1: 7377.174 ns/op
Iteration   2: 7406.356 ns/op
Iteration   3: 7360.631 ns/op
Iteration   4: 7323.610 ns/op
Iteration   5: 7315.199 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StackFrameIteratorBenchmark.get_the_Nth_backwards_stack_frame_GetStackTrace":
  7132.846 ±(99.9%) 233.555 ns/op [Average]
  (min, avg, max) = (6768.836, 7132.846, 7406.356), stdev = 218.467
  CI (99.9%): [6899.291, 7366.401] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StackFrameIteratorBenchmark.get_the_Nth_backwards_stack_frame_GetStackTrace
# Parameters: (stackDepth = 64)

# Run progress: 19.05% complete, ETA 01:33:42
# Fork: 1 of 3
# Warmup Iteration   1: 24187.874 ns/op
# Warmup Iteration   2: 25524.425 ns/op
# Warmup Iteration   3: 24982.031 ns/op
# Warmup Iteration   4: 23808.396 ns/op
# Warmup Iteration   5: 25341.265 ns/op
Iteration   1: 24353.996 ns/op
Iteration   2: 24999.290 ns/op
Iteration   3: 25743.952 ns/op
Iteration   4: 25426.962 ns/op
Iteration   5: 24197.278 ns/op

# Run progress: 20.63% complete, ETA 01:31:52
# Fork: 2 of 3
# Warmup Iteration   1: 25306.251 ns/op
# Warmup Iteration   2: 24878.621 ns/op
# Warmup Iteration   3: 25690.976 ns/op
# Warmup Iteration   4: 25761.840 ns/op
# Warmup Iteration   5: 23933.762 ns/op
Iteration   1: 25387.991 ns/op
Iteration   2: 24489.226 ns/op
Iteration   3: 26000.560 ns/op
Iteration   4: 25313.456 ns/op
Iteration   5: 24519.995 ns/op

# Run progress: 22.22% complete, ETA 01:30:01
# Fork: 3 of 3
# Warmup Iteration   1: 24761.677 ns/op
# Warmup Iteration   2: 24153.750 ns/op
# Warmup Iteration   3: 24173.160 ns/op
# Warmup Iteration   4: 24180.785 ns/op
# Warmup Iteration   5: 25364.333 ns/op
Iteration   1: 24927.199 ns/op
Iteration   2: 25135.141 ns/op
Iteration   3: 23706.755 ns/op
Iteration   4: 23716.601 ns/op
Iteration   5: 23758.440 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StackFrameIteratorBenchmark.get_the_Nth_backwards_stack_frame_GetStackTrace":
  24778.456 ±(99.9%) 792.170 ns/op [Average]
  (min, avg, max) = (23706.755, 24778.456, 26000.560), stdev = 740.996
  CI (99.9%): [23986.286, 25570.626] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StackFrameIteratorBenchmark.get_the_Nth_backwards_stack_frame_GetStackTrace
# Parameters: (stackDepth = 128)

# Run progress: 23.81% complete, ETA 01:28:11
# Fork: 1 of 3
# Warmup Iteration   1: 42296.585 ns/op
# Warmup Iteration   2: 43538.566 ns/op
# Warmup Iteration   3: 43609.279 ns/op
# Warmup Iteration   4: 43595.451 ns/op
# Warmup Iteration   5: 41870.585 ns/op
Iteration   1: 42038.709 ns/op
Iteration   2: 41190.742 ns/op
Iteration   3: 41022.150 ns/op
Iteration   4: 41415.979 ns/op
Iteration   5: 44467.732 ns/op

# Run progress: 25.40% complete, ETA 01:26:21
# Fork: 2 of 3
# Warmup Iteration   1: 42386.541 ns/op
# Warmup Iteration   2: 41921.751 ns/op
# Warmup Iteration   3: 42849.403 ns/op
# Warmup Iteration   4: 41331.532 ns/op
# Warmup Iteration   5: 44442.140 ns/op
Iteration   1: 44286.470 ns/op
Iteration   2: 41878.501 ns/op
Iteration   3: 41898.510 ns/op
Iteration   4: 43132.049 ns/op
Iteration   5: 44462.629 ns/op

# Run progress: 26.98% complete, ETA 01:24:31
# Fork: 3 of 3
# Warmup Iteration   1: 41280.790 ns/op
# Warmup Iteration   2: 44234.856 ns/op
# Warmup Iteration   3: 43771.666 ns/op
# Warmup Iteration   4: 42863.411 ns/op
# Warmup Iteration   5: 42920.922 ns/op
Iteration   1: 43741.302 ns/op
Iteration   2: 44008.507 ns/op
Iteration   3: 44459.120 ns/op
Iteration   4: 42886.680 ns/op
Iteration   5: 41886.664 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StackFrameIteratorBenchmark.get_the_Nth_backwards_stack_frame_GetStackTrace":
  42851.716 ±(99.9%) 1390.181 ns/op [Average]
  (min, avg, max) = (41022.150, 42851.716, 44467.732), stdev = 1300.376
  CI (99.9%): [41461.535, 44241.897] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StackFrameIteratorBenchmark.get_the_Nth_backwards_stack_frame_StackWalker
# Parameters: (stackDepth = 1)

# Run progress: 28.57% complete, ETA 01:22:40
# Fork: 1 of 3
# Warmup Iteration   1: 1429.405 ns/op
# Warmup Iteration   2: 1491.873 ns/op
# Warmup Iteration   3: 1479.533 ns/op
# Warmup Iteration   4: 1481.710 ns/op
# Warmup Iteration   5: 1448.982 ns/op
Iteration   1: 1400.122 ns/op
Iteration   2: 1405.043 ns/op
Iteration   3: 1408.148 ns/op
Iteration   4: 1393.805 ns/op
Iteration   5: 1498.158 ns/op

# Run progress: 30.16% complete, ETA 01:20:50
# Fork: 2 of 3
# Warmup Iteration   1: 1454.774 ns/op
# Warmup Iteration   2: 1416.233 ns/op
# Warmup Iteration   3: 1419.157 ns/op
# Warmup Iteration   4: 1481.173 ns/op
# Warmup Iteration   5: 1496.172 ns/op
Iteration   1: 1488.910 ns/op
Iteration   2: 1451.526 ns/op
Iteration   3: 1478.150 ns/op
Iteration   4: 1471.894 ns/op
Iteration   5: 1456.874 ns/op

# Run progress: 31.75% complete, ETA 01:19:00
# Fork: 3 of 3
# Warmup Iteration   1: 1505.181 ns/op
# Warmup Iteration   2: 1510.431 ns/op
# Warmup Iteration   3: 1431.432 ns/op
# Warmup Iteration   4: 1433.082 ns/op
# Warmup Iteration   5: 1447.594 ns/op
Iteration   1: 1532.211 ns/op
Iteration   2: 1478.832 ns/op
Iteration   3: 1417.277 ns/op
Iteration   4: 1538.167 ns/op
Iteration   5: 1532.470 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StackFrameIteratorBenchmark.get_the_Nth_backwards_stack_frame_StackWalker":
  1463.439 ±(99.9%) 53.529 ns/op [Average]
  (min, avg, max) = (1393.805, 1463.439, 1538.167), stdev = 50.071
  CI (99.9%): [1409.911, 1516.968] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StackFrameIteratorBenchmark.get_the_Nth_backwards_stack_frame_StackWalker
# Parameters: (stackDepth = 64)

# Run progress: 33.33% complete, ETA 01:17:10
# Fork: 1 of 3
# Warmup Iteration   1: 19178.185 ns/op
# Warmup Iteration   2: 19127.687 ns/op
# Warmup Iteration   3: 19915.157 ns/op
# Warmup Iteration   4: 18899.332 ns/op
# Warmup Iteration   5: 18712.351 ns/op
Iteration   1: 19501.966 ns/op
Iteration   2: 20158.957 ns/op
Iteration   3: 19828.507 ns/op
Iteration   4: 18770.574 ns/op
Iteration   5: 19180.759 ns/op

# Run progress: 34.92% complete, ETA 01:15:19
# Fork: 2 of 3
# Warmup Iteration   1: 20312.933 ns/op
# Warmup Iteration   2: 20284.402 ns/op
# Warmup Iteration   3: 20209.735 ns/op
# Warmup Iteration   4: 20213.348 ns/op
# Warmup Iteration   5: 19803.327 ns/op
Iteration   1: 19200.613 ns/op
Iteration   2: 19201.064 ns/op
Iteration   3: 20123.931 ns/op
Iteration   4: 19526.581 ns/op
Iteration   5: 19251.304 ns/op

# Run progress: 36.51% complete, ETA 01:13:29
# Fork: 3 of 3
# Warmup Iteration   1: 19145.025 ns/op
# Warmup Iteration   2: 20187.351 ns/op
# Warmup Iteration   3: 19458.371 ns/op
# Warmup Iteration   4: 19776.839 ns/op
# Warmup Iteration   5: 19761.990 ns/op
Iteration   1: 20197.629 ns/op
Iteration   2: 20102.092 ns/op
Iteration   3: 20157.397 ns/op
Iteration   4: 20137.315 ns/op
Iteration   5: 20146.999 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StackFrameIteratorBenchmark.get_the_Nth_backwards_stack_frame_StackWalker":
  19699.046 ±(99.9%) 520.512 ns/op [Average]
  (min, avg, max) = (18770.574, 19699.046, 20197.629), stdev = 486.887
  CI (99.9%): [19178.534, 20219.558] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StackFrameIteratorBenchmark.get_the_Nth_backwards_stack_frame_StackWalker
# Parameters: (stackDepth = 128)

# Run progress: 38.10% complete, ETA 01:11:39
# Fork: 1 of 3
# Warmup Iteration   1: 34992.818 ns/op
# Warmup Iteration   2: 35169.619 ns/op
# Warmup Iteration   3: 36609.393 ns/op
# Warmup Iteration   4: 36748.149 ns/op
# Warmup Iteration   5: 36182.195 ns/op
Iteration   1: 35935.326 ns/op
Iteration   2: 37828.580 ns/op
Iteration   3: 37691.901 ns/op
Iteration   4: 37639.139 ns/op
Iteration   5: 37628.029 ns/op

# Run progress: 39.68% complete, ETA 01:09:49
# Fork: 2 of 3
# Warmup Iteration   1: 36848.385 ns/op
# Warmup Iteration   2: 35095.832 ns/op
# Warmup Iteration   3: 35665.514 ns/op
# Warmup Iteration   4: 35685.449 ns/op
# Warmup Iteration   5: 35692.174 ns/op
Iteration   1: 35759.966 ns/op
Iteration   2: 36555.729 ns/op
Iteration   3: 35619.151 ns/op
Iteration   4: 36212.723 ns/op
Iteration   5: 37983.474 ns/op

# Run progress: 41.27% complete, ETA 01:07:58
# Fork: 3 of 3
# Warmup Iteration   1: 37203.244 ns/op
# Warmup Iteration   2: 37186.171 ns/op
# Warmup Iteration   3: 36506.634 ns/op
# Warmup Iteration   4: 36849.673 ns/op
# Warmup Iteration   5: 37311.425 ns/op
Iteration   1: 37514.138 ns/op
Iteration   2: 37474.895 ns/op
Iteration   3: 37469.113 ns/op
Iteration   4: 36940.260 ns/op
Iteration   5: 35904.882 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StackFrameIteratorBenchmark.get_the_Nth_backwards_stack_frame_StackWalker":
  36943.820 ±(99.9%) 912.332 ns/op [Average]
  (min, avg, max) = (35619.151, 36943.820, 37983.474), stdev = 853.396
  CI (99.9%): [36031.488, 37856.153] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StackFrameIteratorBenchmark.get_throwable
# Parameters: (stackDepth = 1)

# Run progress: 42.86% complete, ETA 01:06:08
# Fork: 1 of 3
# Warmup Iteration   1: 1061.940 ns/op
# Warmup Iteration   2: 1002.010 ns/op
# Warmup Iteration   3: 995.535 ns/op
# Warmup Iteration   4: 1003.615 ns/op
# Warmup Iteration   5: 1007.092 ns/op
Iteration   1: 1008.027 ns/op
Iteration   2: 1043.910 ns/op
Iteration   3: 1045.675 ns/op
Iteration   4: 1042.973 ns/op
Iteration   5: 1060.663 ns/op

# Run progress: 44.44% complete, ETA 01:04:18
# Fork: 2 of 3
# Warmup Iteration   1: 1035.538 ns/op
# Warmup Iteration   2: 1037.681 ns/op
# Warmup Iteration   3: 1001.091 ns/op
# Warmup Iteration   4: 1064.280 ns/op
# Warmup Iteration   5: 1036.755 ns/op
Iteration   1: 1052.586 ns/op
Iteration   2: 1061.725 ns/op
Iteration   3: 1044.951 ns/op
Iteration   4: 1004.801 ns/op
Iteration   5: 1067.335 ns/op

# Run progress: 46.03% complete, ETA 01:02:28
# Fork: 3 of 3
# Warmup Iteration   1: 1024.573 ns/op
# Warmup Iteration   2: 1046.650 ns/op
# Warmup Iteration   3: 1012.457 ns/op
# Warmup Iteration   4: 1035.545 ns/op
# Warmup Iteration   5: 1030.916 ns/op
Iteration   1: 1078.436 ns/op
Iteration   2: 1086.452 ns/op
Iteration   3: 1047.054 ns/op
Iteration   4: 1081.294 ns/op
Iteration   5: 1025.303 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StackFrameIteratorBenchmark.get_throwable":
  1050.079 ±(99.9%) 25.918 ns/op [Average]
  (min, avg, max) = (1004.801, 1050.079, 1086.452), stdev = 24.244
  CI (99.9%): [1024.160, 1075.997] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StackFrameIteratorBenchmark.get_throwable
# Parameters: (stackDepth = 64)

# Run progress: 47.62% complete, ETA 01:00:37
# Fork: 1 of 3
# Warmup Iteration   1: 3424.011 ns/op
# Warmup Iteration   2: 3458.941 ns/op
# Warmup Iteration   3: 3376.278 ns/op
# Warmup Iteration   4: 3435.213 ns/op
# Warmup Iteration   5: 3435.988 ns/op
Iteration   1: 3450.001 ns/op
Iteration   2: 3417.793 ns/op
Iteration   3: 3324.816 ns/op
Iteration   4: 3425.884 ns/op
Iteration   5: 3421.568 ns/op

# Run progress: 49.21% complete, ETA 00:58:47
# Fork: 2 of 3
# Warmup Iteration   1: 3452.473 ns/op
# Warmup Iteration   2: 3378.268 ns/op
# Warmup Iteration   3: 3406.896 ns/op
# Warmup Iteration   4: 3327.723 ns/op
# Warmup Iteration   5: 3321.965 ns/op
Iteration   1: 3507.920 ns/op
Iteration   2: 3441.252 ns/op
Iteration   3: 3421.587 ns/op
Iteration   4: 3302.636 ns/op
Iteration   5: 3329.550 ns/op

# Run progress: 50.79% complete, ETA 00:56:57
# Fork: 3 of 3
# Warmup Iteration   1: 3369.761 ns/op
# Warmup Iteration   2: 3359.854 ns/op
# Warmup Iteration   3: 3406.753 ns/op
# Warmup Iteration   4: 3405.993 ns/op
# Warmup Iteration   5: 3447.761 ns/op
Iteration   1: 3288.303 ns/op
Iteration   2: 3359.238 ns/op
Iteration   3: 3293.347 ns/op
Iteration   4: 3288.575 ns/op
Iteration   5: 3368.791 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StackFrameIteratorBenchmark.get_throwable":
  3376.084 ±(99.9%) 74.607 ns/op [Average]
  (min, avg, max) = (3288.303, 3376.084, 3507.920), stdev = 69.788
  CI (99.9%): [3301.477, 3450.691] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StackFrameIteratorBenchmark.get_throwable
# Parameters: (stackDepth = 128)

# Run progress: 52.38% complete, ETA 00:55:07
# Fork: 1 of 3
# Warmup Iteration   1: 5838.295 ns/op
# Warmup Iteration   2: 6107.384 ns/op
# Warmup Iteration   3: 6142.220 ns/op
# Warmup Iteration   4: 6047.981 ns/op
# Warmup Iteration   5: 6302.519 ns/op
Iteration   1: 6015.683 ns/op
Iteration   2: 6008.778 ns/op
Iteration   3: 5913.329 ns/op
Iteration   4: 5900.397 ns/op
Iteration   5: 6019.766 ns/op

# Run progress: 53.97% complete, ETA 00:53:16
# Fork: 2 of 3
# Warmup Iteration   1: 5746.965 ns/op
# Warmup Iteration   2: 5757.091 ns/op
# Warmup Iteration   3: 5899.127 ns/op
# Warmup Iteration   4: 6081.009 ns/op
# Warmup Iteration   5: 6082.883 ns/op
Iteration   1: 5681.724 ns/op
Iteration   2: 6091.069 ns/op
Iteration   3: 6097.364 ns/op
Iteration   4: 5993.952 ns/op
Iteration   5: 6097.940 ns/op

# Run progress: 55.56% complete, ETA 00:51:26
# Fork: 3 of 3
# Warmup Iteration   1: 5868.788 ns/op
# Warmup Iteration   2: 5902.872 ns/op
# Warmup Iteration   3: 6067.856 ns/op
# Warmup Iteration   4: 6067.740 ns/op
# Warmup Iteration   5: 5905.364 ns/op
Iteration   1: 5952.475 ns/op
Iteration   2: 6133.415 ns/op
Iteration   3: 5742.245 ns/op
Iteration   4: 5731.506 ns/op
Iteration   5: 5748.083 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StackFrameIteratorBenchmark.get_throwable":
  5941.848 ±(99.9%) 161.164 ns/op [Average]
  (min, avg, max) = (5681.724, 5941.848, 6133.415), stdev = 150.753
  CI (99.9%): [5780.684, 6103.013] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StackFrameIteratorBenchmark.get_top_stack_frame_GetStackTrace
# Parameters: (stackDepth = 1)

# Run progress: 57.14% complete, ETA 00:49:36
# Fork: 1 of 3
# Warmup Iteration   1: 7006.303 ns/op
# Warmup Iteration   2: 6651.907 ns/op
# Warmup Iteration   3: 6745.837 ns/op
# Warmup Iteration   4: 6694.245 ns/op
# Warmup Iteration   5: 6696.030 ns/op
Iteration   1: 6651.293 ns/op
Iteration   2: 6913.534 ns/op
Iteration   3: 7066.727 ns/op
Iteration   4: 6681.233 ns/op
Iteration   5: 6849.257 ns/op

# Run progress: 58.73% complete, ETA 00:47:46
# Fork: 2 of 3
# Warmup Iteration   1: 7027.529 ns/op
# Warmup Iteration   2: 6521.215 ns/op
# Warmup Iteration   3: 6634.884 ns/op
# Warmup Iteration   4: 7007.092 ns/op
# Warmup Iteration   5: 7036.040 ns/op
Iteration   1: 7028.644 ns/op
Iteration   2: 7014.475 ns/op
Iteration   3: 6805.276 ns/op
Iteration   4: 6531.200 ns/op
Iteration   5: 6925.244 ns/op

# Run progress: 60.32% complete, ETA 00:45:56
# Fork: 3 of 3
# Warmup Iteration   1: 7020.312 ns/op
# Warmup Iteration   2: 6975.763 ns/op
# Warmup Iteration   3: 7015.157 ns/op
# Warmup Iteration   4: 6883.742 ns/op
# Warmup Iteration   5: 6675.655 ns/op
Iteration   1: 6942.921 ns/op
Iteration   2: 6622.292 ns/op
Iteration   3: 6641.173 ns/op
Iteration   4: 6825.536 ns/op
Iteration   5: 6594.769 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StackFrameIteratorBenchmark.get_top_stack_frame_GetStackTrace":
  6806.238 ±(99.9%) 186.997 ns/op [Average]
  (min, avg, max) = (6531.200, 6806.238, 7066.727), stdev = 174.917
  CI (99.9%): [6619.241, 6993.235] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StackFrameIteratorBenchmark.get_top_stack_frame_GetStackTrace
# Parameters: (stackDepth = 64)

# Run progress: 61.90% complete, ETA 00:44:05
# Fork: 1 of 3
# Warmup Iteration   1: 22519.667 ns/op
# Warmup Iteration   2: 24067.721 ns/op
# Warmup Iteration   3: 23190.170 ns/op
# Warmup Iteration   4: 22390.080 ns/op
# Warmup Iteration   5: 22562.748 ns/op
Iteration   1: 22709.889 ns/op
Iteration   2: 23501.901 ns/op
Iteration   3: 24023.645 ns/op
Iteration   4: 24329.186 ns/op
Iteration   5: 24176.361 ns/op

# Run progress: 63.49% complete, ETA 00:42:15
# Fork: 2 of 3
# Warmup Iteration   1: 22915.694 ns/op
# Warmup Iteration   2: 22809.492 ns/op
# Warmup Iteration   3: 24053.627 ns/op
# Warmup Iteration   4: 23456.357 ns/op
# Warmup Iteration   5: 24047.480 ns/op
Iteration   1: 23225.486 ns/op
Iteration   2: 22330.375 ns/op
Iteration   3: 22384.330 ns/op
Iteration   4: 22380.287 ns/op
Iteration   5: 23452.072 ns/op

# Run progress: 65.08% complete, ETA 00:40:25
# Fork: 3 of 3
# Warmup Iteration   1: 22819.244 ns/op
# Warmup Iteration   2: 22402.302 ns/op
# Warmup Iteration   3: 23783.660 ns/op
# Warmup Iteration   4: 23807.218 ns/op
# Warmup Iteration   5: 23953.059 ns/op
Iteration   1: 22560.717 ns/op
Iteration   2: 22276.610 ns/op
Iteration   3: 22403.941 ns/op
Iteration   4: 22451.654 ns/op
Iteration   5: 22500.375 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StackFrameIteratorBenchmark.get_top_stack_frame_GetStackTrace":
  22980.455 ±(99.9%) 788.568 ns/op [Average]
  (min, avg, max) = (22276.610, 22980.455, 24329.186), stdev = 737.627
  CI (99.9%): [22191.887, 23769.023] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StackFrameIteratorBenchmark.get_top_stack_frame_GetStackTrace
# Parameters: (stackDepth = 128)

# Run progress: 66.67% complete, ETA 00:38:35
# Fork: 1 of 3
# Warmup Iteration   1: 39473.346 ns/op
# Warmup Iteration   2: 41407.086 ns/op
# Warmup Iteration   3: 41358.216 ns/op
# Warmup Iteration   4: 41321.405 ns/op
# Warmup Iteration   5: 39743.601 ns/op
Iteration   1: 39331.226 ns/op
Iteration   2: 39360.010 ns/op
Iteration   3: 39368.076 ns/op
Iteration   4: 40513.250 ns/op
Iteration   5: 41693.665 ns/op

# Run progress: 68.25% complete, ETA 00:36:44
# Fork: 2 of 3
# Warmup Iteration   1: 42085.846 ns/op
# Warmup Iteration   2: 41588.344 ns/op
# Warmup Iteration   3: 40420.914 ns/op
# Warmup Iteration   4: 42491.935 ns/op
# Warmup Iteration   5: 42067.024 ns/op
Iteration   1: 42114.520 ns/op
Iteration   2: 39528.005 ns/op
Iteration   3: 40751.422 ns/op
Iteration   4: 41535.446 ns/op
Iteration   5: 39637.221 ns/op

# Run progress: 69.84% complete, ETA 00:34:54
# Fork: 3 of 3
# Warmup Iteration   1: 39161.958 ns/op
# Warmup Iteration   2: 41101.696 ns/op
# Warmup Iteration   3: 40882.534 ns/op
# Warmup Iteration   4: 40167.090 ns/op
# Warmup Iteration   5: 39751.974 ns/op
Iteration   1: 41079.133 ns/op
Iteration   2: 40266.456 ns/op
Iteration   3: 40616.572 ns/op
Iteration   4: 41095.765 ns/op
Iteration   5: 41203.793 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StackFrameIteratorBenchmark.get_top_stack_frame_GetStackTrace":
  40539.637 ±(99.9%) 991.130 ns/op [Average]
  (min, avg, max) = (39331.226, 40539.637, 42114.520), stdev = 927.103
  CI (99.9%): [39548.507, 41530.767] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StackFrameIteratorBenchmark.get_top_stack_frame_StackWalker
# Parameters: (stackDepth = 1)

# Run progress: 71.43% complete, ETA 00:33:04
# Fork: 1 of 3
# Warmup Iteration   1: 1437.368 ns/op
# Warmup Iteration   2: 1430.023 ns/op
# Warmup Iteration   3: 1444.121 ns/op
# Warmup Iteration   4: 1406.388 ns/op
# Warmup Iteration   5: 1437.727 ns/op
Iteration   1: 1470.806 ns/op
Iteration   2: 1516.579 ns/op
Iteration   3: 1489.735 ns/op
Iteration   4: 1512.340 ns/op
Iteration   5: 1507.849 ns/op

# Run progress: 73.02% complete, ETA 00:31:14
# Fork: 2 of 3
# Warmup Iteration   1: 1425.419 ns/op
# Warmup Iteration   2: 1425.771 ns/op
# Warmup Iteration   3: 1377.452 ns/op
# Warmup Iteration   4: 1462.775 ns/op
# Warmup Iteration   5: 1463.173 ns/op
Iteration   1: 1485.097 ns/op
Iteration   2: 1482.351 ns/op
Iteration   3: 1371.605 ns/op
Iteration   4: 1434.011 ns/op
Iteration   5: 1489.875 ns/op

# Run progress: 74.60% complete, ETA 00:29:23
# Fork: 3 of 3
# Warmup Iteration   1: 1451.330 ns/op
# Warmup Iteration   2: 1452.770 ns/op
# Warmup Iteration   3: 1451.175 ns/op
# Warmup Iteration   4: 1401.988 ns/op
# Warmup Iteration   5: 1434.778 ns/op
Iteration   1: 1353.694 ns/op
Iteration   2: 1364.396 ns/op
Iteration   3: 1436.149 ns/op
Iteration   4: 1388.150 ns/op
Iteration   5: 1389.293 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StackFrameIteratorBenchmark.get_top_stack_frame_StackWalker":
  1446.129 ±(99.9%) 62.616 ns/op [Average]
  (min, avg, max) = (1353.694, 1446.129, 1516.579), stdev = 58.571
  CI (99.9%): [1383.513, 1508.745] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StackFrameIteratorBenchmark.get_top_stack_frame_StackWalker
# Parameters: (stackDepth = 64)

# Run progress: 76.19% complete, ETA 00:27:33
# Fork: 1 of 3
# Warmup Iteration   1: 1583.201 ns/op
# Warmup Iteration   2: 1548.605 ns/op
# Warmup Iteration   3: 1576.917 ns/op
# Warmup Iteration   4: 1587.040 ns/op
# Warmup Iteration   5: 1556.823 ns/op
Iteration   1: 1531.467 ns/op
Iteration   2: 1554.785 ns/op
Iteration   3: 1528.861 ns/op
Iteration   4: 1540.770 ns/op
Iteration   5: 1543.334 ns/op

# Run progress: 77.78% complete, ETA 00:25:43
# Fork: 2 of 3
# Warmup Iteration   1: 1544.509 ns/op
# Warmup Iteration   2: 1505.282 ns/op
# Warmup Iteration   3: 1522.513 ns/op
# Warmup Iteration   4: 1560.989 ns/op
# Warmup Iteration   5: 1551.971 ns/op
Iteration   1: 1563.200 ns/op
Iteration   2: 1565.593 ns/op
Iteration   3: 1500.901 ns/op
Iteration   4: 1471.445 ns/op
Iteration   5: 1601.767 ns/op

# Run progress: 79.37% complete, ETA 00:23:53
# Fork: 3 of 3
# Warmup Iteration   1: 1588.829 ns/op
# Warmup Iteration   2: 1584.622 ns/op
# Warmup Iteration   3: 1572.259 ns/op
# Warmup Iteration   4: 1612.127 ns/op
# Warmup Iteration   5: 1557.784 ns/op
Iteration   1: 1494.833 ns/op
Iteration   2: 1531.955 ns/op
Iteration   3: 1622.527 ns/op
Iteration   4: 1617.706 ns/op
Iteration   5: 1615.201 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StackFrameIteratorBenchmark.get_top_stack_frame_StackWalker":
  1552.290 ±(99.9%) 49.494 ns/op [Average]
  (min, avg, max) = (1471.445, 1552.290, 1622.527), stdev = 46.297
  CI (99.9%): [1502.796, 1601.784] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StackFrameIteratorBenchmark.get_top_stack_frame_StackWalker
# Parameters: (stackDepth = 128)

# Run progress: 80.95% complete, ETA 00:22:02
# Fork: 1 of 3
# Warmup Iteration   1: 1627.981 ns/op
# Warmup Iteration   2: 1643.998 ns/op
# Warmup Iteration   3: 1648.078 ns/op
# Warmup Iteration   4: 1648.847 ns/op
# Warmup Iteration   5: 1659.730 ns/op
Iteration   1: 1760.271 ns/op
Iteration   2: 1749.021 ns/op
Iteration   3: 1768.748 ns/op
Iteration   4: 1720.523 ns/op
Iteration   5: 1646.099 ns/op

# Run progress: 82.54% complete, ETA 00:20:12
# Fork: 2 of 3
# Warmup Iteration   1: 1711.731 ns/op
# Warmup Iteration   2: 1696.965 ns/op
# Warmup Iteration   3: 1787.713 ns/op
# Warmup Iteration   4: 1796.955 ns/op
# Warmup Iteration   5: 1680.544 ns/op
Iteration   1: 1720.250 ns/op
Iteration   2: 1812.520 ns/op
Iteration   3: 1804.427 ns/op
Iteration   4: 1697.933 ns/op
Iteration   5: 1707.518 ns/op

# Run progress: 84.13% complete, ETA 00:18:22
# Fork: 3 of 3
# Warmup Iteration   1: 1749.598 ns/op
# Warmup Iteration   2: 1700.618 ns/op
# Warmup Iteration   3: 1722.408 ns/op
# Warmup Iteration   4: 1686.375 ns/op
# Warmup Iteration   5: 1686.298 ns/op
Iteration   1: 1667.803 ns/op
Iteration   2: 1768.079 ns/op
Iteration   3: 1765.737 ns/op
Iteration   4: 1684.705 ns/op
Iteration   5: 1737.219 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StackFrameIteratorBenchmark.get_top_stack_frame_StackWalker":
  1734.057 ±(99.9%) 51.381 ns/op [Average]
  (min, avg, max) = (1646.099, 1734.057, 1812.520), stdev = 48.062
  CI (99.9%): [1682.676, 1785.438] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StackFrameIteratorBenchmark.retrieve_caller_stack_frame_SecurityManager
# Parameters: (stackDepth = 1)

# Run progress: 85.71% complete, ETA 00:16:32
# Fork: 1 of 3
# Warmup Iteration   1: 891.952 ns/op
# Warmup Iteration   2: 903.157 ns/op
# Warmup Iteration   3: 822.405 ns/op
# Warmup Iteration   4: 829.893 ns/op
# Warmup Iteration   5: 834.552 ns/op
Iteration   1: 837.242 ns/op
Iteration   2: 837.993 ns/op
Iteration   3: 868.359 ns/op
Iteration   4: 897.603 ns/op
Iteration   5: 854.333 ns/op

# Run progress: 87.30% complete, ETA 00:14:41
# Fork: 2 of 3
# Warmup Iteration   1: 880.566 ns/op
# Warmup Iteration   2: 898.548 ns/op
# Warmup Iteration   3: 887.762 ns/op
# Warmup Iteration   4: 849.183 ns/op
# Warmup Iteration   5: 889.674 ns/op
Iteration   1: 891.454 ns/op
Iteration   2: 889.535 ns/op
Iteration   3: 839.890 ns/op
Iteration   4: 834.112 ns/op
Iteration   5: 829.075 ns/op

# Run progress: 88.89% complete, ETA 00:12:51
# Fork: 3 of 3
# Warmup Iteration   1: 830.253 ns/op
# Warmup Iteration   2: 852.403 ns/op
# Warmup Iteration   3: 864.071 ns/op
# Warmup Iteration   4: 869.066 ns/op
# Warmup Iteration   5: 854.779 ns/op
Iteration   1: 887.246 ns/op
Iteration   2: 904.581 ns/op
Iteration   3: 904.355 ns/op
Iteration   4: 853.584 ns/op
Iteration   5: 886.147 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StackFrameIteratorBenchmark.retrieve_caller_stack_frame_SecurityManager":
  867.701 ±(99.9%) 29.889 ns/op [Average]
  (min, avg, max) = (829.075, 867.701, 904.581), stdev = 27.958
  CI (99.9%): [837.811, 897.590] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StackFrameIteratorBenchmark.retrieve_caller_stack_frame_SecurityManager
# Parameters: (stackDepth = 64)

# Run progress: 90.48% complete, ETA 00:11:01
# Fork: 1 of 3
# Warmup Iteration   1: 897.703 ns/op
# Warmup Iteration   2: 914.124 ns/op
# Warmup Iteration   3: 895.399 ns/op
# Warmup Iteration   4: 896.579 ns/op
# Warmup Iteration   5: 896.586 ns/op
Iteration   1: 897.908 ns/op
Iteration   2: 898.810 ns/op
Iteration   3: 898.553 ns/op
Iteration   4: 897.466 ns/op
Iteration   5: 897.876 ns/op

# Run progress: 92.06% complete, ETA 00:09:11
# Fork: 2 of 3
# Warmup Iteration   1: 884.272 ns/op
# Warmup Iteration   2: 841.883 ns/op
# Warmup Iteration   3: 893.424 ns/op
# Warmup Iteration   4: 892.166 ns/op
# Warmup Iteration   5: 891.042 ns/op
Iteration   1: 861.013 ns/op
Iteration   2: 843.433 ns/op
Iteration   3: 873.286 ns/op
Iteration   4: 893.338 ns/op
Iteration   5: 833.700 ns/op

# Run progress: 93.65% complete, ETA 00:07:20
# Fork: 3 of 3
# Warmup Iteration   1: 843.907 ns/op
# Warmup Iteration   2: 903.620 ns/op
# Warmup Iteration   3: 900.229 ns/op
# Warmup Iteration   4: 899.479 ns/op
# Warmup Iteration   5: 899.404 ns/op
Iteration   1: 901.279 ns/op
Iteration   2: 877.173 ns/op
Iteration   3: 903.771 ns/op
Iteration   4: 902.756 ns/op
Iteration   5: 901.424 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StackFrameIteratorBenchmark.retrieve_caller_stack_frame_SecurityManager":
  885.452 ±(99.9%) 24.352 ns/op [Average]
  (min, avg, max) = (833.700, 885.452, 903.771), stdev = 22.779
  CI (99.9%): [861.100, 909.805] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StackFrameIteratorBenchmark.retrieve_caller_stack_frame_SecurityManager
# Parameters: (stackDepth = 128)

# Run progress: 95.24% complete, ETA 00:05:30
# Fork: 1 of 3
# Warmup Iteration   1: 888.291 ns/op
# Warmup Iteration   2: 905.754 ns/op
# Warmup Iteration   3: 886.822 ns/op
# Warmup Iteration   4: 894.956 ns/op
# Warmup Iteration   5: 907.209 ns/op
Iteration   1: 867.276 ns/op
Iteration   2: 895.391 ns/op
Iteration   3: 903.655 ns/op
Iteration   4: 877.694 ns/op
Iteration   5: 909.345 ns/op

# Run progress: 96.83% complete, ETA 00:03:40
# Fork: 2 of 3
# Warmup Iteration   1: 868.959 ns/op
# Warmup Iteration   2: 893.484 ns/op
# Warmup Iteration   3: 863.221 ns/op
# Warmup Iteration   4: 901.041 ns/op
# Warmup Iteration   5: 900.011 ns/op
Iteration   1: 897.161 ns/op
Iteration   2: 896.322 ns/op
Iteration   3: 895.279 ns/op
Iteration   4: 896.190 ns/op
Iteration   5: 897.775 ns/op

# Run progress: 98.41% complete, ETA 00:01:50
# Fork: 3 of 3
# Warmup Iteration   1: 822.489 ns/op
# Warmup Iteration   2: 907.227 ns/op
# Warmup Iteration   3: 847.135 ns/op
# Warmup Iteration   4: 824.855 ns/op
# Warmup Iteration   5: 830.818 ns/op
Iteration   1: 866.701 ns/op
Iteration   2: 902.400 ns/op
Iteration   3: 877.720 ns/op
Iteration   4: 847.031 ns/op
Iteration   5: 849.976 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StackFrameIteratorBenchmark.retrieve_caller_stack_frame_SecurityManager":
  885.328 ±(99.9%) 21.081 ns/op [Average]
  (min, avg, max) = (847.031, 885.328, 909.345), stdev = 19.719
  CI (99.9%): [864.247, 906.408] (assumes normal distribution)


# Run complete. Total time: 01:55:44

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                                                    (stackDepth)  Mode  Cnt      Score      Error  Units
StackFrameIteratorBenchmark.get_caller_stack_frame_StackWalker                          1  avgt   15    724.404 ±   18.538  ns/op
StackFrameIteratorBenchmark.get_caller_stack_frame_StackWalker                         64  avgt   15    736.871 ±   19.459  ns/op
StackFrameIteratorBenchmark.get_caller_stack_frame_StackWalker                        128  avgt   15    717.835 ±   20.813  ns/op
StackFrameIteratorBenchmark.get_the_Nth_backwards_stack_frame_GetStackTrace             1  avgt   15   7132.846 ±  233.555  ns/op
StackFrameIteratorBenchmark.get_the_Nth_backwards_stack_frame_GetStackTrace            64  avgt   15  24778.456 ±  792.170  ns/op
StackFrameIteratorBenchmark.get_the_Nth_backwards_stack_frame_GetStackTrace           128  avgt   15  42851.716 ± 1390.181  ns/op
StackFrameIteratorBenchmark.get_the_Nth_backwards_stack_frame_StackWalker               1  avgt   15   1463.439 ±   53.529  ns/op
StackFrameIteratorBenchmark.get_the_Nth_backwards_stack_frame_StackWalker              64  avgt   15  19699.046 ±  520.512  ns/op
StackFrameIteratorBenchmark.get_the_Nth_backwards_stack_frame_StackWalker             128  avgt   15  36943.820 ±  912.332  ns/op
StackFrameIteratorBenchmark.get_throwable                                               1  avgt   15   1050.079 ±   25.918  ns/op
StackFrameIteratorBenchmark.get_throwable                                              64  avgt   15   3376.084 ±   74.607  ns/op
StackFrameIteratorBenchmark.get_throwable                                             128  avgt   15   5941.848 ±  161.164  ns/op
StackFrameIteratorBenchmark.get_top_stack_frame_GetStackTrace                           1  avgt   15   6806.238 ±  186.997  ns/op
StackFrameIteratorBenchmark.get_top_stack_frame_GetStackTrace                          64  avgt   15  22980.455 ±  788.568  ns/op
StackFrameIteratorBenchmark.get_top_stack_frame_GetStackTrace                         128  avgt   15  40539.637 ±  991.130  ns/op
StackFrameIteratorBenchmark.get_top_stack_frame_StackWalker                             1  avgt   15   1446.129 ±   62.616  ns/op
StackFrameIteratorBenchmark.get_top_stack_frame_StackWalker                            64  avgt   15   1552.290 ±   49.494  ns/op
StackFrameIteratorBenchmark.get_top_stack_frame_StackWalker                           128  avgt   15   1734.057 ±   51.381  ns/op
StackFrameIteratorBenchmark.retrieve_caller_stack_frame_SecurityManager                 1  avgt   15    867.701 ±   29.889  ns/op
StackFrameIteratorBenchmark.retrieve_caller_stack_frame_SecurityManager                64  avgt   15    885.452 ±   24.352  ns/op
StackFrameIteratorBenchmark.retrieve_caller_stack_frame_SecurityManager               128  avgt   15    885.328 ±   21.081  ns/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_c1_c2_jit/StackFrameIteratorBenchmark.json
Running java  -jar benchmarks/target/benchmarks.jar .*BigDecimalBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_c1_c2_jit/BigDecimalBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.BigDecimalBenchmark.add
# Parameters: (contextType = UNLIMITED, size = 128)

# Run progress: 0.00% complete, ETA 02:20:00
# Fork: 1 of 3
# Warmup Iteration   1: 626.120 ns/op
# Warmup Iteration   2: 621.400 ns/op
# Warmup Iteration   3: 613.235 ns/op
# Warmup Iteration   4: 644.724 ns/op
# Warmup Iteration   5: 620.875 ns/op
Iteration   1: 632.976 ns/op
Iteration   2: 635.811 ns/op
Iteration   3: 650.638 ns/op
Iteration   4: 647.027 ns/op
Iteration   5: 625.006 ns/op

# Run progress: 1.19% complete, ETA 02:32:33
# Fork: 2 of 3
# Warmup Iteration   1: 645.866 ns/op
# Warmup Iteration   2: 619.066 ns/op
# Warmup Iteration   3: 620.929 ns/op
# Warmup Iteration   4: 631.567 ns/op
# Warmup Iteration   5: 637.229 ns/op
Iteration   1: 639.633 ns/op
Iteration   2: 620.744 ns/op
Iteration   3: 627.109 ns/op
Iteration   4: 650.633 ns/op
Iteration   5: 655.961 ns/op

# Run progress: 2.38% complete, ETA 02:30:42
# Fork: 3 of 3
# Warmup Iteration   1: 649.249 ns/op
# Warmup Iteration   2: 618.206 ns/op
# Warmup Iteration   3: 641.014 ns/op
# Warmup Iteration   4: 630.448 ns/op
# Warmup Iteration   5: 640.703 ns/op
Iteration   1: 636.213 ns/op
Iteration   2: 639.507 ns/op
Iteration   3: 615.160 ns/op
Iteration   4: 649.896 ns/op
Iteration   5: 628.780 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.BigDecimalBenchmark.add":
  637.006 ±(99.9%) 13.031 ns/op [Average]
  (min, avg, max) = (615.160, 637.006, 655.961), stdev = 12.190
  CI (99.9%): [623.975, 650.038] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.BigDecimalBenchmark.add
# Parameters: (contextType = DECIMAL32, size = 128)

# Run progress: 3.57% complete, ETA 02:28:51
# Fork: 1 of 3
# Warmup Iteration   1: 82.638 ns/op
# Warmup Iteration   2: 79.409 ns/op
# Warmup Iteration   3: 80.001 ns/op
# Warmup Iteration   4: 81.972 ns/op
# Warmup Iteration   5: 81.959 ns/op
Iteration   1: 79.703 ns/op
Iteration   2: 80.268 ns/op
Iteration   3: 82.765 ns/op
Iteration   4: 80.764 ns/op
Iteration   5: 79.765 ns/op

# Run progress: 4.76% complete, ETA 02:27:00
# Fork: 2 of 3
# Warmup Iteration   1: 79.140 ns/op
# Warmup Iteration   2: 78.227 ns/op
# Warmup Iteration   3: 81.092 ns/op
# Warmup Iteration   4: 81.023 ns/op
# Warmup Iteration   5: 76.911 ns/op
Iteration   1: 79.145 ns/op
Iteration   2: 80.440 ns/op
Iteration   3: 80.116 ns/op
Iteration   4: 78.613 ns/op
Iteration   5: 80.895 ns/op

# Run progress: 5.95% complete, ETA 02:25:10
# Fork: 3 of 3
# Warmup Iteration   1: 80.225 ns/op
# Warmup Iteration   2: 82.318 ns/op
# Warmup Iteration   3: 81.789 ns/op
# Warmup Iteration   4: 80.347 ns/op
# Warmup Iteration   5: 82.612 ns/op
Iteration   1: 82.700 ns/op
Iteration   2: 80.131 ns/op
Iteration   3: 80.944 ns/op
Iteration   4: 80.831 ns/op
Iteration   5: 77.697 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.BigDecimalBenchmark.add":
  80.318 ±(99.9%) 1.422 ns/op [Average]
  (min, avg, max) = (77.697, 80.318, 82.765), stdev = 1.330
  CI (99.9%): [78.896, 81.741] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.BigDecimalBenchmark.add
# Parameters: (contextType = DECIMAL64, size = 128)

# Run progress: 7.14% complete, ETA 02:23:19
# Fork: 1 of 3
# Warmup Iteration   1: 94.453 ns/op
# Warmup Iteration   2: 92.532 ns/op
# Warmup Iteration   3: 94.494 ns/op
# Warmup Iteration   4: 93.005 ns/op
# Warmup Iteration   5: 92.271 ns/op
Iteration   1: 93.802 ns/op
Iteration   2: 92.297 ns/op
Iteration   3: 95.323 ns/op
Iteration   4: 93.715 ns/op
Iteration   5: 96.744 ns/op

# Run progress: 8.33% complete, ETA 02:21:29
# Fork: 2 of 3
# Warmup Iteration   1: 93.081 ns/op
# Warmup Iteration   2: 91.744 ns/op
# Warmup Iteration   3: 89.991 ns/op
# Warmup Iteration   4: 92.888 ns/op
# Warmup Iteration   5: 93.462 ns/op
Iteration   1: 94.387 ns/op
Iteration   2: 93.473 ns/op
Iteration   3: 91.720 ns/op
Iteration   4: 92.239 ns/op
Iteration   5: 95.184 ns/op

# Run progress: 9.52% complete, ETA 02:19:39
# Fork: 3 of 3
# Warmup Iteration   1: 88.717 ns/op
# Warmup Iteration   2: 85.617 ns/op
# Warmup Iteration   3: 87.441 ns/op
# Warmup Iteration   4: 88.581 ns/op
# Warmup Iteration   5: 87.433 ns/op
Iteration   1: 90.885 ns/op
Iteration   2: 90.213 ns/op
Iteration   3: 88.555 ns/op
Iteration   4: 87.727 ns/op
Iteration   5: 89.127 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.BigDecimalBenchmark.add":
  92.359 ±(99.9%) 2.841 ns/op [Average]
  (min, avg, max) = (87.727, 92.359, 96.744), stdev = 2.657
  CI (99.9%): [89.519, 95.200] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.BigDecimalBenchmark.add
# Parameters: (contextType = DECIMAL128, size = 128)

# Run progress: 10.71% complete, ETA 02:17:49
# Fork: 1 of 3
# Warmup Iteration   1: 107.174 ns/op
# Warmup Iteration   2: 107.425 ns/op
# Warmup Iteration   3: 110.554 ns/op
# Warmup Iteration   4: 110.662 ns/op
# Warmup Iteration   5: 109.005 ns/op
Iteration   1: 111.873 ns/op
Iteration   2: 112.486 ns/op
Iteration   3: 106.985 ns/op
Iteration   4: 110.534 ns/op
Iteration   5: 110.138 ns/op

# Run progress: 11.90% complete, ETA 02:15:59
# Fork: 2 of 3
# Warmup Iteration   1: 106.748 ns/op
# Warmup Iteration   2: 107.354 ns/op
# Warmup Iteration   3: 111.080 ns/op
# Warmup Iteration   4: 109.937 ns/op
# Warmup Iteration   5: 111.218 ns/op
Iteration   1: 109.945 ns/op
Iteration   2: 106.836 ns/op
Iteration   3: 110.083 ns/op
Iteration   4: 110.312 ns/op
Iteration   5: 109.358 ns/op

# Run progress: 13.10% complete, ETA 02:14:08
# Fork: 3 of 3
# Warmup Iteration   1: 109.079 ns/op
# Warmup Iteration   2: 107.527 ns/op
# Warmup Iteration   3: 108.899 ns/op
# Warmup Iteration   4: 112.392 ns/op
# Warmup Iteration   5: 111.370 ns/op
Iteration   1: 108.012 ns/op
Iteration   2: 110.338 ns/op
Iteration   3: 111.238 ns/op
Iteration   4: 110.289 ns/op
Iteration   5: 113.872 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.BigDecimalBenchmark.add":
  110.153 ±(99.9%) 2.019 ns/op [Average]
  (min, avg, max) = (106.836, 110.153, 113.872), stdev = 1.889
  CI (99.9%): [108.134, 112.172] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.BigDecimalBenchmark.compare_to
# Parameters: (contextType = UNLIMITED, size = 128)

# Run progress: 14.29% complete, ETA 02:12:18
# Fork: 1 of 3
# Warmup Iteration   1: 5.451 ns/op
# Warmup Iteration   2: 5.339 ns/op
# Warmup Iteration   3: 5.870 ns/op
# Warmup Iteration   4: 5.886 ns/op
# Warmup Iteration   5: 5.875 ns/op
Iteration   1: 5.898 ns/op
Iteration   2: 5.880 ns/op
Iteration   3: 5.881 ns/op
Iteration   4: 5.879 ns/op
Iteration   5: 5.873 ns/op

# Run progress: 15.48% complete, ETA 02:10:28
# Fork: 2 of 3
# Warmup Iteration   1: 5.390 ns/op
# Warmup Iteration   2: 5.096 ns/op
# Warmup Iteration   3: 5.516 ns/op
# Warmup Iteration   4: 5.535 ns/op
# Warmup Iteration   5: 5.550 ns/op
Iteration   1: 5.554 ns/op
Iteration   2: 5.584 ns/op
Iteration   3: 5.577 ns/op
Iteration   4: 5.572 ns/op
Iteration   5: 5.579 ns/op

# Run progress: 16.67% complete, ETA 02:08:37
# Fork: 3 of 3
# Warmup Iteration   1: 5.409 ns/op
# Warmup Iteration   2: 5.289 ns/op
# Warmup Iteration   3: 5.797 ns/op
# Warmup Iteration   4: 5.401 ns/op
# Warmup Iteration   5: 5.449 ns/op
Iteration   1: 5.470 ns/op
Iteration   2: 5.477 ns/op
Iteration   3: 5.480 ns/op
Iteration   4: 5.474 ns/op
Iteration   5: 5.474 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.BigDecimalBenchmark.compare_to":
  5.643 ±(99.9%) 0.192 ns/op [Average]
  (min, avg, max) = (5.470, 5.643, 5.898), stdev = 0.180
  CI (99.9%): [5.451, 5.836] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.BigDecimalBenchmark.compare_to
# Parameters: (contextType = DECIMAL32, size = 128)

# Run progress: 17.86% complete, ETA 02:06:47
# Fork: 1 of 3
# Warmup Iteration   1: 5.952 ns/op
# Warmup Iteration   2: 6.322 ns/op
# Warmup Iteration   3: 6.210 ns/op
# Warmup Iteration   4: 6.114 ns/op
# Warmup Iteration   5: 6.142 ns/op
Iteration   1: 6.162 ns/op
Iteration   2: 6.159 ns/op
Iteration   3: 6.162 ns/op
Iteration   4: 6.178 ns/op
Iteration   5: 6.168 ns/op

# Run progress: 19.05% complete, ETA 02:04:57
# Fork: 2 of 3
# Warmup Iteration   1: 6.355 ns/op
# Warmup Iteration   2: 6.539 ns/op
# Warmup Iteration   3: 6.477 ns/op
# Warmup Iteration   4: 6.490 ns/op
# Warmup Iteration   5: 6.477 ns/op
Iteration   1: 6.492 ns/op
Iteration   2: 6.486 ns/op
Iteration   3: 6.481 ns/op
Iteration   4: 6.493 ns/op
Iteration   5: 6.515 ns/op

# Run progress: 20.24% complete, ETA 02:03:06
# Fork: 3 of 3
# Warmup Iteration   1: 6.267 ns/op
# Warmup Iteration   2: 6.549 ns/op
# Warmup Iteration   3: 6.421 ns/op
# Warmup Iteration   4: 6.417 ns/op
# Warmup Iteration   5: 6.439 ns/op
Iteration   1: 6.425 ns/op
Iteration   2: 6.462 ns/op
Iteration   3: 6.453 ns/op
Iteration   4: 6.062 ns/op
Iteration   5: 6.057 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.BigDecimalBenchmark.compare_to":
  6.317 ±(99.9%) 0.193 ns/op [Average]
  (min, avg, max) = (6.057, 6.317, 6.515), stdev = 0.180
  CI (99.9%): [6.124, 6.510] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.BigDecimalBenchmark.compare_to
# Parameters: (contextType = DECIMAL64, size = 128)

# Run progress: 21.43% complete, ETA 02:01:16
# Fork: 1 of 3
# Warmup Iteration   1: 5.543 ns/op
# Warmup Iteration   2: 6.030 ns/op
# Warmup Iteration   3: 5.860 ns/op
# Warmup Iteration   4: 5.847 ns/op
# Warmup Iteration   5: 5.855 ns/op
Iteration   1: 5.860 ns/op
Iteration   2: 5.861 ns/op
Iteration   3: 5.862 ns/op
Iteration   4: 5.857 ns/op
Iteration   5: 5.857 ns/op

# Run progress: 22.62% complete, ETA 01:59:26
# Fork: 2 of 3
# Warmup Iteration   1: 5.821 ns/op
# Warmup Iteration   2: 6.263 ns/op
# Warmup Iteration   3: 6.124 ns/op
# Warmup Iteration   4: 6.135 ns/op
# Warmup Iteration   5: 6.140 ns/op
Iteration   1: 6.150 ns/op
Iteration   2: 6.137 ns/op
Iteration   3: 5.846 ns/op
Iteration   4: 5.879 ns/op
Iteration   5: 5.882 ns/op

# Run progress: 23.81% complete, ETA 01:57:35
# Fork: 3 of 3
# Warmup Iteration   1: 5.799 ns/op
# Warmup Iteration   2: 6.262 ns/op
# Warmup Iteration   3: 6.024 ns/op
# Warmup Iteration   4: 6.037 ns/op
# Warmup Iteration   5: 6.038 ns/op
Iteration   1: 5.626 ns/op
Iteration   2: 5.653 ns/op
Iteration   3: 5.684 ns/op
Iteration   4: 5.674 ns/op
Iteration   5: 5.691 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.BigDecimalBenchmark.compare_to":
  5.835 ±(99.9%) 0.167 ns/op [Average]
  (min, avg, max) = (5.626, 5.835, 6.150), stdev = 0.157
  CI (99.9%): [5.667, 6.002] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.BigDecimalBenchmark.compare_to
# Parameters: (contextType = DECIMAL128, size = 128)

# Run progress: 25.00% complete, ETA 01:55:45
# Fork: 1 of 3
# Warmup Iteration   1: 5.439 ns/op
# Warmup Iteration   2: 4.944 ns/op
# Warmup Iteration   3: 5.313 ns/op
# Warmup Iteration   4: 5.333 ns/op
# Warmup Iteration   5: 5.357 ns/op
Iteration   1: 5.370 ns/op
Iteration   2: 5.384 ns/op
Iteration   3: 5.397 ns/op
Iteration   4: 5.384 ns/op
Iteration   5: 5.385 ns/op

# Run progress: 26.19% complete, ETA 01:53:55
# Fork: 2 of 3
# Warmup Iteration   1: 5.465 ns/op
# Warmup Iteration   2: 5.298 ns/op
# Warmup Iteration   3: 5.713 ns/op
# Warmup Iteration   4: 5.719 ns/op
# Warmup Iteration   5: 5.717 ns/op
Iteration   1: 5.716 ns/op
Iteration   2: 5.699 ns/op
Iteration   3: 5.711 ns/op
Iteration   4: 5.716 ns/op
Iteration   5: 5.706 ns/op

# Run progress: 27.38% complete, ETA 01:52:04
# Fork: 3 of 3
# Warmup Iteration   1: 5.417 ns/op
# Warmup Iteration   2: 5.343 ns/op
# Warmup Iteration   3: 5.692 ns/op
# Warmup Iteration   4: 5.702 ns/op
# Warmup Iteration   5: 5.691 ns/op
Iteration   1: 5.710 ns/op
Iteration   2: 5.707 ns/op
Iteration   3: 5.725 ns/op
Iteration   4: 5.715 ns/op
Iteration   5: 5.710 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.BigDecimalBenchmark.compare_to":
  5.602 ±(99.9%) 0.171 ns/op [Average]
  (min, avg, max) = (5.370, 5.602, 5.725), stdev = 0.160
  CI (99.9%): [5.431, 5.773] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.BigDecimalBenchmark.divide
# Parameters: (contextType = UNLIMITED, size = 128)

# Run progress: 28.57% complete, ETA 01:50:14
# Fork: 1 of 3
# Warmup Iteration   1: <failure>

java.lang.ArithmeticException: Non-terminating decimal expansion; no exact representable decimal result.
	at java.base/java.math.BigDecimal.divide(BigDecimal.java:1722)
	at com.ionutbalosin.jvm.jit.benchmark.BigDecimalBenchmark.divide(BigDecimalBenchmark.java:130)
	at com.ionutbalosin.jvm.jit.benchmark.generated.BigDecimalBenchmark_divide_jmhTest.divide_avgt_jmhStub(BigDecimalBenchmark_divide_jmhTest.java:232)
	at com.ionutbalosin.jvm.jit.benchmark.generated.BigDecimalBenchmark_divide_jmhTest.divide_AverageTime(BigDecimalBenchmark_divide_jmhTest.java:173)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:830)


Benchmark had encountered error, and fail on error was requested
Running java  -jar benchmarks/target/benchmarks.jar .*BigIntegerBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_c1_c2_jit/BigIntegerBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.BigIntegerBenchmark.add
# Parameters: (size = 1024)

# Run progress: 0.00% complete, ETA 00:30:00
# Fork: 1 of 3
# Warmup Iteration   1: 15.461 ns/op
# Warmup Iteration   2: 15.785 ns/op
# Warmup Iteration   3: 15.011 ns/op
# Warmup Iteration   4: 15.024 ns/op
# Warmup Iteration   5: 15.311 ns/op
Iteration   1: 14.713 ns/op
Iteration   2: 15.548 ns/op
Iteration   3: 15.116 ns/op
Iteration   4: 15.341 ns/op
Iteration   5: 15.212 ns/op

# Run progress: 5.56% complete, ETA 00:31:15
# Fork: 2 of 3
# Warmup Iteration   1: 15.756 ns/op
# Warmup Iteration   2: 15.697 ns/op
# Warmup Iteration   3: 15.195 ns/op
# Warmup Iteration   4: 15.588 ns/op
# Warmup Iteration   5: 15.279 ns/op
Iteration   1: 15.262 ns/op
Iteration   2: 15.136 ns/op
Iteration   3: 15.484 ns/op
Iteration   4: 15.080 ns/op
Iteration   5: 15.438 ns/op

# Run progress: 11.11% complete, ETA 00:29:24
# Fork: 3 of 3
# Warmup Iteration   1: 15.703 ns/op
# Warmup Iteration   2: 16.036 ns/op
# Warmup Iteration   3: 15.049 ns/op
# Warmup Iteration   4: 15.369 ns/op
# Warmup Iteration   5: 15.474 ns/op
Iteration   1: 15.090 ns/op
Iteration   2: 15.415 ns/op
Iteration   3: 14.741 ns/op
Iteration   4: 15.213 ns/op
Iteration   5: 15.666 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.BigIntegerBenchmark.add":
  15.230 ±(99.9%) 0.288 ns/op [Average]
  (min, avg, max) = (14.713, 15.230, 15.666), stdev = 0.270
  CI (99.9%): [14.942, 15.518] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.BigIntegerBenchmark.compare_to
# Parameters: (size = 1024)

# Run progress: 16.67% complete, ETA 00:27:34
# Fork: 1 of 3
# Warmup Iteration   1: 7.641 ns/op
# Warmup Iteration   2: 10.027 ns/op
# Warmup Iteration   3: 8.042 ns/op
# Warmup Iteration   4: 8.117 ns/op
# Warmup Iteration   5: 8.159 ns/op
Iteration   1: 8.171 ns/op
Iteration   2: 8.163 ns/op
Iteration   3: 8.156 ns/op
Iteration   4: 8.174 ns/op
Iteration   5: 8.172 ns/op

# Run progress: 22.22% complete, ETA 00:25:44
# Fork: 2 of 3
# Warmup Iteration   1: 7.644 ns/op
# Warmup Iteration   2: 8.396 ns/op
# Warmup Iteration   3: 10.206 ns/op
# Warmup Iteration   4: 10.255 ns/op
# Warmup Iteration   5: 10.272 ns/op
Iteration   1: 10.274 ns/op
Iteration   2: 10.126 ns/op
Iteration   3: 10.131 ns/op
Iteration   4: 10.132 ns/op
Iteration   5: 10.125 ns/op

# Run progress: 27.78% complete, ETA 00:23:53
# Fork: 3 of 3
# Warmup Iteration   1: 8.526 ns/op
# Warmup Iteration   2: 9.187 ns/op
# Warmup Iteration   3: 8.284 ns/op
# Warmup Iteration   4: 8.287 ns/op
# Warmup Iteration   5: 8.290 ns/op
Iteration   1: 8.301 ns/op
Iteration   2: 8.329 ns/op
Iteration   3: 8.312 ns/op
Iteration   4: 7.725 ns/op
Iteration   5: 7.758 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.BigIntegerBenchmark.compare_to":
  8.803 ±(99.9%) 1.076 ns/op [Average]
  (min, avg, max) = (7.725, 8.803, 10.274), stdev = 1.007
  CI (99.9%): [7.727, 9.879] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.BigIntegerBenchmark.divide
# Parameters: (size = 1024)

# Run progress: 33.33% complete, ETA 00:22:03
# Fork: 1 of 3
# Warmup Iteration   1: 12.332 ns/op
# Warmup Iteration   2: 12.433 ns/op
# Warmup Iteration   3: 12.274 ns/op
# Warmup Iteration   4: 12.351 ns/op
# Warmup Iteration   5: 12.019 ns/op
Iteration   1: 12.229 ns/op
Iteration   2: 11.988 ns/op
Iteration   3: 12.327 ns/op
Iteration   4: 12.458 ns/op
Iteration   5: 12.153 ns/op

# Run progress: 38.89% complete, ETA 00:20:13
# Fork: 2 of 3
# Warmup Iteration   1: 12.484 ns/op
# Warmup Iteration   2: 12.160 ns/op
# Warmup Iteration   3: 12.223 ns/op
# Warmup Iteration   4: 12.153 ns/op
# Warmup Iteration   5: 12.275 ns/op
Iteration   1: 12.185 ns/op
Iteration   2: 12.436 ns/op
Iteration   3: 12.292 ns/op
Iteration   4: 12.371 ns/op
Iteration   5: 12.405 ns/op

# Run progress: 44.44% complete, ETA 00:18:22
# Fork: 3 of 3
# Warmup Iteration   1: 12.426 ns/op
# Warmup Iteration   2: 12.555 ns/op
# Warmup Iteration   3: 12.074 ns/op
# Warmup Iteration   4: 12.327 ns/op
# Warmup Iteration   5: 12.193 ns/op
Iteration   1: 12.193 ns/op
Iteration   2: 12.396 ns/op
Iteration   3: 12.205 ns/op
Iteration   4: 12.217 ns/op
Iteration   5: 12.420 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.BigIntegerBenchmark.divide":
  12.285 ±(99.9%) 0.141 ns/op [Average]
  (min, avg, max) = (11.988, 12.285, 12.458), stdev = 0.132
  CI (99.9%): [12.144, 12.426] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.BigIntegerBenchmark.multiply
# Parameters: (size = 1024)

# Run progress: 50.00% complete, ETA 00:16:32
# Fork: 1 of 3
# Warmup Iteration   1: 4180.856 ns/op
# Warmup Iteration   2: 4135.803 ns/op
# Warmup Iteration   3: 4150.171 ns/op
# Warmup Iteration   4: 4169.629 ns/op
# Warmup Iteration   5: 4122.949 ns/op
Iteration   1: 4168.609 ns/op
Iteration   2: 4225.865 ns/op
Iteration   3: 4226.197 ns/op
Iteration   4: 4077.105 ns/op
Iteration   5: 4244.260 ns/op

# Run progress: 55.56% complete, ETA 00:14:42
# Fork: 2 of 3
# Warmup Iteration   1: 4219.581 ns/op
# Warmup Iteration   2: 4174.571 ns/op
# Warmup Iteration   3: 4147.639 ns/op
# Warmup Iteration   4: 4163.514 ns/op
# Warmup Iteration   5: 4132.484 ns/op
Iteration   1: 4222.876 ns/op
Iteration   2: 4067.352 ns/op
Iteration   3: 4189.463 ns/op
Iteration   4: 4213.900 ns/op
Iteration   5: 4097.059 ns/op

# Run progress: 61.11% complete, ETA 00:12:51
# Fork: 3 of 3
# Warmup Iteration   1: 4184.861 ns/op
# Warmup Iteration   2: 4209.879 ns/op
# Warmup Iteration   3: 4105.636 ns/op
# Warmup Iteration   4: 4232.987 ns/op
# Warmup Iteration   5: 4115.487 ns/op
Iteration   1: 4127.760 ns/op
Iteration   2: 4053.963 ns/op
Iteration   3: 4179.020 ns/op
Iteration   4: 4225.355 ns/op
Iteration   5: 4110.622 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.BigIntegerBenchmark.multiply":
  4161.960 ±(99.9%) 71.335 ns/op [Average]
  (min, avg, max) = (4053.963, 4161.960, 4244.260), stdev = 66.727
  CI (99.9%): [4090.626, 4233.295] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.BigIntegerBenchmark.subtract
# Parameters: (size = 1024)

# Run progress: 66.67% complete, ETA 00:11:01
# Fork: 1 of 3
# Warmup Iteration   1: 16.255 ns/op
# Warmup Iteration   2: 16.728 ns/op
# Warmup Iteration   3: 16.615 ns/op
# Warmup Iteration   4: 16.791 ns/op
# Warmup Iteration   5: 16.728 ns/op
Iteration   1: 16.691 ns/op
Iteration   2: 15.943 ns/op
Iteration   3: 16.561 ns/op
Iteration   4: 16.812 ns/op
Iteration   5: 16.788 ns/op

# Run progress: 72.22% complete, ETA 00:09:11
# Fork: 2 of 3
# Warmup Iteration   1: 16.430 ns/op
# Warmup Iteration   2: 16.629 ns/op
# Warmup Iteration   3: 16.476 ns/op
# Warmup Iteration   4: 16.426 ns/op
# Warmup Iteration   5: 16.196 ns/op
Iteration   1: 16.501 ns/op
Iteration   2: 16.831 ns/op
Iteration   3: 16.455 ns/op
Iteration   4: 16.762 ns/op
Iteration   5: 16.673 ns/op

# Run progress: 77.78% complete, ETA 00:07:21
# Fork: 3 of 3
# Warmup Iteration   1: 16.701 ns/op
# Warmup Iteration   2: 16.968 ns/op
# Warmup Iteration   3: 16.768 ns/op
# Warmup Iteration   4: 16.712 ns/op
# Warmup Iteration   5: 16.777 ns/op
Iteration   1: 16.455 ns/op
Iteration   2: 16.807 ns/op
Iteration   3: 16.306 ns/op
Iteration   4: 17.055 ns/op
Iteration   5: 16.192 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.BigIntegerBenchmark.subtract":
  16.589 ±(99.9%) 0.308 ns/op [Average]
  (min, avg, max) = (15.943, 16.589, 17.055), stdev = 0.288
  CI (99.9%): [16.281, 16.896] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.BigIntegerBenchmark.to_string
# Parameters: (size = 1024)

# Run progress: 83.33% complete, ETA 00:05:30
# Fork: 1 of 3
# Warmup Iteration   1: 274.769 ns/op
# Warmup Iteration   2: 270.652 ns/op
# Warmup Iteration   3: 276.608 ns/op
# Warmup Iteration   4: 279.109 ns/op
# Warmup Iteration   5: 278.656 ns/op
Iteration   1: 278.232 ns/op
Iteration   2: 279.519 ns/op
Iteration   3: 276.511 ns/op
Iteration   4: 277.495 ns/op
Iteration   5: 270.522 ns/op

# Run progress: 88.89% complete, ETA 00:03:40
# Fork: 2 of 3
# Warmup Iteration   1: 276.139 ns/op
# Warmup Iteration   2: 279.231 ns/op
# Warmup Iteration   3: 275.978 ns/op
# Warmup Iteration   4: 273.740 ns/op
# Warmup Iteration   5: 272.399 ns/op
Iteration   1: 274.294 ns/op
Iteration   2: 277.806 ns/op
Iteration   3: 273.004 ns/op
Iteration   4: 279.899 ns/op
Iteration   5: 280.591 ns/op

# Run progress: 94.44% complete, ETA 00:01:50
# Fork: 3 of 3
# Warmup Iteration   1: 276.978 ns/op
# Warmup Iteration   2: 277.018 ns/op
# Warmup Iteration   3: 274.242 ns/op
# Warmup Iteration   4: 289.516 ns/op
# Warmup Iteration   5: 282.873 ns/op
Iteration   1: 282.033 ns/op
Iteration   2: 283.368 ns/op
Iteration   3: 287.225 ns/op
Iteration   4: 280.752 ns/op
Iteration   5: 279.409 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.BigIntegerBenchmark.to_string":
  278.711 ±(99.9%) 4.444 ns/op [Average]
  (min, avg, max) = (270.522, 278.711, 287.225), stdev = 4.157
  CI (99.9%): [274.266, 283.155] (assumes normal distribution)


# Run complete. Total time: 00:33:04

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                       (size)  Mode  Cnt     Score    Error  Units
BigIntegerBenchmark.add           1024  avgt   15    15.230 ±  0.288  ns/op
BigIntegerBenchmark.compare_to    1024  avgt   15     8.803 ±  1.076  ns/op
BigIntegerBenchmark.divide        1024  avgt   15    12.285 ±  0.141  ns/op
BigIntegerBenchmark.multiply      1024  avgt   15  4161.960 ± 71.335  ns/op
BigIntegerBenchmark.subtract      1024  avgt   15    16.589 ±  0.308  ns/op
BigIntegerBenchmark.to_string     1024  avgt   15   278.711 ±  4.444  ns/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_c1_c2_jit/BigIntegerBenchmark.json
Running java  -jar benchmarks/target/benchmarks.jar .*DoubleMathBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_c1_c2_jit/DoubleMathBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.DoubleMathBenchmark.abs
# Parameters: (size = 262144)

# Run progress: 0.00% complete, ETA 01:10:00
# Fork: 1 of 3
# Warmup Iteration   1: 0.307 ns/op
# Warmup Iteration   2: 0.314 ns/op
# Warmup Iteration   3: 0.319 ns/op
# Warmup Iteration   4: 0.319 ns/op
# Warmup Iteration   5: 0.322 ns/op
Iteration   1: 0.321 ns/op
Iteration   2: 0.322 ns/op
Iteration   3: 0.322 ns/op
Iteration   4: 0.323 ns/op
Iteration   5: 0.324 ns/op

# Run progress: 2.38% complete, ETA 01:15:22
# Fork: 2 of 3
# Warmup Iteration   1: 0.308 ns/op
# Warmup Iteration   2: 0.311 ns/op
# Warmup Iteration   3: 0.316 ns/op
# Warmup Iteration   4: 0.318 ns/op
# Warmup Iteration   5: 0.318 ns/op
Iteration   1: 0.319 ns/op
Iteration   2: 0.319 ns/op
Iteration   3: 0.319 ns/op
Iteration   4: 0.317 ns/op
Iteration   5: 0.317 ns/op

# Run progress: 4.76% complete, ETA 01:13:31
# Fork: 3 of 3
# Warmup Iteration   1: 0.309 ns/op
# Warmup Iteration   2: 0.316 ns/op
# Warmup Iteration   3: 0.314 ns/op
# Warmup Iteration   4: 0.340 ns/op
# Warmup Iteration   5: 0.337 ns/op
Iteration   1: 0.336 ns/op
Iteration   2: 0.334 ns/op
Iteration   3: 0.334 ns/op
Iteration   4: 0.315 ns/op
Iteration   5: 0.317 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.DoubleMathBenchmark.abs":
  0.323 ±(99.9%) 0.007 ns/op [Average]
  (min, avg, max) = (0.315, 0.323, 0.336), stdev = 0.007
  CI (99.9%): [0.316, 0.330] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.DoubleMathBenchmark.ceil
# Parameters: (size = 262144)

# Run progress: 7.14% complete, ETA 01:11:40
# Fork: 1 of 3
# Warmup Iteration   1: 2.011 ns/op
# Warmup Iteration   2: 2.022 ns/op
# Warmup Iteration   3: 2.016 ns/op
# Warmup Iteration   4: 2.014 ns/op
# Warmup Iteration   5: 2.016 ns/op
Iteration   1: 2.079 ns/op
Iteration   2: 2.124 ns/op
Iteration   3: 2.121 ns/op
Iteration   4: 2.118 ns/op
Iteration   5: 2.118 ns/op

# Run progress: 9.52% complete, ETA 01:09:50
# Fork: 2 of 3
# Warmup Iteration   1: 2.039 ns/op
# Warmup Iteration   2: 2.070 ns/op
# Warmup Iteration   3: 1.960 ns/op
# Warmup Iteration   4: 1.970 ns/op
# Warmup Iteration   5: 1.971 ns/op
Iteration   1: 1.990 ns/op
Iteration   2: 2.011 ns/op
Iteration   3: 2.016 ns/op
Iteration   4: 2.011 ns/op
Iteration   5: 2.013 ns/op

# Run progress: 11.90% complete, ETA 01:08:00
# Fork: 3 of 3
# Warmup Iteration   1: 1.949 ns/op
# Warmup Iteration   2: 1.977 ns/op
# Warmup Iteration   3: 1.981 ns/op
# Warmup Iteration   4: 1.978 ns/op
# Warmup Iteration   5: 1.980 ns/op
Iteration   1: 2.066 ns/op
Iteration   2: 2.097 ns/op
Iteration   3: 2.095 ns/op
Iteration   4: 2.093 ns/op
Iteration   5: 1.945 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.DoubleMathBenchmark.ceil":
  2.060 ±(99.9%) 0.061 ns/op [Average]
  (min, avg, max) = (1.945, 2.060, 2.124), stdev = 0.057
  CI (99.9%): [1.999, 2.121] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.DoubleMathBenchmark.cos
# Parameters: (size = 262144)

# Run progress: 14.29% complete, ETA 01:06:09
# Fork: 1 of 3
# Warmup Iteration   1: 26.672 ns/op
# Warmup Iteration   2: 27.050 ns/op
# Warmup Iteration   3: 27.218 ns/op
# Warmup Iteration   4: 27.233 ns/op
# Warmup Iteration   5: 27.270 ns/op
Iteration   1: 27.309 ns/op
Iteration   2: 27.324 ns/op
Iteration   3: 27.366 ns/op
Iteration   4: 27.322 ns/op
Iteration   5: 27.320 ns/op

# Run progress: 16.67% complete, ETA 01:04:19
# Fork: 2 of 3
# Warmup Iteration   1: 26.163 ns/op
# Warmup Iteration   2: 26.126 ns/op
# Warmup Iteration   3: 26.130 ns/op
# Warmup Iteration   4: 26.244 ns/op
# Warmup Iteration   5: 26.253 ns/op
Iteration   1: 26.306 ns/op
Iteration   2: 26.305 ns/op
Iteration   3: 26.206 ns/op
Iteration   4: 26.139 ns/op
Iteration   5: 26.284 ns/op

# Run progress: 19.05% complete, ETA 01:02:29
# Fork: 3 of 3
# Warmup Iteration   1: 26.103 ns/op
# Warmup Iteration   2: 26.159 ns/op
# Warmup Iteration   3: 26.213 ns/op
# Warmup Iteration   4: 26.324 ns/op
# Warmup Iteration   5: 26.100 ns/op
Iteration   1: 25.973 ns/op
Iteration   2: 26.351 ns/op
Iteration   3: 26.321 ns/op
Iteration   4: 26.175 ns/op
Iteration   5: 26.148 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.DoubleMathBenchmark.cos":
  26.590 ±(99.9%) 0.586 ns/op [Average]
  (min, avg, max) = (25.973, 26.590, 27.366), stdev = 0.548
  CI (99.9%): [26.004, 27.176] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.DoubleMathBenchmark.exp
# Parameters: (size = 262144)

# Run progress: 21.43% complete, ETA 01:00:39
# Fork: 1 of 3
# Warmup Iteration   1: 3.881 ns/op
# Warmup Iteration   2: 3.918 ns/op
# Warmup Iteration   3: 3.929 ns/op
# Warmup Iteration   4: 3.941 ns/op
# Warmup Iteration   5: 3.930 ns/op
Iteration   1: 3.924 ns/op
Iteration   2: 3.927 ns/op
Iteration   3: 3.926 ns/op
Iteration   4: 3.923 ns/op
Iteration   5: 3.921 ns/op

# Run progress: 23.81% complete, ETA 00:58:49
# Fork: 2 of 3
# Warmup Iteration   1: 3.636 ns/op
# Warmup Iteration   2: 3.706 ns/op
# Warmup Iteration   3: 3.719 ns/op
# Warmup Iteration   4: 3.727 ns/op
# Warmup Iteration   5: 3.725 ns/op
Iteration   1: 3.727 ns/op
Iteration   2: 3.733 ns/op
Iteration   3: 3.740 ns/op
Iteration   4: 3.745 ns/op
Iteration   5: 3.750 ns/op

# Run progress: 26.19% complete, ETA 00:56:58
# Fork: 3 of 3
# Warmup Iteration   1: 3.863 ns/op
# Warmup Iteration   2: 3.912 ns/op
# Warmup Iteration   3: 3.914 ns/op
# Warmup Iteration   4: 3.919 ns/op
# Warmup Iteration   5: 3.921 ns/op
Iteration   1: 3.915 ns/op
Iteration   2: 3.721 ns/op
Iteration   3: 3.733 ns/op
Iteration   4: 3.739 ns/op
Iteration   5: 3.739 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.DoubleMathBenchmark.exp":
  3.811 ±(99.9%) 0.101 ns/op [Average]
  (min, avg, max) = (3.721, 3.811, 3.927), stdev = 0.095
  CI (99.9%): [3.709, 3.912] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.DoubleMathBenchmark.floor
# Parameters: (size = 262144)

# Run progress: 28.57% complete, ETA 00:55:08
# Fork: 1 of 3
# Warmup Iteration   1: 2.002 ns/op
# Warmup Iteration   2: 1.932 ns/op
# Warmup Iteration   3: 1.942 ns/op
# Warmup Iteration   4: 1.944 ns/op
# Warmup Iteration   5: 1.946 ns/op
Iteration   1: 1.977 ns/op
Iteration   2: 1.894 ns/op
Iteration   3: 1.896 ns/op
Iteration   4: 1.897 ns/op
Iteration   5: 1.891 ns/op

# Run progress: 30.95% complete, ETA 00:53:18
# Fork: 2 of 3
# Warmup Iteration   1: 1.805 ns/op
# Warmup Iteration   2: 1.832 ns/op
# Warmup Iteration   3: 1.842 ns/op
# Warmup Iteration   4: 1.849 ns/op
# Warmup Iteration   5: 1.856 ns/op
Iteration   1: 1.860 ns/op
Iteration   2: 1.862 ns/op
Iteration   3: 1.862 ns/op
Iteration   4: 1.863 ns/op
Iteration   5: 1.867 ns/op

# Run progress: 33.33% complete, ETA 00:51:27
# Fork: 3 of 3
# Warmup Iteration   1: 1.807 ns/op
# Warmup Iteration   2: 1.835 ns/op
# Warmup Iteration   3: 1.843 ns/op
# Warmup Iteration   4: 1.844 ns/op
# Warmup Iteration   5: 1.984 ns/op
Iteration   1: 1.991 ns/op
Iteration   2: 1.986 ns/op
Iteration   3: 1.984 ns/op
Iteration   4: 1.982 ns/op
Iteration   5: 1.982 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.DoubleMathBenchmark.floor":
  1.920 ±(99.9%) 0.060 ns/op [Average]
  (min, avg, max) = (1.860, 1.920, 1.991), stdev = 0.056
  CI (99.9%): [1.860, 1.979] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.DoubleMathBenchmark.fma
# Parameters: (size = 262144)

# Run progress: 35.71% complete, ETA 00:49:37
# Fork: 1 of 3
# Warmup Iteration   1: 0.715 ns/op
# Warmup Iteration   2: 0.729 ns/op
# Warmup Iteration   3: 0.733 ns/op
# Warmup Iteration   4: 0.736 ns/op
# Warmup Iteration   5: 0.735 ns/op
Iteration   1: 0.736 ns/op
Iteration   2: 0.741 ns/op
Iteration   3: 0.741 ns/op
Iteration   4: 0.741 ns/op
Iteration   5: 0.740 ns/op

# Run progress: 38.10% complete, ETA 00:47:47
# Fork: 2 of 3
# Warmup Iteration   1: 0.721 ns/op
# Warmup Iteration   2: 0.727 ns/op
# Warmup Iteration   3: 0.729 ns/op
# Warmup Iteration   4: 0.734 ns/op
# Warmup Iteration   5: 0.734 ns/op
Iteration   1: 0.734 ns/op
Iteration   2: 0.734 ns/op
Iteration   3: 0.733 ns/op
Iteration   4: 0.737 ns/op
Iteration   5: 0.737 ns/op

# Run progress: 40.48% complete, ETA 00:45:56
# Fork: 3 of 3
# Warmup Iteration   1: 0.713 ns/op
# Warmup Iteration   2: 0.726 ns/op
# Warmup Iteration   3: 0.724 ns/op
# Warmup Iteration   4: 0.728 ns/op
# Warmup Iteration   5: 0.732 ns/op
Iteration   1: 0.733 ns/op
Iteration   2: 0.734 ns/op
Iteration   3: 0.736 ns/op
Iteration   4: 0.734 ns/op
Iteration   5: 0.733 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.DoubleMathBenchmark.fma":
  0.736 ±(99.9%) 0.003 ns/op [Average]
  (min, avg, max) = (0.733, 0.736, 0.741), stdev = 0.003
  CI (99.9%): [0.733, 0.739] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.DoubleMathBenchmark.log
# Parameters: (size = 262144)

# Run progress: 42.86% complete, ETA 00:44:06
# Fork: 1 of 3
# Warmup Iteration   1: 7.958 ns/op
# Warmup Iteration   2: 7.971 ns/op
# Warmup Iteration   3: 7.960 ns/op
# Warmup Iteration   4: 7.932 ns/op
# Warmup Iteration   5: 7.922 ns/op
Iteration   1: 7.901 ns/op
Iteration   2: 7.897 ns/op
Iteration   3: 7.890 ns/op
Iteration   4: 7.893 ns/op
Iteration   5: 7.887 ns/op

# Run progress: 45.24% complete, ETA 00:42:16
# Fork: 2 of 3
# Warmup Iteration   1: 7.244 ns/op
# Warmup Iteration   2: 7.386 ns/op
# Warmup Iteration   3: 7.406 ns/op
# Warmup Iteration   4: 7.421 ns/op
# Warmup Iteration   5: 7.443 ns/op
Iteration   1: 7.530 ns/op
Iteration   2: 7.544 ns/op
Iteration   3: 7.560 ns/op
Iteration   4: 7.913 ns/op
Iteration   5: 7.893 ns/op

# Run progress: 47.62% complete, ETA 00:40:26
# Fork: 3 of 3
# Warmup Iteration   1: 7.376 ns/op
# Warmup Iteration   2: 7.478 ns/op
# Warmup Iteration   3: 7.485 ns/op
# Warmup Iteration   4: 7.498 ns/op
# Warmup Iteration   5: 7.513 ns/op
Iteration   1: 7.518 ns/op
Iteration   2: 7.527 ns/op
Iteration   3: 7.519 ns/op
Iteration   4: 7.518 ns/op
Iteration   5: 7.524 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.DoubleMathBenchmark.log":
  7.701 ±(99.9%) 0.203 ns/op [Average]
  (min, avg, max) = (7.518, 7.701, 7.913), stdev = 0.189
  CI (99.9%): [7.498, 7.904] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.DoubleMathBenchmark.log10
# Parameters: (size = 262144)

# Run progress: 50.00% complete, ETA 00:38:35
# Fork: 1 of 3
# Warmup Iteration   1: 8.523 ns/op
# Warmup Iteration   2: 8.598 ns/op
# Warmup Iteration   3: 8.608 ns/op
# Warmup Iteration   4: 8.616 ns/op
# Warmup Iteration   5: 8.647 ns/op
Iteration   1: 8.632 ns/op
Iteration   2: 8.254 ns/op
Iteration   3: 8.273 ns/op
Iteration   4: 8.123 ns/op
Iteration   5: 8.151 ns/op

# Run progress: 52.38% complete, ETA 00:36:45
# Fork: 2 of 3
# Warmup Iteration   1: 8.456 ns/op
# Warmup Iteration   2: 8.535 ns/op
# Warmup Iteration   3: 8.571 ns/op
# Warmup Iteration   4: 8.573 ns/op
# Warmup Iteration   5: 8.594 ns/op
Iteration   1: 8.598 ns/op
Iteration   2: 8.618 ns/op
Iteration   3: 8.213 ns/op
Iteration   4: 8.279 ns/op
Iteration   5: 8.271 ns/op

# Run progress: 54.76% complete, ETA 00:34:55
# Fork: 3 of 3
# Warmup Iteration   1: 8.498 ns/op
# Warmup Iteration   2: 8.591 ns/op
# Warmup Iteration   3: 8.615 ns/op
# Warmup Iteration   4: 8.621 ns/op
# Warmup Iteration   5: 8.640 ns/op
Iteration   1: 8.641 ns/op
Iteration   2: 8.639 ns/op
Iteration   3: 8.635 ns/op
Iteration   4: 8.648 ns/op
Iteration   5: 8.643 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.DoubleMathBenchmark.log10":
  8.441 ±(99.9%) 0.230 ns/op [Average]
  (min, avg, max) = (8.123, 8.441, 8.648), stdev = 0.215
  CI (99.9%): [8.211, 8.671] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.DoubleMathBenchmark.max
# Parameters: (size = 262144)

# Run progress: 57.14% complete, ETA 00:33:04
# Fork: 1 of 3
# Warmup Iteration   1: 1.107 ns/op
# Warmup Iteration   2: 1.105 ns/op
# Warmup Iteration   3: 1.111 ns/op
# Warmup Iteration   4: 1.119 ns/op
# Warmup Iteration   5: 1.119 ns/op
Iteration   1: 1.122 ns/op
Iteration   2: 1.123 ns/op
Iteration   3: 1.125 ns/op
Iteration   4: 1.124 ns/op
Iteration   5: 1.125 ns/op

# Run progress: 59.52% complete, ETA 00:31:14
# Fork: 2 of 3
# Warmup Iteration   1: 1.172 ns/op
# Warmup Iteration   2: 1.182 ns/op
# Warmup Iteration   3: 1.181 ns/op
# Warmup Iteration   4: 1.190 ns/op
# Warmup Iteration   5: 1.190 ns/op
Iteration   1: 1.184 ns/op
Iteration   2: 1.180 ns/op
Iteration   3: 1.180 ns/op
Iteration   4: 1.182 ns/op
Iteration   5: 1.176 ns/op

# Run progress: 61.90% complete, ETA 00:29:24
# Fork: 3 of 3
# Warmup Iteration   1: 1.090 ns/op
# Warmup Iteration   2: 1.112 ns/op
# Warmup Iteration   3: 1.118 ns/op
# Warmup Iteration   4: 1.119 ns/op
# Warmup Iteration   5: 1.121 ns/op
Iteration   1: 1.121 ns/op
Iteration   2: 1.120 ns/op
Iteration   3: 1.120 ns/op
Iteration   4: 1.121 ns/op
Iteration   5: 1.121 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.DoubleMathBenchmark.max":
  1.142 ±(99.9%) 0.031 ns/op [Average]
  (min, avg, max) = (1.120, 1.142, 1.184), stdev = 0.029
  CI (99.9%): [1.111, 1.172] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.DoubleMathBenchmark.min
# Parameters: (size = 262144)

# Run progress: 64.29% complete, ETA 00:27:34
# Fork: 1 of 3
# Warmup Iteration   1: 1.168 ns/op
# Warmup Iteration   2: 1.188 ns/op
# Warmup Iteration   3: 1.180 ns/op
# Warmup Iteration   4: 1.180 ns/op
# Warmup Iteration   5: 1.181 ns/op
Iteration   1: 1.179 ns/op
Iteration   2: 1.180 ns/op
Iteration   3: 1.182 ns/op
Iteration   4: 1.182 ns/op
Iteration   5: 1.182 ns/op

# Run progress: 66.67% complete, ETA 00:25:43
# Fork: 2 of 3
# Warmup Iteration   1: 1.159 ns/op
# Warmup Iteration   2: 1.175 ns/op
# Warmup Iteration   3: 1.179 ns/op
# Warmup Iteration   4: 1.182 ns/op
# Warmup Iteration   5: 1.182 ns/op
Iteration   1: 1.182 ns/op
Iteration   2: 1.183 ns/op
Iteration   3: 1.141 ns/op
Iteration   4: 1.124 ns/op
Iteration   5: 1.128 ns/op

# Run progress: 69.05% complete, ETA 00:23:53
# Fork: 3 of 3
# Warmup Iteration   1: 1.091 ns/op
# Warmup Iteration   2: 1.181 ns/op
# Warmup Iteration   3: 1.179 ns/op
# Warmup Iteration   4: 1.182 ns/op
# Warmup Iteration   5: 1.123 ns/op
Iteration   1: 1.125 ns/op
Iteration   2: 1.126 ns/op
Iteration   3: 1.131 ns/op
Iteration   4: 1.131 ns/op
Iteration   5: 1.136 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.DoubleMathBenchmark.min":
  1.154 ±(99.9%) 0.029 ns/op [Average]
  (min, avg, max) = (1.124, 1.154, 1.183), stdev = 0.027
  CI (99.9%): [1.126, 1.183] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.DoubleMathBenchmark.pow
# Parameters: (size = 262144)

# Run progress: 71.43% complete, ETA 00:22:03
# Fork: 1 of 3
# Warmup Iteration   1: 12.225 ns/op
# Warmup Iteration   2: 12.562 ns/op
# Warmup Iteration   3: 12.561 ns/op
# Warmup Iteration   4: 12.593 ns/op
# Warmup Iteration   5: 12.598 ns/op
Iteration   1: 12.657 ns/op
Iteration   2: 12.593 ns/op
Iteration   3: 12.589 ns/op
Iteration   4: 12.596 ns/op
Iteration   5: 12.626 ns/op

# Run progress: 73.81% complete, ETA 00:20:12
# Fork: 2 of 3
# Warmup Iteration   1: 12.422 ns/op
# Warmup Iteration   2: 12.545 ns/op
# Warmup Iteration   3: 13.045 ns/op
# Warmup Iteration   4: 13.148 ns/op
# Warmup Iteration   5: 13.116 ns/op
Iteration   1: 13.123 ns/op
Iteration   2: 13.128 ns/op
Iteration   3: 13.111 ns/op
Iteration   4: 13.094 ns/op
Iteration   5: 13.103 ns/op

# Run progress: 76.19% complete, ETA 00:18:22
# Fork: 3 of 3
# Warmup Iteration   1: 12.024 ns/op
# Warmup Iteration   2: 12.242 ns/op
# Warmup Iteration   3: 12.280 ns/op
# Warmup Iteration   4: 12.347 ns/op
# Warmup Iteration   5: 12.374 ns/op
Iteration   1: 12.401 ns/op
Iteration   2: 12.449 ns/op
Iteration   3: 12.449 ns/op
Iteration   4: 12.469 ns/op
Iteration   5: 12.460 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.DoubleMathBenchmark.pow":
  12.723 ±(99.9%) 0.314 ns/op [Average]
  (min, avg, max) = (12.401, 12.723, 13.128), stdev = 0.294
  CI (99.9%): [12.409, 13.037] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.DoubleMathBenchmark.round
# Parameters: (size = 262144)

# Run progress: 78.57% complete, ETA 00:16:32
# Fork: 1 of 3
# Warmup Iteration   1: 1.870 ns/op
# Warmup Iteration   2: 1.889 ns/op
# Warmup Iteration   3: 1.895 ns/op
# Warmup Iteration   4: 1.890 ns/op
# Warmup Iteration   5: 1.892 ns/op
Iteration   1: 2.225 ns/op
Iteration   2: 1.992 ns/op
Iteration   3: 1.993 ns/op
Iteration   4: 1.993 ns/op
Iteration   5: 1.996 ns/op

# Run progress: 80.95% complete, ETA 00:14:42
# Fork: 2 of 3
# Warmup Iteration   1: 1.787 ns/op
# Warmup Iteration   2: 1.810 ns/op
# Warmup Iteration   3: 1.815 ns/op
# Warmup Iteration   4: 1.822 ns/op
# Warmup Iteration   5: 1.864 ns/op
Iteration   1: 1.920 ns/op
Iteration   2: 1.997 ns/op
Iteration   3: 1.994 ns/op
Iteration   4: 1.986 ns/op
Iteration   5: 1.984 ns/op

# Run progress: 83.33% complete, ETA 00:12:51
# Fork: 3 of 3
# Warmup Iteration   1: 1.853 ns/op
# Warmup Iteration   2: 1.800 ns/op
# Warmup Iteration   3: 1.811 ns/op
# Warmup Iteration   4: 1.813 ns/op
# Warmup Iteration   5: 1.853 ns/op
Iteration   1: 1.920 ns/op
Iteration   2: 1.919 ns/op
Iteration   3: 1.920 ns/op
Iteration   4: 1.917 ns/op
Iteration   5: 1.920 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.DoubleMathBenchmark.round":
  1.979 ±(99.9%) 0.082 ns/op [Average]
  (min, avg, max) = (1.917, 1.979, 2.225), stdev = 0.077
  CI (99.9%): [1.896, 2.061] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.DoubleMathBenchmark.sin
# Parameters: (size = 262144)

# Run progress: 85.71% complete, ETA 00:11:01
# Fork: 1 of 3
# Warmup Iteration   1: 26.452 ns/op
# Warmup Iteration   2: 26.694 ns/op
# Warmup Iteration   3: 26.784 ns/op
# Warmup Iteration   4: 26.851 ns/op
# Warmup Iteration   5: 26.959 ns/op
Iteration   1: 26.975 ns/op
Iteration   2: 27.029 ns/op
Iteration   3: 26.989 ns/op
Iteration   4: 26.992 ns/op
Iteration   5: 26.974 ns/op

# Run progress: 88.10% complete, ETA 00:09:11
# Fork: 2 of 3
# Warmup Iteration   1: 26.096 ns/op
# Warmup Iteration   2: 26.093 ns/op
# Warmup Iteration   3: 25.979 ns/op
# Warmup Iteration   4: 25.949 ns/op
# Warmup Iteration   5: 26.006 ns/op
Iteration   1: 26.107 ns/op
Iteration   2: 26.103 ns/op
Iteration   3: 26.091 ns/op
Iteration   4: 26.107 ns/op
Iteration   5: 26.000 ns/op

# Run progress: 90.48% complete, ETA 00:07:21
# Fork: 3 of 3
# Warmup Iteration   1: 26.117 ns/op
# Warmup Iteration   2: 26.051 ns/op
# Warmup Iteration   3: 26.101 ns/op
# Warmup Iteration   4: 26.094 ns/op
# Warmup Iteration   5: 26.063 ns/op
Iteration   1: 26.071 ns/op
Iteration   2: 26.082 ns/op
Iteration   3: 26.077 ns/op
Iteration   4: 26.107 ns/op
Iteration   5: 26.066 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.DoubleMathBenchmark.sin":
  26.385 ±(99.9%) 0.476 ns/op [Average]
  (min, avg, max) = (26.000, 26.385, 27.029), stdev = 0.445
  CI (99.9%): [25.909, 26.861] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.DoubleMathBenchmark.sqrt
# Parameters: (size = 262144)

# Run progress: 92.86% complete, ETA 00:05:30
# Fork: 1 of 3
# Warmup Iteration   1: 0.769 ns/op
# Warmup Iteration   2: 0.766 ns/op
# Warmup Iteration   3: 0.769 ns/op
# Warmup Iteration   4: 0.768 ns/op
# Warmup Iteration   5: 0.769 ns/op
Iteration   1: 0.769 ns/op
Iteration   2: 0.768 ns/op
Iteration   3: 0.767 ns/op
Iteration   4: 0.768 ns/op
Iteration   5: 0.769 ns/op

# Run progress: 95.24% complete, ETA 00:03:40
# Fork: 2 of 3
# Warmup Iteration   1: 0.769 ns/op
# Warmup Iteration   2: 0.770 ns/op
# Warmup Iteration   3: 0.767 ns/op
# Warmup Iteration   4: 0.769 ns/op
# Warmup Iteration   5: 0.768 ns/op
Iteration   1: 0.768 ns/op
Iteration   2: 0.766 ns/op
Iteration   3: 0.769 ns/op
Iteration   4: 0.768 ns/op
Iteration   5: 0.768 ns/op

# Run progress: 97.62% complete, ETA 00:01:50
# Fork: 3 of 3
# Warmup Iteration   1: 0.770 ns/op
# Warmup Iteration   2: 0.770 ns/op
# Warmup Iteration   3: 0.769 ns/op
# Warmup Iteration   4: 0.769 ns/op
# Warmup Iteration   5: 0.771 ns/op
Iteration   1: 0.774 ns/op
Iteration   2: 0.777 ns/op
Iteration   3: 0.776 ns/op
Iteration   4: 0.775 ns/op
Iteration   5: 0.777 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.DoubleMathBenchmark.sqrt":
  0.771 ±(99.9%) 0.004 ns/op [Average]
  (min, avg, max) = (0.766, 0.771, 0.777), stdev = 0.004
  CI (99.9%): [0.766, 0.775] (assumes normal distribution)


# Run complete. Total time: 01:17:11

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                  (size)  Mode  Cnt   Score   Error  Units
DoubleMathBenchmark.abs    262144  avgt   15   0.323 ± 0.007  ns/op
DoubleMathBenchmark.ceil   262144  avgt   15   2.060 ± 0.061  ns/op
DoubleMathBenchmark.cos    262144  avgt   15  26.590 ± 0.586  ns/op
DoubleMathBenchmark.exp    262144  avgt   15   3.811 ± 0.101  ns/op
DoubleMathBenchmark.floor  262144  avgt   15   1.920 ± 0.060  ns/op
DoubleMathBenchmark.fma    262144  avgt   15   0.736 ± 0.003  ns/op
DoubleMathBenchmark.log    262144  avgt   15   7.701 ± 0.203  ns/op
DoubleMathBenchmark.log10  262144  avgt   15   8.441 ± 0.230  ns/op
DoubleMathBenchmark.max    262144  avgt   15   1.142 ± 0.031  ns/op
DoubleMathBenchmark.min    262144  avgt   15   1.154 ± 0.029  ns/op
DoubleMathBenchmark.pow    262144  avgt   15  12.723 ± 0.314  ns/op
DoubleMathBenchmark.round  262144  avgt   15   1.979 ± 0.082  ns/op
DoubleMathBenchmark.sin    262144  avgt   15  26.385 ± 0.476  ns/op
DoubleMathBenchmark.sqrt   262144  avgt   15   0.771 ± 0.004  ns/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_c1_c2_jit/DoubleMathBenchmark.json
Running java  -jar benchmarks/target/benchmarks.jar .*ClassCastBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_c1_c2_jit/ClassCastBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ClassCastBenchmark.explicit_class_cast
# Parameters: (size = 32768)

# Run progress: 0.00% complete, ETA 00:15:00
# Fork: 1 of 3
# Warmup Iteration   1: 2.639 ns/op
# Warmup Iteration   2: 2.653 ns/op
# Warmup Iteration   3: 2.501 ns/op
# Warmup Iteration   4: 2.675 ns/op
# Warmup Iteration   5: 2.671 ns/op
Iteration   1: 2.668 ns/op
Iteration   2: 2.668 ns/op
Iteration   3: 2.661 ns/op
Iteration   4: 2.661 ns/op
Iteration   5: 2.667 ns/op

# Run progress: 11.11% complete, ETA 00:14:42
# Fork: 2 of 3
# Warmup Iteration   1: 2.483 ns/op
# Warmup Iteration   2: 2.518 ns/op
# Warmup Iteration   3: 2.523 ns/op
# Warmup Iteration   4: 2.529 ns/op
# Warmup Iteration   5: 2.528 ns/op
Iteration   1: 2.531 ns/op
Iteration   2: 2.536 ns/op
Iteration   3: 2.535 ns/op
Iteration   4: 2.538 ns/op
Iteration   5: 2.538 ns/op

# Run progress: 22.22% complete, ETA 00:12:51
# Fork: 3 of 3
# Warmup Iteration   1: 2.625 ns/op
# Warmup Iteration   2: 2.632 ns/op
# Warmup Iteration   3: 2.629 ns/op
# Warmup Iteration   4: 2.649 ns/op
# Warmup Iteration   5: 2.646 ns/op
Iteration   1: 2.651 ns/op
Iteration   2: 2.645 ns/op
Iteration   3: 2.644 ns/op
Iteration   4: 2.650 ns/op
Iteration   5: 2.645 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ClassCastBenchmark.explicit_class_cast":
  2.616 ±(99.9%) 0.063 ns/op [Average]
  (min, avg, max) = (2.531, 2.616, 2.668), stdev = 0.059
  CI (99.9%): [2.552, 2.679] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ClassCastBenchmark.regular_cast
# Parameters: (size = 32768)

# Run progress: 33.33% complete, ETA 00:11:01
# Fork: 1 of 3
# Warmup Iteration   1: 2.615 ns/op
# Warmup Iteration   2: 2.644 ns/op
# Warmup Iteration   3: 2.652 ns/op
# Warmup Iteration   4: 2.655 ns/op
# Warmup Iteration   5: 2.658 ns/op
Iteration   1: 2.667 ns/op
Iteration   2: 2.658 ns/op
Iteration   3: 2.657 ns/op
Iteration   4: 2.664 ns/op
Iteration   5: 2.665 ns/op

# Run progress: 44.44% complete, ETA 00:09:11
# Fork: 2 of 3
# Warmup Iteration   1: 2.612 ns/op
# Warmup Iteration   2: 2.507 ns/op
# Warmup Iteration   3: 2.524 ns/op
# Warmup Iteration   4: 2.537 ns/op
# Warmup Iteration   5: 2.544 ns/op
Iteration   1: 2.537 ns/op
Iteration   2: 2.539 ns/op
Iteration   3: 2.544 ns/op
Iteration   4: 2.538 ns/op
Iteration   5: 2.661 ns/op

# Run progress: 55.56% complete, ETA 00:07:21
# Fork: 3 of 3
# Warmup Iteration   1: 2.496 ns/op
# Warmup Iteration   2: 2.470 ns/op
# Warmup Iteration   3: 2.488 ns/op
# Warmup Iteration   4: 2.497 ns/op
# Warmup Iteration   5: 2.497 ns/op
Iteration   1: 2.493 ns/op
Iteration   2: 2.499 ns/op
Iteration   3: 2.503 ns/op
Iteration   4: 2.509 ns/op
Iteration   5: 2.507 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ClassCastBenchmark.regular_cast":
  2.576 ±(99.9%) 0.079 ns/op [Average]
  (min, avg, max) = (2.493, 2.576, 2.667), stdev = 0.074
  CI (99.9%): [2.497, 2.655] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ClassCastBenchmark.type_cast
# Parameters: (size = 32768)

# Run progress: 66.67% complete, ETA 00:05:30
# Fork: 1 of 3
# Warmup Iteration   1: 3.420 ns/op
# Warmup Iteration   2: 4.212 ns/op
# Warmup Iteration   3: 3.492 ns/op
# Warmup Iteration   4: 3.786 ns/op
# Warmup Iteration   5: 3.779 ns/op
Iteration   1: 3.763 ns/op
Iteration   2: 3.758 ns/op
Iteration   3: 3.750 ns/op
Iteration   4: 3.747 ns/op
Iteration   5: 3.747 ns/op

# Run progress: 77.78% complete, ETA 00:03:40
# Fork: 2 of 3
# Warmup Iteration   1: 3.670 ns/op
# Warmup Iteration   2: 4.400 ns/op
# Warmup Iteration   3: 3.726 ns/op
# Warmup Iteration   4: 3.520 ns/op
# Warmup Iteration   5: 3.537 ns/op
Iteration   1: 3.538 ns/op
Iteration   2: 3.559 ns/op
Iteration   3: 3.560 ns/op
Iteration   4: 3.542 ns/op
Iteration   5: 3.547 ns/op

# Run progress: 88.89% complete, ETA 00:01:50
# Fork: 3 of 3
# Warmup Iteration   1: 3.416 ns/op
# Warmup Iteration   2: 4.208 ns/op
# Warmup Iteration   3: 3.723 ns/op
# Warmup Iteration   4: 3.704 ns/op
# Warmup Iteration   5: 3.708 ns/op
Iteration   1: 3.710 ns/op
Iteration   2: 3.702 ns/op
Iteration   3: 3.703 ns/op
Iteration   4: 3.700 ns/op
Iteration   5: 3.703 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.ClassCastBenchmark.type_cast":
  3.669 ±(99.9%) 0.096 ns/op [Average]
  (min, avg, max) = (3.538, 3.669, 3.763), stdev = 0.090
  CI (99.9%): [3.572, 3.765] (assumes normal distribution)


# Run complete. Total time: 00:16:32

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                               (size)  Mode  Cnt  Score   Error  Units
ClassCastBenchmark.explicit_class_cast   32768  avgt   15  2.616 ± 0.063  ns/op
ClassCastBenchmark.regular_cast          32768  avgt   15  2.576 ± 0.079  ns/op
ClassCastBenchmark.type_cast             32768  avgt   15  3.669 ± 0.096  ns/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_c1_c2_jit/ClassCastBenchmark.json
Running java  -jar benchmarks/target/benchmarks.jar .*ClassInstanceOfBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_c1_c2_jit/ClassInstanceOfBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ClassInstanceOfBenchmark.abstract_class_isAssignableFrom
# Parameters: (size = 32768)

# Run progress: 0.00% complete, ETA 00:50:00
# Fork: 1 of 3
# Warmup Iteration   1: <failure>

java.lang.ArrayIndexOutOfBoundsException: Index 32768 out of bounds for length 32768
	at com.ionutbalosin.jvm.jit.benchmark.ClassInstanceOfBenchmark.setup(ClassInstanceOfBenchmark.java:84)
	at com.ionutbalosin.jvm.jit.benchmark.generated.ClassInstanceOfBenchmark_abstract_class_isAssignableFrom_jmhTest._jmh_tryInit_f_classinstanceofbenchmark0_G(ClassInstanceOfBenchmark_abstract_class_isAssignableFrom_jmhTest.java:438)
	at com.ionutbalosin.jvm.jit.benchmark.generated.ClassInstanceOfBenchmark_abstract_class_isAssignableFrom_jmhTest.abstract_class_isAssignableFrom_AverageTime(ClassInstanceOfBenchmark_abstract_class_isAssignableFrom_jmhTest.java:161)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:830)


Benchmark had encountered error, and fail on error was requested
Running java  -jar benchmarks/target/benchmarks.jar .*BoxingBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_c1_c2_jit/BoxingBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.BoxingBenchmark.auto_boxing

# Run progress: 0.00% complete, ETA 00:30:00
# Fork: 1 of 3
# Warmup Iteration   1: 3.360 ns/op
# Warmup Iteration   2: 3.561 ns/op
# Warmup Iteration   3: 2.872 ns/op
# Warmup Iteration   4: 2.881 ns/op
# Warmup Iteration   5: 2.891 ns/op
Iteration   1: 2.883 ns/op
Iteration   2: 2.837 ns/op
Iteration   3: 2.847 ns/op
Iteration   4: 2.847 ns/op
Iteration   5: 2.847 ns/op

# Run progress: 5.56% complete, ETA 00:31:13
# Fork: 2 of 3
# Warmup Iteration   1: 3.295 ns/op
# Warmup Iteration   2: 3.502 ns/op
# Warmup Iteration   3: 2.834 ns/op
# Warmup Iteration   4: 2.841 ns/op
# Warmup Iteration   5: 2.848 ns/op
Iteration   1: 2.847 ns/op
Iteration   2: 2.849 ns/op
Iteration   3: 2.846 ns/op
Iteration   4: 3.067 ns/op
Iteration   5: 3.053 ns/op

# Run progress: 11.11% complete, ETA 00:29:23
# Fork: 3 of 3
# Warmup Iteration   1: 3.537 ns/op
# Warmup Iteration   2: 3.739 ns/op
# Warmup Iteration   3: 3.020 ns/op
# Warmup Iteration   4: 3.021 ns/op
# Warmup Iteration   5: 3.021 ns/op
Iteration   1: 3.023 ns/op
Iteration   2: 3.022 ns/op
Iteration   3: 3.020 ns/op
Iteration   4: 3.023 ns/op
Iteration   5: 3.021 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.BoxingBenchmark.auto_boxing":
  2.935 ±(99.9%) 0.102 ns/op [Average]
  (min, avg, max) = (2.837, 2.935, 3.067), stdev = 0.096
  CI (99.9%): [2.833, 3.038] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.BoxingBenchmark.baseline

# Run progress: 16.67% complete, ETA 00:27:33
# Fork: 1 of 3
# Warmup Iteration   1: 2.434 ns/op
# Warmup Iteration   2: 2.361 ns/op
# Warmup Iteration   3: 2.225 ns/op
# Warmup Iteration   4: 2.238 ns/op
# Warmup Iteration   5: 2.235 ns/op
Iteration   1: 2.232 ns/op
Iteration   2: 2.235 ns/op
Iteration   3: 2.240 ns/op
Iteration   4: 2.237 ns/op
Iteration   5: 2.239 ns/op

# Run progress: 22.22% complete, ETA 00:25:43
# Fork: 2 of 3
# Warmup Iteration   1: 2.425 ns/op
# Warmup Iteration   2: 2.336 ns/op
# Warmup Iteration   3: 2.205 ns/op
# Warmup Iteration   4: 2.206 ns/op
# Warmup Iteration   5: 2.094 ns/op
Iteration   1: 2.089 ns/op
Iteration   2: 2.115 ns/op
Iteration   3: 2.105 ns/op
Iteration   4: 2.110 ns/op
Iteration   5: 2.110 ns/op

# Run progress: 27.78% complete, ETA 00:23:52
# Fork: 3 of 3
# Warmup Iteration   1: 2.346 ns/op
# Warmup Iteration   2: 2.258 ns/op
# Warmup Iteration   3: 2.250 ns/op
# Warmup Iteration   4: 2.242 ns/op
# Warmup Iteration   5: 2.245 ns/op
Iteration   1: 2.266 ns/op
Iteration   2: 2.248 ns/op
Iteration   3: 2.221 ns/op
Iteration   4: 2.134 ns/op
Iteration   5: 2.136 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.BoxingBenchmark.baseline":
  2.181 ±(99.9%) 0.071 ns/op [Average]
  (min, avg, max) = (2.089, 2.181, 2.266), stdev = 0.067
  CI (99.9%): [2.110, 2.252] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.BoxingBenchmark.cached_valueOf

# Run progress: 33.33% complete, ETA 00:22:02
# Fork: 1 of 3
# Warmup Iteration   1: 3.299 ns/op
# Warmup Iteration   2: 3.693 ns/op
# Warmup Iteration   3: 2.821 ns/op
# Warmup Iteration   4: 2.834 ns/op
# Warmup Iteration   5: 2.837 ns/op
Iteration   1: 2.839 ns/op
Iteration   2: 2.840 ns/op
Iteration   3: 2.838 ns/op
Iteration   4: 2.842 ns/op
Iteration   5: 2.846 ns/op

# Run progress: 38.89% complete, ETA 00:20:12
# Fork: 2 of 3
# Warmup Iteration   1: 3.370 ns/op
# Warmup Iteration   2: 3.770 ns/op
# Warmup Iteration   3: 2.875 ns/op
# Warmup Iteration   4: 2.878 ns/op
# Warmup Iteration   5: 2.880 ns/op
Iteration   1: 2.879 ns/op
Iteration   2: 2.885 ns/op
Iteration   3: 2.880 ns/op
Iteration   4: 2.889 ns/op
Iteration   5: 2.884 ns/op

# Run progress: 44.44% complete, ETA 00:18:22
# Fork: 3 of 3
# Warmup Iteration   1: 3.501 ns/op
# Warmup Iteration   2: 3.910 ns/op
# Warmup Iteration   3: 2.796 ns/op
# Warmup Iteration   4: 2.822 ns/op
# Warmup Iteration   5: 2.834 ns/op
Iteration   1: 2.838 ns/op
Iteration   2: 2.842 ns/op
Iteration   3: 2.850 ns/op
Iteration   4: 2.846 ns/op
Iteration   5: 2.849 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.BoxingBenchmark.cached_valueOf":
  2.857 ±(99.9%) 0.022 ns/op [Average]
  (min, avg, max) = (2.838, 2.857, 2.889), stdev = 0.020
  CI (99.9%): [2.835, 2.878] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.BoxingBenchmark.new_instance

# Run progress: 50.00% complete, ETA 00:16:32
# Fork: 1 of 3
# Warmup Iteration   1: 5.235 ns/op
# Warmup Iteration   2: 5.127 ns/op
# Warmup Iteration   3: 3.896 ns/op
# Warmup Iteration   4: 3.961 ns/op
# Warmup Iteration   5: 4.056 ns/op
Iteration   1: 3.943 ns/op
Iteration   2: 4.051 ns/op
Iteration   3: 3.997 ns/op
Iteration   4: 3.985 ns/op
Iteration   5: 4.107 ns/op

# Run progress: 55.56% complete, ETA 00:14:41
# Fork: 2 of 3
# Warmup Iteration   1: 5.164 ns/op
# Warmup Iteration   2: 5.264 ns/op
# Warmup Iteration   3: 3.869 ns/op
# Warmup Iteration   4: 4.032 ns/op
# Warmup Iteration   5: 4.050 ns/op
Iteration   1: 4.036 ns/op
Iteration   2: 3.944 ns/op
Iteration   3: 4.066 ns/op
Iteration   4: 3.923 ns/op
Iteration   5: 3.945 ns/op

# Run progress: 61.11% complete, ETA 00:12:51
# Fork: 3 of 3
# Warmup Iteration   1: 5.311 ns/op
# Warmup Iteration   2: 5.228 ns/op
# Warmup Iteration   3: 4.122 ns/op
# Warmup Iteration   4: 4.014 ns/op
# Warmup Iteration   5: 3.982 ns/op
Iteration   1: 4.072 ns/op
Iteration   2: 3.971 ns/op
Iteration   3: 4.042 ns/op
Iteration   4: 4.096 ns/op
Iteration   5: 4.010 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.BoxingBenchmark.new_instance":
  4.012 ±(99.9%) 0.064 ns/op [Average]
  (min, avg, max) = (3.923, 4.012, 4.107), stdev = 0.060
  CI (99.9%): [3.949, 4.076] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.BoxingBenchmark.un_boxing

# Run progress: 66.67% complete, ETA 00:11:01
# Fork: 1 of 3
# Warmup Iteration   1: 2.636 ns/op
# Warmup Iteration   2: 2.672 ns/op
# Warmup Iteration   3: 2.223 ns/op
# Warmup Iteration   4: 2.232 ns/op
# Warmup Iteration   5: 2.239 ns/op
Iteration   1: 2.239 ns/op
Iteration   2: 2.237 ns/op
Iteration   3: 2.238 ns/op
Iteration   4: 2.242 ns/op
Iteration   5: 2.245 ns/op

# Run progress: 72.22% complete, ETA 00:09:11
# Fork: 2 of 3
# Warmup Iteration   1: 2.630 ns/op
# Warmup Iteration   2: 2.671 ns/op
# Warmup Iteration   3: 2.216 ns/op
# Warmup Iteration   4: 2.226 ns/op
# Warmup Iteration   5: 2.232 ns/op
Iteration   1: 2.231 ns/op
Iteration   2: 2.238 ns/op
Iteration   3: 2.237 ns/op
Iteration   4: 2.238 ns/op
Iteration   5: 2.243 ns/op

# Run progress: 77.78% complete, ETA 00:07:20
# Fork: 3 of 3
# Warmup Iteration   1: 2.683 ns/op
# Warmup Iteration   2: 2.825 ns/op
# Warmup Iteration   3: 2.340 ns/op
# Warmup Iteration   4: 2.344 ns/op
# Warmup Iteration   5: 2.343 ns/op
Iteration   1: 2.342 ns/op
Iteration   2: 2.343 ns/op
Iteration   3: 2.343 ns/op
Iteration   4: 2.346 ns/op
Iteration   5: 2.346 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.BoxingBenchmark.un_boxing":
  2.274 ±(99.9%) 0.055 ns/op [Average]
  (min, avg, max) = (2.231, 2.274, 2.346), stdev = 0.051
  CI (99.9%): [2.219, 2.329] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.BoxingBenchmark.un_cached_valueOf

# Run progress: 83.33% complete, ETA 00:05:30
# Fork: 1 of 3
# Warmup Iteration   1: 4.886 ns/op
# Warmup Iteration   2: 4.793 ns/op
# Warmup Iteration   3: 4.423 ns/op
# Warmup Iteration   4: 4.372 ns/op
# Warmup Iteration   5: 4.332 ns/op
Iteration   1: 4.385 ns/op
Iteration   2: 4.488 ns/op
Iteration   3: 4.459 ns/op
Iteration   4: 4.445 ns/op
Iteration   5: 4.505 ns/op

# Run progress: 88.89% complete, ETA 00:03:39
# Fork: 2 of 3
# Warmup Iteration   1: 4.949 ns/op
# Warmup Iteration   2: 4.877 ns/op
# Warmup Iteration   3: 4.359 ns/op
# Warmup Iteration   4: 4.467 ns/op
# Warmup Iteration   5: 4.339 ns/op
Iteration   1: 4.325 ns/op
Iteration   2: 4.433 ns/op
Iteration   3: 4.378 ns/op
Iteration   4: 4.471 ns/op
Iteration   5: 4.379 ns/op

# Run progress: 94.44% complete, ETA 00:01:49
# Fork: 3 of 3
# Warmup Iteration   1: 5.023 ns/op
# Warmup Iteration   2: 4.961 ns/op
# Warmup Iteration   3: 4.486 ns/op
# Warmup Iteration   4: 4.376 ns/op
# Warmup Iteration   5: 4.410 ns/op
Iteration   1: 4.351 ns/op
Iteration   2: 4.450 ns/op
Iteration   3: 4.439 ns/op
Iteration   4: 4.538 ns/op
Iteration   5: 4.413 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.BoxingBenchmark.un_cached_valueOf":
  4.431 ±(99.9%) 0.063 ns/op [Average]
  (min, avg, max) = (4.325, 4.431, 4.538), stdev = 0.059
  CI (99.9%): [4.368, 4.494] (assumes normal distribution)


# Run complete. Total time: 00:32:34

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                          Mode  Cnt  Score   Error  Units
BoxingBenchmark.auto_boxing        avgt   15  2.935 ± 0.102  ns/op
BoxingBenchmark.baseline           avgt   15  2.181 ± 0.071  ns/op
BoxingBenchmark.cached_valueOf     avgt   15  2.857 ± 0.022  ns/op
BoxingBenchmark.new_instance       avgt   15  4.012 ± 0.064  ns/op
BoxingBenchmark.un_boxing          avgt   15  2.274 ± 0.055  ns/op
BoxingBenchmark.un_cached_valueOf  avgt   15  4.431 ± 0.063  ns/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_c1_c2_jit/BoxingBenchmark.json
Running java  -jar benchmarks/target/benchmarks.jar .*CompactStringsBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_c1_c2_jit/CompactStringsBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.CompactStringsBenchmark.latin1_charAt
# Parameters: (idx = 17, latin_1 = 123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ, latin_1_identical = 123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ, utf_16 = 123456789ABCDEFGHIJKLMNOPQRSTUVWX¾ʬ, utf_16_identical = 123456789ABCDEFGHIJKLMNOPQRSTUVWX¾ʬ, utf_16_str1 = ÐžÐ¹,Ð²ÑÑ‘Ð, utf_16_str2 = ϑ¿Ñ€Ð¾Ð¿φÐ°Ϫ, utf_16_str3 = Ðϛζ»Ð¾,ÑˆÐµÑ„, utf_16_str4 = ΦЀ¾ʬϪÐ»ÐΛϼϨЁ, utf_16_str5 = ΏΔΘΞΨθςώϚϠϨϱ, utf_16_str6 = ϪÐϚϠΨθϑ¿ÐžЀ¾)

# Run progress: 0.00% complete, ETA 00:40:00
# Fork: 1 of 3
# Warmup Iteration   1: 3.362 ns/op
# Warmup Iteration   2: 3.415 ns/op
# Warmup Iteration   3: 3.189 ns/op
# Warmup Iteration   4: 3.191 ns/op
# Warmup Iteration   5: 3.188 ns/op
Iteration   1: 3.189 ns/op
Iteration   2: 3.186 ns/op
Iteration   3: 3.188 ns/op
Iteration   4: 3.343 ns/op
Iteration   5: 3.207 ns/op

# Run progress: 4.17% complete, ETA 00:38:26
# Fork: 2 of 3
# Warmup Iteration   1: 3.265 ns/op
# Warmup Iteration   2: 3.600 ns/op
# Warmup Iteration   3: 3.358 ns/op
# Warmup Iteration   4: 3.178 ns/op
# Warmup Iteration   5: 3.183 ns/op
Iteration   1: 3.182 ns/op
Iteration   2: 3.182 ns/op
Iteration   3: 3.182 ns/op
Iteration   4: 3.185 ns/op
Iteration   5: 3.185 ns/op

# Run progress: 8.33% complete, ETA 00:36:45
# Fork: 3 of 3
# Warmup Iteration   1: 3.488 ns/op
# Warmup Iteration   2: 3.560 ns/op
# Warmup Iteration   3: 3.307 ns/op
# Warmup Iteration   4: 3.310 ns/op
# Warmup Iteration   5: 3.308 ns/op
Iteration   1: 3.300 ns/op
Iteration   2: 3.299 ns/op
Iteration   3: 3.299 ns/op
Iteration   4: 3.297 ns/op
Iteration   5: 3.289 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.CompactStringsBenchmark.latin1_charAt":
  3.234 ±(99.9%) 0.065 ns/op [Average]
  (min, avg, max) = (3.182, 3.234, 3.343), stdev = 0.061
  CI (99.9%): [3.169, 3.299] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.CompactStringsBenchmark.latin1_toCharArray
# Parameters: (idx = 17, latin_1 = 123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ, latin_1_identical = 123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ, utf_16 = 123456789ABCDEFGHIJKLMNOPQRSTUVWX¾ʬ, utf_16_identical = 123456789ABCDEFGHIJKLMNOPQRSTUVWX¾ʬ, utf_16_str1 = ÐžÐ¹,Ð²ÑÑ‘Ð, utf_16_str2 = ϑ¿Ñ€Ð¾Ð¿φÐ°Ϫ, utf_16_str3 = Ðϛζ»Ð¾,ÑˆÐµÑ„, utf_16_str4 = ΦЀ¾ʬϪÐ»ÐΛϼϨЁ, utf_16_str5 = ΏΔΘΞΨθςώϚϠϨϱ, utf_16_str6 = ϪÐϚϠΨθϑ¿ÐžЀ¾)

# Run progress: 12.50% complete, ETA 00:35:05
# Fork: 1 of 3
# Warmup Iteration   1: 11.191 ns/op
# Warmup Iteration   2: 10.799 ns/op
# Warmup Iteration   3: 10.197 ns/op
# Warmup Iteration   4: 10.475 ns/op
# Warmup Iteration   5: 10.346 ns/op
Iteration   1: 10.479 ns/op
Iteration   2: 10.376 ns/op
Iteration   3: 10.284 ns/op
Iteration   4: 10.118 ns/op
Iteration   5: 10.479 ns/op

# Run progress: 16.67% complete, ETA 00:33:24
# Fork: 2 of 3
# Warmup Iteration   1: 11.297 ns/op
# Warmup Iteration   2: 11.123 ns/op
# Warmup Iteration   3: 10.470 ns/op
# Warmup Iteration   4: 10.457 ns/op
# Warmup Iteration   5: 10.411 ns/op
Iteration   1: 10.397 ns/op
Iteration   2: 10.297 ns/op
Iteration   3: 10.095 ns/op
Iteration   4: 10.227 ns/op
Iteration   5: 10.610 ns/op

# Run progress: 20.83% complete, ETA 00:31:44
# Fork: 3 of 3
# Warmup Iteration   1: 11.524 ns/op
# Warmup Iteration   2: 10.940 ns/op
# Warmup Iteration   3: 10.439 ns/op
# Warmup Iteration   4: 10.495 ns/op
# Warmup Iteration   5: 10.538 ns/op
Iteration   1: 10.466 ns/op
Iteration   2: 10.707 ns/op
Iteration   3: 10.447 ns/op
Iteration   4: 10.470 ns/op
Iteration   5: 10.550 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.CompactStringsBenchmark.latin1_toCharArray":
  10.400 ±(99.9%) 0.183 ns/op [Average]
  (min, avg, max) = (10.095, 10.400, 10.707), stdev = 0.172
  CI (99.9%): [10.217, 10.584] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.CompactStringsBenchmark.latin1_toLatin1_equals
# Parameters: (idx = 17, latin_1 = 123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ, latin_1_identical = 123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ, utf_16 = 123456789ABCDEFGHIJKLMNOPQRSTUVWX¾ʬ, utf_16_identical = 123456789ABCDEFGHIJKLMNOPQRSTUVWX¾ʬ, utf_16_str1 = ÐžÐ¹,Ð²ÑÑ‘Ð, utf_16_str2 = ϑ¿Ñ€Ð¾Ð¿φÐ°Ϫ, utf_16_str3 = Ðϛζ»Ð¾,ÑˆÐµÑ„, utf_16_str4 = ΦЀ¾ʬϪÐ»ÐΛϼϨЁ, utf_16_str5 = ΏΔΘΞΨθςώϚϠϨϱ, utf_16_str6 = ϪÐϚϠΨθϑ¿ÐžЀ¾)

# Run progress: 25.00% complete, ETA 00:30:04
# Fork: 1 of 3
# Warmup Iteration   1: 6.529 ns/op
# Warmup Iteration   2: 6.875 ns/op
# Warmup Iteration   3: 6.379 ns/op
# Warmup Iteration   4: 6.342 ns/op
# Warmup Iteration   5: 6.014 ns/op
Iteration   1: 6.048 ns/op
Iteration   2: 6.322 ns/op
Iteration   3: 6.045 ns/op
Iteration   4: 6.016 ns/op
Iteration   5: 6.009 ns/op

# Run progress: 29.17% complete, ETA 00:28:23
# Fork: 2 of 3
# Warmup Iteration   1: 6.839 ns/op
# Warmup Iteration   2: 9.511 ns/op
# Warmup Iteration   3: 6.422 ns/op
# Warmup Iteration   4: 6.413 ns/op
# Warmup Iteration   5: 6.421 ns/op
Iteration   1: 6.396 ns/op
Iteration   2: 6.392 ns/op
Iteration   3: 6.390 ns/op
Iteration   4: 6.449 ns/op
Iteration   5: 6.445 ns/op

# Run progress: 33.33% complete, ETA 00:26:43
# Fork: 3 of 3
# Warmup Iteration   1: 6.310 ns/op
# Warmup Iteration   2: 8.910 ns/op
# Warmup Iteration   3: 6.050 ns/op
# Warmup Iteration   4: 6.050 ns/op
# Warmup Iteration   5: 6.049 ns/op
Iteration   1: 6.062 ns/op
Iteration   2: 6.163 ns/op
Iteration   3: 6.147 ns/op
Iteration   4: 6.142 ns/op
Iteration   5: 6.146 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.CompactStringsBenchmark.latin1_toLatin1_equals":
  6.212 ±(99.9%) 0.179 ns/op [Average]
  (min, avg, max) = (6.009, 6.212, 6.449), stdev = 0.168
  CI (99.9%): [6.032, 6.391] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.CompactStringsBenchmark.latin1_toUtf16_equals
# Parameters: (idx = 17, latin_1 = 123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ, latin_1_identical = 123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ, utf_16 = 123456789ABCDEFGHIJKLMNOPQRSTUVWX¾ʬ, utf_16_identical = 123456789ABCDEFGHIJKLMNOPQRSTUVWX¾ʬ, utf_16_str1 = ÐžÐ¹,Ð²ÑÑ‘Ð, utf_16_str2 = ϑ¿Ñ€Ð¾Ð¿φÐ°Ϫ, utf_16_str3 = Ðϛζ»Ð¾,ÑˆÐµÑ„, utf_16_str4 = ΦЀ¾ʬϪÐ»ÐΛϼϨЁ, utf_16_str5 = ΏΔΘΞΨθςώϚϠϨϱ, utf_16_str6 = ϪÐϚϠΨθϑ¿ÐžЀ¾)

# Run progress: 37.50% complete, ETA 00:25:03
# Fork: 1 of 3
# Warmup Iteration   1: 3.588 ns/op
# Warmup Iteration   2: 3.246 ns/op
# Warmup Iteration   3: 2.963 ns/op
# Warmup Iteration   4: 3.090 ns/op
# Warmup Iteration   5: 2.898 ns/op
Iteration   1: 2.900 ns/op
Iteration   2: 2.907 ns/op
Iteration   3: 2.911 ns/op
Iteration   4: 2.911 ns/op
Iteration   5: 2.911 ns/op

# Run progress: 41.67% complete, ETA 00:23:23
# Fork: 2 of 3
# Warmup Iteration   1: 3.594 ns/op
# Warmup Iteration   2: 3.427 ns/op
# Warmup Iteration   3: 2.959 ns/op
# Warmup Iteration   4: 2.966 ns/op
# Warmup Iteration   5: 2.968 ns/op
Iteration   1: 3.036 ns/op
Iteration   2: 2.968 ns/op
Iteration   3: 2.968 ns/op
Iteration   4: 2.970 ns/op
Iteration   5: 2.967 ns/op

# Run progress: 45.83% complete, ETA 00:21:43
# Fork: 3 of 3
# Warmup Iteration   1: 3.389 ns/op
# Warmup Iteration   2: 3.244 ns/op
# Warmup Iteration   3: 2.953 ns/op
# Warmup Iteration   4: 2.961 ns/op
# Warmup Iteration   5: 2.965 ns/op
Iteration   1: 3.031 ns/op
Iteration   2: 2.964 ns/op
Iteration   3: 2.966 ns/op
Iteration   4: 2.966 ns/op
Iteration   5: 2.965 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.CompactStringsBenchmark.latin1_toUtf16_equals":
  2.956 ±(99.9%) 0.045 ns/op [Average]
  (min, avg, max) = (2.900, 2.956, 3.036), stdev = 0.042
  CI (99.9%): [2.911, 3.001] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.CompactStringsBenchmark.utf16_charAt
# Parameters: (idx = 17, latin_1 = 123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ, latin_1_identical = 123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ, utf_16 = 123456789ABCDEFGHIJKLMNOPQRSTUVWX¾ʬ, utf_16_identical = 123456789ABCDEFGHIJKLMNOPQRSTUVWX¾ʬ, utf_16_str1 = ÐžÐ¹,Ð²ÑÑ‘Ð, utf_16_str2 = ϑ¿Ñ€Ð¾Ð¿φÐ°Ϫ, utf_16_str3 = Ðϛζ»Ð¾,ÑˆÐµÑ„, utf_16_str4 = ΦЀ¾ʬϪÐ»ÐΛϼϨЁ, utf_16_str5 = ΏΔΘΞΨθςώϚϠϨϱ, utf_16_str6 = ϪÐϚϠΨθϑ¿ÐžЀ¾)

# Run progress: 50.00% complete, ETA 00:20:02
# Fork: 1 of 3
# Warmup Iteration   1: 3.588 ns/op
# Warmup Iteration   2: 3.547 ns/op
# Warmup Iteration   3: 3.172 ns/op
# Warmup Iteration   4: 3.163 ns/op
# Warmup Iteration   5: 3.173 ns/op
Iteration   1: 3.006 ns/op
Iteration   2: 3.019 ns/op
Iteration   3: 3.024 ns/op
Iteration   4: 3.028 ns/op
Iteration   5: 3.025 ns/op

# Run progress: 54.17% complete, ETA 00:18:22
# Fork: 2 of 3
# Warmup Iteration   1: 3.312 ns/op
# Warmup Iteration   2: 3.315 ns/op
# Warmup Iteration   3: 2.973 ns/op
# Warmup Iteration   4: 2.999 ns/op
# Warmup Iteration   5: 2.982 ns/op
Iteration   1: 2.977 ns/op
Iteration   2: 2.972 ns/op
Iteration   3: 2.977 ns/op
Iteration   4: 2.974 ns/op
Iteration   5: 2.978 ns/op

# Run progress: 58.33% complete, ETA 00:16:42
# Fork: 3 of 3
# Warmup Iteration   1: 3.361 ns/op
# Warmup Iteration   2: 3.327 ns/op
# Warmup Iteration   3: 2.970 ns/op
# Warmup Iteration   4: 2.974 ns/op
# Warmup Iteration   5: 2.971 ns/op
Iteration   1: 2.972 ns/op
Iteration   2: 2.972 ns/op
Iteration   3: 2.970 ns/op
Iteration   4: 3.046 ns/op
Iteration   5: 3.225 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.CompactStringsBenchmark.utf16_charAt":
  3.011 ±(99.9%) 0.069 ns/op [Average]
  (min, avg, max) = (2.970, 3.011, 3.225), stdev = 0.065
  CI (99.9%): [2.942, 3.080] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.CompactStringsBenchmark.utf16_multiple_concat
# Parameters: (idx = 17, latin_1 = 123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ, latin_1_identical = 123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ, utf_16 = 123456789ABCDEFGHIJKLMNOPQRSTUVWX¾ʬ, utf_16_identical = 123456789ABCDEFGHIJKLMNOPQRSTUVWX¾ʬ, utf_16_str1 = ÐžÐ¹,Ð²ÑÑ‘Ð, utf_16_str2 = ϑ¿Ñ€Ð¾Ð¿φÐ°Ϫ, utf_16_str3 = Ðϛζ»Ð¾,ÑˆÐµÑ„, utf_16_str4 = ΦЀ¾ʬϪÐ»ÐΛϼϨЁ, utf_16_str5 = ΏΔΘΞΨθςώϚϠϨϱ, utf_16_str6 = ϪÐϚϠΨθϑ¿ÐžЀ¾)

# Run progress: 62.50% complete, ETA 00:15:02
# Fork: 1 of 3
# Warmup Iteration   1: 53.352 ns/op
# Warmup Iteration   2: 56.083 ns/op
# Warmup Iteration   3: 52.841 ns/op
# Warmup Iteration   4: 53.697 ns/op
# Warmup Iteration   5: 56.651 ns/op
Iteration   1: 55.568 ns/op
Iteration   2: 54.619 ns/op
Iteration   3: 56.084 ns/op
Iteration   4: 56.094 ns/op
Iteration   5: 53.070 ns/op

# Run progress: 66.67% complete, ETA 00:13:21
# Fork: 2 of 3
# Warmup Iteration   1: 54.132 ns/op
# Warmup Iteration   2: 56.648 ns/op
# Warmup Iteration   3: 56.523 ns/op
# Warmup Iteration   4: 54.407 ns/op
# Warmup Iteration   5: 53.466 ns/op
Iteration   1: 54.324 ns/op
Iteration   2: 54.181 ns/op
Iteration   3: 56.564 ns/op
Iteration   4: 55.086 ns/op
Iteration   5: 56.667 ns/op

# Run progress: 70.83% complete, ETA 00:11:41
# Fork: 3 of 3
# Warmup Iteration   1: 55.099 ns/op
# Warmup Iteration   2: 56.874 ns/op
# Warmup Iteration   3: 57.170 ns/op
# Warmup Iteration   4: 53.581 ns/op
# Warmup Iteration   5: 56.099 ns/op
Iteration   1: 57.096 ns/op
Iteration   2: 56.821 ns/op
Iteration   3: 55.904 ns/op
Iteration   4: 55.177 ns/op
Iteration   5: 55.306 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.CompactStringsBenchmark.utf16_multiple_concat":
  55.504 ±(99.9%) 1.204 ns/op [Average]
  (min, avg, max) = (53.070, 55.504, 57.096), stdev = 1.126
  CI (99.9%): [54.300, 56.708] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.CompactStringsBenchmark.utf16_toCharArray
# Parameters: (idx = 17, latin_1 = 123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ, latin_1_identical = 123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ, utf_16 = 123456789ABCDEFGHIJKLMNOPQRSTUVWX¾ʬ, utf_16_identical = 123456789ABCDEFGHIJKLMNOPQRSTUVWX¾ʬ, utf_16_str1 = ÐžÐ¹,Ð²ÑÑ‘Ð, utf_16_str2 = ϑ¿Ñ€Ð¾Ð¿φÐ°Ϫ, utf_16_str3 = Ðϛζ»Ð¾,ÑˆÐµÑ„, utf_16_str4 = ΦЀ¾ʬϪÐ»ÐΛϼϨЁ, utf_16_str5 = ΏΔΘΞΨθςώϚϠϨϱ, utf_16_str6 = ϪÐϚϠΨθϑ¿ÐžЀ¾)

# Run progress: 75.00% complete, ETA 00:10:01
# Fork: 1 of 3
# Warmup Iteration   1: 11.866 ns/op
# Warmup Iteration   2: 11.520 ns/op
# Warmup Iteration   3: 9.823 ns/op
# Warmup Iteration   4: 10.237 ns/op
# Warmup Iteration   5: 10.271 ns/op
Iteration   1: 10.231 ns/op
Iteration   2: 10.034 ns/op
Iteration   3: 10.191 ns/op
Iteration   4: 10.333 ns/op
Iteration   5: 10.394 ns/op

# Run progress: 79.17% complete, ETA 00:08:21
# Fork: 2 of 3
# Warmup Iteration   1: 11.980 ns/op
# Warmup Iteration   2: 11.725 ns/op
# Warmup Iteration   3: 9.965 ns/op
# Warmup Iteration   4: 10.287 ns/op
# Warmup Iteration   5: 10.211 ns/op
Iteration   1: 10.255 ns/op
Iteration   2: 10.223 ns/op
Iteration   3: 10.358 ns/op
Iteration   4: 10.338 ns/op
Iteration   5: 10.292 ns/op

# Run progress: 83.33% complete, ETA 00:06:40
# Fork: 3 of 3
# Warmup Iteration   1: 12.012 ns/op
# Warmup Iteration   2: 11.594 ns/op
# Warmup Iteration   3: 10.319 ns/op
# Warmup Iteration   4: 10.285 ns/op
# Warmup Iteration   5: 10.112 ns/op
Iteration   1: 10.378 ns/op
Iteration   2: 10.310 ns/op
Iteration   3: 10.162 ns/op
Iteration   4: 10.368 ns/op
Iteration   5: 10.292 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.CompactStringsBenchmark.utf16_toCharArray":
  10.277 ±(99.9%) 0.104 ns/op [Average]
  (min, avg, max) = (10.034, 10.277, 10.394), stdev = 0.097
  CI (99.9%): [10.173, 10.381] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.CompactStringsBenchmark.utf16_toUtf16_equals
# Parameters: (idx = 17, latin_1 = 123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ, latin_1_identical = 123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ, utf_16 = 123456789ABCDEFGHIJKLMNOPQRSTUVWX¾ʬ, utf_16_identical = 123456789ABCDEFGHIJKLMNOPQRSTUVWX¾ʬ, utf_16_str1 = ÐžÐ¹,Ð²ÑÑ‘Ð, utf_16_str2 = ϑ¿Ñ€Ð¾Ð¿φÐ°Ϫ, utf_16_str3 = Ðϛζ»Ð¾,ÑˆÐµÑ„, utf_16_str4 = ΦЀ¾ʬϪÐ»ÐΛϼϨЁ, utf_16_str5 = ΏΔΘΞΨθςώϚϠϨϱ, utf_16_str6 = ϪÐϚϠΨθϑ¿ÐžЀ¾)

# Run progress: 87.50% complete, ETA 00:05:00
# Fork: 1 of 3
# Warmup Iteration   1: 7.330 ns/op
# Warmup Iteration   2: 7.186 ns/op
# Warmup Iteration   3: 6.961 ns/op
# Warmup Iteration   4: 6.949 ns/op
# Warmup Iteration   5: 6.934 ns/op
Iteration   1: 6.985 ns/op
Iteration   2: 6.923 ns/op
Iteration   3: 6.877 ns/op
Iteration   4: 6.856 ns/op
Iteration   5: 6.888 ns/op

# Run progress: 91.67% complete, ETA 00:03:20
# Fork: 2 of 3
# Warmup Iteration   1: 7.580 ns/op
# Warmup Iteration   2: 7.372 ns/op
# Warmup Iteration   3: 7.174 ns/op
# Warmup Iteration   4: 7.152 ns/op
# Warmup Iteration   5: 7.167 ns/op
Iteration   1: 7.240 ns/op
Iteration   2: 7.147 ns/op
Iteration   3: 7.133 ns/op
Iteration   4: 7.127 ns/op
Iteration   5: 7.145 ns/op

# Run progress: 95.83% complete, ETA 00:01:40
# Fork: 3 of 3
# Warmup Iteration   1: 7.400 ns/op
# Warmup Iteration   2: 7.347 ns/op
# Warmup Iteration   3: 7.085 ns/op
# Warmup Iteration   4: 7.096 ns/op
# Warmup Iteration   5: 7.079 ns/op
Iteration   1: 7.081 ns/op
Iteration   2: 7.082 ns/op
Iteration   3: 7.088 ns/op
Iteration   4: 7.085 ns/op
Iteration   5: 7.085 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.CompactStringsBenchmark.utf16_toUtf16_equals":
  7.049 ±(99.9%) 0.124 ns/op [Average]
  (min, avg, max) = (6.856, 7.049, 7.240), stdev = 0.116
  CI (99.9%): [6.926, 7.173] (assumes normal distribution)


# Run complete. Total time: 00:40:05

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                       (idx)                            (latin_1)                  (latin_1_identical)                             (utf_16)                   (utf_16_identical)  (utf_16_str1)  (utf_16_str2)  (utf_16_str3)  (utf_16_str4)  (utf_16_str5)  (utf_16_str6)  Mode  Cnt   Score   Error  Units
CompactStringsBenchmark.latin1_charAt              17  123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ  123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ  123456789ABCDEFGHIJKLMNOPQRSTUVWX¾ʬ  123456789ABCDEFGHIJKLMNOPQRSTUVWX¾ʬ   ÐžÐ¹,Ð²ÑÑ‘Ð   ϑ¿Ñ€Ð¾Ð¿φÐ°Ϫ  Ðϛζ»Ð¾,ÑˆÐµÑ„   ΦЀ¾ʬϪÐ»ÐΛϼϨЁ   ΏΔΘΞΨθςώϚϠϨϱ   ϪÐϚϠΨθϑ¿ÐžЀ¾  avgt   15   3.234 ± 0.065  ns/op
CompactStringsBenchmark.latin1_toCharArray         17  123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ  123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ  123456789ABCDEFGHIJKLMNOPQRSTUVWX¾ʬ  123456789ABCDEFGHIJKLMNOPQRSTUVWX¾ʬ   ÐžÐ¹,Ð²ÑÑ‘Ð   ϑ¿Ñ€Ð¾Ð¿φÐ°Ϫ  Ðϛζ»Ð¾,ÑˆÐµÑ„   ΦЀ¾ʬϪÐ»ÐΛϼϨЁ   ΏΔΘΞΨθςώϚϠϨϱ   ϪÐϚϠΨθϑ¿ÐžЀ¾  avgt   15  10.400 ± 0.183  ns/op
CompactStringsBenchmark.latin1_toLatin1_equals     17  123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ  123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ  123456789ABCDEFGHIJKLMNOPQRSTUVWX¾ʬ  123456789ABCDEFGHIJKLMNOPQRSTUVWX¾ʬ   ÐžÐ¹,Ð²ÑÑ‘Ð   ϑ¿Ñ€Ð¾Ð¿φÐ°Ϫ  Ðϛζ»Ð¾,ÑˆÐµÑ„   ΦЀ¾ʬϪÐ»ÐΛϼϨЁ   ΏΔΘΞΨθςώϚϠϨϱ   ϪÐϚϠΨθϑ¿ÐžЀ¾  avgt   15   6.212 ± 0.179  ns/op
CompactStringsBenchmark.latin1_toUtf16_equals      17  123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ  123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ  123456789ABCDEFGHIJKLMNOPQRSTUVWX¾ʬ  123456789ABCDEFGHIJKLMNOPQRSTUVWX¾ʬ   ÐžÐ¹,Ð²ÑÑ‘Ð   ϑ¿Ñ€Ð¾Ð¿φÐ°Ϫ  Ðϛζ»Ð¾,ÑˆÐµÑ„   ΦЀ¾ʬϪÐ»ÐΛϼϨЁ   ΏΔΘΞΨθςώϚϠϨϱ   ϪÐϚϠΨθϑ¿ÐžЀ¾  avgt   15   2.956 ± 0.045  ns/op
CompactStringsBenchmark.utf16_charAt               17  123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ  123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ  123456789ABCDEFGHIJKLMNOPQRSTUVWX¾ʬ  123456789ABCDEFGHIJKLMNOPQRSTUVWX¾ʬ   ÐžÐ¹,Ð²ÑÑ‘Ð   ϑ¿Ñ€Ð¾Ð¿φÐ°Ϫ  Ðϛζ»Ð¾,ÑˆÐµÑ„   ΦЀ¾ʬϪÐ»ÐΛϼϨЁ   ΏΔΘΞΨθςώϚϠϨϱ   ϪÐϚϠΨθϑ¿ÐžЀ¾  avgt   15   3.011 ± 0.069  ns/op
CompactStringsBenchmark.utf16_multiple_concat      17  123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ  123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ  123456789ABCDEFGHIJKLMNOPQRSTUVWX¾ʬ  123456789ABCDEFGHIJKLMNOPQRSTUVWX¾ʬ   ÐžÐ¹,Ð²ÑÑ‘Ð   ϑ¿Ñ€Ð¾Ð¿φÐ°Ϫ  Ðϛζ»Ð¾,ÑˆÐµÑ„   ΦЀ¾ʬϪÐ»ÐΛϼϨЁ   ΏΔΘΞΨθςώϚϠϨϱ   ϪÐϚϠΨθϑ¿ÐžЀ¾  avgt   15  55.504 ± 1.204  ns/op
CompactStringsBenchmark.utf16_toCharArray          17  123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ  123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ  123456789ABCDEFGHIJKLMNOPQRSTUVWX¾ʬ  123456789ABCDEFGHIJKLMNOPQRSTUVWX¾ʬ   ÐžÐ¹,Ð²ÑÑ‘Ð   ϑ¿Ñ€Ð¾Ð¿φÐ°Ϫ  Ðϛζ»Ð¾,ÑˆÐµÑ„   ΦЀ¾ʬϪÐ»ÐΛϼϨЁ   ΏΔΘΞΨθςώϚϠϨϱ   ϪÐϚϠΨθϑ¿ÐžЀ¾  avgt   15  10.277 ± 0.104  ns/op
CompactStringsBenchmark.utf16_toUtf16_equals       17  123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ  123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ  123456789ABCDEFGHIJKLMNOPQRSTUVWX¾ʬ  123456789ABCDEFGHIJKLMNOPQRSTUVWX¾ʬ   ÐžÐ¹,Ð²ÑÑ‘Ð   ϑ¿Ñ€Ð¾Ð¿φÐ°Ϫ  Ðϛζ»Ð¾,ÑˆÐµÑ„   ΦЀ¾ʬϪÐ»ÐΛϼϨЁ   ΏΔΘΞΨθςώϚϠϨϱ   ϪÐϚϠΨθϑ¿ÐžЀ¾  avgt   15   7.049 ± 0.124  ns/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_c1_c2_jit/CompactStringsBenchmark.json
Running java  -jar benchmarks/target/benchmarks.jar .*StringConcatenationBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_c1_c2_jit/StringConcatenationBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -Djava.lang.invoke.stringConcat=BC_SB
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StringConcatenationBenchmark.concat_bc_sb
# Parameters: (size = 16)

# Run progress: 0.00% complete, ETA 01:00:00
# Fork: 1 of 3
# Warmup Iteration   1: 127.618 ns/op
# Warmup Iteration   2: 124.604 ns/op
# Warmup Iteration   3: 122.957 ns/op
# Warmup Iteration   4: 125.654 ns/op
# Warmup Iteration   5: 119.839 ns/op
Iteration   1: 123.807 ns/op
Iteration   2: 127.609 ns/op
Iteration   3: 125.410 ns/op
Iteration   4: 127.144 ns/op
Iteration   5: 123.976 ns/op

# Run progress: 2.78% complete, ETA 00:58:29
# Fork: 2 of 3
# Warmup Iteration   1: 125.568 ns/op
# Warmup Iteration   2: 128.135 ns/op
# Warmup Iteration   3: 122.058 ns/op
# Warmup Iteration   4: 123.101 ns/op
# Warmup Iteration   5: 122.542 ns/op
Iteration   1: 126.154 ns/op
Iteration   2: 118.600 ns/op
Iteration   3: 123.441 ns/op
Iteration   4: 125.466 ns/op
Iteration   5: 124.178 ns/op

# Run progress: 5.56% complete, ETA 00:56:49
# Fork: 3 of 3
# Warmup Iteration   1: 128.055 ns/op
# Warmup Iteration   2: 125.022 ns/op
# Warmup Iteration   3: 126.021 ns/op
# Warmup Iteration   4: 124.965 ns/op
# Warmup Iteration   5: 122.858 ns/op
Iteration   1: 125.461 ns/op
Iteration   2: 121.720 ns/op
Iteration   3: 120.079 ns/op
Iteration   4: 118.930 ns/op
Iteration   5: 123.657 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StringConcatenationBenchmark.concat_bc_sb":
  123.709 ±(99.9%) 2.976 ns/op [Average]
  (min, avg, max) = (118.600, 123.709, 127.609), stdev = 2.784
  CI (99.9%): [120.733, 126.685] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -Djava.lang.invoke.stringConcat=BC_SB
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StringConcatenationBenchmark.concat_bc_sb
# Parameters: (size = 128)

# Run progress: 8.33% complete, ETA 00:55:08
# Fork: 1 of 3
# Warmup Iteration   1: 155.590 ns/op
# Warmup Iteration   2: 149.900 ns/op
# Warmup Iteration   3: 154.078 ns/op
# Warmup Iteration   4: 153.885 ns/op
# Warmup Iteration   5: 154.920 ns/op
Iteration   1: 153.650 ns/op
Iteration   2: 153.662 ns/op
Iteration   3: 155.304 ns/op
Iteration   4: 153.583 ns/op
Iteration   5: 153.525 ns/op

# Run progress: 11.11% complete, ETA 00:53:27
# Fork: 2 of 3
# Warmup Iteration   1: 162.063 ns/op
# Warmup Iteration   2: 154.763 ns/op
# Warmup Iteration   3: 155.263 ns/op
# Warmup Iteration   4: 149.342 ns/op
# Warmup Iteration   5: 158.861 ns/op
Iteration   1: 148.501 ns/op
Iteration   2: 156.602 ns/op
Iteration   3: 150.995 ns/op
Iteration   4: 157.748 ns/op
Iteration   5: 156.140 ns/op

# Run progress: 13.89% complete, ETA 00:51:47
# Fork: 3 of 3
# Warmup Iteration   1: 154.910 ns/op
# Warmup Iteration   2: 153.849 ns/op
# Warmup Iteration   3: 153.783 ns/op
# Warmup Iteration   4: 155.413 ns/op
# Warmup Iteration   5: 156.307 ns/op
Iteration   1: 153.460 ns/op
Iteration   2: 154.963 ns/op
Iteration   3: 155.433 ns/op
Iteration   4: 152.199 ns/op
Iteration   5: 150.856 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StringConcatenationBenchmark.concat_bc_sb":
  153.775 ±(99.9%) 2.597 ns/op [Average]
  (min, avg, max) = (148.501, 153.775, 157.748), stdev = 2.430
  CI (99.9%): [151.177, 156.372] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -Djava.lang.invoke.stringConcat=BC_SB_SIZED
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StringConcatenationBenchmark.concat_bc_sb_sized
# Parameters: (size = 16)

# Run progress: 16.67% complete, ETA 00:50:07
# Fork: 1 of 3
# Warmup Iteration   1: 105.935 ns/op
# Warmup Iteration   2: 105.966 ns/op
# Warmup Iteration   3: 105.350 ns/op
# Warmup Iteration   4: 105.394 ns/op
# Warmup Iteration   5: 102.843 ns/op
Iteration   1: 101.479 ns/op
Iteration   2: 101.110 ns/op
Iteration   3: 104.516 ns/op
Iteration   4: 105.506 ns/op
Iteration   5: 102.047 ns/op

# Run progress: 19.44% complete, ETA 00:48:27
# Fork: 2 of 3
# Warmup Iteration   1: 106.408 ns/op
# Warmup Iteration   2: 104.952 ns/op
# Warmup Iteration   3: 101.570 ns/op
# Warmup Iteration   4: 101.376 ns/op
# Warmup Iteration   5: 101.374 ns/op
Iteration   1: 104.288 ns/op
Iteration   2: 105.022 ns/op
Iteration   3: 101.947 ns/op
Iteration   4: 100.973 ns/op
Iteration   5: 103.308 ns/op

# Run progress: 22.22% complete, ETA 00:46:46
# Fork: 3 of 3
# Warmup Iteration   1: 100.429 ns/op
# Warmup Iteration   2: 99.103 ns/op
# Warmup Iteration   3: 98.659 ns/op
# Warmup Iteration   4: 101.631 ns/op
# Warmup Iteration   5: 105.007 ns/op
Iteration   1: 99.624 ns/op
Iteration   2: 100.136 ns/op
Iteration   3: 100.706 ns/op
Iteration   4: 104.480 ns/op
Iteration   5: 100.755 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StringConcatenationBenchmark.concat_bc_sb_sized":
  102.393 ±(99.9%) 2.080 ns/op [Average]
  (min, avg, max) = (99.624, 102.393, 105.506), stdev = 1.946
  CI (99.9%): [100.313, 104.473] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -Djava.lang.invoke.stringConcat=BC_SB_SIZED
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StringConcatenationBenchmark.concat_bc_sb_sized
# Parameters: (size = 128)

# Run progress: 25.00% complete, ETA 00:45:06
# Fork: 1 of 3
# Warmup Iteration   1: 117.303 ns/op
# Warmup Iteration   2: 119.636 ns/op
# Warmup Iteration   3: 118.340 ns/op
# Warmup Iteration   4: 116.317 ns/op
# Warmup Iteration   5: 120.643 ns/op
Iteration   1: 121.138 ns/op
Iteration   2: 119.127 ns/op
Iteration   3: 120.668 ns/op
Iteration   4: 118.819 ns/op
Iteration   5: 125.165 ns/op

# Run progress: 27.78% complete, ETA 00:43:26
# Fork: 2 of 3
# Warmup Iteration   1: 123.032 ns/op
# Warmup Iteration   2: 116.293 ns/op
# Warmup Iteration   3: 117.918 ns/op
# Warmup Iteration   4: 116.157 ns/op
# Warmup Iteration   5: 116.035 ns/op
Iteration   1: 113.609 ns/op
Iteration   2: 119.291 ns/op
Iteration   3: 116.877 ns/op
Iteration   4: 119.588 ns/op
Iteration   5: 117.473 ns/op

# Run progress: 30.56% complete, ETA 00:41:45
# Fork: 3 of 3
# Warmup Iteration   1: 122.504 ns/op
# Warmup Iteration   2: 114.809 ns/op
# Warmup Iteration   3: 118.913 ns/op
# Warmup Iteration   4: 120.004 ns/op
# Warmup Iteration   5: 118.820 ns/op
Iteration   1: 119.069 ns/op
Iteration   2: 117.554 ns/op
Iteration   3: 115.110 ns/op
Iteration   4: 117.920 ns/op
Iteration   5: 120.895 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StringConcatenationBenchmark.concat_bc_sb_sized":
  118.820 ±(99.9%) 2.903 ns/op [Average]
  (min, avg, max) = (113.609, 118.820, 125.165), stdev = 2.716
  CI (99.9%): [115.917, 121.723] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -Djava.lang.invoke.stringConcat=BC_SB_SIZED_EXACT
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StringConcatenationBenchmark.concat_bc_sb_sized_exact
# Parameters: (size = 16)

# Run progress: 33.33% complete, ETA 00:40:05
# Fork: 1 of 3
# Warmup Iteration   1: 97.624 ns/op
# Warmup Iteration   2: 94.265 ns/op
# Warmup Iteration   3: 91.831 ns/op
# Warmup Iteration   4: 89.031 ns/op
# Warmup Iteration   5: 87.265 ns/op
Iteration   1: 85.677 ns/op
Iteration   2: 90.658 ns/op
Iteration   3: 87.260 ns/op
Iteration   4: 89.829 ns/op
Iteration   5: 86.243 ns/op

# Run progress: 36.11% complete, ETA 00:38:25
# Fork: 2 of 3
# Warmup Iteration   1: 93.919 ns/op
# Warmup Iteration   2: 93.148 ns/op
# Warmup Iteration   3: 90.599 ns/op
# Warmup Iteration   4: 89.702 ns/op
# Warmup Iteration   5: 87.966 ns/op
Iteration   1: 90.799 ns/op
Iteration   2: 92.751 ns/op
Iteration   3: 92.406 ns/op
Iteration   4: 89.480 ns/op
Iteration   5: 89.165 ns/op

# Run progress: 38.89% complete, ETA 00:36:45
# Fork: 3 of 3
# Warmup Iteration   1: 94.728 ns/op
# Warmup Iteration   2: 96.127 ns/op
# Warmup Iteration   3: 86.187 ns/op
# Warmup Iteration   4: 84.308 ns/op
# Warmup Iteration   5: 86.656 ns/op
Iteration   1: 86.118 ns/op
Iteration   2: 83.934 ns/op
Iteration   3: 87.602 ns/op
Iteration   4: 86.407 ns/op
Iteration   5: 86.860 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StringConcatenationBenchmark.concat_bc_sb_sized_exact":
  88.346 ±(99.9%) 2.786 ns/op [Average]
  (min, avg, max) = (83.934, 88.346, 92.751), stdev = 2.606
  CI (99.9%): [85.560, 91.132] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -Djava.lang.invoke.stringConcat=BC_SB_SIZED_EXACT
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StringConcatenationBenchmark.concat_bc_sb_sized_exact
# Parameters: (size = 128)

# Run progress: 41.67% complete, ETA 00:35:04
# Fork: 1 of 3
# Warmup Iteration   1: 96.197 ns/op
# Warmup Iteration   2: 92.536 ns/op
# Warmup Iteration   3: 91.459 ns/op
# Warmup Iteration   4: 92.067 ns/op
# Warmup Iteration   5: 90.812 ns/op
Iteration   1: 93.199 ns/op
Iteration   2: 90.546 ns/op
Iteration   3: 94.050 ns/op
Iteration   4: 90.458 ns/op
Iteration   5: 92.576 ns/op

# Run progress: 44.44% complete, ETA 00:33:24
# Fork: 2 of 3
# Warmup Iteration   1: 99.216 ns/op
# Warmup Iteration   2: 89.044 ns/op
# Warmup Iteration   3: 94.571 ns/op
# Warmup Iteration   4: 93.606 ns/op
# Warmup Iteration   5: 93.355 ns/op
Iteration   1: 92.904 ns/op
Iteration   2: 94.143 ns/op
Iteration   3: 93.754 ns/op
Iteration   4: 93.569 ns/op
Iteration   5: 94.193 ns/op

# Run progress: 47.22% complete, ETA 00:31:44
# Fork: 3 of 3
# Warmup Iteration   1: 94.761 ns/op
# Warmup Iteration   2: 90.847 ns/op
# Warmup Iteration   3: 88.193 ns/op
# Warmup Iteration   4: 93.284 ns/op
# Warmup Iteration   5: 91.139 ns/op
Iteration   1: 90.257 ns/op
Iteration   2: 89.993 ns/op
Iteration   3: 90.505 ns/op
Iteration   4: 91.189 ns/op
Iteration   5: 89.894 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StringConcatenationBenchmark.concat_bc_sb_sized_exact":
  92.082 ±(99.9%) 1.819 ns/op [Average]
  (min, avg, max) = (89.894, 92.082, 94.193), stdev = 1.701
  CI (99.9%): [90.263, 93.901] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StringConcatenationBenchmark.concat_default
# Parameters: (size = 16)

# Run progress: 50.00% complete, ETA 00:30:04
# Fork: 1 of 3
# Warmup Iteration   1: 85.370 ns/op
# Warmup Iteration   2: 75.796 ns/op
# Warmup Iteration   3: 78.382 ns/op
# Warmup Iteration   4: 76.037 ns/op
# Warmup Iteration   5: 75.633 ns/op
Iteration   1: 77.824 ns/op
Iteration   2: 75.549 ns/op
Iteration   3: 75.311 ns/op
Iteration   4: 78.762 ns/op
Iteration   5: 77.481 ns/op

# Run progress: 52.78% complete, ETA 00:28:23
# Fork: 2 of 3
# Warmup Iteration   1: 81.093 ns/op
# Warmup Iteration   2: 79.327 ns/op
# Warmup Iteration   3: 81.168 ns/op
# Warmup Iteration   4: 79.595 ns/op
# Warmup Iteration   5: 82.644 ns/op
Iteration   1: 82.074 ns/op
Iteration   2: 81.950 ns/op
Iteration   3: 81.777 ns/op
Iteration   4: 80.843 ns/op
Iteration   5: 79.394 ns/op

# Run progress: 55.56% complete, ETA 00:26:43
# Fork: 3 of 3
# Warmup Iteration   1: 77.198 ns/op
# Warmup Iteration   2: 79.361 ns/op
# Warmup Iteration   3: 73.900 ns/op
# Warmup Iteration   4: 76.771 ns/op
# Warmup Iteration   5: 75.129 ns/op
Iteration   1: 76.263 ns/op
Iteration   2: 78.722 ns/op
Iteration   3: 77.977 ns/op
Iteration   4: 76.328 ns/op
Iteration   5: 74.951 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StringConcatenationBenchmark.concat_default":
  78.347 ±(99.9%) 2.625 ns/op [Average]
  (min, avg, max) = (74.951, 78.347, 82.074), stdev = 2.456
  CI (99.9%): [75.722, 80.972] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StringConcatenationBenchmark.concat_default
# Parameters: (size = 128)

# Run progress: 58.33% complete, ETA 00:25:03
# Fork: 1 of 3
# Warmup Iteration   1: 79.854 ns/op
# Warmup Iteration   2: 78.827 ns/op
# Warmup Iteration   3: 78.607 ns/op
# Warmup Iteration   4: 80.505 ns/op
# Warmup Iteration   5: 78.290 ns/op
Iteration   1: 80.488 ns/op
Iteration   2: 81.259 ns/op
Iteration   3: 77.779 ns/op
Iteration   4: 78.380 ns/op
Iteration   5: 78.232 ns/op

# Run progress: 61.11% complete, ETA 00:23:23
# Fork: 2 of 3
# Warmup Iteration   1: 83.061 ns/op
# Warmup Iteration   2: 81.933 ns/op
# Warmup Iteration   3: 82.017 ns/op
# Warmup Iteration   4: 82.122 ns/op
# Warmup Iteration   5: 80.396 ns/op
Iteration   1: 80.985 ns/op
Iteration   2: 82.216 ns/op
Iteration   3: 81.776 ns/op
Iteration   4: 80.012 ns/op
Iteration   5: 81.392 ns/op

# Run progress: 63.89% complete, ETA 00:21:43
# Fork: 3 of 3
# Warmup Iteration   1: 85.532 ns/op
# Warmup Iteration   2: 81.445 ns/op
# Warmup Iteration   3: 76.563 ns/op
# Warmup Iteration   4: 78.052 ns/op
# Warmup Iteration   5: 80.104 ns/op
Iteration   1: 82.039 ns/op
Iteration   2: 79.671 ns/op
Iteration   3: 80.086 ns/op
Iteration   4: 77.892 ns/op
Iteration   5: 82.464 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StringConcatenationBenchmark.concat_default":
  80.311 ±(99.9%) 1.734 ns/op [Average]
  (min, avg, max) = (77.779, 80.311, 82.464), stdev = 1.622
  CI (99.9%): [78.578, 82.045] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -Djava.lang.invoke.stringConcat=MH_SB_SIZED
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StringConcatenationBenchmark.concat_mh_sb_sized
# Parameters: (size = 16)

# Run progress: 66.67% complete, ETA 00:20:02
# Fork: 1 of 3
# Warmup Iteration   1: 113.925 ns/op
# Warmup Iteration   2: 106.705 ns/op
# Warmup Iteration   3: 112.564 ns/op
# Warmup Iteration   4: 110.262 ns/op
# Warmup Iteration   5: 112.228 ns/op
Iteration   1: 106.720 ns/op
Iteration   2: 109.481 ns/op
Iteration   3: 113.223 ns/op
Iteration   4: 112.020 ns/op
Iteration   5: 112.441 ns/op

# Run progress: 69.44% complete, ETA 00:18:22
# Fork: 2 of 3
# Warmup Iteration   1: 103.858 ns/op
# Warmup Iteration   2: 103.345 ns/op
# Warmup Iteration   3: 103.655 ns/op
# Warmup Iteration   4: 104.063 ns/op
# Warmup Iteration   5: 104.568 ns/op
Iteration   1: 107.730 ns/op
Iteration   2: 105.187 ns/op
Iteration   3: 107.363 ns/op
Iteration   4: 101.544 ns/op
Iteration   5: 104.374 ns/op

# Run progress: 72.22% complete, ETA 00:16:42
# Fork: 3 of 3
# Warmup Iteration   1: 114.794 ns/op
# Warmup Iteration   2: 107.601 ns/op
# Warmup Iteration   3: 111.194 ns/op
# Warmup Iteration   4: 110.801 ns/op
# Warmup Iteration   5: 113.663 ns/op
Iteration   1: 107.621 ns/op
Iteration   2: 105.284 ns/op
Iteration   3: 112.047 ns/op
Iteration   4: 111.550 ns/op
Iteration   5: 105.446 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StringConcatenationBenchmark.concat_mh_sb_sized":
  108.135 ±(99.9%) 3.758 ns/op [Average]
  (min, avg, max) = (101.544, 108.135, 113.223), stdev = 3.515
  CI (99.9%): [104.378, 111.893] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -Djava.lang.invoke.stringConcat=MH_SB_SIZED
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StringConcatenationBenchmark.concat_mh_sb_sized
# Parameters: (size = 128)

# Run progress: 75.00% complete, ETA 00:15:02
# Fork: 1 of 3
# Warmup Iteration   1: 125.965 ns/op
# Warmup Iteration   2: 124.606 ns/op
# Warmup Iteration   3: 120.737 ns/op
# Warmup Iteration   4: 124.550 ns/op
# Warmup Iteration   5: 121.571 ns/op
Iteration   1: 123.273 ns/op
Iteration   2: 120.793 ns/op
Iteration   3: 123.686 ns/op
Iteration   4: 120.257 ns/op
Iteration   5: 117.492 ns/op

# Run progress: 77.78% complete, ETA 00:13:21
# Fork: 2 of 3
# Warmup Iteration   1: 122.553 ns/op
# Warmup Iteration   2: 125.820 ns/op
# Warmup Iteration   3: 125.776 ns/op
# Warmup Iteration   4: 117.955 ns/op
# Warmup Iteration   5: 120.428 ns/op
Iteration   1: 119.147 ns/op
Iteration   2: 123.860 ns/op
Iteration   3: 124.792 ns/op
Iteration   4: 124.618 ns/op
Iteration   5: 124.411 ns/op

# Run progress: 80.56% complete, ETA 00:11:41
# Fork: 3 of 3
# Warmup Iteration   1: 125.710 ns/op
# Warmup Iteration   2: 124.976 ns/op
# Warmup Iteration   3: 120.401 ns/op
# Warmup Iteration   4: 127.118 ns/op
# Warmup Iteration   5: 124.125 ns/op
Iteration   1: 124.620 ns/op
Iteration   2: 126.108 ns/op
Iteration   3: 125.657 ns/op
Iteration   4: 123.750 ns/op
Iteration   5: 124.203 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StringConcatenationBenchmark.concat_mh_sb_sized":
  123.111 ±(99.9%) 2.678 ns/op [Average]
  (min, avg, max) = (117.492, 123.111, 126.108), stdev = 2.505
  CI (99.9%): [120.433, 125.789] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -Djava.lang.invoke.stringConcat=MH_SB_SIZED_EXACT
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StringConcatenationBenchmark.concat_mh_sb_sized_exact
# Parameters: (size = 16)

# Run progress: 83.33% complete, ETA 00:10:01
# Fork: 1 of 3
# Warmup Iteration   1: 118.714 ns/op
# Warmup Iteration   2: 116.285 ns/op
# Warmup Iteration   3: 119.206 ns/op
# Warmup Iteration   4: 113.923 ns/op
# Warmup Iteration   5: 113.096 ns/op
Iteration   1: 116.940 ns/op
Iteration   2: 113.083 ns/op
Iteration   3: 113.417 ns/op
Iteration   4: 112.784 ns/op
Iteration   5: 113.969 ns/op

# Run progress: 86.11% complete, ETA 00:08:21
# Fork: 2 of 3
# Warmup Iteration   1: 119.304 ns/op
# Warmup Iteration   2: 111.305 ns/op
# Warmup Iteration   3: 117.811 ns/op
# Warmup Iteration   4: 119.692 ns/op
# Warmup Iteration   5: 113.467 ns/op
Iteration   1: 115.170 ns/op
Iteration   2: 114.674 ns/op
Iteration   3: 118.791 ns/op
Iteration   4: 115.663 ns/op
Iteration   5: 118.501 ns/op

# Run progress: 88.89% complete, ETA 00:06:40
# Fork: 3 of 3
# Warmup Iteration   1: 118.636 ns/op
# Warmup Iteration   2: 114.935 ns/op
# Warmup Iteration   3: 112.895 ns/op
# Warmup Iteration   4: 106.377 ns/op
# Warmup Iteration   5: 114.262 ns/op
Iteration   1: 110.303 ns/op
Iteration   2: 109.291 ns/op
Iteration   3: 111.308 ns/op
Iteration   4: 112.356 ns/op
Iteration   5: 111.385 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StringConcatenationBenchmark.concat_mh_sb_sized_exact":
  113.842 ±(99.9%) 3.015 ns/op [Average]
  (min, avg, max) = (109.291, 113.842, 118.791), stdev = 2.820
  CI (99.9%): [110.827, 116.858] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -Djava.lang.invoke.stringConcat=MH_SB_SIZED_EXACT
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StringConcatenationBenchmark.concat_mh_sb_sized_exact
# Parameters: (size = 128)

# Run progress: 91.67% complete, ETA 00:05:00
# Fork: 1 of 3
# Warmup Iteration   1: 132.664 ns/op
# Warmup Iteration   2: 130.648 ns/op
# Warmup Iteration   3: 132.901 ns/op
# Warmup Iteration   4: 127.156 ns/op
# Warmup Iteration   5: 132.827 ns/op
Iteration   1: 131.247 ns/op
Iteration   2: 127.528 ns/op
Iteration   3: 131.086 ns/op
Iteration   4: 131.474 ns/op
Iteration   5: 127.666 ns/op

# Run progress: 94.44% complete, ETA 00:03:20
# Fork: 2 of 3
# Warmup Iteration   1: 135.056 ns/op
# Warmup Iteration   2: 130.144 ns/op
# Warmup Iteration   3: 127.391 ns/op
# Warmup Iteration   4: 132.429 ns/op
# Warmup Iteration   5: 130.042 ns/op
Iteration   1: 131.338 ns/op
Iteration   2: 129.268 ns/op
Iteration   3: 130.675 ns/op
Iteration   4: 130.893 ns/op
Iteration   5: 129.022 ns/op

# Run progress: 97.22% complete, ETA 00:01:40
# Fork: 3 of 3
# Warmup Iteration   1: 136.461 ns/op
# Warmup Iteration   2: 127.442 ns/op
# Warmup Iteration   3: 133.037 ns/op
# Warmup Iteration   4: 126.561 ns/op
# Warmup Iteration   5: 124.795 ns/op
Iteration   1: 125.847 ns/op
Iteration   2: 129.688 ns/op
Iteration   3: 131.345 ns/op
Iteration   4: 129.053 ns/op
Iteration   5: 132.329 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StringConcatenationBenchmark.concat_mh_sb_sized_exact":
  129.897 ±(99.9%) 1.944 ns/op [Average]
  (min, avg, max) = (125.847, 129.897, 132.329), stdev = 1.819
  CI (99.9%): [127.953, 131.842] (assumes normal distribution)


# Run complete. Total time: 01:00:08

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                              (size)  Mode  Cnt    Score   Error  Units
StringConcatenationBenchmark.concat_bc_sb                  16  avgt   15  123.709 ± 2.976  ns/op
StringConcatenationBenchmark.concat_bc_sb                 128  avgt   15  153.775 ± 2.597  ns/op
StringConcatenationBenchmark.concat_bc_sb_sized            16  avgt   15  102.393 ± 2.080  ns/op
StringConcatenationBenchmark.concat_bc_sb_sized           128  avgt   15  118.820 ± 2.903  ns/op
StringConcatenationBenchmark.concat_bc_sb_sized_exact      16  avgt   15   88.346 ± 2.786  ns/op
StringConcatenationBenchmark.concat_bc_sb_sized_exact     128  avgt   15   92.082 ± 1.819  ns/op
StringConcatenationBenchmark.concat_default                16  avgt   15   78.347 ± 2.625  ns/op
StringConcatenationBenchmark.concat_default               128  avgt   15   80.311 ± 1.734  ns/op
StringConcatenationBenchmark.concat_mh_sb_sized            16  avgt   15  108.135 ± 3.758  ns/op
StringConcatenationBenchmark.concat_mh_sb_sized           128  avgt   15  123.111 ± 2.678  ns/op
StringConcatenationBenchmark.concat_mh_sb_sized_exact      16  avgt   15  113.842 ± 3.015  ns/op
StringConcatenationBenchmark.concat_mh_sb_sized_exact     128  avgt   15  129.897 ± 1.944  ns/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_c1_c2_jit/StringConcatenationBenchmark.json
Running java  -jar benchmarks/target/benchmarks.jar .*StringHashCodeBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_c1_c2_jit/StringHashCodeBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StringHashCodeBenchmark.cached

# Run progress: 0.00% complete, ETA 00:10:00
# Fork: 1 of 3
# Warmup Iteration   1: 3.060 ns/op
# Warmup Iteration   2: 2.903 ns/op
# Warmup Iteration   3: 2.428 ns/op
# Warmup Iteration   4: 2.419 ns/op
# Warmup Iteration   5: 2.432 ns/op
Iteration   1: 2.424 ns/op
Iteration   2: 2.417 ns/op
Iteration   3: 2.411 ns/op
Iteration   4: 2.414 ns/op
Iteration   5: 2.410 ns/op

# Run progress: 16.67% complete, ETA 00:08:21
# Fork: 2 of 3
# Warmup Iteration   1: 2.855 ns/op
# Warmup Iteration   2: 2.896 ns/op
# Warmup Iteration   3: 2.419 ns/op
# Warmup Iteration   4: 2.427 ns/op
# Warmup Iteration   5: 2.426 ns/op
Iteration   1: 2.426 ns/op
Iteration   2: 2.426 ns/op
Iteration   3: 2.424 ns/op
Iteration   4: 2.422 ns/op
Iteration   5: 2.427 ns/op

# Run progress: 33.33% complete, ETA 00:06:40
# Fork: 3 of 3
# Warmup Iteration   1: 3.008 ns/op
# Warmup Iteration   2: 2.871 ns/op
# Warmup Iteration   3: 2.406 ns/op
# Warmup Iteration   4: 2.407 ns/op
# Warmup Iteration   5: 2.409 ns/op
Iteration   1: 2.410 ns/op
Iteration   2: 2.410 ns/op
Iteration   3: 2.415 ns/op
Iteration   4: 2.528 ns/op
Iteration   5: 2.518 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StringHashCodeBenchmark.cached":
  2.432 ±(99.9%) 0.040 ns/op [Average]
  (min, avg, max) = (2.410, 2.432, 2.528), stdev = 0.038
  CI (99.9%): [2.392, 2.472] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StringHashCodeBenchmark.not_cached

# Run progress: 50.00% complete, ETA 00:05:00
# Fork: 1 of 3
# Warmup Iteration   1: 3.256 ns/op
# Warmup Iteration   2: 3.021 ns/op
# Warmup Iteration   3: 2.661 ns/op
# Warmup Iteration   4: 2.670 ns/op
# Warmup Iteration   5: 2.665 ns/op
Iteration   1: 2.664 ns/op
Iteration   2: 2.666 ns/op
Iteration   3: 2.663 ns/op
Iteration   4: 2.660 ns/op
Iteration   5: 2.668 ns/op

# Run progress: 66.67% complete, ETA 00:03:20
# Fork: 2 of 3
# Warmup Iteration   1: 3.236 ns/op
# Warmup Iteration   2: 2.810 ns/op
# Warmup Iteration   3: 2.494 ns/op
# Warmup Iteration   4: 2.692 ns/op
# Warmup Iteration   5: 2.685 ns/op
Iteration   1: 2.680 ns/op
Iteration   2: 2.673 ns/op
Iteration   3: 2.672 ns/op
Iteration   4: 2.667 ns/op
Iteration   5: 2.532 ns/op

# Run progress: 83.33% complete, ETA 00:01:40
# Fork: 3 of 3
# Warmup Iteration   1: 3.230 ns/op
# Warmup Iteration   2: 3.026 ns/op
# Warmup Iteration   3: 2.659 ns/op
# Warmup Iteration   4: 2.661 ns/op
# Warmup Iteration   5: 2.662 ns/op
Iteration   1: 2.664 ns/op
Iteration   2: 2.663 ns/op
Iteration   3: 2.654 ns/op
Iteration   4: 2.666 ns/op
Iteration   5: 2.525 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StringHashCodeBenchmark.not_cached":
  2.648 ±(99.9%) 0.052 ns/op [Average]
  (min, avg, max) = (2.525, 2.648, 2.680), stdev = 0.049
  CI (99.9%): [2.596, 2.700] (assumes normal distribution)


# Run complete. Total time: 00:10:01

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                           Mode  Cnt  Score   Error  Units
StringHashCodeBenchmark.cached      avgt   15  2.432 ± 0.040  ns/op
StringHashCodeBenchmark.not_cached  avgt   15  2.648 ± 0.052  ns/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_c1_c2_jit/StringHashCodeBenchmark.json
Running java  -jar benchmarks/target/benchmarks.jar .*StringPatternMatcherBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_c1_c2_jit/StringPatternMatcherBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StringPatternMatcherBenchmark.pattern_matcher
# Parameters: (iterations = 1000000, regexp = ^(([0-1][0-9])|(2[0-3]))([0-9]*)([0-5][0-9])$)

# Run progress: 0.00% complete, ETA 00:10:00
# Fork: 1 of 3
# Warmup Iteration   1: 96.616 ns/op
# Warmup Iteration   2: 94.602 ns/op
# Warmup Iteration   3: 97.027 ns/op
# Warmup Iteration   4: 94.204 ns/op
# Warmup Iteration   5: 93.462 ns/op
Iteration   1: 97.321 ns/op
Iteration   2: 98.493 ns/op
Iteration   3: 97.245 ns/op
Iteration   4: 94.404 ns/op
Iteration   5: 97.351 ns/op

# Run progress: 16.67% complete, ETA 00:08:23
# Fork: 2 of 3
# Warmup Iteration   1: 95.407 ns/op
# Warmup Iteration   2: 95.572 ns/op
# Warmup Iteration   3: 94.764 ns/op
# Warmup Iteration   4: 95.986 ns/op
# Warmup Iteration   5: 92.630 ns/op
Iteration   1: 93.512 ns/op
Iteration   2: 96.557 ns/op
Iteration   3: 92.768 ns/op
Iteration   4: 95.015 ns/op
Iteration   5: 95.850 ns/op

# Run progress: 33.33% complete, ETA 00:06:42
# Fork: 3 of 3
# Warmup Iteration   1: 94.760 ns/op
# Warmup Iteration   2: 97.878 ns/op
# Warmup Iteration   3: 96.862 ns/op
# Warmup Iteration   4: 97.453 ns/op
# Warmup Iteration   5: 95.739 ns/op
Iteration   1: 97.726 ns/op
Iteration   2: 97.337 ns/op
Iteration   3: 95.883 ns/op
Iteration   4: 95.463 ns/op
Iteration   5: 96.805 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StringPatternMatcherBenchmark.pattern_matcher":
  96.115 ±(99.9%) 1.746 ns/op [Average]
  (min, avg, max) = (92.768, 96.115, 98.493), stdev = 1.633
  CI (99.9%): [94.369, 97.861] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StringPatternMatcherBenchmark.string_matches
# Parameters: (iterations = 1000000, regexp = ^(([0-1][0-9])|(2[0-3]))([0-9]*)([0-5][0-9])$)

# Run progress: 50.00% complete, ETA 00:05:02
# Fork: 1 of 3
# Warmup Iteration   1: 655.908 ns/op
# Warmup Iteration   2: 622.892 ns/op
# Warmup Iteration   3: 614.219 ns/op
# Warmup Iteration   4: 640.514 ns/op
# Warmup Iteration   5: 626.288 ns/op
Iteration   1: 643.570 ns/op
Iteration   2: 625.153 ns/op
Iteration   3: 638.310 ns/op
Iteration   4: 625.129 ns/op
Iteration   5: 628.683 ns/op

# Run progress: 66.67% complete, ETA 00:03:22
# Fork: 2 of 3
# Warmup Iteration   1: 645.836 ns/op
# Warmup Iteration   2: 625.319 ns/op
# Warmup Iteration   3: 625.745 ns/op
# Warmup Iteration   4: 626.533 ns/op
# Warmup Iteration   5: 630.177 ns/op
Iteration   1: 629.226 ns/op
Iteration   2: 631.365 ns/op
Iteration   3: 616.343 ns/op
Iteration   4: 622.468 ns/op
Iteration   5: 634.305 ns/op

# Run progress: 83.33% complete, ETA 00:01:41
# Fork: 3 of 3
# Warmup Iteration   1: 650.382 ns/op
# Warmup Iteration   2: 628.397 ns/op
# Warmup Iteration   3: 649.313 ns/op
# Warmup Iteration   4: 632.613 ns/op
# Warmup Iteration   5: 644.384 ns/op
Iteration   1: 639.000 ns/op
Iteration   2: 633.335 ns/op
Iteration   3: 637.486 ns/op
Iteration   4: 636.409 ns/op
Iteration   5: 633.238 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StringPatternMatcherBenchmark.string_matches":
  631.601 ±(99.9%) 7.707 ns/op [Average]
  (min, avg, max) = (616.343, 631.601, 643.570), stdev = 7.209
  CI (99.9%): [623.894, 639.308] (assumes normal distribution)


# Run complete. Total time: 00:10:10

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                      (iterations)                                       (regexp)  Mode  Cnt    Score   Error  Units
StringPatternMatcherBenchmark.pattern_matcher       1000000  ^(([0-1][0-9])|(2[0-3]))([0-9]*)([0-5][0-9])$  avgt   15   96.115 ± 1.746  ns/op
StringPatternMatcherBenchmark.string_matches        1000000  ^(([0-1][0-9])|(2[0-3]))([0-9]*)([0-5][0-9])$  avgt   15  631.601 ± 7.707  ns/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_c1_c2_jit/StringPatternMatcherBenchmark.json
Running java  -jar benchmarks/target/benchmarks.jar .*StringPatternSplitBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_c1_c2_jit/StringPatternSplitBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StringPatternSplitBenchmark.pattern_split
# Parameters: (regexp = _)

# Run progress: 0.00% complete, ETA 00:30:00
# Fork: 1 of 3
# Warmup Iteration   1: 1472.486 ns/op
# Warmup Iteration   2: 1442.936 ns/op
# Warmup Iteration   3: 1432.019 ns/op
# Warmup Iteration   4: 1466.764 ns/op
# Warmup Iteration   5: 1421.860 ns/op
Iteration   1: 1414.639 ns/op
Iteration   2: 1422.586 ns/op
Iteration   3: 1399.329 ns/op
Iteration   4: 1414.569 ns/op
Iteration   5: 1425.096 ns/op

# Run progress: 5.56% complete, ETA 00:28:25
# Fork: 2 of 3
# Warmup Iteration   1: 1525.620 ns/op
# Warmup Iteration   2: 1462.482 ns/op
# Warmup Iteration   3: 1444.304 ns/op
# Warmup Iteration   4: 1454.555 ns/op
# Warmup Iteration   5: 1443.226 ns/op
Iteration   1: 1507.932 ns/op
Iteration   2: 1448.080 ns/op
Iteration   3: 1421.904 ns/op
Iteration   4: 1487.085 ns/op
Iteration   5: 1465.800 ns/op

# Run progress: 11.11% complete, ETA 00:26:44
# Fork: 3 of 3
# Warmup Iteration   1: 1590.567 ns/op
# Warmup Iteration   2: 1483.220 ns/op
# Warmup Iteration   3: 1539.601 ns/op
# Warmup Iteration   4: 1531.983 ns/op
# Warmup Iteration   5: 1501.544 ns/op
Iteration   1: 1540.693 ns/op
Iteration   2: 1508.814 ns/op
Iteration   3: 1498.257 ns/op
Iteration   4: 1542.104 ns/op
Iteration   5: 1526.260 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StringPatternSplitBenchmark.pattern_split":
  1468.210 ±(99.9%) 53.877 ns/op [Average]
  (min, avg, max) = (1399.329, 1468.210, 1542.104), stdev = 50.396
  CI (99.9%): [1414.333, 1522.087] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StringPatternSplitBenchmark.pattern_split
# Parameters: (regexp = __)

# Run progress: 16.67% complete, ETA 00:25:03
# Fork: 1 of 3
# Warmup Iteration   1: 1874.634 ns/op
# Warmup Iteration   2: 1822.770 ns/op
# Warmup Iteration   3: 1879.380 ns/op
# Warmup Iteration   4: 1844.379 ns/op
# Warmup Iteration   5: 1873.092 ns/op
Iteration   1: 1828.012 ns/op
Iteration   2: 1800.184 ns/op
Iteration   3: 1809.118 ns/op
Iteration   4: 1842.462 ns/op
Iteration   5: 1881.687 ns/op

# Run progress: 22.22% complete, ETA 00:23:23
# Fork: 2 of 3
# Warmup Iteration   1: 1863.646 ns/op
# Warmup Iteration   2: 1800.365 ns/op
# Warmup Iteration   3: 1735.561 ns/op
# Warmup Iteration   4: 1739.725 ns/op
# Warmup Iteration   5: 1743.477 ns/op
Iteration   1: 1783.353 ns/op
Iteration   2: 1797.688 ns/op
Iteration   3: 1816.968 ns/op
Iteration   4: 1843.602 ns/op
Iteration   5: 1861.081 ns/op

# Run progress: 27.78% complete, ETA 00:21:43
# Fork: 3 of 3
# Warmup Iteration   1: 1860.095 ns/op
# Warmup Iteration   2: 1828.537 ns/op
# Warmup Iteration   3: 1840.554 ns/op
# Warmup Iteration   4: 1844.142 ns/op
# Warmup Iteration   5: 1822.200 ns/op
Iteration   1: 1754.575 ns/op
Iteration   2: 1771.435 ns/op
Iteration   3: 1894.369 ns/op
Iteration   4: 1875.683 ns/op
Iteration   5: 1880.109 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StringPatternSplitBenchmark.pattern_split":
  1829.355 ±(99.9%) 46.556 ns/op [Average]
  (min, avg, max) = (1754.575, 1829.355, 1894.369), stdev = 43.548
  CI (99.9%): [1782.799, 1875.911] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StringPatternSplitBenchmark.pattern_split
# Parameters: (regexp = ___)

# Run progress: 33.33% complete, ETA 00:20:03
# Fork: 1 of 3
# Warmup Iteration   1: 1908.237 ns/op
# Warmup Iteration   2: 1914.678 ns/op
# Warmup Iteration   3: 1882.273 ns/op
# Warmup Iteration   4: 1900.044 ns/op
# Warmup Iteration   5: 1898.973 ns/op
Iteration   1: 1859.183 ns/op
Iteration   2: 1902.799 ns/op
Iteration   3: 1833.834 ns/op
Iteration   4: 1872.368 ns/op
Iteration   5: 1799.369 ns/op

# Run progress: 38.89% complete, ETA 00:18:22
# Fork: 2 of 3
# Warmup Iteration   1: 1960.076 ns/op
# Warmup Iteration   2: 1845.288 ns/op
# Warmup Iteration   3: 1877.685 ns/op
# Warmup Iteration   4: 1918.876 ns/op
# Warmup Iteration   5: 1921.816 ns/op
Iteration   1: 1922.123 ns/op
Iteration   2: 1904.737 ns/op
Iteration   3: 1871.885 ns/op
Iteration   4: 1909.566 ns/op
Iteration   5: 1880.644 ns/op

# Run progress: 44.44% complete, ETA 00:16:42
# Fork: 3 of 3
# Warmup Iteration   1: 1865.211 ns/op
# Warmup Iteration   2: 1830.920 ns/op
# Warmup Iteration   3: 1825.624 ns/op
# Warmup Iteration   4: 1740.689 ns/op
# Warmup Iteration   5: 1868.577 ns/op
Iteration   1: 1842.218 ns/op
Iteration   2: 1774.590 ns/op
Iteration   3: 1745.677 ns/op
Iteration   4: 1829.106 ns/op
Iteration   5: 1810.282 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StringPatternSplitBenchmark.pattern_split":
  1850.559 ±(99.9%) 55.698 ns/op [Average]
  (min, avg, max) = (1745.677, 1850.559, 1922.123), stdev = 52.100
  CI (99.9%): [1794.861, 1906.256] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StringPatternSplitBenchmark.string_split
# Parameters: (regexp = _)

# Run progress: 50.00% complete, ETA 00:15:02
# Fork: 1 of 3
# Warmup Iteration   1: 810.595 ns/op
# Warmup Iteration   2: 797.797 ns/op
# Warmup Iteration   3: 814.111 ns/op
# Warmup Iteration   4: 805.153 ns/op
# Warmup Iteration   5: 796.629 ns/op
Iteration   1: 803.123 ns/op
Iteration   2: 803.519 ns/op
Iteration   3: 796.650 ns/op
Iteration   4: 769.539 ns/op
Iteration   5: 792.175 ns/op

# Run progress: 55.56% complete, ETA 00:13:21
# Fork: 2 of 3
# Warmup Iteration   1: 823.513 ns/op
# Warmup Iteration   2: 820.159 ns/op
# Warmup Iteration   3: 804.851 ns/op
# Warmup Iteration   4: 822.200 ns/op
# Warmup Iteration   5: 807.691 ns/op
Iteration   1: 802.668 ns/op
Iteration   2: 812.932 ns/op
Iteration   3: 812.823 ns/op
Iteration   4: 809.613 ns/op
Iteration   5: 801.540 ns/op

# Run progress: 61.11% complete, ETA 00:11:41
# Fork: 3 of 3
# Warmup Iteration   1: 823.142 ns/op
# Warmup Iteration   2: 801.315 ns/op
# Warmup Iteration   3: 810.678 ns/op
# Warmup Iteration   4: 787.490 ns/op
# Warmup Iteration   5: 800.788 ns/op
Iteration   1: 797.573 ns/op
Iteration   2: 807.925 ns/op
Iteration   3: 806.378 ns/op
Iteration   4: 792.102 ns/op
Iteration   5: 791.985 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StringPatternSplitBenchmark.string_split":
  800.036 ±(99.9%) 11.753 ns/op [Average]
  (min, avg, max) = (769.539, 800.036, 812.932), stdev = 10.994
  CI (99.9%): [788.284, 811.789] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StringPatternSplitBenchmark.string_split
# Parameters: (regexp = __)

# Run progress: 66.67% complete, ETA 00:10:01
# Fork: 1 of 3
# Warmup Iteration   1: 1989.703 ns/op
# Warmup Iteration   2: 1892.935 ns/op
# Warmup Iteration   3: 1915.404 ns/op
# Warmup Iteration   4: 1992.829 ns/op
# Warmup Iteration   5: 1894.099 ns/op
Iteration   1: 1939.709 ns/op
Iteration   2: 1942.589 ns/op
Iteration   3: 1964.762 ns/op
Iteration   4: 1946.152 ns/op
Iteration   5: 1947.653 ns/op

# Run progress: 72.22% complete, ETA 00:08:21
# Fork: 2 of 3
# Warmup Iteration   1: 1963.983 ns/op
# Warmup Iteration   2: 1941.141 ns/op
# Warmup Iteration   3: 1915.892 ns/op
# Warmup Iteration   4: 1961.886 ns/op
# Warmup Iteration   5: 1863.415 ns/op
Iteration   1: 1905.627 ns/op
Iteration   2: 1912.398 ns/op
Iteration   3: 1916.160 ns/op
Iteration   4: 1948.044 ns/op
Iteration   5: 1980.603 ns/op

# Run progress: 77.78% complete, ETA 00:06:40
# Fork: 3 of 3
# Warmup Iteration   1: 1919.697 ns/op
# Warmup Iteration   2: 1876.556 ns/op
# Warmup Iteration   3: 1858.489 ns/op
# Warmup Iteration   4: 1897.365 ns/op
# Warmup Iteration   5: 1894.502 ns/op
Iteration   1: 1904.041 ns/op
Iteration   2: 1893.535 ns/op
Iteration   3: 1847.337 ns/op
Iteration   4: 1915.988 ns/op
Iteration   5: 1917.845 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StringPatternSplitBenchmark.string_split":
  1925.496 ±(99.9%) 34.867 ns/op [Average]
  (min, avg, max) = (1847.337, 1925.496, 1980.603), stdev = 32.614
  CI (99.9%): [1890.629, 1960.363] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StringPatternSplitBenchmark.string_split
# Parameters: (regexp = ___)

# Run progress: 83.33% complete, ETA 00:05:00
# Fork: 1 of 3
# Warmup Iteration   1: 1953.482 ns/op
# Warmup Iteration   2: 1915.346 ns/op
# Warmup Iteration   3: 1932.196 ns/op
# Warmup Iteration   4: 1995.944 ns/op
# Warmup Iteration   5: 1924.889 ns/op
Iteration   1: 1941.587 ns/op
Iteration   2: 1930.686 ns/op
Iteration   3: 1938.881 ns/op
Iteration   4: 1880.275 ns/op
Iteration   5: 1980.095 ns/op

# Run progress: 88.89% complete, ETA 00:03:20
# Fork: 2 of 3
# Warmup Iteration   1: 2014.295 ns/op
# Warmup Iteration   2: 1973.925 ns/op
# Warmup Iteration   3: 1862.150 ns/op
# Warmup Iteration   4: 1926.987 ns/op
# Warmup Iteration   5: 1876.959 ns/op
Iteration   1: 1878.498 ns/op
Iteration   2: 1856.051 ns/op
Iteration   3: 1937.716 ns/op
Iteration   4: 1913.465 ns/op
Iteration   5: 1901.396 ns/op

# Run progress: 94.44% complete, ETA 00:01:40
# Fork: 3 of 3
# Warmup Iteration   1: 2030.391 ns/op
# Warmup Iteration   2: 2080.564 ns/op
# Warmup Iteration   3: 1933.101 ns/op
# Warmup Iteration   4: 1990.942 ns/op
# Warmup Iteration   5: 2034.795 ns/op
Iteration   1: 2023.306 ns/op
Iteration   2: 2056.496 ns/op
Iteration   3: 2016.073 ns/op
Iteration   4: 2040.395 ns/op
Iteration   5: 2037.900 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.StringPatternSplitBenchmark.string_split":
  1955.521 ±(99.9%) 70.360 ns/op [Average]
  (min, avg, max) = (1856.051, 1955.521, 2056.496), stdev = 65.815
  CI (99.9%): [1885.161, 2025.882] (assumes normal distribution)


# Run complete. Total time: 00:30:04

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                  (regexp)  Mode  Cnt     Score    Error  Units
StringPatternSplitBenchmark.pattern_split         _  avgt   15  1468.210 ± 53.877  ns/op
StringPatternSplitBenchmark.pattern_split        __  avgt   15  1829.355 ± 46.556  ns/op
StringPatternSplitBenchmark.pattern_split       ___  avgt   15  1850.559 ± 55.698  ns/op
StringPatternSplitBenchmark.string_split          _  avgt   15   800.036 ± 11.753  ns/op
StringPatternSplitBenchmark.string_split         __  avgt   15  1925.496 ± 34.867  ns/op
StringPatternSplitBenchmark.string_split        ___  avgt   15  1955.521 ± 70.360  ns/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_c1_c2_jit/StringPatternSplitBenchmark.json
Running java  -jar benchmarks/target/benchmarks.jar .*NewInstanceBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_c1_c2_jit/NewInstanceBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.NewInstanceBenchmark.new_instance

# Run progress: 0.00% complete, ETA 00:20:00
# Fork: 1 of 3
# Warmup Iteration   1: 72.150 ns/op
# Warmup Iteration   2: 61.714 ns/op
# Warmup Iteration   3: 64.280 ns/op
# Warmup Iteration   4: 60.983 ns/op
# Warmup Iteration   5: 62.093 ns/op
Iteration   1: 63.115 ns/op
Iteration   2: 62.388 ns/op
Iteration   3: 63.127 ns/op
Iteration   4: 62.559 ns/op
Iteration   5: 63.139 ns/op

# Run progress: 8.33% complete, ETA 00:18:23
# Fork: 2 of 3
# Warmup Iteration   1: 73.336 ns/op
# Warmup Iteration   2: 68.447 ns/op
# Warmup Iteration   3: 68.437 ns/op
# Warmup Iteration   4: 67.884 ns/op
# Warmup Iteration   5: 67.765 ns/op
Iteration   1: 65.670 ns/op
Iteration   2: 65.699 ns/op
Iteration   3: 67.509 ns/op
Iteration   4: 67.535 ns/op
Iteration   5: 65.788 ns/op

# Run progress: 16.67% complete, ETA 00:16:42
# Fork: 3 of 3
# Warmup Iteration   1: 75.313 ns/op
# Warmup Iteration   2: 67.243 ns/op
# Warmup Iteration   3: 67.093 ns/op
# Warmup Iteration   4: 67.442 ns/op
# Warmup Iteration   5: 67.918 ns/op
Iteration   1: 70.059 ns/op
Iteration   2: 66.314 ns/op
Iteration   3: 68.001 ns/op
Iteration   4: 70.473 ns/op
Iteration   5: 69.928 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.NewInstanceBenchmark.new_instance":
  66.087 ±(99.9%) 3.003 ns/op [Average]
  (min, avg, max) = (62.388, 66.087, 70.473), stdev = 2.809
  CI (99.9%): [63.084, 69.090] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.NewInstanceBenchmark.new_operator

# Run progress: 25.00% complete, ETA 00:15:02
# Fork: 1 of 3
# Warmup Iteration   1: 4.751 ns/op
# Warmup Iteration   2: 4.829 ns/op
# Warmup Iteration   3: 3.616 ns/op
# Warmup Iteration   4: 3.655 ns/op
# Warmup Iteration   5: 3.614 ns/op
Iteration   1: 3.486 ns/op
Iteration   2: 3.543 ns/op
Iteration   3: 3.564 ns/op
Iteration   4: 3.651 ns/op
Iteration   5: 3.558 ns/op

# Run progress: 33.33% complete, ETA 00:13:21
# Fork: 2 of 3
# Warmup Iteration   1: 4.773 ns/op
# Warmup Iteration   2: 4.709 ns/op
# Warmup Iteration   3: 3.672 ns/op
# Warmup Iteration   4: 3.687 ns/op
# Warmup Iteration   5: 3.585 ns/op
Iteration   1: 3.642 ns/op
Iteration   2: 3.625 ns/op
Iteration   3: 3.603 ns/op
Iteration   4: 3.682 ns/op
Iteration   5: 3.589 ns/op

# Run progress: 41.67% complete, ETA 00:11:41
# Fork: 3 of 3
# Warmup Iteration   1: 4.729 ns/op
# Warmup Iteration   2: 4.769 ns/op
# Warmup Iteration   3: 3.664 ns/op
# Warmup Iteration   4: 3.639 ns/op
# Warmup Iteration   5: 3.609 ns/op
Iteration   1: 3.537 ns/op
Iteration   2: 3.522 ns/op
Iteration   3: 3.542 ns/op
Iteration   4: 3.615 ns/op
Iteration   5: 3.691 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.NewInstanceBenchmark.new_operator":
  3.590 ±(99.9%) 0.065 ns/op [Average]
  (min, avg, max) = (3.486, 3.590, 3.691), stdev = 0.061
  CI (99.9%): [3.525, 3.655] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.NewInstanceBenchmark.supplier_new

# Run progress: 50.00% complete, ETA 00:10:01
# Fork: 1 of 3
# Warmup Iteration   1: 4.760 ns/op
# Warmup Iteration   2: 4.535 ns/op
# Warmup Iteration   3: 3.635 ns/op
# Warmup Iteration   4: 3.597 ns/op
# Warmup Iteration   5: 3.673 ns/op
Iteration   1: 3.589 ns/op
Iteration   2: 3.634 ns/op
Iteration   3: 3.555 ns/op
Iteration   4: 3.632 ns/op
Iteration   5: 3.617 ns/op

# Run progress: 58.33% complete, ETA 00:08:21
# Fork: 2 of 3
# Warmup Iteration   1: 4.810 ns/op
# Warmup Iteration   2: 4.771 ns/op
# Warmup Iteration   3: 3.573 ns/op
# Warmup Iteration   4: 3.551 ns/op
# Warmup Iteration   5: 3.610 ns/op
Iteration   1: 3.606 ns/op
Iteration   2: 3.603 ns/op
Iteration   3: 3.613 ns/op
Iteration   4: 3.627 ns/op
Iteration   5: 3.656 ns/op

# Run progress: 66.67% complete, ETA 00:06:40
# Fork: 3 of 3
# Warmup Iteration   1: 4.777 ns/op
# Warmup Iteration   2: 4.553 ns/op
# Warmup Iteration   3: 3.682 ns/op
# Warmup Iteration   4: 3.626 ns/op
# Warmup Iteration   5: 3.613 ns/op
Iteration   1: 3.545 ns/op
Iteration   2: 3.518 ns/op
Iteration   3: 3.620 ns/op
Iteration   4: 3.596 ns/op
Iteration   5: 3.630 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.NewInstanceBenchmark.supplier_new":
  3.603 ±(99.9%) 0.040 ns/op [Average]
  (min, avg, max) = (3.518, 3.603, 3.656), stdev = 0.037
  CI (99.9%): [3.563, 3.643] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.NewInstanceBenchmark.unsafe_allocateInstance

# Run progress: 75.00% complete, ETA 00:05:00
# Fork: 1 of 3
# Warmup Iteration   1: 4.776 ns/op
# Warmup Iteration   2: 4.854 ns/op
# Warmup Iteration   3: 3.645 ns/op
# Warmup Iteration   4: 3.535 ns/op
# Warmup Iteration   5: 3.665 ns/op
Iteration   1: 3.599 ns/op
Iteration   2: 3.657 ns/op
Iteration   3: 3.561 ns/op
Iteration   4: 3.657 ns/op
Iteration   5: 3.621 ns/op

# Run progress: 83.33% complete, ETA 00:03:20
# Fork: 2 of 3
# Warmup Iteration   1: 4.893 ns/op
# Warmup Iteration   2: 4.786 ns/op
# Warmup Iteration   3: 3.641 ns/op
# Warmup Iteration   4: 3.582 ns/op
# Warmup Iteration   5: 3.631 ns/op
Iteration   1: 3.608 ns/op
Iteration   2: 3.578 ns/op
Iteration   3: 3.609 ns/op
Iteration   4: 3.685 ns/op
Iteration   5: 3.564 ns/op

# Run progress: 91.67% complete, ETA 00:01:40
# Fork: 3 of 3
# Warmup Iteration   1: 4.885 ns/op
# Warmup Iteration   2: 4.791 ns/op
# Warmup Iteration   3: 3.604 ns/op
# Warmup Iteration   4: 3.511 ns/op
# Warmup Iteration   5: 3.603 ns/op
Iteration   1: 3.616 ns/op
Iteration   2: 3.636 ns/op
Iteration   3: 3.541 ns/op
Iteration   4: 3.519 ns/op
Iteration   5: 3.648 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.NewInstanceBenchmark.unsafe_allocateInstance":
  3.607 ±(99.9%) 0.050 ns/op [Average]
  (min, avg, max) = (3.519, 3.607, 3.685), stdev = 0.047
  CI (99.9%): [3.557, 3.657] (assumes normal distribution)


# Run complete. Total time: 00:20:02

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                     Mode  Cnt   Score   Error  Units
NewInstanceBenchmark.new_instance             avgt   15  66.087 ± 3.003  ns/op
NewInstanceBenchmark.new_operator             avgt   15   3.590 ± 0.065  ns/op
NewInstanceBenchmark.supplier_new             avgt   15   3.603 ± 0.040  ns/op
NewInstanceBenchmark.unsafe_allocateInstance  avgt   15   3.607 ± 0.050  ns/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_c1_c2_jit/NewInstanceBenchmark.json
Running java  -jar benchmarks/target/benchmarks.jar .*MessageDigestBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_c1_c2_jit/MessageDigestBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest
# Parameters: (algorithm = MD2, provider = DEFAULT, size = 4096)

# Run progress: 0.00% complete, ETA 02:10:00
# Fork: 1 of 3
# Warmup Iteration   1: 355.597 us/op
# Warmup Iteration   2: 348.524 us/op
# Warmup Iteration   3: 346.929 us/op
# Warmup Iteration   4: 347.802 us/op
# Warmup Iteration   5: 345.815 us/op
Iteration   1: 347.555 us/op
Iteration   2: 347.960 us/op
Iteration   3: 347.638 us/op
Iteration   4: 347.610 us/op
Iteration   5: 347.992 us/op

# Run progress: 1.28% complete, ETA 02:08:39
# Fork: 2 of 3
# Warmup Iteration   1: 356.404 us/op
# Warmup Iteration   2: 347.978 us/op
# Warmup Iteration   3: 347.279 us/op
# Warmup Iteration   4: 348.060 us/op
# Warmup Iteration   5: 348.050 us/op
Iteration   1: 348.018 us/op
Iteration   2: 348.070 us/op
Iteration   3: 348.085 us/op
Iteration   4: 347.866 us/op
Iteration   5: 347.783 us/op

# Run progress: 2.56% complete, ETA 02:06:58
# Fork: 3 of 3
# Warmup Iteration   1: 357.021 us/op
# Warmup Iteration   2: 348.761 us/op
# Warmup Iteration   3: 347.912 us/op
# Warmup Iteration   4: 348.012 us/op
# Warmup Iteration   5: 347.916 us/op
Iteration   1: 347.868 us/op
Iteration   2: 348.054 us/op
Iteration   3: 347.843 us/op
Iteration   4: 347.643 us/op
Iteration   5: 347.696 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest":
  347.845 ±(99.9%) 0.195 us/op [Average]
  (min, avg, max) = (347.555, 347.845, 348.085), stdev = 0.183
  CI (99.9%): [347.650, 348.041] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest
# Parameters: (algorithm = MD2, provider = SUN, size = 4096)

# Run progress: 3.85% complete, ETA 02:05:17
# Fork: 1 of 3
# Warmup Iteration   1: 357.013 us/op
# Warmup Iteration   2: 348.637 us/op
# Warmup Iteration   3: 348.114 us/op
# Warmup Iteration   4: 347.837 us/op
# Warmup Iteration   5: 346.435 us/op
Iteration   1: 347.635 us/op
Iteration   2: 346.486 us/op
Iteration   3: 347.496 us/op
Iteration   4: 347.930 us/op
Iteration   5: 348.038 us/op

# Run progress: 5.13% complete, ETA 02:03:37
# Fork: 2 of 3
# Warmup Iteration   1: 356.714 us/op
# Warmup Iteration   2: 348.655 us/op
# Warmup Iteration   3: 347.953 us/op
# Warmup Iteration   4: 348.038 us/op
# Warmup Iteration   5: 348.048 us/op
Iteration   1: 347.733 us/op
Iteration   2: 345.482 us/op
Iteration   3: 347.132 us/op
Iteration   4: 356.743 us/op
Iteration   5: 356.993 us/op

# Run progress: 6.41% complete, ETA 02:01:57
# Fork: 3 of 3
# Warmup Iteration   1: 361.828 us/op
# Warmup Iteration   2: 358.450 us/op
# Warmup Iteration   3: 351.378 us/op
# Warmup Iteration   4: 347.797 us/op
# Warmup Iteration   5: 347.674 us/op
Iteration   1: 347.599 us/op
Iteration   2: 347.976 us/op
Iteration   3: 348.051 us/op
Iteration   4: 347.581 us/op
Iteration   5: 347.076 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest":
  348.663 ±(99.9%) 3.634 us/op [Average]
  (min, avg, max) = (345.482, 348.663, 356.993), stdev = 3.399
  CI (99.9%): [345.029, 352.297] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest
# Parameters: (algorithm = MD5, provider = DEFAULT, size = 4096)

# Run progress: 7.69% complete, ETA 02:00:17
# Fork: 1 of 3
# Warmup Iteration   1: 9.160 us/op
# Warmup Iteration   2: 9.104 us/op
# Warmup Iteration   3: 9.118 us/op
# Warmup Iteration   4: 9.120 us/op
# Warmup Iteration   5: 9.137 us/op
Iteration   1: 9.139 us/op
Iteration   2: 9.139 us/op
Iteration   3: 9.137 us/op
Iteration   4: 9.145 us/op
Iteration   5: 9.137 us/op

# Run progress: 8.97% complete, ETA 01:58:37
# Fork: 2 of 3
# Warmup Iteration   1: 9.237 us/op
# Warmup Iteration   2: 9.249 us/op
# Warmup Iteration   3: 9.173 us/op
# Warmup Iteration   4: 9.162 us/op
# Warmup Iteration   5: 9.141 us/op
Iteration   1: 9.157 us/op
Iteration   2: 9.167 us/op
Iteration   3: 9.161 us/op
Iteration   4: 9.173 us/op
Iteration   5: 9.149 us/op

# Run progress: 10.26% complete, ETA 01:56:56
# Fork: 3 of 3
# Warmup Iteration   1: 9.316 us/op
# Warmup Iteration   2: 9.311 us/op
# Warmup Iteration   3: 9.366 us/op
# Warmup Iteration   4: 9.421 us/op
# Warmup Iteration   5: 9.383 us/op
Iteration   1: 9.390 us/op
Iteration   2: 9.403 us/op
Iteration   3: 9.433 us/op
Iteration   4: 9.441 us/op
Iteration   5: 9.483 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest":
  9.244 ±(99.9%) 0.148 us/op [Average]
  (min, avg, max) = (9.137, 9.244, 9.483), stdev = 0.138
  CI (99.9%): [9.096, 9.391] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest
# Parameters: (algorithm = MD5, provider = SUN, size = 4096)

# Run progress: 11.54% complete, ETA 01:55:16
# Fork: 1 of 3
# Warmup Iteration   1: 9.272 us/op
# Warmup Iteration   2: 9.168 us/op
# Warmup Iteration   3: 9.141 us/op
# Warmup Iteration   4: 9.150 us/op
# Warmup Iteration   5: 9.149 us/op
Iteration   1: 9.146 us/op
Iteration   2: 9.108 us/op
Iteration   3: 9.143 us/op
Iteration   4: 9.144 us/op
Iteration   5: 9.145 us/op

# Run progress: 12.82% complete, ETA 01:53:36
# Fork: 2 of 3
# Warmup Iteration   1: 9.149 us/op
# Warmup Iteration   2: 9.158 us/op
# Warmup Iteration   3: 9.191 us/op
# Warmup Iteration   4: 9.180 us/op
# Warmup Iteration   5: 9.183 us/op
Iteration   1: 9.184 us/op
Iteration   2: 9.184 us/op
Iteration   3: 9.169 us/op
Iteration   4: 9.181 us/op
Iteration   5: 9.178 us/op

# Run progress: 14.10% complete, ETA 01:51:55
# Fork: 3 of 3
# Warmup Iteration   1: 9.318 us/op
# Warmup Iteration   2: 9.143 us/op
# Warmup Iteration   3: 9.197 us/op
# Warmup Iteration   4: 9.204 us/op
# Warmup Iteration   5: 9.185 us/op
Iteration   1: 9.154 us/op
Iteration   2: 9.183 us/op
Iteration   3: 9.142 us/op
Iteration   4: 9.140 us/op
Iteration   5: 9.139 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest":
  9.156 ±(99.9%) 0.024 us/op [Average]
  (min, avg, max) = (9.108, 9.156, 9.184), stdev = 0.023
  CI (99.9%): [9.132, 9.180] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest
# Parameters: (algorithm = SHA-224, provider = DEFAULT, size = 4096)

# Run progress: 15.38% complete, ETA 01:50:15
# Fork: 1 of 3
# Warmup Iteration   1: 9.933 us/op
# Warmup Iteration   2: 9.547 us/op
# Warmup Iteration   3: 9.777 us/op
# Warmup Iteration   4: 9.773 us/op
# Warmup Iteration   5: 9.770 us/op
Iteration   1: 9.761 us/op
Iteration   2: 9.712 us/op
Iteration   3: 9.477 us/op
Iteration   4: 9.485 us/op
Iteration   5: 9.489 us/op

# Run progress: 16.67% complete, ETA 01:48:35
# Fork: 2 of 3
# Warmup Iteration   1: 9.628 us/op
# Warmup Iteration   2: 9.573 us/op
# Warmup Iteration   3: 9.558 us/op
# Warmup Iteration   4: 9.555 us/op
# Warmup Iteration   5: 9.516 us/op
Iteration   1: 10.091 us/op
Iteration   2: 10.001 us/op
Iteration   3: 9.936 us/op
Iteration   4: 9.951 us/op
Iteration   5: 9.926 us/op

# Run progress: 17.95% complete, ETA 01:46:55
# Fork: 3 of 3
# Warmup Iteration   1: 9.783 us/op
# Warmup Iteration   2: 10.050 us/op
# Warmup Iteration   3: 10.006 us/op
# Warmup Iteration   4: 9.693 us/op
# Warmup Iteration   5: 9.716 us/op
Iteration   1: 9.713 us/op
Iteration   2: 9.713 us/op
Iteration   3: 9.733 us/op
Iteration   4: 9.709 us/op
Iteration   5: 9.738 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest":
  9.762 ±(99.9%) 0.202 us/op [Average]
  (min, avg, max) = (9.477, 9.762, 10.091), stdev = 0.189
  CI (99.9%): [9.560, 9.965] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest
# Parameters: (algorithm = SHA-224, provider = SUN, size = 4096)

# Run progress: 19.23% complete, ETA 01:45:14
# Fork: 1 of 3
# Warmup Iteration   1: 9.980 us/op
# Warmup Iteration   2: 9.743 us/op
# Warmup Iteration   3: 9.771 us/op
# Warmup Iteration   4: 9.777 us/op
# Warmup Iteration   5: 9.774 us/op
Iteration   1: 9.755 us/op
Iteration   2: 9.715 us/op
Iteration   3: 9.734 us/op
Iteration   4: 9.736 us/op
Iteration   5: 9.716 us/op

# Run progress: 20.51% complete, ETA 01:43:34
# Fork: 2 of 3
# Warmup Iteration   1: 9.607 us/op
# Warmup Iteration   2: 9.517 us/op
# Warmup Iteration   3: 9.486 us/op
# Warmup Iteration   4: 9.522 us/op
# Warmup Iteration   5: 9.568 us/op
Iteration   1: 9.515 us/op
Iteration   2: 9.558 us/op
Iteration   3: 9.573 us/op
Iteration   4: 9.564 us/op
Iteration   5: 9.537 us/op

# Run progress: 21.79% complete, ETA 01:41:54
# Fork: 3 of 3
# Warmup Iteration   1: 10.186 us/op
# Warmup Iteration   2: 9.989 us/op
# Warmup Iteration   3: 9.977 us/op
# Warmup Iteration   4: 9.962 us/op
# Warmup Iteration   5: 9.955 us/op
Iteration   1: 9.949 us/op
Iteration   2: 9.949 us/op
Iteration   3: 9.926 us/op
Iteration   4: 9.915 us/op
Iteration   5: 9.919 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest":
  9.737 ±(99.9%) 0.174 us/op [Average]
  (min, avg, max) = (9.515, 9.737, 9.949), stdev = 0.162
  CI (99.9%): [9.564, 9.911] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest
# Parameters: (algorithm = SHA-512/224, provider = DEFAULT, size = 4096)

# Run progress: 23.08% complete, ETA 01:40:14
# Fork: 1 of 3
# Warmup Iteration   1: 7.095 us/op
# Warmup Iteration   2: 6.922 us/op
# Warmup Iteration   3: 7.428 us/op
# Warmup Iteration   4: 7.388 us/op
# Warmup Iteration   5: 7.369 us/op
Iteration   1: 7.339 us/op
Iteration   2: 7.049 us/op
Iteration   3: 7.049 us/op
Iteration   4: 7.048 us/op
Iteration   5: 6.945 us/op

# Run progress: 24.36% complete, ETA 01:38:33
# Fork: 2 of 3
# Warmup Iteration   1: 7.482 us/op
# Warmup Iteration   2: 7.343 us/op
# Warmup Iteration   3: 7.383 us/op
# Warmup Iteration   4: 7.373 us/op
# Warmup Iteration   5: 7.373 us/op
Iteration   1: 7.338 us/op
Iteration   2: 7.300 us/op
Iteration   3: 7.295 us/op
Iteration   4: 7.296 us/op
Iteration   5: 7.283 us/op

# Run progress: 25.64% complete, ETA 01:36:53
# Fork: 3 of 3
# Warmup Iteration   1: 7.334 us/op
# Warmup Iteration   2: 7.286 us/op
# Warmup Iteration   3: 7.343 us/op
# Warmup Iteration   4: 7.320 us/op
# Warmup Iteration   5: 7.321 us/op
Iteration   1: 7.354 us/op
Iteration   2: 7.345 us/op
Iteration   3: 7.347 us/op
Iteration   4: 7.335 us/op
Iteration   5: 7.313 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest":
  7.243 ±(99.9%) 0.151 us/op [Average]
  (min, avg, max) = (6.945, 7.243, 7.354), stdev = 0.141
  CI (99.9%): [7.092, 7.393] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest
# Parameters: (algorithm = SHA-512/224, provider = SUN, size = 4096)

# Run progress: 26.92% complete, ETA 01:35:13
# Fork: 1 of 3
# Warmup Iteration   1: 7.055 us/op
# Warmup Iteration   2: 7.047 us/op
# Warmup Iteration   3: 7.084 us/op
# Warmup Iteration   4: 7.094 us/op
# Warmup Iteration   5: 6.959 us/op
Iteration   1: 6.966 us/op
Iteration   2: 6.959 us/op
Iteration   3: 6.958 us/op
Iteration   4: 6.965 us/op
Iteration   5: 6.965 us/op

# Run progress: 28.21% complete, ETA 01:33:33
# Fork: 2 of 3
# Warmup Iteration   1: 7.442 us/op
# Warmup Iteration   2: 7.380 us/op
# Warmup Iteration   3: 7.374 us/op
# Warmup Iteration   4: 7.358 us/op
# Warmup Iteration   5: 7.349 us/op
Iteration   1: 7.340 us/op
Iteration   2: 7.332 us/op
Iteration   3: 7.338 us/op
Iteration   4: 7.336 us/op
Iteration   5: 7.329 us/op

# Run progress: 29.49% complete, ETA 01:31:52
# Fork: 3 of 3
# Warmup Iteration   1: 7.073 us/op
# Warmup Iteration   2: 7.330 us/op
# Warmup Iteration   3: 7.349 us/op
# Warmup Iteration   4: 7.319 us/op
# Warmup Iteration   5: 7.309 us/op
Iteration   1: 7.300 us/op
Iteration   2: 7.322 us/op
Iteration   3: 7.314 us/op
Iteration   4: 7.325 us/op
Iteration   5: 7.213 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest":
  7.198 ±(99.9%) 0.187 us/op [Average]
  (min, avg, max) = (6.958, 7.198, 7.340), stdev = 0.175
  CI (99.9%): [7.011, 7.384] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest
# Parameters: (algorithm = SHA-256, provider = DEFAULT, size = 4096)

# Run progress: 30.77% complete, ETA 01:30:12
# Fork: 1 of 3
# Warmup Iteration   1: 9.614 us/op
# Warmup Iteration   2: 9.984 us/op
# Warmup Iteration   3: 9.957 us/op
# Warmup Iteration   4: 9.954 us/op
# Warmup Iteration   5: 9.968 us/op
Iteration   1: 9.955 us/op
Iteration   2: 9.963 us/op
Iteration   3: 9.961 us/op
Iteration   4: 9.963 us/op
Iteration   5: 9.970 us/op

# Run progress: 32.05% complete, ETA 01:28:32
# Fork: 2 of 3
# Warmup Iteration   1: 9.914 us/op
# Warmup Iteration   2: 9.875 us/op
# Warmup Iteration   3: 9.399 us/op
# Warmup Iteration   4: 9.475 us/op
# Warmup Iteration   5: 9.508 us/op
Iteration   1: 9.512 us/op
Iteration   2: 9.511 us/op
Iteration   3: 9.502 us/op
Iteration   4: 9.502 us/op
Iteration   5: 9.507 us/op

# Run progress: 33.33% complete, ETA 01:26:52
# Fork: 3 of 3
# Warmup Iteration   1: 9.953 us/op
# Warmup Iteration   2: 10.046 us/op
# Warmup Iteration   3: 9.970 us/op
# Warmup Iteration   4: 9.959 us/op
# Warmup Iteration   5: 9.941 us/op
Iteration   1: 9.932 us/op
Iteration   2: 9.960 us/op
Iteration   3: 9.967 us/op
Iteration   4: 9.967 us/op
Iteration   5: 9.962 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest":
  9.809 ±(99.9%) 0.237 us/op [Average]
  (min, avg, max) = (9.502, 9.809, 9.970), stdev = 0.221
  CI (99.9%): [9.572, 10.045] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest
# Parameters: (algorithm = SHA-256, provider = SUN, size = 4096)

# Run progress: 34.62% complete, ETA 01:25:11
# Fork: 1 of 3
# Warmup Iteration   1: 10.080 us/op
# Warmup Iteration   2: 9.679 us/op
# Warmup Iteration   3: 9.996 us/op
# Warmup Iteration   4: 9.980 us/op
# Warmup Iteration   5: 9.966 us/op
Iteration   1: 9.966 us/op
Iteration   2: 9.963 us/op
Iteration   3: 9.950 us/op
Iteration   4: 9.958 us/op
Iteration   5: 9.953 us/op

# Run progress: 35.90% complete, ETA 01:23:31
# Fork: 2 of 3
# Warmup Iteration   1: 9.885 us/op
# Warmup Iteration   2: 9.461 us/op
# Warmup Iteration   3: 9.996 us/op
# Warmup Iteration   4: 9.981 us/op
# Warmup Iteration   5: 9.980 us/op
Iteration   1: 9.979 us/op
Iteration   2: 9.961 us/op
Iteration   3: 9.929 us/op
Iteration   4: 9.923 us/op
Iteration   5: 9.935 us/op

# Run progress: 37.18% complete, ETA 01:21:51
# Fork: 3 of 3
# Warmup Iteration   1: 10.012 us/op
# Warmup Iteration   2: 9.388 us/op
# Warmup Iteration   3: 9.447 us/op
# Warmup Iteration   4: 9.490 us/op
# Warmup Iteration   5: 9.496 us/op
Iteration   1: 9.502 us/op
Iteration   2: 9.499 us/op
Iteration   3: 9.488 us/op
Iteration   4: 9.482 us/op
Iteration   5: 9.474 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest":
  9.797 ±(99.9%) 0.242 us/op [Average]
  (min, avg, max) = (9.474, 9.797, 9.979), stdev = 0.226
  CI (99.9%): [9.556, 10.039] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest
# Parameters: (algorithm = SHA-384, provider = DEFAULT, size = 4096)

# Run progress: 38.46% complete, ETA 01:20:11
# Fork: 1 of 3
# Warmup Iteration   1: 7.091 us/op
# Warmup Iteration   2: 6.994 us/op
# Warmup Iteration   3: 7.011 us/op
# Warmup Iteration   4: 6.990 us/op
# Warmup Iteration   5: 6.978 us/op
Iteration   1: 6.976 us/op
Iteration   2: 6.980 us/op
Iteration   3: 7.058 us/op
Iteration   4: 7.059 us/op
Iteration   5: 7.060 us/op

# Run progress: 39.74% complete, ETA 01:18:31
# Fork: 2 of 3
# Warmup Iteration   1: 7.498 us/op
# Warmup Iteration   2: 7.432 us/op
# Warmup Iteration   3: 7.412 us/op
# Warmup Iteration   4: 7.390 us/op
# Warmup Iteration   5: 7.367 us/op
Iteration   1: 7.348 us/op
Iteration   2: 7.061 us/op
Iteration   3: 7.373 us/op
Iteration   4: 7.350 us/op
Iteration   5: 7.313 us/op

# Run progress: 41.03% complete, ETA 01:16:50
# Fork: 3 of 3
# Warmup Iteration   1: 7.066 us/op
# Warmup Iteration   2: 7.053 us/op
# Warmup Iteration   3: 7.090 us/op
# Warmup Iteration   4: 7.384 us/op
# Warmup Iteration   5: 7.344 us/op
Iteration   1: 7.331 us/op
Iteration   2: 7.357 us/op
Iteration   3: 7.309 us/op
Iteration   4: 7.303 us/op
Iteration   5: 7.311 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest":
  7.213 ±(99.9%) 0.166 us/op [Average]
  (min, avg, max) = (6.976, 7.213, 7.373), stdev = 0.156
  CI (99.9%): [7.046, 7.379] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest
# Parameters: (algorithm = SHA-384, provider = SUN, size = 4096)

# Run progress: 42.31% complete, ETA 01:15:10
# Fork: 1 of 3
# Warmup Iteration   1: 7.389 us/op
# Warmup Iteration   2: 7.037 us/op
# Warmup Iteration   3: 7.101 us/op
# Warmup Iteration   4: 7.093 us/op
# Warmup Iteration   5: 7.080 us/op
Iteration   1: 7.082 us/op
Iteration   2: 7.084 us/op
Iteration   3: 7.086 us/op
Iteration   4: 7.091 us/op
Iteration   5: 7.084 us/op

# Run progress: 43.59% complete, ETA 01:13:30
# Fork: 2 of 3
# Warmup Iteration   1: 7.414 us/op
# Warmup Iteration   2: 7.387 us/op
# Warmup Iteration   3: 7.362 us/op
# Warmup Iteration   4: 7.345 us/op
# Warmup Iteration   5: 7.330 us/op
Iteration   1: 7.064 us/op
Iteration   2: 7.064 us/op
Iteration   3: 7.070 us/op
Iteration   4: 7.068 us/op
Iteration   5: 7.076 us/op

# Run progress: 44.87% complete, ETA 01:11:50
# Fork: 3 of 3
# Warmup Iteration   1: 7.099 us/op
# Warmup Iteration   2: 7.074 us/op
# Warmup Iteration   3: 7.096 us/op
# Warmup Iteration   4: 7.102 us/op
# Warmup Iteration   5: 7.107 us/op
Iteration   1: 7.104 us/op
Iteration   2: 7.096 us/op
Iteration   3: 7.065 us/op
Iteration   4: 7.067 us/op
Iteration   5: 7.078 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest":
  7.079 ±(99.9%) 0.013 us/op [Average]
  (min, avg, max) = (7.064, 7.079, 7.104), stdev = 0.012
  CI (99.9%): [7.065, 7.092] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest
# Parameters: (algorithm = SHA3-512, provider = DEFAULT, size = 4096)

# Run progress: 46.15% complete, ETA 01:10:09
# Fork: 1 of 3
# Warmup Iteration   1: 45.420 us/op
# Warmup Iteration   2: 45.271 us/op
# Warmup Iteration   3: 45.337 us/op
# Warmup Iteration   4: 45.381 us/op
# Warmup Iteration   5: 45.362 us/op
Iteration   1: 45.345 us/op
Iteration   2: 45.246 us/op
Iteration   3: 45.219 us/op
Iteration   4: 45.239 us/op
Iteration   5: 45.255 us/op

# Run progress: 47.44% complete, ETA 01:08:29
# Fork: 2 of 3
# Warmup Iteration   1: 44.779 us/op
# Warmup Iteration   2: 43.034 us/op
# Warmup Iteration   3: 43.385 us/op
# Warmup Iteration   4: 43.497 us/op
# Warmup Iteration   5: 43.562 us/op
Iteration   1: 43.542 us/op
Iteration   2: 43.553 us/op
Iteration   3: 43.509 us/op
Iteration   4: 43.550 us/op
Iteration   5: 43.546 us/op

# Run progress: 48.72% complete, ETA 01:06:49
# Fork: 3 of 3
# Warmup Iteration   1: 45.565 us/op
# Warmup Iteration   2: 43.580 us/op
# Warmup Iteration   3: 43.821 us/op
# Warmup Iteration   4: 43.844 us/op
# Warmup Iteration   5: 43.830 us/op
Iteration   1: 43.838 us/op
Iteration   2: 43.894 us/op
Iteration   3: 43.830 us/op
Iteration   4: 43.845 us/op
Iteration   5: 43.888 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest":
  44.220 ±(99.9%) 0.828 us/op [Average]
  (min, avg, max) = (43.509, 44.220, 45.345), stdev = 0.774
  CI (99.9%): [43.392, 45.048] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest
# Parameters: (algorithm = SHA3-512, provider = SUN, size = 4096)

# Run progress: 50.00% complete, ETA 01:05:09
# Fork: 1 of 3
# Warmup Iteration   1: 43.833 us/op
# Warmup Iteration   2: 44.138 us/op
# Warmup Iteration   3: 44.442 us/op
# Warmup Iteration   4: 44.399 us/op
# Warmup Iteration   5: 44.434 us/op
Iteration   1: 44.424 us/op
Iteration   2: 44.430 us/op
Iteration   3: 44.399 us/op
Iteration   4: 44.420 us/op
Iteration   5: 44.471 us/op

# Run progress: 51.28% complete, ETA 01:03:28
# Fork: 2 of 3
# Warmup Iteration   1: 42.721 us/op
# Warmup Iteration   2: 43.084 us/op
# Warmup Iteration   3: 43.320 us/op
# Warmup Iteration   4: 46.063 us/op
# Warmup Iteration   5: 43.989 us/op
Iteration   1: 44.064 us/op
Iteration   2: 44.007 us/op
Iteration   3: 44.011 us/op
Iteration   4: 44.020 us/op
Iteration   5: 44.038 us/op

# Run progress: 52.56% complete, ETA 01:01:48
# Fork: 3 of 3
# Warmup Iteration   1: 45.075 us/op
# Warmup Iteration   2: 43.245 us/op
# Warmup Iteration   3: 43.558 us/op
# Warmup Iteration   4: 43.531 us/op
# Warmup Iteration   5: 43.523 us/op
Iteration   1: 43.558 us/op
Iteration   2: 43.580 us/op
Iteration   3: 43.549 us/op
Iteration   4: 43.624 us/op
Iteration   5: 43.566 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest":
  44.011 ±(99.9%) 0.387 us/op [Average]
  (min, avg, max) = (43.549, 44.011, 44.471), stdev = 0.362
  CI (99.9%): [43.624, 44.397] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest
# Parameters: (algorithm = SHA-512/256, provider = DEFAULT, size = 4096)

# Run progress: 53.85% complete, ETA 01:00:08
# Fork: 1 of 3
# Warmup Iteration   1: 7.019 us/op
# Warmup Iteration   2: 6.976 us/op
# Warmup Iteration   3: 6.980 us/op
# Warmup Iteration   4: 6.985 us/op
# Warmup Iteration   5: 7.450 us/op
Iteration   1: 7.428 us/op
Iteration   2: 7.400 us/op
Iteration   3: 7.376 us/op
Iteration   4: 7.379 us/op
Iteration   5: 7.376 us/op

# Run progress: 55.13% complete, ETA 00:58:28
# Fork: 2 of 3
# Warmup Iteration   1: 7.072 us/op
# Warmup Iteration   2: 7.384 us/op
# Warmup Iteration   3: 7.380 us/op
# Warmup Iteration   4: 7.368 us/op
# Warmup Iteration   5: 7.361 us/op
Iteration   1: 7.352 us/op
Iteration   2: 7.332 us/op
Iteration   3: 7.333 us/op
Iteration   4: 7.337 us/op
Iteration   5: 7.334 us/op

# Run progress: 56.41% complete, ETA 00:56:47
# Fork: 3 of 3
# Warmup Iteration   1: 7.116 us/op
# Warmup Iteration   2: 6.941 us/op
# Warmup Iteration   3: 6.944 us/op
# Warmup Iteration   4: 6.964 us/op
# Warmup Iteration   5: 6.945 us/op
Iteration   1: 6.933 us/op
Iteration   2: 6.941 us/op
Iteration   3: 7.423 us/op
Iteration   4: 7.394 us/op
Iteration   5: 7.377 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest":
  7.314 ±(99.9%) 0.167 us/op [Average]
  (min, avg, max) = (6.933, 7.314, 7.428), stdev = 0.156
  CI (99.9%): [7.147, 7.481] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest
# Parameters: (algorithm = SHA-512/256, provider = SUN, size = 4096)

# Run progress: 57.69% complete, ETA 00:55:07
# Fork: 1 of 3
# Warmup Iteration   1: 7.124 us/op
# Warmup Iteration   2: 7.395 us/op
# Warmup Iteration   3: 7.409 us/op
# Warmup Iteration   4: 7.389 us/op
# Warmup Iteration   5: 7.390 us/op
Iteration   1: 7.050 us/op
Iteration   2: 7.071 us/op
Iteration   3: 7.071 us/op
Iteration   4: 7.075 us/op
Iteration   5: 7.346 us/op

# Run progress: 58.97% complete, ETA 00:53:27
# Fork: 2 of 3
# Warmup Iteration   1: 7.488 us/op
# Warmup Iteration   2: 7.348 us/op
# Warmup Iteration   3: 7.334 us/op
# Warmup Iteration   4: 7.304 us/op
# Warmup Iteration   5: 7.040 us/op
Iteration   1: 7.040 us/op
Iteration   2: 7.043 us/op
Iteration   3: 7.049 us/op
Iteration   4: 7.045 us/op
Iteration   5: 7.057 us/op

# Run progress: 60.26% complete, ETA 00:51:47
# Fork: 3 of 3
# Warmup Iteration   1: 7.425 us/op
# Warmup Iteration   2: 7.348 us/op
# Warmup Iteration   3: 7.361 us/op
# Warmup Iteration   4: 7.330 us/op
# Warmup Iteration   5: 7.332 us/op
Iteration   1: 7.362 us/op
Iteration   2: 6.968 us/op
Iteration   3: 7.440 us/op
Iteration   4: 7.420 us/op
Iteration   5: 7.407 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest":
  7.163 ±(99.9%) 0.185 us/op [Average]
  (min, avg, max) = (6.968, 7.163, 7.440), stdev = 0.173
  CI (99.9%): [6.978, 7.348] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest
# Parameters: (algorithm = SHA, provider = DEFAULT, size = 4096)

# Run progress: 61.54% complete, ETA 00:50:06
# Fork: 1 of 3
# Warmup Iteration   1: 14.006 us/op
# Warmup Iteration   2: 13.317 us/op
# Warmup Iteration   3: 13.330 us/op
# Warmup Iteration   4: 13.312 us/op
# Warmup Iteration   5: 13.354 us/op
Iteration   1: 13.426 us/op
Iteration   2: 13.409 us/op
Iteration   3: 13.364 us/op
Iteration   4: 13.910 us/op
Iteration   5: 13.855 us/op

# Run progress: 62.82% complete, ETA 00:48:26
# Fork: 2 of 3
# Warmup Iteration   1: 13.268 us/op
# Warmup Iteration   2: 13.477 us/op
# Warmup Iteration   3: 13.392 us/op
# Warmup Iteration   4: 13.475 us/op
# Warmup Iteration   5: 13.540 us/op
Iteration   1: 13.502 us/op
Iteration   2: 13.471 us/op
Iteration   3: 13.517 us/op
Iteration   4: 13.530 us/op
Iteration   5: 13.522 us/op

# Run progress: 64.10% complete, ETA 00:46:46
# Fork: 3 of 3
# Warmup Iteration   1: 13.660 us/op
# Warmup Iteration   2: 13.196 us/op
# Warmup Iteration   3: 13.104 us/op
# Warmup Iteration   4: 13.151 us/op
# Warmup Iteration   5: 13.169 us/op
Iteration   1: 13.185 us/op
Iteration   2: 13.156 us/op
Iteration   3: 13.216 us/op
Iteration   4: 13.222 us/op
Iteration   5: 13.201 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest":
  13.433 ±(99.9%) 0.243 us/op [Average]
  (min, avg, max) = (13.156, 13.433, 13.910), stdev = 0.228
  CI (99.9%): [13.189, 13.676] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest
# Parameters: (algorithm = SHA, provider = SUN, size = 4096)

# Run progress: 65.38% complete, ETA 00:45:06
# Fork: 1 of 3
# Warmup Iteration   1: 13.346 us/op
# Warmup Iteration   2: 13.899 us/op
# Warmup Iteration   3: 13.392 us/op
# Warmup Iteration   4: 13.394 us/op
# Warmup Iteration   5: 13.352 us/op
Iteration   1: 13.364 us/op
Iteration   2: 13.392 us/op
Iteration   3: 13.404 us/op
Iteration   4: 13.350 us/op
Iteration   5: 13.369 us/op

# Run progress: 66.67% complete, ETA 00:43:25
# Fork: 2 of 3
# Warmup Iteration   1: 13.755 us/op
# Warmup Iteration   2: 13.219 us/op
# Warmup Iteration   3: 13.189 us/op
# Warmup Iteration   4: 13.206 us/op
# Warmup Iteration   5: 13.206 us/op
Iteration   1: 13.202 us/op
Iteration   2: 13.182 us/op
Iteration   3: 13.163 us/op
Iteration   4: 13.196 us/op
Iteration   5: 13.209 us/op

# Run progress: 67.95% complete, ETA 00:41:45
# Fork: 3 of 3
# Warmup Iteration   1: 14.272 us/op
# Warmup Iteration   2: 13.813 us/op
# Warmup Iteration   3: 13.834 us/op
# Warmup Iteration   4: 13.810 us/op
# Warmup Iteration   5: 13.767 us/op
Iteration   1: 13.788 us/op
Iteration   2: 13.777 us/op
Iteration   3: 13.767 us/op
Iteration   4: 13.764 us/op
Iteration   5: 13.764 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest":
  13.446 ±(99.9%) 0.269 us/op [Average]
  (min, avg, max) = (13.163, 13.446, 13.788), stdev = 0.251
  CI (99.9%): [13.177, 13.715] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest
# Parameters: (algorithm = SHA-512, provider = DEFAULT, size = 4096)

# Run progress: 69.23% complete, ETA 00:40:05
# Fork: 1 of 3
# Warmup Iteration   1: 6.985 us/op
# Warmup Iteration   2: 7.465 us/op
# Warmup Iteration   3: 7.425 us/op
# Warmup Iteration   4: 7.382 us/op
# Warmup Iteration   5: 7.358 us/op
Iteration   1: 7.392 us/op
Iteration   2: 7.381 us/op
Iteration   3: 7.364 us/op
Iteration   4: 7.359 us/op
Iteration   5: 7.330 us/op

# Run progress: 70.51% complete, ETA 00:38:25
# Fork: 2 of 3
# Warmup Iteration   1: 7.123 us/op
# Warmup Iteration   2: 6.954 us/op
# Warmup Iteration   3: 6.976 us/op
# Warmup Iteration   4: 6.985 us/op
# Warmup Iteration   5: 6.995 us/op
Iteration   1: 7.039 us/op
Iteration   2: 7.083 us/op
Iteration   3: 7.090 us/op
Iteration   4: 7.019 us/op
Iteration   5: 7.476 us/op

# Run progress: 71.79% complete, ETA 00:36:45
# Fork: 3 of 3
# Warmup Iteration   1: 7.037 us/op
# Warmup Iteration   2: 7.493 us/op
# Warmup Iteration   3: 7.523 us/op
# Warmup Iteration   4: 7.489 us/op
# Warmup Iteration   5: 7.442 us/op
Iteration   1: 7.111 us/op
Iteration   2: 7.140 us/op
Iteration   3: 7.165 us/op
Iteration   4: 7.170 us/op
Iteration   5: 7.134 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest":
  7.217 ±(99.9%) 0.160 us/op [Average]
  (min, avg, max) = (7.019, 7.217, 7.476), stdev = 0.149
  CI (99.9%): [7.057, 7.377] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest
# Parameters: (algorithm = SHA-512, provider = SUN, size = 4096)

# Run progress: 73.08% complete, ETA 00:35:04
# Fork: 1 of 3
# Warmup Iteration   1: 7.025 us/op
# Warmup Iteration   2: 7.448 us/op
# Warmup Iteration   3: 7.008 us/op
# Warmup Iteration   4: 6.998 us/op
# Warmup Iteration   5: 7.017 us/op
Iteration   1: 7.004 us/op
Iteration   2: 7.019 us/op
Iteration   3: 7.021 us/op
Iteration   4: 7.051 us/op
Iteration   5: 7.036 us/op

# Run progress: 74.36% complete, ETA 00:33:24
# Fork: 2 of 3
# Warmup Iteration   1: 7.559 us/op
# Warmup Iteration   2: 7.100 us/op
# Warmup Iteration   3: 7.104 us/op
# Warmup Iteration   4: 7.073 us/op
# Warmup Iteration   5: 7.074 us/op
Iteration   1: 7.084 us/op
Iteration   2: 7.078 us/op
Iteration   3: 7.100 us/op
Iteration   4: 6.971 us/op
Iteration   5: 7.004 us/op

# Run progress: 75.64% complete, ETA 00:31:44
# Fork: 3 of 3
# Warmup Iteration   1: 7.626 us/op
# Warmup Iteration   2: 7.098 us/op
# Warmup Iteration   3: 7.081 us/op
# Warmup Iteration   4: 7.009 us/op
# Warmup Iteration   5: 7.020 us/op
Iteration   1: 7.037 us/op
Iteration   2: 7.054 us/op
Iteration   3: 7.055 us/op
Iteration   4: 7.045 us/op
Iteration   5: 7.030 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest":
  7.039 ±(99.9%) 0.036 us/op [Average]
  (min, avg, max) = (6.971, 7.039, 7.100), stdev = 0.034
  CI (99.9%): [7.003, 7.075] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest
# Parameters: (algorithm = SHA3-256, provider = DEFAULT, size = 4096)

# Run progress: 76.92% complete, ETA 00:30:04
# Fork: 1 of 3
# Warmup Iteration   1: 24.775 us/op
# Warmup Iteration   2: 25.670 us/op
# Warmup Iteration   3: 24.701 us/op
# Warmup Iteration   4: 24.316 us/op
# Warmup Iteration   5: 24.334 us/op
Iteration   1: 24.323 us/op
Iteration   2: 24.329 us/op
Iteration   3: 24.358 us/op
Iteration   4: 24.367 us/op
Iteration   5: 24.317 us/op

# Run progress: 78.21% complete, ETA 00:28:23
# Fork: 2 of 3
# Warmup Iteration   1: 25.757 us/op
# Warmup Iteration   2: 24.193 us/op
# Warmup Iteration   3: 24.394 us/op
# Warmup Iteration   4: 24.434 us/op
# Warmup Iteration   5: 24.441 us/op
Iteration   1: 24.417 us/op
Iteration   2: 24.846 us/op
Iteration   3: 24.621 us/op
Iteration   4: 24.867 us/op
Iteration   5: 24.941 us/op

# Run progress: 79.49% complete, ETA 00:26:43
# Fork: 3 of 3
# Warmup Iteration   1: 26.202 us/op
# Warmup Iteration   2: 25.967 us/op
# Warmup Iteration   3: 26.347 us/op
# Warmup Iteration   4: 26.922 us/op
# Warmup Iteration   5: 25.127 us/op
Iteration   1: 24.406 us/op
Iteration   2: 24.443 us/op
Iteration   3: 24.385 us/op
Iteration   4: 24.446 us/op
Iteration   5: 24.399 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest":
  24.498 ±(99.9%) 0.229 us/op [Average]
  (min, avg, max) = (24.317, 24.498, 24.941), stdev = 0.214
  CI (99.9%): [24.269, 24.726] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest
# Parameters: (algorithm = SHA3-256, provider = SUN, size = 4096)

# Run progress: 80.77% complete, ETA 00:25:03
# Fork: 1 of 3
# Warmup Iteration   1: 24.430 us/op
# Warmup Iteration   2: 25.970 us/op
# Warmup Iteration   3: 26.119 us/op
# Warmup Iteration   4: 25.969 us/op
# Warmup Iteration   5: 25.903 us/op
Iteration   1: 25.842 us/op
Iteration   2: 25.654 us/op
Iteration   3: 25.678 us/op
Iteration   4: 25.622 us/op
Iteration   5: 25.604 us/op

# Run progress: 82.05% complete, ETA 00:23:23
# Fork: 2 of 3
# Warmup Iteration   1: 24.575 us/op
# Warmup Iteration   2: 25.293 us/op
# Warmup Iteration   3: 25.499 us/op
# Warmup Iteration   4: 24.550 us/op
# Warmup Iteration   5: 24.652 us/op
Iteration   1: 24.710 us/op
Iteration   2: 24.685 us/op
Iteration   3: 24.681 us/op
Iteration   4: 24.722 us/op
Iteration   5: 24.338 us/op

# Run progress: 83.33% complete, ETA 00:21:42
# Fork: 3 of 3
# Warmup Iteration   1: 26.032 us/op
# Warmup Iteration   2: 25.486 us/op
# Warmup Iteration   3: 25.659 us/op
# Warmup Iteration   4: 25.545 us/op
# Warmup Iteration   5: 25.541 us/op
Iteration   1: 25.718 us/op
Iteration   2: 25.762 us/op
Iteration   3: 25.535 us/op
Iteration   4: 25.465 us/op
Iteration   5: 25.460 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest":
  25.298 ±(99.9%) 0.544 us/op [Average]
  (min, avg, max) = (24.338, 25.298, 25.842), stdev = 0.509
  CI (99.9%): [24.755, 25.842] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest
# Parameters: (algorithm = SHA3-384, provider = DEFAULT, size = 4096)

# Run progress: 84.62% complete, ETA 00:20:02
# Fork: 1 of 3
# Warmup Iteration   1: 30.753 us/op
# Warmup Iteration   2: 32.488 us/op
# Warmup Iteration   3: 30.749 us/op
# Warmup Iteration   4: 30.756 us/op
# Warmup Iteration   5: 30.726 us/op
Iteration   1: 30.771 us/op
Iteration   2: 30.745 us/op
Iteration   3: 30.701 us/op
Iteration   4: 30.749 us/op
Iteration   5: 30.791 us/op

# Run progress: 85.90% complete, ETA 00:18:22
# Fork: 2 of 3
# Warmup Iteration   1: 33.069 us/op
# Warmup Iteration   2: 32.518 us/op
# Warmup Iteration   3: 32.701 us/op
# Warmup Iteration   4: 32.610 us/op
# Warmup Iteration   5: 32.496 us/op
Iteration   1: 32.511 us/op
Iteration   2: 32.553 us/op
Iteration   3: 30.626 us/op
Iteration   4: 30.690 us/op
Iteration   5: 30.687 us/op

# Run progress: 87.18% complete, ETA 00:16:42
# Fork: 3 of 3
# Warmup Iteration   1: 31.642 us/op
# Warmup Iteration   2: 31.830 us/op
# Warmup Iteration   3: 31.649 us/op
# Warmup Iteration   4: 31.679 us/op
# Warmup Iteration   5: 31.664 us/op
Iteration   1: 31.703 us/op
Iteration   2: 31.698 us/op
Iteration   3: 31.692 us/op
Iteration   4: 31.733 us/op
Iteration   5: 31.714 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest":
  31.291 ±(99.9%) 0.733 us/op [Average]
  (min, avg, max) = (30.626, 31.291, 32.553), stdev = 0.685
  CI (99.9%): [30.558, 32.024] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest
# Parameters: (algorithm = SHA3-384, provider = SUN, size = 4096)

# Run progress: 88.46% complete, ETA 00:15:02
# Fork: 1 of 3
# Warmup Iteration   1: 30.967 us/op
# Warmup Iteration   2: 31.159 us/op
# Warmup Iteration   3: 31.277 us/op
# Warmup Iteration   4: 31.274 us/op
# Warmup Iteration   5: 31.259 us/op
Iteration   1: 31.246 us/op
Iteration   2: 32.461 us/op
Iteration   3: 33.124 us/op
Iteration   4: 33.142 us/op
Iteration   5: 32.537 us/op

# Run progress: 89.74% complete, ETA 00:13:21
# Fork: 2 of 3
# Warmup Iteration   1: 30.738 us/op
# Warmup Iteration   2: 32.755 us/op
# Warmup Iteration   3: 32.800 us/op
# Warmup Iteration   4: 31.394 us/op
# Warmup Iteration   5: 31.401 us/op
Iteration   1: 31.428 us/op
Iteration   2: 31.432 us/op
Iteration   3: 31.421 us/op
Iteration   4: 31.414 us/op
Iteration   5: 31.425 us/op

# Run progress: 91.03% complete, ETA 00:11:41
# Fork: 3 of 3
# Warmup Iteration   1: 31.592 us/op
# Warmup Iteration   2: 30.991 us/op
# Warmup Iteration   3: 31.036 us/op
# Warmup Iteration   4: 31.067 us/op
# Warmup Iteration   5: 33.233 us/op
Iteration   1: 33.099 us/op
Iteration   2: 31.499 us/op
Iteration   3: 31.539 us/op
Iteration   4: 31.560 us/op
Iteration   5: 31.552 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest":
  31.925 ±(99.9%) 0.771 us/op [Average]
  (min, avg, max) = (31.246, 31.925, 33.142), stdev = 0.721
  CI (99.9%): [31.155, 32.696] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest
# Parameters: (algorithm = SHA3-224, provider = DEFAULT, size = 4096)

# Run progress: 92.31% complete, ETA 00:10:01
# Fork: 1 of 3
# Warmup Iteration   1: 24.299 us/op
# Warmup Iteration   2: 22.812 us/op
# Warmup Iteration   3: 22.982 us/op
# Warmup Iteration   4: 22.999 us/op
# Warmup Iteration   5: 22.887 us/op
Iteration   1: 22.956 us/op
Iteration   2: 22.846 us/op
Iteration   3: 22.947 us/op
Iteration   4: 24.736 us/op
Iteration   5: 24.761 us/op

# Run progress: 93.59% complete, ETA 00:08:21
# Fork: 2 of 3
# Warmup Iteration   1: 22.965 us/op
# Warmup Iteration   2: 22.843 us/op
# Warmup Iteration   3: 22.869 us/op
# Warmup Iteration   4: 22.861 us/op
# Warmup Iteration   5: 22.886 us/op
Iteration   1: 22.843 us/op
Iteration   2: 24.350 us/op
Iteration   3: 24.479 us/op
Iteration   4: 24.358 us/op
Iteration   5: 24.237 us/op

# Run progress: 94.87% complete, ETA 00:06:40
# Fork: 3 of 3
# Warmup Iteration   1: 24.090 us/op
# Warmup Iteration   2: 23.971 us/op
# Warmup Iteration   3: 24.057 us/op
# Warmup Iteration   4: 24.075 us/op
# Warmup Iteration   5: 24.056 us/op
Iteration   1: 24.062 us/op
Iteration   2: 24.066 us/op
Iteration   3: 24.036 us/op
Iteration   4: 22.693 us/op
Iteration   5: 22.802 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest":
  23.745 ±(99.9%) 0.843 us/op [Average]
  (min, avg, max) = (22.693, 23.745, 24.761), stdev = 0.788
  CI (99.9%): [22.902, 24.588] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest
# Parameters: (algorithm = SHA3-224, provider = SUN, size = 4096)

# Run progress: 96.15% complete, ETA 00:05:00
# Fork: 1 of 3
# Warmup Iteration   1: 24.394 us/op
# Warmup Iteration   2: 23.221 us/op
# Warmup Iteration   3: 23.275 us/op
# Warmup Iteration   4: 23.295 us/op
# Warmup Iteration   5: 23.283 us/op
Iteration   1: 23.292 us/op
Iteration   2: 23.995 us/op
Iteration   3: 24.030 us/op
Iteration   4: 24.005 us/op
Iteration   5: 24.010 us/op

# Run progress: 97.44% complete, ETA 00:03:20
# Fork: 2 of 3
# Warmup Iteration   1: 24.182 us/op
# Warmup Iteration   2: 22.718 us/op
# Warmup Iteration   3: 22.794 us/op
# Warmup Iteration   4: 22.801 us/op
# Warmup Iteration   5: 22.787 us/op
Iteration   1: 24.393 us/op
Iteration   2: 24.260 us/op
Iteration   3: 24.219 us/op
Iteration   4: 24.176 us/op
Iteration   5: 24.128 us/op

# Run progress: 98.72% complete, ETA 00:01:40
# Fork: 3 of 3
# Warmup Iteration   1: 24.015 us/op
# Warmup Iteration   2: 23.957 us/op
# Warmup Iteration   3: 24.130 us/op
# Warmup Iteration   4: 24.110 us/op
# Warmup Iteration   5: 24.110 us/op
Iteration   1: 24.138 us/op
Iteration   2: 24.077 us/op
Iteration   3: 24.074 us/op
Iteration   4: 23.966 us/op
Iteration   5: 23.994 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.MessageDigestBenchmark.message_digest":
  24.050 ±(99.9%) 0.258 us/op [Average]
  (min, avg, max) = (23.292, 24.050, 24.393), stdev = 0.241
  CI (99.9%): [23.793, 24.308] (assumes normal distribution)


# Run complete. Total time: 02:10:17

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                              (algorithm)  (provider)  (size)  Mode  Cnt    Score   Error  Units
MessageDigestBenchmark.message_digest          MD2     DEFAULT    4096  avgt   15  347.845 ± 0.195  us/op
MessageDigestBenchmark.message_digest          MD2         SUN    4096  avgt   15  348.663 ± 3.634  us/op
MessageDigestBenchmark.message_digest          MD5     DEFAULT    4096  avgt   15    9.244 ± 0.148  us/op
MessageDigestBenchmark.message_digest          MD5         SUN    4096  avgt   15    9.156 ± 0.024  us/op
MessageDigestBenchmark.message_digest      SHA-224     DEFAULT    4096  avgt   15    9.762 ± 0.202  us/op
MessageDigestBenchmark.message_digest      SHA-224         SUN    4096  avgt   15    9.737 ± 0.174  us/op
MessageDigestBenchmark.message_digest  SHA-512/224     DEFAULT    4096  avgt   15    7.243 ± 0.151  us/op
MessageDigestBenchmark.message_digest  SHA-512/224         SUN    4096  avgt   15    7.198 ± 0.187  us/op
MessageDigestBenchmark.message_digest      SHA-256     DEFAULT    4096  avgt   15    9.809 ± 0.237  us/op
MessageDigestBenchmark.message_digest      SHA-256         SUN    4096  avgt   15    9.797 ± 0.242  us/op
MessageDigestBenchmark.message_digest      SHA-384     DEFAULT    4096  avgt   15    7.213 ± 0.166  us/op
MessageDigestBenchmark.message_digest      SHA-384         SUN    4096  avgt   15    7.079 ± 0.013  us/op
MessageDigestBenchmark.message_digest     SHA3-512     DEFAULT    4096  avgt   15   44.220 ± 0.828  us/op
MessageDigestBenchmark.message_digest     SHA3-512         SUN    4096  avgt   15   44.011 ± 0.387  us/op
MessageDigestBenchmark.message_digest  SHA-512/256     DEFAULT    4096  avgt   15    7.314 ± 0.167  us/op
MessageDigestBenchmark.message_digest  SHA-512/256         SUN    4096  avgt   15    7.163 ± 0.185  us/op
MessageDigestBenchmark.message_digest          SHA     DEFAULT    4096  avgt   15   13.433 ± 0.243  us/op
MessageDigestBenchmark.message_digest          SHA         SUN    4096  avgt   15   13.446 ± 0.269  us/op
MessageDigestBenchmark.message_digest      SHA-512     DEFAULT    4096  avgt   15    7.217 ± 0.160  us/op
MessageDigestBenchmark.message_digest      SHA-512         SUN    4096  avgt   15    7.039 ± 0.036  us/op
MessageDigestBenchmark.message_digest     SHA3-256     DEFAULT    4096  avgt   15   24.498 ± 0.229  us/op
MessageDigestBenchmark.message_digest     SHA3-256         SUN    4096  avgt   15   25.298 ± 0.544  us/op
MessageDigestBenchmark.message_digest     SHA3-384     DEFAULT    4096  avgt   15   31.291 ± 0.733  us/op
MessageDigestBenchmark.message_digest     SHA3-384         SUN    4096  avgt   15   31.925 ± 0.771  us/op
MessageDigestBenchmark.message_digest     SHA3-224     DEFAULT    4096  avgt   15   23.745 ± 0.843  us/op
MessageDigestBenchmark.message_digest     SHA3-224         SUN    4096  avgt   15   24.050 ± 0.258  us/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_c1_c2_jit/MessageDigestBenchmark.json
Running java  -jar benchmarks/target/benchmarks.jar .*LogRecordBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_c1_c2_jit/LogRecordBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.escape_lambda
# Parameters: (aBoolean = true, aInt = 42, aString = P1, theLevel = INFO)

# Run progress: 0.00% complete, ETA 01:10:00
# Fork: 1 of 3
# Warmup Iteration   1: 11306.430 ns/op
# Warmup Iteration   2: 10595.671 ns/op
# Warmup Iteration   3: 10665.743 ns/op
# Warmup Iteration   4: 10612.036 ns/op
# Warmup Iteration   5: 10470.896 ns/op
Iteration   1: 10467.613 ns/op
Iteration   2: 10976.665 ns/op
Iteration   3: 10318.412 ns/op
Iteration   4: 10281.651 ns/op
Iteration   5: 11007.243 ns/op

# Run progress: 2.38% complete, ETA 01:08:30
# Fork: 2 of 3
# Warmup Iteration   1: 12220.920 ns/op
# Warmup Iteration   2: 11350.913 ns/op
# Warmup Iteration   3: 11134.385 ns/op
# Warmup Iteration   4: 11283.377 ns/op
# Warmup Iteration   5: 10883.761 ns/op
Iteration   1: 10666.531 ns/op
Iteration   2: 10988.136 ns/op
Iteration   3: 11228.865 ns/op
Iteration   4: 11034.243 ns/op
Iteration   5: 11240.227 ns/op

# Run progress: 4.76% complete, ETA 01:06:50
# Fork: 3 of 3
# Warmup Iteration   1: 12124.275 ns/op
# Warmup Iteration   2: 10705.604 ns/op
# Warmup Iteration   3: 10396.352 ns/op
# Warmup Iteration   4: 11078.466 ns/op
# Warmup Iteration   5: 10993.535 ns/op
Iteration   1: 10582.734 ns/op
Iteration   2: 11058.720 ns/op
Iteration   3: 10828.990 ns/op
Iteration   4: 10700.803 ns/op
Iteration   5: 10647.242 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.escape_lambda":
  10801.872 ±(99.9%) 328.161 ns/op [Average]
  (min, avg, max) = (10281.651, 10801.872, 11240.227), stdev = 306.962
  CI (99.9%): [10473.710, 11130.033] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.escape_lambda
# Parameters: (aBoolean = true, aInt = 42, aString = P1, theLevel = FINE)

# Run progress: 7.14% complete, ETA 01:05:10
# Fork: 1 of 3
# Warmup Iteration   1: 108.080 ns/op
# Warmup Iteration   2: 110.009 ns/op
# Warmup Iteration   3: 107.811 ns/op
# Warmup Iteration   4: 107.852 ns/op
# Warmup Iteration   5: 110.840 ns/op
Iteration   1: 111.986 ns/op
Iteration   2: 109.364 ns/op
Iteration   3: 109.386 ns/op
Iteration   4: 104.615 ns/op
Iteration   5: 104.674 ns/op

# Run progress: 9.52% complete, ETA 01:03:30
# Fork: 2 of 3
# Warmup Iteration   1: 113.435 ns/op
# Warmup Iteration   2: 109.606 ns/op
# Warmup Iteration   3: 105.828 ns/op
# Warmup Iteration   4: 110.272 ns/op
# Warmup Iteration   5: 111.533 ns/op
Iteration   1: 107.752 ns/op
Iteration   2: 112.728 ns/op
Iteration   3: 108.653 ns/op
Iteration   4: 104.670 ns/op
Iteration   5: 108.485 ns/op

# Run progress: 11.90% complete, ETA 01:01:49
# Fork: 3 of 3
# Warmup Iteration   1: 108.596 ns/op
# Warmup Iteration   2: 109.154 ns/op
# Warmup Iteration   3: 106.174 ns/op
# Warmup Iteration   4: 109.053 ns/op
# Warmup Iteration   5: 108.690 ns/op
Iteration   1: 111.087 ns/op
Iteration   2: 110.183 ns/op
Iteration   3: 108.972 ns/op
Iteration   4: 108.966 ns/op
Iteration   5: 110.166 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.escape_lambda":
  108.779 ±(99.9%) 2.682 ns/op [Average]
  (min, avg, max) = (104.615, 108.779, 112.728), stdev = 2.509
  CI (99.9%): [106.097, 111.461] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_parametrized
# Parameters: (aBoolean = true, aInt = 42, aString = P1, theLevel = INFO)

# Run progress: 14.29% complete, ETA 01:00:09
# Fork: 1 of 3
# Warmup Iteration   1: 15466.245 ns/op
# Warmup Iteration   2: 13122.456 ns/op
# Warmup Iteration   3: 13193.486 ns/op
# Warmup Iteration   4: 13832.149 ns/op
# Warmup Iteration   5: 13627.435 ns/op
Iteration   1: 13673.567 ns/op
Iteration   2: 12877.053 ns/op
Iteration   3: 13538.243 ns/op
Iteration   4: 13375.388 ns/op
Iteration   5: 13387.576 ns/op

# Run progress: 16.67% complete, ETA 00:58:29
# Fork: 2 of 3
# Warmup Iteration   1: 15629.172 ns/op
# Warmup Iteration   2: 12917.505 ns/op
# Warmup Iteration   3: 13707.957 ns/op
# Warmup Iteration   4: 13212.112 ns/op
# Warmup Iteration   5: 13316.761 ns/op
Iteration   1: 12904.476 ns/op
Iteration   2: 12928.882 ns/op
Iteration   3: 12973.258 ns/op
Iteration   4: 13013.352 ns/op
Iteration   5: 13559.705 ns/op

# Run progress: 19.05% complete, ETA 00:56:48
# Fork: 3 of 3
# Warmup Iteration   1: 14646.530 ns/op
# Warmup Iteration   2: 12933.094 ns/op
# Warmup Iteration   3: 12825.158 ns/op
# Warmup Iteration   4: 12834.897 ns/op
# Warmup Iteration   5: 12895.186 ns/op
Iteration   1: 13398.681 ns/op
Iteration   2: 12701.037 ns/op
Iteration   3: 12854.505 ns/op
Iteration   4: 12886.988 ns/op
Iteration   5: 12662.479 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_parametrized":
  13115.679 ±(99.9%) 358.398 ns/op [Average]
  (min, avg, max) = (12662.479, 13115.679, 13673.567), stdev = 335.245
  CI (99.9%): [12757.282, 13474.077] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_parametrized
# Parameters: (aBoolean = true, aInt = 42, aString = P1, theLevel = FINE)

# Run progress: 21.43% complete, ETA 00:55:08
# Fork: 1 of 3
# Warmup Iteration   1: 80.948 ns/op
# Warmup Iteration   2: 82.243 ns/op
# Warmup Iteration   3: 80.450 ns/op
# Warmup Iteration   4: 79.434 ns/op
# Warmup Iteration   5: 80.466 ns/op
Iteration   1: 80.898 ns/op
Iteration   2: 81.563 ns/op
Iteration   3: 80.294 ns/op
Iteration   4: 78.143 ns/op
Iteration   5: 77.741 ns/op

# Run progress: 23.81% complete, ETA 00:53:28
# Fork: 2 of 3
# Warmup Iteration   1: 81.404 ns/op
# Warmup Iteration   2: 80.517 ns/op
# Warmup Iteration   3: 84.011 ns/op
# Warmup Iteration   4: 82.067 ns/op
# Warmup Iteration   5: 83.184 ns/op
Iteration   1: 83.147 ns/op
Iteration   2: 80.872 ns/op
Iteration   3: 82.587 ns/op
Iteration   4: 82.378 ns/op
Iteration   5: 83.291 ns/op

# Run progress: 26.19% complete, ETA 00:51:47
# Fork: 3 of 3
# Warmup Iteration   1: 84.739 ns/op
# Warmup Iteration   2: 82.969 ns/op
# Warmup Iteration   3: 81.389 ns/op
# Warmup Iteration   4: 80.016 ns/op
# Warmup Iteration   5: 81.682 ns/op
Iteration   1: 81.420 ns/op
Iteration   2: 81.206 ns/op
Iteration   3: 80.588 ns/op
Iteration   4: 82.684 ns/op
Iteration   5: 83.199 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_parametrized":
  81.334 ±(99.9%) 1.813 ns/op [Average]
  (min, avg, max) = (77.741, 81.334, 83.291), stdev = 1.696
  CI (99.9%): [79.521, 83.148] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_unparametrized
# Parameters: (aBoolean = true, aInt = 42, aString = P1, theLevel = INFO)

# Run progress: 28.57% complete, ETA 00:50:07
# Fork: 1 of 3
# Warmup Iteration   1: 12182.964 ns/op
# Warmup Iteration   2: 10819.372 ns/op
# Warmup Iteration   3: 10917.016 ns/op
# Warmup Iteration   4: 11003.183 ns/op
# Warmup Iteration   5: 10660.796 ns/op
Iteration   1: 11113.856 ns/op
Iteration   2: 10920.189 ns/op
Iteration   3: 10400.399 ns/op
Iteration   4: 10567.133 ns/op
Iteration   5: 10866.318 ns/op

# Run progress: 30.95% complete, ETA 00:48:27
# Fork: 2 of 3
# Warmup Iteration   1: 11669.044 ns/op
# Warmup Iteration   2: 11168.310 ns/op
# Warmup Iteration   3: 10777.477 ns/op
# Warmup Iteration   4: 10487.409 ns/op
# Warmup Iteration   5: 10457.973 ns/op
Iteration   1: 10982.128 ns/op
Iteration   2: 10846.420 ns/op
Iteration   3: 10871.247 ns/op
Iteration   4: 10739.180 ns/op
Iteration   5: 10999.638 ns/op

# Run progress: 33.33% complete, ETA 00:46:47
# Fork: 3 of 3
# Warmup Iteration   1: 11771.544 ns/op
# Warmup Iteration   2: 10552.178 ns/op
# Warmup Iteration   3: 10466.397 ns/op
# Warmup Iteration   4: 10462.408 ns/op
# Warmup Iteration   5: 10646.332 ns/op
Iteration   1: 10620.512 ns/op
Iteration   2: 11038.412 ns/op
Iteration   3: 10983.504 ns/op
Iteration   4: 10204.262 ns/op
Iteration   5: 10595.954 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_unparametrized":
  10783.277 ±(99.9%) 275.579 ns/op [Average]
  (min, avg, max) = (10204.262, 10783.277, 11113.856), stdev = 257.777
  CI (99.9%): [10507.697, 11058.856] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_unparametrized
# Parameters: (aBoolean = true, aInt = 42, aString = P1, theLevel = FINE)

# Run progress: 35.71% complete, ETA 00:45:06
# Fork: 1 of 3
# Warmup Iteration   1: 109.970 ns/op
# Warmup Iteration   2: 108.259 ns/op
# Warmup Iteration   3: 109.314 ns/op
# Warmup Iteration   4: 107.342 ns/op
# Warmup Iteration   5: 106.573 ns/op
Iteration   1: 107.557 ns/op
Iteration   2: 107.598 ns/op
Iteration   3: 109.577 ns/op
Iteration   4: 108.863 ns/op
Iteration   5: 109.494 ns/op

# Run progress: 38.10% complete, ETA 00:43:26
# Fork: 2 of 3
# Warmup Iteration   1: 110.414 ns/op
# Warmup Iteration   2: 110.423 ns/op
# Warmup Iteration   3: 112.739 ns/op
# Warmup Iteration   4: 112.566 ns/op
# Warmup Iteration   5: 109.585 ns/op
Iteration   1: 108.861 ns/op
Iteration   2: 109.434 ns/op
Iteration   3: 108.131 ns/op
Iteration   4: 108.108 ns/op
Iteration   5: 112.697 ns/op

# Run progress: 40.48% complete, ETA 00:41:46
# Fork: 3 of 3
# Warmup Iteration   1: 111.167 ns/op
# Warmup Iteration   2: 112.138 ns/op
# Warmup Iteration   3: 114.184 ns/op
# Warmup Iteration   4: 111.269 ns/op
# Warmup Iteration   5: 110.309 ns/op
Iteration   1: 110.492 ns/op
Iteration   2: 107.445 ns/op
Iteration   3: 108.545 ns/op
Iteration   4: 107.766 ns/op
Iteration   5: 111.274 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_unparametrized":
  109.056 ±(99.9%) 1.605 ns/op [Average]
  (min, avg, max) = (107.445, 109.056, 112.697), stdev = 1.502
  CI (99.9%): [107.451, 110.662] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.no_escape_lambda
# Parameters: (aBoolean = true, aInt = 42, aString = P1, theLevel = INFO)

# Run progress: 42.86% complete, ETA 00:40:06
# Fork: 1 of 3
# Warmup Iteration   1: 12306.939 ns/op
# Warmup Iteration   2: 10854.275 ns/op
# Warmup Iteration   3: 11011.119 ns/op
# Warmup Iteration   4: 10734.320 ns/op
# Warmup Iteration   5: 10496.281 ns/op
Iteration   1: 10887.287 ns/op
Iteration   2: 10779.673 ns/op
Iteration   3: 10769.846 ns/op
Iteration   4: 10774.733 ns/op
Iteration   5: 10806.766 ns/op

# Run progress: 45.24% complete, ETA 00:38:25
# Fork: 2 of 3
# Warmup Iteration   1: 12097.860 ns/op
# Warmup Iteration   2: 11110.907 ns/op
# Warmup Iteration   3: 10932.774 ns/op
# Warmup Iteration   4: 11001.163 ns/op
# Warmup Iteration   5: 11289.620 ns/op
Iteration   1: 10482.429 ns/op
Iteration   2: 10746.829 ns/op
Iteration   3: 10839.046 ns/op
Iteration   4: 10838.410 ns/op
Iteration   5: 11177.012 ns/op

# Run progress: 47.62% complete, ETA 00:36:45
# Fork: 3 of 3
# Warmup Iteration   1: 11651.781 ns/op
# Warmup Iteration   2: 10570.096 ns/op
# Warmup Iteration   3: 10887.854 ns/op
# Warmup Iteration   4: 10668.700 ns/op
# Warmup Iteration   5: 11035.566 ns/op
Iteration   1: 10777.119 ns/op
Iteration   2: 10543.833 ns/op
Iteration   3: 10550.149 ns/op
Iteration   4: 10765.491 ns/op
Iteration   5: 10987.152 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.no_escape_lambda":
  10781.718 ±(99.9%) 184.773 ns/op [Average]
  (min, avg, max) = (10482.429, 10781.718, 11177.012), stdev = 172.837
  CI (99.9%): [10596.945, 10966.491] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.no_escape_lambda
# Parameters: (aBoolean = true, aInt = 42, aString = P1, theLevel = FINE)

# Run progress: 50.00% complete, ETA 00:35:05
# Fork: 1 of 3
# Warmup Iteration   1: 115.505 ns/op
# Warmup Iteration   2: 116.586 ns/op
# Warmup Iteration   3: 117.275 ns/op
# Warmup Iteration   4: 115.509 ns/op
# Warmup Iteration   5: 115.642 ns/op
Iteration   1: 114.270 ns/op
Iteration   2: 116.457 ns/op
Iteration   3: 113.991 ns/op
Iteration   4: 112.754 ns/op
Iteration   5: 113.394 ns/op

# Run progress: 52.38% complete, ETA 00:33:25
# Fork: 2 of 3
# Warmup Iteration   1: 114.126 ns/op
# Warmup Iteration   2: 114.541 ns/op
# Warmup Iteration   3: 117.154 ns/op
# Warmup Iteration   4: 112.097 ns/op
# Warmup Iteration   5: 117.869 ns/op
Iteration   1: 113.969 ns/op
Iteration   2: 115.172 ns/op
Iteration   3: 117.727 ns/op
Iteration   4: 114.888 ns/op
Iteration   5: 114.234 ns/op

# Run progress: 54.76% complete, ETA 00:31:44
# Fork: 3 of 3
# Warmup Iteration   1: 114.695 ns/op
# Warmup Iteration   2: 116.826 ns/op
# Warmup Iteration   3: 123.211 ns/op
# Warmup Iteration   4: 115.600 ns/op
# Warmup Iteration   5: 119.541 ns/op
Iteration   1: 123.088 ns/op
Iteration   2: 120.053 ns/op
Iteration   3: 118.936 ns/op
Iteration   4: 122.091 ns/op
Iteration   5: 122.690 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.no_escape_lambda":
  116.914 ±(99.9%) 3.847 ns/op [Average]
  (min, avg, max) = (112.754, 116.914, 123.088), stdev = 3.599
  CI (99.9%): [113.067, 120.762] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.string_format
# Parameters: (aBoolean = true, aInt = 42, aString = P1, theLevel = INFO)

# Run progress: 57.14% complete, ETA 00:30:04
# Fork: 1 of 3
# Warmup Iteration   1: 13232.143 ns/op
# Warmup Iteration   2: 12449.410 ns/op
# Warmup Iteration   3: 12018.077 ns/op
# Warmup Iteration   4: 11905.141 ns/op
# Warmup Iteration   5: 11874.617 ns/op
Iteration   1: 12397.460 ns/op
Iteration   2: 12363.643 ns/op
Iteration   3: 11760.096 ns/op
Iteration   4: 12263.614 ns/op
Iteration   5: 12228.971 ns/op

# Run progress: 59.52% complete, ETA 00:28:24
# Fork: 2 of 3
# Warmup Iteration   1: 13081.671 ns/op
# Warmup Iteration   2: 12528.822 ns/op
# Warmup Iteration   3: 11981.497 ns/op
# Warmup Iteration   4: 11915.745 ns/op
# Warmup Iteration   5: 12323.322 ns/op
Iteration   1: 12513.874 ns/op
Iteration   2: 11676.452 ns/op
Iteration   3: 11913.224 ns/op
Iteration   4: 11973.023 ns/op
Iteration   5: 11915.535 ns/op

# Run progress: 61.90% complete, ETA 00:26:44
# Fork: 3 of 3
# Warmup Iteration   1: 12713.753 ns/op
# Warmup Iteration   2: 12304.593 ns/op
# Warmup Iteration   3: 12117.912 ns/op
# Warmup Iteration   4: 12240.161 ns/op
# Warmup Iteration   5: 12568.953 ns/op
Iteration   1: 11904.173 ns/op
Iteration   2: 11946.917 ns/op
Iteration   3: 11979.689 ns/op
Iteration   4: 11996.071 ns/op
Iteration   5: 12004.786 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.string_format":
  12055.835 ±(99.9%) 258.652 ns/op [Average]
  (min, avg, max) = (11676.452, 12055.835, 12513.874), stdev = 241.944
  CI (99.9%): [11797.183, 12314.488] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.string_format
# Parameters: (aBoolean = true, aInt = 42, aString = P1, theLevel = FINE)

# Run progress: 64.29% complete, ETA 00:25:03
# Fork: 1 of 3
# Warmup Iteration   1: 1199.643 ns/op
# Warmup Iteration   2: 1076.025 ns/op
# Warmup Iteration   3: 1101.198 ns/op
# Warmup Iteration   4: 1147.741 ns/op
# Warmup Iteration   5: 1133.568 ns/op
Iteration   1: 1107.808 ns/op
Iteration   2: 1125.639 ns/op
Iteration   3: 1136.317 ns/op
Iteration   4: 1118.051 ns/op
Iteration   5: 1121.332 ns/op

# Run progress: 66.67% complete, ETA 00:23:23
# Fork: 2 of 3
# Warmup Iteration   1: 1187.415 ns/op
# Warmup Iteration   2: 1162.371 ns/op
# Warmup Iteration   3: 1137.515 ns/op
# Warmup Iteration   4: 1149.629 ns/op
# Warmup Iteration   5: 1179.463 ns/op
Iteration   1: 1153.690 ns/op
Iteration   2: 1186.688 ns/op
Iteration   3: 1170.885 ns/op
Iteration   4: 1148.688 ns/op
Iteration   5: 1206.796 ns/op

# Run progress: 69.05% complete, ETA 00:21:43
# Fork: 3 of 3
# Warmup Iteration   1: 1200.096 ns/op
# Warmup Iteration   2: 1159.028 ns/op
# Warmup Iteration   3: 1146.108 ns/op
# Warmup Iteration   4: 1133.531 ns/op
# Warmup Iteration   5: 1155.674 ns/op
Iteration   1: 1132.453 ns/op
Iteration   2: 1162.977 ns/op
Iteration   3: 1139.066 ns/op
Iteration   4: 1170.934 ns/op
Iteration   5: 1143.240 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.string_format":
  1148.304 ±(99.9%) 29.226 ns/op [Average]
  (min, avg, max) = (1107.808, 1148.304, 1206.796), stdev = 27.338
  CI (99.9%): [1119.078, 1177.531] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_parametrized
# Parameters: (aBoolean = true, aInt = 42, aString = P1, theLevel = INFO)

# Run progress: 71.43% complete, ETA 00:20:03
# Fork: 1 of 3
# Warmup Iteration   1: 14040.781 ns/op
# Warmup Iteration   2: 12715.709 ns/op
# Warmup Iteration   3: 12325.389 ns/op
# Warmup Iteration   4: 12585.898 ns/op
# Warmup Iteration   5: 12644.679 ns/op
Iteration   1: 13085.677 ns/op
Iteration   2: 12882.242 ns/op
Iteration   3: 13129.419 ns/op
Iteration   4: 12698.797 ns/op
Iteration   5: 12818.455 ns/op

# Run progress: 73.81% complete, ETA 00:18:22
# Fork: 2 of 3
# Warmup Iteration   1: 14248.334 ns/op
# Warmup Iteration   2: 12943.882 ns/op
# Warmup Iteration   3: 12946.931 ns/op
# Warmup Iteration   4: 13337.974 ns/op
# Warmup Iteration   5: 12733.009 ns/op
Iteration   1: 13321.929 ns/op
Iteration   2: 13089.844 ns/op
Iteration   3: 13517.075 ns/op
Iteration   4: 12971.593 ns/op
Iteration   5: 13308.866 ns/op

# Run progress: 76.19% complete, ETA 00:16:42
# Fork: 3 of 3
# Warmup Iteration   1: 13772.933 ns/op
# Warmup Iteration   2: 13194.545 ns/op
# Warmup Iteration   3: 13072.122 ns/op
# Warmup Iteration   4: 13180.432 ns/op
# Warmup Iteration   5: 13157.774 ns/op
Iteration   1: 13163.026 ns/op
Iteration   2: 12718.523 ns/op
Iteration   3: 12616.603 ns/op
Iteration   4: 12814.115 ns/op
Iteration   5: 13211.207 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_parametrized":
  13023.158 ±(99.9%) 280.068 ns/op [Average]
  (min, avg, max) = (12616.603, 13023.158, 13517.075), stdev = 261.976
  CI (99.9%): [12743.090, 13303.226] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_parametrized
# Parameters: (aBoolean = true, aInt = 42, aString = P1, theLevel = FINE)

# Run progress: 78.57% complete, ETA 00:15:02
# Fork: 1 of 3
# Warmup Iteration   1: 82.162 ns/op
# Warmup Iteration   2: 77.304 ns/op
# Warmup Iteration   3: 77.910 ns/op
# Warmup Iteration   4: 78.474 ns/op
# Warmup Iteration   5: 79.846 ns/op
Iteration   1: 78.028 ns/op
Iteration   2: 78.528 ns/op
Iteration   3: 78.933 ns/op
Iteration   4: 78.667 ns/op
Iteration   5: 78.651 ns/op

# Run progress: 80.95% complete, ETA 00:13:21
# Fork: 2 of 3
# Warmup Iteration   1: 81.105 ns/op
# Warmup Iteration   2: 76.836 ns/op
# Warmup Iteration   3: 74.340 ns/op
# Warmup Iteration   4: 77.217 ns/op
# Warmup Iteration   5: 76.150 ns/op
Iteration   1: 76.441 ns/op
Iteration   2: 73.324 ns/op
Iteration   3: 75.519 ns/op
Iteration   4: 76.453 ns/op
Iteration   5: 76.622 ns/op

# Run progress: 83.33% complete, ETA 00:11:41
# Fork: 3 of 3
# Warmup Iteration   1: 82.002 ns/op
# Warmup Iteration   2: 82.688 ns/op
# Warmup Iteration   3: 78.835 ns/op
# Warmup Iteration   4: 83.395 ns/op
# Warmup Iteration   5: 82.153 ns/op
Iteration   1: 82.508 ns/op
Iteration   2: 82.082 ns/op
Iteration   3: 82.377 ns/op
Iteration   4: 80.503 ns/op
Iteration   5: 83.310 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_parametrized":
  78.796 ±(99.9%) 3.102 ns/op [Average]
  (min, avg, max) = (73.324, 78.796, 83.310), stdev = 2.901
  CI (99.9%): [75.695, 81.898] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_unparametrized
# Parameters: (aBoolean = true, aInt = 42, aString = P1, theLevel = INFO)

# Run progress: 85.71% complete, ETA 00:10:01
# Fork: 1 of 3
# Warmup Iteration   1: 11754.364 ns/op
# Warmup Iteration   2: 11311.604 ns/op
# Warmup Iteration   3: 11141.077 ns/op
# Warmup Iteration   4: 10981.912 ns/op
# Warmup Iteration   5: 11097.549 ns/op
Iteration   1: 10719.443 ns/op
Iteration   2: 11169.488 ns/op
Iteration   3: 11110.659 ns/op
Iteration   4: 11345.719 ns/op
Iteration   5: 10943.333 ns/op

# Run progress: 88.10% complete, ETA 00:08:21
# Fork: 2 of 3
# Warmup Iteration   1: 12102.673 ns/op
# Warmup Iteration   2: 10917.949 ns/op
# Warmup Iteration   3: 10493.042 ns/op
# Warmup Iteration   4: 10222.616 ns/op
# Warmup Iteration   5: 10439.587 ns/op
Iteration   1: 10551.694 ns/op
Iteration   2: 10496.793 ns/op
Iteration   3: 10584.435 ns/op
Iteration   4: 10949.977 ns/op
Iteration   5: 10936.224 ns/op

# Run progress: 90.48% complete, ETA 00:06:41
# Fork: 3 of 3
# Warmup Iteration   1: 12275.998 ns/op
# Warmup Iteration   2: 10447.966 ns/op
# Warmup Iteration   3: 10958.943 ns/op
# Warmup Iteration   4: 10732.203 ns/op
# Warmup Iteration   5: 10675.896 ns/op
Iteration   1: 10305.429 ns/op
Iteration   2: 10595.680 ns/op
Iteration   3: 10692.825 ns/op
Iteration   4: 10897.179 ns/op
Iteration   5: 11033.834 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_unparametrized":
  10822.181 ±(99.9%) 306.872 ns/op [Average]
  (min, avg, max) = (10305.429, 10822.181, 11345.719), stdev = 287.049
  CI (99.9%): [10515.308, 11129.053] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_unparametrized
# Parameters: (aBoolean = true, aInt = 42, aString = P1, theLevel = FINE)

# Run progress: 92.86% complete, ETA 00:05:00
# Fork: 1 of 3
# Warmup Iteration   1: 109.458 ns/op
# Warmup Iteration   2: 110.236 ns/op
# Warmup Iteration   3: 110.377 ns/op
# Warmup Iteration   4: 112.832 ns/op
# Warmup Iteration   5: 108.307 ns/op
Iteration   1: 105.829 ns/op
Iteration   2: 113.345 ns/op
Iteration   3: 109.136 ns/op
Iteration   4: 107.759 ns/op
Iteration   5: 106.458 ns/op

# Run progress: 95.24% complete, ETA 00:03:20
# Fork: 2 of 3
# Warmup Iteration   1: 111.600 ns/op
# Warmup Iteration   2: 109.625 ns/op
# Warmup Iteration   3: 105.381 ns/op
# Warmup Iteration   4: 108.851 ns/op
# Warmup Iteration   5: 110.571 ns/op
Iteration   1: 106.363 ns/op
Iteration   2: 108.842 ns/op
Iteration   3: 105.578 ns/op
Iteration   4: 111.722 ns/op
Iteration   5: 104.808 ns/op

# Run progress: 97.62% complete, ETA 00:01:40
# Fork: 3 of 3
# Warmup Iteration   1: 110.093 ns/op
# Warmup Iteration   2: 110.184 ns/op
# Warmup Iteration   3: 109.251 ns/op
# Warmup Iteration   4: 105.729 ns/op
# Warmup Iteration   5: 111.709 ns/op
Iteration   1: 107.043 ns/op
Iteration   2: 105.245 ns/op
Iteration   3: 109.408 ns/op
Iteration   4: 106.885 ns/op
Iteration   5: 108.628 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_unparametrized":
  107.803 ±(99.9%) 2.585 ns/op [Average]
  (min, avg, max) = (104.808, 107.803, 113.345), stdev = 2.418
  CI (99.9%): [105.218, 110.388] (assumes normal distribution)


# Run complete. Total time: 01:10:10

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                    (aBoolean)  (aInt)  (aString)  (theLevel)  Mode  Cnt      Score     Error  Units
LogRecordBenchmark.escape_lambda                   true      42         P1        INFO  avgt   15  10801.872 ± 328.161  ns/op
LogRecordBenchmark.escape_lambda                   true      42         P1        FINE  avgt   15    108.779 ±   2.682  ns/op
LogRecordBenchmark.guarded_parametrized            true      42         P1        INFO  avgt   15  13115.679 ± 358.398  ns/op
LogRecordBenchmark.guarded_parametrized            true      42         P1        FINE  avgt   15     81.334 ±   1.813  ns/op
LogRecordBenchmark.guarded_unparametrized          true      42         P1        INFO  avgt   15  10783.277 ± 275.579  ns/op
LogRecordBenchmark.guarded_unparametrized          true      42         P1        FINE  avgt   15    109.056 ±   1.605  ns/op
LogRecordBenchmark.no_escape_lambda                true      42         P1        INFO  avgt   15  10781.718 ± 184.773  ns/op
LogRecordBenchmark.no_escape_lambda                true      42         P1        FINE  avgt   15    116.914 ±   3.847  ns/op
LogRecordBenchmark.string_format                   true      42         P1        INFO  avgt   15  12055.835 ± 258.652  ns/op
LogRecordBenchmark.string_format                   true      42         P1        FINE  avgt   15   1148.304 ±  29.226  ns/op
LogRecordBenchmark.unguarded_parametrized          true      42         P1        INFO  avgt   15  13023.158 ± 280.068  ns/op
LogRecordBenchmark.unguarded_parametrized          true      42         P1        FINE  avgt   15     78.796 ±   3.102  ns/op
LogRecordBenchmark.unguarded_unparametrized        true      42         P1        INFO  avgt   15  10822.181 ± 306.872  ns/op
LogRecordBenchmark.unguarded_unparametrized        true      42         P1        FINE  avgt   15    107.803 ±   2.585  ns/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_c1_c2_jit/LogRecordBenchmark.json
Running java  -jar benchmarks/target/benchmarks.jar .*RandomGeneratorBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_c1_c2_jit/RandomGeneratorBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.random_doubles_array
# Parameters: (size = 128)

# Run progress: 0.00% complete, ETA 02:40:00
# Fork: 1 of 3
# Warmup Iteration   1: 2459.490 ns/op
# Warmup Iteration   2: 2443.596 ns/op
# Warmup Iteration   3: 2445.593 ns/op
# Warmup Iteration   4: 2437.007 ns/op
# Warmup Iteration   5: 2430.753 ns/op
Iteration   1: 2431.200 ns/op
Iteration   2: 2446.251 ns/op
Iteration   3: 2437.544 ns/op
Iteration   4: 2442.219 ns/op
Iteration   5: 2429.424 ns/op

# Run progress: 1.04% complete, ETA 02:38:48
# Fork: 2 of 3
# Warmup Iteration   1: 2468.424 ns/op
# Warmup Iteration   2: 2434.298 ns/op
# Warmup Iteration   3: 2420.786 ns/op
# Warmup Iteration   4: 2420.659 ns/op
# Warmup Iteration   5: 2418.578 ns/op
Iteration   1: 2420.902 ns/op
Iteration   2: 2426.004 ns/op
Iteration   3: 2426.675 ns/op
Iteration   4: 2425.914 ns/op
Iteration   5: 2429.929 ns/op

# Run progress: 2.08% complete, ETA 02:37:04
# Fork: 3 of 3
# Warmup Iteration   1: 2459.173 ns/op
# Warmup Iteration   2: 2419.275 ns/op
# Warmup Iteration   3: 2412.607 ns/op
# Warmup Iteration   4: 2416.899 ns/op
# Warmup Iteration   5: 2428.714 ns/op
Iteration   1: 2421.566 ns/op
Iteration   2: 2424.949 ns/op
Iteration   3: 2430.154 ns/op
Iteration   4: 2416.295 ns/op
Iteration   5: 2420.157 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.random_doubles_array":
  2428.612 ±(99.9%) 8.811 ns/op [Average]
  (min, avg, max) = (2416.295, 2428.612, 2446.251), stdev = 8.242
  CI (99.9%): [2419.801, 2437.423] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.random_ints_array
# Parameters: (size = 128)

# Run progress: 3.13% complete, ETA 02:35:23
# Fork: 1 of 3
# Warmup Iteration   1: 1212.819 ns/op
# Warmup Iteration   2: 1193.304 ns/op
# Warmup Iteration   3: 1190.902 ns/op
# Warmup Iteration   4: 1196.412 ns/op
# Warmup Iteration   5: 1190.244 ns/op
Iteration   1: 1196.333 ns/op
Iteration   2: 1197.609 ns/op
Iteration   3: 1188.763 ns/op
Iteration   4: 1186.488 ns/op
Iteration   5: 1188.458 ns/op

# Run progress: 4.17% complete, ETA 02:33:43
# Fork: 2 of 3
# Warmup Iteration   1: 1207.099 ns/op
# Warmup Iteration   2: 1211.527 ns/op
# Warmup Iteration   3: 1188.920 ns/op
# Warmup Iteration   4: 1189.160 ns/op
# Warmup Iteration   5: 1189.626 ns/op
Iteration   1: 1191.535 ns/op
Iteration   2: 1197.355 ns/op
Iteration   3: 1219.575 ns/op
Iteration   4: 1210.992 ns/op
Iteration   5: 1221.015 ns/op

# Run progress: 5.21% complete, ETA 02:32:02
# Fork: 3 of 3
# Warmup Iteration   1: 1237.969 ns/op
# Warmup Iteration   2: 1230.105 ns/op
# Warmup Iteration   3: 1201.862 ns/op
# Warmup Iteration   4: 1205.063 ns/op
# Warmup Iteration   5: 1227.906 ns/op
Iteration   1: 1214.910 ns/op
Iteration   2: 1251.859 ns/op
Iteration   3: 1215.458 ns/op
Iteration   4: 1247.800 ns/op
Iteration   5: 1265.506 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.random_ints_array":
  1212.910 ±(99.9%) 26.668 ns/op [Average]
  (min, avg, max) = (1186.488, 1212.910, 1265.506), stdev = 24.945
  CI (99.9%): [1186.242, 1239.578] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.random_longs_array
# Parameters: (size = 128)

# Run progress: 6.25% complete, ETA 02:30:22
# Fork: 1 of 3
# Warmup Iteration   1: 2515.728 ns/op
# Warmup Iteration   2: 2533.296 ns/op
# Warmup Iteration   3: 2511.523 ns/op
# Warmup Iteration   4: 2555.351 ns/op
# Warmup Iteration   5: 2458.342 ns/op
Iteration   1: 2447.859 ns/op
Iteration   2: 2435.701 ns/op
Iteration   3: 2435.407 ns/op
Iteration   4: 2445.596 ns/op
Iteration   5: 2422.628 ns/op

# Run progress: 7.29% complete, ETA 02:28:42
# Fork: 2 of 3
# Warmup Iteration   1: 2463.523 ns/op
# Warmup Iteration   2: 2428.381 ns/op
# Warmup Iteration   3: 2431.291 ns/op
# Warmup Iteration   4: 2426.147 ns/op
# Warmup Iteration   5: 2424.763 ns/op
Iteration   1: 2431.066 ns/op
Iteration   2: 2423.464 ns/op
Iteration   3: 2428.282 ns/op
Iteration   4: 2438.278 ns/op
Iteration   5: 2428.601 ns/op

# Run progress: 8.33% complete, ETA 02:27:02
# Fork: 3 of 3
# Warmup Iteration   1: 2467.178 ns/op
# Warmup Iteration   2: 2427.447 ns/op
# Warmup Iteration   3: 2426.415 ns/op
# Warmup Iteration   4: 2422.227 ns/op
# Warmup Iteration   5: 2432.967 ns/op
Iteration   1: 2417.838 ns/op
Iteration   2: 2437.894 ns/op
Iteration   3: 2422.624 ns/op
Iteration   4: 2425.574 ns/op
Iteration   5: 2413.746 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.random_longs_array":
  2430.304 ±(99.9%) 10.469 ns/op [Average]
  (min, avg, max) = (2413.746, 2430.304, 2447.859), stdev = 9.793
  CI (99.9%): [2419.835, 2440.773] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.random_next_boolean
# Parameters: (size = 128)

# Run progress: 9.38% complete, ETA 02:25:21
# Fork: 1 of 3
# Warmup Iteration   1: 8.988 ns/op
# Warmup Iteration   2: 8.975 ns/op
# Warmup Iteration   3: 8.969 ns/op
# Warmup Iteration   4: 8.963 ns/op
# Warmup Iteration   5: 9.051 ns/op
Iteration   1: 8.971 ns/op
Iteration   2: 8.942 ns/op
Iteration   3: 8.895 ns/op
Iteration   4: 8.938 ns/op
Iteration   5: 8.948 ns/op

# Run progress: 10.42% complete, ETA 02:23:41
# Fork: 2 of 3
# Warmup Iteration   1: 9.501 ns/op
# Warmup Iteration   2: 9.489 ns/op
# Warmup Iteration   3: 9.340 ns/op
# Warmup Iteration   4: 9.285 ns/op
# Warmup Iteration   5: 9.305 ns/op
Iteration   1: 9.330 ns/op
Iteration   2: 9.315 ns/op
Iteration   3: 9.329 ns/op
Iteration   4: 9.314 ns/op
Iteration   5: 9.328 ns/op

# Run progress: 11.46% complete, ETA 02:22:00
# Fork: 3 of 3
# Warmup Iteration   1: 9.007 ns/op
# Warmup Iteration   2: 8.974 ns/op
# Warmup Iteration   3: 8.945 ns/op
# Warmup Iteration   4: 8.952 ns/op
# Warmup Iteration   5: 8.953 ns/op
Iteration   1: 8.939 ns/op
Iteration   2: 8.949 ns/op
Iteration   3: 8.934 ns/op
Iteration   4: 9.300 ns/op
Iteration   5: 9.256 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.random_next_boolean":
  9.112 ±(99.9%) 0.206 ns/op [Average]
  (min, avg, max) = (8.895, 9.112, 9.330), stdev = 0.193
  CI (99.9%): [8.906, 9.319] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.random_next_bytes_array
# Parameters: (size = 128)

# Run progress: 12.50% complete, ETA 02:20:20
# Fork: 1 of 3
# Warmup Iteration   1: 323.957 ns/op
# Warmup Iteration   2: 305.212 ns/op
# Warmup Iteration   3: 304.053 ns/op
# Warmup Iteration   4: 305.100 ns/op
# Warmup Iteration   5: 305.113 ns/op
Iteration   1: 305.186 ns/op
Iteration   2: 305.043 ns/op
Iteration   3: 305.081 ns/op
Iteration   4: 305.099 ns/op
Iteration   5: 314.162 ns/op

# Run progress: 13.54% complete, ETA 02:18:40
# Fork: 2 of 3
# Warmup Iteration   1: 322.934 ns/op
# Warmup Iteration   2: 322.070 ns/op
# Warmup Iteration   3: 312.905 ns/op
# Warmup Iteration   4: 303.442 ns/op
# Warmup Iteration   5: 303.696 ns/op
Iteration   1: 305.059 ns/op
Iteration   2: 305.215 ns/op
Iteration   3: 305.584 ns/op
Iteration   4: 305.056 ns/op
Iteration   5: 304.013 ns/op

# Run progress: 14.58% complete, ETA 02:16:59
# Fork: 3 of 3
# Warmup Iteration   1: 306.645 ns/op
# Warmup Iteration   2: 322.536 ns/op
# Warmup Iteration   3: 314.286 ns/op
# Warmup Iteration   4: 314.158 ns/op
# Warmup Iteration   5: 313.875 ns/op
Iteration   1: 313.518 ns/op
Iteration   2: 313.560 ns/op
Iteration   3: 313.524 ns/op
Iteration   4: 313.739 ns/op
Iteration   5: 313.320 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.random_next_bytes_array":
  308.477 ±(99.9%) 4.678 ns/op [Average]
  (min, avg, max) = (304.013, 308.477, 314.162), stdev = 4.376
  CI (99.9%): [303.799, 313.156] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.random_next_double
# Parameters: (size = 128)

# Run progress: 15.63% complete, ETA 02:15:19
# Fork: 1 of 3
# Warmup Iteration   1: 18.683 ns/op
# Warmup Iteration   2: 18.377 ns/op
# Warmup Iteration   3: 17.906 ns/op
# Warmup Iteration   4: 17.905 ns/op
# Warmup Iteration   5: 17.909 ns/op
Iteration   1: 17.919 ns/op
Iteration   2: 17.915 ns/op
Iteration   3: 17.860 ns/op
Iteration   4: 17.865 ns/op
Iteration   5: 17.894 ns/op

# Run progress: 16.67% complete, ETA 02:13:39
# Fork: 2 of 3
# Warmup Iteration   1: 18.698 ns/op
# Warmup Iteration   2: 18.454 ns/op
# Warmup Iteration   3: 17.910 ns/op
# Warmup Iteration   4: 17.901 ns/op
# Warmup Iteration   5: 17.905 ns/op
Iteration   1: 17.905 ns/op
Iteration   2: 17.902 ns/op
Iteration   3: 17.881 ns/op
Iteration   4: 17.879 ns/op
Iteration   5: 17.876 ns/op

# Run progress: 17.71% complete, ETA 02:11:58
# Fork: 3 of 3
# Warmup Iteration   1: 18.758 ns/op
# Warmup Iteration   2: 18.418 ns/op
# Warmup Iteration   3: 17.904 ns/op
# Warmup Iteration   4: 17.911 ns/op
# Warmup Iteration   5: 17.903 ns/op
Iteration   1: 17.903 ns/op
Iteration   2: 17.911 ns/op
Iteration   3: 17.848 ns/op
Iteration   4: 17.898 ns/op
Iteration   5: 17.906 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.random_next_double":
  17.891 ±(99.9%) 0.023 ns/op [Average]
  (min, avg, max) = (17.848, 17.891, 17.919), stdev = 0.021
  CI (99.9%): [17.868, 17.914] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.random_next_float
# Parameters: (size = 128)

# Run progress: 18.75% complete, ETA 02:10:18
# Fork: 1 of 3
# Warmup Iteration   1: 9.797 ns/op
# Warmup Iteration   2: 9.244 ns/op
# Warmup Iteration   3: 9.116 ns/op
# Warmup Iteration   4: 9.114 ns/op
# Warmup Iteration   5: 9.118 ns/op
Iteration   1: 9.119 ns/op
Iteration   2: 9.117 ns/op
Iteration   3: 9.118 ns/op
Iteration   4: 9.118 ns/op
Iteration   5: 9.117 ns/op

# Run progress: 19.79% complete, ETA 02:08:38
# Fork: 2 of 3
# Warmup Iteration   1: 9.275 ns/op
# Warmup Iteration   2: 9.284 ns/op
# Warmup Iteration   3: 9.117 ns/op
# Warmup Iteration   4: 9.115 ns/op
# Warmup Iteration   5: 9.128 ns/op
Iteration   1: 9.116 ns/op
Iteration   2: 9.117 ns/op
Iteration   3: 9.075 ns/op
Iteration   4: 9.094 ns/op
Iteration   5: 9.117 ns/op

# Run progress: 20.83% complete, ETA 02:06:58
# Fork: 3 of 3
# Warmup Iteration   1: 9.858 ns/op
# Warmup Iteration   2: 9.278 ns/op
# Warmup Iteration   3: 9.174 ns/op
# Warmup Iteration   4: 9.247 ns/op
# Warmup Iteration   5: 9.318 ns/op
Iteration   1: 9.480 ns/op
Iteration   2: 9.696 ns/op
Iteration   3: 9.381 ns/op
Iteration   4: 9.094 ns/op
Iteration   5: 9.148 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.random_next_float":
  9.194 ±(99.9%) 0.192 ns/op [Average]
  (min, avg, max) = (9.075, 9.194, 9.696), stdev = 0.180
  CI (99.9%): [9.002, 9.386] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.random_next_int
# Parameters: (size = 128)

# Run progress: 21.88% complete, ETA 02:05:17
# Fork: 1 of 3
# Warmup Iteration   1: 9.042 ns/op
# Warmup Iteration   2: 9.563 ns/op
# Warmup Iteration   3: 9.369 ns/op
# Warmup Iteration   4: 9.327 ns/op
# Warmup Iteration   5: 9.324 ns/op
Iteration   1: 9.323 ns/op
Iteration   2: 9.314 ns/op
Iteration   3: 9.319 ns/op
Iteration   4: 9.289 ns/op
Iteration   5: 9.251 ns/op

# Run progress: 22.92% complete, ETA 02:03:37
# Fork: 2 of 3
# Warmup Iteration   1: 8.913 ns/op
# Warmup Iteration   2: 8.952 ns/op
# Warmup Iteration   3: 8.965 ns/op
# Warmup Iteration   4: 8.948 ns/op
# Warmup Iteration   5: 8.959 ns/op
Iteration   1: 8.976 ns/op
Iteration   2: 8.968 ns/op
Iteration   3: 8.944 ns/op
Iteration   4: 8.934 ns/op
Iteration   5: 8.976 ns/op

# Run progress: 23.96% complete, ETA 02:01:57
# Fork: 3 of 3
# Warmup Iteration   1: 8.976 ns/op
# Warmup Iteration   2: 9.480 ns/op
# Warmup Iteration   3: 9.247 ns/op
# Warmup Iteration   4: 9.291 ns/op
# Warmup Iteration   5: 9.302 ns/op
Iteration   1: 9.320 ns/op
Iteration   2: 9.267 ns/op
Iteration   3: 9.380 ns/op
Iteration   4: 9.431 ns/op
Iteration   5: 9.271 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.random_next_int":
  9.198 ±(99.9%) 0.192 ns/op [Average]
  (min, avg, max) = (8.934, 9.198, 9.431), stdev = 0.180
  CI (99.9%): [9.005, 9.390] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.random_next_long
# Parameters: (size = 128)

# Run progress: 25.00% complete, ETA 02:00:17
# Fork: 1 of 3
# Warmup Iteration   1: 18.163 ns/op
# Warmup Iteration   2: 17.912 ns/op
# Warmup Iteration   3: 17.900 ns/op
# Warmup Iteration   4: 17.920 ns/op
# Warmup Iteration   5: 17.884 ns/op
Iteration   1: 17.917 ns/op
Iteration   2: 17.919 ns/op
Iteration   3: 17.924 ns/op
Iteration   4: 17.880 ns/op
Iteration   5: 17.930 ns/op

# Run progress: 26.04% complete, ETA 01:58:36
# Fork: 2 of 3
# Warmup Iteration   1: 18.197 ns/op
# Warmup Iteration   2: 17.922 ns/op
# Warmup Iteration   3: 17.917 ns/op
# Warmup Iteration   4: 17.923 ns/op
# Warmup Iteration   5: 17.867 ns/op
Iteration   1: 17.934 ns/op
Iteration   2: 17.902 ns/op
Iteration   3: 17.923 ns/op
Iteration   4: 17.858 ns/op
Iteration   5: 17.877 ns/op

# Run progress: 27.08% complete, ETA 01:56:56
# Fork: 3 of 3
# Warmup Iteration   1: 18.135 ns/op
# Warmup Iteration   2: 17.921 ns/op
# Warmup Iteration   3: 17.919 ns/op
# Warmup Iteration   4: 17.927 ns/op
# Warmup Iteration   5: 17.909 ns/op
Iteration   1: 17.936 ns/op
Iteration   2: 17.886 ns/op
Iteration   3: 17.940 ns/op
Iteration   4: 17.830 ns/op
Iteration   5: 17.868 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.random_next_long":
  17.902 ±(99.9%) 0.036 ns/op [Average]
  (min, avg, max) = (17.830, 17.902, 17.940), stdev = 0.033
  CI (99.9%): [17.866, 17.937] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.splittable_random_doubles_array
# Parameters: (size = 128)

# Run progress: 28.13% complete, ETA 01:55:16
# Fork: 1 of 3
# Warmup Iteration   1: 401.454 ns/op
# Warmup Iteration   2: 383.192 ns/op
# Warmup Iteration   3: 380.235 ns/op
# Warmup Iteration   4: 395.267 ns/op
# Warmup Iteration   5: 388.895 ns/op
Iteration   1: 388.737 ns/op
Iteration   2: 392.870 ns/op
Iteration   3: 387.273 ns/op
Iteration   4: 382.851 ns/op
Iteration   5: 386.858 ns/op

# Run progress: 29.17% complete, ETA 01:53:36
# Fork: 2 of 3
# Warmup Iteration   1: 409.427 ns/op
# Warmup Iteration   2: 392.397 ns/op
# Warmup Iteration   3: 387.567 ns/op
# Warmup Iteration   4: 394.805 ns/op
# Warmup Iteration   5: 394.313 ns/op
Iteration   1: 396.520 ns/op
Iteration   2: 392.229 ns/op
Iteration   3: 399.038 ns/op
Iteration   4: 391.155 ns/op
Iteration   5: 388.996 ns/op

# Run progress: 30.21% complete, ETA 01:51:55
# Fork: 3 of 3
# Warmup Iteration   1: 405.970 ns/op
# Warmup Iteration   2: 392.675 ns/op
# Warmup Iteration   3: 391.812 ns/op
# Warmup Iteration   4: 401.774 ns/op
# Warmup Iteration   5: 385.498 ns/op
Iteration   1: 393.572 ns/op
Iteration   2: 396.205 ns/op
Iteration   3: 393.550 ns/op
Iteration   4: 401.879 ns/op
Iteration   5: 394.281 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.splittable_random_doubles_array":
  392.401 ±(99.9%) 5.319 ns/op [Average]
  (min, avg, max) = (382.851, 392.401, 401.879), stdev = 4.976
  CI (99.9%): [387.082, 397.720] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.splittable_random_ints_array
# Parameters: (size = 128)

# Run progress: 31.25% complete, ETA 01:50:15
# Fork: 1 of 3
# Warmup Iteration   1: 295.623 ns/op
# Warmup Iteration   2: 289.487 ns/op
# Warmup Iteration   3: 286.290 ns/op
# Warmup Iteration   4: 283.152 ns/op
# Warmup Iteration   5: 285.205 ns/op
Iteration   1: 298.947 ns/op
Iteration   2: 290.618 ns/op
Iteration   3: 291.289 ns/op
Iteration   4: 294.690 ns/op
Iteration   5: 295.801 ns/op

# Run progress: 32.29% complete, ETA 01:48:35
# Fork: 2 of 3
# Warmup Iteration   1: 305.106 ns/op
# Warmup Iteration   2: 289.274 ns/op
# Warmup Iteration   3: 292.339 ns/op
# Warmup Iteration   4: 286.402 ns/op
# Warmup Iteration   5: 286.276 ns/op
Iteration   1: 296.396 ns/op
Iteration   2: 291.023 ns/op
Iteration   3: 288.047 ns/op
Iteration   4: 293.125 ns/op
Iteration   5: 287.857 ns/op

# Run progress: 33.33% complete, ETA 01:46:55
# Fork: 3 of 3
# Warmup Iteration   1: 300.651 ns/op
# Warmup Iteration   2: 296.113 ns/op
# Warmup Iteration   3: 282.725 ns/op
# Warmup Iteration   4: 290.964 ns/op
# Warmup Iteration   5: 286.533 ns/op
Iteration   1: 293.577 ns/op
Iteration   2: 285.362 ns/op
Iteration   3: 287.125 ns/op
Iteration   4: 292.595 ns/op
Iteration   5: 288.553 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.splittable_random_ints_array":
  291.667 ±(99.9%) 4.117 ns/op [Average]
  (min, avg, max) = (285.362, 291.667, 298.947), stdev = 3.851
  CI (99.9%): [287.550, 295.783] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.splittable_random_longs_array
# Parameters: (size = 128)

# Run progress: 34.38% complete, ETA 01:45:14
# Fork: 1 of 3
# Warmup Iteration   1: 359.686 ns/op
# Warmup Iteration   2: 359.071 ns/op
# Warmup Iteration   3: 347.575 ns/op
# Warmup Iteration   4: 351.833 ns/op
# Warmup Iteration   5: 347.402 ns/op
Iteration   1: 351.913 ns/op
Iteration   2: 344.981 ns/op
Iteration   3: 346.439 ns/op
Iteration   4: 349.504 ns/op
Iteration   5: 343.698 ns/op

# Run progress: 35.42% complete, ETA 01:43:34
# Fork: 2 of 3
# Warmup Iteration   1: 361.617 ns/op
# Warmup Iteration   2: 353.103 ns/op
# Warmup Iteration   3: 348.460 ns/op
# Warmup Iteration   4: 350.363 ns/op
# Warmup Iteration   5: 346.037 ns/op
Iteration   1: 356.849 ns/op
Iteration   2: 350.809 ns/op
Iteration   3: 355.745 ns/op
Iteration   4: 351.011 ns/op
Iteration   5: 348.451 ns/op

# Run progress: 36.46% complete, ETA 01:41:54
# Fork: 3 of 3
# Warmup Iteration   1: 361.547 ns/op
# Warmup Iteration   2: 347.886 ns/op
# Warmup Iteration   3: 349.013 ns/op
# Warmup Iteration   4: 344.002 ns/op
# Warmup Iteration   5: 351.178 ns/op
Iteration   1: 354.022 ns/op
Iteration   2: 351.926 ns/op
Iteration   3: 350.426 ns/op
Iteration   4: 350.113 ns/op
Iteration   5: 348.393 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.splittable_random_longs_array":
  350.285 ±(99.9%) 3.906 ns/op [Average]
  (min, avg, max) = (343.698, 350.285, 356.849), stdev = 3.654
  CI (99.9%): [346.379, 354.192] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.splittable_random_next_boolean
# Parameters: (size = 128)

# Run progress: 37.50% complete, ETA 01:40:14
# Fork: 1 of 3
# Warmup Iteration   1: 4.068 ns/op
# Warmup Iteration   2: 4.036 ns/op
# Warmup Iteration   3: 3.551 ns/op
# Warmup Iteration   4: 3.547 ns/op
# Warmup Iteration   5: 3.542 ns/op
Iteration   1: 3.537 ns/op
Iteration   2: 3.512 ns/op
Iteration   3: 3.518 ns/op
Iteration   4: 3.673 ns/op
Iteration   5: 3.682 ns/op

# Run progress: 38.54% complete, ETA 01:38:33
# Fork: 2 of 3
# Warmup Iteration   1: 4.194 ns/op
# Warmup Iteration   2: 4.148 ns/op
# Warmup Iteration   3: 3.670 ns/op
# Warmup Iteration   4: 3.668 ns/op
# Warmup Iteration   5: 3.662 ns/op
Iteration   1: 3.661 ns/op
Iteration   2: 3.660 ns/op
Iteration   3: 3.660 ns/op
Iteration   4: 3.663 ns/op
Iteration   5: 3.660 ns/op

# Run progress: 39.58% complete, ETA 01:36:53
# Fork: 3 of 3
# Warmup Iteration   1: 3.964 ns/op
# Warmup Iteration   2: 4.128 ns/op
# Warmup Iteration   3: 3.656 ns/op
# Warmup Iteration   4: 3.652 ns/op
# Warmup Iteration   5: 3.651 ns/op
Iteration   1: 3.657 ns/op
Iteration   2: 3.641 ns/op
Iteration   3: 3.464 ns/op
Iteration   4: 3.475 ns/op
Iteration   5: 3.483 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.splittable_random_next_boolean":
  3.596 ±(99.9%) 0.091 ns/op [Average]
  (min, avg, max) = (3.464, 3.596, 3.682), stdev = 0.085
  CI (99.9%): [3.506, 3.687] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.splittable_random_next_bytes_array
# Parameters: (size = 128)

# Run progress: 40.63% complete, ETA 01:35:13
# Fork: 1 of 3
# Warmup Iteration   1: 94.899 ns/op
# Warmup Iteration   2: 86.338 ns/op
# Warmup Iteration   3: 87.761 ns/op
# Warmup Iteration   4: 87.817 ns/op
# Warmup Iteration   5: 85.414 ns/op
Iteration   1: 91.407 ns/op
Iteration   2: 91.185 ns/op
Iteration   3: 90.980 ns/op
Iteration   4: 90.865 ns/op
Iteration   5: 90.726 ns/op

# Run progress: 41.67% complete, ETA 01:33:33
# Fork: 2 of 3
# Warmup Iteration   1: 94.123 ns/op
# Warmup Iteration   2: 84.070 ns/op
# Warmup Iteration   3: 85.366 ns/op
# Warmup Iteration   4: 85.047 ns/op
# Warmup Iteration   5: 85.251 ns/op
Iteration   1: 85.704 ns/op
Iteration   2: 85.737 ns/op
Iteration   3: 85.639 ns/op
Iteration   4: 85.706 ns/op
Iteration   5: 85.731 ns/op

# Run progress: 42.71% complete, ETA 01:31:52
# Fork: 3 of 3
# Warmup Iteration   1: 99.211 ns/op
# Warmup Iteration   2: 90.108 ns/op
# Warmup Iteration   3: 91.019 ns/op
# Warmup Iteration   4: 90.850 ns/op
# Warmup Iteration   5: 90.938 ns/op
Iteration   1: 90.560 ns/op
Iteration   2: 90.377 ns/op
Iteration   3: 90.219 ns/op
Iteration   4: 90.200 ns/op
Iteration   5: 90.295 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.splittable_random_next_bytes_array":
  89.022 ±(99.9%) 2.622 ns/op [Average]
  (min, avg, max) = (85.639, 89.022, 91.407), stdev = 2.453
  CI (99.9%): [86.400, 91.644] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.splittable_random_next_double
# Parameters: (size = 128)

# Run progress: 43.75% complete, ETA 01:30:12
# Fork: 1 of 3
# Warmup Iteration   1: 4.717 ns/op
# Warmup Iteration   2: 4.323 ns/op
# Warmup Iteration   3: 4.251 ns/op
# Warmup Iteration   4: 4.266 ns/op
# Warmup Iteration   5: 4.267 ns/op
Iteration   1: 4.267 ns/op
Iteration   2: 4.572 ns/op
Iteration   3: 4.575 ns/op
Iteration   4: 4.569 ns/op
Iteration   5: 4.542 ns/op

# Run progress: 44.79% complete, ETA 01:28:32
# Fork: 2 of 3
# Warmup Iteration   1: 4.688 ns/op
# Warmup Iteration   2: 4.325 ns/op
# Warmup Iteration   3: 4.258 ns/op
# Warmup Iteration   4: 4.360 ns/op
# Warmup Iteration   5: 4.362 ns/op
Iteration   1: 4.379 ns/op
Iteration   2: 4.378 ns/op
Iteration   3: 4.377 ns/op
Iteration   4: 4.378 ns/op
Iteration   5: 4.378 ns/op

# Run progress: 45.83% complete, ETA 01:26:52
# Fork: 3 of 3
# Warmup Iteration   1: 4.495 ns/op
# Warmup Iteration   2: 4.490 ns/op
# Warmup Iteration   3: 4.357 ns/op
# Warmup Iteration   4: 4.489 ns/op
# Warmup Iteration   5: 4.371 ns/op
Iteration   1: 4.365 ns/op
Iteration   2: 4.368 ns/op
Iteration   3: 4.384 ns/op
Iteration   4: 4.561 ns/op
Iteration   5: 4.556 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.splittable_random_next_double":
  4.443 ±(99.9%) 0.112 ns/op [Average]
  (min, avg, max) = (4.267, 4.443, 4.575), stdev = 0.105
  CI (99.9%): [4.331, 4.555] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.splittable_random_next_int
# Parameters: (size = 128)

# Run progress: 46.88% complete, ETA 01:25:11
# Fork: 1 of 3
# Warmup Iteration   1: 3.597 ns/op
# Warmup Iteration   2: 3.585 ns/op
# Warmup Iteration   3: 3.165 ns/op
# Warmup Iteration   4: 3.171 ns/op
# Warmup Iteration   5: 3.178 ns/op
Iteration   1: 3.177 ns/op
Iteration   2: 3.169 ns/op
Iteration   3: 3.168 ns/op
Iteration   4: 3.166 ns/op
Iteration   5: 3.166 ns/op

# Run progress: 47.92% complete, ETA 01:23:31
# Fork: 2 of 3
# Warmup Iteration   1: 3.932 ns/op
# Warmup Iteration   2: 3.596 ns/op
# Warmup Iteration   3: 3.161 ns/op
# Warmup Iteration   4: 3.165 ns/op
# Warmup Iteration   5: 3.170 ns/op
Iteration   1: 3.172 ns/op
Iteration   2: 3.170 ns/op
Iteration   3: 3.172 ns/op
Iteration   4: 3.171 ns/op
Iteration   5: 3.177 ns/op

# Run progress: 48.96% complete, ETA 01:21:51
# Fork: 3 of 3
# Warmup Iteration   1: 3.650 ns/op
# Warmup Iteration   2: 3.902 ns/op
# Warmup Iteration   3: 3.418 ns/op
# Warmup Iteration   4: 3.405 ns/op
# Warmup Iteration   5: 3.395 ns/op
Iteration   1: 3.394 ns/op
Iteration   2: 3.396 ns/op
Iteration   3: 3.387 ns/op
Iteration   4: 3.131 ns/op
Iteration   5: 3.158 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.splittable_random_next_int":
  3.212 ±(99.9%) 0.101 ns/op [Average]
  (min, avg, max) = (3.131, 3.212, 3.396), stdev = 0.094
  CI (99.9%): [3.111, 3.312] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.splittable_random_next_long
# Parameters: (size = 128)

# Run progress: 50.00% complete, ETA 01:20:11
# Fork: 1 of 3
# Warmup Iteration   1: 3.748 ns/op
# Warmup Iteration   2: 3.601 ns/op
# Warmup Iteration   3: 3.225 ns/op
# Warmup Iteration   4: 3.228 ns/op
# Warmup Iteration   5: 3.230 ns/op
Iteration   1: 3.230 ns/op
Iteration   2: 3.230 ns/op
Iteration   3: 3.223 ns/op
Iteration   4: 3.228 ns/op
Iteration   5: 3.225 ns/op

# Run progress: 51.04% complete, ETA 01:18:30
# Fork: 2 of 3
# Warmup Iteration   1: 3.655 ns/op
# Warmup Iteration   2: 3.728 ns/op
# Warmup Iteration   3: 3.222 ns/op
# Warmup Iteration   4: 3.224 ns/op
# Warmup Iteration   5: 3.236 ns/op
Iteration   1: 3.228 ns/op
Iteration   2: 3.234 ns/op
Iteration   3: 3.240 ns/op
Iteration   4: 3.234 ns/op
Iteration   5: 3.235 ns/op

# Run progress: 52.08% complete, ETA 01:16:50
# Fork: 3 of 3
# Warmup Iteration   1: 3.929 ns/op
# Warmup Iteration   2: 3.889 ns/op
# Warmup Iteration   3: 3.292 ns/op
# Warmup Iteration   4: 3.312 ns/op
# Warmup Iteration   5: 3.321 ns/op
Iteration   1: 3.309 ns/op
Iteration   2: 3.311 ns/op
Iteration   3: 3.317 ns/op
Iteration   4: 3.306 ns/op
Iteration   5: 3.316 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.splittable_random_next_long":
  3.258 ±(99.9%) 0.042 ns/op [Average]
  (min, avg, max) = (3.223, 3.258, 3.317), stdev = 0.040
  CI (99.9%): [3.215, 3.300] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.thread_local_doubles_array
# Parameters: (size = 128)

# Run progress: 53.13% complete, ETA 01:15:10
# Fork: 1 of 3
# Warmup Iteration   1: 393.296 ns/op
# Warmup Iteration   2: 384.448 ns/op
# Warmup Iteration   3: 385.312 ns/op
# Warmup Iteration   4: 386.046 ns/op
# Warmup Iteration   5: 391.789 ns/op
Iteration   1: 388.688 ns/op
Iteration   2: 393.227 ns/op
Iteration   3: 392.650 ns/op
Iteration   4: 386.346 ns/op
Iteration   5: 385.199 ns/op

# Run progress: 54.17% complete, ETA 01:13:30
# Fork: 2 of 3
# Warmup Iteration   1: 393.957 ns/op
# Warmup Iteration   2: 387.319 ns/op
# Warmup Iteration   3: 385.738 ns/op
# Warmup Iteration   4: 392.197 ns/op
# Warmup Iteration   5: 386.691 ns/op
Iteration   1: 390.830 ns/op
Iteration   2: 394.755 ns/op
Iteration   3: 396.300 ns/op
Iteration   4: 395.624 ns/op
Iteration   5: 392.361 ns/op

# Run progress: 55.21% complete, ETA 01:11:49
# Fork: 3 of 3
# Warmup Iteration   1: 397.537 ns/op
# Warmup Iteration   2: 394.627 ns/op
# Warmup Iteration   3: 387.524 ns/op
# Warmup Iteration   4: 391.416 ns/op
# Warmup Iteration   5: 389.976 ns/op
Iteration   1: 390.317 ns/op
Iteration   2: 392.846 ns/op
Iteration   3: 386.864 ns/op
Iteration   4: 393.284 ns/op
Iteration   5: 388.046 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.thread_local_doubles_array":
  391.156 ±(99.9%) 3.707 ns/op [Average]
  (min, avg, max) = (385.199, 391.156, 396.300), stdev = 3.468
  CI (99.9%): [387.449, 394.863] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.thread_local_ints_array
# Parameters: (size = 128)

# Run progress: 56.25% complete, ETA 01:10:09
# Fork: 1 of 3
# Warmup Iteration   1: 305.568 ns/op
# Warmup Iteration   2: 288.418 ns/op
# Warmup Iteration   3: 288.633 ns/op
# Warmup Iteration   4: 291.466 ns/op
# Warmup Iteration   5: 280.996 ns/op
Iteration   1: 293.756 ns/op
Iteration   2: 291.999 ns/op
Iteration   3: 286.533 ns/op
Iteration   4: 286.135 ns/op
Iteration   5: 289.232 ns/op

# Run progress: 57.29% complete, ETA 01:08:29
# Fork: 2 of 3
# Warmup Iteration   1: 297.256 ns/op
# Warmup Iteration   2: 290.161 ns/op
# Warmup Iteration   3: 295.675 ns/op
# Warmup Iteration   4: 289.591 ns/op
# Warmup Iteration   5: 288.585 ns/op
Iteration   1: 297.982 ns/op
Iteration   2: 295.929 ns/op
Iteration   3: 294.296 ns/op
Iteration   4: 294.540 ns/op
Iteration   5: 289.664 ns/op

# Run progress: 58.33% complete, ETA 01:06:49
# Fork: 3 of 3
# Warmup Iteration   1: 300.073 ns/op
# Warmup Iteration   2: 294.190 ns/op
# Warmup Iteration   3: 285.746 ns/op
# Warmup Iteration   4: 295.709 ns/op
# Warmup Iteration   5: 285.856 ns/op
Iteration   1: 295.750 ns/op
Iteration   2: 287.039 ns/op
Iteration   3: 287.525 ns/op
Iteration   4: 289.790 ns/op
Iteration   5: 287.110 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.thread_local_ints_array":
  291.152 ±(99.9%) 4.239 ns/op [Average]
  (min, avg, max) = (286.135, 291.152, 297.982), stdev = 3.965
  CI (99.9%): [286.913, 295.391] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.thread_local_longs_array
# Parameters: (size = 128)

# Run progress: 59.38% complete, ETA 01:05:09
# Fork: 1 of 3
# Warmup Iteration   1: 352.295 ns/op
# Warmup Iteration   2: 342.428 ns/op
# Warmup Iteration   3: 341.157 ns/op
# Warmup Iteration   4: 339.269 ns/op
# Warmup Iteration   5: 341.502 ns/op
Iteration   1: 343.839 ns/op
Iteration   2: 337.993 ns/op
Iteration   3: 344.491 ns/op
Iteration   4: 345.469 ns/op
Iteration   5: 339.994 ns/op

# Run progress: 60.42% complete, ETA 01:03:28
# Fork: 2 of 3
# Warmup Iteration   1: 352.524 ns/op
# Warmup Iteration   2: 335.064 ns/op
# Warmup Iteration   3: 344.285 ns/op
# Warmup Iteration   4: 338.086 ns/op
# Warmup Iteration   5: 342.255 ns/op
Iteration   1: 340.929 ns/op
Iteration   2: 344.297 ns/op
Iteration   3: 341.433 ns/op
Iteration   4: 343.080 ns/op
Iteration   5: 344.196 ns/op

# Run progress: 61.46% complete, ETA 01:01:48
# Fork: 3 of 3
# Warmup Iteration   1: 356.158 ns/op
# Warmup Iteration   2: 349.248 ns/op
# Warmup Iteration   3: 337.790 ns/op
# Warmup Iteration   4: 337.570 ns/op
# Warmup Iteration   5: 346.978 ns/op
Iteration   1: 339.884 ns/op
Iteration   2: 342.418 ns/op
Iteration   3: 346.229 ns/op
Iteration   4: 341.592 ns/op
Iteration   5: 336.189 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.thread_local_longs_array":
  342.135 ±(99.9%) 3.005 ns/op [Average]
  (min, avg, max) = (336.189, 342.135, 346.229), stdev = 2.811
  CI (99.9%): [339.130, 345.141] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.thread_local_next_boolean
# Parameters: (size = 128)

# Run progress: 62.50% complete, ETA 01:00:08
# Fork: 1 of 3
# Warmup Iteration   1: 4.536 ns/op
# Warmup Iteration   2: 4.360 ns/op
# Warmup Iteration   3: 3.887 ns/op
# Warmup Iteration   4: 3.880 ns/op
# Warmup Iteration   5: 3.866 ns/op
Iteration   1: 3.857 ns/op
Iteration   2: 3.850 ns/op
Iteration   3: 3.844 ns/op
Iteration   4: 3.845 ns/op
Iteration   5: 3.566 ns/op

# Run progress: 63.54% complete, ETA 00:58:28
# Fork: 2 of 3
# Warmup Iteration   1: 4.133 ns/op
# Warmup Iteration   2: 4.326 ns/op
# Warmup Iteration   3: 3.860 ns/op
# Warmup Iteration   4: 3.850 ns/op
# Warmup Iteration   5: 3.858 ns/op
Iteration   1: 3.851 ns/op
Iteration   2: 3.853 ns/op
Iteration   3: 3.854 ns/op
Iteration   4: 3.848 ns/op
Iteration   5: 3.840 ns/op

# Run progress: 64.58% complete, ETA 00:56:47
# Fork: 3 of 3
# Warmup Iteration   1: 4.106 ns/op
# Warmup Iteration   2: 4.115 ns/op
# Warmup Iteration   3: 3.675 ns/op
# Warmup Iteration   4: 3.674 ns/op
# Warmup Iteration   5: 3.674 ns/op
Iteration   1: 3.672 ns/op
Iteration   2: 3.672 ns/op
Iteration   3: 3.677 ns/op
Iteration   4: 3.682 ns/op
Iteration   5: 3.682 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.thread_local_next_boolean":
  3.773 ±(99.9%) 0.107 ns/op [Average]
  (min, avg, max) = (3.566, 3.773, 3.857), stdev = 0.100
  CI (99.9%): [3.666, 3.880] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.thread_local_next_bytes_array
# Parameters: (size = 128)

# Run progress: 65.63% complete, ETA 00:55:07
# Fork: 1 of 3
# Warmup Iteration   1: 163.861 ns/op
# Warmup Iteration   2: 164.481 ns/op
# Warmup Iteration   3: 160.696 ns/op
# Warmup Iteration   4: 160.621 ns/op
# Warmup Iteration   5: 160.583 ns/op
Iteration   1: 150.086 ns/op
Iteration   2: 150.598 ns/op
Iteration   3: 150.729 ns/op
Iteration   4: 151.115 ns/op
Iteration   5: 150.761 ns/op

# Run progress: 66.67% complete, ETA 00:53:27
# Fork: 2 of 3
# Warmup Iteration   1: 165.274 ns/op
# Warmup Iteration   2: 162.856 ns/op
# Warmup Iteration   3: 160.997 ns/op
# Warmup Iteration   4: 160.602 ns/op
# Warmup Iteration   5: 160.399 ns/op
Iteration   1: 159.993 ns/op
Iteration   2: 159.905 ns/op
Iteration   3: 159.701 ns/op
Iteration   4: 159.675 ns/op
Iteration   5: 159.234 ns/op

# Run progress: 67.71% complete, ETA 00:51:47
# Fork: 3 of 3
# Warmup Iteration   1: 152.827 ns/op
# Warmup Iteration   2: 151.500 ns/op
# Warmup Iteration   3: 152.942 ns/op
# Warmup Iteration   4: 152.062 ns/op
# Warmup Iteration   5: 152.533 ns/op
Iteration   1: 157.357 ns/op
Iteration   2: 157.378 ns/op
Iteration   3: 153.014 ns/op
Iteration   4: 153.237 ns/op
Iteration   5: 153.133 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.thread_local_next_bytes_array":
  155.061 ±(99.9%) 4.308 ns/op [Average]
  (min, avg, max) = (150.086, 155.061, 159.993), stdev = 4.030
  CI (99.9%): [150.753, 159.369] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.thread_local_next_double
# Parameters: (size = 128)

# Run progress: 68.75% complete, ETA 00:50:06
# Fork: 1 of 3
# Warmup Iteration   1: 4.839 ns/op
# Warmup Iteration   2: 4.462 ns/op
# Warmup Iteration   3: 4.076 ns/op
# Warmup Iteration   4: 4.092 ns/op
# Warmup Iteration   5: 4.093 ns/op
Iteration   1: 4.098 ns/op
Iteration   2: 4.100 ns/op
Iteration   3: 4.094 ns/op
Iteration   4: 4.099 ns/op
Iteration   5: 4.106 ns/op

# Run progress: 69.79% complete, ETA 00:48:26
# Fork: 2 of 3
# Warmup Iteration   1: 4.848 ns/op
# Warmup Iteration   2: 4.806 ns/op
# Warmup Iteration   3: 4.369 ns/op
# Warmup Iteration   4: 4.379 ns/op
# Warmup Iteration   5: 4.372 ns/op
Iteration   1: 4.372 ns/op
Iteration   2: 4.360 ns/op
Iteration   3: 4.354 ns/op
Iteration   4: 4.368 ns/op
Iteration   5: 4.368 ns/op

# Run progress: 70.83% complete, ETA 00:46:46
# Fork: 3 of 3
# Warmup Iteration   1: 4.758 ns/op
# Warmup Iteration   2: 4.778 ns/op
# Warmup Iteration   3: 4.362 ns/op
# Warmup Iteration   4: 4.364 ns/op
# Warmup Iteration   5: 4.361 ns/op
Iteration   1: 4.355 ns/op
Iteration   2: 4.362 ns/op
Iteration   3: 4.361 ns/op
Iteration   4: 4.356 ns/op
Iteration   5: 4.360 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.thread_local_next_double":
  4.274 ±(99.9%) 0.137 ns/op [Average]
  (min, avg, max) = (4.094, 4.274, 4.372), stdev = 0.128
  CI (99.9%): [4.137, 4.411] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.thread_local_next_float
# Parameters: (size = 128)

# Run progress: 71.88% complete, ETA 00:45:06
# Fork: 1 of 3
# Warmup Iteration   1: 4.663 ns/op
# Warmup Iteration   2: 4.417 ns/op
# Warmup Iteration   3: 3.993 ns/op
# Warmup Iteration   4: 4.013 ns/op
# Warmup Iteration   5: 4.025 ns/op
Iteration   1: 4.348 ns/op
Iteration   2: 4.328 ns/op
Iteration   3: 4.321 ns/op
Iteration   4: 4.314 ns/op
Iteration   5: 4.300 ns/op

# Run progress: 72.92% complete, ETA 00:43:25
# Fork: 2 of 3
# Warmup Iteration   1: 4.678 ns/op
# Warmup Iteration   2: 4.771 ns/op
# Warmup Iteration   3: 4.092 ns/op
# Warmup Iteration   4: 4.116 ns/op
# Warmup Iteration   5: 4.127 ns/op
Iteration   1: 4.125 ns/op
Iteration   2: 4.130 ns/op
Iteration   3: 4.121 ns/op
Iteration   4: 4.119 ns/op
Iteration   5: 4.139 ns/op

# Run progress: 73.96% complete, ETA 00:41:45
# Fork: 3 of 3
# Warmup Iteration   1: 4.699 ns/op
# Warmup Iteration   2: 4.590 ns/op
# Warmup Iteration   3: 4.135 ns/op
# Warmup Iteration   4: 4.144 ns/op
# Warmup Iteration   5: 4.148 ns/op
Iteration   1: 4.142 ns/op
Iteration   2: 4.141 ns/op
Iteration   3: 4.138 ns/op
Iteration   4: 4.141 ns/op
Iteration   5: 4.134 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.thread_local_next_float":
  4.196 ±(99.9%) 0.099 ns/op [Average]
  (min, avg, max) = (4.119, 4.196, 4.348), stdev = 0.093
  CI (99.9%): [4.097, 4.296] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.thread_local_next_int
# Parameters: (size = 128)

# Run progress: 75.00% complete, ETA 00:40:05
# Fork: 1 of 3
# Warmup Iteration   1: 4.150 ns/op
# Warmup Iteration   2: 4.019 ns/op
# Warmup Iteration   3: 3.565 ns/op
# Warmup Iteration   4: 3.565 ns/op
# Warmup Iteration   5: 3.562 ns/op
Iteration   1: 3.554 ns/op
Iteration   2: 3.289 ns/op
Iteration   3: 3.299 ns/op
Iteration   4: 3.312 ns/op
Iteration   5: 3.320 ns/op

# Run progress: 76.04% complete, ETA 00:38:25
# Fork: 2 of 3
# Warmup Iteration   1: 3.992 ns/op
# Warmup Iteration   2: 3.866 ns/op
# Warmup Iteration   3: 3.418 ns/op
# Warmup Iteration   4: 3.415 ns/op
# Warmup Iteration   5: 3.408 ns/op
Iteration   1: 3.408 ns/op
Iteration   2: 3.407 ns/op
Iteration   3: 3.405 ns/op
Iteration   4: 3.406 ns/op
Iteration   5: 3.406 ns/op

# Run progress: 77.08% complete, ETA 00:36:45
# Fork: 3 of 3
# Warmup Iteration   1: 3.849 ns/op
# Warmup Iteration   2: 3.755 ns/op
# Warmup Iteration   3: 3.324 ns/op
# Warmup Iteration   4: 3.329 ns/op
# Warmup Iteration   5: 3.329 ns/op
Iteration   1: 3.339 ns/op
Iteration   2: 3.343 ns/op
Iteration   3: 3.350 ns/op
Iteration   4: 3.341 ns/op
Iteration   5: 3.342 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.thread_local_next_int":
  3.368 ±(99.9%) 0.071 ns/op [Average]
  (min, avg, max) = (3.289, 3.368, 3.554), stdev = 0.066
  CI (99.9%): [3.297, 3.439] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.thread_local_next_long
# Parameters: (size = 128)

# Run progress: 78.13% complete, ETA 00:35:04
# Fork: 1 of 3
# Warmup Iteration   1: 4.200 ns/op
# Warmup Iteration   2: 4.195 ns/op
# Warmup Iteration   3: 3.836 ns/op
# Warmup Iteration   4: 3.834 ns/op
# Warmup Iteration   5: 3.826 ns/op
Iteration   1: 3.815 ns/op
Iteration   2: 3.812 ns/op
Iteration   3: 3.815 ns/op
Iteration   4: 3.813 ns/op
Iteration   5: 3.813 ns/op

# Run progress: 79.17% complete, ETA 00:33:24
# Fork: 2 of 3
# Warmup Iteration   1: 4.160 ns/op
# Warmup Iteration   2: 3.938 ns/op
# Warmup Iteration   3: 3.646 ns/op
# Warmup Iteration   4: 3.653 ns/op
# Warmup Iteration   5: 3.654 ns/op
Iteration   1: 3.659 ns/op
Iteration   2: 3.662 ns/op
Iteration   3: 3.658 ns/op
Iteration   4: 3.658 ns/op
Iteration   5: 3.660 ns/op

# Run progress: 80.21% complete, ETA 00:31:44
# Fork: 3 of 3
# Warmup Iteration   1: 6.127 ns/op
# Warmup Iteration   2: 6.129 ns/op
# Warmup Iteration   3: 5.678 ns/op
# Warmup Iteration   4: 5.643 ns/op
# Warmup Iteration   5: 5.668 ns/op
Iteration   1: 5.674 ns/op
Iteration   2: 5.670 ns/op
Iteration   3: 5.640 ns/op
Iteration   4: 5.619 ns/op
Iteration   5: 5.630 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.RandomGeneratorBenchmark.thread_local_next_long":
  4.373 ±(99.9%) 0.999 ns/op [Average]
  (min, avg, max) = (3.658, 4.373, 5.674), stdev = 0.934
  CI (99.9%): [3.374, 5.372] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.SecureRandomGeneratorBenchmark.random_next_bytes
# Parameters: (algorithm = default, size = 128)

# Run progress: 81.25% complete, ETA 00:30:04
# Fork: 1 of 3
# Warmup Iteration   1: 2778.567 ns/op
# Warmup Iteration   2: 2635.263 ns/op
# Warmup Iteration   3: 2636.747 ns/op
# Warmup Iteration   4: 2645.202 ns/op
# Warmup Iteration   5: 2728.832 ns/op
Iteration   1: 2708.446 ns/op
Iteration   2: 2738.313 ns/op
Iteration   3: 2684.983 ns/op
Iteration   4: 2643.809 ns/op
Iteration   5: 2812.363 ns/op

# Run progress: 82.29% complete, ETA 00:28:23
# Fork: 2 of 3
# Warmup Iteration   1: 2719.522 ns/op
# Warmup Iteration   2: 2846.922 ns/op
# Warmup Iteration   3: 2757.191 ns/op
# Warmup Iteration   4: 2727.285 ns/op
# Warmup Iteration   5: 2746.795 ns/op
Iteration   1: 2746.888 ns/op
Iteration   2: 2744.779 ns/op
Iteration   3: 2745.790 ns/op
Iteration   4: 2681.140 ns/op
Iteration   5: 2790.378 ns/op

# Run progress: 83.33% complete, ETA 00:26:43
# Fork: 3 of 3
# Warmup Iteration   1: 2888.532 ns/op
# Warmup Iteration   2: 2815.356 ns/op
# Warmup Iteration   3: 2766.664 ns/op
# Warmup Iteration   4: 2708.829 ns/op
# Warmup Iteration   5: 2732.780 ns/op
Iteration   1: 2735.519 ns/op
Iteration   2: 2734.390 ns/op
Iteration   3: 2717.978 ns/op
Iteration   4: 2723.805 ns/op
Iteration   5: 2735.562 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.SecureRandomGeneratorBenchmark.random_next_bytes":
  2729.609 ±(99.9%) 44.097 ns/op [Average]
  (min, avg, max) = (2643.809, 2729.609, 2812.363), stdev = 41.248
  CI (99.9%): [2685.513, 2773.706] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.SecureRandomGeneratorBenchmark.random_next_bytes
# Parameters: (algorithm = NativePRNG, size = 128)

# Run progress: 84.38% complete, ETA 00:25:03
# Fork: 1 of 3
# Warmup Iteration   1: 2882.610 ns/op
# Warmup Iteration   2: 2655.991 ns/op
# Warmup Iteration   3: 2661.763 ns/op
# Warmup Iteration   4: 2660.826 ns/op
# Warmup Iteration   5: 2722.545 ns/op
Iteration   1: 2821.429 ns/op
Iteration   2: 2810.168 ns/op
Iteration   3: 2805.389 ns/op
Iteration   4: 2803.226 ns/op
Iteration   5: 2659.565 ns/op

# Run progress: 85.42% complete, ETA 00:23:23
# Fork: 2 of 3
# Warmup Iteration   1: 2792.386 ns/op
# Warmup Iteration   2: 2775.382 ns/op
# Warmup Iteration   3: 2848.219 ns/op
# Warmup Iteration   4: 2842.451 ns/op
# Warmup Iteration   5: 2759.580 ns/op
Iteration   1: 2750.260 ns/op
Iteration   2: 2748.772 ns/op
Iteration   3: 2687.751 ns/op
Iteration   4: 2728.002 ns/op
Iteration   5: 2803.149 ns/op

# Run progress: 86.46% complete, ETA 00:21:42
# Fork: 3 of 3
# Warmup Iteration   1: 2724.041 ns/op
# Warmup Iteration   2: 2739.504 ns/op
# Warmup Iteration   3: 2665.363 ns/op
# Warmup Iteration   4: 2667.869 ns/op
# Warmup Iteration   5: 2705.560 ns/op
Iteration   1: 2834.231 ns/op
Iteration   2: 2819.036 ns/op
Iteration   3: 2730.609 ns/op
Iteration   4: 2732.142 ns/op
Iteration   5: 2827.874 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.SecureRandomGeneratorBenchmark.random_next_bytes":
  2770.774 ±(99.9%) 58.648 ns/op [Average]
  (min, avg, max) = (2659.565, 2770.774, 2834.231), stdev = 54.860
  CI (99.9%): [2712.125, 2829.422] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.SecureRandomGeneratorBenchmark.random_next_bytes
# Parameters: (algorithm = DRBG, size = 128)

# Run progress: 87.50% complete, ETA 00:20:02
# Fork: 1 of 3
# Warmup Iteration   1: 1747.556 ns/op
# Warmup Iteration   2: 1747.617 ns/op
# Warmup Iteration   3: 1730.558 ns/op
# Warmup Iteration   4: 1707.177 ns/op
# Warmup Iteration   5: 1674.092 ns/op
Iteration   1: 1639.980 ns/op
Iteration   2: 1740.877 ns/op
Iteration   3: 1735.975 ns/op
Iteration   4: 1728.534 ns/op
Iteration   5: 1667.776 ns/op

# Run progress: 88.54% complete, ETA 00:18:22
# Fork: 2 of 3
# Warmup Iteration   1: 1785.957 ns/op
# Warmup Iteration   2: 1679.617 ns/op
# Warmup Iteration   3: 1682.931 ns/op
# Warmup Iteration   4: 1684.754 ns/op
# Warmup Iteration   5: 1743.907 ns/op
Iteration   1: 1632.683 ns/op
Iteration   2: 1639.873 ns/op
Iteration   3: 1640.824 ns/op
Iteration   4: 1662.401 ns/op
Iteration   5: 1737.619 ns/op

# Run progress: 89.58% complete, ETA 00:16:42
# Fork: 3 of 3
# Warmup Iteration   1: 1689.158 ns/op
# Warmup Iteration   2: 1666.069 ns/op
# Warmup Iteration   3: 1653.081 ns/op
# Warmup Iteration   4: 1760.564 ns/op
# Warmup Iteration   5: 1675.838 ns/op
Iteration   1: 1656.515 ns/op
Iteration   2: 1655.030 ns/op
Iteration   3: 1659.171 ns/op
Iteration   4: 1656.441 ns/op
Iteration   5: 1656.555 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.SecureRandomGeneratorBenchmark.random_next_bytes":
  1674.017 ±(99.9%) 42.510 ns/op [Average]
  (min, avg, max) = (1632.683, 1674.017, 1740.877), stdev = 39.763
  CI (99.9%): [1631.507, 1716.526] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.SecureRandomGeneratorBenchmark.random_next_long
# Parameters: (algorithm = default, size = 128)

# Run progress: 90.63% complete, ETA 00:15:02
# Fork: 1 of 3
# Warmup Iteration   1: 290.409 ns/op
# Warmup Iteration   2: 287.943 ns/op
# Warmup Iteration   3: 294.643 ns/op
# Warmup Iteration   4: 288.053 ns/op
# Warmup Iteration   5: 284.818 ns/op
Iteration   1: 292.501 ns/op
Iteration   2: 295.962 ns/op
Iteration   3: 286.663 ns/op
Iteration   4: 280.480 ns/op
Iteration   5: 280.824 ns/op

# Run progress: 91.67% complete, ETA 00:13:21
# Fork: 2 of 3
# Warmup Iteration   1: 286.308 ns/op
# Warmup Iteration   2: 300.203 ns/op
# Warmup Iteration   3: 293.903 ns/op
# Warmup Iteration   4: 290.631 ns/op
# Warmup Iteration   5: 282.928 ns/op
Iteration   1: 284.394 ns/op
Iteration   2: 286.987 ns/op
Iteration   3: 300.837 ns/op
Iteration   4: 298.606 ns/op
Iteration   5: 299.301 ns/op

# Run progress: 92.71% complete, ETA 00:11:41
# Fork: 3 of 3
# Warmup Iteration   1: 283.503 ns/op
# Warmup Iteration   2: 291.692 ns/op
# Warmup Iteration   3: 287.959 ns/op
# Warmup Iteration   4: 300.059 ns/op
# Warmup Iteration   5: 295.518 ns/op
Iteration   1: 293.235 ns/op
Iteration   2: 282.049 ns/op
Iteration   3: 297.303 ns/op
Iteration   4: 293.646 ns/op
Iteration   5: 287.448 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.SecureRandomGeneratorBenchmark.random_next_long":
  290.682 ±(99.9%) 7.484 ns/op [Average]
  (min, avg, max) = (280.480, 290.682, 300.837), stdev = 7.001
  CI (99.9%): [283.198, 298.167] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.SecureRandomGeneratorBenchmark.random_next_long
# Parameters: (algorithm = NativePRNG, size = 128)

# Run progress: 93.75% complete, ETA 00:10:01
# Fork: 1 of 3
# Warmup Iteration   1: 296.202 ns/op
# Warmup Iteration   2: 285.471 ns/op
# Warmup Iteration   3: 287.276 ns/op
# Warmup Iteration   4: 302.762 ns/op
# Warmup Iteration   5: 285.557 ns/op
Iteration   1: 292.751 ns/op
Iteration   2: 303.509 ns/op
Iteration   3: 302.504 ns/op
Iteration   4: 295.727 ns/op
Iteration   5: 290.848 ns/op

# Run progress: 94.79% complete, ETA 00:08:21
# Fork: 2 of 3
# Warmup Iteration   1: 294.368 ns/op
# Warmup Iteration   2: 298.607 ns/op
# Warmup Iteration   3: 294.919 ns/op
# Warmup Iteration   4: 294.887 ns/op
# Warmup Iteration   5: 292.709 ns/op
Iteration   1: 300.209 ns/op
Iteration   2: 299.907 ns/op
Iteration   3: 288.435 ns/op
Iteration   4: 289.873 ns/op
Iteration   5: 299.918 ns/op

# Run progress: 95.83% complete, ETA 00:06:40
# Fork: 3 of 3
# Warmup Iteration   1: 296.352 ns/op
# Warmup Iteration   2: 294.493 ns/op
# Warmup Iteration   3: 299.931 ns/op
# Warmup Iteration   4: 298.766 ns/op
# Warmup Iteration   5: 293.409 ns/op
Iteration   1: 288.909 ns/op
Iteration   2: 292.787 ns/op
Iteration   3: 300.343 ns/op
Iteration   4: 294.048 ns/op
Iteration   5: 288.143 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.SecureRandomGeneratorBenchmark.random_next_long":
  295.194 ±(99.9%) 5.815 ns/op [Average]
  (min, avg, max) = (288.143, 295.194, 303.509), stdev = 5.439
  CI (99.9%): [289.379, 301.009] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.SecureRandomGeneratorBenchmark.random_next_long
# Parameters: (algorithm = DRBG, size = 128)

# Run progress: 96.88% complete, ETA 00:05:00
# Fork: 1 of 3
# Warmup Iteration   1: 1766.829 ns/op
# Warmup Iteration   2: 1884.534 ns/op
# Warmup Iteration   3: 1797.250 ns/op
# Warmup Iteration   4: 1871.433 ns/op
# Warmup Iteration   5: 1825.551 ns/op
Iteration   1: 1859.548 ns/op
Iteration   2: 1860.541 ns/op
Iteration   3: 1855.882 ns/op
Iteration   4: 1853.116 ns/op
Iteration   5: 1850.790 ns/op

# Run progress: 97.92% complete, ETA 00:03:20
# Fork: 2 of 3
# Warmup Iteration   1: 1801.509 ns/op
# Warmup Iteration   2: 1766.331 ns/op
# Warmup Iteration   3: 1851.011 ns/op
# Warmup Iteration   4: 1845.579 ns/op
# Warmup Iteration   5: 1844.775 ns/op
Iteration   1: 1841.804 ns/op
Iteration   2: 1839.417 ns/op
Iteration   3: 1832.652 ns/op
Iteration   4: 1800.343 ns/op
Iteration   5: 1715.759 ns/op

# Run progress: 98.96% complete, ETA 00:01:40
# Fork: 3 of 3
# Warmup Iteration   1: 1833.327 ns/op
# Warmup Iteration   2: 1743.176 ns/op
# Warmup Iteration   3: 1769.026 ns/op
# Warmup Iteration   4: 1857.387 ns/op
# Warmup Iteration   5: 1824.919 ns/op
Iteration   1: 1863.488 ns/op
Iteration   2: 1856.069 ns/op
Iteration   3: 1819.435 ns/op
Iteration   4: 1764.493 ns/op
Iteration   5: 1836.453 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.SecureRandomGeneratorBenchmark.random_next_long":
  1829.986 ±(99.9%) 44.128 ns/op [Average]
  (min, avg, max) = (1715.759, 1829.986, 1863.488), stdev = 41.277
  CI (99.9%): [1785.858, 1874.114] (assumes normal distribution)


# Run complete. Total time: 02:40:21

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                                    (algorithm)  (size)  Mode  Cnt     Score    Error  Units
RandomGeneratorBenchmark.random_doubles_array                        N/A     128  avgt   15  2428.612 ±  8.811  ns/op
RandomGeneratorBenchmark.random_ints_array                           N/A     128  avgt   15  1212.910 ± 26.668  ns/op
RandomGeneratorBenchmark.random_longs_array                          N/A     128  avgt   15  2430.304 ± 10.469  ns/op
RandomGeneratorBenchmark.random_next_boolean                         N/A     128  avgt   15     9.112 ±  0.206  ns/op
RandomGeneratorBenchmark.random_next_bytes_array                     N/A     128  avgt   15   308.477 ±  4.678  ns/op
RandomGeneratorBenchmark.random_next_double                          N/A     128  avgt   15    17.891 ±  0.023  ns/op
RandomGeneratorBenchmark.random_next_float                           N/A     128  avgt   15     9.194 ±  0.192  ns/op
RandomGeneratorBenchmark.random_next_int                             N/A     128  avgt   15     9.198 ±  0.192  ns/op
RandomGeneratorBenchmark.random_next_long                            N/A     128  avgt   15    17.902 ±  0.036  ns/op
RandomGeneratorBenchmark.splittable_random_doubles_array             N/A     128  avgt   15   392.401 ±  5.319  ns/op
RandomGeneratorBenchmark.splittable_random_ints_array                N/A     128  avgt   15   291.667 ±  4.117  ns/op
RandomGeneratorBenchmark.splittable_random_longs_array               N/A     128  avgt   15   350.285 ±  3.906  ns/op
RandomGeneratorBenchmark.splittable_random_next_boolean              N/A     128  avgt   15     3.596 ±  0.091  ns/op
RandomGeneratorBenchmark.splittable_random_next_bytes_array          N/A     128  avgt   15    89.022 ±  2.622  ns/op
RandomGeneratorBenchmark.splittable_random_next_double               N/A     128  avgt   15     4.443 ±  0.112  ns/op
RandomGeneratorBenchmark.splittable_random_next_int                  N/A     128  avgt   15     3.212 ±  0.101  ns/op
RandomGeneratorBenchmark.splittable_random_next_long                 N/A     128  avgt   15     3.258 ±  0.042  ns/op
RandomGeneratorBenchmark.thread_local_doubles_array                  N/A     128  avgt   15   391.156 ±  3.707  ns/op
RandomGeneratorBenchmark.thread_local_ints_array                     N/A     128  avgt   15   291.152 ±  4.239  ns/op
RandomGeneratorBenchmark.thread_local_longs_array                    N/A     128  avgt   15   342.135 ±  3.005  ns/op
RandomGeneratorBenchmark.thread_local_next_boolean                   N/A     128  avgt   15     3.773 ±  0.107  ns/op
RandomGeneratorBenchmark.thread_local_next_bytes_array               N/A     128  avgt   15   155.061 ±  4.308  ns/op
RandomGeneratorBenchmark.thread_local_next_double                    N/A     128  avgt   15     4.274 ±  0.137  ns/op
RandomGeneratorBenchmark.thread_local_next_float                     N/A     128  avgt   15     4.196 ±  0.099  ns/op
RandomGeneratorBenchmark.thread_local_next_int                       N/A     128  avgt   15     3.368 ±  0.071  ns/op
RandomGeneratorBenchmark.thread_local_next_long                      N/A     128  avgt   15     4.373 ±  0.999  ns/op
SecureRandomGeneratorBenchmark.random_next_bytes                 default     128  avgt   15  2729.609 ± 44.097  ns/op
SecureRandomGeneratorBenchmark.random_next_bytes              NativePRNG     128  avgt   15  2770.774 ± 58.648  ns/op
SecureRandomGeneratorBenchmark.random_next_bytes                    DRBG     128  avgt   15  1674.017 ± 42.510  ns/op
SecureRandomGeneratorBenchmark.random_next_long                  default     128  avgt   15   290.682 ±  7.484  ns/op
SecureRandomGeneratorBenchmark.random_next_long               NativePRNG     128  avgt   15   295.194 ±  5.815  ns/op
SecureRandomGeneratorBenchmark.random_next_long                     DRBG     128  avgt   15  1829.986 ± 44.128  ns/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_c1_c2_jit/RandomGeneratorBenchmark.json
Running java  -jar benchmarks/target/benchmarks.jar .*SecureRandomGeneratorBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_c1_c2_jit/SecureRandomGeneratorBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.SecureRandomGeneratorBenchmark.random_next_bytes
# Parameters: (algorithm = default, size = 128)

# Run progress: 0.00% complete, ETA 00:30:00
# Fork: 1 of 3
# Warmup Iteration   1: 2836.024 ns/op
# Warmup Iteration   2: 2792.358 ns/op
# Warmup Iteration   3: 2788.347 ns/op
# Warmup Iteration   4: 2791.594 ns/op
# Warmup Iteration   5: 2742.548 ns/op
Iteration   1: 2791.133 ns/op
Iteration   2: 2793.338 ns/op
Iteration   3: 2793.025 ns/op
Iteration   4: 2790.848 ns/op
Iteration   5: 2757.597 ns/op

# Run progress: 5.56% complete, ETA 00:28:24
# Fork: 2 of 3
# Warmup Iteration   1: 2783.545 ns/op
# Warmup Iteration   2: 2806.762 ns/op
# Warmup Iteration   3: 2813.107 ns/op
# Warmup Iteration   4: 2797.597 ns/op
# Warmup Iteration   5: 2796.037 ns/op
Iteration   1: 2761.531 ns/op
Iteration   2: 2729.287 ns/op
Iteration   3: 2897.059 ns/op
Iteration   4: 2889.487 ns/op
Iteration   5: 2881.510 ns/op

# Run progress: 11.11% complete, ETA 00:26:44
# Fork: 3 of 3
# Warmup Iteration   1: 2727.242 ns/op
# Warmup Iteration   2: 2769.696 ns/op
# Warmup Iteration   3: 2751.311 ns/op
# Warmup Iteration   4: 2739.576 ns/op
# Warmup Iteration   5: 2753.000 ns/op
Iteration   1: 2720.292 ns/op
Iteration   2: 2761.242 ns/op
Iteration   3: 2755.792 ns/op
Iteration   4: 2689.960 ns/op
Iteration   5: 2743.539 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.SecureRandomGeneratorBenchmark.random_next_bytes":
  2783.709 ±(99.9%) 66.230 ns/op [Average]
  (min, avg, max) = (2689.960, 2783.709, 2897.059), stdev = 61.951
  CI (99.9%): [2717.479, 2849.939] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.SecureRandomGeneratorBenchmark.random_next_bytes
# Parameters: (algorithm = NativePRNG, size = 128)

# Run progress: 16.67% complete, ETA 00:25:03
# Fork: 1 of 3
# Warmup Iteration   1: 2862.051 ns/op
# Warmup Iteration   2: 2659.911 ns/op
# Warmup Iteration   3: 2642.866 ns/op
# Warmup Iteration   4: 2720.095 ns/op
# Warmup Iteration   5: 2713.303 ns/op
Iteration   1: 2709.841 ns/op
Iteration   2: 2741.133 ns/op
Iteration   3: 2645.424 ns/op
Iteration   4: 2815.633 ns/op
Iteration   5: 2807.443 ns/op

# Run progress: 22.22% complete, ETA 00:23:23
# Fork: 2 of 3
# Warmup Iteration   1: 2720.862 ns/op
# Warmup Iteration   2: 2837.283 ns/op
# Warmup Iteration   3: 2740.545 ns/op
# Warmup Iteration   4: 2817.023 ns/op
# Warmup Iteration   5: 2691.859 ns/op
Iteration   1: 2835.740 ns/op
Iteration   2: 2696.424 ns/op
Iteration   3: 2733.114 ns/op
Iteration   4: 2725.819 ns/op
Iteration   5: 2739.371 ns/op

# Run progress: 27.78% complete, ETA 00:21:43
# Fork: 3 of 3
# Warmup Iteration   1: 2705.093 ns/op
# Warmup Iteration   2: 2823.527 ns/op
# Warmup Iteration   3: 2789.452 ns/op
# Warmup Iteration   4: 2719.993 ns/op
# Warmup Iteration   5: 2730.522 ns/op
Iteration   1: 2828.209 ns/op
Iteration   2: 2823.260 ns/op
Iteration   3: 2816.594 ns/op
Iteration   4: 2681.352 ns/op
Iteration   5: 2736.081 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.SecureRandomGeneratorBenchmark.random_next_bytes":
  2755.696 ±(99.9%) 65.014 ns/op [Average]
  (min, avg, max) = (2645.424, 2755.696, 2835.740), stdev = 60.814
  CI (99.9%): [2690.682, 2820.710] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.SecureRandomGeneratorBenchmark.random_next_bytes
# Parameters: (algorithm = DRBG, size = 128)

# Run progress: 33.33% complete, ETA 00:20:03
# Fork: 1 of 3
# Warmup Iteration   1: 1682.976 ns/op
# Warmup Iteration   2: 1652.065 ns/op
# Warmup Iteration   3: 1681.636 ns/op
# Warmup Iteration   4: 1721.135 ns/op
# Warmup Iteration   5: 1696.736 ns/op
Iteration   1: 1729.252 ns/op
Iteration   2: 1774.378 ns/op
Iteration   3: 1730.165 ns/op
Iteration   4: 1689.362 ns/op
Iteration   5: 1693.790 ns/op

# Run progress: 38.89% complete, ETA 00:18:22
# Fork: 2 of 3
# Warmup Iteration   1: 1706.718 ns/op
# Warmup Iteration   2: 1668.032 ns/op
# Warmup Iteration   3: 1781.351 ns/op
# Warmup Iteration   4: 1770.383 ns/op
# Warmup Iteration   5: 1703.839 ns/op
Iteration   1: 1688.926 ns/op
Iteration   2: 1687.397 ns/op
Iteration   3: 1734.345 ns/op
Iteration   4: 1770.850 ns/op
Iteration   5: 1705.877 ns/op

# Run progress: 44.44% complete, ETA 00:16:42
# Fork: 3 of 3
# Warmup Iteration   1: 1786.459 ns/op
# Warmup Iteration   2: 1752.634 ns/op
# Warmup Iteration   3: 1749.218 ns/op
# Warmup Iteration   4: 1748.410 ns/op
# Warmup Iteration   5: 1751.743 ns/op
Iteration   1: 1710.949 ns/op
Iteration   2: 1677.249 ns/op
Iteration   3: 1684.422 ns/op
Iteration   4: 1662.036 ns/op
Iteration   5: 1766.846 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.SecureRandomGeneratorBenchmark.random_next_bytes":
  1713.723 ±(99.9%) 38.258 ns/op [Average]
  (min, avg, max) = (1662.036, 1713.723, 1774.378), stdev = 35.787
  CI (99.9%): [1675.464, 1751.981] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.SecureRandomGeneratorBenchmark.random_next_long
# Parameters: (algorithm = default, size = 128)

# Run progress: 50.00% complete, ETA 00:15:02
# Fork: 1 of 3
# Warmup Iteration   1: 293.556 ns/op
# Warmup Iteration   2: 291.039 ns/op
# Warmup Iteration   3: 286.300 ns/op
# Warmup Iteration   4: 290.395 ns/op
# Warmup Iteration   5: 295.522 ns/op
Iteration   1: 290.801 ns/op
Iteration   2: 293.444 ns/op
Iteration   3: 295.476 ns/op
Iteration   4: 288.699 ns/op
Iteration   5: 291.592 ns/op

# Run progress: 55.56% complete, ETA 00:13:22
# Fork: 2 of 3
# Warmup Iteration   1: 297.326 ns/op
# Warmup Iteration   2: 295.554 ns/op
# Warmup Iteration   3: 298.397 ns/op
# Warmup Iteration   4: 291.927 ns/op
# Warmup Iteration   5: 293.215 ns/op
Iteration   1: 299.701 ns/op
Iteration   2: 298.988 ns/op
Iteration   3: 299.151 ns/op
Iteration   4: 299.064 ns/op
Iteration   5: 280.976 ns/op

# Run progress: 61.11% complete, ETA 00:11:41
# Fork: 3 of 3
# Warmup Iteration   1: 282.824 ns/op
# Warmup Iteration   2: 304.117 ns/op
# Warmup Iteration   3: 309.595 ns/op
# Warmup Iteration   4: 312.551 ns/op
# Warmup Iteration   5: 311.278 ns/op
Iteration   1: 311.147 ns/op
Iteration   2: 291.458 ns/op
Iteration   3: 294.919 ns/op
Iteration   4: 296.619 ns/op
Iteration   5: 314.046 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.SecureRandomGeneratorBenchmark.random_next_long":
  296.405 ±(99.9%) 8.802 ns/op [Average]
  (min, avg, max) = (280.976, 296.405, 314.046), stdev = 8.233
  CI (99.9%): [287.603, 305.207] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.SecureRandomGeneratorBenchmark.random_next_long
# Parameters: (algorithm = NativePRNG, size = 128)

# Run progress: 66.67% complete, ETA 00:10:01
# Fork: 1 of 3
# Warmup Iteration   1: 289.602 ns/op
# Warmup Iteration   2: 285.124 ns/op
# Warmup Iteration   3: 282.875 ns/op
# Warmup Iteration   4: 287.198 ns/op
# Warmup Iteration   5: 287.677 ns/op
Iteration   1: 287.251 ns/op
Iteration   2: 287.308 ns/op
Iteration   3: 286.966 ns/op
Iteration   4: 294.653 ns/op
Iteration   5: 286.315 ns/op

# Run progress: 72.22% complete, ETA 00:08:21
# Fork: 2 of 3
# Warmup Iteration   1: 307.572 ns/op
# Warmup Iteration   2: 302.233 ns/op
# Warmup Iteration   3: 295.078 ns/op
# Warmup Iteration   4: 293.122 ns/op
# Warmup Iteration   5: 296.060 ns/op
Iteration   1: 304.735 ns/op
Iteration   2: 303.865 ns/op
Iteration   3: 297.446 ns/op
Iteration   4: 292.855 ns/op
Iteration   5: 287.788 ns/op

# Run progress: 77.78% complete, ETA 00:06:40
# Fork: 3 of 3
# Warmup Iteration   1: 299.935 ns/op
# Warmup Iteration   2: 294.887 ns/op
# Warmup Iteration   3: 299.991 ns/op
# Warmup Iteration   4: 299.897 ns/op
# Warmup Iteration   5: 299.556 ns/op
Iteration   1: 298.467 ns/op
Iteration   2: 284.717 ns/op
Iteration   3: 281.845 ns/op
Iteration   4: 292.833 ns/op
Iteration   5: 290.230 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.SecureRandomGeneratorBenchmark.random_next_long":
  291.818 ±(99.9%) 7.350 ns/op [Average]
  (min, avg, max) = (281.845, 291.818, 304.735), stdev = 6.875
  CI (99.9%): [284.469, 299.168] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.SecureRandomGeneratorBenchmark.random_next_long
# Parameters: (algorithm = DRBG, size = 128)

# Run progress: 83.33% complete, ETA 00:05:00
# Fork: 1 of 3
# Warmup Iteration   1: 1881.201 ns/op
# Warmup Iteration   2: 1739.968 ns/op
# Warmup Iteration   3: 1860.218 ns/op
# Warmup Iteration   4: 1888.531 ns/op
# Warmup Iteration   5: 1782.643 ns/op
Iteration   1: 1811.147 ns/op
Iteration   2: 1793.804 ns/op
Iteration   3: 1793.974 ns/op
Iteration   4: 1743.686 ns/op
Iteration   5: 1841.215 ns/op

# Run progress: 88.89% complete, ETA 00:03:20
# Fork: 2 of 3
# Warmup Iteration   1: 88428243974.000 ns/op
# Warmup Iteration   2: 1837.018 ns/op
# Warmup Iteration   3: 1792.053 ns/op
# Warmup Iteration   4: 1720.795 ns/op
# Warmup Iteration   5: 1773.873 ns/op
Iteration   1: 1736.113 ns/op
Iteration   2: 1860.315 ns/op
Iteration   3: 1857.593 ns/op
Iteration   4: 1854.444 ns/op
Iteration   5: 1855.650 ns/op

# Run progress: 94.44% complete, ETA 00:01:44
# Fork: 3 of 3
# Warmup Iteration   1: 161743262097.000 ns/op
# Warmup Iteration   2: 1777.230 ns/op
# Warmup Iteration   3: 1719.040 ns/op
# Warmup Iteration   4: 1809.067 ns/op
# Warmup Iteration   5: 1789.312 ns/op
Iteration   1: 1823.021 ns/op
Iteration   2: 1750.945 ns/op
Iteration   3: 1817.457 ns/op
Iteration   4: 1709.475 ns/op
Iteration   5: 1719.484 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.SecureRandomGeneratorBenchmark.random_next_long":
  1797.888 ±(99.9%) 57.157 ns/op [Average]
  (min, avg, max) = (1709.475, 1797.888, 1860.315), stdev = 53.464
  CI (99.9%): [1740.731, 1855.045] (assumes normal distribution)


# Run complete. Total time: 00:33:54

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                         (algorithm)  (size)  Mode  Cnt     Score    Error  Units
SecureRandomGeneratorBenchmark.random_next_bytes      default     128  avgt   15  2783.709 ± 66.230  ns/op
SecureRandomGeneratorBenchmark.random_next_bytes   NativePRNG     128  avgt   15  2755.696 ± 65.014  ns/op
SecureRandomGeneratorBenchmark.random_next_bytes         DRBG     128  avgt   15  1713.723 ± 38.258  ns/op
SecureRandomGeneratorBenchmark.random_next_long       default     128  avgt   15   296.405 ±  8.802  ns/op
SecureRandomGeneratorBenchmark.random_next_long    NativePRNG     128  avgt   15   291.818 ±  7.350  ns/op
SecureRandomGeneratorBenchmark.random_next_long          DRBG     128  avgt   15  1797.888 ± 57.157  ns/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_c1_c2_jit/SecureRandomGeneratorBenchmark.json
Running java  -jar benchmarks/target/benchmarks.jar .*MapBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_c1_c2_jit/MapBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.entrySet_full_iteration
# Parameters: (dummyData = 32768, mapType = HASH_MAP, realData = 512)

# Run progress: 0.00% complete, ETA 02:05:00
# Fork: 1 of 3
# Warmup Iteration   1: 564005.273 ns/op
# Warmup Iteration   2: 563991.564 ns/op
# Warmup Iteration   3: 561423.624 ns/op
# Warmup Iteration   4: 561869.532 ns/op
# Warmup Iteration   5: 562738.348 ns/op
Iteration   1: 565827.384 ns/op
Iteration   2: 565417.196 ns/op
Iteration   3: 564885.216 ns/op
Iteration   4: 566827.441 ns/op
Iteration   5: 566113.215 ns/op

# Run progress: 1.33% complete, ETA 02:03:42
# Fork: 2 of 3
# Warmup Iteration   1: 545149.894 ns/op
# Warmup Iteration   2: 544548.948 ns/op
# Warmup Iteration   3: 545072.371 ns/op
# Warmup Iteration   4: 542144.737 ns/op
# Warmup Iteration   5: 540211.298 ns/op
Iteration   1: 550357.334 ns/op
Iteration   2: 545344.089 ns/op
Iteration   3: 545031.001 ns/op
Iteration   4: 545491.362 ns/op
Iteration   5: 546219.666 ns/op

# Run progress: 2.67% complete, ETA 02:01:59
# Fork: 3 of 3
# Warmup Iteration   1: 578021.390 ns/op
# Warmup Iteration   2: 574142.257 ns/op
# Warmup Iteration   3: 571694.294 ns/op
# Warmup Iteration   4: 568056.658 ns/op
# Warmup Iteration   5: 564353.029 ns/op
Iteration   1: 568810.447 ns/op
Iteration   2: 570093.745 ns/op
Iteration   3: 568652.212 ns/op
Iteration   4: 568083.408 ns/op
Iteration   5: 570440.665 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.entrySet_full_iteration":
  560506.292 ±(99.9%) 11169.632 ns/op [Average]
  (min, avg, max) = (545031.001, 560506.292, 570440.665), stdev = 10448.080
  CI (99.9%): [549336.660, 571675.924] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.entrySet_full_iteration
# Parameters: (dummyData = 32768, mapType = LINKED_HASH_MAP, realData = 512)

# Run progress: 4.00% complete, ETA 02:00:18
# Fork: 1 of 3
# Warmup Iteration   1: 166945.605 ns/op
# Warmup Iteration   2: 167372.085 ns/op
# Warmup Iteration   3: 166568.474 ns/op
# Warmup Iteration   4: 171190.703 ns/op
# Warmup Iteration   5: 170709.821 ns/op
Iteration   1: 170525.663 ns/op
Iteration   2: 170435.958 ns/op
Iteration   3: 169435.221 ns/op
Iteration   4: 170675.686 ns/op
Iteration   5: 170503.834 ns/op

# Run progress: 5.33% complete, ETA 01:58:37
# Fork: 2 of 3
# Warmup Iteration   1: 169574.553 ns/op
# Warmup Iteration   2: 168150.882 ns/op
# Warmup Iteration   3: 167042.359 ns/op
# Warmup Iteration   4: 159214.521 ns/op
# Warmup Iteration   5: 158867.544 ns/op
Iteration   1: 161009.087 ns/op
Iteration   2: 160673.117 ns/op
Iteration   3: 160812.000 ns/op
Iteration   4: 161343.501 ns/op
Iteration   5: 160981.875 ns/op

# Run progress: 6.67% complete, ETA 01:56:57
# Fork: 3 of 3
# Warmup Iteration   1: 172765.662 ns/op
# Warmup Iteration   2: 170142.350 ns/op
# Warmup Iteration   3: 155739.854 ns/op
# Warmup Iteration   4: 160629.727 ns/op
# Warmup Iteration   5: 161050.363 ns/op
Iteration   1: 161273.198 ns/op
Iteration   2: 160696.834 ns/op
Iteration   3: 174796.870 ns/op
Iteration   4: 172341.329 ns/op
Iteration   5: 172741.188 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.entrySet_full_iteration":
  166549.691 ±(99.9%) 5925.792 ns/op [Average]
  (min, avg, max) = (160673.117, 166549.691, 174796.870), stdev = 5542.989
  CI (99.9%): [160623.899, 172475.483] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.entrySet_full_iteration
# Parameters: (dummyData = 32768, mapType = TREE_MAP, realData = 512)

# Run progress: 8.00% complete, ETA 01:55:16
# Fork: 1 of 3
# Warmup Iteration   1: 591702.070 ns/op
# Warmup Iteration   2: 593159.375 ns/op
# Warmup Iteration   3: 593419.473 ns/op
# Warmup Iteration   4: 595090.540 ns/op
# Warmup Iteration   5: 598160.252 ns/op
Iteration   1: 593321.524 ns/op
Iteration   2: 771074.205 ns/op
Iteration   3: 666350.214 ns/op
Iteration   4: 653918.215 ns/op
Iteration   5: 651630.882 ns/op

# Run progress: 9.33% complete, ETA 01:53:36
# Fork: 2 of 3
# Warmup Iteration   1: 627865.612 ns/op
# Warmup Iteration   2: 600660.714 ns/op
# Warmup Iteration   3: 600089.005 ns/op
# Warmup Iteration   4: 598249.917 ns/op
# Warmup Iteration   5: 630587.578 ns/op
Iteration   1: 631821.889 ns/op
Iteration   2: 720163.847 ns/op
Iteration   3: 639133.411 ns/op
Iteration   4: 652198.793 ns/op
Iteration   5: 642059.600 ns/op

# Run progress: 10.67% complete, ETA 01:51:56
# Fork: 3 of 3
# Warmup Iteration   1: 599856.654 ns/op
# Warmup Iteration   2: 597821.156 ns/op
# Warmup Iteration   3: 600111.521 ns/op
# Warmup Iteration   4: 598813.568 ns/op
# Warmup Iteration   5: 597319.300 ns/op
Iteration   1: 599233.324 ns/op
Iteration   2: 709343.184 ns/op
Iteration   3: 615668.096 ns/op
Iteration   4: 616982.940 ns/op
Iteration   5: 617435.201 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.entrySet_full_iteration":
  652022.355 ±(99.9%) 51874.173 ns/op [Average]
  (min, avg, max) = (593321.524, 652022.355, 771074.205), stdev = 48523.134
  CI (99.9%): [600148.182, 703896.528] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.entrySet_full_iteration
# Parameters: (dummyData = 32768, mapType = IDENTITY_HASH_MAP, realData = 512)

# Run progress: 12.00% complete, ETA 01:50:15
# Fork: 1 of 3
# Warmup Iteration   1: 515607.411 ns/op
# Warmup Iteration   2: 480011.994 ns/op
# Warmup Iteration   3: 499990.019 ns/op
# Warmup Iteration   4: 486262.927 ns/op
# Warmup Iteration   5: 486977.771 ns/op
Iteration   1: 494913.158 ns/op
Iteration   2: 497420.725 ns/op
Iteration   3: 503378.693 ns/op
Iteration   4: 503982.038 ns/op
Iteration   5: 506298.667 ns/op

# Run progress: 13.33% complete, ETA 01:48:35
# Fork: 2 of 3
# Warmup Iteration   1: 505264.489 ns/op
# Warmup Iteration   2: 478248.685 ns/op
# Warmup Iteration   3: 488529.436 ns/op
# Warmup Iteration   4: 495395.911 ns/op
# Warmup Iteration   5: 482420.994 ns/op
Iteration   1: 480976.812 ns/op
Iteration   2: 501448.280 ns/op
Iteration   3: 514358.967 ns/op
Iteration   4: 508937.625 ns/op
Iteration   5: 495586.137 ns/op

# Run progress: 14.67% complete, ETA 01:46:55
# Fork: 3 of 3
# Warmup Iteration   1: 496062.130 ns/op
# Warmup Iteration   2: 487475.211 ns/op
# Warmup Iteration   3: 491608.250 ns/op
# Warmup Iteration   4: 496140.392 ns/op
# Warmup Iteration   5: 496200.597 ns/op
Iteration   1: 492366.257 ns/op
Iteration   2: 504360.389 ns/op
Iteration   3: 504579.475 ns/op
Iteration   4: 511867.203 ns/op
Iteration   5: 513348.095 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.entrySet_full_iteration":
  502254.835 ±(99.9%) 9519.156 ns/op [Average]
  (min, avg, max) = (480976.812, 502254.835, 514358.967), stdev = 8904.225
  CI (99.9%): [492735.678, 511773.991] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.entrySet_full_iteration
# Parameters: (dummyData = 32768, mapType = CONCURRENT_SKIP_LIST_MAP, realData = 512)

# Run progress: 16.00% complete, ETA 01:45:15
# Fork: 1 of 3
# Warmup Iteration   1: 206432.423 ns/op
# Warmup Iteration   2: 202084.051 ns/op
# Warmup Iteration   3: 250855.963 ns/op
# Warmup Iteration   4: 209301.672 ns/op
# Warmup Iteration   5: 208817.951 ns/op
Iteration   1: 214957.885 ns/op
Iteration   2: 212376.110 ns/op
Iteration   3: 205061.034 ns/op
Iteration   4: 212352.656 ns/op
Iteration   5: 202582.135 ns/op

# Run progress: 17.33% complete, ETA 01:43:35
# Fork: 2 of 3
# Warmup Iteration   1: 210185.203 ns/op
# Warmup Iteration   2: 203745.870 ns/op
# Warmup Iteration   3: 253569.539 ns/op
# Warmup Iteration   4: 210371.750 ns/op
# Warmup Iteration   5: 204904.552 ns/op
Iteration   1: 208864.177 ns/op
Iteration   2: 211626.226 ns/op
Iteration   3: 212284.720 ns/op
Iteration   4: 214691.582 ns/op
Iteration   5: 206624.338 ns/op

# Run progress: 18.67% complete, ETA 01:41:55
# Fork: 3 of 3
# Warmup Iteration   1: 204317.940 ns/op
# Warmup Iteration   2: 207127.634 ns/op
# Warmup Iteration   3: 249965.970 ns/op
# Warmup Iteration   4: 209389.848 ns/op
# Warmup Iteration   5: 207906.230 ns/op
Iteration   1: 209915.004 ns/op
Iteration   2: 209836.518 ns/op
Iteration   3: 214017.586 ns/op
Iteration   4: 216229.730 ns/op
Iteration   5: 208476.933 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.entrySet_full_iteration":
  210659.776 ±(99.9%) 4125.788 ns/op [Average]
  (min, avg, max) = (202582.135, 210659.776, 216229.730), stdev = 3859.265
  CI (99.9%): [206533.987, 214785.564] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.get
# Parameters: (dummyData = 32768, mapType = HASH_MAP, realData = 512)

# Run progress: 20.00% complete, ETA 01:40:15
# Fork: 1 of 3
# Warmup Iteration   1: 7.598 ns/op
# Warmup Iteration   2: 7.575 ns/op
# Warmup Iteration   3: 7.736 ns/op
# Warmup Iteration   4: 7.733 ns/op
# Warmup Iteration   5: 7.749 ns/op
Iteration   1: 7.744 ns/op
Iteration   2: 7.743 ns/op
Iteration   3: 7.762 ns/op
Iteration   4: 7.717 ns/op
Iteration   5: 7.731 ns/op

# Run progress: 21.33% complete, ETA 01:38:34
# Fork: 2 of 3
# Warmup Iteration   1: 8.214 ns/op
# Warmup Iteration   2: 7.898 ns/op
# Warmup Iteration   3: 8.078 ns/op
# Warmup Iteration   4: 8.057 ns/op
# Warmup Iteration   5: 8.086 ns/op
Iteration   1: 8.048 ns/op
Iteration   2: 8.072 ns/op
Iteration   3: 8.015 ns/op
Iteration   4: 8.090 ns/op
Iteration   5: 8.080 ns/op

# Run progress: 22.67% complete, ETA 01:36:54
# Fork: 3 of 3
# Warmup Iteration   1: 7.558 ns/op
# Warmup Iteration   2: 8.235 ns/op
# Warmup Iteration   3: 8.378 ns/op
# Warmup Iteration   4: 8.346 ns/op
# Warmup Iteration   5: 8.340 ns/op
Iteration   1: 8.340 ns/op
Iteration   2: 8.321 ns/op
Iteration   3: 8.311 ns/op
Iteration   4: 8.313 ns/op
Iteration   5: 8.306 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.get":
  8.040 ±(99.9%) 0.263 ns/op [Average]
  (min, avg, max) = (7.717, 8.040, 8.340), stdev = 0.246
  CI (99.9%): [7.777, 8.303] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.get
# Parameters: (dummyData = 32768, mapType = LINKED_HASH_MAP, realData = 512)

# Run progress: 24.00% complete, ETA 01:35:14
# Fork: 1 of 3
# Warmup Iteration   1: 8.386 ns/op
# Warmup Iteration   2: 8.344 ns/op
# Warmup Iteration   3: 8.496 ns/op
# Warmup Iteration   4: 8.189 ns/op
# Warmup Iteration   5: 8.195 ns/op
Iteration   1: 8.201 ns/op
Iteration   2: 8.175 ns/op
Iteration   3: 8.191 ns/op
Iteration   4: 8.150 ns/op
Iteration   5: 8.581 ns/op

# Run progress: 25.33% complete, ETA 01:33:33
# Fork: 2 of 3
# Warmup Iteration   1: 8.106 ns/op
# Warmup Iteration   2: 8.018 ns/op
# Warmup Iteration   3: 8.131 ns/op
# Warmup Iteration   4: 8.132 ns/op
# Warmup Iteration   5: 8.132 ns/op
Iteration   1: 8.150 ns/op
Iteration   2: 8.148 ns/op
Iteration   3: 8.154 ns/op
Iteration   4: 8.136 ns/op
Iteration   5: 8.159 ns/op

# Run progress: 26.67% complete, ETA 01:31:53
# Fork: 3 of 3
# Warmup Iteration   1: 8.892 ns/op
# Warmup Iteration   2: 8.702 ns/op
# Warmup Iteration   3: 8.879 ns/op
# Warmup Iteration   4: 8.869 ns/op
# Warmup Iteration   5: 8.846 ns/op
Iteration   1: 8.825 ns/op
Iteration   2: 8.843 ns/op
Iteration   3: 8.853 ns/op
Iteration   4: 8.833 ns/op
Iteration   5: 8.849 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.get":
  8.417 ±(99.9%) 0.351 ns/op [Average]
  (min, avg, max) = (8.136, 8.417, 8.853), stdev = 0.328
  CI (99.9%): [8.065, 8.768] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.get
# Parameters: (dummyData = 32768, mapType = TREE_MAP, realData = 512)

# Run progress: 28.00% complete, ETA 01:30:13
# Fork: 1 of 3
# Warmup Iteration   1: 180.180 ns/op
# Warmup Iteration   2: 179.534 ns/op
# Warmup Iteration   3: 185.266 ns/op
# Warmup Iteration   4: 185.412 ns/op
# Warmup Iteration   5: 184.981 ns/op
Iteration   1: 180.684 ns/op
Iteration   2: 185.197 ns/op
Iteration   3: 185.109 ns/op
Iteration   4: 184.629 ns/op
Iteration   5: 185.023 ns/op

# Run progress: 29.33% complete, ETA 01:28:33
# Fork: 2 of 3
# Warmup Iteration   1: 181.282 ns/op
# Warmup Iteration   2: 183.193 ns/op
# Warmup Iteration   3: 186.798 ns/op
# Warmup Iteration   4: 186.732 ns/op
# Warmup Iteration   5: 186.295 ns/op
Iteration   1: 185.917 ns/op
Iteration   2: 186.232 ns/op
Iteration   3: 174.745 ns/op
Iteration   4: 175.392 ns/op
Iteration   5: 175.093 ns/op

# Run progress: 30.67% complete, ETA 01:26:52
# Fork: 3 of 3
# Warmup Iteration   1: 172.728 ns/op
# Warmup Iteration   2: 171.642 ns/op
# Warmup Iteration   3: 175.924 ns/op
# Warmup Iteration   4: 177.304 ns/op
# Warmup Iteration   5: 176.568 ns/op
Iteration   1: 176.041 ns/op
Iteration   2: 177.079 ns/op
Iteration   3: 176.075 ns/op
Iteration   4: 176.384 ns/op
Iteration   5: 177.135 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.get":
  180.049 ±(99.9%) 5.013 ns/op [Average]
  (min, avg, max) = (174.745, 180.049, 186.232), stdev = 4.689
  CI (99.9%): [175.036, 185.062] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.get
# Parameters: (dummyData = 32768, mapType = IDENTITY_HASH_MAP, realData = 512)

# Run progress: 32.00% complete, ETA 01:25:12
# Fork: 1 of 3
# Warmup Iteration   1: 8.546 ns/op
# Warmup Iteration   2: 8.555 ns/op
# Warmup Iteration   3: 8.251 ns/op
# Warmup Iteration   4: 8.241 ns/op
# Warmup Iteration   5: 8.187 ns/op
Iteration   1: 7.765 ns/op
Iteration   2: 7.862 ns/op
Iteration   3: 7.902 ns/op
Iteration   4: 7.863 ns/op
Iteration   5: 7.844 ns/op

# Run progress: 33.33% complete, ETA 01:23:32
# Fork: 2 of 3
# Warmup Iteration   1: 7.975 ns/op
# Warmup Iteration   2: 8.299 ns/op
# Warmup Iteration   3: 7.853 ns/op
# Warmup Iteration   4: 7.835 ns/op
# Warmup Iteration   5: 7.835 ns/op
Iteration   1: 7.853 ns/op
Iteration   2: 7.856 ns/op
Iteration   3: 7.888 ns/op
Iteration   4: 7.865 ns/op
Iteration   5: 7.848 ns/op

# Run progress: 34.67% complete, ETA 01:21:52
# Fork: 3 of 3
# Warmup Iteration   1: 8.485 ns/op
# Warmup Iteration   2: 8.523 ns/op
# Warmup Iteration   3: 8.217 ns/op
# Warmup Iteration   4: 8.209 ns/op
# Warmup Iteration   5: 8.213 ns/op
Iteration   1: 8.272 ns/op
Iteration   2: 8.259 ns/op
Iteration   3: 8.252 ns/op
Iteration   4: 8.241 ns/op
Iteration   5: 8.250 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.get":
  7.988 ±(99.9%) 0.211 ns/op [Average]
  (min, avg, max) = (7.765, 7.988, 8.272), stdev = 0.198
  CI (99.9%): [7.777, 8.199] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.get
# Parameters: (dummyData = 32768, mapType = CONCURRENT_SKIP_LIST_MAP, realData = 512)

# Run progress: 36.00% complete, ETA 01:20:11
# Fork: 1 of 3
# Warmup Iteration   1: 286.554 ns/op
# Warmup Iteration   2: 292.492 ns/op
# Warmup Iteration   3: 282.917 ns/op
# Warmup Iteration   4: 283.274 ns/op
# Warmup Iteration   5: 282.834 ns/op
Iteration   1: 282.952 ns/op
Iteration   2: 282.856 ns/op
Iteration   3: 282.030 ns/op
Iteration   4: 281.162 ns/op
Iteration   5: 281.707 ns/op

# Run progress: 37.33% complete, ETA 01:18:31
# Fork: 2 of 3
# Warmup Iteration   1: 291.490 ns/op
# Warmup Iteration   2: 290.614 ns/op
# Warmup Iteration   3: 302.101 ns/op
# Warmup Iteration   4: 301.607 ns/op
# Warmup Iteration   5: 283.247 ns/op
Iteration   1: 282.203 ns/op
Iteration   2: 281.276 ns/op
Iteration   3: 280.509 ns/op
Iteration   4: 279.947 ns/op
Iteration   5: 280.356 ns/op

# Run progress: 38.67% complete, ETA 01:16:51
# Fork: 3 of 3
# Warmup Iteration   1: 284.730 ns/op
# Warmup Iteration   2: 292.845 ns/op
# Warmup Iteration   3: 301.750 ns/op
# Warmup Iteration   4: 301.586 ns/op
# Warmup Iteration   5: 302.597 ns/op
Iteration   1: 302.592 ns/op
Iteration   2: 302.165 ns/op
Iteration   3: 301.691 ns/op
Iteration   4: 301.464 ns/op
Iteration   5: 302.229 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.get":
  288.343 ±(99.9%) 10.748 ns/op [Average]
  (min, avg, max) = (279.947, 288.343, 302.592), stdev = 10.054
  CI (99.9%): [277.594, 299.091] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.keySet_full_iteration
# Parameters: (dummyData = 32768, mapType = HASH_MAP, realData = 512)

# Run progress: 40.00% complete, ETA 01:15:11
# Fork: 1 of 3
# Warmup Iteration   1: 634514.430 ns/op
# Warmup Iteration   2: 633717.192 ns/op
# Warmup Iteration   3: 631060.461 ns/op
# Warmup Iteration   4: 664020.138 ns/op
# Warmup Iteration   5: 656327.052 ns/op
Iteration   1: 654124.684 ns/op
Iteration   2: 698339.029 ns/op
Iteration   3: 672725.602 ns/op
Iteration   4: 671869.544 ns/op
Iteration   5: 671538.936 ns/op

# Run progress: 41.33% complete, ETA 01:13:31
# Fork: 2 of 3
# Warmup Iteration   1: 657432.972 ns/op
# Warmup Iteration   2: 654614.897 ns/op
# Warmup Iteration   3: 654524.994 ns/op
# Warmup Iteration   4: 654991.374 ns/op
# Warmup Iteration   5: 650763.978 ns/op
Iteration   1: 651338.342 ns/op
Iteration   2: 687067.337 ns/op
Iteration   3: 674695.247 ns/op
Iteration   4: 674067.641 ns/op
Iteration   5: 673313.443 ns/op

# Run progress: 42.67% complete, ETA 01:11:50
# Fork: 3 of 3
# Warmup Iteration   1: 604668.916 ns/op
# Warmup Iteration   2: 607541.075 ns/op
# Warmup Iteration   3: 608656.189 ns/op
# Warmup Iteration   4: 607676.528 ns/op
# Warmup Iteration   5: 613267.526 ns/op
Iteration   1: 615684.940 ns/op
Iteration   2: 695666.665 ns/op
Iteration   3: 664823.201 ns/op
Iteration   4: 664587.453 ns/op
Iteration   5: 662978.290 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.keySet_full_iteration":
  668854.690 ±(99.9%) 21097.107 ns/op [Average]
  (min, avg, max) = (615684.940, 668854.690, 698339.029), stdev = 19734.247
  CI (99.9%): [647757.584, 689951.797] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.keySet_full_iteration
# Parameters: (dummyData = 32768, mapType = LINKED_HASH_MAP, realData = 512)

# Run progress: 44.00% complete, ETA 01:10:10
# Fork: 1 of 3
# Warmup Iteration   1: 433386.431 ns/op
# Warmup Iteration   2: 432387.586 ns/op
# Warmup Iteration   3: 431456.107 ns/op
# Warmup Iteration   4: 437392.405 ns/op
# Warmup Iteration   5: 482120.440 ns/op
Iteration   1: 462921.852 ns/op
Iteration   2: 455627.303 ns/op
Iteration   3: 454637.010 ns/op
Iteration   4: 453877.926 ns/op
Iteration   5: 454164.624 ns/op

# Run progress: 45.33% complete, ETA 01:08:30
# Fork: 2 of 3
# Warmup Iteration   1: 447594.447 ns/op
# Warmup Iteration   2: 445715.287 ns/op
# Warmup Iteration   3: 445724.656 ns/op
# Warmup Iteration   4: 452397.807 ns/op
# Warmup Iteration   5: 488924.932 ns/op
Iteration   1: 457107.153 ns/op
Iteration   2: 457132.472 ns/op
Iteration   3: 457109.956 ns/op
Iteration   4: 457077.224 ns/op
Iteration   5: 456698.768 ns/op

# Run progress: 46.67% complete, ETA 01:06:49
# Fork: 3 of 3
# Warmup Iteration   1: 427144.813 ns/op
# Warmup Iteration   2: 429351.143 ns/op
# Warmup Iteration   3: 442390.721 ns/op
# Warmup Iteration   4: 436018.777 ns/op
# Warmup Iteration   5: 476426.867 ns/op
Iteration   1: 428687.148 ns/op
Iteration   2: 428750.462 ns/op
Iteration   3: 428165.508 ns/op
Iteration   4: 428402.535 ns/op
Iteration   5: 464743.907 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.keySet_full_iteration":
  449673.590 ±(99.9%) 14468.141 ns/op [Average]
  (min, avg, max) = (428165.508, 449673.590, 464743.907), stdev = 13533.508
  CI (99.9%): [435205.449, 464141.731] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.keySet_full_iteration
# Parameters: (dummyData = 32768, mapType = TREE_MAP, realData = 512)

# Run progress: 48.00% complete, ETA 01:05:09
# Fork: 1 of 3
# Warmup Iteration   1: 2589087.997 ns/op
# Warmup Iteration   2: 2590084.522 ns/op
# Warmup Iteration   3: 2577572.305 ns/op
# Warmup Iteration   4: 2578503.819 ns/op
# Warmup Iteration   5: 2576305.787 ns/op
Iteration   1: 2571028.648 ns/op
Iteration   2: 2565495.127 ns/op
Iteration   3: 2567393.493 ns/op
Iteration   4: 2371510.703 ns/op
Iteration   5: 2384565.802 ns/op

# Run progress: 49.33% complete, ETA 01:03:29
# Fork: 2 of 3
# Warmup Iteration   1: 2610386.022 ns/op
# Warmup Iteration   2: 2596739.938 ns/op
# Warmup Iteration   3: 2586585.603 ns/op
# Warmup Iteration   4: 2581170.991 ns/op
# Warmup Iteration   5: 2578092.473 ns/op
Iteration   1: 2576709.468 ns/op
Iteration   2: 2573818.935 ns/op
Iteration   3: 2570280.432 ns/op
Iteration   4: 2579204.079 ns/op
Iteration   5: 2456419.523 ns/op

# Run progress: 50.67% complete, ETA 01:01:49
# Fork: 3 of 3
# Warmup Iteration   1: 2382048.331 ns/op
# Warmup Iteration   2: 2606288.594 ns/op
# Warmup Iteration   3: 2596355.302 ns/op
# Warmup Iteration   4: 2575687.422 ns/op
# Warmup Iteration   5: 2573080.497 ns/op
Iteration   1: 2565727.307 ns/op
Iteration   2: 2566322.772 ns/op
Iteration   3: 2581210.219 ns/op
Iteration   4: 2575125.718 ns/op
Iteration   5: 2578232.087 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.keySet_full_iteration":
  2538869.621 ±(99.9%) 76970.187 ns/op [Average]
  (min, avg, max) = (2371510.703, 2538869.621, 2581210.219), stdev = 71997.960
  CI (99.9%): [2461899.434, 2615839.807] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.keySet_full_iteration
# Parameters: (dummyData = 32768, mapType = IDENTITY_HASH_MAP, realData = 512)

# Run progress: 52.00% complete, ETA 01:00:08
# Fork: 1 of 3
# Warmup Iteration   1: 748404.317 ns/op
# Warmup Iteration   2: 750099.863 ns/op
# Warmup Iteration   3: 749225.471 ns/op
# Warmup Iteration   4: 750115.879 ns/op
# Warmup Iteration   5: 747265.270 ns/op
Iteration   1: 741745.819 ns/op
Iteration   2: 741516.454 ns/op
Iteration   3: 726277.532 ns/op
Iteration   4: 726693.178 ns/op
Iteration   5: 730559.517 ns/op

# Run progress: 53.33% complete, ETA 00:58:28
# Fork: 2 of 3
# Warmup Iteration   1: 757382.639 ns/op
# Warmup Iteration   2: 755063.266 ns/op
# Warmup Iteration   3: 754264.147 ns/op
# Warmup Iteration   4: 754118.770 ns/op
# Warmup Iteration   5: 750341.690 ns/op
Iteration   1: 744199.122 ns/op
Iteration   2: 743466.336 ns/op
Iteration   3: 748851.290 ns/op
Iteration   4: 747355.881 ns/op
Iteration   5: 780628.082 ns/op

# Run progress: 54.67% complete, ETA 00:56:48
# Fork: 3 of 3
# Warmup Iteration   1: 726565.847 ns/op
# Warmup Iteration   2: 729209.759 ns/op
# Warmup Iteration   3: 734877.965 ns/op
# Warmup Iteration   4: 733441.117 ns/op
# Warmup Iteration   5: 732139.545 ns/op
Iteration   1: 729672.434 ns/op
Iteration   2: 729372.909 ns/op
Iteration   3: 736080.453 ns/op
Iteration   4: 734816.393 ns/op
Iteration   5: 734558.259 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.keySet_full_iteration":
  739719.577 ±(99.9%) 14464.385 ns/op [Average]
  (min, avg, max) = (726277.532, 739719.577, 780628.082), stdev = 13529.995
  CI (99.9%): [725255.192, 754183.962] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.keySet_full_iteration
# Parameters: (dummyData = 32768, mapType = CONCURRENT_SKIP_LIST_MAP, realData = 512)

# Run progress: 56.00% complete, ETA 00:55:08
# Fork: 1 of 3
# Warmup Iteration   1: 3163780.187 ns/op
# Warmup Iteration   2: 3151345.865 ns/op
# Warmup Iteration   3: 3126647.026 ns/op
# Warmup Iteration   4: 3135167.139 ns/op
# Warmup Iteration   5: 3137587.566 ns/op
Iteration   1: 3141950.806 ns/op
Iteration   2: 3143724.159 ns/op
Iteration   3: 3279815.561 ns/op
Iteration   4: 3263413.200 ns/op
Iteration   5: 3261935.445 ns/op

# Run progress: 57.33% complete, ETA 00:53:27
# Fork: 2 of 3
# Warmup Iteration   1: 3025090.922 ns/op
# Warmup Iteration   2: 2892195.676 ns/op
# Warmup Iteration   3: 3028686.032 ns/op
# Warmup Iteration   4: 3024192.938 ns/op
# Warmup Iteration   5: 3019656.359 ns/op
Iteration   1: 3017205.187 ns/op
Iteration   2: 3014655.880 ns/op
Iteration   3: 3013244.920 ns/op
Iteration   4: 3015005.413 ns/op
Iteration   5: 3012454.345 ns/op

# Run progress: 58.67% complete, ETA 00:51:47
# Fork: 3 of 3
# Warmup Iteration   1: 3216507.175 ns/op
# Warmup Iteration   2: 3229284.552 ns/op
# Warmup Iteration   3: 3225043.376 ns/op
# Warmup Iteration   4: 3224714.672 ns/op
# Warmup Iteration   5: 3240062.686 ns/op
Iteration   1: 3229775.366 ns/op
Iteration   2: 3231011.509 ns/op
Iteration   3: 3232325.055 ns/op
Iteration   4: 3231429.688 ns/op
Iteration   5: 3230939.882 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.keySet_full_iteration":
  3154592.428 ±(99.9%) 116661.075 ns/op [Average]
  (min, avg, max) = (3012454.345, 3154592.428, 3279815.561), stdev = 109124.842
  CI (99.9%): [3037931.353, 3271253.502] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.put
# Parameters: (dummyData = 32768, mapType = HASH_MAP, realData = 512)

# Run progress: 60.00% complete, ETA 00:50:07
# Fork: 1 of 3
# Warmup Iteration   1: 19.742 ns/op
# Warmup Iteration   2: 20.240 ns/op
# Warmup Iteration   3: 21.366 ns/op
# Warmup Iteration   4: 21.142 ns/op
# Warmup Iteration   5: 21.014 ns/op
Iteration   1: 20.916 ns/op
Iteration   2: 21.010 ns/op
Iteration   3: 21.024 ns/op
Iteration   4: 21.008 ns/op
Iteration   5: 21.002 ns/op

# Run progress: 61.33% complete, ETA 00:48:27
# Fork: 2 of 3
# Warmup Iteration   1: 20.222 ns/op
# Warmup Iteration   2: 21.572 ns/op
# Warmup Iteration   3: 19.955 ns/op
# Warmup Iteration   4: 19.853 ns/op
# Warmup Iteration   5: 19.840 ns/op
Iteration   1: 20.578 ns/op
Iteration   2: 20.708 ns/op
Iteration   3: 20.520 ns/op
Iteration   4: 20.756 ns/op
Iteration   5: 20.535 ns/op

# Run progress: 62.67% complete, ETA 00:46:47
# Fork: 3 of 3
# Warmup Iteration   1: 20.694 ns/op
# Warmup Iteration   2: 21.406 ns/op
# Warmup Iteration   3: 21.325 ns/op
# Warmup Iteration   4: 21.241 ns/op
# Warmup Iteration   5: 21.442 ns/op
Iteration   1: 21.353 ns/op
Iteration   2: 21.290 ns/op
Iteration   3: 21.163 ns/op
Iteration   4: 21.125 ns/op
Iteration   5: 21.081 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.put":
  20.938 ±(99.9%) 0.282 ns/op [Average]
  (min, avg, max) = (20.520, 20.938, 21.353), stdev = 0.264
  CI (99.9%): [20.656, 21.220] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.put
# Parameters: (dummyData = 32768, mapType = LINKED_HASH_MAP, realData = 512)

# Run progress: 64.00% complete, ETA 00:45:06
# Fork: 1 of 3
# Warmup Iteration   1: 18.496 ns/op
# Warmup Iteration   2: 19.330 ns/op
# Warmup Iteration   3: 17.896 ns/op
# Warmup Iteration   4: 17.923 ns/op
# Warmup Iteration   5: 17.864 ns/op
Iteration   1: 17.828 ns/op
Iteration   2: 17.897 ns/op
Iteration   3: 16.554 ns/op
Iteration   4: 16.686 ns/op
Iteration   5: 16.793 ns/op

# Run progress: 65.33% complete, ETA 00:43:26
# Fork: 2 of 3
# Warmup Iteration   1: 20.878 ns/op
# Warmup Iteration   2: 21.095 ns/op
# Warmup Iteration   3: 20.269 ns/op
# Warmup Iteration   4: 20.265 ns/op
# Warmup Iteration   5: 20.356 ns/op
Iteration   1: 20.240 ns/op
Iteration   2: 20.371 ns/op
Iteration   3: 20.386 ns/op
Iteration   4: 20.275 ns/op
Iteration   5: 20.422 ns/op

# Run progress: 66.67% complete, ETA 00:41:46
# Fork: 3 of 3
# Warmup Iteration   1: 19.361 ns/op
# Warmup Iteration   2: 19.619 ns/op
# Warmup Iteration   3: 19.727 ns/op
# Warmup Iteration   4: 19.658 ns/op
# Warmup Iteration   5: 19.854 ns/op
Iteration   1: 21.250 ns/op
Iteration   2: 19.788 ns/op
Iteration   3: 19.821 ns/op
Iteration   4: 19.833 ns/op
Iteration   5: 19.811 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.put":
  19.197 ±(99.9%) 1.688 ns/op [Average]
  (min, avg, max) = (16.554, 19.197, 21.250), stdev = 1.579
  CI (99.9%): [17.509, 20.885] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.put
# Parameters: (dummyData = 32768, mapType = TREE_MAP, realData = 512)

# Run progress: 68.00% complete, ETA 00:40:05
# Fork: 1 of 3
# Warmup Iteration   1: 175.095 ns/op
# Warmup Iteration   2: 174.530 ns/op
# Warmup Iteration   3: 164.291 ns/op
# Warmup Iteration   4: 164.467 ns/op
# Warmup Iteration   5: 164.821 ns/op
Iteration   1: 164.825 ns/op
Iteration   2: 164.915 ns/op
Iteration   3: 165.095 ns/op
Iteration   4: 164.814 ns/op
Iteration   5: 174.429 ns/op

# Run progress: 69.33% complete, ETA 00:38:25
# Fork: 2 of 3
# Warmup Iteration   1: 190.582 ns/op
# Warmup Iteration   2: 189.061 ns/op
# Warmup Iteration   3: 188.134 ns/op
# Warmup Iteration   4: 187.462 ns/op
# Warmup Iteration   5: 187.643 ns/op
Iteration   1: 187.033 ns/op
Iteration   2: 187.458 ns/op
Iteration   3: 187.719 ns/op
Iteration   4: 178.788 ns/op
Iteration   5: 178.657 ns/op

# Run progress: 70.67% complete, ETA 00:36:45
# Fork: 3 of 3
# Warmup Iteration   1: 171.550 ns/op
# Warmup Iteration   2: 173.633 ns/op
# Warmup Iteration   3: 173.406 ns/op
# Warmup Iteration   4: 173.017 ns/op
# Warmup Iteration   5: 173.085 ns/op
Iteration   1: 172.877 ns/op
Iteration   2: 173.217 ns/op
Iteration   3: 173.278 ns/op
Iteration   4: 173.187 ns/op
Iteration   5: 173.017 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.put":
  174.621 ±(99.9%) 8.631 ns/op [Average]
  (min, avg, max) = (164.814, 174.621, 187.719), stdev = 8.074
  CI (99.9%): [165.989, 183.252] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.put
# Parameters: (dummyData = 32768, mapType = IDENTITY_HASH_MAP, realData = 512)

# Run progress: 72.00% complete, ETA 00:35:05
# Fork: 1 of 3
# Warmup Iteration   1: 22.726 ns/op
# Warmup Iteration   2: 17.880 ns/op
# Warmup Iteration   3: 16.352 ns/op
# Warmup Iteration   4: 16.276 ns/op
# Warmup Iteration   5: 16.255 ns/op
Iteration   1: 15.000 ns/op
Iteration   2: 15.160 ns/op
Iteration   3: 15.252 ns/op
Iteration   4: 15.226 ns/op
Iteration   5: 15.246 ns/op

# Run progress: 73.33% complete, ETA 00:33:24
# Fork: 2 of 3
# Warmup Iteration   1: 18.117 ns/op
# Warmup Iteration   2: 16.353 ns/op
# Warmup Iteration   3: 16.894 ns/op
# Warmup Iteration   4: 16.910 ns/op
# Warmup Iteration   5: 16.947 ns/op
Iteration   1: 16.788 ns/op
Iteration   2: 16.927 ns/op
Iteration   3: 16.891 ns/op
Iteration   4: 16.834 ns/op
Iteration   5: 16.802 ns/op

# Run progress: 74.67% complete, ETA 00:31:44
# Fork: 3 of 3
# Warmup Iteration   1: 24.691 ns/op
# Warmup Iteration   2: 16.498 ns/op
# Warmup Iteration   3: 15.559 ns/op
# Warmup Iteration   4: 15.609 ns/op
# Warmup Iteration   5: 15.523 ns/op
Iteration   1: 15.621 ns/op
Iteration   2: 15.509 ns/op
Iteration   3: 15.538 ns/op
Iteration   4: 15.520 ns/op
Iteration   5: 15.471 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.put":
  15.852 ±(99.9%) 0.799 ns/op [Average]
  (min, avg, max) = (15.000, 15.852, 16.927), stdev = 0.748
  CI (99.9%): [15.053, 16.652] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.put
# Parameters: (dummyData = 32768, mapType = CONCURRENT_SKIP_LIST_MAP, realData = 512)

# Run progress: 76.00% complete, ETA 00:30:04
# Fork: 1 of 3
# Warmup Iteration   1: 320.851 ns/op
# Warmup Iteration   2: 321.590 ns/op
# Warmup Iteration   3: 323.013 ns/op
# Warmup Iteration   4: 320.488 ns/op
# Warmup Iteration   5: 324.530 ns/op
Iteration   1: 324.628 ns/op
Iteration   2: 324.879 ns/op
Iteration   3: 324.842 ns/op
Iteration   4: 323.090 ns/op
Iteration   5: 324.870 ns/op

# Run progress: 77.33% complete, ETA 00:28:24
# Fork: 2 of 3
# Warmup Iteration   1: 319.708 ns/op
# Warmup Iteration   2: 319.400 ns/op
# Warmup Iteration   3: 321.259 ns/op
# Warmup Iteration   4: 319.058 ns/op
# Warmup Iteration   5: 320.106 ns/op
Iteration   1: 320.482 ns/op
Iteration   2: 303.914 ns/op
Iteration   3: 320.887 ns/op
Iteration   4: 320.894 ns/op
Iteration   5: 320.573 ns/op

# Run progress: 78.67% complete, ETA 00:26:43
# Fork: 3 of 3
# Warmup Iteration   1: 334.134 ns/op
# Warmup Iteration   2: 327.350 ns/op
# Warmup Iteration   3: 308.685 ns/op
# Warmup Iteration   4: 311.910 ns/op
# Warmup Iteration   5: 312.773 ns/op
Iteration   1: 313.832 ns/op
Iteration   2: 313.789 ns/op
Iteration   3: 314.084 ns/op
Iteration   4: 313.520 ns/op
Iteration   5: 314.016 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.put":
  318.553 ±(99.9%) 6.521 ns/op [Average]
  (min, avg, max) = (303.914, 318.553, 324.879), stdev = 6.100
  CI (99.9%): [312.033, 325.074] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.putIfAbsent
# Parameters: (dummyData = 32768, mapType = HASH_MAP, realData = 512)

# Run progress: 80.00% complete, ETA 00:25:03
# Fork: 1 of 3
# Warmup Iteration   1: 17.173 ns/op
# Warmup Iteration   2: 17.299 ns/op
# Warmup Iteration   3: 17.058 ns/op
# Warmup Iteration   4: 17.026 ns/op
# Warmup Iteration   5: 17.030 ns/op
Iteration   1: 16.994 ns/op
Iteration   2: 16.977 ns/op
Iteration   3: 17.013 ns/op
Iteration   4: 17.016 ns/op
Iteration   5: 17.000 ns/op

# Run progress: 81.33% complete, ETA 00:23:23
# Fork: 2 of 3
# Warmup Iteration   1: 19.978 ns/op
# Warmup Iteration   2: 19.832 ns/op
# Warmup Iteration   3: 19.637 ns/op
# Warmup Iteration   4: 18.283 ns/op
# Warmup Iteration   5: 18.316 ns/op
Iteration   1: 18.314 ns/op
Iteration   2: 18.401 ns/op
Iteration   3: 18.375 ns/op
Iteration   4: 18.371 ns/op
Iteration   5: 18.373 ns/op

# Run progress: 82.67% complete, ETA 00:21:43
# Fork: 3 of 3
# Warmup Iteration   1: 17.445 ns/op
# Warmup Iteration   2: 17.429 ns/op
# Warmup Iteration   3: 17.234 ns/op
# Warmup Iteration   4: 17.220 ns/op
# Warmup Iteration   5: 17.239 ns/op
Iteration   1: 17.220 ns/op
Iteration   2: 17.235 ns/op
Iteration   3: 17.149 ns/op
Iteration   4: 17.157 ns/op
Iteration   5: 17.219 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.putIfAbsent":
  17.521 ±(99.9%) 0.668 ns/op [Average]
  (min, avg, max) = (16.977, 17.521, 18.401), stdev = 0.625
  CI (99.9%): [16.853, 18.189] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.putIfAbsent
# Parameters: (dummyData = 32768, mapType = LINKED_HASH_MAP, realData = 512)

# Run progress: 84.00% complete, ETA 00:20:02
# Fork: 1 of 3
# Warmup Iteration   1: 18.016 ns/op
# Warmup Iteration   2: 18.063 ns/op
# Warmup Iteration   3: 17.712 ns/op
# Warmup Iteration   4: 17.730 ns/op
# Warmup Iteration   5: 17.685 ns/op
Iteration   1: 17.731 ns/op
Iteration   2: 17.680 ns/op
Iteration   3: 17.278 ns/op
Iteration   4: 17.422 ns/op
Iteration   5: 17.382 ns/op

# Run progress: 85.33% complete, ETA 00:18:22
# Fork: 2 of 3
# Warmup Iteration   1: 18.173 ns/op
# Warmup Iteration   2: 19.416 ns/op
# Warmup Iteration   3: 19.687 ns/op
# Warmup Iteration   4: 19.552 ns/op
# Warmup Iteration   5: 19.496 ns/op
Iteration   1: 19.485 ns/op
Iteration   2: 19.553 ns/op
Iteration   3: 19.495 ns/op
Iteration   4: 19.454 ns/op
Iteration   5: 19.459 ns/op

# Run progress: 86.67% complete, ETA 00:16:42
# Fork: 3 of 3
# Warmup Iteration   1: 18.356 ns/op
# Warmup Iteration   2: 17.409 ns/op
# Warmup Iteration   3: 17.842 ns/op
# Warmup Iteration   4: 17.649 ns/op
# Warmup Iteration   5: 17.644 ns/op
Iteration   1: 17.679 ns/op
Iteration   2: 17.849 ns/op
Iteration   3: 17.850 ns/op
Iteration   4: 18.729 ns/op
Iteration   5: 18.667 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.putIfAbsent":
  18.381 ±(99.9%) 0.967 ns/op [Average]
  (min, avg, max) = (17.278, 18.381, 19.553), stdev = 0.904
  CI (99.9%): [17.414, 19.348] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.putIfAbsent
# Parameters: (dummyData = 32768, mapType = TREE_MAP, realData = 512)

# Run progress: 88.00% complete, ETA 00:15:02
# Fork: 1 of 3
# Warmup Iteration   1: 182.819 ns/op
# Warmup Iteration   2: 181.080 ns/op
# Warmup Iteration   3: 187.306 ns/op
# Warmup Iteration   4: 187.451 ns/op
# Warmup Iteration   5: 188.100 ns/op
Iteration   1: 187.511 ns/op
Iteration   2: 187.709 ns/op
Iteration   3: 187.588 ns/op
Iteration   4: 187.672 ns/op
Iteration   5: 187.170 ns/op

# Run progress: 89.33% complete, ETA 00:13:21
# Fork: 2 of 3
# Warmup Iteration   1: 175.461 ns/op
# Warmup Iteration   2: 172.049 ns/op
# Warmup Iteration   3: 177.929 ns/op
# Warmup Iteration   4: 177.345 ns/op
# Warmup Iteration   5: 177.588 ns/op
Iteration   1: 177.531 ns/op
Iteration   2: 178.303 ns/op
Iteration   3: 177.991 ns/op
Iteration   4: 190.371 ns/op
Iteration   5: 190.631 ns/op

# Run progress: 90.67% complete, ETA 00:11:41
# Fork: 3 of 3
# Warmup Iteration   1: 176.280 ns/op
# Warmup Iteration   2: 170.927 ns/op
# Warmup Iteration   3: 175.815 ns/op
# Warmup Iteration   4: 177.113 ns/op
# Warmup Iteration   5: 177.540 ns/op
Iteration   1: 177.819 ns/op
Iteration   2: 177.440 ns/op
Iteration   3: 186.985 ns/op
Iteration   4: 186.257 ns/op
Iteration   5: 185.899 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.putIfAbsent":
  184.458 ±(99.9%) 5.369 ns/op [Average]
  (min, avg, max) = (177.440, 184.458, 190.631), stdev = 5.022
  CI (99.9%): [179.089, 189.828] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.putIfAbsent
# Parameters: (dummyData = 32768, mapType = IDENTITY_HASH_MAP, realData = 512)

# Run progress: 92.00% complete, ETA 00:10:01
# Fork: 1 of 3
# Warmup Iteration   1: 9.261 ns/op
# Warmup Iteration   2: 9.217 ns/op
# Warmup Iteration   3: 8.242 ns/op
# Warmup Iteration   4: 8.225 ns/op
# Warmup Iteration   5: 8.198 ns/op
Iteration   1: 8.180 ns/op
Iteration   2: 8.215 ns/op
Iteration   3: 8.191 ns/op
Iteration   4: 8.186 ns/op
Iteration   5: 8.152 ns/op

# Run progress: 93.33% complete, ETA 00:08:21
# Fork: 2 of 3
# Warmup Iteration   1: 9.770 ns/op
# Warmup Iteration   2: 9.830 ns/op
# Warmup Iteration   3: 8.694 ns/op
# Warmup Iteration   4: 8.626 ns/op
# Warmup Iteration   5: 8.752 ns/op
Iteration   1: 8.743 ns/op
Iteration   2: 8.676 ns/op
Iteration   3: 8.666 ns/op
Iteration   4: 8.717 ns/op
Iteration   5: 8.595 ns/op

# Run progress: 94.67% complete, ETA 00:06:40
# Fork: 3 of 3
# Warmup Iteration   1: 9.643 ns/op
# Warmup Iteration   2: 9.602 ns/op
# Warmup Iteration   3: 8.538 ns/op
# Warmup Iteration   4: 8.532 ns/op
# Warmup Iteration   5: 8.530 ns/op
Iteration   1: 8.175 ns/op
Iteration   2: 8.155 ns/op
Iteration   3: 8.192 ns/op
Iteration   4: 8.207 ns/op
Iteration   5: 8.199 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.putIfAbsent":
  8.350 ±(99.9%) 0.261 ns/op [Average]
  (min, avg, max) = (8.152, 8.350, 8.743), stdev = 0.244
  CI (99.9%): [8.089, 8.611] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.putIfAbsent
# Parameters: (dummyData = 32768, mapType = CONCURRENT_SKIP_LIST_MAP, realData = 512)

# Run progress: 96.00% complete, ETA 00:05:00
# Fork: 1 of 3
# Warmup Iteration   1: 316.541 ns/op
# Warmup Iteration   2: 318.276 ns/op
# Warmup Iteration   3: 317.879 ns/op
# Warmup Iteration   4: 315.993 ns/op
# Warmup Iteration   5: 316.777 ns/op
Iteration   1: 316.942 ns/op
Iteration   2: 306.407 ns/op
Iteration   3: 304.831 ns/op
Iteration   4: 303.626 ns/op
Iteration   5: 304.815 ns/op

# Run progress: 97.33% complete, ETA 00:03:20
# Fork: 2 of 3
# Warmup Iteration   1: 315.322 ns/op
# Warmup Iteration   2: 295.000 ns/op
# Warmup Iteration   3: 294.489 ns/op
# Warmup Iteration   4: 295.580 ns/op
# Warmup Iteration   5: 294.996 ns/op
Iteration   1: 295.306 ns/op
Iteration   2: 294.982 ns/op
Iteration   3: 299.166 ns/op
Iteration   4: 296.379 ns/op
Iteration   5: 296.092 ns/op

# Run progress: 98.67% complete, ETA 00:01:40
# Fork: 3 of 3
# Warmup Iteration   1: 318.975 ns/op
# Warmup Iteration   2: 339.021 ns/op
# Warmup Iteration   3: 337.946 ns/op
# Warmup Iteration   4: 338.500 ns/op
# Warmup Iteration   5: 336.163 ns/op
Iteration   1: 336.864 ns/op
Iteration   2: 335.508 ns/op
Iteration   3: 329.931 ns/op
Iteration   4: 331.732 ns/op
Iteration   5: 330.576 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MapBenchmark.putIfAbsent":
  312.210 ±(99.9%) 17.345 ns/op [Average]
  (min, avg, max) = (294.982, 312.210, 336.864), stdev = 16.224
  CI (99.9%): [294.866, 329.555] (assumes normal distribution)


# Run complete. Total time: 02:05:18

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                             (dummyData)                 (mapType)  (realData)  Mode  Cnt        Score        Error  Units
MapBenchmark.entrySet_full_iteration        32768                  HASH_MAP         512  avgt   15   560506.292 ±  11169.632  ns/op
MapBenchmark.entrySet_full_iteration        32768           LINKED_HASH_MAP         512  avgt   15   166549.691 ±   5925.792  ns/op
MapBenchmark.entrySet_full_iteration        32768                  TREE_MAP         512  avgt   15   652022.355 ±  51874.173  ns/op
MapBenchmark.entrySet_full_iteration        32768         IDENTITY_HASH_MAP         512  avgt   15   502254.835 ±   9519.156  ns/op
MapBenchmark.entrySet_full_iteration        32768  CONCURRENT_SKIP_LIST_MAP         512  avgt   15   210659.776 ±   4125.788  ns/op
MapBenchmark.get                            32768                  HASH_MAP         512  avgt   15        8.040 ±      0.263  ns/op
MapBenchmark.get                            32768           LINKED_HASH_MAP         512  avgt   15        8.417 ±      0.351  ns/op
MapBenchmark.get                            32768                  TREE_MAP         512  avgt   15      180.049 ±      5.013  ns/op
MapBenchmark.get                            32768         IDENTITY_HASH_MAP         512  avgt   15        7.988 ±      0.211  ns/op
MapBenchmark.get                            32768  CONCURRENT_SKIP_LIST_MAP         512  avgt   15      288.343 ±     10.748  ns/op
MapBenchmark.keySet_full_iteration          32768                  HASH_MAP         512  avgt   15   668854.690 ±  21097.107  ns/op
MapBenchmark.keySet_full_iteration          32768           LINKED_HASH_MAP         512  avgt   15   449673.590 ±  14468.141  ns/op
MapBenchmark.keySet_full_iteration          32768                  TREE_MAP         512  avgt   15  2538869.621 ±  76970.187  ns/op
MapBenchmark.keySet_full_iteration          32768         IDENTITY_HASH_MAP         512  avgt   15   739719.577 ±  14464.385  ns/op
MapBenchmark.keySet_full_iteration          32768  CONCURRENT_SKIP_LIST_MAP         512  avgt   15  3154592.428 ± 116661.075  ns/op
MapBenchmark.put                            32768                  HASH_MAP         512  avgt   15       20.938 ±      0.282  ns/op
MapBenchmark.put                            32768           LINKED_HASH_MAP         512  avgt   15       19.197 ±      1.688  ns/op
MapBenchmark.put                            32768                  TREE_MAP         512  avgt   15      174.621 ±      8.631  ns/op
MapBenchmark.put                            32768         IDENTITY_HASH_MAP         512  avgt   15       15.852 ±      0.799  ns/op
MapBenchmark.put                            32768  CONCURRENT_SKIP_LIST_MAP         512  avgt   15      318.553 ±      6.521  ns/op
MapBenchmark.putIfAbsent                    32768                  HASH_MAP         512  avgt   15       17.521 ±      0.668  ns/op
MapBenchmark.putIfAbsent                    32768           LINKED_HASH_MAP         512  avgt   15       18.381 ±      0.967  ns/op
MapBenchmark.putIfAbsent                    32768                  TREE_MAP         512  avgt   15      184.458 ±      5.369  ns/op
MapBenchmark.putIfAbsent                    32768         IDENTITY_HASH_MAP         512  avgt   15        8.350 ±      0.261  ns/op
MapBenchmark.putIfAbsent                    32768  CONCURRENT_SKIP_LIST_MAP         512  avgt   15      312.210 ±     17.345  ns/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_c1_c2_jit/MapBenchmark.json
Running java  -jar benchmarks/target/benchmarks.jar .*SetBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_c1_c2_jit/SetBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.SetBenchmark.add
# Parameters: (dummyData = 32768, mapType = HASH_SET, realData = 512)

# Run progress: 0.00% complete, ETA 00:30:00
# Fork: 1 of 3
# Warmup Iteration   1: 20.695 ns/op
# Warmup Iteration   2: 22.208 ns/op
# Warmup Iteration   3: 22.000 ns/op
# Warmup Iteration   4: 22.007 ns/op
# Warmup Iteration   5: 22.000 ns/op
Iteration   1: 21.992 ns/op
Iteration   2: 22.617 ns/op
Iteration   3: 22.545 ns/op
Iteration   4: 22.570 ns/op
Iteration   5: 22.567 ns/op

# Run progress: 5.56% complete, ETA 00:28:24
# Fork: 2 of 3
# Warmup Iteration   1: 21.154 ns/op
# Warmup Iteration   2: 22.708 ns/op
# Warmup Iteration   3: 22.434 ns/op
# Warmup Iteration   4: 22.479 ns/op
# Warmup Iteration   5: 22.446 ns/op
Iteration   1: 22.363 ns/op
Iteration   2: 22.425 ns/op
Iteration   3: 22.352 ns/op
Iteration   4: 22.408 ns/op
Iteration   5: 22.378 ns/op

# Run progress: 11.11% complete, ETA 00:26:44
# Fork: 3 of 3
# Warmup Iteration   1: 18.528 ns/op
# Warmup Iteration   2: 18.845 ns/op
# Warmup Iteration   3: 18.456 ns/op
# Warmup Iteration   4: 18.606 ns/op
# Warmup Iteration   5: 18.278 ns/op
Iteration   1: 18.989 ns/op
Iteration   2: 18.889 ns/op
Iteration   3: 18.584 ns/op
Iteration   4: 18.562 ns/op
Iteration   5: 18.760 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.SetBenchmark.add":
  21.200 ±(99.9%) 1.921 ns/op [Average]
  (min, avg, max) = (18.562, 21.200, 22.617), stdev = 1.797
  CI (99.9%): [19.279, 23.121] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.SetBenchmark.add
# Parameters: (dummyData = 32768, mapType = LINKED_HASH_SET, realData = 512)

# Run progress: 16.67% complete, ETA 00:25:03
# Fork: 1 of 3
# Warmup Iteration   1: 24.271 ns/op
# Warmup Iteration   2: 24.609 ns/op
# Warmup Iteration   3: 23.964 ns/op
# Warmup Iteration   4: 23.949 ns/op
# Warmup Iteration   5: 23.900 ns/op
Iteration   1: 23.871 ns/op
Iteration   2: 23.825 ns/op
Iteration   3: 23.829 ns/op
Iteration   4: 23.849 ns/op
Iteration   5: 23.809 ns/op

# Run progress: 22.22% complete, ETA 00:23:23
# Fork: 2 of 3
# Warmup Iteration   1: 22.143 ns/op
# Warmup Iteration   2: 23.014 ns/op
# Warmup Iteration   3: 23.838 ns/op
# Warmup Iteration   4: 23.839 ns/op
# Warmup Iteration   5: 23.956 ns/op
Iteration   1: 23.890 ns/op
Iteration   2: 23.888 ns/op
Iteration   3: 23.887 ns/op
Iteration   4: 23.897 ns/op
Iteration   5: 23.659 ns/op

# Run progress: 27.78% complete, ETA 00:21:43
# Fork: 3 of 3
# Warmup Iteration   1: 22.085 ns/op
# Warmup Iteration   2: 24.340 ns/op
# Warmup Iteration   3: 22.828 ns/op
# Warmup Iteration   4: 22.698 ns/op
# Warmup Iteration   5: 22.665 ns/op
Iteration   1: 21.512 ns/op
Iteration   2: 21.557 ns/op
Iteration   3: 21.604 ns/op
Iteration   4: 21.639 ns/op
Iteration   5: 21.621 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.SetBenchmark.add":
  23.089 ±(99.9%) 1.178 ns/op [Average]
  (min, avg, max) = (21.512, 23.089, 23.897), stdev = 1.102
  CI (99.9%): [21.911, 24.267] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.SetBenchmark.add
# Parameters: (dummyData = 32768, mapType = TREE_SET, realData = 512)

# Run progress: 33.33% complete, ETA 00:20:02
# Fork: 1 of 3
# Warmup Iteration   1: 165.956 ns/op
# Warmup Iteration   2: 166.525 ns/op
# Warmup Iteration   3: 156.677 ns/op
# Warmup Iteration   4: 156.561 ns/op
# Warmup Iteration   5: 156.376 ns/op
Iteration   1: 156.673 ns/op
Iteration   2: 155.871 ns/op
Iteration   3: 156.360 ns/op
Iteration   4: 156.501 ns/op
Iteration   5: 156.612 ns/op

# Run progress: 38.89% complete, ETA 00:18:22
# Fork: 2 of 3
# Warmup Iteration   1: 167.349 ns/op
# Warmup Iteration   2: 178.855 ns/op
# Warmup Iteration   3: 177.929 ns/op
# Warmup Iteration   4: 177.463 ns/op
# Warmup Iteration   5: 177.415 ns/op
Iteration   1: 177.239 ns/op
Iteration   2: 177.243 ns/op
Iteration   3: 177.843 ns/op
Iteration   4: 177.038 ns/op
Iteration   5: 177.333 ns/op

# Run progress: 44.44% complete, ETA 00:16:42
# Fork: 3 of 3
# Warmup Iteration   1: 166.360 ns/op
# Warmup Iteration   2: 176.066 ns/op
# Warmup Iteration   3: 178.143 ns/op
# Warmup Iteration   4: 177.153 ns/op
# Warmup Iteration   5: 178.280 ns/op
Iteration   1: 177.599 ns/op
Iteration   2: 177.750 ns/op
Iteration   3: 177.858 ns/op
Iteration   4: 177.892 ns/op
Iteration   5: 178.075 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.SetBenchmark.add":
  170.526 ±(99.9%) 11.056 ns/op [Average]
  (min, avg, max) = (155.871, 170.526, 178.075), stdev = 10.342
  CI (99.9%): [159.470, 181.582] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.SetBenchmark.contains
# Parameters: (dummyData = 32768, mapType = HASH_SET, realData = 512)

# Run progress: 50.00% complete, ETA 00:15:02
# Fork: 1 of 3
# Warmup Iteration   1: 7.672 ns/op
# Warmup Iteration   2: 7.962 ns/op
# Warmup Iteration   3: 7.682 ns/op
# Warmup Iteration   4: 7.703 ns/op
# Warmup Iteration   5: 7.771 ns/op
Iteration   1: 7.794 ns/op
Iteration   2: 7.802 ns/op
Iteration   3: 7.748 ns/op
Iteration   4: 7.748 ns/op
Iteration   5: 7.746 ns/op

# Run progress: 55.56% complete, ETA 00:13:21
# Fork: 2 of 3
# Warmup Iteration   1: 7.574 ns/op
# Warmup Iteration   2: 8.043 ns/op
# Warmup Iteration   3: 7.769 ns/op
# Warmup Iteration   4: 7.786 ns/op
# Warmup Iteration   5: 8.163 ns/op
Iteration   1: 8.133 ns/op
Iteration   2: 8.134 ns/op
Iteration   3: 8.086 ns/op
Iteration   4: 8.099 ns/op
Iteration   5: 8.085 ns/op

# Run progress: 61.11% complete, ETA 00:11:41
# Fork: 3 of 3
# Warmup Iteration   1: 7.788 ns/op
# Warmup Iteration   2: 7.865 ns/op
# Warmup Iteration   3: 7.779 ns/op
# Warmup Iteration   4: 7.796 ns/op
# Warmup Iteration   5: 7.865 ns/op
Iteration   1: 7.862 ns/op
Iteration   2: 7.870 ns/op
Iteration   3: 7.848 ns/op
Iteration   4: 8.244 ns/op
Iteration   5: 8.218 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.SetBenchmark.contains":
  7.961 ±(99.9%) 0.197 ns/op [Average]
  (min, avg, max) = (7.746, 7.961, 8.244), stdev = 0.185
  CI (99.9%): [7.764, 8.158] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.SetBenchmark.contains
# Parameters: (dummyData = 32768, mapType = LINKED_HASH_SET, realData = 512)

# Run progress: 66.67% complete, ETA 00:10:01
# Fork: 1 of 3
# Warmup Iteration   1: 7.974 ns/op
# Warmup Iteration   2: 8.421 ns/op
# Warmup Iteration   3: 8.313 ns/op
# Warmup Iteration   4: 8.204 ns/op
# Warmup Iteration   5: 8.191 ns/op
Iteration   1: 8.251 ns/op
Iteration   2: 8.277 ns/op
Iteration   3: 8.270 ns/op
Iteration   4: 8.298 ns/op
Iteration   5: 8.294 ns/op

# Run progress: 72.22% complete, ETA 00:08:21
# Fork: 2 of 3
# Warmup Iteration   1: 7.901 ns/op
# Warmup Iteration   2: 8.368 ns/op
# Warmup Iteration   3: 8.187 ns/op
# Warmup Iteration   4: 8.190 ns/op
# Warmup Iteration   5: 8.193 ns/op
Iteration   1: 8.198 ns/op
Iteration   2: 7.586 ns/op
Iteration   3: 7.553 ns/op
Iteration   4: 7.573 ns/op
Iteration   5: 7.585 ns/op

# Run progress: 77.78% complete, ETA 00:06:40
# Fork: 3 of 3
# Warmup Iteration   1: 7.456 ns/op
# Warmup Iteration   2: 8.611 ns/op
# Warmup Iteration   3: 8.546 ns/op
# Warmup Iteration   4: 8.452 ns/op
# Warmup Iteration   5: 8.462 ns/op
Iteration   1: 8.453 ns/op
Iteration   2: 8.469 ns/op
Iteration   3: 8.448 ns/op
Iteration   4: 8.447 ns/op
Iteration   5: 8.429 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.SetBenchmark.contains":
  8.142 ±(99.9%) 0.390 ns/op [Average]
  (min, avg, max) = (7.553, 8.142, 8.469), stdev = 0.365
  CI (99.9%): [7.752, 8.532] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.SetBenchmark.contains
# Parameters: (dummyData = 32768, mapType = TREE_SET, realData = 512)

# Run progress: 83.33% complete, ETA 00:05:00
# Fork: 1 of 3
# Warmup Iteration   1: 165.664 ns/op
# Warmup Iteration   2: 165.842 ns/op
# Warmup Iteration   3: 161.832 ns/op
# Warmup Iteration   4: 162.492 ns/op
# Warmup Iteration   5: 162.770 ns/op
Iteration   1: 162.576 ns/op
Iteration   2: 162.121 ns/op
Iteration   3: 162.396 ns/op
Iteration   4: 162.523 ns/op
Iteration   5: 161.936 ns/op

# Run progress: 88.89% complete, ETA 00:03:20
# Fork: 2 of 3
# Warmup Iteration   1: 160.267 ns/op
# Warmup Iteration   2: 159.118 ns/op
# Warmup Iteration   3: 155.365 ns/op
# Warmup Iteration   4: 155.561 ns/op
# Warmup Iteration   5: 155.302 ns/op
Iteration   1: 166.144 ns/op
Iteration   2: 165.544 ns/op
Iteration   3: 164.787 ns/op
Iteration   4: 165.382 ns/op
Iteration   5: 164.876 ns/op

# Run progress: 94.44% complete, ETA 00:01:40
# Fork: 3 of 3
# Warmup Iteration   1: 159.717 ns/op
# Warmup Iteration   2: 159.936 ns/op
# Warmup Iteration   3: 155.467 ns/op
# Warmup Iteration   4: 155.487 ns/op
# Warmup Iteration   5: 155.111 ns/op
Iteration   1: 155.739 ns/op
Iteration   2: 155.949 ns/op
Iteration   3: 156.238 ns/op
Iteration   4: 156.069 ns/op
Iteration   5: 156.091 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.SetBenchmark.contains":
  161.225 ±(99.9%) 4.315 ns/op [Average]
  (min, avg, max) = (155.739, 161.225, 166.144), stdev = 4.036
  CI (99.9%): [156.910, 165.540] (assumes normal distribution)


# Run complete. Total time: 00:30:04

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark              (dummyData)        (mapType)  (realData)  Mode  Cnt    Score    Error  Units
SetBenchmark.add             32768         HASH_SET         512  avgt   15   21.200 ±  1.921  ns/op
SetBenchmark.add             32768  LINKED_HASH_SET         512  avgt   15   23.089 ±  1.178  ns/op
SetBenchmark.add             32768         TREE_SET         512  avgt   15  170.526 ± 11.056  ns/op
SetBenchmark.contains        32768         HASH_SET         512  avgt   15    7.961 ±  0.197  ns/op
SetBenchmark.contains        32768  LINKED_HASH_SET         512  avgt   15    8.142 ±  0.390  ns/op
SetBenchmark.contains        32768         TREE_SET         512  avgt   15  161.225 ±  4.315  ns/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_c1_c2_jit/SetBenchmark.json
Running java  -jar benchmarks/target/benchmarks.jar .*QueueThroughputBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_c1_c2_jit/QueueThroughputBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 8 threads (1 group; 4x "offer", 4x "poll" in each group), will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.QueueThroughputBenchmark.queue_throughput
# Parameters: (capacity = 262144, queueType = LINKED_BLOCKING_QUEUE)

# Run progress: 0.00% complete, ETA 00:30:00
# Fork: 1 of 3
# Warmup Iteration   1: 0.006 ops/ns
# Warmup Iteration   2: 0.007 ops/ns
# Warmup Iteration   3: 0.006 ops/ns
# Warmup Iteration   4: 0.007 ops/ns
# Warmup Iteration   5: 0.006 ops/ns
Iteration   1: 0.006 ops/ns
                 offer: 0.003 ops/ns
                 poll:  0.003 ops/ns

Iteration   2: 0.006 ops/ns
                 offer: 0.003 ops/ns
                 poll:  0.003 ops/ns

Iteration   3: 0.006 ops/ns
                 offer: 0.003 ops/ns
                 poll:  0.003 ops/ns

Iteration   4: 0.006 ops/ns
                 offer: 0.003 ops/ns
                 poll:  0.003 ops/ns

Iteration   5: 0.006 ops/ns
                 offer: 0.003 ops/ns
                 poll:  0.003 ops/ns


# Run progress: 5.56% complete, ETA 00:28:26
# Fork: 2 of 3
# Warmup Iteration   1: 0.006 ops/ns
# Warmup Iteration   2: 0.006 ops/ns
# Warmup Iteration   3: 0.006 ops/ns
# Warmup Iteration   4: 0.007 ops/ns
# Warmup Iteration   5: 0.006 ops/ns
Iteration   1: 0.006 ops/ns
                 offer: 0.003 ops/ns
                 poll:  0.003 ops/ns

Iteration   2: 0.006 ops/ns
                 offer: 0.003 ops/ns
                 poll:  0.003 ops/ns

Iteration   3: 0.006 ops/ns
                 offer: 0.003 ops/ns
                 poll:  0.003 ops/ns

Iteration   4: 0.006 ops/ns
                 offer: 0.003 ops/ns
                 poll:  0.003 ops/ns

Iteration   5: 0.005 ops/ns
                 offer: 0.003 ops/ns
                 poll:  0.003 ops/ns


# Run progress: 11.11% complete, ETA 00:26:45
# Fork: 3 of 3
# Warmup Iteration   1: 0.006 ops/ns
# Warmup Iteration   2: 0.006 ops/ns
# Warmup Iteration   3: 0.006 ops/ns
# Warmup Iteration   4: 0.006 ops/ns
# Warmup Iteration   5: 0.006 ops/ns
Iteration   1: 0.007 ops/ns
                 offer: 0.003 ops/ns
                 poll:  0.003 ops/ns

Iteration   2: 0.006 ops/ns
                 offer: 0.003 ops/ns
                 poll:  0.003 ops/ns

Iteration   3: 0.005 ops/ns
                 offer: 0.003 ops/ns
                 poll:  0.003 ops/ns

Iteration   4: 0.005 ops/ns
                 offer: 0.003 ops/ns
                 poll:  0.003 ops/ns

Iteration   5: 0.005 ops/ns
                 offer: 0.003 ops/ns
                 poll:  0.003 ops/ns



Result "com.ionutbalosin.jvm.jit.benchmark.QueueThroughputBenchmark.queue_throughput":
  0.006 ±(99.9%) 0.001 ops/ns [Average]
  (min, avg, max) = (0.005, 0.006, 0.007), stdev = 0.001
  CI (99.9%): [0.005, 0.006] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.QueueThroughputBenchmark.queue_throughput:offer":
  0.003 ±(99.9%) 0.001 ops/ns [Average]
  (min, avg, max) = (0.003, 0.003, 0.003), stdev = 0.001
  CI (99.9%): [0.003, 0.003] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.QueueThroughputBenchmark.queue_throughput:poll":
  0.003 ±(99.9%) 0.001 ops/ns [Average]
  (min, avg, max) = (0.003, 0.003, 0.003), stdev = 0.001
  CI (99.9%): [0.003, 0.003] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 8 threads (1 group; 4x "offer", 4x "poll" in each group), will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.QueueThroughputBenchmark.queue_throughput
# Parameters: (capacity = 262144, queueType = ARRAY_BLOCKING_QUEUE_F)

# Run progress: 16.67% complete, ETA 00:25:05
# Fork: 1 of 3
# Warmup Iteration   1: ≈ 10⁻⁴ ops/ns
# Warmup Iteration   2: ≈ 10⁻⁴ ops/ns
# Warmup Iteration   3: ≈ 10⁻⁴ ops/ns
# Warmup Iteration   4: ≈ 10⁻⁴ ops/ns
# Warmup Iteration   5: ≈ 10⁻⁴ ops/ns
Iteration   1: ≈ 10⁻⁴ ops/ns
                 offer: ≈ 10⁻⁴ ops/ns
                 poll:  ≈ 10⁻⁴ ops/ns

Iteration   2: ≈ 10⁻⁴ ops/ns
                 offer: ≈ 10⁻⁴ ops/ns
                 poll:  ≈ 10⁻⁴ ops/ns

Iteration   3: ≈ 10⁻⁴ ops/ns
                 offer: ≈ 10⁻⁴ ops/ns
                 poll:  ≈ 10⁻⁴ ops/ns

Iteration   4: ≈ 10⁻⁴ ops/ns
                 offer: ≈ 10⁻⁴ ops/ns
                 poll:  ≈ 10⁻⁴ ops/ns

Iteration   5: ≈ 10⁻⁴ ops/ns
                 offer: ≈ 10⁻⁴ ops/ns
                 poll:  ≈ 10⁻⁴ ops/ns


# Run progress: 22.22% complete, ETA 00:23:24
# Fork: 2 of 3
# Warmup Iteration   1: ≈ 10⁻⁴ ops/ns
# Warmup Iteration   2: ≈ 10⁻⁴ ops/ns
# Warmup Iteration   3: ≈ 10⁻⁴ ops/ns
# Warmup Iteration   4: ≈ 10⁻⁴ ops/ns
# Warmup Iteration   5: ≈ 10⁻⁴ ops/ns
Iteration   1: ≈ 10⁻⁴ ops/ns
                 offer: ≈ 10⁻⁴ ops/ns
                 poll:  ≈ 10⁻⁴ ops/ns

Iteration   2: ≈ 10⁻⁴ ops/ns
                 offer: ≈ 10⁻⁴ ops/ns
                 poll:  ≈ 10⁻⁴ ops/ns

Iteration   3: ≈ 10⁻⁴ ops/ns
                 offer: ≈ 10⁻⁴ ops/ns
                 poll:  ≈ 10⁻⁴ ops/ns

Iteration   4: ≈ 10⁻⁴ ops/ns
                 offer: ≈ 10⁻⁴ ops/ns
                 poll:  ≈ 10⁻⁴ ops/ns

Iteration   5: ≈ 10⁻⁴ ops/ns
                 offer: ≈ 10⁻⁴ ops/ns
                 poll:  ≈ 10⁻⁴ ops/ns


# Run progress: 27.78% complete, ETA 00:21:44
# Fork: 3 of 3
# Warmup Iteration   1: ≈ 10⁻⁴ ops/ns
# Warmup Iteration   2: ≈ 10⁻⁴ ops/ns
# Warmup Iteration   3: ≈ 10⁻⁴ ops/ns
# Warmup Iteration   4: ≈ 10⁻⁴ ops/ns
# Warmup Iteration   5: ≈ 10⁻⁴ ops/ns
Iteration   1: ≈ 10⁻⁴ ops/ns
                 offer: ≈ 10⁻⁴ ops/ns
                 poll:  ≈ 10⁻⁴ ops/ns

Iteration   2: ≈ 10⁻⁴ ops/ns
                 offer: ≈ 10⁻⁴ ops/ns
                 poll:  ≈ 10⁻⁴ ops/ns

Iteration   3: ≈ 10⁻⁴ ops/ns
                 offer: ≈ 10⁻⁴ ops/ns
                 poll:  ≈ 10⁻⁴ ops/ns

Iteration   4: ≈ 10⁻⁴ ops/ns
                 offer: ≈ 10⁻⁴ ops/ns
                 poll:  ≈ 10⁻⁴ ops/ns

Iteration   5: ≈ 10⁻⁴ ops/ns
                 offer: ≈ 10⁻⁴ ops/ns
                 poll:  ≈ 10⁻⁴ ops/ns



Result "com.ionutbalosin.jvm.jit.benchmark.QueueThroughputBenchmark.queue_throughput":
  ≈ 10⁻⁴ ops/ns

Secondary result "com.ionutbalosin.jvm.jit.benchmark.QueueThroughputBenchmark.queue_throughput:offer":
  ≈ 10⁻⁴ ops/ns

Secondary result "com.ionutbalosin.jvm.jit.benchmark.QueueThroughputBenchmark.queue_throughput:poll":
  ≈ 10⁻⁴ ops/ns


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 8 threads (1 group; 4x "offer", 4x "poll" in each group), will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.QueueThroughputBenchmark.queue_throughput
# Parameters: (capacity = 262144, queueType = ARRAY_BLOCKING_QUEUE_NF)

# Run progress: 33.33% complete, ETA 00:20:03
# Fork: 1 of 3
# Warmup Iteration   1: 0.006 ops/ns
# Warmup Iteration   2: 0.006 ops/ns
# Warmup Iteration   3: 0.006 ops/ns
# Warmup Iteration   4: 0.006 ops/ns
# Warmup Iteration   5: 0.006 ops/ns
Iteration   1: 0.006 ops/ns
                 offer: 0.003 ops/ns
                 poll:  0.003 ops/ns

Iteration   2: 0.006 ops/ns
                 offer: 0.003 ops/ns
                 poll:  0.003 ops/ns

Iteration   3: 0.006 ops/ns
                 offer: 0.003 ops/ns
                 poll:  0.003 ops/ns

Iteration   4: 0.006 ops/ns
                 offer: 0.003 ops/ns
                 poll:  0.003 ops/ns

Iteration   5: 0.006 ops/ns
                 offer: 0.003 ops/ns
                 poll:  0.003 ops/ns


# Run progress: 38.89% complete, ETA 00:18:23
# Fork: 2 of 3
# Warmup Iteration   1: 0.005 ops/ns
# Warmup Iteration   2: 0.005 ops/ns
# Warmup Iteration   3: 0.006 ops/ns
# Warmup Iteration   4: 0.006 ops/ns
# Warmup Iteration   5: 0.006 ops/ns
Iteration   1: 0.006 ops/ns
                 offer: 0.003 ops/ns
                 poll:  0.003 ops/ns

Iteration   2: 0.006 ops/ns
                 offer: 0.003 ops/ns
                 poll:  0.003 ops/ns

Iteration   3: 0.006 ops/ns
                 offer: 0.003 ops/ns
                 poll:  0.003 ops/ns

Iteration   4: 0.006 ops/ns
                 offer: 0.003 ops/ns
                 poll:  0.003 ops/ns

Iteration   5: 0.006 ops/ns
                 offer: 0.003 ops/ns
                 poll:  0.003 ops/ns


# Run progress: 44.44% complete, ETA 00:16:43
# Fork: 3 of 3
# Warmup Iteration   1: 0.006 ops/ns
# Warmup Iteration   2: 0.006 ops/ns
# Warmup Iteration   3: 0.006 ops/ns
# Warmup Iteration   4: 0.006 ops/ns
# Warmup Iteration   5: 0.006 ops/ns
Iteration   1: 0.006 ops/ns
                 offer: 0.003 ops/ns
                 poll:  0.003 ops/ns

Iteration   2: 0.005 ops/ns
                 offer: 0.003 ops/ns
                 poll:  0.003 ops/ns

Iteration   3: 0.006 ops/ns
                 offer: 0.003 ops/ns
                 poll:  0.003 ops/ns

Iteration   4: 0.006 ops/ns
                 offer: 0.003 ops/ns
                 poll:  0.003 ops/ns

Iteration   5: 0.006 ops/ns
                 offer: 0.003 ops/ns
                 poll:  0.003 ops/ns



Result "com.ionutbalosin.jvm.jit.benchmark.QueueThroughputBenchmark.queue_throughput":
  0.006 ±(99.9%) 0.001 ops/ns [Average]
  (min, avg, max) = (0.005, 0.006, 0.006), stdev = 0.001
  CI (99.9%): [0.006, 0.006] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.QueueThroughputBenchmark.queue_throughput:offer":
  0.003 ±(99.9%) 0.001 ops/ns [Average]
  (min, avg, max) = (0.003, 0.003, 0.003), stdev = 0.001
  CI (99.9%): [0.003, 0.003] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.QueueThroughputBenchmark.queue_throughput:poll":
  0.003 ±(99.9%) 0.001 ops/ns [Average]
  (min, avg, max) = (0.003, 0.003, 0.003), stdev = 0.001
  CI (99.9%): [0.003, 0.003] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 8 threads (1 group; 4x "offer", 4x "poll" in each group), will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.QueueThroughputBenchmark.queue_throughput
# Parameters: (capacity = 262144, queueType = CONCURRENT_LINKED_QUEUE)

# Run progress: 50.00% complete, ETA 00:15:02
# Fork: 1 of 3
# Warmup Iteration   1: 0.016 ops/ns
# Warmup Iteration   2: 0.016 ops/ns
# Warmup Iteration   3: 0.016 ops/ns
# Warmup Iteration   4: 0.014 ops/ns
# Warmup Iteration   5: 0.014 ops/ns
Iteration   1: 0.014 ops/ns
                 offer: 0.007 ops/ns
                 poll:  0.007 ops/ns

Iteration   2: 0.014 ops/ns
                 offer: 0.007 ops/ns
                 poll:  0.007 ops/ns

Iteration   3: 0.014 ops/ns
                 offer: 0.006 ops/ns
                 poll:  0.007 ops/ns

Iteration   4: 0.014 ops/ns
                 offer: 0.007 ops/ns
                 poll:  0.007 ops/ns

Iteration   5: 0.014 ops/ns
                 offer: 0.007 ops/ns
                 poll:  0.007 ops/ns


# Run progress: 55.56% complete, ETA 00:13:22
# Fork: 2 of 3
# Warmup Iteration   1: 0.015 ops/ns
# Warmup Iteration   2: 0.016 ops/ns
# Warmup Iteration   3: 0.015 ops/ns
# Warmup Iteration   4: 0.014 ops/ns
# Warmup Iteration   5: 0.013 ops/ns
Iteration   1: 0.013 ops/ns
                 offer: 0.006 ops/ns
                 poll:  0.007 ops/ns

Iteration   2: 0.014 ops/ns
                 offer: 0.006 ops/ns
                 poll:  0.007 ops/ns

Iteration   3: 0.014 ops/ns
                 offer: 0.006 ops/ns
                 poll:  0.007 ops/ns

Iteration   4: 0.014 ops/ns
                 offer: 0.006 ops/ns
                 poll:  0.008 ops/ns

Iteration   5: 0.014 ops/ns
                 offer: 0.006 ops/ns
                 poll:  0.007 ops/ns


# Run progress: 61.11% complete, ETA 00:11:42
# Fork: 3 of 3
# Warmup Iteration   1: 0.014 ops/ns
# Warmup Iteration   2: 0.015 ops/ns
# Warmup Iteration   3: 0.015 ops/ns
# Warmup Iteration   4: 0.014 ops/ns
# Warmup Iteration   5: 0.013 ops/ns
Iteration   1: 0.014 ops/ns
                 offer: 0.007 ops/ns
                 poll:  0.007 ops/ns

Iteration   2: 0.014 ops/ns
                 offer: 0.007 ops/ns
                 poll:  0.007 ops/ns

Iteration   3: 0.014 ops/ns
                 offer: 0.007 ops/ns
                 poll:  0.008 ops/ns

Iteration   4: 0.013 ops/ns
                 offer: 0.006 ops/ns
                 poll:  0.007 ops/ns

Iteration   5: 0.014 ops/ns
                 offer: 0.006 ops/ns
                 poll:  0.007 ops/ns



Result "com.ionutbalosin.jvm.jit.benchmark.QueueThroughputBenchmark.queue_throughput":
  0.014 ±(99.9%) 0.001 ops/ns [Average]
  (min, avg, max) = (0.013, 0.014, 0.014), stdev = 0.001
  CI (99.9%): [0.014, 0.014] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.QueueThroughputBenchmark.queue_throughput:offer":
  0.006 ±(99.9%) 0.001 ops/ns [Average]
  (min, avg, max) = (0.006, 0.006, 0.007), stdev = 0.001
  CI (99.9%): [0.006, 0.007] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.QueueThroughputBenchmark.queue_throughput:poll":
  0.007 ±(99.9%) 0.001 ops/ns [Average]
  (min, avg, max) = (0.007, 0.007, 0.008), stdev = 0.001
  CI (99.9%): [0.007, 0.007] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 8 threads (1 group; 4x "offer", 4x "poll" in each group), will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.QueueThroughputBenchmark.queue_throughput
# Parameters: (capacity = 262144, queueType = PRIORITY_BLOCKING_QUEUE)

# Run progress: 66.67% complete, ETA 00:10:01
# Fork: 1 of 3
# Warmup Iteration   1: 0.005 ops/ns
# Warmup Iteration   2: 0.005 ops/ns
# Warmup Iteration   3: 0.005 ops/ns
# Warmup Iteration   4: 0.005 ops/ns
# Warmup Iteration   5: 0.005 ops/ns
Iteration   1: 0.006 ops/ns
                 offer: 0.003 ops/ns
                 poll:  0.002 ops/ns

Iteration   2: 0.006 ops/ns
                 offer: 0.003 ops/ns
                 poll:  0.002 ops/ns

Iteration   3: 0.005 ops/ns
                 offer: 0.003 ops/ns
                 poll:  0.002 ops/ns

Iteration   4: 0.005 ops/ns
                 offer: 0.003 ops/ns
                 poll:  0.002 ops/ns

Iteration   5: 0.005 ops/ns
                 offer: 0.003 ops/ns
                 poll:  0.002 ops/ns


# Run progress: 72.22% complete, ETA 00:08:21
# Fork: 2 of 3
# Warmup Iteration   1: 0.005 ops/ns
# Warmup Iteration   2: 0.005 ops/ns
# Warmup Iteration   3: 0.005 ops/ns
# Warmup Iteration   4: 0.005 ops/ns
# Warmup Iteration   5: 0.005 ops/ns
Iteration   1: 0.005 ops/ns
                 offer: 0.002 ops/ns
                 poll:  0.003 ops/ns

Iteration   2: 0.005 ops/ns
                 offer: 0.002 ops/ns
                 poll:  0.003 ops/ns

Iteration   3: 0.005 ops/ns
                 offer: 0.002 ops/ns
                 poll:  0.003 ops/ns

Iteration   4: 0.005 ops/ns
                 offer: 0.002 ops/ns
                 poll:  0.003 ops/ns

Iteration   5: 0.005 ops/ns
                 offer: 0.002 ops/ns
                 poll:  0.003 ops/ns


# Run progress: 77.78% complete, ETA 00:06:41
# Fork: 3 of 3
# Warmup Iteration   1: 0.005 ops/ns
# Warmup Iteration   2: 0.005 ops/ns
# Warmup Iteration   3: 0.005 ops/ns
# Warmup Iteration   4: 0.005 ops/ns
# Warmup Iteration   5: 0.005 ops/ns
Iteration   1: 0.005 ops/ns
                 offer: 0.003 ops/ns
                 poll:  0.002 ops/ns

Iteration   2: 0.005 ops/ns
                 offer: 0.002 ops/ns
                 poll:  0.002 ops/ns

Iteration   3: 0.005 ops/ns
                 offer: 0.003 ops/ns
                 poll:  0.002 ops/ns

Iteration   4: 0.005 ops/ns
                 offer: 0.002 ops/ns
                 poll:  0.002 ops/ns

Iteration   5: 0.005 ops/ns
                 offer: 0.002 ops/ns
                 poll:  0.002 ops/ns



Result "com.ionutbalosin.jvm.jit.benchmark.QueueThroughputBenchmark.queue_throughput":
  0.005 ±(99.9%) 0.001 ops/ns [Average]
  (min, avg, max) = (0.005, 0.005, 0.006), stdev = 0.001
  CI (99.9%): [0.005, 0.005] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.QueueThroughputBenchmark.queue_throughput:offer":
  0.003 ±(99.9%) 0.001 ops/ns [Average]
  (min, avg, max) = (0.002, 0.003, 0.003), stdev = 0.001
  CI (99.9%): [0.002, 0.003] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.QueueThroughputBenchmark.queue_throughput:poll":
  0.002 ±(99.9%) 0.001 ops/ns [Average]
  (min, avg, max) = (0.002, 0.002, 0.003), stdev = 0.001
  CI (99.9%): [0.002, 0.003] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 8 threads (1 group; 4x "offer", 4x "poll" in each group), will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.QueueThroughputBenchmark.queue_throughput
# Parameters: (capacity = 262144, queueType = SYNCHRONOUS_QUEUE)

# Run progress: 83.33% complete, ETA 00:05:00
# Fork: 1 of 3
# Warmup Iteration   1: 0.155 ops/ns
# Warmup Iteration   2: 0.149 ops/ns
# Warmup Iteration   3: 0.146 ops/ns
# Warmup Iteration   4: 0.142 ops/ns
# Warmup Iteration   5: 0.144 ops/ns
Iteration   1: 0.144 ops/ns
                 offer: 0.074 ops/ns
                 poll:  0.070 ops/ns

Iteration   2: 0.139 ops/ns
                 offer: 0.071 ops/ns
                 poll:  0.068 ops/ns

Iteration   3: 0.143 ops/ns
                 offer: 0.073 ops/ns
                 poll:  0.070 ops/ns

Iteration   4: 0.143 ops/ns
                 offer: 0.074 ops/ns
                 poll:  0.070 ops/ns

Iteration   5: 0.143 ops/ns
                 offer: 0.074 ops/ns
                 poll:  0.069 ops/ns


# Run progress: 88.89% complete, ETA 00:03:20
# Fork: 2 of 3
# Warmup Iteration   1: 0.143 ops/ns
# Warmup Iteration   2: 0.144 ops/ns
# Warmup Iteration   3: 0.141 ops/ns
# Warmup Iteration   4: 0.142 ops/ns
# Warmup Iteration   5: 0.142 ops/ns
Iteration   1: 0.141 ops/ns
                 offer: 0.073 ops/ns
                 poll:  0.069 ops/ns

Iteration   2: 0.141 ops/ns
                 offer: 0.072 ops/ns
                 poll:  0.068 ops/ns

Iteration   3: 0.140 ops/ns
                 offer: 0.072 ops/ns
                 poll:  0.068 ops/ns

Iteration   4: 0.142 ops/ns
                 offer: 0.073 ops/ns
                 poll:  0.069 ops/ns

Iteration   5: 0.139 ops/ns
                 offer: 0.071 ops/ns
                 poll:  0.068 ops/ns


# Run progress: 94.44% complete, ETA 00:01:40
# Fork: 3 of 3
# Warmup Iteration   1: 0.140 ops/ns
# Warmup Iteration   2: 0.142 ops/ns
# Warmup Iteration   3: 0.143 ops/ns
# Warmup Iteration   4: 0.141 ops/ns
# Warmup Iteration   5: 0.141 ops/ns
Iteration   1: 0.141 ops/ns
                 offer: 0.073 ops/ns
                 poll:  0.069 ops/ns

Iteration   2: 0.142 ops/ns
                 offer: 0.073 ops/ns
                 poll:  0.069 ops/ns

Iteration   3: 0.141 ops/ns
                 offer: 0.072 ops/ns
                 poll:  0.068 ops/ns

Iteration   4: 0.141 ops/ns
                 offer: 0.072 ops/ns
                 poll:  0.068 ops/ns

Iteration   5: 0.143 ops/ns
                 offer: 0.074 ops/ns
                 poll:  0.069 ops/ns



Result "com.ionutbalosin.jvm.jit.benchmark.QueueThroughputBenchmark.queue_throughput":
  0.142 ±(99.9%) 0.002 ops/ns [Average]
  (min, avg, max) = (0.139, 0.142, 0.144), stdev = 0.001
  CI (99.9%): [0.140, 0.143] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.QueueThroughputBenchmark.queue_throughput:offer":
  0.073 ±(99.9%) 0.001 ops/ns [Average]
  (min, avg, max) = (0.071, 0.073, 0.074), stdev = 0.001
  CI (99.9%): [0.072, 0.074] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.QueueThroughputBenchmark.queue_throughput:poll":
  0.069 ±(99.9%) 0.001 ops/ns [Average]
  (min, avg, max) = (0.068, 0.069, 0.070), stdev = 0.001
  CI (99.9%): [0.068, 0.069] (assumes normal distribution)


# Run complete. Total time: 00:30:05

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        (capacity)              (queueType)   Mode  Cnt   Score    Error   Units
QueueThroughputBenchmark.queue_throughput            262144    LINKED_BLOCKING_QUEUE  thrpt   15   0.006 ±  0.001  ops/ns
QueueThroughputBenchmark.queue_throughput:offer      262144    LINKED_BLOCKING_QUEUE  thrpt   15   0.003 ±  0.001  ops/ns
QueueThroughputBenchmark.queue_throughput:poll       262144    LINKED_BLOCKING_QUEUE  thrpt   15   0.003 ±  0.001  ops/ns
QueueThroughputBenchmark.queue_throughput            262144   ARRAY_BLOCKING_QUEUE_F  thrpt   15  ≈ 10⁻⁴           ops/ns
QueueThroughputBenchmark.queue_throughput:offer      262144   ARRAY_BLOCKING_QUEUE_F  thrpt   15  ≈ 10⁻⁴           ops/ns
QueueThroughputBenchmark.queue_throughput:poll       262144   ARRAY_BLOCKING_QUEUE_F  thrpt   15  ≈ 10⁻⁴           ops/ns
QueueThroughputBenchmark.queue_throughput            262144  ARRAY_BLOCKING_QUEUE_NF  thrpt   15   0.006 ±  0.001  ops/ns
QueueThroughputBenchmark.queue_throughput:offer      262144  ARRAY_BLOCKING_QUEUE_NF  thrpt   15   0.003 ±  0.001  ops/ns
QueueThroughputBenchmark.queue_throughput:poll       262144  ARRAY_BLOCKING_QUEUE_NF  thrpt   15   0.003 ±  0.001  ops/ns
QueueThroughputBenchmark.queue_throughput            262144  CONCURRENT_LINKED_QUEUE  thrpt   15   0.014 ±  0.001  ops/ns
QueueThroughputBenchmark.queue_throughput:offer      262144  CONCURRENT_LINKED_QUEUE  thrpt   15   0.006 ±  0.001  ops/ns
QueueThroughputBenchmark.queue_throughput:poll       262144  CONCURRENT_LINKED_QUEUE  thrpt   15   0.007 ±  0.001  ops/ns
QueueThroughputBenchmark.queue_throughput            262144  PRIORITY_BLOCKING_QUEUE  thrpt   15   0.005 ±  0.001  ops/ns
QueueThroughputBenchmark.queue_throughput:offer      262144  PRIORITY_BLOCKING_QUEUE  thrpt   15   0.003 ±  0.001  ops/ns
QueueThroughputBenchmark.queue_throughput:poll       262144  PRIORITY_BLOCKING_QUEUE  thrpt   15   0.002 ±  0.001  ops/ns
QueueThroughputBenchmark.queue_throughput            262144        SYNCHRONOUS_QUEUE  thrpt   15   0.142 ±  0.002  ops/ns
QueueThroughputBenchmark.queue_throughput:offer      262144        SYNCHRONOUS_QUEUE  thrpt   15   0.073 ±  0.001  ops/ns
QueueThroughputBenchmark.queue_throughput:poll       262144        SYNCHRONOUS_QUEUE  thrpt   15   0.069 ±  0.001  ops/ns

Benchmark result is saved to results/report-openjdk-13/hotspotvm_c1_c2_jit/QueueThroughputBenchmark.json
Running java  -jar benchmarks/target/benchmarks.jar .*QueueBurstBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_c1_c2_jit/QueueBurstBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.QueueBurstBenchmark.offer_and_wait_burst
# Parameters: (burstSize = 128, capacity = 262144, consumerCount = 1, queueType = LINKED_BLOCKING_QUEUE)

# Run progress: 0.00% complete, ETA 00:30:00
# Fork: 1 of 3
# Warmup Iteration   1: 24840.631 ns/op
# Warmup Iteration   2: 22655.474 ns/op
# Warmup Iteration   3: 23123.846 ns/op
# Warmup Iteration   4: 23586.793 ns/op
# Warmup Iteration   5: 23748.703 ns/op
Iteration   1: 23699.647 ns/op
Iteration   2: 23676.806 ns/op
Iteration   3: 24076.111 ns/op
Iteration   4: 24335.917 ns/op
Iteration   5: 24001.028 ns/op

# Run progress: 5.56% complete, ETA 00:28:24
# Fork: 2 of 3
# Warmup Iteration   1: 28149.398 ns/op
# Warmup Iteration   2: 26056.660 ns/op
# Warmup Iteration   3: 24552.983 ns/op
# Warmup Iteration   4: 27819.733 ns/op
# Warmup Iteration   5: 32771.121 ns/op
Iteration   1: 33777.427 ns/op
Iteration   2: 33405.445 ns/op
Iteration   3: 32309.270 ns/op
Iteration   4: 31453.931 ns/op
Iteration   5: 31701.388 ns/op

# Run progress: 11.11% complete, ETA 00:26:43
# Fork: 3 of 3
# Warmup Iteration   1: 29691.840 ns/op
# Warmup Iteration   2: 29977.803 ns/op
# Warmup Iteration   3: 20888.119 ns/op
# Warmup Iteration   4: 27846.306 ns/op
# Warmup Iteration   5: 32868.498 ns/op
Iteration   1: 32813.247 ns/op
Iteration   2: 30864.340 ns/op
Iteration   3: 32087.998 ns/op
Iteration   4: 32172.967 ns/op
Iteration   5: 32169.688 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.QueueBurstBenchmark.offer_and_wait_burst":
  29503.014 ±(99.9%) 4405.925 ns/op [Average]
  (min, avg, max) = (23676.806, 29503.014, 33777.427), stdev = 4121.305
  CI (99.9%): [25097.089, 33908.939] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.QueueBurstBenchmark.offer_and_wait_burst
# Parameters: (burstSize = 128, capacity = 262144, consumerCount = 1, queueType = ARRAY_BLOCKING_QUEUE_F)

# Run progress: 16.67% complete, ETA 00:25:03
# Fork: 1 of 3
# Warmup Iteration   1: 1652282.387 ns/op
# Warmup Iteration   2: 1451950.687 ns/op
# Warmup Iteration   3: 1450625.177 ns/op
# Warmup Iteration   4: 2062349.918 ns/op
# Warmup Iteration   5: 1162277.235 ns/op
Iteration   1: 1637583.604 ns/op
Iteration   2: 1272409.226 ns/op
Iteration   3: 1034527.399 ns/op
Iteration   4: 1711735.569 ns/op
Iteration   5: 1735385.724 ns/op

# Run progress: 22.22% complete, ETA 00:23:23
# Fork: 2 of 3
# Warmup Iteration   1: 1164090.893 ns/op
# Warmup Iteration   2: 1022024.181 ns/op
# Warmup Iteration   3: 1199819.966 ns/op
# Warmup Iteration   4: 1098427.012 ns/op
# Warmup Iteration   5: 1608292.462 ns/op
Iteration   1: 1171570.691 ns/op
Iteration   2: 1316506.094 ns/op
Iteration   3: 1445137.984 ns/op
Iteration   4: 1167498.450 ns/op
Iteration   5: 2270928.013 ns/op

# Run progress: 27.78% complete, ETA 00:21:43
# Fork: 3 of 3
# Warmup Iteration   1: 1599416.540 ns/op
# Warmup Iteration   2: 1344370.658 ns/op
# Warmup Iteration   3: 1903839.320 ns/op
# Warmup Iteration   4: 1856032.787 ns/op
# Warmup Iteration   5: 1304434.201 ns/op
Iteration   1: 2054148.841 ns/op
Iteration   2: 1633477.794 ns/op
Iteration   3: 2175591.317 ns/op
Iteration   4: 1307669.808 ns/op
Iteration   5: 1029539.354 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.QueueBurstBenchmark.offer_and_wait_burst":
  1530913.991 ±(99.9%) 429754.479 ns/op [Average]
  (min, avg, max) = (1029539.354, 1530913.991, 2270928.013), stdev = 401992.606
  CI (99.9%): [1101159.513, 1960668.470] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.QueueBurstBenchmark.offer_and_wait_burst
# Parameters: (burstSize = 128, capacity = 262144, consumerCount = 1, queueType = ARRAY_BLOCKING_QUEUE_NF)

# Run progress: 33.33% complete, ETA 00:20:03
# Fork: 1 of 3
# Warmup Iteration   1: 28115.574 ns/op
# Warmup Iteration   2: 34175.754 ns/op
# Warmup Iteration   3: 34082.753 ns/op
# Warmup Iteration   4: 36569.706 ns/op
# Warmup Iteration   5: 36907.460 ns/op
Iteration   1: 33488.623 ns/op
Iteration   2: 38046.896 ns/op
Iteration   3: 33892.584 ns/op
Iteration   4: 41822.174 ns/op
Iteration   5: 42440.162 ns/op

# Run progress: 38.89% complete, ETA 00:18:22
# Fork: 2 of 3
# Warmup Iteration   1: 29324.771 ns/op
# Warmup Iteration   2: 29113.220 ns/op
# Warmup Iteration   3: 27093.258 ns/op
# Warmup Iteration   4: 28399.144 ns/op
# Warmup Iteration   5: 28452.882 ns/op
Iteration   1: 22244.171 ns/op
Iteration   2: 28213.555 ns/op
Iteration   3: 29906.842 ns/op
Iteration   4: 28535.846 ns/op
Iteration   5: 28802.076 ns/op

# Run progress: 44.44% complete, ETA 00:16:42
# Fork: 3 of 3
# Warmup Iteration   1: 20898.237 ns/op
# Warmup Iteration   2: 33566.094 ns/op
# Warmup Iteration   3: 37160.711 ns/op
# Warmup Iteration   4: 35034.945 ns/op
# Warmup Iteration   5: 27983.483 ns/op
Iteration   1: 37194.903 ns/op
Iteration   2: 32688.620 ns/op
Iteration   3: 36695.753 ns/op
Iteration   4: 36053.219 ns/op
Iteration   5: 32019.710 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.QueueBurstBenchmark.offer_and_wait_burst":
  33469.676 ±(99.9%) 5838.018 ns/op [Average]
  (min, avg, max) = (22244.171, 33469.676, 42440.162), stdev = 5460.885
  CI (99.9%): [27631.658, 39307.693] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.QueueBurstBenchmark.offer_and_wait_burst
# Parameters: (burstSize = 128, capacity = 262144, consumerCount = 1, queueType = CONCURRENT_LINKED_QUEUE)

# Run progress: 50.00% complete, ETA 00:15:02
# Fork: 1 of 3
# Warmup Iteration   1: 6708.693 ns/op
# Warmup Iteration   2: 9709.154 ns/op
# Warmup Iteration   3: 9511.169 ns/op
# Warmup Iteration   4: 8779.978 ns/op
# Warmup Iteration   5: 8796.414 ns/op
Iteration   1: 9158.585 ns/op
Iteration   2: 8987.029 ns/op
Iteration   3: 8941.634 ns/op
Iteration   4: 8939.277 ns/op
Iteration   5: 9256.001 ns/op

# Run progress: 55.56% complete, ETA 00:13:22
# Fork: 2 of 3
# Warmup Iteration   1: 7590.405 ns/op
# Warmup Iteration   2: 8913.709 ns/op
# Warmup Iteration   3: 9129.033 ns/op
# Warmup Iteration   4: 9380.596 ns/op
# Warmup Iteration   5: 9956.669 ns/op
Iteration   1: 9744.140 ns/op
Iteration   2: 8784.409 ns/op
Iteration   3: 8881.780 ns/op
Iteration   4: 9055.958 ns/op
Iteration   5: 9582.962 ns/op

# Run progress: 61.11% complete, ETA 00:11:41
# Fork: 3 of 3
# Warmup Iteration   1: 6982.546 ns/op
# Warmup Iteration   2: 8701.694 ns/op
# Warmup Iteration   3: 8908.070 ns/op
# Warmup Iteration   4: 8529.221 ns/op
# Warmup Iteration   5: 8923.084 ns/op
Iteration   1: 8960.410 ns/op
Iteration   2: 8921.736 ns/op
Iteration   3: 8815.595 ns/op
Iteration   4: 8743.241 ns/op
Iteration   5: 8701.789 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.QueueBurstBenchmark.offer_and_wait_burst":
  9031.636 ±(99.9%) 317.734 ns/op [Average]
  (min, avg, max) = (8701.789, 9031.636, 9744.140), stdev = 297.209
  CI (99.9%): [8713.902, 9349.371] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.QueueBurstBenchmark.offer_and_wait_burst
# Parameters: (burstSize = 128, capacity = 262144, consumerCount = 1, queueType = PRIORITY_BLOCKING_QUEUE)

# Run progress: 66.67% complete, ETA 00:10:01
# Fork: 1 of 3
# Warmup Iteration   1: <failure>

java.lang.UnsupportedOperationException: Unsupported queue type PRIORITY_BLOCKING_QUEUE
	at com.ionutbalosin.jvm.jit.benchmark.QueueBurstBenchmark.setupQueue(QueueBurstBenchmark.java:90)
	at com.ionutbalosin.jvm.jit.benchmark.generated.QueueBurstBenchmark_offer_and_wait_burst_jmhTest._jmh_tryInit_f_queueburstbenchmark0_G(QueueBurstBenchmark_offer_and_wait_burst_jmhTest.java:612)
	at com.ionutbalosin.jvm.jit.benchmark.generated.QueueBurstBenchmark_offer_and_wait_burst_jmhTest.offer_and_wait_burst_AverageTime(QueueBurstBenchmark_offer_and_wait_burst_jmhTest.java:203)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:567)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:830)


Benchmark had encountered error, and fail on error was requested
Running java  -jar benchmarks/target/benchmarks.jar .*IdentityHashCodeBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_c1_c2_jit/IdentityHashCodeBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:hashCode=0
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.IdentityHashCodeBenchmark.id_hash_code_0

# Run progress: 0.00% complete, ETA 00:35:00
# Fork: 1 of 3
# Warmup Iteration   1: 65.750 ns/op
# Warmup Iteration   2: 63.657 ns/op
# Warmup Iteration   3: 59.612 ns/op
# Warmup Iteration   4: 59.505 ns/op
# Warmup Iteration   5: 57.466 ns/op
Iteration   1: 57.494 ns/op
Iteration   2: 60.308 ns/op
Iteration   3: 59.139 ns/op
Iteration   4: 61.524 ns/op
Iteration   5: 61.292 ns/op

# Run progress: 4.76% complete, ETA 00:33:25
# Fork: 2 of 3
# Warmup Iteration   1: 61.092 ns/op
# Warmup Iteration   2: 61.555 ns/op
# Warmup Iteration   3: 59.914 ns/op
# Warmup Iteration   4: 59.379 ns/op
# Warmup Iteration   5: 59.120 ns/op
Iteration   1: 58.048 ns/op
Iteration   2: 60.699 ns/op
Iteration   3: 60.539 ns/op
Iteration   4: 59.970 ns/op
Iteration   5: 56.200 ns/op

# Run progress: 9.52% complete, ETA 00:31:44
# Fork: 3 of 3
# Warmup Iteration   1: 59.022 ns/op
# Warmup Iteration   2: 59.029 ns/op
# Warmup Iteration   3: 57.302 ns/op
# Warmup Iteration   4: 56.908 ns/op
# Warmup Iteration   5: 56.977 ns/op
Iteration   1: 58.847 ns/op
Iteration   2: 57.297 ns/op
Iteration   3: 61.117 ns/op
Iteration   4: 60.226 ns/op
Iteration   5: 59.811 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.IdentityHashCodeBenchmark.id_hash_code_0":
  59.501 ±(99.9%) 1.723 ns/op [Average]
  (min, avg, max) = (56.200, 59.501, 61.524), stdev = 1.612
  CI (99.9%): [57.777, 61.224] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:hashCode=1
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.IdentityHashCodeBenchmark.id_hash_code_1

# Run progress: 14.29% complete, ETA 00:30:04
# Fork: 1 of 3
# Warmup Iteration   1: 55.662 ns/op
# Warmup Iteration   2: 55.260 ns/op
# Warmup Iteration   3: 52.663 ns/op
# Warmup Iteration   4: 53.388 ns/op
# Warmup Iteration   5: 53.796 ns/op
Iteration   1: 51.329 ns/op
Iteration   2: 51.547 ns/op
Iteration   3: 51.597 ns/op
Iteration   4: 52.744 ns/op
Iteration   5: 52.138 ns/op

# Run progress: 19.05% complete, ETA 00:28:24
# Fork: 2 of 3
# Warmup Iteration   1: 55.501 ns/op
# Warmup Iteration   2: 54.258 ns/op
# Warmup Iteration   3: 52.024 ns/op
# Warmup Iteration   4: 51.392 ns/op
# Warmup Iteration   5: 51.345 ns/op
Iteration   1: 51.319 ns/op
Iteration   2: 51.387 ns/op
Iteration   3: 53.141 ns/op
Iteration   4: 53.668 ns/op
Iteration   5: 53.579 ns/op

# Run progress: 23.81% complete, ETA 00:26:43
# Fork: 3 of 3
# Warmup Iteration   1: 57.013 ns/op
# Warmup Iteration   2: 60.102 ns/op
# Warmup Iteration   3: 57.426 ns/op
# Warmup Iteration   4: 56.420 ns/op
# Warmup Iteration   5: 54.426 ns/op
Iteration   1: 57.250 ns/op
Iteration   2: 56.416 ns/op
Iteration   3: 56.599 ns/op
Iteration   4: 57.298 ns/op
Iteration   5: 57.314 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.IdentityHashCodeBenchmark.id_hash_code_1":
  53.822 ±(99.9%) 2.611 ns/op [Average]
  (min, avg, max) = (51.319, 53.822, 57.314), stdev = 2.443
  CI (99.9%): [51.210, 56.433] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:hashCode=2
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.IdentityHashCodeBenchmark.id_hash_code_2

# Run progress: 28.57% complete, ETA 00:25:03
# Fork: 1 of 3
# Warmup Iteration   1: 53.139 ns/op
# Warmup Iteration   2: 54.334 ns/op
# Warmup Iteration   3: 53.452 ns/op
# Warmup Iteration   4: 54.149 ns/op
# Warmup Iteration   5: 52.637 ns/op
Iteration   1: 53.736 ns/op
Iteration   2: 53.386 ns/op
Iteration   3: 51.680 ns/op
Iteration   4: 51.751 ns/op
Iteration   5: 53.371 ns/op

# Run progress: 33.33% complete, ETA 00:23:23
# Fork: 2 of 3
# Warmup Iteration   1: 52.398 ns/op
# Warmup Iteration   2: 53.048 ns/op
# Warmup Iteration   3: 54.650 ns/op
# Warmup Iteration   4: 53.514 ns/op
# Warmup Iteration   5: 52.521 ns/op
Iteration   1: 53.141 ns/op
Iteration   2: 51.373 ns/op
Iteration   3: 50.787 ns/op
Iteration   4: 50.827 ns/op
Iteration   5: 51.034 ns/op

# Run progress: 38.10% complete, ETA 00:21:43
# Fork: 3 of 3
# Warmup Iteration   1: 53.825 ns/op
# Warmup Iteration   2: 52.512 ns/op
# Warmup Iteration   3: 52.815 ns/op
# Warmup Iteration   4: 52.767 ns/op
# Warmup Iteration   5: 54.193 ns/op
Iteration   1: 54.091 ns/op
Iteration   2: 51.441 ns/op
Iteration   3: 51.299 ns/op
Iteration   4: 50.767 ns/op
Iteration   5: 51.834 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.IdentityHashCodeBenchmark.id_hash_code_2":
  52.034 ±(99.9%) 1.251 ns/op [Average]
  (min, avg, max) = (50.767, 52.034, 54.091), stdev = 1.170
  CI (99.9%): [50.784, 53.285] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:hashCode=3
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.IdentityHashCodeBenchmark.id_hash_code_3

# Run progress: 42.86% complete, ETA 00:20:02
# Fork: 1 of 3
# Warmup Iteration   1: 51.572 ns/op
# Warmup Iteration   2: 54.159 ns/op
# Warmup Iteration   3: 51.811 ns/op
# Warmup Iteration   4: 53.591 ns/op
# Warmup Iteration   5: 51.961 ns/op
Iteration   1: 52.916 ns/op
Iteration   2: 51.143 ns/op
Iteration   3: 51.359 ns/op
Iteration   4: 53.122 ns/op
Iteration   5: 52.456 ns/op

# Run progress: 47.62% complete, ETA 00:18:22
# Fork: 2 of 3
# Warmup Iteration   1: 55.173 ns/op
# Warmup Iteration   2: 56.296 ns/op
# Warmup Iteration   3: 53.518 ns/op
# Warmup Iteration   4: 53.783 ns/op
# Warmup Iteration   5: 51.316 ns/op
Iteration   1: 51.656 ns/op
Iteration   2: 51.785 ns/op
Iteration   3: 51.770 ns/op
Iteration   4: 51.809 ns/op
Iteration   5: 52.175 ns/op

# Run progress: 52.38% complete, ETA 00:16:42
# Fork: 3 of 3
# Warmup Iteration   1: 55.830 ns/op
# Warmup Iteration   2: 55.091 ns/op
# Warmup Iteration   3: 52.181 ns/op
# Warmup Iteration   4: 52.035 ns/op
# Warmup Iteration   5: 52.200 ns/op
Iteration   1: 51.294 ns/op
Iteration   2: 51.691 ns/op
Iteration   3: 53.939 ns/op
Iteration   4: 52.276 ns/op
Iteration   5: 53.243 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.IdentityHashCodeBenchmark.id_hash_code_3":
  52.175 ±(99.9%) 0.869 ns/op [Average]
  (min, avg, max) = (51.143, 52.175, 53.939), stdev = 0.813
  CI (99.9%): [51.307, 53.044] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:hashCode=4
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.IdentityHashCodeBenchmark.id_hash_code_4

# Run progress: 57.14% complete, ETA 00:15:02
# Fork: 1 of 3
# Warmup Iteration   1: 51.812 ns/op
# Warmup Iteration   2: 54.389 ns/op
# Warmup Iteration   3: 51.640 ns/op
# Warmup Iteration   4: 51.671 ns/op
# Warmup Iteration   5: 51.600 ns/op
Iteration   1: 51.045 ns/op
Iteration   2: 50.944 ns/op
Iteration   3: 51.020 ns/op
Iteration   4: 51.077 ns/op
Iteration   5: 51.854 ns/op

# Run progress: 61.90% complete, ETA 00:13:21
# Fork: 2 of 3
# Warmup Iteration   1: 54.815 ns/op
# Warmup Iteration   2: 54.528 ns/op
# Warmup Iteration   3: 53.365 ns/op
# Warmup Iteration   4: 50.440 ns/op
# Warmup Iteration   5: 51.340 ns/op
Iteration   1: 53.435 ns/op
Iteration   2: 51.024 ns/op
Iteration   3: 50.241 ns/op
Iteration   4: 53.498 ns/op
Iteration   5: 53.563 ns/op

# Run progress: 66.67% complete, ETA 00:11:41
# Fork: 3 of 3
# Warmup Iteration   1: 55.122 ns/op
# Warmup Iteration   2: 54.446 ns/op
# Warmup Iteration   3: 53.442 ns/op
# Warmup Iteration   4: 50.813 ns/op
# Warmup Iteration   5: 51.767 ns/op
Iteration   1: 53.400 ns/op
Iteration   2: 53.416 ns/op
Iteration   3: 52.213 ns/op
Iteration   4: 53.317 ns/op
Iteration   5: 49.946 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.IdentityHashCodeBenchmark.id_hash_code_4":
  51.999 ±(99.9%) 1.418 ns/op [Average]
  (min, avg, max) = (49.946, 51.999, 53.563), stdev = 1.326
  CI (99.9%): [50.582, 53.417] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: -XX:+UnlockExperimentalVMOptions -XX:hashCode=5
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.IdentityHashCodeBenchmark.id_hash_code_5

# Run progress: 71.43% complete, ETA 00:10:01
# Fork: 1 of 3
# Warmup Iteration   1: 56.675 ns/op
# Warmup Iteration   2: 54.871 ns/op
# Warmup Iteration   3: 52.079 ns/op
# Warmup Iteration   4: 52.317 ns/op
# Warmup Iteration   5: 54.681 ns/op
Iteration   1: 53.327 ns/op
Iteration   2: 51.485 ns/op
Iteration   3: 51.409 ns/op
Iteration   4: 53.612 ns/op
Iteration   5: 53.932 ns/op

# Run progress: 76.19% complete, ETA 00:08:21
# Fork: 2 of 3
# Warmup Iteration   1: 52.705 ns/op
# Warmup Iteration   2: 54.498 ns/op
# Warmup Iteration   3: 52.339 ns/op
# Warmup Iteration   4: 51.621 ns/op
# Warmup Iteration   5: 52.560 ns/op
Iteration   1: 52.487 ns/op
Iteration   2: 54.746 ns/op
Iteration   3: 54.369 ns/op
Iteration   4: 54.656 ns/op
Iteration   5: 53.897 ns/op

# Run progress: 80.95% complete, ETA 00:06:40
# Fork: 3 of 3
# Warmup Iteration   1: 56.478 ns/op
# Warmup Iteration   2: 55.671 ns/op
# Warmup Iteration   3: 54.573 ns/op
# Warmup Iteration   4: 52.628 ns/op
# Warmup Iteration   5: 52.077 ns/op
Iteration   1: 51.403 ns/op
Iteration   2: 52.829 ns/op
Iteration   3: 51.507 ns/op
Iteration   4: 53.187 ns/op
Iteration   5: 53.437 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.IdentityHashCodeBenchmark.id_hash_code_5":
  53.086 ±(99.9%) 1.273 ns/op [Average]
  (min, avg, max) = (51.403, 53.086, 54.746), stdev = 1.190
  CI (99.9%): [51.813, 54.358] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.IdentityHashCodeBenchmark.id_hash_code_default

# Run progress: 85.71% complete, ETA 00:05:00
# Fork: 1 of 3
# Warmup Iteration   1: 56.052 ns/op
# Warmup Iteration   2: 54.244 ns/op
# Warmup Iteration   3: 52.231 ns/op
# Warmup Iteration   4: 53.511 ns/op
# Warmup Iteration   5: 51.345 ns/op
Iteration   1: 51.480 ns/op
Iteration   2: 52.330 ns/op
Iteration   3: 53.475 ns/op
Iteration   4: 53.803 ns/op
Iteration   5: 54.699 ns/op

# Run progress: 90.48% complete, ETA 00:03:20
# Fork: 2 of 3
# Warmup Iteration   1: 55.704 ns/op
# Warmup Iteration   2: 55.931 ns/op
# Warmup Iteration   3: 54.754 ns/op
# Warmup Iteration   4: 54.606 ns/op
# Warmup Iteration   5: 52.407 ns/op
Iteration   1: 54.808 ns/op
Iteration   2: 54.747 ns/op
Iteration   3: 54.747 ns/op
Iteration   4: 54.686 ns/op
Iteration   5: 54.568 ns/op

# Run progress: 95.24% complete, ETA 00:01:40
# Fork: 3 of 3
# Warmup Iteration   1: 52.862 ns/op
# Warmup Iteration   2: 52.360 ns/op
# Warmup Iteration   3: 52.284 ns/op
# Warmup Iteration   4: 52.895 ns/op
# Warmup Iteration   5: 54.854 ns/op
Iteration   1: 54.760 ns/op
Iteration   2: 51.844 ns/op
Iteration   3: 51.323 ns/op
Iteration   4: 53.478 ns/op
Iteration   5: 52.227 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.IdentityHashCodeBenchmark.id_hash_code_default":
  53.532 ±(99.9%) 1.429 ns/op [Average]
  (min, avg, max) = (51.323, 53.532, 54.808), stdev = 1.337
  CI (99.9%): [52.102, 54.961] (assumes normal distribution)


# Run complete. Total time: 00:35:04

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                       Mode  Cnt   Score   Error  Units
IdentityHashCodeBenchmark.id_hash_code_0        avgt   15  59.501 ± 1.723  ns/op
IdentityHashCodeBenchmark.id_hash_code_1        avgt   15  53.822 ± 2.611  ns/op
IdentityHashCodeBenchmark.id_hash_code_2        avgt   15  52.034 ± 1.251  ns/op
IdentityHashCodeBenchmark.id_hash_code_3        avgt   15  52.175 ± 0.869  ns/op
IdentityHashCodeBenchmark.id_hash_code_4        avgt   15  51.999 ± 1.418  ns/op
IdentityHashCodeBenchmark.id_hash_code_5        avgt   15  53.086 ± 1.273  ns/op
IdentityHashCodeBenchmark.id_hash_code_default  avgt   15  53.532 ± 1.429  ns/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_c1_c2_jit/IdentityHashCodeBenchmark.json
Running java  -jar benchmarks/target/benchmarks.jar .*VectorizationPatternsSingleIntArrayBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_c1_c2_jit/VectorizationPatternsSingleIntArrayBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsSingleIntArrayBenchmark.add_const_to_each_array_element
# Parameters: (size = 262144)

# Run progress: 0.00% complete, ETA 01:00:00
# Fork: 1 of 3
# Warmup Iteration   1: 27.997 us/op
# Warmup Iteration   2: 28.067 us/op
# Warmup Iteration   3: 28.299 us/op
# Warmup Iteration   4: 28.442 us/op
# Warmup Iteration   5: 28.386 us/op
Iteration   1: 25.971 us/op
Iteration   2: 26.209 us/op
Iteration   3: 26.287 us/op
Iteration   4: 28.837 us/op
Iteration   5: 28.689 us/op

# Run progress: 2.78% complete, ETA 00:58:28
# Fork: 2 of 3
# Warmup Iteration   1: 26.028 us/op
# Warmup Iteration   2: 26.230 us/op
# Warmup Iteration   3: 26.353 us/op
# Warmup Iteration   4: 26.367 us/op
# Warmup Iteration   5: 26.464 us/op
Iteration   1: 26.537 us/op
Iteration   2: 26.550 us/op
Iteration   3: 28.977 us/op
Iteration   4: 28.782 us/op
Iteration   5: 28.603 us/op

# Run progress: 5.56% complete, ETA 00:56:48
# Fork: 3 of 3
# Warmup Iteration   1: 27.839 us/op
# Warmup Iteration   2: 27.904 us/op
# Warmup Iteration   3: 28.031 us/op
# Warmup Iteration   4: 27.987 us/op
# Warmup Iteration   5: 27.958 us/op
Iteration   1: 27.958 us/op
Iteration   2: 25.926 us/op
Iteration   3: 26.150 us/op
Iteration   4: 26.249 us/op
Iteration   5: 26.347 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsSingleIntArrayBenchmark.add_const_to_each_array_element":
  27.205 ±(99.9%) 1.329 us/op [Average]
  (min, avg, max) = (25.926, 27.205, 28.977), stdev = 1.243
  CI (99.9%): [25.876, 28.534] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsSingleIntArrayBenchmark.increment_arrays_elements_backward_iterator
# Parameters: (size = 262144)

# Run progress: 8.33% complete, ETA 00:55:07
# Fork: 1 of 3
# Warmup Iteration   1: 26.484 us/op
# Warmup Iteration   2: 26.470 us/op
# Warmup Iteration   3: 26.641 us/op
# Warmup Iteration   4: 26.617 us/op
# Warmup Iteration   5: 26.616 us/op
Iteration   1: 26.642 us/op
Iteration   2: 26.673 us/op
Iteration   3: 26.723 us/op
Iteration   4: 26.834 us/op
Iteration   5: 26.803 us/op

# Run progress: 11.11% complete, ETA 00:53:27
# Fork: 2 of 3
# Warmup Iteration   1: 26.487 us/op
# Warmup Iteration   2: 28.544 us/op
# Warmup Iteration   3: 28.471 us/op
# Warmup Iteration   4: 28.294 us/op
# Warmup Iteration   5: 28.280 us/op
Iteration   1: 28.157 us/op
Iteration   2: 28.149 us/op
Iteration   3: 28.169 us/op
Iteration   4: 28.152 us/op
Iteration   5: 28.146 us/op

# Run progress: 13.89% complete, ETA 00:51:47
# Fork: 3 of 3
# Warmup Iteration   1: 25.902 us/op
# Warmup Iteration   2: 26.157 us/op
# Warmup Iteration   3: 26.373 us/op
# Warmup Iteration   4: 26.425 us/op
# Warmup Iteration   5: 26.489 us/op
Iteration   1: 26.492 us/op
Iteration   2: 26.512 us/op
Iteration   3: 26.521 us/op
Iteration   4: 26.550 us/op
Iteration   5: 26.591 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsSingleIntArrayBenchmark.increment_arrays_elements_backward_iterator":
  27.141 ±(99.9%) 0.800 us/op [Average]
  (min, avg, max) = (26.492, 27.141, 28.169), stdev = 0.748
  CI (99.9%): [26.341, 27.941] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsSingleIntArrayBenchmark.mod_each_array_element_by_const
# Parameters: (size = 262144)

# Run progress: 16.67% complete, ETA 00:50:07
# Fork: 1 of 3
# Warmup Iteration   1: 247.822 us/op
# Warmup Iteration   2: 244.531 us/op
# Warmup Iteration   3: 240.711 us/op
# Warmup Iteration   4: 238.331 us/op
# Warmup Iteration   5: 238.288 us/op
Iteration   1: 238.599 us/op
Iteration   2: 238.682 us/op
Iteration   3: 238.214 us/op
Iteration   4: 237.380 us/op
Iteration   5: 235.989 us/op

# Run progress: 19.44% complete, ETA 00:48:26
# Fork: 2 of 3
# Warmup Iteration   1: 240.893 us/op
# Warmup Iteration   2: 239.424 us/op
# Warmup Iteration   3: 236.558 us/op
# Warmup Iteration   4: 235.269 us/op
# Warmup Iteration   5: 235.389 us/op
Iteration   1: 235.049 us/op
Iteration   2: 234.622 us/op
Iteration   3: 234.992 us/op
Iteration   4: 234.507 us/op
Iteration   5: 234.429 us/op

# Run progress: 22.22% complete, ETA 00:46:46
# Fork: 3 of 3
# Warmup Iteration   1: 257.350 us/op
# Warmup Iteration   2: 254.083 us/op
# Warmup Iteration   3: 241.576 us/op
# Warmup Iteration   4: 233.603 us/op
# Warmup Iteration   5: 234.011 us/op
Iteration   1: 234.606 us/op
Iteration   2: 234.681 us/op
Iteration   3: 234.352 us/op
Iteration   4: 234.149 us/op
Iteration   5: 235.029 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsSingleIntArrayBenchmark.mod_each_array_element_by_const":
  235.685 ±(99.9%) 1.774 us/op [Average]
  (min, avg, max) = (234.149, 235.685, 238.682), stdev = 1.659
  CI (99.9%): [233.911, 237.459] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsSingleIntArrayBenchmark.multiply_each_array_element_by_const
# Parameters: (size = 262144)

# Run progress: 25.00% complete, ETA 00:45:06
# Fork: 1 of 3
# Warmup Iteration   1: 30.439 us/op
# Warmup Iteration   2: 30.505 us/op
# Warmup Iteration   3: 30.668 us/op
# Warmup Iteration   4: 30.679 us/op
# Warmup Iteration   5: 30.651 us/op
Iteration   1: 30.656 us/op
Iteration   2: 30.698 us/op
Iteration   3: 30.699 us/op
Iteration   4: 30.701 us/op
Iteration   5: 30.693 us/op

# Run progress: 27.78% complete, ETA 00:43:26
# Fork: 2 of 3
# Warmup Iteration   1: 27.931 us/op
# Warmup Iteration   2: 28.426 us/op
# Warmup Iteration   3: 28.774 us/op
# Warmup Iteration   4: 28.786 us/op
# Warmup Iteration   5: 28.826 us/op
Iteration   1: 31.343 us/op
Iteration   2: 31.044 us/op
Iteration   3: 30.965 us/op
Iteration   4: 30.954 us/op
Iteration   5: 30.854 us/op

# Run progress: 30.56% complete, ETA 00:41:46
# Fork: 3 of 3
# Warmup Iteration   1: 28.119 us/op
# Warmup Iteration   2: 30.925 us/op
# Warmup Iteration   3: 31.003 us/op
# Warmup Iteration   4: 30.869 us/op
# Warmup Iteration   5: 30.850 us/op
Iteration   1: 30.841 us/op
Iteration   2: 30.831 us/op
Iteration   3: 30.757 us/op
Iteration   4: 30.772 us/op
Iteration   5: 30.746 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsSingleIntArrayBenchmark.multiply_each_array_element_by_const":
  30.837 ±(99.9%) 0.194 us/op [Average]
  (min, avg, max) = (30.656, 30.837, 31.343), stdev = 0.181
  CI (99.9%): [30.643, 31.030] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsSingleIntArrayBenchmark.saves_induction_variable_to_each_array_element
# Parameters: (size = 262144)

# Run progress: 33.33% complete, ETA 00:40:05
# Fork: 1 of 3
# Warmup Iteration   1: 85.880 us/op
# Warmup Iteration   2: 79.828 us/op
# Warmup Iteration   3: 79.673 us/op
# Warmup Iteration   4: 79.650 us/op
# Warmup Iteration   5: 79.647 us/op
Iteration   1: 85.428 us/op
Iteration   2: 85.215 us/op
Iteration   3: 84.883 us/op
Iteration   4: 84.588 us/op
Iteration   5: 84.662 us/op

# Run progress: 36.11% complete, ETA 00:38:25
# Fork: 2 of 3
# Warmup Iteration   1: 80.646 us/op
# Warmup Iteration   2: 81.097 us/op
# Warmup Iteration   3: 80.572 us/op
# Warmup Iteration   4: 80.408 us/op
# Warmup Iteration   5: 80.638 us/op
Iteration   1: 80.718 us/op
Iteration   2: 80.517 us/op
Iteration   3: 80.632 us/op
Iteration   4: 80.669 us/op
Iteration   5: 80.562 us/op

# Run progress: 38.89% complete, ETA 00:36:45
# Fork: 3 of 3
# Warmup Iteration   1: 81.152 us/op
# Warmup Iteration   2: 81.148 us/op
# Warmup Iteration   3: 80.630 us/op
# Warmup Iteration   4: 80.879 us/op
# Warmup Iteration   5: 80.979 us/op
Iteration   1: 81.051 us/op
Iteration   2: 80.944 us/op
Iteration   3: 80.905 us/op
Iteration   4: 80.824 us/op
Iteration   5: 80.895 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsSingleIntArrayBenchmark.saves_induction_variable_to_each_array_element":
  82.166 ±(99.9%) 2.197 us/op [Average]
  (min, avg, max) = (80.517, 82.166, 85.428), stdev = 2.055
  CI (99.9%): [79.969, 84.364] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsSingleIntArrayBenchmark.shl_each_array_element_by_const
# Parameters: (size = 262144)

# Run progress: 41.67% complete, ETA 00:35:04
# Fork: 1 of 3
# Warmup Iteration   1: 24.565 us/op
# Warmup Iteration   2: 24.540 us/op
# Warmup Iteration   3: 23.447 us/op
# Warmup Iteration   4: 23.513 us/op
# Warmup Iteration   5: 23.534 us/op
Iteration   1: 23.555 us/op
Iteration   2: 23.529 us/op
Iteration   3: 23.463 us/op
Iteration   4: 23.482 us/op
Iteration   5: 23.492 us/op

# Run progress: 44.44% complete, ETA 00:33:24
# Fork: 2 of 3
# Warmup Iteration   1: 22.814 us/op
# Warmup Iteration   2: 25.400 us/op
# Warmup Iteration   3: 24.270 us/op
# Warmup Iteration   4: 24.292 us/op
# Warmup Iteration   5: 24.220 us/op
Iteration   1: 24.228 us/op
Iteration   2: 24.183 us/op
Iteration   3: 24.157 us/op
Iteration   4: 24.193 us/op
Iteration   5: 24.236 us/op

# Run progress: 47.22% complete, ETA 00:31:44
# Fork: 3 of 3
# Warmup Iteration   1: 24.477 us/op
# Warmup Iteration   2: 24.492 us/op
# Warmup Iteration   3: 23.432 us/op
# Warmup Iteration   4: 23.450 us/op
# Warmup Iteration   5: 23.515 us/op
Iteration   1: 23.443 us/op
Iteration   2: 23.412 us/op
Iteration   3: 23.452 us/op
Iteration   4: 23.472 us/op
Iteration   5: 23.463 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsSingleIntArrayBenchmark.shl_each_array_element_by_const":
  23.717 ±(99.9%) 0.379 us/op [Average]
  (min, avg, max) = (23.412, 23.717, 24.236), stdev = 0.355
  CI (99.9%): [23.338, 24.096] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsSingleIntArrayBenchmark.sum_of_all_array_elements
# Parameters: (size = 262144)

# Run progress: 50.00% complete, ETA 00:30:04
# Fork: 1 of 3
# Warmup Iteration   1: 69.769 us/op
# Warmup Iteration   2: 70.152 us/op
# Warmup Iteration   3: 69.456 us/op
# Warmup Iteration   4: 69.537 us/op
# Warmup Iteration   5: 69.726 us/op
Iteration   1: 69.488 us/op
Iteration   2: 69.513 us/op
Iteration   3: 69.124 us/op
Iteration   4: 68.870 us/op
Iteration   5: 69.034 us/op

# Run progress: 52.78% complete, ETA 00:28:23
# Fork: 2 of 3
# Warmup Iteration   1: 67.018 us/op
# Warmup Iteration   2: 67.104 us/op
# Warmup Iteration   3: 67.040 us/op
# Warmup Iteration   4: 67.080 us/op
# Warmup Iteration   5: 67.076 us/op
Iteration   1: 67.071 us/op
Iteration   2: 66.950 us/op
Iteration   3: 67.115 us/op
Iteration   4: 67.013 us/op
Iteration   5: 67.074 us/op

# Run progress: 55.56% complete, ETA 00:26:43
# Fork: 3 of 3
# Warmup Iteration   1: 67.222 us/op
# Warmup Iteration   2: 67.153 us/op
# Warmup Iteration   3: 67.012 us/op
# Warmup Iteration   4: 67.112 us/op
# Warmup Iteration   5: 67.082 us/op
Iteration   1: 67.071 us/op
Iteration   2: 67.062 us/op
Iteration   3: 67.107 us/op
Iteration   4: 67.082 us/op
Iteration   5: 67.102 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsSingleIntArrayBenchmark.sum_of_all_array_elements":
  67.779 ±(99.9%) 1.129 us/op [Average]
  (min, avg, max) = (66.950, 67.779, 69.513), stdev = 1.056
  CI (99.9%): [66.649, 68.908] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsSingleIntArrayBenchmark.sum_of_all_array_elements_by_adding_a_const
# Parameters: (size = 262144)

# Run progress: 58.33% complete, ETA 00:25:03
# Fork: 1 of 3
# Warmup Iteration   1: 78.719 us/op
# Warmup Iteration   2: 75.451 us/op
# Warmup Iteration   3: 74.958 us/op
# Warmup Iteration   4: 75.117 us/op
# Warmup Iteration   5: 75.472 us/op
Iteration   1: 75.464 us/op
Iteration   2: 75.355 us/op
Iteration   3: 77.413 us/op
Iteration   4: 77.682 us/op
Iteration   5: 77.389 us/op

# Run progress: 61.11% complete, ETA 00:23:23
# Fork: 2 of 3
# Warmup Iteration   1: 77.551 us/op
# Warmup Iteration   2: 77.518 us/op
# Warmup Iteration   3: 77.022 us/op
# Warmup Iteration   4: 77.088 us/op
# Warmup Iteration   5: 76.995 us/op
Iteration   1: 76.997 us/op
Iteration   2: 77.037 us/op
Iteration   3: 76.992 us/op
Iteration   4: 77.057 us/op
Iteration   5: 76.964 us/op

# Run progress: 63.89% complete, ETA 00:21:43
# Fork: 3 of 3
# Warmup Iteration   1: 77.850 us/op
# Warmup Iteration   2: 77.672 us/op
# Warmup Iteration   3: 75.476 us/op
# Warmup Iteration   4: 75.441 us/op
# Warmup Iteration   5: 75.422 us/op
Iteration   1: 75.203 us/op
Iteration   2: 74.989 us/op
Iteration   3: 75.265 us/op
Iteration   4: 75.457 us/op
Iteration   5: 75.470 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsSingleIntArrayBenchmark.sum_of_all_array_elements_by_adding_a_const":
  76.316 ±(99.9%) 1.063 us/op [Average]
  (min, avg, max) = (74.989, 76.316, 77.682), stdev = 0.994
  CI (99.9%): [75.253, 77.379] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsSingleIntArrayBenchmark.sum_of_all_array_elements_by_shifting_and_masking
# Parameters: (size = 262144)

# Run progress: 66.67% complete, ETA 00:20:02
# Fork: 1 of 3
# Warmup Iteration   1: 69.491 us/op
# Warmup Iteration   2: 69.885 us/op
# Warmup Iteration   3: 69.905 us/op
# Warmup Iteration   4: 69.656 us/op
# Warmup Iteration   5: 69.696 us/op
Iteration   1: 69.687 us/op
Iteration   2: 69.602 us/op
Iteration   3: 69.424 us/op
Iteration   4: 69.465 us/op
Iteration   5: 69.610 us/op

# Run progress: 69.44% complete, ETA 00:18:22
# Fork: 2 of 3
# Warmup Iteration   1: 69.203 us/op
# Warmup Iteration   2: 69.459 us/op
# Warmup Iteration   3: 69.903 us/op
# Warmup Iteration   4: 69.645 us/op
# Warmup Iteration   5: 69.482 us/op
Iteration   1: 69.545 us/op
Iteration   2: 69.513 us/op
Iteration   3: 69.451 us/op
Iteration   4: 69.635 us/op
Iteration   5: 69.386 us/op

# Run progress: 72.22% complete, ETA 00:16:42
# Fork: 3 of 3
# Warmup Iteration   1: 65.940 us/op
# Warmup Iteration   2: 65.804 us/op
# Warmup Iteration   3: 65.552 us/op
# Warmup Iteration   4: 65.760 us/op
# Warmup Iteration   5: 65.672 us/op
Iteration   1: 65.744 us/op
Iteration   2: 65.807 us/op
Iteration   3: 65.825 us/op
Iteration   4: 65.801 us/op
Iteration   5: 65.808 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsSingleIntArrayBenchmark.sum_of_all_array_elements_by_shifting_and_masking":
  68.287 ±(99.9%) 1.950 us/op [Average]
  (min, avg, max) = (65.744, 68.287, 69.687), stdev = 1.824
  CI (99.9%): [66.337, 70.237] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsSingleIntArrayBenchmark.sum_of_all_array_elements_long_stride
# Parameters: (size = 262144)

# Run progress: 75.00% complete, ETA 00:15:02
# Fork: 1 of 3
# Warmup Iteration   1: 148.407 us/op
# Warmup Iteration   2: 140.660 us/op
# Warmup Iteration   3: 147.351 us/op
# Warmup Iteration   4: 147.387 us/op
# Warmup Iteration   5: 147.479 us/op
Iteration   1: 147.474 us/op
Iteration   2: 147.322 us/op
Iteration   3: 147.352 us/op
Iteration   4: 147.307 us/op
Iteration   5: 147.300 us/op

# Run progress: 77.78% complete, ETA 00:13:21
# Fork: 2 of 3
# Warmup Iteration   1: 160.186 us/op
# Warmup Iteration   2: 152.829 us/op
# Warmup Iteration   3: 158.282 us/op
# Warmup Iteration   4: 158.177 us/op
# Warmup Iteration   5: 145.415 us/op
Iteration   1: 146.390 us/op
Iteration   2: 146.781 us/op
Iteration   3: 160.117 us/op
Iteration   4: 159.355 us/op
Iteration   5: 158.179 us/op

# Run progress: 80.56% complete, ETA 00:11:41
# Fork: 3 of 3
# Warmup Iteration   1: 144.480 us/op
# Warmup Iteration   2: 150.990 us/op
# Warmup Iteration   3: 157.637 us/op
# Warmup Iteration   4: 157.219 us/op
# Warmup Iteration   5: 156.960 us/op
Iteration   1: 157.041 us/op
Iteration   2: 148.671 us/op
Iteration   3: 149.213 us/op
Iteration   4: 149.552 us/op
Iteration   5: 150.072 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsSingleIntArrayBenchmark.sum_of_all_array_elements_long_stride":
  150.808 ±(99.9%) 5.403 us/op [Average]
  (min, avg, max) = (146.390, 150.808, 160.117), stdev = 5.054
  CI (99.9%): [145.405, 156.212] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsSingleIntArrayBenchmark.sum_of_all_array_elements_matching_a_predicate
# Parameters: (size = 262144)

# Run progress: 83.33% complete, ETA 00:10:01
# Fork: 1 of 3
# Warmup Iteration   1: 75.693 us/op
# Warmup Iteration   2: 82.800 us/op
# Warmup Iteration   3: 99.397 us/op
# Warmup Iteration   4: 99.502 us/op
# Warmup Iteration   5: 99.766 us/op
Iteration   1: 99.188 us/op
Iteration   2: 99.406 us/op
Iteration   3: 99.437 us/op
Iteration   4: 99.493 us/op
Iteration   5: 92.194 us/op

# Run progress: 86.11% complete, ETA 00:08:21
# Fork: 2 of 3
# Warmup Iteration   1: 71.369 us/op
# Warmup Iteration   2: 82.728 us/op
# Warmup Iteration   3: 100.823 us/op
# Warmup Iteration   4: 100.426 us/op
# Warmup Iteration   5: 99.801 us/op
Iteration   1: 100.440 us/op
Iteration   2: 99.907 us/op
Iteration   3: 99.957 us/op
Iteration   4: 100.626 us/op
Iteration   5: 99.712 us/op

# Run progress: 88.89% complete, ETA 00:06:40
# Fork: 3 of 3
# Warmup Iteration   1: 70.449 us/op
# Warmup Iteration   2: 78.134 us/op
# Warmup Iteration   3: 97.188 us/op
# Warmup Iteration   4: 97.079 us/op
# Warmup Iteration   5: 97.936 us/op
Iteration   1: 97.348 us/op
Iteration   2: 97.368 us/op
Iteration   3: 97.423 us/op
Iteration   4: 97.969 us/op
Iteration   5: 97.510 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsSingleIntArrayBenchmark.sum_of_all_array_elements_matching_a_predicate":
  98.532 ±(99.9%) 2.246 us/op [Average]
  (min, avg, max) = (92.194, 98.532, 100.626), stdev = 2.101
  CI (99.9%): [96.286, 100.778] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsSingleIntArrayBenchmark.sum_of_all_even_array_elements
# Parameters: (size = 262144)

# Run progress: 91.67% complete, ETA 00:05:00
# Fork: 1 of 3
# Warmup Iteration   1: 139.105 us/op
# Warmup Iteration   2: 140.020 us/op
# Warmup Iteration   3: 138.898 us/op
# Warmup Iteration   4: 138.880 us/op
# Warmup Iteration   5: 138.351 us/op
Iteration   1: 138.547 us/op
Iteration   2: 138.658 us/op
Iteration   3: 139.041 us/op
Iteration   4: 138.688 us/op
Iteration   5: 138.395 us/op

# Run progress: 94.44% complete, ETA 00:03:20
# Fork: 2 of 3
# Warmup Iteration   1: 139.232 us/op
# Warmup Iteration   2: 139.373 us/op
# Warmup Iteration   3: 138.487 us/op
# Warmup Iteration   4: 138.323 us/op
# Warmup Iteration   5: 138.581 us/op
Iteration   1: 138.133 us/op
Iteration   2: 138.307 us/op
Iteration   3: 138.623 us/op
Iteration   4: 138.707 us/op
Iteration   5: 138.927 us/op

# Run progress: 97.22% complete, ETA 00:01:40
# Fork: 3 of 3
# Warmup Iteration   1: 134.335 us/op
# Warmup Iteration   2: 134.332 us/op
# Warmup Iteration   3: 134.132 us/op
# Warmup Iteration   4: 134.106 us/op
# Warmup Iteration   5: 134.224 us/op
Iteration   1: 134.194 us/op
Iteration   2: 134.138 us/op
Iteration   3: 134.172 us/op
Iteration   4: 134.129 us/op
Iteration   5: 134.165 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsSingleIntArrayBenchmark.sum_of_all_even_array_elements":
  137.122 ±(99.9%) 2.330 us/op [Average]
  (min, avg, max) = (134.129, 137.122, 139.041), stdev = 2.179
  CI (99.9%): [134.792, 139.451] (assumes normal distribution)


# Run complete. Total time: 01:00:08

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                                                                       (size)  Mode  Cnt    Score   Error  Units
VectorizationPatternsSingleIntArrayBenchmark.add_const_to_each_array_element                    262144  avgt   15   27.205 ± 1.329  us/op
VectorizationPatternsSingleIntArrayBenchmark.increment_arrays_elements_backward_iterator        262144  avgt   15   27.141 ± 0.800  us/op
VectorizationPatternsSingleIntArrayBenchmark.mod_each_array_element_by_const                    262144  avgt   15  235.685 ± 1.774  us/op
VectorizationPatternsSingleIntArrayBenchmark.multiply_each_array_element_by_const               262144  avgt   15   30.837 ± 0.194  us/op
VectorizationPatternsSingleIntArrayBenchmark.saves_induction_variable_to_each_array_element     262144  avgt   15   82.166 ± 2.197  us/op
VectorizationPatternsSingleIntArrayBenchmark.shl_each_array_element_by_const                    262144  avgt   15   23.717 ± 0.379  us/op
VectorizationPatternsSingleIntArrayBenchmark.sum_of_all_array_elements                          262144  avgt   15   67.779 ± 1.129  us/op
VectorizationPatternsSingleIntArrayBenchmark.sum_of_all_array_elements_by_adding_a_const        262144  avgt   15   76.316 ± 1.063  us/op
VectorizationPatternsSingleIntArrayBenchmark.sum_of_all_array_elements_by_shifting_and_masking  262144  avgt   15   68.287 ± 1.950  us/op
VectorizationPatternsSingleIntArrayBenchmark.sum_of_all_array_elements_long_stride              262144  avgt   15  150.808 ± 5.403  us/op
VectorizationPatternsSingleIntArrayBenchmark.sum_of_all_array_elements_matching_a_predicate     262144  avgt   15   98.532 ± 2.246  us/op
VectorizationPatternsSingleIntArrayBenchmark.sum_of_all_even_array_elements                     262144  avgt   15  137.122 ± 2.330  us/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_c1_c2_jit/VectorizationPatternsSingleIntArrayBenchmark.json
Running java  -jar benchmarks/target/benchmarks.jar .*VectorizationPatternsMultipleFloatArraysBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_c1_c2_jit/VectorizationPatternsMultipleFloatArraysBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleFloatArraysBenchmark.add_2_arrays_elements
# Parameters: (size = 262144)

# Run progress: 0.00% complete, ETA 01:15:00
# Fork: 1 of 3
# Warmup Iteration   1: 59.391 us/op
# Warmup Iteration   2: 56.959 us/op
# Warmup Iteration   3: 56.879 us/op
# Warmup Iteration   4: 57.014 us/op
# Warmup Iteration   5: 57.190 us/op
Iteration   1: 57.182 us/op
Iteration   2: 57.251 us/op
Iteration   3: 57.265 us/op
Iteration   4: 57.332 us/op
Iteration   5: 57.343 us/op

# Run progress: 2.22% complete, ETA 01:13:32
# Fork: 2 of 3
# Warmup Iteration   1: 57.754 us/op
# Warmup Iteration   2: 54.601 us/op
# Warmup Iteration   3: 55.095 us/op
# Warmup Iteration   4: 54.655 us/op
# Warmup Iteration   5: 54.812 us/op
Iteration   1: 54.911 us/op
Iteration   2: 58.817 us/op
Iteration   3: 58.333 us/op
Iteration   4: 58.065 us/op
Iteration   5: 57.945 us/op

# Run progress: 4.44% complete, ETA 01:11:50
# Fork: 3 of 3
# Warmup Iteration   1: 60.929 us/op
# Warmup Iteration   2: 57.808 us/op
# Warmup Iteration   3: 57.792 us/op
# Warmup Iteration   4: 57.884 us/op
# Warmup Iteration   5: 57.753 us/op
Iteration   1: 57.703 us/op
Iteration   2: 57.812 us/op
Iteration   3: 57.892 us/op
Iteration   4: 57.738 us/op
Iteration   5: 57.737 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleFloatArraysBenchmark.add_2_arrays_elements":
  57.555 ±(99.9%) 0.916 us/op [Average]
  (min, avg, max) = (54.911, 57.555, 58.817), stdev = 0.857
  CI (99.9%): [56.639, 58.471] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleFloatArraysBenchmark.add_2_arrays_elements_inc_index_access
# Parameters: (size = 262144)

# Run progress: 6.67% complete, ETA 01:10:10
# Fork: 1 of 3
# Warmup Iteration   1: 112.495 us/op
# Warmup Iteration   2: 122.830 us/op
# Warmup Iteration   3: 121.075 us/op
# Warmup Iteration   4: 120.584 us/op
# Warmup Iteration   5: 120.085 us/op
Iteration   1: 119.782 us/op
Iteration   2: 119.698 us/op
Iteration   3: 119.669 us/op
Iteration   4: 119.446 us/op
Iteration   5: 119.812 us/op

# Run progress: 8.89% complete, ETA 01:08:30
# Fork: 2 of 3
# Warmup Iteration   1: 118.623 us/op
# Warmup Iteration   2: 119.710 us/op
# Warmup Iteration   3: 118.288 us/op
# Warmup Iteration   4: 118.469 us/op
# Warmup Iteration   5: 118.010 us/op
Iteration   1: 117.724 us/op
Iteration   2: 118.114 us/op
Iteration   3: 118.027 us/op
Iteration   4: 117.645 us/op
Iteration   5: 117.854 us/op

# Run progress: 11.11% complete, ETA 01:06:50
# Fork: 3 of 3
# Warmup Iteration   1: 112.742 us/op
# Warmup Iteration   2: 119.841 us/op
# Warmup Iteration   3: 118.549 us/op
# Warmup Iteration   4: 118.637 us/op
# Warmup Iteration   5: 118.171 us/op
Iteration   1: 117.996 us/op
Iteration   2: 117.919 us/op
Iteration   3: 117.738 us/op
Iteration   4: 117.862 us/op
Iteration   5: 118.097 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleFloatArraysBenchmark.add_2_arrays_elements_inc_index_access":
  118.492 ±(99.9%) 0.944 us/op [Average]
  (min, avg, max) = (117.645, 118.492, 119.812), stdev = 0.883
  CI (99.9%): [117.548, 119.437] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleFloatArraysBenchmark.add_2_arrays_elements_modulo_index_access
# Parameters: (size = 262144)

# Run progress: 13.33% complete, ETA 01:05:09
# Fork: 1 of 3
# Warmup Iteration   1: 181.421 us/op
# Warmup Iteration   2: 180.969 us/op
# Warmup Iteration   3: 180.968 us/op
# Warmup Iteration   4: 178.467 us/op
# Warmup Iteration   5: 177.890 us/op
Iteration   1: 178.366 us/op
Iteration   2: 178.806 us/op
Iteration   3: 187.825 us/op
Iteration   4: 187.327 us/op
Iteration   5: 187.145 us/op

# Run progress: 15.56% complete, ETA 01:03:29
# Fork: 2 of 3
# Warmup Iteration   1: 180.726 us/op
# Warmup Iteration   2: 180.242 us/op
# Warmup Iteration   3: 180.453 us/op
# Warmup Iteration   4: 177.943 us/op
# Warmup Iteration   5: 177.877 us/op
Iteration   1: 177.832 us/op
Iteration   2: 177.893 us/op
Iteration   3: 178.118 us/op
Iteration   4: 178.046 us/op
Iteration   5: 178.038 us/op

# Run progress: 17.78% complete, ETA 01:01:49
# Fork: 3 of 3
# Warmup Iteration   1: 176.296 us/op
# Warmup Iteration   2: 176.007 us/op
# Warmup Iteration   3: 176.216 us/op
# Warmup Iteration   4: 173.050 us/op
# Warmup Iteration   5: 187.872 us/op
Iteration   1: 186.958 us/op
Iteration   2: 187.201 us/op
Iteration   3: 172.203 us/op
Iteration   4: 172.784 us/op
Iteration   5: 172.865 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleFloatArraysBenchmark.add_2_arrays_elements_modulo_index_access":
  180.094 ±(99.9%) 6.090 us/op [Average]
  (min, avg, max) = (172.203, 180.094, 187.825), stdev = 5.697
  CI (99.9%): [174.004, 186.184] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleFloatArraysBenchmark.divide_2_arrays_elements
# Parameters: (size = 262144)

# Run progress: 20.00% complete, ETA 01:00:09
# Fork: 1 of 3
# Warmup Iteration   1: 57.465 us/op
# Warmup Iteration   2: 60.192 us/op
# Warmup Iteration   3: 60.222 us/op
# Warmup Iteration   4: 60.292 us/op
# Warmup Iteration   5: 60.342 us/op
Iteration   1: 60.542 us/op
Iteration   2: 60.540 us/op
Iteration   3: 60.552 us/op
Iteration   4: 60.508 us/op
Iteration   5: 60.520 us/op

# Run progress: 22.22% complete, ETA 00:58:28
# Fork: 2 of 3
# Warmup Iteration   1: 58.646 us/op
# Warmup Iteration   2: 58.604 us/op
# Warmup Iteration   3: 58.572 us/op
# Warmup Iteration   4: 58.525 us/op
# Warmup Iteration   5: 58.621 us/op
Iteration   1: 58.525 us/op
Iteration   2: 58.466 us/op
Iteration   3: 58.495 us/op
Iteration   4: 58.522 us/op
Iteration   5: 58.624 us/op

# Run progress: 24.44% complete, ETA 00:56:48
# Fork: 3 of 3
# Warmup Iteration   1: 60.843 us/op
# Warmup Iteration   2: 54.355 us/op
# Warmup Iteration   3: 59.175 us/op
# Warmup Iteration   4: 58.855 us/op
# Warmup Iteration   5: 58.696 us/op
Iteration   1: 58.688 us/op
Iteration   2: 58.714 us/op
Iteration   3: 58.584 us/op
Iteration   4: 58.561 us/op
Iteration   5: 58.570 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleFloatArraysBenchmark.divide_2_arrays_elements":
  59.227 ±(99.9%) 1.024 us/op [Average]
  (min, avg, max) = (58.466, 59.227, 60.552), stdev = 0.957
  CI (99.9%): [58.204, 60.251] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleFloatArraysBenchmark.extract_2_arrays_elements
# Parameters: (size = 262144)

# Run progress: 26.67% complete, ETA 00:55:08
# Fork: 1 of 3
# Warmup Iteration   1: 60.692 us/op
# Warmup Iteration   2: 57.934 us/op
# Warmup Iteration   3: 57.780 us/op
# Warmup Iteration   4: 57.818 us/op
# Warmup Iteration   5: 57.762 us/op
Iteration   1: 57.793 us/op
Iteration   2: 57.795 us/op
Iteration   3: 57.769 us/op
Iteration   4: 57.892 us/op
Iteration   5: 57.939 us/op

# Run progress: 28.89% complete, ETA 00:53:27
# Fork: 2 of 3
# Warmup Iteration   1: 61.043 us/op
# Warmup Iteration   2: 60.900 us/op
# Warmup Iteration   3: 60.683 us/op
# Warmup Iteration   4: 60.580 us/op
# Warmup Iteration   5: 60.552 us/op
Iteration   1: 60.664 us/op
Iteration   2: 60.728 us/op
Iteration   3: 60.665 us/op
Iteration   4: 60.639 us/op
Iteration   5: 60.725 us/op

# Run progress: 31.11% complete, ETA 00:51:47
# Fork: 3 of 3
# Warmup Iteration   1: 58.060 us/op
# Warmup Iteration   2: 54.264 us/op
# Warmup Iteration   3: 54.719 us/op
# Warmup Iteration   4: 54.910 us/op
# Warmup Iteration   5: 54.971 us/op
Iteration   1: 55.036 us/op
Iteration   2: 55.069 us/op
Iteration   3: 55.060 us/op
Iteration   4: 55.089 us/op
Iteration   5: 55.110 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleFloatArraysBenchmark.extract_2_arrays_elements":
  57.865 ±(99.9%) 2.536 us/op [Average]
  (min, avg, max) = (55.036, 57.865, 60.728), stdev = 2.372
  CI (99.9%): [55.329, 60.401] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleFloatArraysBenchmark.if_with_masking_conditional_flow
# Parameters: (size = 262144)

# Run progress: 33.33% complete, ETA 00:50:07
# Fork: 1 of 3
# Warmup Iteration   1: 173.105 us/op
# Warmup Iteration   2: 168.223 us/op
# Warmup Iteration   3: 166.779 us/op
# Warmup Iteration   4: 165.261 us/op
# Warmup Iteration   5: 164.524 us/op
Iteration   1: 163.471 us/op
Iteration   2: 163.018 us/op
Iteration   3: 162.788 us/op
Iteration   4: 162.552 us/op
Iteration   5: 162.485 us/op

# Run progress: 35.56% complete, ETA 00:48:27
# Fork: 2 of 3
# Warmup Iteration   1: 163.783 us/op
# Warmup Iteration   2: 163.458 us/op
# Warmup Iteration   3: 163.316 us/op
# Warmup Iteration   4: 162.465 us/op
# Warmup Iteration   5: 161.905 us/op
Iteration   1: 161.981 us/op
Iteration   2: 161.739 us/op
Iteration   3: 161.885 us/op
Iteration   4: 161.579 us/op
Iteration   5: 161.718 us/op

# Run progress: 37.78% complete, ETA 00:46:46
# Fork: 3 of 3
# Warmup Iteration   1: 154.174 us/op
# Warmup Iteration   2: 155.143 us/op
# Warmup Iteration   3: 154.972 us/op
# Warmup Iteration   4: 155.151 us/op
# Warmup Iteration   5: 155.405 us/op
Iteration   1: 155.573 us/op
Iteration   2: 155.723 us/op
Iteration   3: 155.736 us/op
Iteration   4: 155.691 us/op
Iteration   5: 155.691 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleFloatArraysBenchmark.if_with_masking_conditional_flow":
  160.109 ±(99.9%) 3.506 us/op [Average]
  (min, avg, max) = (155.573, 160.109, 163.471), stdev = 3.280
  CI (99.9%): [156.602, 163.615] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleFloatArraysBenchmark.mod_2_arrays_elements
# Parameters: (size = 262144)

# Run progress: 40.00% complete, ETA 00:45:06
# Fork: 1 of 3
# Warmup Iteration   1: 4002.815 us/op
# Warmup Iteration   2: 4007.979 us/op
# Warmup Iteration   3: 3989.713 us/op
# Warmup Iteration   4: 4006.365 us/op
# Warmup Iteration   5: 4014.520 us/op
Iteration   1: 4004.737 us/op
Iteration   2: 3999.376 us/op
Iteration   3: 3992.223 us/op
Iteration   4: 4004.634 us/op
Iteration   5: 3987.561 us/op

# Run progress: 42.22% complete, ETA 00:43:26
# Fork: 2 of 3
# Warmup Iteration   1: 4199.149 us/op
# Warmup Iteration   2: 4185.060 us/op
# Warmup Iteration   3: 4173.665 us/op
# Warmup Iteration   4: 4171.607 us/op
# Warmup Iteration   5: 4169.392 us/op
Iteration   1: 4161.111 us/op
Iteration   2: 4157.393 us/op
Iteration   3: 4152.146 us/op
Iteration   4: 4157.099 us/op
Iteration   5: 4168.272 us/op

# Run progress: 44.44% complete, ETA 00:41:46
# Fork: 3 of 3
# Warmup Iteration   1: 4175.328 us/op
# Warmup Iteration   2: 4179.646 us/op
# Warmup Iteration   3: 4169.860 us/op
# Warmup Iteration   4: 4164.173 us/op
# Warmup Iteration   5: 4172.756 us/op
Iteration   1: 4173.099 us/op
Iteration   2: 4172.827 us/op
Iteration   3: 4168.723 us/op
Iteration   4: 4171.315 us/op
Iteration   5: 4175.810 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleFloatArraysBenchmark.mod_2_arrays_elements":
  4109.755 ±(99.9%) 88.063 us/op [Average]
  (min, avg, max) = (3987.561, 4109.755, 4175.810), stdev = 82.375
  CI (99.9%): [4021.692, 4197.818] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleFloatArraysBenchmark.multiply_2_arrays_elements
# Parameters: (size = 262144)

# Run progress: 46.67% complete, ETA 00:40:05
# Fork: 1 of 3
# Warmup Iteration   1: 52.944 us/op
# Warmup Iteration   2: 57.206 us/op
# Warmup Iteration   3: 57.410 us/op
# Warmup Iteration   4: 57.493 us/op
# Warmup Iteration   5: 60.524 us/op
Iteration   1: 60.595 us/op
Iteration   2: 60.614 us/op
Iteration   3: 60.650 us/op
Iteration   4: 60.660 us/op
Iteration   5: 60.641 us/op

# Run progress: 48.89% complete, ETA 00:38:25
# Fork: 2 of 3
# Warmup Iteration   1: 54.853 us/op
# Warmup Iteration   2: 61.394 us/op
# Warmup Iteration   3: 61.004 us/op
# Warmup Iteration   4: 61.004 us/op
# Warmup Iteration   5: 60.834 us/op
Iteration   1: 60.792 us/op
Iteration   2: 60.755 us/op
Iteration   3: 60.746 us/op
Iteration   4: 54.368 us/op
Iteration   5: 54.773 us/op

# Run progress: 51.11% complete, ETA 00:36:45
# Fork: 3 of 3
# Warmup Iteration   1: 56.055 us/op
# Warmup Iteration   2: 56.301 us/op
# Warmup Iteration   3: 56.252 us/op
# Warmup Iteration   4: 56.341 us/op
# Warmup Iteration   5: 56.350 us/op
Iteration   1: 56.226 us/op
Iteration   2: 56.520 us/op
Iteration   3: 56.464 us/op
Iteration   4: 56.496 us/op
Iteration   5: 56.471 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleFloatArraysBenchmark.multiply_2_arrays_elements":
  58.451 ±(99.9%) 2.717 us/op [Average]
  (min, avg, max) = (54.368, 58.451, 60.792), stdev = 2.541
  CI (99.9%): [55.735, 61.168] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleFloatArraysBenchmark.multiply_2_arrays_elements_backward_iterator
# Parameters: (size = 262144)

# Run progress: 53.33% complete, ETA 00:35:05
# Fork: 1 of 3
# Warmup Iteration   1: 57.246 us/op
# Warmup Iteration   2: 57.385 us/op
# Warmup Iteration   3: 57.002 us/op
# Warmup Iteration   4: 57.065 us/op
# Warmup Iteration   5: 57.145 us/op
Iteration   1: 57.124 us/op
Iteration   2: 57.222 us/op
Iteration   3: 57.260 us/op
Iteration   4: 57.149 us/op
Iteration   5: 57.322 us/op

# Run progress: 55.56% complete, ETA 00:33:24
# Fork: 2 of 3
# Warmup Iteration   1: 60.532 us/op
# Warmup Iteration   2: 59.689 us/op
# Warmup Iteration   3: 59.401 us/op
# Warmup Iteration   4: 59.171 us/op
# Warmup Iteration   5: 59.264 us/op
Iteration   1: 59.118 us/op
Iteration   2: 59.000 us/op
Iteration   3: 58.940 us/op
Iteration   4: 59.024 us/op
Iteration   5: 58.939 us/op

# Run progress: 57.78% complete, ETA 00:31:44
# Fork: 3 of 3
# Warmup Iteration   1: 55.830 us/op
# Warmup Iteration   2: 62.752 us/op
# Warmup Iteration   3: 62.117 us/op
# Warmup Iteration   4: 61.786 us/op
# Warmup Iteration   5: 61.740 us/op
Iteration   1: 61.737 us/op
Iteration   2: 61.561 us/op
Iteration   3: 61.594 us/op
Iteration   4: 61.514 us/op
Iteration   5: 61.603 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleFloatArraysBenchmark.multiply_2_arrays_elements_backward_iterator":
  59.274 ±(99.9%) 1.994 us/op [Average]
  (min, avg, max) = (57.124, 59.274, 61.737), stdev = 1.866
  CI (99.9%): [57.279, 61.268] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleFloatArraysBenchmark.multiply_2_arrays_elements_long_stride
# Parameters: (size = 262144)

# Run progress: 60.00% complete, ETA 00:30:04
# Fork: 1 of 3
# Warmup Iteration   1: 243.913 us/op
# Warmup Iteration   2: 254.352 us/op
# Warmup Iteration   3: 251.899 us/op
# Warmup Iteration   4: 251.292 us/op
# Warmup Iteration   5: 250.935 us/op
Iteration   1: 250.475 us/op
Iteration   2: 249.916 us/op
Iteration   3: 249.346 us/op
Iteration   4: 249.377 us/op
Iteration   5: 249.338 us/op

# Run progress: 62.22% complete, ETA 00:28:24
# Fork: 2 of 3
# Warmup Iteration   1: 248.950 us/op
# Warmup Iteration   2: 248.134 us/op
# Warmup Iteration   3: 246.862 us/op
# Warmup Iteration   4: 247.179 us/op
# Warmup Iteration   5: 247.815 us/op
Iteration   1: 248.156 us/op
Iteration   2: 247.351 us/op
Iteration   3: 247.111 us/op
Iteration   4: 246.833 us/op
Iteration   5: 246.378 us/op

# Run progress: 64.44% complete, ETA 00:26:44
# Fork: 3 of 3
# Warmup Iteration   1: 247.626 us/op
# Warmup Iteration   2: 247.149 us/op
# Warmup Iteration   3: 246.449 us/op
# Warmup Iteration   4: 246.553 us/op
# Warmup Iteration   5: 246.405 us/op
Iteration   1: 246.620 us/op
Iteration   2: 247.268 us/op
Iteration   3: 246.711 us/op
Iteration   4: 245.427 us/op
Iteration   5: 245.417 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleFloatArraysBenchmark.multiply_2_arrays_elements_long_stride":
  247.715 ±(99.9%) 1.731 us/op [Average]
  (min, avg, max) = (245.417, 247.715, 250.475), stdev = 1.619
  CI (99.9%): [245.984, 249.446] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleFloatArraysBenchmark.multiply_2_arrays_elements_of_mixed_types
# Parameters: (size = 262144)

# Run progress: 66.67% complete, ETA 00:25:03
# Fork: 1 of 3
# Warmup Iteration   1: 126.422 us/op
# Warmup Iteration   2: 126.506 us/op
# Warmup Iteration   3: 221.055 us/op
# Warmup Iteration   4: 222.169 us/op
# Warmup Iteration   5: 222.954 us/op
Iteration   1: 223.246 us/op
Iteration   2: 222.249 us/op
Iteration   3: 222.742 us/op
Iteration   4: 222.843 us/op
Iteration   5: 223.297 us/op

# Run progress: 68.89% complete, ETA 00:23:23
# Fork: 2 of 3
# Warmup Iteration   1: 139.624 us/op
# Warmup Iteration   2: 135.052 us/op
# Warmup Iteration   3: 233.971 us/op
# Warmup Iteration   4: 233.803 us/op
# Warmup Iteration   5: 233.872 us/op
Iteration   1: 233.691 us/op
Iteration   2: 233.880 us/op
Iteration   3: 234.046 us/op
Iteration   4: 233.793 us/op
Iteration   5: 233.830 us/op

# Run progress: 71.11% complete, ETA 00:21:43
# Fork: 3 of 3
# Warmup Iteration   1: 138.815 us/op
# Warmup Iteration   2: 134.730 us/op
# Warmup Iteration   3: 233.318 us/op
# Warmup Iteration   4: 233.576 us/op
# Warmup Iteration   5: 233.550 us/op
Iteration   1: 233.430 us/op
Iteration   2: 237.116 us/op
Iteration   3: 234.645 us/op
Iteration   4: 233.792 us/op
Iteration   5: 233.647 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleFloatArraysBenchmark.multiply_2_arrays_elements_of_mixed_types":
  230.417 ±(99.9%) 5.977 us/op [Average]
  (min, avg, max) = (222.249, 230.417, 237.116), stdev = 5.591
  CI (99.9%): [224.439, 236.394] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleFloatArraysBenchmark.multiply_2_arrays_elements_stride_2
# Parameters: (size = 262144)

# Run progress: 73.33% complete, ETA 00:20:02
# Fork: 1 of 3
# Warmup Iteration   1: 78.178 us/op
# Warmup Iteration   2: 77.859 us/op
# Warmup Iteration   3: 78.228 us/op
# Warmup Iteration   4: 78.421 us/op
# Warmup Iteration   5: 78.532 us/op
Iteration   1: 78.746 us/op
Iteration   2: 79.321 us/op
Iteration   3: 78.937 us/op
Iteration   4: 79.098 us/op
Iteration   5: 79.205 us/op

# Run progress: 75.56% complete, ETA 00:18:22
# Fork: 2 of 3
# Warmup Iteration   1: 85.168 us/op
# Warmup Iteration   2: 79.583 us/op
# Warmup Iteration   3: 79.349 us/op
# Warmup Iteration   4: 79.574 us/op
# Warmup Iteration   5: 79.857 us/op
Iteration   1: 79.941 us/op
Iteration   2: 80.002 us/op
Iteration   3: 79.890 us/op
Iteration   4: 80.005 us/op
Iteration   5: 78.903 us/op

# Run progress: 77.78% complete, ETA 00:16:42
# Fork: 3 of 3
# Warmup Iteration   1: 84.968 us/op
# Warmup Iteration   2: 84.621 us/op
# Warmup Iteration   3: 83.878 us/op
# Warmup Iteration   4: 85.696 us/op
# Warmup Iteration   5: 85.489 us/op
Iteration   1: 85.589 us/op
Iteration   2: 85.375 us/op
Iteration   3: 85.420 us/op
Iteration   4: 85.530 us/op
Iteration   5: 85.252 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleFloatArraysBenchmark.multiply_2_arrays_elements_stride_2":
  81.414 ±(99.9%) 3.175 us/op [Average]
  (min, avg, max) = (78.746, 81.414, 85.589), stdev = 2.970
  CI (99.9%): [78.239, 84.589] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleFloatArraysBenchmark.multiply_2_arrays_elements_stride_x2
# Parameters: (size = 262144)

# Run progress: 80.00% complete, ETA 00:15:02
# Fork: 1 of 3
# Warmup Iteration   1: 0.050 us/op
# Warmup Iteration   2: 0.050 us/op
# Warmup Iteration   3: 0.056 us/op
# Warmup Iteration   4: 0.055 us/op
# Warmup Iteration   5: 0.055 us/op
Iteration   1: 0.055 us/op
Iteration   2: 0.052 us/op
Iteration   3: 0.053 us/op
Iteration   4: 0.052 us/op
Iteration   5: 0.057 us/op

# Run progress: 82.22% complete, ETA 00:13:21
# Fork: 2 of 3
# Warmup Iteration   1: 0.047 us/op
# Warmup Iteration   2: 0.048 us/op
# Warmup Iteration   3: 0.048 us/op
# Warmup Iteration   4: 0.048 us/op
# Warmup Iteration   5: 0.047 us/op
Iteration   1: 0.047 us/op
Iteration   2: 0.047 us/op
Iteration   3: 0.047 us/op
Iteration   4: 0.047 us/op
Iteration   5: 0.050 us/op

# Run progress: 84.44% complete, ETA 00:11:41
# Fork: 3 of 3
# Warmup Iteration   1: 0.053 us/op
# Warmup Iteration   2: 0.054 us/op
# Warmup Iteration   3: 0.054 us/op
# Warmup Iteration   4: 0.053 us/op
# Warmup Iteration   5: 0.050 us/op
Iteration   1: 0.050 us/op
Iteration   2: 0.050 us/op
Iteration   3: 0.054 us/op
Iteration   4: 0.054 us/op
Iteration   5: 0.054 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleFloatArraysBenchmark.multiply_2_arrays_elements_stride_x2":
  0.051 ±(99.9%) 0.003 us/op [Average]
  (min, avg, max) = (0.047, 0.051, 0.057), stdev = 0.003
  CI (99.9%): [0.048, 0.055] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleFloatArraysBenchmark.multiply_2_arrays_elements_unknown_trip_count
# Parameters: (size = 262144)

# Run progress: 86.67% complete, ETA 00:10:01
# Fork: 1 of 3
# Warmup Iteration   1: 54.445 us/op
# Warmup Iteration   2: 55.453 us/op
# Warmup Iteration   3: 56.022 us/op
# Warmup Iteration   4: 56.372 us/op
# Warmup Iteration   5: 56.323 us/op
Iteration   1: 56.472 us/op
Iteration   2: 56.489 us/op
Iteration   3: 56.613 us/op
Iteration   4: 56.591 us/op
Iteration   5: 56.554 us/op

# Run progress: 88.89% complete, ETA 00:08:21
# Fork: 2 of 3
# Warmup Iteration   1: 59.928 us/op
# Warmup Iteration   2: 60.163 us/op
# Warmup Iteration   3: 59.410 us/op
# Warmup Iteration   4: 58.835 us/op
# Warmup Iteration   5: 58.501 us/op
Iteration   1: 58.363 us/op
Iteration   2: 58.454 us/op
Iteration   3: 58.364 us/op
Iteration   4: 58.275 us/op
Iteration   5: 58.306 us/op

# Run progress: 91.11% complete, ETA 00:06:40
# Fork: 3 of 3
# Warmup Iteration   1: 58.674 us/op
# Warmup Iteration   2: 58.281 us/op
# Warmup Iteration   3: 58.203 us/op
# Warmup Iteration   4: 58.130 us/op
# Warmup Iteration   5: 58.199 us/op
Iteration   1: 58.087 us/op
Iteration   2: 58.155 us/op
Iteration   3: 58.230 us/op
Iteration   4: 58.154 us/op
Iteration   5: 58.181 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleFloatArraysBenchmark.multiply_2_arrays_elements_unknown_trip_count":
  57.686 ±(99.9%) 0.900 us/op [Average]
  (min, avg, max) = (56.472, 57.686, 58.454), stdev = 0.842
  CI (99.9%): [56.786, 58.586] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleFloatArraysBenchmark.sum_all_product_pairs_of_2_arrays_elements
# Parameters: (size = 262144)

# Run progress: 93.33% complete, ETA 00:05:00
# Fork: 1 of 3
# Warmup Iteration   1: 1403.928 us/op
# Warmup Iteration   2: 1431.837 us/op
# Warmup Iteration   3: 1463.021 us/op
# Warmup Iteration   4: 1454.487 us/op
# Warmup Iteration   5: 1449.883 us/op
Iteration   1: 1451.727 us/op
Iteration   2: 1451.358 us/op
Iteration   3: 1445.778 us/op
Iteration   4: 1440.720 us/op
Iteration   5: 1440.770 us/op

# Run progress: 95.56% complete, ETA 00:03:20
# Fork: 2 of 3
# Warmup Iteration   1: 1451.006 us/op
# Warmup Iteration   2: 1451.494 us/op
# Warmup Iteration   3: 1439.328 us/op
# Warmup Iteration   4: 1447.291 us/op
# Warmup Iteration   5: 1448.510 us/op
Iteration   1: 1446.674 us/op
Iteration   2: 1443.847 us/op
Iteration   3: 1445.386 us/op
Iteration   4: 1443.449 us/op
Iteration   5: 1444.011 us/op

# Run progress: 97.78% complete, ETA 00:01:40
# Fork: 3 of 3
# Warmup Iteration   1: 1445.638 us/op
# Warmup Iteration   2: 1446.940 us/op
# Warmup Iteration   3: 1369.238 us/op
# Warmup Iteration   4: 1370.149 us/op
# Warmup Iteration   5: 1370.536 us/op
Iteration   1: 1370.695 us/op
Iteration   2: 1371.005 us/op
Iteration   3: 1371.004 us/op
Iteration   4: 1366.698 us/op
Iteration   5: 1370.694 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleFloatArraysBenchmark.sum_all_product_pairs_of_2_arrays_elements":
  1420.254 ±(99.9%) 39.456 us/op [Average]
  (min, avg, max) = (1366.698, 1420.254, 1451.727), stdev = 36.907
  CI (99.9%): [1380.799, 1459.710] (assumes normal distribution)


# Run complete. Total time: 01:15:11

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                                                                        (size)  Mode  Cnt     Score    Error  Units
VectorizationPatternsMultipleFloatArraysBenchmark.add_2_arrays_elements                          262144  avgt   15    57.555 ±  0.916  us/op
VectorizationPatternsMultipleFloatArraysBenchmark.add_2_arrays_elements_inc_index_access         262144  avgt   15   118.492 ±  0.944  us/op
VectorizationPatternsMultipleFloatArraysBenchmark.add_2_arrays_elements_modulo_index_access      262144  avgt   15   180.094 ±  6.090  us/op
VectorizationPatternsMultipleFloatArraysBenchmark.divide_2_arrays_elements                       262144  avgt   15    59.227 ±  1.024  us/op
VectorizationPatternsMultipleFloatArraysBenchmark.extract_2_arrays_elements                      262144  avgt   15    57.865 ±  2.536  us/op
VectorizationPatternsMultipleFloatArraysBenchmark.if_with_masking_conditional_flow               262144  avgt   15   160.109 ±  3.506  us/op
VectorizationPatternsMultipleFloatArraysBenchmark.mod_2_arrays_elements                          262144  avgt   15  4109.755 ± 88.063  us/op
VectorizationPatternsMultipleFloatArraysBenchmark.multiply_2_arrays_elements                     262144  avgt   15    58.451 ±  2.717  us/op
VectorizationPatternsMultipleFloatArraysBenchmark.multiply_2_arrays_elements_backward_iterator   262144  avgt   15    59.274 ±  1.994  us/op
VectorizationPatternsMultipleFloatArraysBenchmark.multiply_2_arrays_elements_long_stride         262144  avgt   15   247.715 ±  1.731  us/op
VectorizationPatternsMultipleFloatArraysBenchmark.multiply_2_arrays_elements_of_mixed_types      262144  avgt   15   230.417 ±  5.977  us/op
VectorizationPatternsMultipleFloatArraysBenchmark.multiply_2_arrays_elements_stride_2            262144  avgt   15    81.414 ±  3.175  us/op
VectorizationPatternsMultipleFloatArraysBenchmark.multiply_2_arrays_elements_stride_x2           262144  avgt   15     0.051 ±  0.003  us/op
VectorizationPatternsMultipleFloatArraysBenchmark.multiply_2_arrays_elements_unknown_trip_count  262144  avgt   15    57.686 ±  0.900  us/op
VectorizationPatternsMultipleFloatArraysBenchmark.sum_all_product_pairs_of_2_arrays_elements     262144  avgt   15  1420.254 ± 39.456  us/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_c1_c2_jit/VectorizationPatternsMultipleFloatArraysBenchmark.json
Running java  -jar benchmarks/target/benchmarks.jar .*VectorizationPatternsMultipleIntArraysBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_c1_c2_jit/VectorizationPatternsMultipleIntArraysBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleIntArraysBenchmark.add_2_arrays_elements
# Parameters: (size = 262144)

# Run progress: 0.00% complete, ETA 01:20:00
# Fork: 1 of 3
# Warmup Iteration   1: 58.603 us/op
# Warmup Iteration   2: 52.887 us/op
# Warmup Iteration   3: 53.457 us/op
# Warmup Iteration   4: 53.574 us/op
# Warmup Iteration   5: 53.786 us/op
Iteration   1: 54.029 us/op
Iteration   2: 54.071 us/op
Iteration   3: 54.124 us/op
Iteration   4: 54.176 us/op
Iteration   5: 54.204 us/op

# Run progress: 2.08% complete, ETA 01:18:34
# Fork: 2 of 3
# Warmup Iteration   1: 54.266 us/op
# Warmup Iteration   2: 57.983 us/op
# Warmup Iteration   3: 57.432 us/op
# Warmup Iteration   4: 57.290 us/op
# Warmup Iteration   5: 54.346 us/op
Iteration   1: 54.797 us/op
Iteration   2: 55.027 us/op
Iteration   3: 55.216 us/op
Iteration   4: 55.461 us/op
Iteration   5: 55.439 us/op

# Run progress: 4.17% complete, ETA 01:16:52
# Fork: 3 of 3
# Warmup Iteration   1: 55.283 us/op
# Warmup Iteration   2: 55.403 us/op
# Warmup Iteration   3: 55.573 us/op
# Warmup Iteration   4: 55.494 us/op
# Warmup Iteration   5: 55.527 us/op
Iteration   1: 55.301 us/op
Iteration   2: 55.796 us/op
Iteration   3: 55.980 us/op
Iteration   4: 55.887 us/op
Iteration   5: 55.615 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleIntArraysBenchmark.add_2_arrays_elements":
  55.008 ±(99.9%) 0.768 us/op [Average]
  (min, avg, max) = (54.029, 55.008, 55.980), stdev = 0.719
  CI (99.9%): [54.240, 55.777] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleIntArraysBenchmark.add_2_arrays_elements_inc_index_access
# Parameters: (size = 262144)

# Run progress: 6.25% complete, ETA 01:15:12
# Fork: 1 of 3
# Warmup Iteration   1: 110.575 us/op
# Warmup Iteration   2: 109.046 us/op
# Warmup Iteration   3: 108.126 us/op
# Warmup Iteration   4: 107.819 us/op
# Warmup Iteration   5: 109.061 us/op
Iteration   1: 107.809 us/op
Iteration   2: 107.865 us/op
Iteration   3: 107.840 us/op
Iteration   4: 107.741 us/op
Iteration   5: 107.396 us/op

# Run progress: 8.33% complete, ETA 01:13:32
# Fork: 2 of 3
# Warmup Iteration   1: 117.599 us/op
# Warmup Iteration   2: 115.744 us/op
# Warmup Iteration   3: 114.585 us/op
# Warmup Iteration   4: 114.273 us/op
# Warmup Iteration   5: 114.179 us/op
Iteration   1: 113.682 us/op
Iteration   2: 113.300 us/op
Iteration   3: 113.611 us/op
Iteration   4: 113.450 us/op
Iteration   5: 113.240 us/op

# Run progress: 10.42% complete, ETA 01:11:52
# Fork: 3 of 3
# Warmup Iteration   1: 105.061 us/op
# Warmup Iteration   2: 108.672 us/op
# Warmup Iteration   3: 108.998 us/op
# Warmup Iteration   4: 108.961 us/op
# Warmup Iteration   5: 108.885 us/op
Iteration   1: 108.877 us/op
Iteration   2: 108.919 us/op
Iteration   3: 108.923 us/op
Iteration   4: 108.876 us/op
Iteration   5: 108.851 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleIntArraysBenchmark.add_2_arrays_elements_inc_index_access":
  110.025 ±(99.9%) 2.740 us/op [Average]
  (min, avg, max) = (107.396, 110.025, 113.682), stdev = 2.563
  CI (99.9%): [107.286, 112.765] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleIntArraysBenchmark.add_2_arrays_elements_modulo_index_access
# Parameters: (size = 262144)

# Run progress: 12.50% complete, ETA 01:10:11
# Fork: 1 of 3
# Warmup Iteration   1: 166.740 us/op
# Warmup Iteration   2: 163.474 us/op
# Warmup Iteration   3: 163.523 us/op
# Warmup Iteration   4: 157.842 us/op
# Warmup Iteration   5: 157.413 us/op
Iteration   1: 157.332 us/op
Iteration   2: 149.059 us/op
Iteration   3: 149.682 us/op
Iteration   4: 150.274 us/op
Iteration   5: 149.737 us/op

# Run progress: 14.58% complete, ETA 01:08:31
# Fork: 2 of 3
# Warmup Iteration   1: 164.497 us/op
# Warmup Iteration   2: 149.050 us/op
# Warmup Iteration   3: 146.964 us/op
# Warmup Iteration   4: 150.599 us/op
# Warmup Iteration   5: 146.720 us/op
Iteration   1: 146.711 us/op
Iteration   2: 146.723 us/op
Iteration   3: 146.775 us/op
Iteration   4: 146.758 us/op
Iteration   5: 146.512 us/op

# Run progress: 16.67% complete, ETA 01:06:50
# Fork: 3 of 3
# Warmup Iteration   1: 165.469 us/op
# Warmup Iteration   2: 161.770 us/op
# Warmup Iteration   3: 157.714 us/op
# Warmup Iteration   4: 161.581 us/op
# Warmup Iteration   5: 157.183 us/op
Iteration   1: 157.087 us/op
Iteration   2: 156.874 us/op
Iteration   3: 156.778 us/op
Iteration   4: 156.732 us/op
Iteration   5: 156.660 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleIntArraysBenchmark.add_2_arrays_elements_modulo_index_access":
  151.580 ±(99.9%) 4.991 us/op [Average]
  (min, avg, max) = (146.512, 151.580, 157.332), stdev = 4.669
  CI (99.9%): [146.588, 156.571] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleIntArraysBenchmark.extract_2_arrays_elements
# Parameters: (size = 262144)

# Run progress: 18.75% complete, ETA 01:05:10
# Fork: 1 of 3
# Warmup Iteration   1: 52.676 us/op
# Warmup Iteration   2: 53.774 us/op
# Warmup Iteration   3: 54.041 us/op
# Warmup Iteration   4: 54.202 us/op
# Warmup Iteration   5: 54.323 us/op
Iteration   1: 54.333 us/op
Iteration   2: 54.359 us/op
Iteration   3: 54.567 us/op
Iteration   4: 54.529 us/op
Iteration   5: 54.575 us/op

# Run progress: 20.83% complete, ETA 01:03:30
# Fork: 2 of 3
# Warmup Iteration   1: 55.769 us/op
# Warmup Iteration   2: 55.985 us/op
# Warmup Iteration   3: 56.012 us/op
# Warmup Iteration   4: 55.963 us/op
# Warmup Iteration   5: 56.043 us/op
Iteration   1: 55.978 us/op
Iteration   2: 55.840 us/op
Iteration   3: 56.064 us/op
Iteration   4: 56.141 us/op
Iteration   5: 56.104 us/op

# Run progress: 22.92% complete, ETA 01:01:49
# Fork: 3 of 3
# Warmup Iteration   1: 59.273 us/op
# Warmup Iteration   2: 54.794 us/op
# Warmup Iteration   3: 54.867 us/op
# Warmup Iteration   4: 54.938 us/op
# Warmup Iteration   5: 54.905 us/op
Iteration   1: 54.993 us/op
Iteration   2: 55.108 us/op
Iteration   3: 55.042 us/op
Iteration   4: 55.105 us/op
Iteration   5: 55.131 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleIntArraysBenchmark.extract_2_arrays_elements":
  55.191 ±(99.9%) 0.714 us/op [Average]
  (min, avg, max) = (54.333, 55.191, 56.141), stdev = 0.668
  CI (99.9%): [54.477, 55.906] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleIntArraysBenchmark.if_with_masking_conditional_flow
# Parameters: (size = 262144)

# Run progress: 25.00% complete, ETA 01:00:09
# Fork: 1 of 3
# Warmup Iteration   1: 134.883 us/op
# Warmup Iteration   2: 131.493 us/op
# Warmup Iteration   3: 130.259 us/op
# Warmup Iteration   4: 129.809 us/op
# Warmup Iteration   5: 128.924 us/op
Iteration   1: 129.027 us/op
Iteration   2: 128.627 us/op
Iteration   3: 128.298 us/op
Iteration   4: 128.394 us/op
Iteration   5: 128.370 us/op

# Run progress: 27.08% complete, ETA 00:58:29
# Fork: 2 of 3
# Warmup Iteration   1: 128.385 us/op
# Warmup Iteration   2: 127.997 us/op
# Warmup Iteration   3: 127.756 us/op
# Warmup Iteration   4: 127.763 us/op
# Warmup Iteration   5: 127.713 us/op
Iteration   1: 127.520 us/op
Iteration   2: 127.505 us/op
Iteration   3: 127.553 us/op
Iteration   4: 127.407 us/op
Iteration   5: 127.218 us/op

# Run progress: 29.17% complete, ETA 00:56:48
# Fork: 3 of 3
# Warmup Iteration   1: 127.855 us/op
# Warmup Iteration   2: 127.718 us/op
# Warmup Iteration   3: 127.632 us/op
# Warmup Iteration   4: 127.360 us/op
# Warmup Iteration   5: 127.313 us/op
Iteration   1: 127.279 us/op
Iteration   2: 127.168 us/op
Iteration   3: 127.246 us/op
Iteration   4: 127.323 us/op
Iteration   5: 127.297 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleIntArraysBenchmark.if_with_masking_conditional_flow":
  127.749 ±(99.9%) 0.655 us/op [Average]
  (min, avg, max) = (127.168, 127.749, 129.027), stdev = 0.612
  CI (99.9%): [127.094, 128.403] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleIntArraysBenchmark.mod_2_arrays_elements
# Parameters: (size = 262144)

# Run progress: 31.25% complete, ETA 00:55:08
# Fork: 1 of 3
# Warmup Iteration   1: 573.096 us/op
# Warmup Iteration   2: 575.524 us/op
# Warmup Iteration   3: 576.289 us/op
# Warmup Iteration   4: 577.145 us/op
# Warmup Iteration   5: 577.929 us/op
Iteration   1: 576.716 us/op
Iteration   2: 576.846 us/op
Iteration   3: 576.281 us/op
Iteration   4: 577.279 us/op
Iteration   5: 577.323 us/op

# Run progress: 33.33% complete, ETA 00:53:28
# Fork: 2 of 3
# Warmup Iteration   1: 580.537 us/op
# Warmup Iteration   2: 603.068 us/op
# Warmup Iteration   3: 600.645 us/op
# Warmup Iteration   4: 599.985 us/op
# Warmup Iteration   5: 598.780 us/op
Iteration   1: 598.078 us/op
Iteration   2: 601.616 us/op
Iteration   3: 598.593 us/op
Iteration   4: 598.467 us/op
Iteration   5: 598.198 us/op

# Run progress: 35.42% complete, ETA 00:51:48
# Fork: 3 of 3
# Warmup Iteration   1: 598.878 us/op
# Warmup Iteration   2: 598.753 us/op
# Warmup Iteration   3: 598.095 us/op
# Warmup Iteration   4: 598.745 us/op
# Warmup Iteration   5: 598.209 us/op
Iteration   1: 598.731 us/op
Iteration   2: 602.856 us/op
Iteration   3: 597.663 us/op
Iteration   4: 598.527 us/op
Iteration   5: 596.847 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleIntArraysBenchmark.mod_2_arrays_elements":
  591.601 ±(99.9%) 11.622 us/op [Average]
  (min, avg, max) = (576.281, 591.601, 602.856), stdev = 10.871
  CI (99.9%): [579.979, 603.223] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleIntArraysBenchmark.multiply_2_arrays_elements
# Parameters: (size = 262144)

# Run progress: 37.50% complete, ETA 00:50:07
# Fork: 1 of 3
# Warmup Iteration   1: 56.652 us/op
# Warmup Iteration   2: 60.072 us/op
# Warmup Iteration   3: 60.520 us/op
# Warmup Iteration   4: 60.685 us/op
# Warmup Iteration   5: 60.718 us/op
Iteration   1: 60.829 us/op
Iteration   2: 60.872 us/op
Iteration   3: 60.887 us/op
Iteration   4: 60.877 us/op
Iteration   5: 60.883 us/op

# Run progress: 39.58% complete, ETA 00:48:27
# Fork: 2 of 3
# Warmup Iteration   1: 55.156 us/op
# Warmup Iteration   2: 55.914 us/op
# Warmup Iteration   3: 56.164 us/op
# Warmup Iteration   4: 56.377 us/op
# Warmup Iteration   5: 56.421 us/op
Iteration   1: 56.479 us/op
Iteration   2: 56.519 us/op
Iteration   3: 56.548 us/op
Iteration   4: 56.553 us/op
Iteration   5: 56.626 us/op

# Run progress: 41.67% complete, ETA 00:46:47
# Fork: 3 of 3
# Warmup Iteration   1: 63.152 us/op
# Warmup Iteration   2: 62.432 us/op
# Warmup Iteration   3: 62.075 us/op
# Warmup Iteration   4: 61.807 us/op
# Warmup Iteration   5: 61.652 us/op
Iteration   1: 61.536 us/op
Iteration   2: 61.558 us/op
Iteration   3: 61.460 us/op
Iteration   4: 61.442 us/op
Iteration   5: 61.483 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleIntArraysBenchmark.multiply_2_arrays_elements":
  59.637 ±(99.9%) 2.436 us/op [Average]
  (min, avg, max) = (56.479, 59.637, 61.558), stdev = 2.279
  CI (99.9%): [57.201, 62.073] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleIntArraysBenchmark.multiply_2_arrays_elements_backward_iterator
# Parameters: (size = 262144)

# Run progress: 43.75% complete, ETA 00:45:06
# Fork: 1 of 3
# Warmup Iteration   1: 59.465 us/op
# Warmup Iteration   2: 59.482 us/op
# Warmup Iteration   3: 59.482 us/op
# Warmup Iteration   4: 59.442 us/op
# Warmup Iteration   5: 59.485 us/op
Iteration   1: 59.404 us/op
Iteration   2: 59.506 us/op
Iteration   3: 59.360 us/op
Iteration   4: 59.622 us/op
Iteration   5: 59.557 us/op

# Run progress: 45.83% complete, ETA 00:43:26
# Fork: 2 of 3
# Warmup Iteration   1: 55.539 us/op
# Warmup Iteration   2: 56.067 us/op
# Warmup Iteration   3: 56.226 us/op
# Warmup Iteration   4: 56.275 us/op
# Warmup Iteration   5: 56.351 us/op
Iteration   1: 56.336 us/op
Iteration   2: 56.265 us/op
Iteration   3: 56.335 us/op
Iteration   4: 56.381 us/op
Iteration   5: 56.398 us/op

# Run progress: 47.92% complete, ETA 00:41:46
# Fork: 3 of 3
# Warmup Iteration   1: 57.455 us/op
# Warmup Iteration   2: 57.535 us/op
# Warmup Iteration   3: 57.558 us/op
# Warmup Iteration   4: 57.657 us/op
# Warmup Iteration   5: 57.733 us/op
Iteration   1: 57.589 us/op
Iteration   2: 64.275 us/op
Iteration   3: 63.620 us/op
Iteration   4: 63.290 us/op
Iteration   5: 62.918 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleIntArraysBenchmark.multiply_2_arrays_elements_backward_iterator":
  59.390 ±(99.9%) 3.119 us/op [Average]
  (min, avg, max) = (56.265, 59.390, 64.275), stdev = 2.918
  CI (99.9%): [56.271, 62.509] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleIntArraysBenchmark.multiply_2_arrays_elements_long_stride
# Parameters: (size = 262144)

# Run progress: 50.00% complete, ETA 00:40:06
# Fork: 1 of 3
# Warmup Iteration   1: 312.446 us/op
# Warmup Iteration   2: 325.237 us/op
# Warmup Iteration   3: 322.699 us/op
# Warmup Iteration   4: 257.954 us/op
# Warmup Iteration   5: 247.172 us/op
Iteration   1: 246.060 us/op
Iteration   2: 245.220 us/op
Iteration   3: 244.380 us/op
Iteration   4: 244.429 us/op
Iteration   5: 244.721 us/op

# Run progress: 52.08% complete, ETA 00:38:25
# Fork: 2 of 3
# Warmup Iteration   1: 302.355 us/op
# Warmup Iteration   2: 304.299 us/op
# Warmup Iteration   3: 303.939 us/op
# Warmup Iteration   4: 232.922 us/op
# Warmup Iteration   5: 233.076 us/op
Iteration   1: 233.483 us/op
Iteration   2: 233.517 us/op
Iteration   3: 233.419 us/op
Iteration   4: 233.248 us/op
Iteration   5: 233.111 us/op

# Run progress: 54.17% complete, ETA 00:36:45
# Fork: 3 of 3
# Warmup Iteration   1: 320.448 us/op
# Warmup Iteration   2: 319.175 us/op
# Warmup Iteration   3: 318.187 us/op
# Warmup Iteration   4: 253.982 us/op
# Warmup Iteration   5: 242.639 us/op
Iteration   1: 242.308 us/op
Iteration   2: 246.232 us/op
Iteration   3: 246.880 us/op
Iteration   4: 243.495 us/op
Iteration   5: 242.792 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleIntArraysBenchmark.multiply_2_arrays_elements_long_stride":
  240.886 ±(99.9%) 6.032 us/op [Average]
  (min, avg, max) = (233.111, 240.886, 246.880), stdev = 5.642
  CI (99.9%): [234.855, 246.918] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleIntArraysBenchmark.multiply_2_arrays_elements_of_mixed_types
# Parameters: (size = 262144)

# Run progress: 56.25% complete, ETA 00:35:05
# Fork: 1 of 3
# Warmup Iteration   1: 113.462 us/op
# Warmup Iteration   2: 113.210 us/op
# Warmup Iteration   3: 114.067 us/op
# Warmup Iteration   4: 114.105 us/op
# Warmup Iteration   5: 113.805 us/op
Iteration   1: 113.646 us/op
Iteration   2: 113.689 us/op
Iteration   3: 113.991 us/op
Iteration   4: 114.058 us/op
Iteration   5: 113.969 us/op

# Run progress: 58.33% complete, ETA 00:33:25
# Fork: 2 of 3
# Warmup Iteration   1: 107.621 us/op
# Warmup Iteration   2: 107.295 us/op
# Warmup Iteration   3: 108.321 us/op
# Warmup Iteration   4: 108.543 us/op
# Warmup Iteration   5: 104.426 us/op
Iteration   1: 105.380 us/op
Iteration   2: 105.869 us/op
Iteration   3: 106.119 us/op
Iteration   4: 105.978 us/op
Iteration   5: 106.151 us/op

# Run progress: 60.42% complete, ETA 00:31:44
# Fork: 3 of 3
# Warmup Iteration   1: 106.702 us/op
# Warmup Iteration   2: 116.323 us/op
# Warmup Iteration   3: 115.890 us/op
# Warmup Iteration   4: 115.113 us/op
# Warmup Iteration   5: 114.567 us/op
Iteration   1: 114.300 us/op
Iteration   2: 114.372 us/op
Iteration   3: 114.221 us/op
Iteration   4: 113.932 us/op
Iteration   5: 113.954 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleIntArraysBenchmark.multiply_2_arrays_elements_of_mixed_types":
  111.309 ±(99.9%) 4.241 us/op [Average]
  (min, avg, max) = (105.380, 111.309, 114.372), stdev = 3.967
  CI (99.9%): [107.067, 115.550] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleIntArraysBenchmark.multiply_2_arrays_elements_stride_2
# Parameters: (size = 262144)

# Run progress: 62.50% complete, ETA 00:30:04
# Fork: 1 of 3
# Warmup Iteration   1: 72.995 us/op
# Warmup Iteration   2: 78.222 us/op
# Warmup Iteration   3: 77.476 us/op
# Warmup Iteration   4: 77.469 us/op
# Warmup Iteration   5: 77.327 us/op
Iteration   1: 77.394 us/op
Iteration   2: 77.574 us/op
Iteration   3: 77.478 us/op
Iteration   4: 77.241 us/op
Iteration   5: 77.395 us/op

# Run progress: 64.58% complete, ETA 00:28:24
# Fork: 2 of 3
# Warmup Iteration   1: 80.213 us/op
# Warmup Iteration   2: 80.085 us/op
# Warmup Iteration   3: 79.684 us/op
# Warmup Iteration   4: 79.706 us/op
# Warmup Iteration   5: 79.702 us/op
Iteration   1: 79.679 us/op
Iteration   2: 79.681 us/op
Iteration   3: 79.647 us/op
Iteration   4: 79.648 us/op
Iteration   5: 79.621 us/op

# Run progress: 66.67% complete, ETA 00:26:44
# Fork: 3 of 3
# Warmup Iteration   1: 80.231 us/op
# Warmup Iteration   2: 80.193 us/op
# Warmup Iteration   3: 79.587 us/op
# Warmup Iteration   4: 79.576 us/op
# Warmup Iteration   5: 79.551 us/op
Iteration   1: 79.575 us/op
Iteration   2: 79.563 us/op
Iteration   3: 79.692 us/op
Iteration   4: 79.650 us/op
Iteration   5: 79.695 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleIntArraysBenchmark.multiply_2_arrays_elements_stride_2":
  78.902 ±(99.9%) 1.165 us/op [Average]
  (min, avg, max) = (77.241, 78.902, 79.695), stdev = 1.090
  CI (99.9%): [77.737, 80.068] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleIntArraysBenchmark.multiply_2_arrays_elements_stride_x2
# Parameters: (size = 262144)

# Run progress: 68.75% complete, ETA 00:25:03
# Fork: 1 of 3
# Warmup Iteration   1: 0.046 us/op
# Warmup Iteration   2: 0.045 us/op
# Warmup Iteration   3: 0.045 us/op
# Warmup Iteration   4: 0.045 us/op
# Warmup Iteration   5: 0.044 us/op
Iteration   1: 0.045 us/op
Iteration   2: 0.045 us/op
Iteration   3: 0.044 us/op
Iteration   4: 0.044 us/op
Iteration   5: 0.044 us/op

# Run progress: 70.83% complete, ETA 00:23:23
# Fork: 2 of 3
# Warmup Iteration   1: 0.042 us/op
# Warmup Iteration   2: 0.041 us/op
# Warmup Iteration   3: 0.040 us/op
# Warmup Iteration   4: 0.041 us/op
# Warmup Iteration   5: 0.041 us/op
Iteration   1: 0.041 us/op
Iteration   2: 0.041 us/op
Iteration   3: 0.041 us/op
Iteration   4: 0.041 us/op
Iteration   5: 0.041 us/op

# Run progress: 72.92% complete, ETA 00:21:43
# Fork: 3 of 3
# Warmup Iteration   1: 0.048 us/op
# Warmup Iteration   2: 0.048 us/op
# Warmup Iteration   3: 0.048 us/op
# Warmup Iteration   4: 0.048 us/op
# Warmup Iteration   5: 0.048 us/op
Iteration   1: 0.048 us/op
Iteration   2: 0.048 us/op
Iteration   3: 0.047 us/op
Iteration   4: 0.043 us/op
Iteration   5: 0.043 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleIntArraysBenchmark.multiply_2_arrays_elements_stride_x2":
  0.044 ±(99.9%) 0.003 us/op [Average]
  (min, avg, max) = (0.041, 0.044, 0.048), stdev = 0.002
  CI (99.9%): [0.041, 0.046] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleIntArraysBenchmark.multiply_2_arrays_elements_unknown_trip_count
# Parameters: (size = 262144)

# Run progress: 75.00% complete, ETA 00:20:03
# Fork: 1 of 3
# Warmup Iteration   1: 54.810 us/op
# Warmup Iteration   2: 55.845 us/op
# Warmup Iteration   3: 56.232 us/op
# Warmup Iteration   4: 56.430 us/op
# Warmup Iteration   5: 62.644 us/op
Iteration   1: 62.015 us/op
Iteration   2: 61.781 us/op
Iteration   3: 61.570 us/op
Iteration   4: 61.496 us/op
Iteration   5: 61.429 us/op

# Run progress: 77.08% complete, ETA 00:18:22
# Fork: 2 of 3
# Warmup Iteration   1: 55.460 us/op
# Warmup Iteration   2: 56.137 us/op
# Warmup Iteration   3: 56.636 us/op
# Warmup Iteration   4: 56.355 us/op
# Warmup Iteration   5: 56.625 us/op
Iteration   1: 56.733 us/op
Iteration   2: 56.780 us/op
Iteration   3: 56.827 us/op
Iteration   4: 56.801 us/op
Iteration   5: 56.891 us/op

# Run progress: 79.17% complete, ETA 00:16:42
# Fork: 3 of 3
# Warmup Iteration   1: 56.400 us/op
# Warmup Iteration   2: 60.193 us/op
# Warmup Iteration   3: 59.598 us/op
# Warmup Iteration   4: 59.206 us/op
# Warmup Iteration   5: 59.153 us/op
Iteration   1: 59.013 us/op
Iteration   2: 58.952 us/op
Iteration   3: 58.816 us/op
Iteration   4: 61.855 us/op
Iteration   5: 61.721 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleIntArraysBenchmark.multiply_2_arrays_elements_unknown_trip_count":
  59.512 ±(99.9%) 2.412 us/op [Average]
  (min, avg, max) = (56.733, 59.512, 62.015), stdev = 2.257
  CI (99.9%): [57.100, 61.924] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleIntArraysBenchmark.shl_2_arrays_elements
# Parameters: (size = 262144)

# Run progress: 81.25% complete, ETA 00:15:02
# Fork: 1 of 3
# Warmup Iteration   1: 42.863 us/op
# Warmup Iteration   2: 44.066 us/op
# Warmup Iteration   3: 44.159 us/op
# Warmup Iteration   4: 44.258 us/op
# Warmup Iteration   5: 44.296 us/op
Iteration   1: 44.129 us/op
Iteration   2: 44.203 us/op
Iteration   3: 44.135 us/op
Iteration   4: 40.126 us/op
Iteration   5: 40.440 us/op

# Run progress: 83.33% complete, ETA 00:13:22
# Fork: 2 of 3
# Warmup Iteration   1: 40.460 us/op
# Warmup Iteration   2: 40.784 us/op
# Warmup Iteration   3: 40.897 us/op
# Warmup Iteration   4: 40.871 us/op
# Warmup Iteration   5: 40.880 us/op
Iteration   1: 40.909 us/op
Iteration   2: 40.771 us/op
Iteration   3: 40.958 us/op
Iteration   4: 40.961 us/op
Iteration   5: 40.985 us/op

# Run progress: 85.42% complete, ETA 00:11:41
# Fork: 3 of 3
# Warmup Iteration   1: 43.919 us/op
# Warmup Iteration   2: 43.495 us/op
# Warmup Iteration   3: 43.209 us/op
# Warmup Iteration   4: 43.042 us/op
# Warmup Iteration   5: 43.087 us/op
Iteration   1: 42.971 us/op
Iteration   2: 42.881 us/op
Iteration   3: 42.921 us/op
Iteration   4: 42.883 us/op
Iteration   5: 42.882 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleIntArraysBenchmark.shl_2_arrays_elements":
  42.144 ±(99.9%) 1.555 us/op [Average]
  (min, avg, max) = (40.126, 42.144, 44.203), stdev = 1.454
  CI (99.9%): [40.589, 43.698] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleIntArraysBenchmark.sum_all_product_pairs_of_2_arrays_elements
# Parameters: (size = 262144)

# Run progress: 87.50% complete, ETA 00:10:01
# Fork: 1 of 3
# Warmup Iteration   1: 65.808 us/op
# Warmup Iteration   2: 59.930 us/op
# Warmup Iteration   3: 61.036 us/op
# Warmup Iteration   4: 62.355 us/op
# Warmup Iteration   5: 62.200 us/op
Iteration   1: 62.254 us/op
Iteration   2: 62.238 us/op
Iteration   3: 61.020 us/op
Iteration   4: 61.195 us/op
Iteration   5: 61.205 us/op

# Run progress: 89.58% complete, ETA 00:08:21
# Fork: 2 of 3
# Warmup Iteration   1: 61.592 us/op
# Warmup Iteration   2: 61.490 us/op
# Warmup Iteration   3: 62.136 us/op
# Warmup Iteration   4: 62.000 us/op
# Warmup Iteration   5: 62.291 us/op
Iteration   1: 62.236 us/op
Iteration   2: 62.116 us/op
Iteration   3: 62.162 us/op
Iteration   4: 62.038 us/op
Iteration   5: 62.139 us/op

# Run progress: 91.67% complete, ETA 00:06:41
# Fork: 3 of 3
# Warmup Iteration   1: 61.230 us/op
# Warmup Iteration   2: 65.412 us/op
# Warmup Iteration   3: 66.032 us/op
# Warmup Iteration   4: 65.784 us/op
# Warmup Iteration   5: 65.535 us/op
Iteration   1: 65.402 us/op
Iteration   2: 65.440 us/op
Iteration   3: 60.242 us/op
Iteration   4: 60.662 us/op
Iteration   5: 60.851 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleIntArraysBenchmark.sum_all_product_pairs_of_2_arrays_elements":
  62.080 ±(99.9%) 1.616 us/op [Average]
  (min, avg, max) = (60.242, 62.080, 65.440), stdev = 1.511
  CI (99.9%): [60.464, 63.696] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleIntArraysBenchmark.xor_2_arrays_elements
# Parameters: (size = 262144)

# Run progress: 93.75% complete, ETA 00:05:00
# Fork: 1 of 3
# Warmup Iteration   1: 54.036 us/op
# Warmup Iteration   2: 54.818 us/op
# Warmup Iteration   3: 54.901 us/op
# Warmup Iteration   4: 55.043 us/op
# Warmup Iteration   5: 55.261 us/op
Iteration   1: 55.072 us/op
Iteration   2: 55.243 us/op
Iteration   3: 55.484 us/op
Iteration   4: 55.504 us/op
Iteration   5: 55.611 us/op

# Run progress: 95.83% complete, ETA 00:03:20
# Fork: 2 of 3
# Warmup Iteration   1: 54.789 us/op
# Warmup Iteration   2: 54.647 us/op
# Warmup Iteration   3: 54.439 us/op
# Warmup Iteration   4: 54.571 us/op
# Warmup Iteration   5: 54.500 us/op
Iteration   1: 54.562 us/op
Iteration   2: 54.546 us/op
Iteration   3: 54.408 us/op
Iteration   4: 54.440 us/op
Iteration   5: 54.393 us/op

# Run progress: 97.92% complete, ETA 00:01:40
# Fork: 3 of 3
# Warmup Iteration   1: 61.258 us/op
# Warmup Iteration   2: 60.626 us/op
# Warmup Iteration   3: 60.258 us/op
# Warmup Iteration   4: 60.099 us/op
# Warmup Iteration   5: 60.128 us/op
Iteration   1: 59.978 us/op
Iteration   2: 60.009 us/op
Iteration   3: 60.013 us/op
Iteration   4: 59.870 us/op
Iteration   5: 56.774 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationPatternsMultipleIntArraysBenchmark.xor_2_arrays_elements":
  56.394 ±(99.9%) 2.476 us/op [Average]
  (min, avg, max) = (54.393, 56.394, 60.013), stdev = 2.316
  CI (99.9%): [53.918, 58.869] (assumes normal distribution)


# Run complete. Total time: 01:20:12

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                                                                      (size)  Mode  Cnt    Score    Error  Units
VectorizationPatternsMultipleIntArraysBenchmark.add_2_arrays_elements                          262144  avgt   15   55.008 ±  0.768  us/op
VectorizationPatternsMultipleIntArraysBenchmark.add_2_arrays_elements_inc_index_access         262144  avgt   15  110.025 ±  2.740  us/op
VectorizationPatternsMultipleIntArraysBenchmark.add_2_arrays_elements_modulo_index_access      262144  avgt   15  151.580 ±  4.991  us/op
VectorizationPatternsMultipleIntArraysBenchmark.extract_2_arrays_elements                      262144  avgt   15   55.191 ±  0.714  us/op
VectorizationPatternsMultipleIntArraysBenchmark.if_with_masking_conditional_flow               262144  avgt   15  127.749 ±  0.655  us/op
VectorizationPatternsMultipleIntArraysBenchmark.mod_2_arrays_elements                          262144  avgt   15  591.601 ± 11.622  us/op
VectorizationPatternsMultipleIntArraysBenchmark.multiply_2_arrays_elements                     262144  avgt   15   59.637 ±  2.436  us/op
VectorizationPatternsMultipleIntArraysBenchmark.multiply_2_arrays_elements_backward_iterator   262144  avgt   15   59.390 ±  3.119  us/op
VectorizationPatternsMultipleIntArraysBenchmark.multiply_2_arrays_elements_long_stride         262144  avgt   15  240.886 ±  6.032  us/op
VectorizationPatternsMultipleIntArraysBenchmark.multiply_2_arrays_elements_of_mixed_types      262144  avgt   15  111.309 ±  4.241  us/op
VectorizationPatternsMultipleIntArraysBenchmark.multiply_2_arrays_elements_stride_2            262144  avgt   15   78.902 ±  1.165  us/op
VectorizationPatternsMultipleIntArraysBenchmark.multiply_2_arrays_elements_stride_x2           262144  avgt   15    0.044 ±  0.003  us/op
VectorizationPatternsMultipleIntArraysBenchmark.multiply_2_arrays_elements_unknown_trip_count  262144  avgt   15   59.512 ±  2.412  us/op
VectorizationPatternsMultipleIntArraysBenchmark.shl_2_arrays_elements                          262144  avgt   15   42.144 ±  1.555  us/op
VectorizationPatternsMultipleIntArraysBenchmark.sum_all_product_pairs_of_2_arrays_elements     262144  avgt   15   62.080 ±  1.616  us/op
VectorizationPatternsMultipleIntArraysBenchmark.xor_2_arrays_elements                          262144  avgt   15   56.394 ±  2.476  us/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_c1_c2_jit/VectorizationPatternsMultipleIntArraysBenchmark.json
Running java  -jar benchmarks/target/benchmarks.jar .*VectorizationScatterGatherPatternBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_c1_c2_jit/VectorizationScatterGatherPatternBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.VectorizationScatterGatherPatternBenchmark.scatter_gather
# Parameters: (size = 262144)

# Run progress: 0.00% complete, ETA 00:05:00
# Fork: 1 of 3
# Warmup Iteration   1: 167.350 us/op
# Warmup Iteration   2: 166.110 us/op
# Warmup Iteration   3: 165.098 us/op
# Warmup Iteration   4: 164.486 us/op
# Warmup Iteration   5: 164.102 us/op
Iteration   1: 163.724 us/op
Iteration   2: 163.326 us/op
Iteration   3: 163.316 us/op
Iteration   4: 162.705 us/op
Iteration   5: 162.625 us/op

# Run progress: 33.33% complete, ETA 00:03:20
# Fork: 2 of 3
# Warmup Iteration   1: 154.628 us/op
# Warmup Iteration   2: 155.677 us/op
# Warmup Iteration   3: 155.238 us/op
# Warmup Iteration   4: 155.717 us/op
# Warmup Iteration   5: 155.830 us/op
Iteration   1: 155.980 us/op
Iteration   2: 155.758 us/op
Iteration   3: 155.646 us/op
Iteration   4: 154.973 us/op
Iteration   5: 155.039 us/op

# Run progress: 66.67% complete, ETA 00:01:40
# Fork: 3 of 3
# Warmup Iteration   1: 167.252 us/op
# Warmup Iteration   2: 166.585 us/op
# Warmup Iteration   3: 165.558 us/op
# Warmup Iteration   4: 165.342 us/op
# Warmup Iteration   5: 165.080 us/op
Iteration   1: 164.843 us/op
Iteration   2: 164.877 us/op
Iteration   3: 154.153 us/op
Iteration   4: 155.333 us/op
Iteration   5: 156.050 us/op


Result "com.ionutbalosin.jvm.jit.benchmark.VectorizationScatterGatherPatternBenchmark.scatter_gather":
  159.223 ±(99.9%) 4.633 us/op [Average]
  (min, avg, max) = (154.153, 159.223, 164.877), stdev = 4.333
  CI (99.9%): [154.591, 163.856] (assumes normal distribution)


# Run complete. Total time: 00:05:00

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                                  (size)  Mode  Cnt    Score   Error  Units
VectorizationScatterGatherPatternBenchmark.scatter_gather  262144  avgt   15  159.223 ± 4.633  us/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_c1_c2_jit/VectorizationScatterGatherPatternBenchmark.json
Running java  -jar benchmarks/target/benchmarks.jar .*MegamorphicAbsClassCallBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_c1_c2_jit/MegamorphicAbsClassCallBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MegamorphicAbsClassCallBenchmark.bimorphic
# Parameters: (param = 3)

# Run progress: 0.00% complete, ETA 01:00:00
# Fork: 1 of 3
# Warmup Iteration   1: 3.409 ns/op
# Warmup Iteration   2: 3.265 ns/op
# Warmup Iteration   3: 3.173 ns/op
# Warmup Iteration   4: 3.169 ns/op
# Warmup Iteration   5: 3.161 ns/op
Iteration   1: 3.153 ns/op
Iteration   2: 3.148 ns/op
Iteration   3: 2.997 ns/op
Iteration   4: 2.910 ns/op
Iteration   5: 3.031 ns/op

# Run progress: 2.78% complete, ETA 00:58:28
# Fork: 2 of 3
# Warmup Iteration   1: 3.102 ns/op
# Warmup Iteration   2: 2.988 ns/op
# Warmup Iteration   3: 2.929 ns/op
# Warmup Iteration   4: 2.933 ns/op
# Warmup Iteration   5: 2.941 ns/op
Iteration   1: 2.942 ns/op
Iteration   2: 2.941 ns/op
Iteration   3: 2.936 ns/op
Iteration   4: 2.943 ns/op
Iteration   5: 2.938 ns/op

# Run progress: 5.56% complete, ETA 00:56:48
# Fork: 3 of 3
# Warmup Iteration   1: 3.385 ns/op
# Warmup Iteration   2: 3.250 ns/op
# Warmup Iteration   3: 3.169 ns/op
# Warmup Iteration   4: 3.165 ns/op
# Warmup Iteration   5: 3.159 ns/op
Iteration   1: 3.157 ns/op
Iteration   2: 3.150 ns/op
Iteration   3: 3.151 ns/op
Iteration   4: 3.151 ns/op
Iteration   5: 3.151 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MegamorphicAbsClassCallBenchmark.bimorphic":
  3.047 ±(99.9%) 0.113 ns/op [Average]
  (min, avg, max) = (2.910, 3.047, 3.157), stdev = 0.105
  CI (99.9%): [2.934, 3.159] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MegamorphicAbsClassCallBenchmark.megamorphic_3
# Parameters: (param = 3)

# Run progress: 8.33% complete, ETA 00:55:07
# Fork: 1 of 3
# Warmup Iteration   1: 4.280 ns/op
# Warmup Iteration   2: 4.277 ns/op
# Warmup Iteration   3: 4.155 ns/op
# Warmup Iteration   4: 4.154 ns/op
# Warmup Iteration   5: 4.147 ns/op
Iteration   1: 4.155 ns/op
Iteration   2: 4.149 ns/op
Iteration   3: 4.151 ns/op
Iteration   4: 4.151 ns/op
Iteration   5: 4.150 ns/op

# Run progress: 11.11% complete, ETA 00:53:27
# Fork: 2 of 3
# Warmup Iteration   1: 4.087 ns/op
# Warmup Iteration   2: 4.105 ns/op
# Warmup Iteration   3: 3.973 ns/op
# Warmup Iteration   4: 4.156 ns/op
# Warmup Iteration   5: 4.141 ns/op
Iteration   1: 4.146 ns/op
Iteration   2: 4.144 ns/op
Iteration   3: 4.143 ns/op
Iteration   4: 4.141 ns/op
Iteration   5: 4.136 ns/op

# Run progress: 13.89% complete, ETA 00:51:47
# Fork: 3 of 3
# Warmup Iteration   1: 3.946 ns/op
# Warmup Iteration   2: 3.976 ns/op
# Warmup Iteration   3: 3.862 ns/op
# Warmup Iteration   4: 3.867 ns/op
# Warmup Iteration   5: 3.871 ns/op
Iteration   1: 3.870 ns/op
Iteration   2: 3.871 ns/op
Iteration   3: 3.872 ns/op
Iteration   4: 3.877 ns/op
Iteration   5: 3.873 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MegamorphicAbsClassCallBenchmark.megamorphic_3":
  4.055 ±(99.9%) 0.143 ns/op [Average]
  (min, avg, max) = (3.870, 4.055, 4.155), stdev = 0.134
  CI (99.9%): [3.912, 4.198] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MegamorphicAbsClassCallBenchmark.megamorphic_4
# Parameters: (param = 3)

# Run progress: 16.67% complete, ETA 00:50:07
# Fork: 1 of 3
# Warmup Iteration   1: 3.821 ns/op
# Warmup Iteration   2: 3.837 ns/op
# Warmup Iteration   3: 3.737 ns/op
# Warmup Iteration   4: 3.738 ns/op
# Warmup Iteration   5: 3.741 ns/op
Iteration   1: 3.737 ns/op
Iteration   2: 3.741 ns/op
Iteration   3: 3.739 ns/op
Iteration   4: 3.737 ns/op
Iteration   5: 3.736 ns/op

# Run progress: 19.44% complete, ETA 00:48:26
# Fork: 2 of 3
# Warmup Iteration   1: 3.823 ns/op
# Warmup Iteration   2: 3.847 ns/op
# Warmup Iteration   3: 3.742 ns/op
# Warmup Iteration   4: 3.742 ns/op
# Warmup Iteration   5: 3.742 ns/op
Iteration   1: 3.742 ns/op
Iteration   2: 3.741 ns/op
Iteration   3: 3.742 ns/op
Iteration   4: 3.740 ns/op
Iteration   5: 3.741 ns/op

# Run progress: 22.22% complete, ETA 00:46:46
# Fork: 3 of 3
# Warmup Iteration   1: 4.144 ns/op
# Warmup Iteration   2: 3.937 ns/op
# Warmup Iteration   3: 3.842 ns/op
# Warmup Iteration   4: 3.846 ns/op
# Warmup Iteration   5: 3.862 ns/op
Iteration   1: 3.847 ns/op
Iteration   2: 3.863 ns/op
Iteration   3: 3.850 ns/op
Iteration   4: 3.846 ns/op
Iteration   5: 3.845 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MegamorphicAbsClassCallBenchmark.megamorphic_4":
  3.776 ±(99.9%) 0.058 ns/op [Average]
  (min, avg, max) = (3.736, 3.776, 3.863), stdev = 0.054
  CI (99.9%): [3.719, 3.834] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MegamorphicAbsClassCallBenchmark.megamorphic_5
# Parameters: (param = 3)

# Run progress: 25.00% complete, ETA 00:45:06
# Fork: 1 of 3
# Warmup Iteration   1: 3.811 ns/op
# Warmup Iteration   2: 3.776 ns/op
# Warmup Iteration   3: 3.659 ns/op
# Warmup Iteration   4: 3.668 ns/op
# Warmup Iteration   5: 3.669 ns/op
Iteration   1: 3.674 ns/op
Iteration   2: 3.975 ns/op
Iteration   3: 3.966 ns/op
Iteration   4: 3.944 ns/op
Iteration   5: 3.942 ns/op

# Run progress: 27.78% complete, ETA 00:43:26
# Fork: 2 of 3
# Warmup Iteration   1: 3.972 ns/op
# Warmup Iteration   2: 3.946 ns/op
# Warmup Iteration   3: 3.950 ns/op
# Warmup Iteration   4: 3.757 ns/op
# Warmup Iteration   5: 3.771 ns/op
Iteration   1: 3.763 ns/op
Iteration   2: 3.768 ns/op
Iteration   3: 3.772 ns/op
Iteration   4: 3.774 ns/op
Iteration   5: 3.777 ns/op

# Run progress: 30.56% complete, ETA 00:41:45
# Fork: 3 of 3
# Warmup Iteration   1: 3.997 ns/op
# Warmup Iteration   2: 3.957 ns/op
# Warmup Iteration   3: 3.958 ns/op
# Warmup Iteration   4: 3.949 ns/op
# Warmup Iteration   5: 3.953 ns/op
Iteration   1: 3.947 ns/op
Iteration   2: 3.953 ns/op
Iteration   3: 3.943 ns/op
Iteration   4: 3.941 ns/op
Iteration   5: 3.943 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MegamorphicAbsClassCallBenchmark.megamorphic_5":
  3.872 ±(99.9%) 0.110 ns/op [Average]
  (min, avg, max) = (3.674, 3.872, 3.975), stdev = 0.103
  CI (99.9%): [3.762, 3.982] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MegamorphicAbsClassCallBenchmark.megamorphic_6
# Parameters: (param = 3)

# Run progress: 33.33% complete, ETA 00:40:05
# Fork: 1 of 3
# Warmup Iteration   1: 3.651 ns/op
# Warmup Iteration   2: 3.628 ns/op
# Warmup Iteration   3: 3.720 ns/op
# Warmup Iteration   4: 3.622 ns/op
# Warmup Iteration   5: 3.622 ns/op
Iteration   1: 3.605 ns/op
Iteration   2: 3.921 ns/op
Iteration   3: 3.900 ns/op
Iteration   4: 3.897 ns/op
Iteration   5: 3.892 ns/op

# Run progress: 36.11% complete, ETA 00:38:25
# Fork: 2 of 3
# Warmup Iteration   1: 3.961 ns/op
# Warmup Iteration   2: 3.904 ns/op
# Warmup Iteration   3: 3.886 ns/op
# Warmup Iteration   4: 3.693 ns/op
# Warmup Iteration   5: 3.711 ns/op
Iteration   1: 3.706 ns/op
Iteration   2: 3.893 ns/op
Iteration   3: 3.886 ns/op
Iteration   4: 3.878 ns/op
Iteration   5: 3.878 ns/op

# Run progress: 38.89% complete, ETA 00:36:45
# Fork: 3 of 3
# Warmup Iteration   1: 3.935 ns/op
# Warmup Iteration   2: 3.867 ns/op
# Warmup Iteration   3: 3.874 ns/op
# Warmup Iteration   4: 3.871 ns/op
# Warmup Iteration   5: 3.867 ns/op
Iteration   1: 3.874 ns/op
Iteration   2: 3.874 ns/op
Iteration   3: 3.876 ns/op
Iteration   4: 3.866 ns/op
Iteration   5: 3.862 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MegamorphicAbsClassCallBenchmark.megamorphic_6":
  3.854 ±(99.9%) 0.090 ns/op [Average]
  (min, avg, max) = (3.605, 3.854, 3.921), stdev = 0.084
  CI (99.9%): [3.764, 3.944] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MegamorphicAbsClassCallBenchmark.monomorphic
# Parameters: (param = 3)

# Run progress: 41.67% complete, ETA 00:35:04
# Fork: 1 of 3
# Warmup Iteration   1: 3.962 ns/op
# Warmup Iteration   2: 3.952 ns/op
# Warmup Iteration   3: 4.000 ns/op
# Warmup Iteration   4: 4.008 ns/op
# Warmup Iteration   5: 4.001 ns/op
Iteration   1: 4.009 ns/op
Iteration   2: 4.007 ns/op
Iteration   3: 3.999 ns/op
Iteration   4: 3.995 ns/op
Iteration   5: 3.994 ns/op

# Run progress: 44.44% complete, ETA 00:33:24
# Fork: 2 of 3
# Warmup Iteration   1: 3.947 ns/op
# Warmup Iteration   2: 3.752 ns/op
# Warmup Iteration   3: 3.813 ns/op
# Warmup Iteration   4: 3.824 ns/op
# Warmup Iteration   5: 3.831 ns/op
Iteration   1: 4.007 ns/op
Iteration   2: 3.999 ns/op
Iteration   3: 4.016 ns/op
Iteration   4: 4.008 ns/op
Iteration   5: 3.999 ns/op

# Run progress: 47.22% complete, ETA 00:31:44
# Fork: 3 of 3
# Warmup Iteration   1: 3.946 ns/op
# Warmup Iteration   2: 3.943 ns/op
# Warmup Iteration   3: 3.988 ns/op
# Warmup Iteration   4: 4.000 ns/op
# Warmup Iteration   5: 3.994 ns/op
Iteration   1: 3.992 ns/op
Iteration   2: 3.988 ns/op
Iteration   3: 3.981 ns/op
Iteration   4: 3.982 ns/op
Iteration   5: 3.994 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MegamorphicAbsClassCallBenchmark.monomorphic":
  3.998 ±(99.9%) 0.011 ns/op [Average]
  (min, avg, max) = (3.981, 3.998, 4.016), stdev = 0.010
  CI (99.9%): [3.987, 4.009] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MegamorphicAbsClassCallBenchmarkV2.test
# Parameters: (mode = MONOMORPHIC, size = 144000)

# Run progress: 50.00% complete, ETA 00:30:04
# Fork: 1 of 3
# Warmup Iteration   1: 1.169 ns/op
# Warmup Iteration   2: 1.237 ns/op
# Warmup Iteration   3: 1.239 ns/op
# Warmup Iteration   4: 1.243 ns/op
# Warmup Iteration   5: 1.248 ns/op
Iteration   1: 1.243 ns/op
Iteration   2: 1.243 ns/op
Iteration   3: 1.246 ns/op
Iteration   4: 1.247 ns/op
Iteration   5: 1.247 ns/op

# Run progress: 52.78% complete, ETA 00:28:23
# Fork: 2 of 3
# Warmup Iteration   1: 1.188 ns/op
# Warmup Iteration   2: 1.192 ns/op
# Warmup Iteration   3: 1.198 ns/op
# Warmup Iteration   4: 1.201 ns/op
# Warmup Iteration   5: 1.205 ns/op
Iteration   1: 1.206 ns/op
Iteration   2: 1.218 ns/op
Iteration   3: 1.229 ns/op
Iteration   4: 1.230 ns/op
Iteration   5: 1.229 ns/op

# Run progress: 55.56% complete, ETA 00:26:43
# Fork: 3 of 3
# Warmup Iteration   1: 1.347 ns/op
# Warmup Iteration   2: 1.307 ns/op
# Warmup Iteration   3: 1.303 ns/op
# Warmup Iteration   4: 1.303 ns/op
# Warmup Iteration   5: 1.302 ns/op
Iteration   1: 1.301 ns/op
Iteration   2: 1.304 ns/op
Iteration   3: 1.305 ns/op
Iteration   4: 1.304 ns/op
Iteration   5: 1.304 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MegamorphicAbsClassCallBenchmarkV2.test":
  1.257 ±(99.9%) 0.038 ns/op [Average]
  (min, avg, max) = (1.206, 1.257, 1.305), stdev = 0.036
  CI (99.9%): [1.219, 1.295] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MegamorphicAbsClassCallBenchmarkV2.test
# Parameters: (mode = BIMORPHIC, size = 144000)

# Run progress: 58.33% complete, ETA 00:25:03
# Fork: 1 of 3
# Warmup Iteration   1: 1.359 ns/op
# Warmup Iteration   2: 1.357 ns/op
# Warmup Iteration   3: 1.355 ns/op
# Warmup Iteration   4: 1.375 ns/op
# Warmup Iteration   5: 1.376 ns/op
Iteration   1: 1.376 ns/op
Iteration   2: 1.375 ns/op
Iteration   3: 1.377 ns/op
Iteration   4: 1.376 ns/op
Iteration   5: 1.295 ns/op

# Run progress: 61.11% complete, ETA 00:23:23
# Fork: 2 of 3
# Warmup Iteration   1: 1.335 ns/op
# Warmup Iteration   2: 1.336 ns/op
# Warmup Iteration   3: 1.324 ns/op
# Warmup Iteration   4: 1.326 ns/op
# Warmup Iteration   5: 1.323 ns/op
Iteration   1: 1.321 ns/op
Iteration   2: 1.321 ns/op
Iteration   3: 1.320 ns/op
Iteration   4: 1.319 ns/op
Iteration   5: 1.321 ns/op

# Run progress: 63.89% complete, ETA 00:21:43
# Fork: 3 of 3
# Warmup Iteration   1: 1.376 ns/op
# Warmup Iteration   2: 1.376 ns/op
# Warmup Iteration   3: 1.363 ns/op
# Warmup Iteration   4: 1.360 ns/op
# Warmup Iteration   5: 1.361 ns/op
Iteration   1: 1.361 ns/op
Iteration   2: 1.363 ns/op
Iteration   3: 1.365 ns/op
Iteration   4: 1.365 ns/op
Iteration   5: 1.365 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MegamorphicAbsClassCallBenchmarkV2.test":
  1.348 ±(99.9%) 0.030 ns/op [Average]
  (min, avg, max) = (1.295, 1.348, 1.377), stdev = 0.028
  CI (99.9%): [1.318, 1.378] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MegamorphicAbsClassCallBenchmarkV2.test
# Parameters: (mode = MEGAMORPHIC_3, size = 144000)

# Run progress: 66.67% complete, ETA 00:20:02
# Fork: 1 of 3
# Warmup Iteration   1: 2.989 ns/op
# Warmup Iteration   2: 2.950 ns/op
# Warmup Iteration   3: 2.945 ns/op
# Warmup Iteration   4: 2.941 ns/op
# Warmup Iteration   5: 2.978 ns/op
Iteration   1: 3.019 ns/op
Iteration   2: 3.004 ns/op
Iteration   3: 3.005 ns/op
Iteration   4: 3.004 ns/op
Iteration   5: 2.994 ns/op

# Run progress: 69.44% complete, ETA 00:18:22
# Fork: 2 of 3
# Warmup Iteration   1: 2.942 ns/op
# Warmup Iteration   2: 2.917 ns/op
# Warmup Iteration   3: 2.915 ns/op
# Warmup Iteration   4: 2.915 ns/op
# Warmup Iteration   5: 2.967 ns/op
Iteration   1: 2.937 ns/op
Iteration   2: 2.914 ns/op
Iteration   3: 2.915 ns/op
Iteration   4: 2.913 ns/op
Iteration   5: 2.912 ns/op

# Run progress: 72.22% complete, ETA 00:16:42
# Fork: 3 of 3
# Warmup Iteration   1: 2.679 ns/op
# Warmup Iteration   2: 2.675 ns/op
# Warmup Iteration   3: 2.673 ns/op
# Warmup Iteration   4: 2.690 ns/op
# Warmup Iteration   5: 2.697 ns/op
Iteration   1: 2.675 ns/op
Iteration   2: 2.690 ns/op
Iteration   3: 2.689 ns/op
Iteration   4: 2.689 ns/op
Iteration   5: 2.691 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MegamorphicAbsClassCallBenchmarkV2.test":
  2.870 ±(99.9%) 0.149 ns/op [Average]
  (min, avg, max) = (2.675, 2.870, 3.019), stdev = 0.139
  CI (99.9%): [2.721, 3.019] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MegamorphicAbsClassCallBenchmarkV2.test
# Parameters: (mode = MEGAMORPHIC_4, size = 144000)

# Run progress: 75.00% complete, ETA 00:15:02
# Fork: 1 of 3
# Warmup Iteration   1: 2.993 ns/op
# Warmup Iteration   2: 2.941 ns/op
# Warmup Iteration   3: 2.929 ns/op
# Warmup Iteration   4: 2.925 ns/op
# Warmup Iteration   5: 2.989 ns/op
Iteration   1: 2.941 ns/op
Iteration   2: 2.916 ns/op
Iteration   3: 2.916 ns/op
Iteration   4: 2.919 ns/op
Iteration   5: 2.911 ns/op

# Run progress: 77.78% complete, ETA 00:13:21
# Fork: 2 of 3
# Warmup Iteration   1: 2.699 ns/op
# Warmup Iteration   2: 2.692 ns/op
# Warmup Iteration   3: 2.696 ns/op
# Warmup Iteration   4: 2.704 ns/op
# Warmup Iteration   5: 2.729 ns/op
Iteration   1: 2.705 ns/op
Iteration   2: 2.708 ns/op
Iteration   3: 2.711 ns/op
Iteration   4: 2.712 ns/op
Iteration   5: 2.715 ns/op

# Run progress: 80.56% complete, ETA 00:11:41
# Fork: 3 of 3
# Warmup Iteration   1: 2.995 ns/op
# Warmup Iteration   2: 2.805 ns/op
# Warmup Iteration   3: 2.810 ns/op
# Warmup Iteration   4: 2.920 ns/op
# Warmup Iteration   5: 2.959 ns/op
Iteration   1: 2.933 ns/op
Iteration   2: 2.908 ns/op
Iteration   3: 2.906 ns/op
Iteration   4: 2.899 ns/op
Iteration   5: 2.899 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MegamorphicAbsClassCallBenchmarkV2.test":
  2.847 ±(99.9%) 0.107 ns/op [Average]
  (min, avg, max) = (2.705, 2.847, 2.941), stdev = 0.100
  CI (99.9%): [2.739, 2.954] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MegamorphicAbsClassCallBenchmarkV2.test
# Parameters: (mode = MEGAMORPHIC_5, size = 144000)

# Run progress: 83.33% complete, ETA 00:10:01
# Fork: 1 of 3
# Warmup Iteration   1: 2.775 ns/op
# Warmup Iteration   2: 2.761 ns/op
# Warmup Iteration   3: 2.771 ns/op
# Warmup Iteration   4: 2.781 ns/op
# Warmup Iteration   5: 2.793 ns/op
Iteration   1: 2.788 ns/op
Iteration   2: 2.761 ns/op
Iteration   3: 2.897 ns/op
Iteration   4: 2.896 ns/op
Iteration   5: 2.887 ns/op

# Run progress: 86.11% complete, ETA 00:08:21
# Fork: 2 of 3
# Warmup Iteration   1: 2.969 ns/op
# Warmup Iteration   2: 2.954 ns/op
# Warmup Iteration   3: 2.958 ns/op
# Warmup Iteration   4: 2.940 ns/op
# Warmup Iteration   5: 2.970 ns/op
Iteration   1: 2.975 ns/op
Iteration   2: 2.953 ns/op
Iteration   3: 2.947 ns/op
Iteration   4: 2.946 ns/op
Iteration   5: 2.941 ns/op

# Run progress: 88.89% complete, ETA 00:06:40
# Fork: 3 of 3
# Warmup Iteration   1: 2.822 ns/op
# Warmup Iteration   2: 2.810 ns/op
# Warmup Iteration   3: 2.804 ns/op
# Warmup Iteration   4: 2.803 ns/op
# Warmup Iteration   5: 2.835 ns/op
Iteration   1: 2.824 ns/op
Iteration   2: 2.805 ns/op
Iteration   3: 2.804 ns/op
Iteration   4: 2.804 ns/op
Iteration   5: 2.806 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MegamorphicAbsClassCallBenchmarkV2.test":
  2.869 ±(99.9%) 0.078 ns/op [Average]
  (min, avg, max) = (2.761, 2.869, 2.975), stdev = 0.073
  CI (99.9%): [2.791, 2.947] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MegamorphicAbsClassCallBenchmarkV2.test
# Parameters: (mode = MEGAMORPHIC_6, size = 144000)

# Run progress: 91.67% complete, ETA 00:05:00
# Fork: 1 of 3
# Warmup Iteration   1: 2.713 ns/op
# Warmup Iteration   2: 2.693 ns/op
# Warmup Iteration   3: 2.693 ns/op
# Warmup Iteration   4: 2.708 ns/op
# Warmup Iteration   5: 2.744 ns/op
Iteration   1: 2.718 ns/op
Iteration   2: 2.719 ns/op
Iteration   3: 2.727 ns/op
Iteration   4: 2.730 ns/op
Iteration   5: 2.729 ns/op

# Run progress: 94.44% complete, ETA 00:03:20
# Fork: 2 of 3
# Warmup Iteration   1: 2.804 ns/op
# Warmup Iteration   2: 2.779 ns/op
# Warmup Iteration   3: 2.763 ns/op
# Warmup Iteration   4: 2.763 ns/op
# Warmup Iteration   5: 2.771 ns/op
Iteration   1: 2.774 ns/op
Iteration   2: 2.755 ns/op
Iteration   3: 2.756 ns/op
Iteration   4: 2.760 ns/op
Iteration   5: 2.753 ns/op

# Run progress: 97.22% complete, ETA 00:01:40
# Fork: 3 of 3
# Warmup Iteration   1: 2.960 ns/op
# Warmup Iteration   2: 2.883 ns/op
# Warmup Iteration   3: 2.888 ns/op
# Warmup Iteration   4: 2.894 ns/op
# Warmup Iteration   5: 2.902 ns/op
Iteration   1: 2.841 ns/op
Iteration   2: 2.857 ns/op
Iteration   3: 2.917 ns/op
Iteration   4: 2.914 ns/op
Iteration   5: 2.913 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MegamorphicAbsClassCallBenchmarkV2.test":
  2.791 ±(99.9%) 0.081 ns/op [Average]
  (min, avg, max) = (2.718, 2.791, 2.917), stdev = 0.076
  CI (99.9%): [2.710, 2.872] (assumes normal distribution)


# Run complete. Total time: 01:00:08

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                              (mode)  (param)  (size)  Mode  Cnt  Score   Error  Units
MegamorphicAbsClassCallBenchmark.bimorphic                N/A        3     N/A  avgt   15  3.047 ± 0.113  ns/op
MegamorphicAbsClassCallBenchmark.megamorphic_3            N/A        3     N/A  avgt   15  4.055 ± 0.143  ns/op
MegamorphicAbsClassCallBenchmark.megamorphic_4            N/A        3     N/A  avgt   15  3.776 ± 0.058  ns/op
MegamorphicAbsClassCallBenchmark.megamorphic_5            N/A        3     N/A  avgt   15  3.872 ± 0.110  ns/op
MegamorphicAbsClassCallBenchmark.megamorphic_6            N/A        3     N/A  avgt   15  3.854 ± 0.090  ns/op
MegamorphicAbsClassCallBenchmark.monomorphic              N/A        3     N/A  avgt   15  3.998 ± 0.011  ns/op
MegamorphicAbsClassCallBenchmarkV2.test           MONOMORPHIC      N/A  144000  avgt   15  1.257 ± 0.038  ns/op
MegamorphicAbsClassCallBenchmarkV2.test             BIMORPHIC      N/A  144000  avgt   15  1.348 ± 0.030  ns/op
MegamorphicAbsClassCallBenchmarkV2.test         MEGAMORPHIC_3      N/A  144000  avgt   15  2.870 ± 0.149  ns/op
MegamorphicAbsClassCallBenchmarkV2.test         MEGAMORPHIC_4      N/A  144000  avgt   15  2.847 ± 0.107  ns/op
MegamorphicAbsClassCallBenchmarkV2.test         MEGAMORPHIC_5      N/A  144000  avgt   15  2.869 ± 0.078  ns/op
MegamorphicAbsClassCallBenchmarkV2.test         MEGAMORPHIC_6      N/A  144000  avgt   15  2.791 ± 0.081  ns/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_c1_c2_jit/MegamorphicAbsClassCallBenchmark.json
Running java  -jar benchmarks/target/benchmarks.jar .*MegamorphicInterfaceCallBenchmark.*  -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_c1_c2_jit/MegamorphicInterfaceCallBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MegamorphicInterfaceCallBenchmark.bimorphic
# Parameters: (param = 3)

# Run progress: 0.00% complete, ETA 00:30:00
# Fork: 1 of 3
# Warmup Iteration   1: 3.392 ns/op
# Warmup Iteration   2: 3.239 ns/op
# Warmup Iteration   3: 3.164 ns/op
# Warmup Iteration   4: 3.154 ns/op
# Warmup Iteration   5: 3.149 ns/op
Iteration   1: 3.144 ns/op
Iteration   2: 2.995 ns/op
Iteration   3: 2.999 ns/op
Iteration   4: 3.004 ns/op
Iteration   5: 3.011 ns/op

# Run progress: 5.56% complete, ETA 00:28:24
# Fork: 2 of 3
# Warmup Iteration   1: 3.198 ns/op
# Warmup Iteration   2: 3.093 ns/op
# Warmup Iteration   3: 3.008 ns/op
# Warmup Iteration   4: 3.152 ns/op
# Warmup Iteration   5: 3.147 ns/op
Iteration   1: 3.142 ns/op
Iteration   2: 3.137 ns/op
Iteration   3: 3.136 ns/op
Iteration   4: 3.134 ns/op
Iteration   5: 3.132 ns/op

# Run progress: 11.11% complete, ETA 00:26:43
# Fork: 3 of 3
# Warmup Iteration   1: 3.323 ns/op
# Warmup Iteration   2: 3.214 ns/op
# Warmup Iteration   3: 3.148 ns/op
# Warmup Iteration   4: 3.141 ns/op
# Warmup Iteration   5: 3.141 ns/op
Iteration   1: 3.140 ns/op
Iteration   2: 3.138 ns/op
Iteration   3: 3.130 ns/op
Iteration   4: 3.136 ns/op
Iteration   5: 3.140 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MegamorphicInterfaceCallBenchmark.bimorphic":
  3.101 ±(99.9%) 0.066 ns/op [Average]
  (min, avg, max) = (2.995, 3.101, 3.144), stdev = 0.062
  CI (99.9%): [3.035, 3.168] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MegamorphicInterfaceCallBenchmark.megamorphic_3
# Parameters: (param = 3)

# Run progress: 16.67% complete, ETA 00:25:03
# Fork: 1 of 3
# Warmup Iteration   1: 5.996 ns/op
# Warmup Iteration   2: 6.154 ns/op
# Warmup Iteration   3: 5.909 ns/op
# Warmup Iteration   4: 5.907 ns/op
# Warmup Iteration   5: 5.990 ns/op
Iteration   1: 5.905 ns/op
Iteration   2: 5.970 ns/op
Iteration   3: 5.897 ns/op
Iteration   4: 5.914 ns/op
Iteration   5: 5.907 ns/op

# Run progress: 22.22% complete, ETA 00:23:23
# Fork: 2 of 3
# Warmup Iteration   1: 5.726 ns/op
# Warmup Iteration   2: 5.702 ns/op
# Warmup Iteration   3: 5.659 ns/op
# Warmup Iteration   4: 5.508 ns/op
# Warmup Iteration   5: 5.982 ns/op
Iteration   1: 5.953 ns/op
Iteration   2: 5.937 ns/op
Iteration   3: 5.933 ns/op
Iteration   4: 5.931 ns/op
Iteration   5: 5.927 ns/op

# Run progress: 27.78% complete, ETA 00:21:42
# Fork: 3 of 3
# Warmup Iteration   1: 6.621 ns/op
# Warmup Iteration   2: 6.327 ns/op
# Warmup Iteration   3: 6.304 ns/op
# Warmup Iteration   4: 6.308 ns/op
# Warmup Iteration   5: 6.310 ns/op
Iteration   1: 6.312 ns/op
Iteration   2: 6.319 ns/op
Iteration   3: 6.319 ns/op
Iteration   4: 6.316 ns/op
Iteration   5: 6.329 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MegamorphicInterfaceCallBenchmark.megamorphic_3":
  6.058 ±(99.9%) 0.205 ns/op [Average]
  (min, avg, max) = (5.897, 6.058, 6.329), stdev = 0.192
  CI (99.9%): [5.853, 6.263] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MegamorphicInterfaceCallBenchmark.megamorphic_4
# Parameters: (param = 3)

# Run progress: 33.33% complete, ETA 00:20:02
# Fork: 1 of 3
# Warmup Iteration   1: 5.329 ns/op
# Warmup Iteration   2: 5.832 ns/op
# Warmup Iteration   3: 5.369 ns/op
# Warmup Iteration   4: 5.374 ns/op
# Warmup Iteration   5: 5.392 ns/op
Iteration   1: 5.387 ns/op
Iteration   2: 5.391 ns/op
Iteration   3: 5.385 ns/op
Iteration   4: 5.374 ns/op
Iteration   5: 5.383 ns/op

# Run progress: 38.89% complete, ETA 00:18:22
# Fork: 2 of 3
# Warmup Iteration   1: 5.953 ns/op
# Warmup Iteration   2: 5.470 ns/op
# Warmup Iteration   3: 5.490 ns/op
# Warmup Iteration   4: 5.485 ns/op
# Warmup Iteration   5: 5.488 ns/op
Iteration   1: 5.487 ns/op
Iteration   2: 5.484 ns/op
Iteration   3: 5.533 ns/op
Iteration   4: 5.484 ns/op
Iteration   5: 5.486 ns/op

# Run progress: 44.44% complete, ETA 00:16:42
# Fork: 3 of 3
# Warmup Iteration   1: 5.789 ns/op
# Warmup Iteration   2: 5.889 ns/op
# Warmup Iteration   3: 5.792 ns/op
# Warmup Iteration   4: 5.767 ns/op
# Warmup Iteration   5: 5.768 ns/op
Iteration   1: 5.771 ns/op
Iteration   2: 5.768 ns/op
Iteration   3: 5.770 ns/op
Iteration   4: 5.761 ns/op
Iteration   5: 5.767 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MegamorphicInterfaceCallBenchmark.megamorphic_4":
  5.549 ±(99.9%) 0.179 ns/op [Average]
  (min, avg, max) = (5.374, 5.549, 5.771), stdev = 0.167
  CI (99.9%): [5.370, 5.727] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MegamorphicInterfaceCallBenchmark.megamorphic_5
# Parameters: (param = 3)

# Run progress: 50.00% complete, ETA 00:15:02
# Fork: 1 of 3
# Warmup Iteration   1: 5.299 ns/op
# Warmup Iteration   2: 5.249 ns/op
# Warmup Iteration   3: 5.292 ns/op
# Warmup Iteration   4: 5.300 ns/op
# Warmup Iteration   5: 5.296 ns/op
Iteration   1: 5.290 ns/op
Iteration   2: 5.303 ns/op
Iteration   3: 5.569 ns/op
Iteration   4: 5.548 ns/op
Iteration   5: 5.552 ns/op

# Run progress: 55.56% complete, ETA 00:13:21
# Fork: 2 of 3
# Warmup Iteration   1: 5.307 ns/op
# Warmup Iteration   2: 5.144 ns/op
# Warmup Iteration   3: 5.168 ns/op
# Warmup Iteration   4: 5.171 ns/op
# Warmup Iteration   5: 5.176 ns/op
Iteration   1: 5.190 ns/op
Iteration   2: 5.193 ns/op
Iteration   3: 5.215 ns/op
Iteration   4: 5.197 ns/op
Iteration   5: 5.207 ns/op

# Run progress: 61.11% complete, ETA 00:11:41
# Fork: 3 of 3
# Warmup Iteration   1: 5.674 ns/op
# Warmup Iteration   2: 5.554 ns/op
# Warmup Iteration   3: 5.577 ns/op
# Warmup Iteration   4: 5.559 ns/op
# Warmup Iteration   5: 5.539 ns/op
Iteration   1: 5.127 ns/op
Iteration   2: 5.143 ns/op
Iteration   3: 5.325 ns/op
Iteration   4: 5.325 ns/op
Iteration   5: 5.323 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MegamorphicInterfaceCallBenchmark.megamorphic_5":
  5.300 ±(99.9%) 0.158 ns/op [Average]
  (min, avg, max) = (5.127, 5.300, 5.569), stdev = 0.147
  CI (99.9%): [5.143, 5.458] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MegamorphicInterfaceCallBenchmark.megamorphic_6
# Parameters: (param = 3)

# Run progress: 66.67% complete, ETA 00:10:01
# Fork: 1 of 3
# Warmup Iteration   1: 5.067 ns/op
# Warmup Iteration   2: 5.190 ns/op
# Warmup Iteration   3: 5.223 ns/op
# Warmup Iteration   4: 5.215 ns/op
# Warmup Iteration   5: 5.217 ns/op
Iteration   1: 5.226 ns/op
Iteration   2: 5.212 ns/op
Iteration   3: 5.212 ns/op
Iteration   4: 5.216 ns/op
Iteration   5: 5.214 ns/op

# Run progress: 72.22% complete, ETA 00:08:21
# Fork: 2 of 3
# Warmup Iteration   1: 5.558 ns/op
# Warmup Iteration   2: 5.200 ns/op
# Warmup Iteration   3: 5.229 ns/op
# Warmup Iteration   4: 5.228 ns/op
# Warmup Iteration   5: 5.229 ns/op
Iteration   1: 5.227 ns/op
Iteration   2: 5.539 ns/op
Iteration   3: 5.209 ns/op
Iteration   4: 5.224 ns/op
Iteration   5: 5.230 ns/op

# Run progress: 77.78% complete, ETA 00:06:40
# Fork: 3 of 3
# Warmup Iteration   1: 5.244 ns/op
# Warmup Iteration   2: 5.186 ns/op
# Warmup Iteration   3: 5.079 ns/op
# Warmup Iteration   4: 5.079 ns/op
# Warmup Iteration   5: 5.099 ns/op
Iteration   1: 5.095 ns/op
Iteration   2: 5.108 ns/op
Iteration   3: 5.104 ns/op
Iteration   4: 5.103 ns/op
Iteration   5: 5.166 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MegamorphicInterfaceCallBenchmark.megamorphic_6":
  5.206 ±(99.9%) 0.113 ns/op [Average]
  (min, avg, max) = (5.095, 5.206, 5.539), stdev = 0.106
  CI (99.9%): [5.092, 5.319] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.MegamorphicInterfaceCallBenchmark.monomorphic
# Parameters: (param = 3)

# Run progress: 83.33% complete, ETA 00:05:00
# Fork: 1 of 3
# Warmup Iteration   1: 4.120 ns/op
# Warmup Iteration   2: 4.134 ns/op
# Warmup Iteration   3: 4.140 ns/op
# Warmup Iteration   4: 4.123 ns/op
# Warmup Iteration   5: 4.125 ns/op
Iteration   1: 4.131 ns/op
Iteration   2: 4.123 ns/op
Iteration   3: 4.112 ns/op
Iteration   4: 4.100 ns/op
Iteration   5: 4.114 ns/op

# Run progress: 88.89% complete, ETA 00:03:20
# Fork: 2 of 3
# Warmup Iteration   1: 3.984 ns/op
# Warmup Iteration   2: 4.094 ns/op
# Warmup Iteration   3: 4.109 ns/op
# Warmup Iteration   4: 4.122 ns/op
# Warmup Iteration   5: 4.115 ns/op
Iteration   1: 4.107 ns/op
Iteration   2: 4.090 ns/op
Iteration   3: 4.087 ns/op
Iteration   4: 4.087 ns/op
Iteration   5: 3.797 ns/op

# Run progress: 94.44% complete, ETA 00:01:40
# Fork: 3 of 3
# Warmup Iteration   1: 4.046 ns/op
# Warmup Iteration   2: 4.090 ns/op
# Warmup Iteration   3: 4.097 ns/op
# Warmup Iteration   4: 4.102 ns/op
# Warmup Iteration   5: 4.101 ns/op
Iteration   1: 4.094 ns/op
Iteration   2: 4.101 ns/op
Iteration   3: 3.795 ns/op
Iteration   4: 3.811 ns/op
Iteration   5: 3.815 ns/op


Result "com.ionutbalosin.jvm.jit.benchmark.MegamorphicInterfaceCallBenchmark.monomorphic":
  4.024 ±(99.9%) 0.147 ns/op [Average]
  (min, avg, max) = (3.795, 4.024, 4.131), stdev = 0.138
  CI (99.9%): [3.877, 4.171] (assumes normal distribution)


# Run complete. Total time: 00:30:04

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                        (param)  Mode  Cnt  Score   Error  Units
MegamorphicInterfaceCallBenchmark.bimorphic            3  avgt   15  3.101 ± 0.066  ns/op
MegamorphicInterfaceCallBenchmark.megamorphic_3        3  avgt   15  6.058 ± 0.205  ns/op
MegamorphicInterfaceCallBenchmark.megamorphic_4        3  avgt   15  5.549 ± 0.179  ns/op
MegamorphicInterfaceCallBenchmark.megamorphic_5        3  avgt   15  5.300 ± 0.158  ns/op
MegamorphicInterfaceCallBenchmark.megamorphic_6        3  avgt   15  5.206 ± 0.113  ns/op
MegamorphicInterfaceCallBenchmark.monomorphic          3  avgt   15  4.024 ± 0.147  ns/op

Benchmark result is saved to results/report-openjdk-13/hotspotvm_c1_c2_jit/MegamorphicInterfaceCallBenchmark.json
Running java  -jar benchmarks/target/benchmarks.jar .*ChainingLambdaBenchmark.* -prof gc -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_c1_c2_jit/ChainingLambdaBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.baseline
# Parameters: (value = 42)

# Run progress: 0.00% complete, ETA 00:55:00
# Fork: 1 of 3
# Warmup Iteration   1: 2.314 ns/op
# Warmup Iteration   2: 2.302 ns/op
# Warmup Iteration   3: 2.077 ns/op
# Warmup Iteration   4: 2.080 ns/op
# Warmup Iteration   5: 2.078 ns/op
Iteration   1: 2.077 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.081 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.171 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.071 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.079 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 3.03% complete, ETA 00:56:11
# Fork: 2 of 3
# Warmup Iteration   1: 2.298 ns/op
# Warmup Iteration   2: 2.394 ns/op
# Warmup Iteration   3: 2.160 ns/op
# Warmup Iteration   4: 2.160 ns/op
# Warmup Iteration   5: 2.158 ns/op
Iteration   1: 2.153 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.155 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.005 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.019 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.020 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 6.06% complete, ETA 00:54:24
# Fork: 3 of 3
# Warmup Iteration   1: 2.267 ns/op
# Warmup Iteration   2: 2.392 ns/op
# Warmup Iteration   3: 2.152 ns/op
# Warmup Iteration   4: 2.151 ns/op
# Warmup Iteration   5: 2.154 ns/op
Iteration   1: 2.147 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.146 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.148 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.148 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.150 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.baseline":
  2.105 ±(99.9%) 0.061 ns/op [Average]
  (min, avg, max) = (2.005, 2.105, 2.171), stdev = 0.057
  CI (99.9%): [2.043, 2.166] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.baseline:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.baseline:·gc.alloc.rate.norm":
  ≈ 10⁻⁷ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.baseline:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_1
# Parameters: (value = 42)

# Run progress: 9.09% complete, ETA 00:52:39
# Fork: 1 of 3
# Warmup Iteration   1: 2.161 ns/op
# Warmup Iteration   2: 2.400 ns/op
# Warmup Iteration   3: 2.008 ns/op
# Warmup Iteration   4: 2.184 ns/op
# Warmup Iteration   5: 2.180 ns/op
Iteration   1: 2.177 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.154 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.147 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.066 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.068 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 12.12% complete, ETA 00:50:53
# Fork: 2 of 3
# Warmup Iteration   1: 2.281 ns/op
# Warmup Iteration   2: 2.408 ns/op
# Warmup Iteration   3: 2.169 ns/op
# Warmup Iteration   4: 2.167 ns/op
# Warmup Iteration   5: 2.165 ns/op
Iteration   1: 2.154 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.164 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.169 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.165 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.164 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 15.15% complete, ETA 00:49:08
# Fork: 3 of 3
# Warmup Iteration   1: 2.242 ns/op
# Warmup Iteration   2: 2.207 ns/op
# Warmup Iteration   3: 2.005 ns/op
# Warmup Iteration   4: 2.014 ns/op
# Warmup Iteration   5: 2.076 ns/op
Iteration   1: 2.071 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.158 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.154 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.004 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.012 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_1":
  2.122 ±(99.9%) 0.064 ns/op [Average]
  (min, avg, max) = (2.004, 2.122, 2.177), stdev = 0.060
  CI (99.9%): [2.058, 2.186] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_1:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_1:·gc.alloc.rate.norm":
  ≈ 10⁻⁷ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_1:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_12
# Parameters: (value = 42)

# Run progress: 18.18% complete, ETA 00:47:22
# Fork: 1 of 3
# Warmup Iteration   1: 2.183 ns/op
# Warmup Iteration   2: 1.985 ns/op
# Warmup Iteration   3: 2.230 ns/op
# Warmup Iteration   4: 2.011 ns/op
# Warmup Iteration   5: 2.016 ns/op
Iteration   1: 2.019 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.017 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.018 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.079 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.077 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 21.21% complete, ETA 00:45:37
# Fork: 2 of 3
# Warmup Iteration   1: 2.182 ns/op
# Warmup Iteration   2: 2.307 ns/op
# Warmup Iteration   3: 2.071 ns/op
# Warmup Iteration   4: 2.074 ns/op
# Warmup Iteration   5: 2.164 ns/op
Iteration   1: 2.071 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.143 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.150 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.127 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.145 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 24.24% complete, ETA 00:43:52
# Fork: 3 of 3
# Warmup Iteration   1: 2.150 ns/op
# Warmup Iteration   2: 2.286 ns/op
# Warmup Iteration   3: 2.141 ns/op
# Warmup Iteration   4: 2.144 ns/op
# Warmup Iteration   5: 2.008 ns/op
Iteration   1: 2.003 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.015 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.014 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.015 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.014 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_12":
  2.060 ±(99.9%) 0.060 ns/op [Average]
  (min, avg, max) = (2.003, 2.060, 2.150), stdev = 0.056
  CI (99.9%): [2.000, 2.121] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_12:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_12:·gc.alloc.rate.norm":
  ≈ 10⁻⁷ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_12:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_16
# Parameters: (value = 42)

# Run progress: 27.27% complete, ETA 00:42:07
# Fork: 1 of 3
# Warmup Iteration   1: 2.127 ns/op
# Warmup Iteration   2: 2.160 ns/op
# Warmup Iteration   3: 2.412 ns/op
# Warmup Iteration   4: 2.158 ns/op
# Warmup Iteration   5: 2.065 ns/op
Iteration   1: 2.172 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.147 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.144 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.144 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.127 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 30.30% complete, ETA 00:40:21
# Fork: 2 of 3
# Warmup Iteration   1: 2.280 ns/op
# Warmup Iteration   2: 2.397 ns/op
# Warmup Iteration   3: 2.063 ns/op
# Warmup Iteration   4: 2.072 ns/op
# Warmup Iteration   5: 2.154 ns/op
Iteration   1: 2.159 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.064 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.063 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.141 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.003 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 33.33% complete, ETA 00:38:36
# Fork: 3 of 3
# Warmup Iteration   1: 2.179 ns/op
# Warmup Iteration   2: 1.989 ns/op
# Warmup Iteration   3: 2.312 ns/op
# Warmup Iteration   4: 2.074 ns/op
# Warmup Iteration   5: 2.076 ns/op
Iteration   1: 2.075 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.072 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.010 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.006 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.178 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_16":
  2.100 ±(99.9%) 0.066 ns/op [Average]
  (min, avg, max) = (2.003, 2.100, 2.178), stdev = 0.062
  CI (99.9%): [2.034, 2.166] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_16:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_16:·gc.alloc.rate.norm":
  ≈ 10⁻⁷ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_16:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_2
# Parameters: (value = 42)

# Run progress: 36.36% complete, ETA 00:36:51
# Fork: 1 of 3
# Warmup Iteration   1: 2.165 ns/op
# Warmup Iteration   2: 2.302 ns/op
# Warmup Iteration   3: 2.072 ns/op
# Warmup Iteration   4: 2.072 ns/op
# Warmup Iteration   5: 2.067 ns/op
Iteration   1: 2.063 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.065 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.015 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.017 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.171 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 39.39% complete, ETA 00:35:05
# Fork: 2 of 3
# Warmup Iteration   1: 2.262 ns/op
# Warmup Iteration   2: 2.217 ns/op
# Warmup Iteration   3: 2.010 ns/op
# Warmup Iteration   4: 2.012 ns/op
# Warmup Iteration   5: 2.012 ns/op
Iteration   1: 2.017 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.167 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.174 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.165 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.153 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 42.42% complete, ETA 00:33:20
# Fork: 3 of 3
# Warmup Iteration   1: 2.096 ns/op
# Warmup Iteration   2: 2.225 ns/op
# Warmup Iteration   3: 2.015 ns/op
# Warmup Iteration   4: 2.021 ns/op
# Warmup Iteration   5: 2.018 ns/op
Iteration   1: 2.022 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.018 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.019 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.022 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.025 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_2":
  2.074 ±(99.9%) 0.074 ns/op [Average]
  (min, avg, max) = (2.015, 2.074, 2.174), stdev = 0.069
  CI (99.9%): [2.000, 2.148] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_2:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_2:·gc.alloc.rate.norm":
  ≈ 10⁻⁷ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_2:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_24
# Parameters: (value = 42)

# Run progress: 45.45% complete, ETA 00:31:35
# Fork: 1 of 3
# Warmup Iteration   1: 2.135 ns/op
# Warmup Iteration   2: 2.248 ns/op
# Warmup Iteration   3: 2.079 ns/op
# Warmup Iteration   4: 2.079 ns/op
# Warmup Iteration   5: 2.161 ns/op
Iteration   1: 2.156 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.075 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.019 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.028 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.159 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 48.48% complete, ETA 00:29:49
# Fork: 2 of 3
# Warmup Iteration   1: 2.272 ns/op
# Warmup Iteration   2: 2.113 ns/op
# Warmup Iteration   3: 2.390 ns/op
# Warmup Iteration   4: 2.132 ns/op
# Warmup Iteration   5: 2.055 ns/op
Iteration   1: 2.132 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.138 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.134 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.134 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.135 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 51.52% complete, ETA 00:28:04
# Fork: 3 of 3
# Warmup Iteration   1: 2.166 ns/op
# Warmup Iteration   2: 2.041 ns/op
# Warmup Iteration   3: 2.309 ns/op
# Warmup Iteration   4: 2.068 ns/op
# Warmup Iteration   5: 2.009 ns/op
Iteration   1: 2.006 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.166 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.021 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.010 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.013 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_24":
  2.088 ±(99.9%) 0.069 ns/op [Average]
  (min, avg, max) = (2.006, 2.088, 2.166), stdev = 0.064
  CI (99.9%): [2.020, 2.157] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_24:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_24:·gc.alloc.rate.norm":
  ≈ 10⁻⁷ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_24:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_3
# Parameters: (value = 42)

# Run progress: 54.55% complete, ETA 00:26:19
# Fork: 1 of 3
# Warmup Iteration   1: 2.118 ns/op
# Warmup Iteration   2: 2.243 ns/op
# Warmup Iteration   3: 2.084 ns/op
# Warmup Iteration   4: 2.079 ns/op
# Warmup Iteration   5: 2.076 ns/op
Iteration   1: 2.080 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.078 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.078 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.079 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.080 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 57.58% complete, ETA 00:24:33
# Fork: 2 of 3
# Warmup Iteration   1: 2.123 ns/op
# Warmup Iteration   2: 2.234 ns/op
# Warmup Iteration   3: 2.447 ns/op
# Warmup Iteration   4: 2.024 ns/op
# Warmup Iteration   5: 2.021 ns/op
Iteration   1: 2.019 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.023 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.022 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.023 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.024 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 60.61% complete, ETA 00:22:48
# Fork: 3 of 3
# Warmup Iteration   1: 2.283 ns/op
# Warmup Iteration   2: 2.140 ns/op
# Warmup Iteration   3: 2.384 ns/op
# Warmup Iteration   4: 2.151 ns/op
# Warmup Iteration   5: 2.150 ns/op
Iteration   1: 2.155 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.152 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.153 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.146 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.148 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_3":
  2.084 ±(99.9%) 0.058 ns/op [Average]
  (min, avg, max) = (2.019, 2.084, 2.155), stdev = 0.055
  CI (99.9%): [2.026, 2.142] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_3:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_3:·gc.alloc.rate.norm":
  ≈ 10⁻⁷ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_3:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_4
# Parameters: (value = 42)

# Run progress: 63.64% complete, ETA 00:21:03
# Fork: 1 of 3
# Warmup Iteration   1: 2.248 ns/op
# Warmup Iteration   2: 2.120 ns/op
# Warmup Iteration   3: 2.382 ns/op
# Warmup Iteration   4: 2.057 ns/op
# Warmup Iteration   5: 2.069 ns/op
Iteration   1: 2.067 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.075 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.059 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.060 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.063 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 66.67% complete, ETA 00:19:18
# Fork: 2 of 3
# Warmup Iteration   1: 2.252 ns/op
# Warmup Iteration   2: 2.388 ns/op
# Warmup Iteration   3: 2.054 ns/op
# Warmup Iteration   4: 2.058 ns/op
# Warmup Iteration   5: 2.060 ns/op
Iteration   1: 2.062 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.062 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.067 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.064 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.070 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 69.70% complete, ETA 00:17:32
# Fork: 3 of 3
# Warmup Iteration   1: 2.267 ns/op
# Warmup Iteration   2: 2.138 ns/op
# Warmup Iteration   3: 2.390 ns/op
# Warmup Iteration   4: 2.384 ns/op
# Warmup Iteration   5: 2.148 ns/op
Iteration   1: 2.151 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.155 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.148 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.146 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.147 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_4":
  2.093 ±(99.9%) 0.044 ns/op [Average]
  (min, avg, max) = (2.059, 2.093, 2.155), stdev = 0.042
  CI (99.9%): [2.049, 2.137] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_4:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_4:·gc.alloc.rate.norm":
  ≈ 10⁻⁷ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_4:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_5
# Parameters: (value = 42)

# Run progress: 72.73% complete, ETA 00:15:47
# Fork: 1 of 3
# Warmup Iteration   1: 2.246 ns/op
# Warmup Iteration   2: 2.277 ns/op
# Warmup Iteration   3: 2.060 ns/op
# Warmup Iteration   4: 2.149 ns/op
# Warmup Iteration   5: 2.147 ns/op
Iteration   1: 2.145 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.143 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.141 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.141 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.145 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 75.76% complete, ETA 00:14:02
# Fork: 2 of 3
# Warmup Iteration   1: 2.144 ns/op
# Warmup Iteration   2: 2.268 ns/op
# Warmup Iteration   3: 2.047 ns/op
# Warmup Iteration   4: 2.057 ns/op
# Warmup Iteration   5: 2.060 ns/op
Iteration   1: 2.012 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.017 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.019 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.022 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.022 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 78.79% complete, ETA 00:12:16
# Fork: 3 of 3
# Warmup Iteration   1: 2.270 ns/op
# Warmup Iteration   2: 2.398 ns/op
# Warmup Iteration   3: 2.154 ns/op
# Warmup Iteration   4: 2.153 ns/op
# Warmup Iteration   5: 2.150 ns/op
Iteration   1: 2.146 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.144 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.135 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.136 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.133 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_5":
  2.100 ±(99.9%) 0.064 ns/op [Average]
  (min, avg, max) = (2.012, 2.100, 2.146), stdev = 0.060
  CI (99.9%): [2.036, 2.164] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_5:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_5:·gc.alloc.rate.norm":
  ≈ 10⁻⁷ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_5:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_6
# Parameters: (value = 42)

# Run progress: 81.82% complete, ETA 00:10:31
# Fork: 1 of 3
# Warmup Iteration   1: 2.147 ns/op
# Warmup Iteration   2: 2.272 ns/op
# Warmup Iteration   3: 2.135 ns/op
# Warmup Iteration   4: 2.131 ns/op
# Warmup Iteration   5: 2.131 ns/op
Iteration   1: 2.126 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.133 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.139 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.144 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.142 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 84.85% complete, ETA 00:08:46
# Fork: 2 of 3
# Warmup Iteration   1: 2.233 ns/op
# Warmup Iteration   2: 2.206 ns/op
# Warmup Iteration   3: 2.002 ns/op
# Warmup Iteration   4: 2.013 ns/op
# Warmup Iteration   5: 2.013 ns/op
Iteration   1: 2.166 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.159 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.152 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.145 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.145 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 87.88% complete, ETA 00:07:01
# Fork: 3 of 3
# Warmup Iteration   1: 2.242 ns/op
# Warmup Iteration   2: 2.371 ns/op
# Warmup Iteration   3: 2.139 ns/op
# Warmup Iteration   4: 2.142 ns/op
# Warmup Iteration   5: 2.141 ns/op
Iteration   1: 2.143 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.145 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.141 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.144 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.144 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_6":
  2.144 ±(99.9%) 0.010 ns/op [Average]
  (min, avg, max) = (2.126, 2.144, 2.166), stdev = 0.010
  CI (99.9%): [2.134, 2.155] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_6:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_6:·gc.alloc.rate.norm":
  ≈ 10⁻⁷ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_6:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_8
# Parameters: (value = 42)

# Run progress: 90.91% complete, ETA 00:05:15
# Fork: 1 of 3
# Warmup Iteration   1: 2.085 ns/op
# Warmup Iteration   2: 1.978 ns/op
# Warmup Iteration   3: 2.222 ns/op
# Warmup Iteration   4: 2.008 ns/op
# Warmup Iteration   5: 2.082 ns/op
Iteration   1: 2.139 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.135 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.135 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.131 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.125 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 93.94% complete, ETA 00:03:30
# Fork: 2 of 3
# Warmup Iteration   1: 2.096 ns/op
# Warmup Iteration   2: 2.392 ns/op
# Warmup Iteration   3: 2.145 ns/op
# Warmup Iteration   4: 2.146 ns/op
# Warmup Iteration   5: 2.145 ns/op
Iteration   1: 2.146 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.143 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.130 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.130 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.130 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 96.97% complete, ETA 00:01:45
# Fork: 3 of 3
# Warmup Iteration   1: 2.233 ns/op
# Warmup Iteration   2: 2.103 ns/op
# Warmup Iteration   3: 2.347 ns/op
# Warmup Iteration   4: 2.128 ns/op
# Warmup Iteration   5: 2.126 ns/op
Iteration   1: 2.131 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.129 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.130 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.133 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.129 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_8":
  2.133 ±(99.9%) 0.006 ns/op [Average]
  (min, avg, max) = (2.125, 2.133, 2.146), stdev = 0.006
  CI (99.9%): [2.127, 2.139] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_8:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_8:·gc.alloc.rate.norm":
  ≈ 10⁻⁷ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingLambdaBenchmark.depth_8:·gc.count":
  ≈ 0 counts


# Run complete. Total time: 00:57:54

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                             (value)  Mode  Cnt   Score     Error   Units
ChainingLambdaBenchmark.baseline                           42  avgt   15   2.105 ±   0.061   ns/op
ChainingLambdaBenchmark.baseline:·gc.alloc.rate            42  avgt   15  ≈ 10⁻⁴            MB/sec
ChainingLambdaBenchmark.baseline:·gc.alloc.rate.norm       42  avgt   15  ≈ 10⁻⁷              B/op
ChainingLambdaBenchmark.baseline:·gc.count                 42  avgt   15     ≈ 0            counts
ChainingLambdaBenchmark.depth_1                            42  avgt   15   2.122 ±   0.064   ns/op
ChainingLambdaBenchmark.depth_1:·gc.alloc.rate             42  avgt   15  ≈ 10⁻⁴            MB/sec
ChainingLambdaBenchmark.depth_1:·gc.alloc.rate.norm        42  avgt   15  ≈ 10⁻⁷              B/op
ChainingLambdaBenchmark.depth_1:·gc.count                  42  avgt   15     ≈ 0            counts
ChainingLambdaBenchmark.depth_12                           42  avgt   15   2.060 ±   0.060   ns/op
ChainingLambdaBenchmark.depth_12:·gc.alloc.rate            42  avgt   15  ≈ 10⁻⁴            MB/sec
ChainingLambdaBenchmark.depth_12:·gc.alloc.rate.norm       42  avgt   15  ≈ 10⁻⁷              B/op
ChainingLambdaBenchmark.depth_12:·gc.count                 42  avgt   15     ≈ 0            counts
ChainingLambdaBenchmark.depth_16                           42  avgt   15   2.100 ±   0.066   ns/op
ChainingLambdaBenchmark.depth_16:·gc.alloc.rate            42  avgt   15  ≈ 10⁻⁴            MB/sec
ChainingLambdaBenchmark.depth_16:·gc.alloc.rate.norm       42  avgt   15  ≈ 10⁻⁷              B/op
ChainingLambdaBenchmark.depth_16:·gc.count                 42  avgt   15     ≈ 0            counts
ChainingLambdaBenchmark.depth_2                            42  avgt   15   2.074 ±   0.074   ns/op
ChainingLambdaBenchmark.depth_2:·gc.alloc.rate             42  avgt   15  ≈ 10⁻⁴            MB/sec
ChainingLambdaBenchmark.depth_2:·gc.alloc.rate.norm        42  avgt   15  ≈ 10⁻⁷              B/op
ChainingLambdaBenchmark.depth_2:·gc.count                  42  avgt   15     ≈ 0            counts
ChainingLambdaBenchmark.depth_24                           42  avgt   15   2.088 ±   0.069   ns/op
ChainingLambdaBenchmark.depth_24:·gc.alloc.rate            42  avgt   15  ≈ 10⁻⁴            MB/sec
ChainingLambdaBenchmark.depth_24:·gc.alloc.rate.norm       42  avgt   15  ≈ 10⁻⁷              B/op
ChainingLambdaBenchmark.depth_24:·gc.count                 42  avgt   15     ≈ 0            counts
ChainingLambdaBenchmark.depth_3                            42  avgt   15   2.084 ±   0.058   ns/op
ChainingLambdaBenchmark.depth_3:·gc.alloc.rate             42  avgt   15  ≈ 10⁻⁴            MB/sec
ChainingLambdaBenchmark.depth_3:·gc.alloc.rate.norm        42  avgt   15  ≈ 10⁻⁷              B/op
ChainingLambdaBenchmark.depth_3:·gc.count                  42  avgt   15     ≈ 0            counts
ChainingLambdaBenchmark.depth_4                            42  avgt   15   2.093 ±   0.044   ns/op
ChainingLambdaBenchmark.depth_4:·gc.alloc.rate             42  avgt   15  ≈ 10⁻⁴            MB/sec
ChainingLambdaBenchmark.depth_4:·gc.alloc.rate.norm        42  avgt   15  ≈ 10⁻⁷              B/op
ChainingLambdaBenchmark.depth_4:·gc.count                  42  avgt   15     ≈ 0            counts
ChainingLambdaBenchmark.depth_5                            42  avgt   15   2.100 ±   0.064   ns/op
ChainingLambdaBenchmark.depth_5:·gc.alloc.rate             42  avgt   15  ≈ 10⁻⁴            MB/sec
ChainingLambdaBenchmark.depth_5:·gc.alloc.rate.norm        42  avgt   15  ≈ 10⁻⁷              B/op
ChainingLambdaBenchmark.depth_5:·gc.count                  42  avgt   15     ≈ 0            counts
ChainingLambdaBenchmark.depth_6                            42  avgt   15   2.144 ±   0.010   ns/op
ChainingLambdaBenchmark.depth_6:·gc.alloc.rate             42  avgt   15  ≈ 10⁻⁴            MB/sec
ChainingLambdaBenchmark.depth_6:·gc.alloc.rate.norm        42  avgt   15  ≈ 10⁻⁷              B/op
ChainingLambdaBenchmark.depth_6:·gc.count                  42  avgt   15     ≈ 0            counts
ChainingLambdaBenchmark.depth_8                            42  avgt   15   2.133 ±   0.006   ns/op
ChainingLambdaBenchmark.depth_8:·gc.alloc.rate             42  avgt   15  ≈ 10⁻⁴            MB/sec
ChainingLambdaBenchmark.depth_8:·gc.alloc.rate.norm        42  avgt   15  ≈ 10⁻⁷              B/op
ChainingLambdaBenchmark.depth_8:·gc.count                  42  avgt   15     ≈ 0            counts

Benchmark result is saved to results/report-openjdk-13/hotspotvm_c1_c2_jit/ChainingLambdaBenchmark.json
Running java  -jar benchmarks/target/benchmarks.jar .*ChainingAnonymousClassBenchmark.* -prof gc -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_c1_c2_jit/ChainingAnonymousClassBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.baseline
# Parameters: (value = 42)

# Run progress: 0.00% complete, ETA 00:55:00
# Fork: 1 of 3
# Warmup Iteration   1: 2.099 ns/op
# Warmup Iteration   2: 2.386 ns/op
# Warmup Iteration   3: 2.143 ns/op
# Warmup Iteration   4: 2.144 ns/op
# Warmup Iteration   5: 2.054 ns/op
Iteration   1: 2.064 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.145 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.144 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.142 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.139 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 3.03% complete, ETA 00:56:10
# Fork: 2 of 3
# Warmup Iteration   1: 2.239 ns/op
# Warmup Iteration   2: 2.285 ns/op
# Warmup Iteration   3: 2.062 ns/op
# Warmup Iteration   4: 2.065 ns/op
# Warmup Iteration   5: 2.073 ns/op
Iteration   1: 2.070 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.061 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.063 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.065 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.063 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 6.06% complete, ETA 00:54:24
# Fork: 3 of 3
# Warmup Iteration   1: 2.223 ns/op
# Warmup Iteration   2: 2.220 ns/op
# Warmup Iteration   3: 2.006 ns/op
# Warmup Iteration   4: 2.019 ns/op
# Warmup Iteration   5: 2.067 ns/op
Iteration   1: 2.011 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.021 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.019 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.015 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.016 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.baseline":
  2.069 ±(99.9%) 0.054 ns/op [Average]
  (min, avg, max) = (2.011, 2.069, 2.145), stdev = 0.051
  CI (99.9%): [2.015, 2.123] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.baseline:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.baseline:·gc.alloc.rate.norm":
  ≈ 10⁻⁷ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.baseline:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_1
# Parameters: (value = 42)

# Run progress: 9.09% complete, ETA 00:52:38
# Fork: 1 of 3
# Warmup Iteration   1: 2.242 ns/op
# Warmup Iteration   2: 2.388 ns/op
# Warmup Iteration   3: 2.146 ns/op
# Warmup Iteration   4: 2.145 ns/op
# Warmup Iteration   5: 2.131 ns/op
Iteration   1: 2.130 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.134 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.130 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.126 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.126 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 12.12% complete, ETA 00:50:53
# Fork: 2 of 3
# Warmup Iteration   1: 2.222 ns/op
# Warmup Iteration   2: 2.347 ns/op
# Warmup Iteration   3: 2.112 ns/op
# Warmup Iteration   4: 2.120 ns/op
# Warmup Iteration   5: 2.120 ns/op
Iteration   1: 2.112 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.117 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.111 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.114 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.125 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 15.15% complete, ETA 00:49:08
# Fork: 3 of 3
# Warmup Iteration   1: 2.087 ns/op
# Warmup Iteration   2: 2.213 ns/op
# Warmup Iteration   3: 2.009 ns/op
# Warmup Iteration   4: 2.018 ns/op
# Warmup Iteration   5: 2.011 ns/op
Iteration   1: 2.014 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.144 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.125 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.146 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.051 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_1":
  2.114 ±(99.9%) 0.038 ns/op [Average]
  (min, avg, max) = (2.014, 2.114, 2.146), stdev = 0.035
  CI (99.9%): [2.076, 2.151] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_1:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_1:·gc.alloc.rate.norm":
  ≈ 10⁻⁷ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_1:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_12
# Parameters: (value = 42)

# Run progress: 18.18% complete, ETA 00:47:23
# Fork: 1 of 3
# Warmup Iteration   1: 2.229 ns/op
# Warmup Iteration   2: 2.380 ns/op
# Warmup Iteration   3: 2.137 ns/op
# Warmup Iteration   4: 2.143 ns/op
# Warmup Iteration   5: 2.056 ns/op
Iteration   1: 2.114 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.122 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.116 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.162 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.128 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 21.21% complete, ETA 00:45:37
# Fork: 2 of 3
# Warmup Iteration   1: 2.162 ns/op
# Warmup Iteration   2: 2.322 ns/op
# Warmup Iteration   3: 2.074 ns/op
# Warmup Iteration   4: 2.062 ns/op
# Warmup Iteration   5: 2.074 ns/op
Iteration   1: 2.144 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.142 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.143 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.137 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.093 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 24.24% complete, ETA 00:43:52
# Fork: 3 of 3
# Warmup Iteration   1: 2.100 ns/op
# Warmup Iteration   2: 2.385 ns/op
# Warmup Iteration   3: 1.991 ns/op
# Warmup Iteration   4: 2.011 ns/op
# Warmup Iteration   5: 2.132 ns/op
Iteration   1: 2.054 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.138 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.145 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.139 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.050 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_12":
  2.122 ±(99.9%) 0.035 ns/op [Average]
  (min, avg, max) = (2.050, 2.122, 2.162), stdev = 0.033
  CI (99.9%): [2.087, 2.157] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_12:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_12:·gc.alloc.rate.norm":
  ≈ 10⁻⁷ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_12:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_16
# Parameters: (value = 42)

# Run progress: 27.27% complete, ETA 00:42:07
# Fork: 1 of 3
# Warmup Iteration   1: 2.232 ns/op
# Warmup Iteration   2: 2.095 ns/op
# Warmup Iteration   3: 2.348 ns/op
# Warmup Iteration   4: 2.108 ns/op
# Warmup Iteration   5: 2.110 ns/op
Iteration   1: 2.000 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.000 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.015 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.145 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.142 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 30.30% complete, ETA 00:40:21
# Fork: 2 of 3
# Warmup Iteration   1: 2.154 ns/op
# Warmup Iteration   2: 2.288 ns/op
# Warmup Iteration   3: 2.113 ns/op
# Warmup Iteration   4: 2.120 ns/op
# Warmup Iteration   5: 2.120 ns/op
Iteration   1: 2.006 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.003 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.131 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.123 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.003 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 33.33% complete, ETA 00:38:36
# Fork: 3 of 3
# Warmup Iteration   1: 2.164 ns/op
# Warmup Iteration   2: 2.285 ns/op
# Warmup Iteration   3: 2.007 ns/op
# Warmup Iteration   4: 2.013 ns/op
# Warmup Iteration   5: 2.015 ns/op
Iteration   1: 2.138 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.151 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.143 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.061 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.061 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_16":
  2.075 ±(99.9%) 0.070 ns/op [Average]
  (min, avg, max) = (2.000, 2.075, 2.151), stdev = 0.065
  CI (99.9%): [2.005, 2.144] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_16:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_16:·gc.alloc.rate.norm":
  ≈ 10⁻⁷ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_16:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_2
# Parameters: (value = 42)

# Run progress: 36.36% complete, ETA 00:36:51
# Fork: 1 of 3
# Warmup Iteration   1: 2.102 ns/op
# Warmup Iteration   2: 2.236 ns/op
# Warmup Iteration   3: 2.014 ns/op
# Warmup Iteration   4: 2.019 ns/op
# Warmup Iteration   5: 2.160 ns/op
Iteration   1: 2.155 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.147 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.145 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.145 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.144 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 39.39% complete, ETA 00:35:05
# Fork: 2 of 3
# Warmup Iteration   1: 2.145 ns/op
# Warmup Iteration   2: 2.376 ns/op
# Warmup Iteration   3: 2.133 ns/op
# Warmup Iteration   4: 2.129 ns/op
# Warmup Iteration   5: 2.132 ns/op
Iteration   1: 2.130 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.134 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.135 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.133 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.134 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 42.42% complete, ETA 00:33:20
# Fork: 3 of 3
# Warmup Iteration   1: 2.096 ns/op
# Warmup Iteration   2: 2.236 ns/op
# Warmup Iteration   3: 2.004 ns/op
# Warmup Iteration   4: 2.012 ns/op
# Warmup Iteration   5: 2.012 ns/op
Iteration   1: 2.012 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.152 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.435 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.015 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.020 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_2":
  2.136 ±(99.9%) 0.105 ns/op [Average]
  (min, avg, max) = (2.012, 2.136, 2.435), stdev = 0.098
  CI (99.9%): [2.031, 2.240] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_2:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_2:·gc.alloc.rate.norm":
  ≈ 10⁻⁷ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_2:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_24
# Parameters: (value = 42)

# Run progress: 45.45% complete, ETA 00:31:35
# Fork: 1 of 3
# Warmup Iteration   1: 2.270 ns/op
# Warmup Iteration   2: 2.352 ns/op
# Warmup Iteration   3: 2.128 ns/op
# Warmup Iteration   4: 2.127 ns/op
# Warmup Iteration   5: 2.004 ns/op
Iteration   1: 2.009 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.016 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.129 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.151 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.149 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 48.48% complete, ETA 00:29:50
# Fork: 2 of 3
# Warmup Iteration   1: 2.196 ns/op
# Warmup Iteration   2: 1.994 ns/op
# Warmup Iteration   3: 2.324 ns/op
# Warmup Iteration   4: 2.111 ns/op
# Warmup Iteration   5: 2.039 ns/op
Iteration   1: 2.064 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.113 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.094 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.112 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.064 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 51.52% complete, ETA 00:28:04
# Fork: 3 of 3
# Warmup Iteration   1: 2.239 ns/op
# Warmup Iteration   2: 2.107 ns/op
# Warmup Iteration   3: 2.225 ns/op
# Warmup Iteration   4: 2.010 ns/op
# Warmup Iteration   5: 2.018 ns/op
Iteration   1: 2.018 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.126 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.007 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.134 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.067 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_24":
  2.084 ±(99.9%) 0.056 ns/op [Average]
  (min, avg, max) = (2.007, 2.084, 2.151), stdev = 0.052
  CI (99.9%): [2.028, 2.140] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_24:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_24:·gc.alloc.rate.norm":
  ≈ 10⁻⁷ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_24:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_3
# Parameters: (value = 42)

# Run progress: 54.55% complete, ETA 00:26:19
# Fork: 1 of 3
# Warmup Iteration   1: 2.225 ns/op
# Warmup Iteration   2: 2.379 ns/op
# Warmup Iteration   3: 2.142 ns/op
# Warmup Iteration   4: 2.142 ns/op
# Warmup Iteration   5: 2.141 ns/op
Iteration   1: 2.141 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.139 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 1.989 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.000 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.009 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 57.58% complete, ETA 00:24:34
# Fork: 2 of 3
# Warmup Iteration   1: 2.099 ns/op
# Warmup Iteration   2: 2.292 ns/op
# Warmup Iteration   3: 2.056 ns/op
# Warmup Iteration   4: 2.062 ns/op
# Warmup Iteration   5: 2.058 ns/op
Iteration   1: 2.059 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.059 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.004 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.002 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.010 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 60.61% complete, ETA 00:22:48
# Fork: 3 of 3
# Warmup Iteration   1: 2.240 ns/op
# Warmup Iteration   2: 2.362 ns/op
# Warmup Iteration   3: 2.126 ns/op
# Warmup Iteration   4: 2.131 ns/op
# Warmup Iteration   5: 2.126 ns/op
Iteration   1: 2.121 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.125 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.120 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.121 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.118 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_3":
  2.068 ±(99.9%) 0.064 ns/op [Average]
  (min, avg, max) = (1.989, 2.068, 2.141), stdev = 0.060
  CI (99.9%): [2.004, 2.132] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_3:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_3:·gc.alloc.rate.norm":
  ≈ 10⁻⁷ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_3:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_4
# Parameters: (value = 42)

# Run progress: 63.64% complete, ETA 00:21:03
# Fork: 1 of 3
# Warmup Iteration   1: 2.135 ns/op
# Warmup Iteration   2: 2.275 ns/op
# Warmup Iteration   3: 2.052 ns/op
# Warmup Iteration   4: 2.062 ns/op
# Warmup Iteration   5: 2.144 ns/op
Iteration   1: 2.141 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.139 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.140 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.138 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.136 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 66.67% complete, ETA 00:19:18
# Fork: 2 of 3
# Warmup Iteration   1: 2.148 ns/op
# Warmup Iteration   2: 2.273 ns/op
# Warmup Iteration   3: 2.057 ns/op
# Warmup Iteration   4: 2.059 ns/op
# Warmup Iteration   5: 2.062 ns/op
Iteration   1: 2.058 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.061 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.057 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.058 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.058 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 69.70% complete, ETA 00:17:32
# Fork: 3 of 3
# Warmup Iteration   1: 2.223 ns/op
# Warmup Iteration   2: 2.340 ns/op
# Warmup Iteration   3: 2.109 ns/op
# Warmup Iteration   4: 2.117 ns/op
# Warmup Iteration   5: 2.113 ns/op
Iteration   1: 2.113 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.118 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.115 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.108 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.113 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_4":
  2.103 ±(99.9%) 0.037 ns/op [Average]
  (min, avg, max) = (2.057, 2.103, 2.141), stdev = 0.035
  CI (99.9%): [2.066, 2.141] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_4:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_4:·gc.alloc.rate.norm":
  ≈ 10⁻⁷ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_4:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_5
# Parameters: (value = 42)

# Run progress: 72.73% complete, ETA 00:15:47
# Fork: 1 of 3
# Warmup Iteration   1: 2.219 ns/op
# Warmup Iteration   2: 2.361 ns/op
# Warmup Iteration   3: 2.130 ns/op
# Warmup Iteration   4: 2.135 ns/op
# Warmup Iteration   5: 2.042 ns/op
Iteration   1: 2.043 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.048 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.053 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.056 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.059 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 75.76% complete, ETA 00:14:02
# Fork: 2 of 3
# Warmup Iteration   1: 2.099 ns/op
# Warmup Iteration   2: 2.229 ns/op
# Warmup Iteration   3: 2.011 ns/op
# Warmup Iteration   4: 2.014 ns/op
# Warmup Iteration   5: 2.148 ns/op
Iteration   1: 2.053 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.063 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.064 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.067 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.064 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 78.79% complete, ETA 00:12:17
# Fork: 3 of 3
# Warmup Iteration   1: 2.098 ns/op
# Warmup Iteration   2: 2.225 ns/op
# Warmup Iteration   3: 2.016 ns/op
# Warmup Iteration   4: 2.012 ns/op
# Warmup Iteration   5: 2.014 ns/op
Iteration   1: 2.017 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.017 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.014 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.011 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.015 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_5":
  2.043 ±(99.9%) 0.023 ns/op [Average]
  (min, avg, max) = (2.011, 2.043, 2.067), stdev = 0.022
  CI (99.9%): [2.020, 2.066] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_5:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_5:·gc.alloc.rate.norm":
  ≈ 10⁻⁷ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_5:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_6
# Parameters: (value = 42)

# Run progress: 81.82% complete, ETA 00:10:31
# Fork: 1 of 3
# Warmup Iteration   1: 2.263 ns/op
# Warmup Iteration   2: 2.387 ns/op
# Warmup Iteration   3: 2.144 ns/op
# Warmup Iteration   4: 2.142 ns/op
# Warmup Iteration   5: 2.142 ns/op
Iteration   1: 2.138 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.138 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.131 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.128 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.131 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 84.85% complete, ETA 00:08:46
# Fork: 2 of 3
# Warmup Iteration   1: 2.139 ns/op
# Warmup Iteration   2: 2.262 ns/op
# Warmup Iteration   3: 2.050 ns/op
# Warmup Iteration   4: 2.056 ns/op
# Warmup Iteration   5: 2.054 ns/op
Iteration   1: 2.060 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.056 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.056 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.056 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.060 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 87.88% complete, ETA 00:07:01
# Fork: 3 of 3
# Warmup Iteration   1: 2.096 ns/op
# Warmup Iteration   2: 2.222 ns/op
# Warmup Iteration   3: 2.146 ns/op
# Warmup Iteration   4: 2.143 ns/op
# Warmup Iteration   5: 2.136 ns/op
Iteration   1: 2.137 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.135 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.136 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.138 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.127 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_6":
  2.108 ±(99.9%) 0.040 ns/op [Average]
  (min, avg, max) = (2.056, 2.108, 2.138), stdev = 0.037
  CI (99.9%): [2.068, 2.148] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_6:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_6:·gc.alloc.rate.norm":
  ≈ 10⁻⁷ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_6:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_8
# Parameters: (value = 42)

# Run progress: 90.91% complete, ETA 00:05:15
# Fork: 1 of 3
# Warmup Iteration   1: 2.210 ns/op
# Warmup Iteration   2: 2.326 ns/op
# Warmup Iteration   3: 2.099 ns/op
# Warmup Iteration   4: 2.108 ns/op
# Warmup Iteration   5: 2.001 ns/op
Iteration   1: 2.003 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.124 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.135 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.132 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.132 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 93.94% complete, ETA 00:03:30
# Fork: 2 of 3
# Warmup Iteration   1: 2.091 ns/op
# Warmup Iteration   2: 2.214 ns/op
# Warmup Iteration   3: 2.058 ns/op
# Warmup Iteration   4: 2.054 ns/op
# Warmup Iteration   5: 2.107 ns/op
Iteration   1: 1.995 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.124 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.133 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.052 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.114 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 96.97% complete, ETA 00:01:45
# Fork: 3 of 3
# Warmup Iteration   1: 2.143 ns/op
# Warmup Iteration   2: 2.329 ns/op
# Warmup Iteration   3: 2.101 ns/op
# Warmup Iteration   4: 2.105 ns/op
# Warmup Iteration   5: 2.115 ns/op
Iteration   1: 2.036 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.112 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.037 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.042 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.047 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_8":
  2.081 ±(99.9%) 0.055 ns/op [Average]
  (min, avg, max) = (1.995, 2.081, 2.135), stdev = 0.052
  CI (99.9%): [2.026, 2.136] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_8:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_8:·gc.alloc.rate.norm":
  ≈ 10⁻⁷ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingAnonymousClassBenchmark.depth_8:·gc.count":
  ≈ 0 counts


# Run complete. Total time: 00:57:54

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                                     (value)  Mode  Cnt   Score    Error   Units
ChainingAnonymousClassBenchmark.baseline                           42  avgt   15   2.069 ±  0.054   ns/op
ChainingAnonymousClassBenchmark.baseline:·gc.alloc.rate            42  avgt   15  ≈ 10⁻⁴           MB/sec
ChainingAnonymousClassBenchmark.baseline:·gc.alloc.rate.norm       42  avgt   15  ≈ 10⁻⁷             B/op
ChainingAnonymousClassBenchmark.baseline:·gc.count                 42  avgt   15     ≈ 0           counts
ChainingAnonymousClassBenchmark.depth_1                            42  avgt   15   2.114 ±  0.038   ns/op
ChainingAnonymousClassBenchmark.depth_1:·gc.alloc.rate             42  avgt   15  ≈ 10⁻⁴           MB/sec
ChainingAnonymousClassBenchmark.depth_1:·gc.alloc.rate.norm        42  avgt   15  ≈ 10⁻⁷             B/op
ChainingAnonymousClassBenchmark.depth_1:·gc.count                  42  avgt   15     ≈ 0           counts
ChainingAnonymousClassBenchmark.depth_12                           42  avgt   15   2.122 ±  0.035   ns/op
ChainingAnonymousClassBenchmark.depth_12:·gc.alloc.rate            42  avgt   15  ≈ 10⁻⁴           MB/sec
ChainingAnonymousClassBenchmark.depth_12:·gc.alloc.rate.norm       42  avgt   15  ≈ 10⁻⁷             B/op
ChainingAnonymousClassBenchmark.depth_12:·gc.count                 42  avgt   15     ≈ 0           counts
ChainingAnonymousClassBenchmark.depth_16                           42  avgt   15   2.075 ±  0.070   ns/op
ChainingAnonymousClassBenchmark.depth_16:·gc.alloc.rate            42  avgt   15  ≈ 10⁻⁴           MB/sec
ChainingAnonymousClassBenchmark.depth_16:·gc.alloc.rate.norm       42  avgt   15  ≈ 10⁻⁷             B/op
ChainingAnonymousClassBenchmark.depth_16:·gc.count                 42  avgt   15     ≈ 0           counts
ChainingAnonymousClassBenchmark.depth_2                            42  avgt   15   2.136 ±  0.105   ns/op
ChainingAnonymousClassBenchmark.depth_2:·gc.alloc.rate             42  avgt   15  ≈ 10⁻⁴           MB/sec
ChainingAnonymousClassBenchmark.depth_2:·gc.alloc.rate.norm        42  avgt   15  ≈ 10⁻⁷             B/op
ChainingAnonymousClassBenchmark.depth_2:·gc.count                  42  avgt   15     ≈ 0           counts
ChainingAnonymousClassBenchmark.depth_24                           42  avgt   15   2.084 ±  0.056   ns/op
ChainingAnonymousClassBenchmark.depth_24:·gc.alloc.rate            42  avgt   15  ≈ 10⁻⁴           MB/sec
ChainingAnonymousClassBenchmark.depth_24:·gc.alloc.rate.norm       42  avgt   15  ≈ 10⁻⁷             B/op
ChainingAnonymousClassBenchmark.depth_24:·gc.count                 42  avgt   15     ≈ 0           counts
ChainingAnonymousClassBenchmark.depth_3                            42  avgt   15   2.068 ±  0.064   ns/op
ChainingAnonymousClassBenchmark.depth_3:·gc.alloc.rate             42  avgt   15  ≈ 10⁻⁴           MB/sec
ChainingAnonymousClassBenchmark.depth_3:·gc.alloc.rate.norm        42  avgt   15  ≈ 10⁻⁷             B/op
ChainingAnonymousClassBenchmark.depth_3:·gc.count                  42  avgt   15     ≈ 0           counts
ChainingAnonymousClassBenchmark.depth_4                            42  avgt   15   2.103 ±  0.037   ns/op
ChainingAnonymousClassBenchmark.depth_4:·gc.alloc.rate             42  avgt   15  ≈ 10⁻⁴           MB/sec
ChainingAnonymousClassBenchmark.depth_4:·gc.alloc.rate.norm        42  avgt   15  ≈ 10⁻⁷             B/op
ChainingAnonymousClassBenchmark.depth_4:·gc.count                  42  avgt   15     ≈ 0           counts
ChainingAnonymousClassBenchmark.depth_5                            42  avgt   15   2.043 ±  0.023   ns/op
ChainingAnonymousClassBenchmark.depth_5:·gc.alloc.rate             42  avgt   15  ≈ 10⁻⁴           MB/sec
ChainingAnonymousClassBenchmark.depth_5:·gc.alloc.rate.norm        42  avgt   15  ≈ 10⁻⁷             B/op
ChainingAnonymousClassBenchmark.depth_5:·gc.count                  42  avgt   15     ≈ 0           counts
ChainingAnonymousClassBenchmark.depth_6                            42  avgt   15   2.108 ±  0.040   ns/op
ChainingAnonymousClassBenchmark.depth_6:·gc.alloc.rate             42  avgt   15  ≈ 10⁻⁴           MB/sec
ChainingAnonymousClassBenchmark.depth_6:·gc.alloc.rate.norm        42  avgt   15  ≈ 10⁻⁷             B/op
ChainingAnonymousClassBenchmark.depth_6:·gc.count                  42  avgt   15     ≈ 0           counts
ChainingAnonymousClassBenchmark.depth_8                            42  avgt   15   2.081 ±  0.055   ns/op
ChainingAnonymousClassBenchmark.depth_8:·gc.alloc.rate             42  avgt   15  ≈ 10⁻⁴           MB/sec
ChainingAnonymousClassBenchmark.depth_8:·gc.alloc.rate.norm        42  avgt   15  ≈ 10⁻⁷             B/op
ChainingAnonymousClassBenchmark.depth_8:·gc.count                  42  avgt   15     ≈ 0           counts

Benchmark result is saved to results/report-openjdk-13/hotspotvm_c1_c2_jit/ChainingAnonymousClassBenchmark.json
Running java  -jar benchmarks/target/benchmarks.jar .*ChainingMethodRefBoundedBenchmark.* -prof gc -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_c1_c2_jit/ChainingMethodRefBoundedBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.baseline
# Parameters: (value = 42)

# Run progress: 0.00% complete, ETA 00:55:00
# Fork: 1 of 3
# Warmup Iteration   1: 2.243 ns/op
# Warmup Iteration   2: 2.348 ns/op
# Warmup Iteration   3: 2.115 ns/op
# Warmup Iteration   4: 2.117 ns/op
# Warmup Iteration   5: 2.115 ns/op
Iteration   1: 2.107 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.111 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.037 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.044 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.114 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 3.03% complete, ETA 00:56:10
# Fork: 2 of 3
# Warmup Iteration   1: 2.099 ns/op
# Warmup Iteration   2: 2.222 ns/op
# Warmup Iteration   3: 2.011 ns/op
# Warmup Iteration   4: 2.010 ns/op
# Warmup Iteration   5: 2.014 ns/op
Iteration   1: 2.011 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.017 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.015 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.160 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.072 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 6.06% complete, ETA 00:54:24
# Fork: 3 of 3
# Warmup Iteration   1: 2.243 ns/op
# Warmup Iteration   2: 2.376 ns/op
# Warmup Iteration   3: 2.127 ns/op
# Warmup Iteration   4: 2.134 ns/op
# Warmup Iteration   5: 2.136 ns/op
Iteration   1: 2.131 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.130 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.132 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.126 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.127 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.baseline":
  2.089 ±(99.9%) 0.054 ns/op [Average]
  (min, avg, max) = (2.011, 2.089, 2.160), stdev = 0.051
  CI (99.9%): [2.034, 2.143] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.baseline:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.baseline:·gc.alloc.rate.norm":
  ≈ 10⁻⁷ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.baseline:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_1
# Parameters: (value = 42)

# Run progress: 9.09% complete, ETA 00:52:39
# Fork: 1 of 3
# Warmup Iteration   1: 2.221 ns/op
# Warmup Iteration   2: 2.196 ns/op
# Warmup Iteration   3: 2.042 ns/op
# Warmup Iteration   4: 2.051 ns/op
# Warmup Iteration   5: 1.996 ns/op
Iteration   1: 2.144 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.130 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.129 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.125 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.123 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 12.12% complete, ETA 00:50:54
# Fork: 2 of 3
# Warmup Iteration   1: 2.215 ns/op
# Warmup Iteration   2: 2.209 ns/op
# Warmup Iteration   3: 1.999 ns/op
# Warmup Iteration   4: 2.002 ns/op
# Warmup Iteration   5: 2.010 ns/op
Iteration   1: 2.012 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.010 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.004 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.149 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.141 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 15.15% complete, ETA 00:49:08
# Fork: 3 of 3
# Warmup Iteration   1: 2.087 ns/op
# Warmup Iteration   2: 2.214 ns/op
# Warmup Iteration   3: 2.004 ns/op
# Warmup Iteration   4: 2.009 ns/op
# Warmup Iteration   5: 2.014 ns/op
Iteration   1: 2.013 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.016 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.015 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.016 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.012 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_1":
  2.069 ±(99.9%) 0.068 ns/op [Average]
  (min, avg, max) = (2.004, 2.069, 2.149), stdev = 0.064
  CI (99.9%): [2.001, 2.137] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_1:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_1:·gc.alloc.rate.norm":
  ≈ 10⁻⁷ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_1:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_12
# Parameters: (value = 42)

# Run progress: 18.18% complete, ETA 00:47:23
# Fork: 1 of 3
# Warmup Iteration   1: 2.243 ns/op
# Warmup Iteration   2: 2.359 ns/op
# Warmup Iteration   3: 2.111 ns/op
# Warmup Iteration   4: 2.124 ns/op
# Warmup Iteration   5: 2.000 ns/op
Iteration   1: 2.005 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.052 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.118 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.005 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.134 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 21.21% complete, ETA 00:45:37
# Fork: 2 of 3
# Warmup Iteration   1: 2.228 ns/op
# Warmup Iteration   2: 2.265 ns/op
# Warmup Iteration   3: 2.038 ns/op
# Warmup Iteration   4: 2.111 ns/op
# Warmup Iteration   5: 2.004 ns/op
Iteration   1: 2.121 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.126 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.117 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.047 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.048 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 24.24% complete, ETA 00:43:52
# Fork: 3 of 3
# Warmup Iteration   1: 2.247 ns/op
# Warmup Iteration   2: 2.203 ns/op
# Warmup Iteration   3: 1.992 ns/op
# Warmup Iteration   4: 2.000 ns/op
# Warmup Iteration   5: 2.117 ns/op
Iteration   1: 2.006 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.003 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.139 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.056 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.050 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_12":
  2.068 ±(99.9%) 0.056 ns/op [Average]
  (min, avg, max) = (2.003, 2.068, 2.139), stdev = 0.052
  CI (99.9%): [2.013, 2.124] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_12:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_12:·gc.alloc.rate.norm":
  ≈ 10⁻⁷ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_12:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_16
# Parameters: (value = 42)

# Run progress: 27.27% complete, ETA 00:42:07
# Fork: 1 of 3
# Warmup Iteration   1: 2.168 ns/op
# Warmup Iteration   2: 2.296 ns/op
# Warmup Iteration   3: 2.051 ns/op
# Warmup Iteration   4: 2.062 ns/op
# Warmup Iteration   5: 2.026 ns/op
Iteration   1: 2.137 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.077 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.109 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.104 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.059 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 30.30% complete, ETA 00:40:21
# Fork: 2 of 3
# Warmup Iteration   1: 2.103 ns/op
# Warmup Iteration   2: 2.222 ns/op
# Warmup Iteration   3: 2.004 ns/op
# Warmup Iteration   4: 2.009 ns/op
# Warmup Iteration   5: 2.117 ns/op
Iteration   1: 1.996 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.123 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.001 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.127 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.050 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 33.33% complete, ETA 00:38:36
# Fork: 3 of 3
# Warmup Iteration   1: 2.249 ns/op
# Warmup Iteration   2: 2.270 ns/op
# Warmup Iteration   3: 1.991 ns/op
# Warmup Iteration   4: 2.005 ns/op
# Warmup Iteration   5: 2.056 ns/op
Iteration   1: 2.121 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.057 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 1.988 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 1.999 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.132 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_16":
  2.072 ±(99.9%) 0.059 ns/op [Average]
  (min, avg, max) = (1.988, 2.072, 2.137), stdev = 0.055
  CI (99.9%): [2.013, 2.131] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_16:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_16:·gc.alloc.rate.norm":
  ≈ 10⁻⁷ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_16:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_2
# Parameters: (value = 42)

# Run progress: 36.36% complete, ETA 00:36:51
# Fork: 1 of 3
# Warmup Iteration   1: 2.167 ns/op
# Warmup Iteration   2: 2.279 ns/op
# Warmup Iteration   3: 2.057 ns/op
# Warmup Iteration   4: 2.059 ns/op
# Warmup Iteration   5: 2.058 ns/op
Iteration   1: 2.062 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.066 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.062 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.136 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.130 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 39.39% complete, ETA 00:35:05
# Fork: 2 of 3
# Warmup Iteration   1: 2.154 ns/op
# Warmup Iteration   2: 2.373 ns/op
# Warmup Iteration   3: 2.133 ns/op
# Warmup Iteration   4: 2.127 ns/op
# Warmup Iteration   5: 2.136 ns/op
Iteration   1: 2.138 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.135 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.122 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.130 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.128 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 42.42% complete, ETA 00:33:20
# Fork: 3 of 3
# Warmup Iteration   1: 2.153 ns/op
# Warmup Iteration   2: 2.350 ns/op
# Warmup Iteration   3: 2.118 ns/op
# Warmup Iteration   4: 2.115 ns/op
# Warmup Iteration   5: 2.119 ns/op
Iteration   1: 2.119 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.119 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.113 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.114 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.114 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_2":
  2.113 ±(99.9%) 0.029 ns/op [Average]
  (min, avg, max) = (2.062, 2.113, 2.138), stdev = 0.027
  CI (99.9%): [2.084, 2.141] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_2:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_2:·gc.alloc.rate.norm":
  ≈ 10⁻⁷ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_2:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_24
# Parameters: (value = 42)

# Run progress: 45.45% complete, ETA 00:31:35
# Fork: 1 of 3
# Warmup Iteration   1: 2.227 ns/op
# Warmup Iteration   2: 2.100 ns/op
# Warmup Iteration   3: 2.270 ns/op
# Warmup Iteration   4: 2.011 ns/op
# Warmup Iteration   5: 2.128 ns/op
Iteration   1: 2.041 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.127 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.108 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.104 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.112 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 48.48% complete, ETA 00:29:49
# Fork: 2 of 3
# Warmup Iteration   1: 2.230 ns/op
# Warmup Iteration   2: 2.096 ns/op
# Warmup Iteration   3: 2.344 ns/op
# Warmup Iteration   4: 2.098 ns/op
# Warmup Iteration   5: 2.103 ns/op
Iteration   1: 2.109 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.110 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 1.994 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.126 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.111 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 51.52% complete, ETA 00:28:04
# Fork: 3 of 3
# Warmup Iteration   1: 2.234 ns/op
# Warmup Iteration   2: 2.098 ns/op
# Warmup Iteration   3: 2.215 ns/op
# Warmup Iteration   4: 2.000 ns/op
# Warmup Iteration   5: 2.006 ns/op
Iteration   1: 2.014 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.011 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.023 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.068 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.020 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_24":
  2.072 ±(99.9%) 0.052 ns/op [Average]
  (min, avg, max) = (1.994, 2.072, 2.127), stdev = 0.049
  CI (99.9%): [2.020, 2.124] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_24:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_24:·gc.alloc.rate.norm":
  ≈ 10⁻⁷ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_24:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_3
# Parameters: (value = 42)

# Run progress: 54.55% complete, ETA 00:26:19
# Fork: 1 of 3
# Warmup Iteration   1: 2.241 ns/op
# Warmup Iteration   2: 2.356 ns/op
# Warmup Iteration   3: 2.122 ns/op
# Warmup Iteration   4: 2.124 ns/op
# Warmup Iteration   5: 2.118 ns/op
Iteration   1: 2.116 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.113 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.112 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.111 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.105 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 57.58% complete, ETA 00:24:34
# Fork: 2 of 3
# Warmup Iteration   1: 2.217 ns/op
# Warmup Iteration   2: 2.346 ns/op
# Warmup Iteration   3: 2.124 ns/op
# Warmup Iteration   4: 2.126 ns/op
# Warmup Iteration   5: 2.127 ns/op
Iteration   1: 2.119 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.120 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.117 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.117 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.117 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 60.61% complete, ETA 00:22:48
# Fork: 3 of 3
# Warmup Iteration   1: 2.072 ns/op
# Warmup Iteration   2: 2.359 ns/op
# Warmup Iteration   3: 2.118 ns/op
# Warmup Iteration   4: 2.121 ns/op
# Warmup Iteration   5: 2.116 ns/op
Iteration   1: 2.112 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.108 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.116 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.121 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.120 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_3":
  2.115 ±(99.9%) 0.005 ns/op [Average]
  (min, avg, max) = (2.105, 2.115, 2.121), stdev = 0.005
  CI (99.9%): [2.110, 2.120] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_3:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_3:·gc.alloc.rate.norm":
  ≈ 10⁻⁷ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_3:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_4
# Parameters: (value = 42)

# Run progress: 63.64% complete, ETA 00:21:03
# Fork: 1 of 3
# Warmup Iteration   1: 2.075 ns/op
# Warmup Iteration   2: 2.230 ns/op
# Warmup Iteration   3: 1.992 ns/op
# Warmup Iteration   4: 2.010 ns/op
# Warmup Iteration   5: 2.011 ns/op
Iteration   1: 2.012 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.014 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.017 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.013 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.010 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 66.67% complete, ETA 00:19:18
# Fork: 2 of 3
# Warmup Iteration   1: 2.113 ns/op
# Warmup Iteration   2: 2.248 ns/op
# Warmup Iteration   3: 2.018 ns/op
# Warmup Iteration   4: 2.020 ns/op
# Warmup Iteration   5: 2.147 ns/op
Iteration   1: 2.067 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.067 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.121 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.127 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.122 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 69.70% complete, ETA 00:17:32
# Fork: 3 of 3
# Warmup Iteration   1: 2.221 ns/op
# Warmup Iteration   2: 2.348 ns/op
# Warmup Iteration   3: 2.105 ns/op
# Warmup Iteration   4: 2.109 ns/op
# Warmup Iteration   5: 2.111 ns/op
Iteration   1: 2.114 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.117 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.116 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.032 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.044 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_4":
  2.066 ±(99.9%) 0.052 ns/op [Average]
  (min, avg, max) = (2.010, 2.066, 2.127), stdev = 0.048
  CI (99.9%): [2.014, 2.118] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_4:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_4:·gc.alloc.rate.norm":
  ≈ 10⁻⁷ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_4:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_5
# Parameters: (value = 42)

# Run progress: 72.73% complete, ETA 00:15:47
# Fork: 1 of 3
# Warmup Iteration   1: 2.092 ns/op
# Warmup Iteration   2: 2.223 ns/op
# Warmup Iteration   3: 2.013 ns/op
# Warmup Iteration   4: 2.014 ns/op
# Warmup Iteration   5: 2.014 ns/op
Iteration   1: 2.134 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.127 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.126 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.122 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.116 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 75.76% complete, ETA 00:14:02
# Fork: 2 of 3
# Warmup Iteration   1: 2.088 ns/op
# Warmup Iteration   2: 2.220 ns/op
# Warmup Iteration   3: 2.003 ns/op
# Warmup Iteration   4: 2.009 ns/op
# Warmup Iteration   5: 2.011 ns/op
Iteration   1: 2.009 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.013 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.013 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.012 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.012 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 78.79% complete, ETA 00:12:17
# Fork: 3 of 3
# Warmup Iteration   1: 2.241 ns/op
# Warmup Iteration   2: 2.358 ns/op
# Warmup Iteration   3: 2.129 ns/op
# Warmup Iteration   4: 2.135 ns/op
# Warmup Iteration   5: 2.130 ns/op
Iteration   1: 2.130 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.127 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.117 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.119 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.122 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_5":
  2.087 ±(99.9%) 0.059 ns/op [Average]
  (min, avg, max) = (2.009, 2.087, 2.134), stdev = 0.055
  CI (99.9%): [2.028, 2.145] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_5:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_5:·gc.alloc.rate.norm":
  ≈ 10⁻⁷ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_5:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_6
# Parameters: (value = 42)

# Run progress: 81.82% complete, ETA 00:10:31
# Fork: 1 of 3
# Warmup Iteration   1: 2.087 ns/op
# Warmup Iteration   2: 1.982 ns/op
# Warmup Iteration   3: 2.226 ns/op
# Warmup Iteration   4: 2.008 ns/op
# Warmup Iteration   5: 2.017 ns/op
Iteration   1: 2.013 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.014 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.145 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.137 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.128 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 84.85% complete, ETA 00:08:46
# Fork: 2 of 3
# Warmup Iteration   1: 2.238 ns/op
# Warmup Iteration   2: 2.268 ns/op
# Warmup Iteration   3: 2.049 ns/op
# Warmup Iteration   4: 2.057 ns/op
# Warmup Iteration   5: 2.056 ns/op
Iteration   1: 2.062 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.069 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.064 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.059 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.061 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 87.88% complete, ETA 00:07:01
# Fork: 3 of 3
# Warmup Iteration   1: 2.236 ns/op
# Warmup Iteration   2: 2.363 ns/op
# Warmup Iteration   3: 2.123 ns/op
# Warmup Iteration   4: 2.128 ns/op
# Warmup Iteration   5: 2.120 ns/op
Iteration   1: 2.116 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.121 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.118 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.119 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.126 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_6":
  2.090 ±(99.9%) 0.047 ns/op [Average]
  (min, avg, max) = (2.013, 2.090, 2.145), stdev = 0.044
  CI (99.9%): [2.043, 2.137] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_6:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_6:·gc.alloc.rate.norm":
  ≈ 10⁻⁷ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_6:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_8
# Parameters: (value = 42)

# Run progress: 90.91% complete, ETA 00:05:15
# Fork: 1 of 3
# Warmup Iteration   1: 2.080 ns/op
# Warmup Iteration   2: 1.975 ns/op
# Warmup Iteration   3: 2.224 ns/op
# Warmup Iteration   4: 2.001 ns/op
# Warmup Iteration   5: 2.009 ns/op
Iteration   1: 2.058 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.055 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.058 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.057 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.056 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 93.94% complete, ETA 00:03:30
# Fork: 2 of 3
# Warmup Iteration   1: 2.168 ns/op
# Warmup Iteration   2: 2.292 ns/op
# Warmup Iteration   3: 2.059 ns/op
# Warmup Iteration   4: 2.058 ns/op
# Warmup Iteration   5: 2.007 ns/op
Iteration   1: 2.127 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.065 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.128 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.132 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.043 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 96.97% complete, ETA 00:01:45
# Fork: 3 of 3
# Warmup Iteration   1: 2.234 ns/op
# Warmup Iteration   2: 2.107 ns/op
# Warmup Iteration   3: 2.351 ns/op
# Warmup Iteration   4: 2.347 ns/op
# Warmup Iteration   5: 2.113 ns/op
Iteration   1: 2.125 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.128 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.113 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.112 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.119 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_8":
  2.092 ±(99.9%) 0.038 ns/op [Average]
  (min, avg, max) = (2.043, 2.092, 2.132), stdev = 0.035
  CI (99.9%): [2.054, 2.129] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_8:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_8:·gc.alloc.rate.norm":
  ≈ 10⁻⁷ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefBoundedBenchmark.depth_8:·gc.count":
  ≈ 0 counts


# Run complete. Total time: 00:57:54

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                                       (value)  Mode  Cnt   Score    Error   Units
ChainingMethodRefBoundedBenchmark.baseline                           42  avgt   15   2.089 ±  0.054   ns/op
ChainingMethodRefBoundedBenchmark.baseline:·gc.alloc.rate            42  avgt   15  ≈ 10⁻⁴           MB/sec
ChainingMethodRefBoundedBenchmark.baseline:·gc.alloc.rate.norm       42  avgt   15  ≈ 10⁻⁷             B/op
ChainingMethodRefBoundedBenchmark.baseline:·gc.count                 42  avgt   15     ≈ 0           counts
ChainingMethodRefBoundedBenchmark.depth_1                            42  avgt   15   2.069 ±  0.068   ns/op
ChainingMethodRefBoundedBenchmark.depth_1:·gc.alloc.rate             42  avgt   15  ≈ 10⁻⁴           MB/sec
ChainingMethodRefBoundedBenchmark.depth_1:·gc.alloc.rate.norm        42  avgt   15  ≈ 10⁻⁷             B/op
ChainingMethodRefBoundedBenchmark.depth_1:·gc.count                  42  avgt   15     ≈ 0           counts
ChainingMethodRefBoundedBenchmark.depth_12                           42  avgt   15   2.068 ±  0.056   ns/op
ChainingMethodRefBoundedBenchmark.depth_12:·gc.alloc.rate            42  avgt   15  ≈ 10⁻⁴           MB/sec
ChainingMethodRefBoundedBenchmark.depth_12:·gc.alloc.rate.norm       42  avgt   15  ≈ 10⁻⁷             B/op
ChainingMethodRefBoundedBenchmark.depth_12:·gc.count                 42  avgt   15     ≈ 0           counts
ChainingMethodRefBoundedBenchmark.depth_16                           42  avgt   15   2.072 ±  0.059   ns/op
ChainingMethodRefBoundedBenchmark.depth_16:·gc.alloc.rate            42  avgt   15  ≈ 10⁻⁴           MB/sec
ChainingMethodRefBoundedBenchmark.depth_16:·gc.alloc.rate.norm       42  avgt   15  ≈ 10⁻⁷             B/op
ChainingMethodRefBoundedBenchmark.depth_16:·gc.count                 42  avgt   15     ≈ 0           counts
ChainingMethodRefBoundedBenchmark.depth_2                            42  avgt   15   2.113 ±  0.029   ns/op
ChainingMethodRefBoundedBenchmark.depth_2:·gc.alloc.rate             42  avgt   15  ≈ 10⁻⁴           MB/sec
ChainingMethodRefBoundedBenchmark.depth_2:·gc.alloc.rate.norm        42  avgt   15  ≈ 10⁻⁷             B/op
ChainingMethodRefBoundedBenchmark.depth_2:·gc.count                  42  avgt   15     ≈ 0           counts
ChainingMethodRefBoundedBenchmark.depth_24                           42  avgt   15   2.072 ±  0.052   ns/op
ChainingMethodRefBoundedBenchmark.depth_24:·gc.alloc.rate            42  avgt   15  ≈ 10⁻⁴           MB/sec
ChainingMethodRefBoundedBenchmark.depth_24:·gc.alloc.rate.norm       42  avgt   15  ≈ 10⁻⁷             B/op
ChainingMethodRefBoundedBenchmark.depth_24:·gc.count                 42  avgt   15     ≈ 0           counts
ChainingMethodRefBoundedBenchmark.depth_3                            42  avgt   15   2.115 ±  0.005   ns/op
ChainingMethodRefBoundedBenchmark.depth_3:·gc.alloc.rate             42  avgt   15  ≈ 10⁻⁴           MB/sec
ChainingMethodRefBoundedBenchmark.depth_3:·gc.alloc.rate.norm        42  avgt   15  ≈ 10⁻⁷             B/op
ChainingMethodRefBoundedBenchmark.depth_3:·gc.count                  42  avgt   15     ≈ 0           counts
ChainingMethodRefBoundedBenchmark.depth_4                            42  avgt   15   2.066 ±  0.052   ns/op
ChainingMethodRefBoundedBenchmark.depth_4:·gc.alloc.rate             42  avgt   15  ≈ 10⁻⁴           MB/sec
ChainingMethodRefBoundedBenchmark.depth_4:·gc.alloc.rate.norm        42  avgt   15  ≈ 10⁻⁷             B/op
ChainingMethodRefBoundedBenchmark.depth_4:·gc.count                  42  avgt   15     ≈ 0           counts
ChainingMethodRefBoundedBenchmark.depth_5                            42  avgt   15   2.087 ±  0.059   ns/op
ChainingMethodRefBoundedBenchmark.depth_5:·gc.alloc.rate             42  avgt   15  ≈ 10⁻⁴           MB/sec
ChainingMethodRefBoundedBenchmark.depth_5:·gc.alloc.rate.norm        42  avgt   15  ≈ 10⁻⁷             B/op
ChainingMethodRefBoundedBenchmark.depth_5:·gc.count                  42  avgt   15     ≈ 0           counts
ChainingMethodRefBoundedBenchmark.depth_6                            42  avgt   15   2.090 ±  0.047   ns/op
ChainingMethodRefBoundedBenchmark.depth_6:·gc.alloc.rate             42  avgt   15  ≈ 10⁻⁴           MB/sec
ChainingMethodRefBoundedBenchmark.depth_6:·gc.alloc.rate.norm        42  avgt   15  ≈ 10⁻⁷             B/op
ChainingMethodRefBoundedBenchmark.depth_6:·gc.count                  42  avgt   15     ≈ 0           counts
ChainingMethodRefBoundedBenchmark.depth_8                            42  avgt   15   2.092 ±  0.038   ns/op
ChainingMethodRefBoundedBenchmark.depth_8:·gc.alloc.rate             42  avgt   15  ≈ 10⁻⁴           MB/sec
ChainingMethodRefBoundedBenchmark.depth_8:·gc.alloc.rate.norm        42  avgt   15  ≈ 10⁻⁷             B/op
ChainingMethodRefBoundedBenchmark.depth_8:·gc.count                  42  avgt   15     ≈ 0           counts

Benchmark result is saved to results/report-openjdk-13/hotspotvm_c1_c2_jit/ChainingMethodRefBoundedBenchmark.json
Running java  -jar benchmarks/target/benchmarks.jar .*ChainingMethodRefUnboundedBenchmark.* -prof gc -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_c1_c2_jit/ChainingMethodRefUnboundedBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.baseline
# Parameters: (value = 42)

# Run progress: 0.00% complete, ETA 00:55:00
# Fork: 1 of 3
# Warmup Iteration   1: 2.214 ns/op
# Warmup Iteration   2: 2.347 ns/op
# Warmup Iteration   3: 2.108 ns/op
# Warmup Iteration   4: 2.117 ns/op
# Warmup Iteration   5: 2.113 ns/op
Iteration   1: 1.981 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 1.989 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 1.996 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.002 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.002 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 3.03% complete, ETA 00:56:10
# Fork: 2 of 3
# Warmup Iteration   1: 2.101 ns/op
# Warmup Iteration   2: 2.229 ns/op
# Warmup Iteration   3: 2.141 ns/op
# Warmup Iteration   4: 2.132 ns/op
# Warmup Iteration   5: 2.125 ns/op
Iteration   1: 2.120 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.051 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.124 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 1.988 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 1.998 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 6.06% complete, ETA 00:54:24
# Fork: 3 of 3
# Warmup Iteration   1: 2.234 ns/op
# Warmup Iteration   2: 2.356 ns/op
# Warmup Iteration   3: 2.121 ns/op
# Warmup Iteration   4: 2.122 ns/op
# Warmup Iteration   5: 2.120 ns/op
Iteration   1: 2.124 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.128 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 1.986 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.002 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.005 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.baseline":
  2.033 ±(99.9%) 0.063 ns/op [Average]
  (min, avg, max) = (1.981, 2.033, 2.128), stdev = 0.059
  CI (99.9%): [1.970, 2.096] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.baseline:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.baseline:·gc.alloc.rate.norm":
  ≈ 10⁻⁷ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.baseline:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_1
# Parameters: (value = 42)

# Run progress: 9.09% complete, ETA 00:52:39
# Fork: 1 of 3
# Warmup Iteration   1: 2.164 ns/op
# Warmup Iteration   2: 2.357 ns/op
# Warmup Iteration   3: 2.121 ns/op
# Warmup Iteration   4: 2.124 ns/op
# Warmup Iteration   5: 2.121 ns/op
Iteration   1: 2.127 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.123 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.134 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.125 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.127 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 12.12% complete, ETA 00:50:53
# Fork: 2 of 3
# Warmup Iteration   1: 2.218 ns/op
# Warmup Iteration   2: 2.341 ns/op
# Warmup Iteration   3: 2.118 ns/op
# Warmup Iteration   4: 2.124 ns/op
# Warmup Iteration   5: 2.043 ns/op
Iteration   1: 2.053 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.056 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.049 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 1.987 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.000 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 15.15% complete, ETA 00:49:08
# Fork: 3 of 3
# Warmup Iteration   1: 2.103 ns/op
# Warmup Iteration   2: 2.220 ns/op
# Warmup Iteration   3: 2.008 ns/op
# Warmup Iteration   4: 2.012 ns/op
# Warmup Iteration   5: 2.006 ns/op
Iteration   1: 2.008 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.146 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.134 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.131 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.129 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_1":
  2.089 ±(99.9%) 0.060 ns/op [Average]
  (min, avg, max) = (1.987, 2.089, 2.146), stdev = 0.057
  CI (99.9%): [2.028, 2.149] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_1:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_1:·gc.alloc.rate.norm":
  ≈ 10⁻⁷ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_1:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_12
# Parameters: (value = 42)

# Run progress: 18.18% complete, ETA 00:47:23
# Fork: 1 of 3
# Warmup Iteration   1: 2.228 ns/op
# Warmup Iteration   2: 2.347 ns/op
# Warmup Iteration   3: 2.102 ns/op
# Warmup Iteration   4: 2.118 ns/op
# Warmup Iteration   5: 2.114 ns/op
Iteration   1: 2.104 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.107 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.112 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.038 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.042 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 21.21% complete, ETA 00:45:37
# Fork: 2 of 3
# Warmup Iteration   1: 2.232 ns/op
# Warmup Iteration   2: 2.104 ns/op
# Warmup Iteration   3: 2.360 ns/op
# Warmup Iteration   4: 2.114 ns/op
# Warmup Iteration   5: 2.118 ns/op
Iteration   1: 2.122 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.124 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.114 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.040 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.044 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 24.24% complete, ETA 00:43:52
# Fork: 3 of 3
# Warmup Iteration   1: 2.144 ns/op
# Warmup Iteration   2: 2.350 ns/op
# Warmup Iteration   3: 2.114 ns/op
# Warmup Iteration   4: 2.128 ns/op
# Warmup Iteration   5: 2.120 ns/op
Iteration   1: 2.127 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.112 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.110 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.114 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.119 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_12":
  2.095 ±(99.9%) 0.037 ns/op [Average]
  (min, avg, max) = (2.038, 2.095, 2.127), stdev = 0.035
  CI (99.9%): [2.058, 2.132] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_12:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_12:·gc.alloc.rate.norm":
  ≈ 10⁻⁷ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_12:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_16
# Parameters: (value = 42)

# Run progress: 27.27% complete, ETA 00:42:07
# Fork: 1 of 3
# Warmup Iteration   1: 2.083 ns/op
# Warmup Iteration   2: 2.205 ns/op
# Warmup Iteration   3: 1.998 ns/op
# Warmup Iteration   4: 2.139 ns/op
# Warmup Iteration   5: 2.133 ns/op
Iteration   1: 2.129 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.127 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.121 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.123 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.122 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 30.30% complete, ETA 00:40:21
# Fork: 2 of 3
# Warmup Iteration   1: 2.086 ns/op
# Warmup Iteration   2: 1.979 ns/op
# Warmup Iteration   3: 2.219 ns/op
# Warmup Iteration   4: 1.995 ns/op
# Warmup Iteration   5: 2.000 ns/op
Iteration   1: 2.004 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.004 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.006 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.135 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.136 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 33.33% complete, ETA 00:38:36
# Fork: 3 of 3
# Warmup Iteration   1: 2.236 ns/op
# Warmup Iteration   2: 2.338 ns/op
# Warmup Iteration   3: 2.114 ns/op
# Warmup Iteration   4: 2.124 ns/op
# Warmup Iteration   5: 2.125 ns/op
Iteration   1: 2.123 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.121 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.117 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.109 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.111 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_16":
  2.099 ±(99.9%) 0.053 ns/op [Average]
  (min, avg, max) = (2.004, 2.099, 2.136), stdev = 0.049
  CI (99.9%): [2.046, 2.152] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_16:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_16:·gc.alloc.rate.norm":
  ≈ 10⁻⁷ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_16:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_2
# Parameters: (value = 42)

# Run progress: 36.36% complete, ETA 00:36:51
# Fork: 1 of 3
# Warmup Iteration   1: 2.087 ns/op
# Warmup Iteration   2: 2.358 ns/op
# Warmup Iteration   3: 2.123 ns/op
# Warmup Iteration   4: 2.125 ns/op
# Warmup Iteration   5: 2.119 ns/op
Iteration   1: 2.124 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.119 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.117 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.121 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.124 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 39.39% complete, ETA 00:35:05
# Fork: 2 of 3
# Warmup Iteration   1: 2.212 ns/op
# Warmup Iteration   2: 2.329 ns/op
# Warmup Iteration   3: 2.098 ns/op
# Warmup Iteration   4: 2.103 ns/op
# Warmup Iteration   5: 2.113 ns/op
Iteration   1: 2.110 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.104 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.108 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.107 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.108 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 42.42% complete, ETA 00:33:20
# Fork: 3 of 3
# Warmup Iteration   1: 2.225 ns/op
# Warmup Iteration   2: 2.353 ns/op
# Warmup Iteration   3: 2.117 ns/op
# Warmup Iteration   4: 2.115 ns/op
# Warmup Iteration   5: 2.116 ns/op
Iteration   1: 2.119 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.116 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.120 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.115 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.119 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_2":
  2.115 ±(99.9%) 0.007 ns/op [Average]
  (min, avg, max) = (2.104, 2.115, 2.124), stdev = 0.007
  CI (99.9%): [2.108, 2.122] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_2:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_2:·gc.alloc.rate.norm":
  ≈ 10⁻⁷ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_2:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_24
# Parameters: (value = 42)

# Run progress: 45.45% complete, ETA 00:31:35
# Fork: 1 of 3
# Warmup Iteration   1: 2.230 ns/op
# Warmup Iteration   2: 2.255 ns/op
# Warmup Iteration   3: 2.050 ns/op
# Warmup Iteration   4: 2.058 ns/op
# Warmup Iteration   5: 2.061 ns/op
Iteration   1: 2.062 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.058 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.063 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.063 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.065 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 48.48% complete, ETA 00:29:49
# Fork: 2 of 3
# Warmup Iteration   1: 2.150 ns/op
# Warmup Iteration   2: 2.263 ns/op
# Warmup Iteration   3: 2.043 ns/op
# Warmup Iteration   4: 2.053 ns/op
# Warmup Iteration   5: 2.053 ns/op
Iteration   1: 2.055 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.055 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.054 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.053 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.046 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 51.52% complete, ETA 00:28:04
# Fork: 3 of 3
# Warmup Iteration   1: 2.154 ns/op
# Warmup Iteration   2: 1.985 ns/op
# Warmup Iteration   3: 2.221 ns/op
# Warmup Iteration   4: 2.009 ns/op
# Warmup Iteration   5: 2.018 ns/op
Iteration   1: 2.012 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.013 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.016 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.072 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.067 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_24":
  2.050 ±(99.9%) 0.021 ns/op [Average]
  (min, avg, max) = (2.012, 2.050, 2.072), stdev = 0.020
  CI (99.9%): [2.029, 2.072] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_24:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_24:·gc.alloc.rate.norm":
  ≈ 10⁻⁷ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_24:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_3
# Parameters: (value = 42)

# Run progress: 54.55% complete, ETA 00:26:19
# Fork: 1 of 3
# Warmup Iteration   1: 2.241 ns/op
# Warmup Iteration   2: 2.357 ns/op
# Warmup Iteration   3: 2.117 ns/op
# Warmup Iteration   4: 2.126 ns/op
# Warmup Iteration   5: 2.125 ns/op
Iteration   1: 2.119 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.119 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.114 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.113 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.120 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 57.58% complete, ETA 00:24:33
# Fork: 2 of 3
# Warmup Iteration   1: 2.080 ns/op
# Warmup Iteration   2: 2.221 ns/op
# Warmup Iteration   3: 2.008 ns/op
# Warmup Iteration   4: 2.015 ns/op
# Warmup Iteration   5: 2.014 ns/op
Iteration   1: 2.015 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.015 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.014 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.006 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.008 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 60.61% complete, ETA 00:22:48
# Fork: 3 of 3
# Warmup Iteration   1: 2.167 ns/op
# Warmup Iteration   2: 2.300 ns/op
# Warmup Iteration   3: 2.067 ns/op
# Warmup Iteration   4: 2.073 ns/op
# Warmup Iteration   5: 2.070 ns/op
Iteration   1: 2.067 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.070 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.066 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.124 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.123 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_3":
  2.073 ±(99.9%) 0.053 ns/op [Average]
  (min, avg, max) = (2.006, 2.073, 2.124), stdev = 0.049
  CI (99.9%): [2.020, 2.126] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_3:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_3:·gc.alloc.rate.norm":
  ≈ 10⁻⁷ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_3:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_4
# Parameters: (value = 42)

# Run progress: 63.64% complete, ETA 00:21:03
# Fork: 1 of 3
# Warmup Iteration   1: 2.221 ns/op
# Warmup Iteration   2: 2.346 ns/op
# Warmup Iteration   3: 2.117 ns/op
# Warmup Iteration   4: 2.124 ns/op
# Warmup Iteration   5: 2.121 ns/op
Iteration   1: 2.124 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.121 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.122 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.116 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.113 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 66.67% complete, ETA 00:19:18
# Fork: 2 of 3
# Warmup Iteration   1: 2.223 ns/op
# Warmup Iteration   2: 2.337 ns/op
# Warmup Iteration   3: 2.115 ns/op
# Warmup Iteration   4: 2.115 ns/op
# Warmup Iteration   5: 2.116 ns/op
Iteration   1: 2.115 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.112 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.110 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.121 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.119 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 69.70% complete, ETA 00:17:32
# Fork: 3 of 3
# Warmup Iteration   1: 2.215 ns/op
# Warmup Iteration   2: 2.332 ns/op
# Warmup Iteration   3: 2.116 ns/op
# Warmup Iteration   4: 2.109 ns/op
# Warmup Iteration   5: 2.111 ns/op
Iteration   1: 2.117 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.120 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.120 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 1.987 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 1.993 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_4":
  2.101 ±(99.9%) 0.048 ns/op [Average]
  (min, avg, max) = (1.987, 2.101, 2.124), stdev = 0.045
  CI (99.9%): [2.053, 2.149] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_4:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_4:·gc.alloc.rate.norm":
  ≈ 10⁻⁷ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_4:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_5
# Parameters: (value = 42)

# Run progress: 72.73% complete, ETA 00:15:47
# Fork: 1 of 3
# Warmup Iteration   1: 2.230 ns/op
# Warmup Iteration   2: 2.205 ns/op
# Warmup Iteration   3: 1.994 ns/op
# Warmup Iteration   4: 1.998 ns/op
# Warmup Iteration   5: 2.003 ns/op
Iteration   1: 2.013 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.011 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.009 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.007 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.011 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 75.76% complete, ETA 00:14:02
# Fork: 2 of 3
# Warmup Iteration   1: 2.103 ns/op
# Warmup Iteration   2: 2.368 ns/op
# Warmup Iteration   3: 2.127 ns/op
# Warmup Iteration   4: 2.127 ns/op
# Warmup Iteration   5: 2.124 ns/op
Iteration   1: 2.122 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.122 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.121 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.124 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.120 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 78.79% complete, ETA 00:12:16
# Fork: 3 of 3
# Warmup Iteration   1: 2.219 ns/op
# Warmup Iteration   2: 2.340 ns/op
# Warmup Iteration   3: 2.108 ns/op
# Warmup Iteration   4: 2.114 ns/op
# Warmup Iteration   5: 2.109 ns/op
Iteration   1: 2.114 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 1.991 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.000 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.002 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.001 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_5":
  2.051 ±(99.9%) 0.063 ns/op [Average]
  (min, avg, max) = (1.991, 2.051, 2.124), stdev = 0.059
  CI (99.9%): [1.988, 2.114] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_5:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_5:·gc.alloc.rate.norm":
  ≈ 10⁻⁷ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_5:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_6
# Parameters: (value = 42)

# Run progress: 81.82% complete, ETA 00:10:31
# Fork: 1 of 3
# Warmup Iteration   1: 2.153 ns/op
# Warmup Iteration   2: 2.286 ns/op
# Warmup Iteration   3: 2.050 ns/op
# Warmup Iteration   4: 2.060 ns/op
# Warmup Iteration   5: 2.060 ns/op
Iteration   1: 2.058 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.062 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.056 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.050 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.055 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 84.85% complete, ETA 00:08:46
# Fork: 2 of 3
# Warmup Iteration   1: 2.230 ns/op
# Warmup Iteration   2: 2.316 ns/op
# Warmup Iteration   3: 1.986 ns/op
# Warmup Iteration   4: 1.997 ns/op
# Warmup Iteration   5: 2.004 ns/op
Iteration   1: 2.009 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.015 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.009 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.067 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.059 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 87.88% complete, ETA 00:07:01
# Fork: 3 of 3
# Warmup Iteration   1: 2.239 ns/op
# Warmup Iteration   2: 2.360 ns/op
# Warmup Iteration   3: 2.124 ns/op
# Warmup Iteration   4: 2.128 ns/op
# Warmup Iteration   5: 2.126 ns/op
Iteration   1: 2.122 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.120 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.118 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.121 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.115 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_6":
  2.069 ±(99.9%) 0.044 ns/op [Average]
  (min, avg, max) = (2.009, 2.069, 2.122), stdev = 0.041
  CI (99.9%): [2.025, 2.113] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_6:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_6:·gc.alloc.rate.norm":
  ≈ 10⁻⁷ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_6:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_8
# Parameters: (value = 42)

# Run progress: 90.91% complete, ETA 00:05:15
# Fork: 1 of 3
# Warmup Iteration   1: 2.134 ns/op
# Warmup Iteration   2: 2.259 ns/op
# Warmup Iteration   3: 2.034 ns/op
# Warmup Iteration   4: 2.042 ns/op
# Warmup Iteration   5: 1.989 ns/op
Iteration   1: 2.002 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.004 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.002 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.007 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.012 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 93.94% complete, ETA 00:03:30
# Fork: 2 of 3
# Warmup Iteration   1: 2.246 ns/op
# Warmup Iteration   2: 2.363 ns/op
# Warmup Iteration   3: 1.998 ns/op
# Warmup Iteration   4: 2.011 ns/op
# Warmup Iteration   5: 2.012 ns/op
Iteration   1: 2.006 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.010 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.012 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.014 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.010 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 96.97% complete, ETA 00:01:45
# Fork: 3 of 3
# Warmup Iteration   1: 2.242 ns/op
# Warmup Iteration   2: 2.354 ns/op
# Warmup Iteration   3: 2.121 ns/op
# Warmup Iteration   4: 2.122 ns/op
# Warmup Iteration   5: 2.122 ns/op
Iteration   1: 2.114 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.113 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.117 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.113 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.129 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_8":
  2.044 ±(99.9%) 0.057 ns/op [Average]
  (min, avg, max) = (2.002, 2.044, 2.129), stdev = 0.054
  CI (99.9%): [1.987, 2.102] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_8:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_8:·gc.alloc.rate.norm":
  ≈ 10⁻⁷ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.ChainingMethodRefUnboundedBenchmark.depth_8:·gc.count":
  ≈ 0 counts


# Run complete. Total time: 00:57:54

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                                         (value)  Mode  Cnt   Score     Error   Units
ChainingMethodRefUnboundedBenchmark.baseline                           42  avgt   15   2.033 ±   0.063   ns/op
ChainingMethodRefUnboundedBenchmark.baseline:·gc.alloc.rate            42  avgt   15  ≈ 10⁻⁴            MB/sec
ChainingMethodRefUnboundedBenchmark.baseline:·gc.alloc.rate.norm       42  avgt   15  ≈ 10⁻⁷              B/op
ChainingMethodRefUnboundedBenchmark.baseline:·gc.count                 42  avgt   15     ≈ 0            counts
ChainingMethodRefUnboundedBenchmark.depth_1                            42  avgt   15   2.089 ±   0.060   ns/op
ChainingMethodRefUnboundedBenchmark.depth_1:·gc.alloc.rate             42  avgt   15  ≈ 10⁻⁴            MB/sec
ChainingMethodRefUnboundedBenchmark.depth_1:·gc.alloc.rate.norm        42  avgt   15  ≈ 10⁻⁷              B/op
ChainingMethodRefUnboundedBenchmark.depth_1:·gc.count                  42  avgt   15     ≈ 0            counts
ChainingMethodRefUnboundedBenchmark.depth_12                           42  avgt   15   2.095 ±   0.037   ns/op
ChainingMethodRefUnboundedBenchmark.depth_12:·gc.alloc.rate            42  avgt   15  ≈ 10⁻⁴            MB/sec
ChainingMethodRefUnboundedBenchmark.depth_12:·gc.alloc.rate.norm       42  avgt   15  ≈ 10⁻⁷              B/op
ChainingMethodRefUnboundedBenchmark.depth_12:·gc.count                 42  avgt   15     ≈ 0            counts
ChainingMethodRefUnboundedBenchmark.depth_16                           42  avgt   15   2.099 ±   0.053   ns/op
ChainingMethodRefUnboundedBenchmark.depth_16:·gc.alloc.rate            42  avgt   15  ≈ 10⁻⁴            MB/sec
ChainingMethodRefUnboundedBenchmark.depth_16:·gc.alloc.rate.norm       42  avgt   15  ≈ 10⁻⁷              B/op
ChainingMethodRefUnboundedBenchmark.depth_16:·gc.count                 42  avgt   15     ≈ 0            counts
ChainingMethodRefUnboundedBenchmark.depth_2                            42  avgt   15   2.115 ±   0.007   ns/op
ChainingMethodRefUnboundedBenchmark.depth_2:·gc.alloc.rate             42  avgt   15  ≈ 10⁻⁴            MB/sec
ChainingMethodRefUnboundedBenchmark.depth_2:·gc.alloc.rate.norm        42  avgt   15  ≈ 10⁻⁷              B/op
ChainingMethodRefUnboundedBenchmark.depth_2:·gc.count                  42  avgt   15     ≈ 0            counts
ChainingMethodRefUnboundedBenchmark.depth_24                           42  avgt   15   2.050 ±   0.021   ns/op
ChainingMethodRefUnboundedBenchmark.depth_24:·gc.alloc.rate            42  avgt   15  ≈ 10⁻⁴            MB/sec
ChainingMethodRefUnboundedBenchmark.depth_24:·gc.alloc.rate.norm       42  avgt   15  ≈ 10⁻⁷              B/op
ChainingMethodRefUnboundedBenchmark.depth_24:·gc.count                 42  avgt   15     ≈ 0            counts
ChainingMethodRefUnboundedBenchmark.depth_3                            42  avgt   15   2.073 ±   0.053   ns/op
ChainingMethodRefUnboundedBenchmark.depth_3:·gc.alloc.rate             42  avgt   15  ≈ 10⁻⁴            MB/sec
ChainingMethodRefUnboundedBenchmark.depth_3:·gc.alloc.rate.norm        42  avgt   15  ≈ 10⁻⁷              B/op
ChainingMethodRefUnboundedBenchmark.depth_3:·gc.count                  42  avgt   15     ≈ 0            counts
ChainingMethodRefUnboundedBenchmark.depth_4                            42  avgt   15   2.101 ±   0.048   ns/op
ChainingMethodRefUnboundedBenchmark.depth_4:·gc.alloc.rate             42  avgt   15  ≈ 10⁻⁴            MB/sec
ChainingMethodRefUnboundedBenchmark.depth_4:·gc.alloc.rate.norm        42  avgt   15  ≈ 10⁻⁷              B/op
ChainingMethodRefUnboundedBenchmark.depth_4:·gc.count                  42  avgt   15     ≈ 0            counts
ChainingMethodRefUnboundedBenchmark.depth_5                            42  avgt   15   2.051 ±   0.063   ns/op
ChainingMethodRefUnboundedBenchmark.depth_5:·gc.alloc.rate             42  avgt   15  ≈ 10⁻⁴            MB/sec
ChainingMethodRefUnboundedBenchmark.depth_5:·gc.alloc.rate.norm        42  avgt   15  ≈ 10⁻⁷              B/op
ChainingMethodRefUnboundedBenchmark.depth_5:·gc.count                  42  avgt   15     ≈ 0            counts
ChainingMethodRefUnboundedBenchmark.depth_6                            42  avgt   15   2.069 ±   0.044   ns/op
ChainingMethodRefUnboundedBenchmark.depth_6:·gc.alloc.rate             42  avgt   15  ≈ 10⁻⁴            MB/sec
ChainingMethodRefUnboundedBenchmark.depth_6:·gc.alloc.rate.norm        42  avgt   15  ≈ 10⁻⁷              B/op
ChainingMethodRefUnboundedBenchmark.depth_6:·gc.count                  42  avgt   15     ≈ 0            counts
ChainingMethodRefUnboundedBenchmark.depth_8                            42  avgt   15   2.044 ±   0.057   ns/op
ChainingMethodRefUnboundedBenchmark.depth_8:·gc.alloc.rate             42  avgt   15  ≈ 10⁻⁴            MB/sec
ChainingMethodRefUnboundedBenchmark.depth_8:·gc.alloc.rate.norm        42  avgt   15  ≈ 10⁻⁷              B/op
ChainingMethodRefUnboundedBenchmark.depth_8:·gc.count                  42  avgt   15     ≈ 0            counts

Benchmark result is saved to results/report-openjdk-13/hotspotvm_c1_c2_jit/ChainingMethodRefUnboundedBenchmark.json
Running java  -jar benchmarks/target/benchmarks.jar .*LambdaAllocationBenchmark.* -prof gc -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_c1_c2_jit/LambdaAllocationBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.anonymous_class

# Run progress: 0.00% complete, ETA 00:35:00
# Fork: 1 of 3
# Warmup Iteration   1: 4.958 ns/op
# Warmup Iteration   2: 4.947 ns/op
# Warmup Iteration   3: 3.509 ns/op
# Warmup Iteration   4: 3.522 ns/op
# Warmup Iteration   5: 3.567 ns/op
Iteration   1: 3.555 ns/op
                 ·gc.alloc.rate:                   4086.818 MB/sec
                 ·gc.alloc.rate.norm:              16.000 B/op
                 ·gc.churn.G1_Eden_Space:          4078.159 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     15.966 B/op
                 ·gc.churn.G1_Survivor_Space:      0.006 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:                        83.000 counts
                 ·gc.time:                         47.000 ms

Iteration   2: 3.550 ns/op
                 ·gc.alloc.rate:                   4092.848 MB/sec
                 ·gc.alloc.rate.norm:              16.000 B/op
                 ·gc.churn.G1_Eden_Space:          4127.221 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     16.134 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:                        84.000 counts
                 ·gc.time:                         47.000 ms

Iteration   3: 3.559 ns/op
                 ·gc.alloc.rate:                   4082.366 MB/sec
                 ·gc.alloc.rate.norm:              16.000 B/op
                 ·gc.churn.G1_Eden_Space:          4078.251 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     15.984 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:                        83.000 counts
                 ·gc.time:                         46.000 ms

Iteration   4: 3.581 ns/op
                 ·gc.alloc.rate:                   4057.363 MB/sec
                 ·gc.alloc.rate.norm:              16.000 B/op
                 ·gc.churn.G1_Eden_Space:          4078.277 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     16.082 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:                        83.000 counts
                 ·gc.time:                         46.000 ms

Iteration   5: 3.479 ns/op
                 ·gc.alloc.rate:                   4176.951 MB/sec
                 ·gc.alloc.rate.norm:              16.000 B/op
                 ·gc.churn.G1_Eden_Space:          4176.278 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     15.997 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:                        85.000 counts
                 ·gc.time:                         50.000 ms


# Run progress: 4.76% complete, ETA 00:35:06
# Fork: 2 of 3
# Warmup Iteration   1: 5.635 ns/op
# Warmup Iteration   2: 5.528 ns/op
# Warmup Iteration   3: 4.294 ns/op
# Warmup Iteration   4: 4.349 ns/op
# Warmup Iteration   5: 4.280 ns/op
Iteration   1: 4.348 ns/op
                 ·gc.alloc.rate:                   3341.992 MB/sec
                 ·gc.alloc.rate.norm:              16.000 B/op
                 ·gc.churn.G1_Eden_Space:          3341.098 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     15.996 B/op
                 ·gc.churn.G1_Survivor_Space:      0.007 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:                        68.000 counts
                 ·gc.time:                         39.000 ms

Iteration   2: 4.269 ns/op
                 ·gc.alloc.rate:                   3403.676 MB/sec
                 ·gc.alloc.rate.norm:              16.000 B/op
                 ·gc.churn.G1_Eden_Space:          3390.218 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     15.937 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:                        69.000 counts
                 ·gc.time:                         41.000 ms

Iteration   3: 4.211 ns/op
                 ·gc.alloc.rate:                   3450.682 MB/sec
                 ·gc.alloc.rate.norm:              16.000 B/op
                 ·gc.churn.G1_Eden_Space:          3439.448 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     15.948 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:                        70.000 counts
                 ·gc.time:                         38.000 ms

Iteration   4: 4.321 ns/op
                 ·gc.alloc.rate:                   3362.406 MB/sec
                 ·gc.alloc.rate.norm:              16.000 B/op
                 ·gc.churn.G1_Eden_Space:          3390.303 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     16.133 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:                        69.000 counts
                 ·gc.time:                         44.000 ms

Iteration   5: 4.287 ns/op
                 ·gc.alloc.rate:                   3389.344 MB/sec
                 ·gc.alloc.rate.norm:              16.000 B/op
                 ·gc.churn.G1_Eden_Space:          3390.055 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     16.003 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:                        69.000 counts
                 ·gc.time:                         45.000 ms


# Run progress: 9.52% complete, ETA 00:33:21
# Fork: 3 of 3
# Warmup Iteration   1: 5.087 ns/op
# Warmup Iteration   2: 4.848 ns/op
# Warmup Iteration   3: 3.592 ns/op
# Warmup Iteration   4: 3.645 ns/op
# Warmup Iteration   5: 3.534 ns/op
Iteration   1: 3.601 ns/op
                 ·gc.alloc.rate:                   4035.450 MB/sec
                 ·gc.alloc.rate.norm:              16.000 B/op
                 ·gc.churn.G1_Eden_Space:          4029.032 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     15.975 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:                        82.000 counts
                 ·gc.time:                         44.000 ms

Iteration   2: 3.593 ns/op
                 ·gc.alloc.rate:                   4043.798 MB/sec
                 ·gc.alloc.rate.norm:              16.000 B/op
                 ·gc.churn.G1_Eden_Space:          4078.093 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     16.136 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:                        83.000 counts
                 ·gc.time:                         46.000 ms

Iteration   3: 3.571 ns/op
                 ·gc.alloc.rate:                   4068.541 MB/sec
                 ·gc.alloc.rate.norm:              16.000 B/op
                 ·gc.churn.G1_Eden_Space:          4078.223 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     16.038 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:                        83.000 counts
                 ·gc.time:                         44.000 ms

Iteration   4: 3.615 ns/op
                 ·gc.alloc.rate:                   4020.070 MB/sec
                 ·gc.alloc.rate.norm:              16.000 B/op
                 ·gc.churn.G1_Eden_Space:          4029.251 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     16.037 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:                        82.000 counts
                 ·gc.time:                         48.000 ms

Iteration   5: 3.591 ns/op
                 ·gc.alloc.rate:                   4046.649 MB/sec
                 ·gc.alloc.rate.norm:              16.000 B/op
                 ·gc.churn.G1_Eden_Space:          4029.190 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     15.931 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:                        82.000 counts
                 ·gc.time:                         48.000 ms



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.anonymous_class":
  3.809 ±(99.9%) 0.377 ns/op [Average]
  (min, avg, max) = (3.479, 3.809, 4.348), stdev = 0.353
  CI (99.9%): [3.432, 4.186] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.anonymous_class:·gc.alloc.rate":
  3843.930 ±(99.9%) 358.276 MB/sec [Average]
  (min, avg, max) = (3341.992, 3843.930, 4176.951), stdev = 335.132
  CI (99.9%): [3485.654, 4202.206] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.anonymous_class:·gc.alloc.rate.norm":
  16.000 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (16.000, 16.000, 16.000), stdev = 0.001
  CI (99.9%): [16.000, 16.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.anonymous_class:·gc.churn.G1_Eden_Space":
  3848.873 ±(99.9%) 361.608 MB/sec [Average]
  (min, avg, max) = (3341.098, 3848.873, 4176.278), stdev = 338.248
  CI (99.9%): [3487.265, 4210.481] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.anonymous_class:·gc.churn.G1_Eden_Space.norm":
  16.020 ±(99.9%) 0.076 B/op [Average]
  (min, avg, max) = (15.931, 16.020, 16.136), stdev = 0.071
  CI (99.9%): [15.943, 16.096] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.anonymous_class:·gc.churn.G1_Survivor_Space":
  0.004 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.003, 0.004, 0.007), stdev = 0.001
  CI (99.9%): [0.003, 0.006] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.anonymous_class:·gc.churn.G1_Survivor_Space.norm":
  ≈ 10⁻⁵ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.anonymous_class:·gc.count":
  1175.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (68.000, 78.333, 85.000), stdev = 6.883
  CI (99.9%): [1175.000, 1175.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.anonymous_class:·gc.time":
  673.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (38.000, 44.867, 50.000), stdev = 3.357
  CI (99.9%): [673.000, 673.000] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.bound_method_ref

# Run progress: 14.29% complete, ETA 00:31:35
# Fork: 1 of 3
# Warmup Iteration   1: 5.071 ns/op
# Warmup Iteration   2: 4.804 ns/op
# Warmup Iteration   3: 3.581 ns/op
# Warmup Iteration   4: 3.621 ns/op
# Warmup Iteration   5: 3.560 ns/op
Iteration   1: 3.560 ns/op
                 ·gc.alloc.rate:                   4081.474 MB/sec
                 ·gc.alloc.rate.norm:              16.000 B/op
                 ·gc.churn.G1_Eden_Space:          4060.276 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     15.917 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:                        82.000 counts
                 ·gc.time:                         45.000 ms

Iteration   2: 3.557 ns/op
                 ·gc.alloc.rate:                   4085.332 MB/sec
                 ·gc.alloc.rate.norm:              16.000 B/op
                 ·gc.churn.G1_Eden_Space:          4109.736 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     16.096 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:                        83.000 counts
                 ·gc.time:                         48.000 ms

Iteration   3: 3.562 ns/op
                 ·gc.alloc.rate:                   4079.415 MB/sec
                 ·gc.alloc.rate.norm:              16.000 B/op
                 ·gc.churn.G1_Eden_Space:          4060.459 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     15.926 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:                        82.000 counts
                 ·gc.time:                         48.000 ms

Iteration   4: 3.615 ns/op
                 ·gc.alloc.rate:                   4019.484 MB/sec
                 ·gc.alloc.rate.norm:              16.000 B/op
                 ·gc.churn.G1_Eden_Space:          4060.570 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     16.164 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:                        82.000 counts
                 ·gc.time:                         48.000 ms

Iteration   5: 3.516 ns/op
                 ·gc.alloc.rate:                   4132.471 MB/sec
                 ·gc.alloc.rate.norm:              16.000 B/op
                 ·gc.churn.G1_Eden_Space:          4109.569 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     15.911 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:                        83.000 counts
                 ·gc.time:                         49.000 ms


# Run progress: 19.05% complete, ETA 00:29:50
# Fork: 2 of 3
# Warmup Iteration   1: 5.070 ns/op
# Warmup Iteration   2: 4.982 ns/op
# Warmup Iteration   3: 3.572 ns/op
# Warmup Iteration   4: 3.546 ns/op
# Warmup Iteration   5: 3.652 ns/op
Iteration   1: 3.500 ns/op
                 ·gc.alloc.rate:                   4151.933 MB/sec
                 ·gc.alloc.rate.norm:              16.000 B/op
                 ·gc.churn.G1_Eden_Space:          4127.204 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     15.905 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:                        84.000 counts
                 ·gc.time:                         45.000 ms

Iteration   2: 3.603 ns/op
                 ·gc.alloc.rate:                   4033.148 MB/sec
                 ·gc.alloc.rate.norm:              16.000 B/op
                 ·gc.churn.G1_Eden_Space:          4029.070 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     15.984 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:                        82.000 counts
                 ·gc.time:                         42.000 ms

Iteration   3: 3.538 ns/op
                 ·gc.alloc.rate:                   4107.104 MB/sec
                 ·gc.alloc.rate.norm:              16.000 B/op
                 ·gc.churn.G1_Eden_Space:          4127.239 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     16.078 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:                        84.000 counts
                 ·gc.time:                         42.000 ms

Iteration   4: 3.612 ns/op
                 ·gc.alloc.rate:                   4022.405 MB/sec
                 ·gc.alloc.rate.norm:              16.000 B/op
                 ·gc.churn.G1_Eden_Space:          4029.138 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     16.027 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:                        82.000 counts
                 ·gc.time:                         46.000 ms

Iteration   5: 3.648 ns/op
                 ·gc.alloc.rate:                   3983.419 MB/sec
                 ·gc.alloc.rate.norm:              16.000 B/op
                 ·gc.churn.G1_Eden_Space:          3979.806 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     15.985 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:                        81.000 counts
                 ·gc.time:                         47.000 ms


# Run progress: 23.81% complete, ETA 00:28:05
# Fork: 3 of 3
# Warmup Iteration   1: 5.051 ns/op
# Warmup Iteration   2: 4.941 ns/op
# Warmup Iteration   3: 3.579 ns/op
# Warmup Iteration   4: 3.651 ns/op
# Warmup Iteration   5: 3.580 ns/op
Iteration   1: 3.630 ns/op
                 ·gc.alloc.rate:                   4003.078 MB/sec
                 ·gc.alloc.rate.norm:              16.000 B/op
                 ·gc.churn.G1_Eden_Space:          4029.023 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     16.104 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:                        82.000 counts
                 ·gc.time:                         49.000 ms

Iteration   2: 3.613 ns/op
                 ·gc.alloc.rate:                   4022.239 MB/sec
                 ·gc.alloc.rate.norm:              16.000 B/op
                 ·gc.churn.G1_Eden_Space:          4029.174 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     16.028 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:                        82.000 counts
                 ·gc.time:                         43.000 ms

Iteration   3: 3.525 ns/op
                 ·gc.alloc.rate:                   4122.407 MB/sec
                 ·gc.alloc.rate.norm:              16.000 B/op
                 ·gc.churn.G1_Eden_Space:          4127.324 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     16.019 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:                        84.000 counts
                 ·gc.time:                         45.000 ms

Iteration   4: 3.644 ns/op
                 ·gc.alloc.rate:                   3987.802 MB/sec
                 ·gc.alloc.rate.norm:              16.000 B/op
                 ·gc.churn.G1_Eden_Space:          3979.825 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     15.968 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:                        81.000 counts
                 ·gc.time:                         51.000 ms

Iteration   5: 3.649 ns/op
                 ·gc.alloc.rate:                   3982.157 MB/sec
                 ·gc.alloc.rate.norm:              16.000 B/op
                 ·gc.churn.G1_Eden_Space:          3979.980 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     15.991 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:                        81.000 counts
                 ·gc.time:                         50.000 ms



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.bound_method_ref":
  3.585 ±(99.9%) 0.054 ns/op [Average]
  (min, avg, max) = (3.500, 3.585, 3.649), stdev = 0.051
  CI (99.9%): [3.530, 3.639] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.bound_method_ref:·gc.alloc.rate":
  4054.258 ±(99.9%) 61.533 MB/sec [Average]
  (min, avg, max) = (3982.157, 4054.258, 4151.933), stdev = 57.558
  CI (99.9%): [3992.725, 4115.791] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.bound_method_ref:·gc.alloc.rate.norm":
  16.000 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (16.000, 16.000, 16.000), stdev = 0.001
  CI (99.9%): [16.000, 16.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.bound_method_ref:·gc.churn.G1_Eden_Space":
  4055.893 ±(99.9%) 58.086 MB/sec [Average]
  (min, avg, max) = (3979.806, 4055.893, 4127.324), stdev = 54.333
  CI (99.9%): [3997.807, 4113.978] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.bound_method_ref:·gc.churn.G1_Eden_Space.norm":
  16.007 ±(99.9%) 0.083 B/op [Average]
  (min, avg, max) = (15.905, 16.007, 16.164), stdev = 0.078
  CI (99.9%): [15.924, 16.090] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.bound_method_ref:·gc.churn.G1_Survivor_Space":
  0.004 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.002, 0.004, 0.005), stdev = 0.001
  CI (99.9%): [0.003, 0.005] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.bound_method_ref:·gc.churn.G1_Survivor_Space.norm":
  ≈ 10⁻⁵ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.bound_method_ref:·gc.count":
  1235.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (81.000, 82.333, 84.000), stdev = 1.047
  CI (99.9%): [1235.000, 1235.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.bound_method_ref:·gc.time":
  698.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (42.000, 46.533, 51.000), stdev = 2.825
  CI (99.9%): [698.000, 698.000] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.capturing_lambda
# Parameters: (param = 42)

# Run progress: 28.57% complete, ETA 00:26:19
# Fork: 1 of 3
# Warmup Iteration   1: 3.316 ns/op
# Warmup Iteration   2: 3.311 ns/op
# Warmup Iteration   3: 2.622 ns/op
# Warmup Iteration   4: 2.616 ns/op
# Warmup Iteration   5: 2.610 ns/op
Iteration   1: 2.611 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.610 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.608 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.610 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.607 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 33.33% complete, ETA 00:24:34
# Fork: 2 of 3
# Warmup Iteration   1: 3.255 ns/op
# Warmup Iteration   2: 3.274 ns/op
# Warmup Iteration   3: 2.600 ns/op
# Warmup Iteration   4: 2.604 ns/op
# Warmup Iteration   5: 2.452 ns/op
Iteration   1: 2.607 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.610 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.610 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.599 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.602 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 38.10% complete, ETA 00:22:49
# Fork: 3 of 3
# Warmup Iteration   1: 3.221 ns/op
# Warmup Iteration   2: 3.062 ns/op
# Warmup Iteration   3: 2.448 ns/op
# Warmup Iteration   4: 2.458 ns/op
# Warmup Iteration   5: 2.459 ns/op
Iteration   1: 2.462 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.459 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.465 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.465 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.467 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.capturing_lambda":
  2.559 ±(99.9%) 0.075 ns/op [Average]
  (min, avg, max) = (2.459, 2.559, 2.611), stdev = 0.070
  CI (99.9%): [2.484, 2.634] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.capturing_lambda:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.capturing_lambda:·gc.alloc.rate.norm":
  ≈ 10⁻⁷ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.capturing_lambda:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.inner_class

# Run progress: 42.86% complete, ETA 00:21:03
# Fork: 1 of 3
# Warmup Iteration   1: 5.024 ns/op
# Warmup Iteration   2: 4.779 ns/op
# Warmup Iteration   3: 3.541 ns/op
# Warmup Iteration   4: 3.594 ns/op
# Warmup Iteration   5: 3.638 ns/op
Iteration   1: 3.612 ns/op
                 ·gc.alloc.rate:                   4022.512 MB/sec
                 ·gc.alloc.rate.norm:              16.000 B/op
                 ·gc.churn.G1_Eden_Space:          4022.245 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     15.999 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:                        96.000 counts
                 ·gc.time:                         52.000 ms

Iteration   2: 3.648 ns/op
                 ·gc.alloc.rate:                   3983.512 MB/sec
                 ·gc.alloc.rate.norm:              16.000 B/op
                 ·gc.churn.G1_Eden_Space:          4022.277 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     16.156 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:                        96.000 counts
                 ·gc.time:                         53.000 ms

Iteration   3: 3.610 ns/op
                 ·gc.alloc.rate:                   4024.640 MB/sec
                 ·gc.alloc.rate.norm:              16.000 B/op
                 ·gc.churn.G1_Eden_Space:          4021.973 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     15.989 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:                        96.000 counts
                 ·gc.time:                         59.000 ms

Iteration   4: 3.587 ns/op
                 ·gc.alloc.rate:                   4050.940 MB/sec
                 ·gc.alloc.rate.norm:              16.000 B/op
                 ·gc.churn.G1_Eden_Space:          4022.210 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     15.887 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:                        96.000 counts
                 ·gc.time:                         52.000 ms

Iteration   5: 3.596 ns/op
                 ·gc.alloc.rate:                   4040.968 MB/sec
                 ·gc.alloc.rate.norm:              16.000 B/op
                 ·gc.churn.G1_Eden_Space:          4063.914 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     16.091 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:                        97.000 counts
                 ·gc.time:                         55.000 ms


# Run progress: 47.62% complete, ETA 00:19:18
# Fork: 2 of 3
# Warmup Iteration   1: 5.113 ns/op
# Warmup Iteration   2: 4.875 ns/op
# Warmup Iteration   3: 3.601 ns/op
# Warmup Iteration   4: 3.544 ns/op
# Warmup Iteration   5: 3.522 ns/op
Iteration   1: 3.583 ns/op
                 ·gc.alloc.rate:                   4054.866 MB/sec
                 ·gc.alloc.rate.norm:              16.000 B/op
                 ·gc.churn.G1_Eden_Space:          4029.030 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     15.898 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:                        82.000 counts
                 ·gc.time:                         48.000 ms

Iteration   2: 3.670 ns/op
                 ·gc.alloc.rate:                   3959.461 MB/sec
                 ·gc.alloc.rate.norm:              16.000 B/op
                 ·gc.churn.G1_Eden_Space:          3979.723 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     16.082 B/op
                 ·gc.churn.G1_Survivor_Space:      0.006 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:                        81.000 counts
                 ·gc.time:                         51.000 ms

Iteration   3: 3.615 ns/op
                 ·gc.alloc.rate:                   4019.238 MB/sec
                 ·gc.alloc.rate.norm:              16.000 B/op
                 ·gc.churn.G1_Eden_Space:          4029.054 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     16.039 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:                        82.000 counts
                 ·gc.time:                         45.000 ms

Iteration   4: 3.654 ns/op
                 ·gc.alloc.rate:                   3976.299 MB/sec
                 ·gc.alloc.rate.norm:              16.000 B/op
                 ·gc.churn.G1_Eden_Space:          3980.007 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     16.015 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:                        81.000 counts
                 ·gc.time:                         49.000 ms

Iteration   5: 3.545 ns/op
                 ·gc.alloc.rate:                   4098.569 MB/sec
                 ·gc.alloc.rate.norm:              16.000 B/op
                 ·gc.churn.G1_Eden_Space:          4077.839 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     15.919 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:                        83.000 counts
                 ·gc.time:                         46.000 ms


# Run progress: 52.38% complete, ETA 00:17:33
# Fork: 3 of 3
# Warmup Iteration   1: 5.135 ns/op
# Warmup Iteration   2: 4.853 ns/op
# Warmup Iteration   3: 3.604 ns/op
# Warmup Iteration   4: 3.584 ns/op
# Warmup Iteration   5: 3.638 ns/op
Iteration   1: 3.627 ns/op
                 ·gc.alloc.rate:                   4006.658 MB/sec
                 ·gc.alloc.rate.norm:              16.000 B/op
                 ·gc.churn.G1_Eden_Space:          4022.400 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     16.063 B/op
                 ·gc.churn.G1_Survivor_Space:      0.007 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:                        80.000 counts
                 ·gc.time:                         45.000 ms

Iteration   2: 3.603 ns/op
                 ·gc.alloc.rate:                   4033.055 MB/sec
                 ·gc.alloc.rate.norm:              16.000 B/op
                 ·gc.churn.G1_Eden_Space:          4022.164 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     15.957 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:                        80.000 counts
                 ·gc.time:                         49.000 ms

Iteration   3: 3.626 ns/op
                 ·gc.alloc.rate:                   4007.508 MB/sec
                 ·gc.alloc.rate.norm:              16.000 B/op
                 ·gc.churn.G1_Eden_Space:          4022.149 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     16.058 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:                        80.000 counts
                 ·gc.time:                         47.000 ms

Iteration   4: 3.646 ns/op
                 ·gc.alloc.rate:                   3985.154 MB/sec
                 ·gc.alloc.rate.norm:              16.000 B/op
                 ·gc.churn.G1_Eden_Space:          3972.141 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     15.948 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:                        79.000 counts
                 ·gc.time:                         46.000 ms

Iteration   5: 3.594 ns/op
                 ·gc.alloc.rate:                   4042.702 MB/sec
                 ·gc.alloc.rate.norm:              16.000 B/op
                 ·gc.churn.G1_Eden_Space:          4072.650 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     16.119 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁵ B/op
                 ·gc.count:                        81.000 counts
                 ·gc.time:                         49.000 ms



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.inner_class":
  3.614 ±(99.9%) 0.034 ns/op [Average]
  (min, avg, max) = (3.545, 3.614, 3.670), stdev = 0.032
  CI (99.9%): [3.580, 3.649] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.inner_class:·gc.alloc.rate":
  4020.406 ±(99.9%) 38.282 MB/sec [Average]
  (min, avg, max) = (3959.461, 4020.406, 4098.569), stdev = 35.809
  CI (99.9%): [3982.124, 4058.687] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.inner_class:·gc.alloc.rate.norm":
  16.000 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (16.000, 16.000, 16.000), stdev = 0.001
  CI (99.9%): [16.000, 16.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.inner_class:·gc.churn.G1_Eden_Space":
  4023.985 ±(99.9%) 33.219 MB/sec [Average]
  (min, avg, max) = (3972.141, 4023.985, 4077.839), stdev = 31.073
  CI (99.9%): [3990.766, 4057.204] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.inner_class:·gc.churn.G1_Eden_Space.norm":
  16.015 ±(99.9%) 0.087 B/op [Average]
  (min, avg, max) = (15.887, 16.015, 16.156), stdev = 0.082
  CI (99.9%): [15.927, 16.102] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.inner_class:·gc.churn.G1_Survivor_Space":
  0.004 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.003, 0.004, 0.007), stdev = 0.001
  CI (99.9%): [0.003, 0.006] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.inner_class:·gc.churn.G1_Survivor_Space.norm":
  ≈ 10⁻⁵ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.inner_class:·gc.count":
  1290.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (79.000, 86.000, 97.000), stdev = 7.531
  CI (99.9%): [1290.000, 1290.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.inner_class:·gc.time":
  746.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (45.000, 49.733, 59.000), stdev = 3.973
  CI (99.9%): [746.000, 746.000] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.lambda

# Run progress: 57.14% complete, ETA 00:15:47
# Fork: 1 of 3
# Warmup Iteration   1: 2.929 ns/op
# Warmup Iteration   2: 2.966 ns/op
# Warmup Iteration   3: 2.469 ns/op
# Warmup Iteration   4: 2.474 ns/op
# Warmup Iteration   5: 2.470 ns/op
Iteration   1: 2.633 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.616 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.607 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.605 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.605 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 61.90% complete, ETA 00:14:02
# Fork: 2 of 3
# Warmup Iteration   1: 3.052 ns/op
# Warmup Iteration   2: 2.939 ns/op
# Warmup Iteration   3: 2.458 ns/op
# Warmup Iteration   4: 2.465 ns/op
# Warmup Iteration   5: 2.467 ns/op
Iteration   1: 2.469 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.466 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.467 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.467 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.466 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 66.67% complete, ETA 00:12:17
# Fork: 3 of 3
# Warmup Iteration   1: 2.887 ns/op
# Warmup Iteration   2: 2.951 ns/op
# Warmup Iteration   3: 2.464 ns/op
# Warmup Iteration   4: 2.466 ns/op
# Warmup Iteration   5: 2.467 ns/op
Iteration   1: 2.466 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.623 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.615 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.608 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.603 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.lambda":
  2.555 ±(99.9%) 0.080 ns/op [Average]
  (min, avg, max) = (2.466, 2.555, 2.633), stdev = 0.074
  CI (99.9%): [2.475, 2.634] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.lambda:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.lambda:·gc.alloc.rate.norm":
  ≈ 10⁻⁷ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.lambda:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.static_method_ref

# Run progress: 71.43% complete, ETA 00:10:31
# Fork: 1 of 3
# Warmup Iteration   1: 3.041 ns/op
# Warmup Iteration   2: 3.083 ns/op
# Warmup Iteration   3: 2.592 ns/op
# Warmup Iteration   4: 2.586 ns/op
# Warmup Iteration   5: 2.584 ns/op
Iteration   1: 2.587 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.587 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.590 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.586 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.592 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 76.19% complete, ETA 00:08:46
# Fork: 2 of 3
# Warmup Iteration   1: 3.042 ns/op
# Warmup Iteration   2: 3.008 ns/op
# Warmup Iteration   3: 2.512 ns/op
# Warmup Iteration   4: 2.525 ns/op
# Warmup Iteration   5: 2.524 ns/op
Iteration   1: 2.524 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.450 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.456 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.459 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.461 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 80.95% complete, ETA 00:07:01
# Fork: 3 of 3
# Warmup Iteration   1: 2.881 ns/op
# Warmup Iteration   2: 2.944 ns/op
# Warmup Iteration   3: 2.461 ns/op
# Warmup Iteration   4: 2.461 ns/op
# Warmup Iteration   5: 2.461 ns/op
Iteration   1: 2.465 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.467 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.464 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.464 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.462 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.static_method_ref":
  2.508 ±(99.9%) 0.065 ns/op [Average]
  (min, avg, max) = (2.450, 2.508, 2.592), stdev = 0.061
  CI (99.9%): [2.442, 2.573] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.static_method_ref:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.static_method_ref:·gc.alloc.rate.norm":
  ≈ 10⁻⁷ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.static_method_ref:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.unbound_method_ref

# Run progress: 85.71% complete, ETA 00:05:15
# Fork: 1 of 3
# Warmup Iteration   1: 3.059 ns/op
# Warmup Iteration   2: 3.116 ns/op
# Warmup Iteration   3: 2.590 ns/op
# Warmup Iteration   4: 2.587 ns/op
# Warmup Iteration   5: 2.593 ns/op
Iteration   1: 2.589 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.587 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.585 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.582 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.578 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 90.48% complete, ETA 00:03:30
# Fork: 2 of 3
# Warmup Iteration   1: 2.949 ns/op
# Warmup Iteration   2: 3.015 ns/op
# Warmup Iteration   3: 2.516 ns/op
# Warmup Iteration   4: 2.527 ns/op
# Warmup Iteration   5: 2.520 ns/op
Iteration   1: 2.517 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.520 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.518 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.517 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.513 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 95.24% complete, ETA 00:01:45
# Fork: 3 of 3
# Warmup Iteration   1: 3.042 ns/op
# Warmup Iteration   2: 3.098 ns/op
# Warmup Iteration   3: 2.581 ns/op
# Warmup Iteration   4: 2.583 ns/op
# Warmup Iteration   5: 2.587 ns/op
Iteration   1: 2.583 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.580 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.577 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.576 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.573 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.unbound_method_ref":
  2.560 ±(99.9%) 0.034 ns/op [Average]
  (min, avg, max) = (2.513, 2.560, 2.589), stdev = 0.032
  CI (99.9%): [2.526, 2.593] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.unbound_method_ref:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.unbound_method_ref:·gc.alloc.rate.norm":
  ≈ 10⁻⁷ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.lambda.LambdaAllocationBenchmark.unbound_method_ref:·gc.count":
  ≈ 0 counts


# Run complete. Total time: 00:36:51

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                                                    (param)  Mode  Cnt     Score     Error   Units
LambdaAllocationBenchmark.anonymous_class                                        N/A  avgt   15     3.809 ±   0.377   ns/op
LambdaAllocationBenchmark.anonymous_class:·gc.alloc.rate                         N/A  avgt   15  3843.930 ± 358.276  MB/sec
LambdaAllocationBenchmark.anonymous_class:·gc.alloc.rate.norm                    N/A  avgt   15    16.000 ±   0.001    B/op
LambdaAllocationBenchmark.anonymous_class:·gc.churn.G1_Eden_Space                N/A  avgt   15  3848.873 ± 361.608  MB/sec
LambdaAllocationBenchmark.anonymous_class:·gc.churn.G1_Eden_Space.norm           N/A  avgt   15    16.020 ±   0.076    B/op
LambdaAllocationBenchmark.anonymous_class:·gc.churn.G1_Survivor_Space            N/A  avgt   15     0.004 ±   0.001  MB/sec
LambdaAllocationBenchmark.anonymous_class:·gc.churn.G1_Survivor_Space.norm       N/A  avgt   15    ≈ 10⁻⁵              B/op
LambdaAllocationBenchmark.anonymous_class:·gc.count                              N/A  avgt   15  1175.000            counts
LambdaAllocationBenchmark.anonymous_class:·gc.time                               N/A  avgt   15   673.000                ms
LambdaAllocationBenchmark.bound_method_ref                                       N/A  avgt   15     3.585 ±   0.054   ns/op
LambdaAllocationBenchmark.bound_method_ref:·gc.alloc.rate                        N/A  avgt   15  4054.258 ±  61.533  MB/sec
LambdaAllocationBenchmark.bound_method_ref:·gc.alloc.rate.norm                   N/A  avgt   15    16.000 ±   0.001    B/op
LambdaAllocationBenchmark.bound_method_ref:·gc.churn.G1_Eden_Space               N/A  avgt   15  4055.893 ±  58.086  MB/sec
LambdaAllocationBenchmark.bound_method_ref:·gc.churn.G1_Eden_Space.norm          N/A  avgt   15    16.007 ±   0.083    B/op
LambdaAllocationBenchmark.bound_method_ref:·gc.churn.G1_Survivor_Space           N/A  avgt   15     0.004 ±   0.001  MB/sec
LambdaAllocationBenchmark.bound_method_ref:·gc.churn.G1_Survivor_Space.norm      N/A  avgt   15    ≈ 10⁻⁵              B/op
LambdaAllocationBenchmark.bound_method_ref:·gc.count                             N/A  avgt   15  1235.000            counts
LambdaAllocationBenchmark.bound_method_ref:·gc.time                              N/A  avgt   15   698.000                ms
LambdaAllocationBenchmark.capturing_lambda                                        42  avgt   15     2.559 ±   0.075   ns/op
LambdaAllocationBenchmark.capturing_lambda:·gc.alloc.rate                         42  avgt   15    ≈ 10⁻⁴            MB/sec
LambdaAllocationBenchmark.capturing_lambda:·gc.alloc.rate.norm                    42  avgt   15    ≈ 10⁻⁷              B/op
LambdaAllocationBenchmark.capturing_lambda:·gc.count                              42  avgt   15       ≈ 0            counts
LambdaAllocationBenchmark.inner_class                                            N/A  avgt   15     3.614 ±   0.034   ns/op
LambdaAllocationBenchmark.inner_class:·gc.alloc.rate                             N/A  avgt   15  4020.406 ±  38.282  MB/sec
LambdaAllocationBenchmark.inner_class:·gc.alloc.rate.norm                        N/A  avgt   15    16.000 ±   0.001    B/op
LambdaAllocationBenchmark.inner_class:·gc.churn.G1_Eden_Space                    N/A  avgt   15  4023.985 ±  33.219  MB/sec
LambdaAllocationBenchmark.inner_class:·gc.churn.G1_Eden_Space.norm               N/A  avgt   15    16.015 ±   0.087    B/op
LambdaAllocationBenchmark.inner_class:·gc.churn.G1_Survivor_Space                N/A  avgt   15     0.004 ±   0.001  MB/sec
LambdaAllocationBenchmark.inner_class:·gc.churn.G1_Survivor_Space.norm           N/A  avgt   15    ≈ 10⁻⁵              B/op
LambdaAllocationBenchmark.inner_class:·gc.count                                  N/A  avgt   15  1290.000            counts
LambdaAllocationBenchmark.inner_class:·gc.time                                   N/A  avgt   15   746.000                ms
LambdaAllocationBenchmark.lambda                                                 N/A  avgt   15     2.555 ±   0.080   ns/op
LambdaAllocationBenchmark.lambda:·gc.alloc.rate                                  N/A  avgt   15    ≈ 10⁻⁴            MB/sec
LambdaAllocationBenchmark.lambda:·gc.alloc.rate.norm                             N/A  avgt   15    ≈ 10⁻⁷              B/op
LambdaAllocationBenchmark.lambda:·gc.count                                       N/A  avgt   15       ≈ 0            counts
LambdaAllocationBenchmark.static_method_ref                                      N/A  avgt   15     2.508 ±   0.065   ns/op
LambdaAllocationBenchmark.static_method_ref:·gc.alloc.rate                       N/A  avgt   15    ≈ 10⁻⁴            MB/sec
LambdaAllocationBenchmark.static_method_ref:·gc.alloc.rate.norm                  N/A  avgt   15    ≈ 10⁻⁷              B/op
LambdaAllocationBenchmark.static_method_ref:·gc.count                            N/A  avgt   15       ≈ 0            counts
LambdaAllocationBenchmark.unbound_method_ref                                     N/A  avgt   15     2.560 ±   0.034   ns/op
LambdaAllocationBenchmark.unbound_method_ref:·gc.alloc.rate                      N/A  avgt   15    ≈ 10⁻⁴            MB/sec
LambdaAllocationBenchmark.unbound_method_ref:·gc.alloc.rate.norm                 N/A  avgt   15    ≈ 10⁻⁷              B/op
LambdaAllocationBenchmark.unbound_method_ref:·gc.count                           N/A  avgt   15       ≈ 0            counts

Benchmark result is saved to results/report-openjdk-13/hotspotvm_c1_c2_jit/LambdaAllocationBenchmark.json
Running java  -jar benchmarks/target/benchmarks.jar .*ScalarReplacementBenchmark.* -prof gc -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_c1_c2_jit/ScalarReplacementBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ScalarReplacementBenchmark.arg_escape_object
# Parameters: (objectEscapes = false, param = 3, size = 128)

# Run progress: 0.00% complete, ETA 00:20:00
# Fork: 1 of 3
# Warmup Iteration   1: 26.278 ns/op
# Warmup Iteration   2: 25.765 ns/op
# Warmup Iteration   3: 25.499 ns/op
# Warmup Iteration   4: 25.466 ns/op
# Warmup Iteration   5: 25.524 ns/op
Iteration   1: 25.751 ns/op
                 ·gc.alloc.rate:                   10156.650 MB/sec
                 ·gc.alloc.rate.norm:              288.000 B/op
                 ·gc.churn.G1_Eden_Space:          10203.468 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     289.328 B/op
                 ·gc.churn.G1_Survivor_Space:      0.009 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        148.000 counts
                 ·gc.time:                         81.000 ms

Iteration   2: 25.885 ns/op
                 ·gc.alloc.rate:                   10104.167 MB/sec
                 ·gc.alloc.rate.norm:              288.000 B/op
                 ·gc.churn.G1_Eden_Space:          10065.664 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     286.903 B/op
                 ·gc.churn.G1_Survivor_Space:      0.008 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        146.000 counts
                 ·gc.time:                         82.000 ms

Iteration   3: 25.795 ns/op
                 ·gc.alloc.rate:                   10139.313 MB/sec
                 ·gc.alloc.rate.norm:              288.000 B/op
                 ·gc.churn.G1_Eden_Space:          10134.333 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     287.859 B/op
                 ·gc.churn.G1_Survivor_Space:      0.008 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        147.000 counts
                 ·gc.time:                         83.000 ms

Iteration   4: 25.759 ns/op
                 ·gc.alloc.rate:                   10153.213 MB/sec
                 ·gc.alloc.rate.norm:              288.000 B/op
                 ·gc.churn.G1_Eden_Space:          10203.081 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     289.415 B/op
                 ·gc.churn.G1_Survivor_Space:      0.008 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        148.000 counts
                 ·gc.time:                         83.000 ms

Iteration   5: 25.893 ns/op
                 ·gc.alloc.rate:                   10100.748 MB/sec
                 ·gc.alloc.rate.norm:              288.000 B/op
                 ·gc.churn.G1_Eden_Space:          10134.209 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     288.954 B/op
                 ·gc.churn.G1_Survivor_Space:      0.010 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        147.000 counts
                 ·gc.time:                         88.000 ms


# Run progress: 8.33% complete, ETA 00:19:18
# Fork: 2 of 3
# Warmup Iteration   1: 27.735 ns/op
# Warmup Iteration   2: 26.022 ns/op
# Warmup Iteration   3: 25.651 ns/op
# Warmup Iteration   4: 25.647 ns/op
# Warmup Iteration   5: 25.851 ns/op
Iteration   1: 25.524 ns/op
                 ·gc.alloc.rate:                   10246.976 MB/sec
                 ·gc.alloc.rate.norm:              288.000 B/op
                 ·gc.churn.G1_Eden_Space:          10274.154 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     288.764 B/op
                 ·gc.churn.G1_Survivor_Space:      0.007 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        147.000 counts
                 ·gc.time:                         77.000 ms

Iteration   2: 26.082 ns/op
                 ·gc.alloc.rate:                   10027.429 MB/sec
                 ·gc.alloc.rate.norm:              288.000 B/op
                 ·gc.churn.G1_Eden_Space:          9994.502 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     287.054 B/op
                 ·gc.churn.G1_Survivor_Space:      0.010 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        143.000 counts
                 ·gc.time:                         79.000 ms

Iteration   3: 25.839 ns/op
                 ·gc.alloc.rate:                   10122.227 MB/sec
                 ·gc.alloc.rate.norm:              288.000 B/op
                 ·gc.churn.G1_Eden_Space:          10134.881 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     288.360 B/op
                 ·gc.churn.G1_Survivor_Space:      0.009 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        145.000 counts
                 ·gc.time:                         84.000 ms

Iteration   4: 26.092 ns/op
                 ·gc.alloc.rate:                   10024.131 MB/sec
                 ·gc.alloc.rate.norm:              288.000 B/op
                 ·gc.churn.G1_Eden_Space:          10065.022 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     289.175 B/op
                 ·gc.churn.G1_Survivor_Space:      0.008 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        144.000 counts
                 ·gc.time:                         81.000 ms

Iteration   5: 26.086 ns/op
                 ·gc.alloc.rate:                   10025.802 MB/sec
                 ·gc.alloc.rate.norm:              288.000 B/op
                 ·gc.churn.G1_Eden_Space:          10064.479 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     289.111 B/op
                 ·gc.churn.G1_Survivor_Space:      0.012 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        144.000 counts
                 ·gc.time:                         79.000 ms


# Run progress: 16.67% complete, ETA 00:17:33
# Fork: 3 of 3
# Warmup Iteration   1: 26.992 ns/op
# Warmup Iteration   2: 26.695 ns/op
# Warmup Iteration   3: 25.978 ns/op
# Warmup Iteration   4: 26.018 ns/op
# Warmup Iteration   5: 26.288 ns/op
Iteration   1: 25.952 ns/op
                 ·gc.alloc.rate:                   10078.140 MB/sec
                 ·gc.alloc.rate.norm:              288.000 B/op
                 ·gc.churn.G1_Eden_Space:          10090.766 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     288.361 B/op
                 ·gc.churn.G1_Survivor_Space:      0.007 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        148.000 counts
                 ·gc.time:                         83.000 ms

Iteration   2: 26.141 ns/op
                 ·gc.alloc.rate:                   10005.369 MB/sec
                 ·gc.alloc.rate.norm:              288.000 B/op
                 ·gc.churn.G1_Eden_Space:          10022.463 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     288.492 B/op
                 ·gc.churn.G1_Survivor_Space:      0.007 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        147.000 counts
                 ·gc.time:                         79.000 ms

Iteration   3: 25.934 ns/op
                 ·gc.alloc.rate:                   10084.841 MB/sec
                 ·gc.alloc.rate.norm:              288.000 B/op
                 ·gc.churn.G1_Eden_Space:          10090.359 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     288.158 B/op
                 ·gc.churn.G1_Survivor_Space:      0.008 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        148.000 counts
                 ·gc.time:                         84.000 ms

Iteration   4: 26.179 ns/op
                 ·gc.alloc.rate:                   9990.632 MB/sec
                 ·gc.alloc.rate.norm:              288.000 B/op
                 ·gc.churn.G1_Eden_Space:          10022.366 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     288.915 B/op
                 ·gc.churn.G1_Survivor_Space:      0.009 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        147.000 counts
                 ·gc.time:                         82.000 ms

Iteration   5: 26.317 ns/op
                 ·gc.alloc.rate:                   9937.498 MB/sec
                 ·gc.alloc.rate.norm:              288.000 B/op
                 ·gc.churn.G1_Eden_Space:          9953.505 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     288.464 B/op
                 ·gc.churn.G1_Survivor_Space:      0.013 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        146.000 counts
                 ·gc.time:                         79.000 ms



Result "com.ionutbalosin.jvm.jit.benchmark.ScalarReplacementBenchmark.arg_escape_object":
  25.949 ±(99.9%) 0.218 ns/op [Average]
  (min, avg, max) = (25.524, 25.949, 26.317), stdev = 0.204
  CI (99.9%): [25.731, 26.167] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.ScalarReplacementBenchmark.arg_escape_object:·gc.alloc.rate":
  10079.809 ±(99.9%) 84.827 MB/sec [Average]
  (min, avg, max) = (9937.498, 10079.809, 10246.976), stdev = 79.347
  CI (99.9%): [9994.982, 10164.636] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.ScalarReplacementBenchmark.arg_escape_object:·gc.alloc.rate.norm":
  288.000 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (288.000, 288.000, 288.000), stdev = 0.001
  CI (99.9%): [288.000, 288.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.ScalarReplacementBenchmark.arg_escape_object:·gc.churn.G1_Eden_Space":
  10096.883 ±(99.9%) 91.943 MB/sec [Average]
  (min, avg, max) = (9953.505, 10096.883, 10274.154), stdev = 86.004
  CI (99.9%): [10004.940, 10188.827] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.ScalarReplacementBenchmark.arg_escape_object:·gc.churn.G1_Eden_Space.norm":
  288.487 ±(99.9%) 0.808 B/op [Average]
  (min, avg, max) = (286.903, 288.487, 289.415), stdev = 0.756
  CI (99.9%): [287.679, 289.296] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.ScalarReplacementBenchmark.arg_escape_object:·gc.churn.G1_Survivor_Space":
  0.009 ±(99.9%) 0.002 MB/sec [Average]
  (min, avg, max) = (0.007, 0.009, 0.013), stdev = 0.002
  CI (99.9%): [0.007, 0.011] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.ScalarReplacementBenchmark.arg_escape_object:·gc.churn.G1_Survivor_Space.norm":
  ≈ 10⁻⁴ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.ScalarReplacementBenchmark.arg_escape_object:·gc.count":
  2195.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (143.000, 146.333, 148.000), stdev = 1.633
  CI (99.9%): [2195.000, 2195.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.ScalarReplacementBenchmark.arg_escape_object:·gc.time":
  1224.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (77.000, 81.600, 88.000), stdev = 2.772
  CI (99.9%): [1224.000, 1224.000] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ScalarReplacementBenchmark.branch_escape_object
# Parameters: (objectEscapes = false, param = 3, size = 128)

# Run progress: 25.00% complete, ETA 00:15:47
# Fork: 1 of 3
# Warmup Iteration   1: 16.631 ns/op
# Warmup Iteration   2: 15.257 ns/op
# Warmup Iteration   3: 15.742 ns/op
# Warmup Iteration   4: 15.700 ns/op
# Warmup Iteration   5: 15.703 ns/op
Iteration   1: 15.648 ns/op
                 ·gc.alloc.rate:                   8356.839 MB/sec
                 ·gc.alloc.rate.norm:              144.000 B/op
                 ·gc.churn.G1_Eden_Space:          8344.730 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     143.791 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        134.000 counts
                 ·gc.time:                         76.000 ms

Iteration   2: 15.746 ns/op
                 ·gc.alloc.rate:                   8304.877 MB/sec
                 ·gc.alloc.rate.norm:              144.000 B/op
                 ·gc.churn.G1_Eden_Space:          8344.811 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     144.692 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        134.000 counts
                 ·gc.time:                         73.000 ms

Iteration   3: 15.990 ns/op
                 ·gc.alloc.rate:                   8177.976 MB/sec
                 ·gc.alloc.rate.norm:              144.000 B/op
                 ·gc.churn.G1_Eden_Space:          8157.903 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     143.647 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        131.000 counts
                 ·gc.time:                         73.000 ms

Iteration   4: 15.875 ns/op
                 ·gc.alloc.rate:                   8237.838 MB/sec
                 ·gc.alloc.rate.norm:              144.000 B/op
                 ·gc.churn.G1_Eden_Space:          8283.157 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     144.792 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        133.000 counts
                 ·gc.time:                         74.000 ms

Iteration   5: 15.818 ns/op
                 ·gc.alloc.rate:                   8267.580 MB/sec
                 ·gc.alloc.rate.norm:              144.000 B/op
                 ·gc.churn.G1_Eden_Space:          8282.901 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     144.267 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        133.000 counts
                 ·gc.time:                         78.000 ms


# Run progress: 33.33% complete, ETA 00:14:02
# Fork: 2 of 3
# Warmup Iteration   1: 16.818 ns/op
# Warmup Iteration   2: 15.358 ns/op
# Warmup Iteration   3: 15.833 ns/op
# Warmup Iteration   4: 15.920 ns/op
# Warmup Iteration   5: 15.815 ns/op
Iteration   1: 15.759 ns/op
                 ·gc.alloc.rate:                   8298.378 MB/sec
                 ·gc.alloc.rate.norm:              144.000 B/op
                 ·gc.churn.G1_Eden_Space:          8349.178 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     144.882 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        137.000 counts
                 ·gc.time:                         74.000 ms

Iteration   2: 15.867 ns/op
                 ·gc.alloc.rate:                   8241.999 MB/sec
                 ·gc.alloc.rate.norm:              144.000 B/op
                 ·gc.churn.G1_Eden_Space:          8227.325 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     143.744 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        135.000 counts
                 ·gc.time:                         74.000 ms

Iteration   3: 15.974 ns/op
                 ·gc.alloc.rate:                   8186.989 MB/sec
                 ·gc.alloc.rate.norm:              144.000 B/op
                 ·gc.churn.G1_Eden_Space:          8227.700 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     144.716 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        135.000 counts
                 ·gc.time:                         76.000 ms

Iteration   4: 15.663 ns/op
                 ·gc.alloc.rate:                   8349.186 MB/sec
                 ·gc.alloc.rate.norm:              144.000 B/op
                 ·gc.churn.G1_Eden_Space:          8349.179 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     144.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        137.000 counts
                 ·gc.time:                         73.000 ms

Iteration   5: 15.849 ns/op
                 ·gc.alloc.rate:                   8251.172 MB/sec
                 ·gc.alloc.rate.norm:              144.000 B/op
                 ·gc.churn.G1_Eden_Space:          8227.228 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     143.582 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        135.000 counts
                 ·gc.time:                         76.000 ms


# Run progress: 41.67% complete, ETA 00:12:17
# Fork: 3 of 3
# Warmup Iteration   1: 16.951 ns/op
# Warmup Iteration   2: 14.901 ns/op
# Warmup Iteration   3: 15.856 ns/op
# Warmup Iteration   4: 16.038 ns/op
# Warmup Iteration   5: 16.051 ns/op
Iteration   1: 15.698 ns/op
                 ·gc.alloc.rate:                   8330.507 MB/sec
                 ·gc.alloc.rate.norm:              144.000 B/op
                 ·gc.churn.G1_Eden_Space:          8319.372 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     143.808 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        134.000 counts
                 ·gc.time:                         74.000 ms

Iteration   2: 16.046 ns/op
                 ·gc.alloc.rate:                   8149.558 MB/sec
                 ·gc.alloc.rate.norm:              144.000 B/op
                 ·gc.churn.G1_Eden_Space:          8195.055 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     144.804 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        132.000 counts
                 ·gc.time:                         74.000 ms

Iteration   3: 15.524 ns/op
                 ·gc.alloc.rate:                   8423.861 MB/sec
                 ·gc.alloc.rate.norm:              144.000 B/op
                 ·gc.churn.G1_Eden_Space:          8443.566 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     144.337 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        136.000 counts
                 ·gc.time:                         73.000 ms

Iteration   4: 15.822 ns/op
                 ·gc.alloc.rate:                   8265.021 MB/sec
                 ·gc.alloc.rate.norm:              144.000 B/op
                 ·gc.churn.G1_Eden_Space:          8257.094 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     143.862 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        133.000 counts
                 ·gc.time:                         71.000 ms

Iteration   5: 15.783 ns/op
                 ·gc.alloc.rate:                   8285.372 MB/sec
                 ·gc.alloc.rate.norm:              144.000 B/op
                 ·gc.churn.G1_Eden_Space:          8257.285 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     143.512 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        133.000 counts
                 ·gc.time:                         75.000 ms



Result "com.ionutbalosin.jvm.jit.benchmark.ScalarReplacementBenchmark.branch_escape_object":
  15.804 ±(99.9%) 0.149 ns/op [Average]
  (min, avg, max) = (15.524, 15.804, 16.046), stdev = 0.140
  CI (99.9%): [15.655, 15.954] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.ScalarReplacementBenchmark.branch_escape_object:·gc.alloc.rate":
  8275.144 ±(99.9%) 78.287 MB/sec [Average]
  (min, avg, max) = (8149.558, 8275.144, 8423.861), stdev = 73.230
  CI (99.9%): [8196.857, 8353.430] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.ScalarReplacementBenchmark.branch_escape_object:·gc.alloc.rate.norm":
  144.000 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (144.000, 144.000, 144.000), stdev = 0.001
  CI (99.9%): [144.000, 144.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.ScalarReplacementBenchmark.branch_escape_object:·gc.churn.G1_Eden_Space":
  8284.432 ±(99.9%) 79.514 MB/sec [Average]
  (min, avg, max) = (8157.903, 8284.432, 8443.566), stdev = 74.378
  CI (99.9%): [8204.918, 8363.946] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.ScalarReplacementBenchmark.branch_escape_object:·gc.churn.G1_Eden_Space.norm":
  144.162 ±(99.9%) 0.537 B/op [Average]
  (min, avg, max) = (143.512, 144.162, 144.882), stdev = 0.503
  CI (99.9%): [143.625, 144.700] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.ScalarReplacementBenchmark.branch_escape_object:·gc.churn.G1_Survivor_Space":
  0.004 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.003, 0.004, 0.005), stdev = 0.001
  CI (99.9%): [0.003, 0.004] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.ScalarReplacementBenchmark.branch_escape_object:·gc.churn.G1_Survivor_Space.norm":
  ≈ 10⁻⁴ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.ScalarReplacementBenchmark.branch_escape_object:·gc.count":
  2012.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (131.000, 134.133, 137.000), stdev = 1.727
  CI (99.9%): [2012.000, 2012.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.ScalarReplacementBenchmark.branch_escape_object:·gc.time":
  1114.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (71.000, 74.267, 78.000), stdev = 1.710
  CI (99.9%): [1114.000, 1114.000] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ScalarReplacementBenchmark.no_escape
# Parameters: (objectEscapes = false, param = 3, size = 128)

# Run progress: 50.00% complete, ETA 00:10:31
# Fork: 1 of 3
# Warmup Iteration   1: 2.579 ns/op
# Warmup Iteration   2: 2.556 ns/op
# Warmup Iteration   3: 2.290 ns/op
# Warmup Iteration   4: 2.295 ns/op
# Warmup Iteration   5: 2.427 ns/op
Iteration   1: 2.410 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.342 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.335 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.336 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.338 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 58.33% complete, ETA 00:08:46
# Fork: 2 of 3
# Warmup Iteration   1: 2.495 ns/op
# Warmup Iteration   2: 2.604 ns/op
# Warmup Iteration   3: 2.331 ns/op
# Warmup Iteration   4: 2.343 ns/op
# Warmup Iteration   5: 2.329 ns/op
Iteration   1: 2.329 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.326 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.327 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.320 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.322 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 66.67% complete, ETA 00:07:01
# Fork: 3 of 3
# Warmup Iteration   1: 2.565 ns/op
# Warmup Iteration   2: 2.664 ns/op
# Warmup Iteration   3: 2.391 ns/op
# Warmup Iteration   4: 2.391 ns/op
# Warmup Iteration   5: 2.385 ns/op
Iteration   1: 2.388 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.385 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.385 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.382 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.375 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.ScalarReplacementBenchmark.no_escape":
  2.353 ±(99.9%) 0.032 ns/op [Average]
  (min, avg, max) = (2.320, 2.353, 2.410), stdev = 0.030
  CI (99.9%): [2.321, 2.386] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.ScalarReplacementBenchmark.no_escape:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.ScalarReplacementBenchmark.no_escape:·gc.alloc.rate.norm":
  ≈ 10⁻⁷ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.ScalarReplacementBenchmark.no_escape:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.ScalarReplacementBenchmark.no_escape_array_object
# Parameters: (objectEscapes = false, param = 3, size = 128)

# Run progress: 75.00% complete, ETA 00:05:15
# Fork: 1 of 3
# Warmup Iteration   1: 15.986 ns/op
# Warmup Iteration   2: 15.573 ns/op
# Warmup Iteration   3: 15.560 ns/op
# Warmup Iteration   4: 15.585 ns/op
# Warmup Iteration   5: 15.646 ns/op
Iteration   1: 15.574 ns/op
                 ·gc.alloc.rate:                   8396.534 MB/sec
                 ·gc.alloc.rate.norm:              144.000 B/op
                 ·gc.churn.G1_Eden_Space:          8396.166 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     143.994 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        132.000 counts
                 ·gc.time:                         72.000 ms

Iteration   2: 15.719 ns/op
                 ·gc.alloc.rate:                   8319.082 MB/sec
                 ·gc.alloc.rate.norm:              144.000 B/op
                 ·gc.churn.G1_Eden_Space:          8332.607 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     144.234 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        131.000 counts
                 ·gc.time:                         76.000 ms

Iteration   3: 15.638 ns/op
                 ·gc.alloc.rate:                   8362.631 MB/sec
                 ·gc.alloc.rate.norm:              144.000 B/op
                 ·gc.churn.G1_Eden_Space:          8333.245 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     143.494 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        131.000 counts
                 ·gc.time:                         71.000 ms

Iteration   4: 15.601 ns/op
                 ·gc.alloc.rate:                   8382.267 MB/sec
                 ·gc.alloc.rate.norm:              144.000 B/op
                 ·gc.churn.G1_Eden_Space:          8396.401 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     144.243 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        132.000 counts
                 ·gc.time:                         69.000 ms

Iteration   5: 15.830 ns/op
                 ·gc.alloc.rate:                   8260.869 MB/sec
                 ·gc.alloc.rate.norm:              144.000 B/op
                 ·gc.churn.G1_Eden_Space:          8269.143 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     144.144 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        130.000 counts
                 ·gc.time:                         68.000 ms


# Run progress: 83.33% complete, ETA 00:03:30
# Fork: 2 of 3
# Warmup Iteration   1: 16.559 ns/op
# Warmup Iteration   2: 15.796 ns/op
# Warmup Iteration   3: 15.795 ns/op
# Warmup Iteration   4: 15.501 ns/op
# Warmup Iteration   5: 15.748 ns/op
Iteration   1: 15.879 ns/op
                 ·gc.alloc.rate:                   8235.458 MB/sec
                 ·gc.alloc.rate.norm:              144.000 B/op
                 ·gc.churn.G1_Eden_Space:          8269.312 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     144.592 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        130.000 counts
                 ·gc.time:                         75.000 ms

Iteration   2: 15.747 ns/op
                 ·gc.alloc.rate:                   8304.629 MB/sec
                 ·gc.alloc.rate.norm:              144.000 B/op
                 ·gc.churn.G1_Eden_Space:          8268.858 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     143.380 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        130.000 counts
                 ·gc.time:                         71.000 ms

Iteration   3: 15.640 ns/op
                 ·gc.alloc.rate:                   8361.873 MB/sec
                 ·gc.alloc.rate.norm:              144.000 B/op
                 ·gc.churn.G1_Eden_Space:          8396.720 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     144.600 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        132.000 counts
                 ·gc.time:                         76.000 ms

Iteration   4: 15.595 ns/op
                 ·gc.alloc.rate:                   8385.672 MB/sec
                 ·gc.alloc.rate.norm:              144.000 B/op
                 ·gc.churn.G1_Eden_Space:          8396.610 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     144.188 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        132.000 counts
                 ·gc.time:                         75.000 ms

Iteration   5: 15.788 ns/op
                 ·gc.alloc.rate:                   8282.728 MB/sec
                 ·gc.alloc.rate.norm:              144.000 B/op
                 ·gc.churn.G1_Eden_Space:          8268.973 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     143.761 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        130.000 counts
                 ·gc.time:                         74.000 ms


# Run progress: 91.67% complete, ETA 00:01:45
# Fork: 3 of 3
# Warmup Iteration   1: 16.689 ns/op
# Warmup Iteration   2: 15.752 ns/op
# Warmup Iteration   3: 15.990 ns/op
# Warmup Iteration   4: 15.835 ns/op
# Warmup Iteration   5: 15.792 ns/op
Iteration   1: 15.822 ns/op
                 ·gc.alloc.rate:                   8264.874 MB/sec
                 ·gc.alloc.rate.norm:              144.000 B/op
                 ·gc.churn.G1_Eden_Space:          8254.430 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     143.818 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        129.000 counts
                 ·gc.time:                         72.000 ms

Iteration   2: 15.631 ns/op
                 ·gc.alloc.rate:                   8366.558 MB/sec
                 ·gc.alloc.rate.norm:              144.000 B/op
                 ·gc.churn.G1_Eden_Space:          8383.014 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     144.283 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        131.000 counts
                 ·gc.time:                         73.000 ms

Iteration   3: 15.499 ns/op
                 ·gc.alloc.rate:                   8437.586 MB/sec
                 ·gc.alloc.rate.norm:              144.000 B/op
                 ·gc.churn.G1_Eden_Space:          8446.729 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     144.156 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        132.000 counts
                 ·gc.time:                         73.000 ms

Iteration   4: 15.863 ns/op
                 ·gc.alloc.rate:                   8243.496 MB/sec
                 ·gc.alloc.rate.norm:              144.000 B/op
                 ·gc.churn.G1_Eden_Space:          8254.540 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     144.193 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        129.000 counts
                 ·gc.time:                         73.000 ms

Iteration   5: 15.710 ns/op
                 ·gc.alloc.rate:                   8323.827 MB/sec
                 ·gc.alloc.rate.norm:              144.000 B/op
                 ·gc.churn.G1_Eden_Space:          8318.091 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     143.901 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        130.000 counts
                 ·gc.time:                         72.000 ms



Result "com.ionutbalosin.jvm.jit.benchmark.ScalarReplacementBenchmark.no_escape_array_object":
  15.702 ±(99.9%) 0.125 ns/op [Average]
  (min, avg, max) = (15.499, 15.702, 15.879), stdev = 0.117
  CI (99.9%): [15.578, 15.827] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.ScalarReplacementBenchmark.no_escape_array_object:·gc.alloc.rate":
  8328.539 ±(99.9%) 66.207 MB/sec [Average]
  (min, avg, max) = (8235.458, 8328.539, 8437.586), stdev = 61.930
  CI (99.9%): [8262.332, 8394.746] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.ScalarReplacementBenchmark.no_escape_array_object:·gc.alloc.rate.norm":
  144.000 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (144.000, 144.000, 144.000), stdev = 0.001
  CI (99.9%): [144.000, 144.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.ScalarReplacementBenchmark.no_escape_array_object:·gc.churn.G1_Eden_Space":
  8332.322 ±(99.9%) 70.245 MB/sec [Average]
  (min, avg, max) = (8254.430, 8332.322, 8446.729), stdev = 65.707
  CI (99.9%): [8262.077, 8402.567] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.ScalarReplacementBenchmark.no_escape_array_object:·gc.churn.G1_Eden_Space.norm":
  144.065 ±(99.9%) 0.372 B/op [Average]
  (min, avg, max) = (143.380, 144.065, 144.600), stdev = 0.348
  CI (99.9%): [143.693, 144.438] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.ScalarReplacementBenchmark.no_escape_array_object:·gc.churn.G1_Survivor_Space":
  0.004 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.003, 0.004, 0.005), stdev = 0.001
  CI (99.9%): [0.003, 0.004] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.ScalarReplacementBenchmark.no_escape_array_object:·gc.churn.G1_Survivor_Space.norm":
  ≈ 10⁻⁴ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.ScalarReplacementBenchmark.no_escape_array_object:·gc.count":
  1961.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (129.000, 130.733, 132.000), stdev = 1.100
  CI (99.9%): [1961.000, 1961.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.ScalarReplacementBenchmark.no_escape_array_object:·gc.time":
  1090.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (68.000, 72.667, 76.000), stdev = 2.350
  CI (99.9%): [1090.000, 1090.000] (assumes normal distribution)


# Run complete. Total time: 00:21:03

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                                                           (objectEscapes)  (param)  (size)  Mode  Cnt      Score    Error   Units
ScalarReplacementBenchmark.arg_escape_object                                                  false        3     128  avgt   15     25.949 ±  0.218   ns/op
ScalarReplacementBenchmark.arg_escape_object:·gc.alloc.rate                                   false        3     128  avgt   15  10079.809 ± 84.827  MB/sec
ScalarReplacementBenchmark.arg_escape_object:·gc.alloc.rate.norm                              false        3     128  avgt   15    288.000 ±  0.001    B/op
ScalarReplacementBenchmark.arg_escape_object:·gc.churn.G1_Eden_Space                          false        3     128  avgt   15  10096.883 ± 91.943  MB/sec
ScalarReplacementBenchmark.arg_escape_object:·gc.churn.G1_Eden_Space.norm                     false        3     128  avgt   15    288.487 ±  0.808    B/op
ScalarReplacementBenchmark.arg_escape_object:·gc.churn.G1_Survivor_Space                      false        3     128  avgt   15      0.009 ±  0.002  MB/sec
ScalarReplacementBenchmark.arg_escape_object:·gc.churn.G1_Survivor_Space.norm                 false        3     128  avgt   15     ≈ 10⁻⁴             B/op
ScalarReplacementBenchmark.arg_escape_object:·gc.count                                        false        3     128  avgt   15   2195.000           counts
ScalarReplacementBenchmark.arg_escape_object:·gc.time                                         false        3     128  avgt   15   1224.000               ms
ScalarReplacementBenchmark.branch_escape_object                                               false        3     128  avgt   15     15.804 ±  0.149   ns/op
ScalarReplacementBenchmark.branch_escape_object:·gc.alloc.rate                                false        3     128  avgt   15   8275.144 ± 78.287  MB/sec
ScalarReplacementBenchmark.branch_escape_object:·gc.alloc.rate.norm                           false        3     128  avgt   15    144.000 ±  0.001    B/op
ScalarReplacementBenchmark.branch_escape_object:·gc.churn.G1_Eden_Space                       false        3     128  avgt   15   8284.432 ± 79.514  MB/sec
ScalarReplacementBenchmark.branch_escape_object:·gc.churn.G1_Eden_Space.norm                  false        3     128  avgt   15    144.162 ±  0.537    B/op
ScalarReplacementBenchmark.branch_escape_object:·gc.churn.G1_Survivor_Space                   false        3     128  avgt   15      0.004 ±  0.001  MB/sec
ScalarReplacementBenchmark.branch_escape_object:·gc.churn.G1_Survivor_Space.norm              false        3     128  avgt   15     ≈ 10⁻⁴             B/op
ScalarReplacementBenchmark.branch_escape_object:·gc.count                                     false        3     128  avgt   15   2012.000           counts
ScalarReplacementBenchmark.branch_escape_object:·gc.time                                      false        3     128  avgt   15   1114.000               ms
ScalarReplacementBenchmark.no_escape                                                          false        3     128  avgt   15      2.353 ±  0.032   ns/op
ScalarReplacementBenchmark.no_escape:·gc.alloc.rate                                           false        3     128  avgt   15     ≈ 10⁻⁴           MB/sec
ScalarReplacementBenchmark.no_escape:·gc.alloc.rate.norm                                      false        3     128  avgt   15     ≈ 10⁻⁷             B/op
ScalarReplacementBenchmark.no_escape:·gc.count                                                false        3     128  avgt   15        ≈ 0           counts
ScalarReplacementBenchmark.no_escape_array_object                                             false        3     128  avgt   15     15.702 ±  0.125   ns/op
ScalarReplacementBenchmark.no_escape_array_object:·gc.alloc.rate                              false        3     128  avgt   15   8328.539 ± 66.207  MB/sec
ScalarReplacementBenchmark.no_escape_array_object:·gc.alloc.rate.norm                         false        3     128  avgt   15    144.000 ±  0.001    B/op
ScalarReplacementBenchmark.no_escape_array_object:·gc.churn.G1_Eden_Space                     false        3     128  avgt   15   8332.322 ± 70.245  MB/sec
ScalarReplacementBenchmark.no_escape_array_object:·gc.churn.G1_Eden_Space.norm                false        3     128  avgt   15    144.065 ±  0.372    B/op
ScalarReplacementBenchmark.no_escape_array_object:·gc.churn.G1_Survivor_Space                 false        3     128  avgt   15      0.004 ±  0.001  MB/sec
ScalarReplacementBenchmark.no_escape_array_object:·gc.churn.G1_Survivor_Space.norm            false        3     128  avgt   15     ≈ 10⁻⁴             B/op
ScalarReplacementBenchmark.no_escape_array_object:·gc.count                                   false        3     128  avgt   15   1961.000           counts
ScalarReplacementBenchmark.no_escape_array_object:·gc.time                                    false        3     128  avgt   15   1090.000               ms

Benchmark result is saved to results/report-openjdk-13/hotspotvm_c1_c2_jit/ScalarReplacementBenchmark.json
Running java  -jar benchmarks/target/benchmarks.jar .*PassingConsumerVsExternalForEachIteratorBenchmark.* -prof gc -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_c1_c2_jit/PassingConsumerVsExternalForEachIteratorBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.PassingConsumerVsExternalForEachIteratorBenchmark.external_for_each

# Run progress: 0.00% complete, ETA 00:10:00
# Fork: 1 of 3
# Warmup Iteration   1: 278.949 ms/op
# Warmup Iteration   2: 256.814 ms/op
# Warmup Iteration   3: 254.379 ms/op
# Warmup Iteration   4: 258.632 ms/op
# Warmup Iteration   5: 252.057 ms/op
Iteration   1: 265.648 ms/op
                 ·gc.alloc.rate:                   774.545 MB/sec
                 ·gc.alloc.rate.norm:              226456139.579 B/op
                 ·gc.churn.G1_Eden_Space:          431.127 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     126049872.842 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 488.842 B/op
                 ·gc.count:                        10.000 counts
                 ·gc.time:                         145.000 ms

Iteration   2: 271.169 ms/op
                 ·gc.alloc.rate:                   758.521 MB/sec
                 ·gc.alloc.rate.norm:              226456178.378 B/op
                 ·gc.churn.G1_Eden_Space:          433.808 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     129513305.946 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 390.486 B/op
                 ·gc.count:                        10.000 counts
                 ·gc.time:                         213.000 ms

Iteration   3: 271.469 ms/op
                 ·gc.alloc.rate:                   757.719 MB/sec
                 ·gc.alloc.rate.norm:              226456243.027 B/op
                 ·gc.churn.G1_Eden_Space:          473.366 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     141472740.324 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 313.946 B/op
                 ·gc.count:                        11.000 counts
                 ·gc.time:                         227.000 ms

Iteration   4: 274.149 ms/op
                 ·gc.alloc.rate:                   750.707 MB/sec
                 ·gc.alloc.rate.norm:              226456243.892 B/op
                 ·gc.churn.G1_Eden_Space:          429.151 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     129456626.162 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 432.000 B/op
                 ·gc.count:                        10.000 counts
                 ·gc.time:                         210.000 ms

Iteration   5: 269.773 ms/op
                 ·gc.alloc.rate:                   763.250 MB/sec
                 ·gc.alloc.rate.norm:              226456242.737 B/op
                 ·gc.churn.G1_Eden_Space:          470.598 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     139626172.632 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 271.579 B/op
                 ·gc.count:                        11.000 counts
                 ·gc.time:                         229.000 ms


# Run progress: 16.67% complete, ETA 00:08:55
# Fork: 2 of 3
# Warmup Iteration   1: 303.310 ms/op
# Warmup Iteration   2: 276.073 ms/op
# Warmup Iteration   3: 271.158 ms/op
# Warmup Iteration   4: 271.464 ms/op
# Warmup Iteration   5: 276.027 ms/op
Iteration   1: 269.736 ms/op
                 ·gc.alloc.rate:                   763.312 MB/sec
                 ·gc.alloc.rate.norm:              226456138.737 B/op
                 ·gc.churn.G1_Eden_Space:          450.359 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     133610657.684 B/op
                 ·gc.churn.G1_Survivor_Space:      0.256 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 76003.579 B/op
                 ·gc.count:                        7.000 counts
                 ·gc.time:                         88.000 ms

Iteration   2: 271.125 ms/op
                 ·gc.alloc.rate:                   758.664 MB/sec
                 ·gc.alloc.rate.norm:              226456139.892 B/op
                 ·gc.churn.G1_Eden_Space:          469.589 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     140169105.297 B/op
                 ·gc.churn.G1_Survivor_Space:      0.348 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 103982.270 B/op
                 ·gc.count:                        7.000 counts
                 ·gc.time:                         144.000 ms

Iteration   3: 272.777 ms/op
                 ·gc.alloc.rate:                   754.242 MB/sec
                 ·gc.alloc.rate.norm:              226456243.027 B/op
                 ·gc.churn.G1_Eden_Space:          395.871 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     118857506.595 B/op
                 ·gc.churn.G1_Survivor_Space:      0.260 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 78094.054 B/op
                 ·gc.count:                        6.000 counts
                 ·gc.time:                         130.000 ms

Iteration   4: 273.389 ms/op
                 ·gc.alloc.rate:                   752.645 MB/sec
                 ·gc.alloc.rate.norm:              226456243.027 B/op
                 ·gc.churn.G1_Eden_Space:          456.067 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     137221756.541 B/op
                 ·gc.churn.G1_Survivor_Space:      0.260 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 78094.054 B/op
                 ·gc.count:                        7.000 counts
                 ·gc.time:                         145.000 ms

Iteration   5: 277.670 ms/op
                 ·gc.alloc.rate:                   741.590 MB/sec
                 ·gc.alloc.rate.norm:              226456243.892 B/op
                 ·gc.churn.G1_Eden_Space:          459.020 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     140169105.297 B/op
                 ·gc.churn.G1_Survivor_Space:      0.342 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 104524.541 B/op
                 ·gc.count:                        7.000 counts
                 ·gc.time:                         153.000 ms


# Run progress: 33.33% complete, ETA 00:07:08
# Fork: 3 of 3
# Warmup Iteration   1: 292.008 ms/op
# Warmup Iteration   2: 266.660 ms/op
# Warmup Iteration   3: 266.923 ms/op
# Warmup Iteration   4: 280.303 ms/op
# Warmup Iteration   5: 282.519 ms/op
Iteration   1: 285.389 ms/op
                 ·gc.alloc.rate:                   721.571 MB/sec
                 ·gc.alloc.rate.norm:              226456140.222 B/op
                 ·gc.churn.G1_Eden_Space:          424.325 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     133169152.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 344.000 B/op
                 ·gc.count:                        13.000 counts
                 ·gc.time:                         272.000 ms

Iteration   2: 291.255 ms/op
                 ·gc.alloc.rate:                   706.762 MB/sec
                 ·gc.alloc.rate.norm:              226456140.571 B/op
                 ·gc.churn.G1_Eden_Space:          431.231 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     138172357.486 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 256.457 B/op
                 ·gc.count:                        13.000 counts
                 ·gc.time:                         269.000 ms

Iteration   3: 288.796 ms/op
                 ·gc.alloc.rate:                   712.473 MB/sec
                 ·gc.alloc.rate.norm:              226456238.629 B/op
                 ·gc.churn.G1_Eden_Space:          400.972 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     127446922.971 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 449.829 B/op
                 ·gc.count:                        12.000 counts
                 ·gc.time:                         248.000 ms

Iteration   4: 286.647 ms/op
                 ·gc.alloc.rate:                   717.599 MB/sec
                 ·gc.alloc.rate.norm:              226456243.657 B/op
                 ·gc.churn.G1_Eden_Space:          437.464 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     138052520.229 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 456.686 B/op
                 ·gc.count:                        13.000 counts
                 ·gc.time:                         273.000 ms

Iteration   5: 285.661 ms/op
                 ·gc.alloc.rate:                   720.924 MB/sec
                 ·gc.alloc.rate.norm:              226456243.333 B/op
                 ·gc.churn.G1_Eden_Space:          428.024 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     134450744.889 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 401.333 B/op
                 ·gc.count:                        13.000 counts
                 ·gc.time:                         273.000 ms



Result "com.ionutbalosin.jvm.jit.benchmark.PassingConsumerVsExternalForEachIteratorBenchmark.external_for_each":
  276.977 ±(99.9%) 8.821 ms/op [Average]
  (min, avg, max) = (265.648, 276.977, 291.255), stdev = 8.251
  CI (99.9%): [268.156, 285.798] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.PassingConsumerVsExternalForEachIteratorBenchmark.external_for_each:·gc.alloc.rate":
  743.635 ±(99.9%) 23.268 MB/sec [Average]
  (min, avg, max) = (706.762, 743.635, 774.545), stdev = 21.765
  CI (99.9%): [720.366, 766.903] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.PassingConsumerVsExternalForEachIteratorBenchmark.external_for_each:·gc.alloc.rate.norm":
  226456204.173 ±(99.9%) 53.329 B/op [Average]
  (min, avg, max) = (226456138.737, 226456204.173, 226456243.892), stdev = 49.884
  CI (99.9%): [226456150.845, 226456257.502] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.PassingConsumerVsExternalForEachIteratorBenchmark.external_for_each:·gc.churn.G1_Eden_Space":
  439.398 ±(99.9%) 25.274 MB/sec [Average]
  (min, avg, max) = (395.871, 439.398, 473.366), stdev = 23.641
  CI (99.9%): [414.124, 464.672] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.PassingConsumerVsExternalForEachIteratorBenchmark.external_for_each:·gc.churn.G1_Eden_Space.norm":
  133829236.460 ±(99.9%) 6908513.103 B/op [Average]
  (min, avg, max) = (118857506.595, 133829236.460, 141472740.324), stdev = 6462227.443
  CI (99.9%): [126920723.357, 140737749.563] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.PassingConsumerVsExternalForEachIteratorBenchmark.external_for_each:·gc.churn.G1_Survivor_Space":
  0.099 ±(99.9%) 0.155 MB/sec [Average]
  (min, avg, max) = (0.001, 0.099, 0.348), stdev = 0.145
  CI (99.9%): [≈ 0, 0.253] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.PassingConsumerVsExternalForEachIteratorBenchmark.external_for_each:·gc.churn.G1_Survivor_Space.norm":
  29633.577 ±(99.9%) 46547.453 B/op [Average]
  (min, avg, max) = (256.457, 29633.577, 104524.541), stdev = 43540.516
  CI (99.9%): [≈ 0, 76181.030] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.PassingConsumerVsExternalForEachIteratorBenchmark.external_for_each:·gc.count":
  150.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (6.000, 10.000, 13.000), stdev = 2.591
  CI (99.9%): [150.000, 150.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.PassingConsumerVsExternalForEachIteratorBenchmark.external_for_each:·gc.time":
  3019.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (88.000, 201.267, 273.000), stdev = 61.853
  CI (99.9%): [3019.000, 3019.000] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.PassingConsumerVsExternalForEachIteratorBenchmark.passing_consumer

# Run progress: 50.00% complete, ETA 00:05:21
# Fork: 1 of 3
# Warmup Iteration   1: 284.328 ms/op
# Warmup Iteration   2: 264.511 ms/op
# Warmup Iteration   3: 271.480 ms/op
# Warmup Iteration   4: 275.658 ms/op
# Warmup Iteration   5: 276.805 ms/op
Iteration   1: 274.330 ms/op
                 ·gc.alloc.rate:                   750.238 MB/sec
                 ·gc.alloc.rate.norm:              226456235.892 B/op
                 ·gc.churn.G1_Eden_Space:          412.922 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     124638844.541 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 354.162 B/op
                 ·gc.count:                        8.000 counts
                 ·gc.time:                         160.000 ms

Iteration   2: 274.311 ms/op
                 ·gc.alloc.rate:                   750.238 MB/sec
                 ·gc.alloc.rate.norm:              226456243.459 B/op
                 ·gc.churn.G1_Eden_Space:          465.312 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     140452504.216 B/op
                 ·gc.churn.G1_Survivor_Space:      ≈ 10⁻³ MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 147.892 B/op
                 ·gc.count:                        9.000 counts
                 ·gc.time:                         183.000 ms

Iteration   3: 272.956 ms/op
                 ·gc.alloc.rate:                   753.791 MB/sec
                 ·gc.alloc.rate.norm:              226456339.027 B/op
                 ·gc.churn.G1_Eden_Space:          416.576 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     125148962.595 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 355.459 B/op
                 ·gc.count:                        8.000 counts
                 ·gc.time:                         160.000 ms

Iteration   4: 273.595 ms/op
                 ·gc.alloc.rate:                   752.118 MB/sec
                 ·gc.alloc.rate.norm:              226456339.892 B/op
                 ·gc.churn.G1_Eden_Space:          466.478 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     140452504.216 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 376.216 B/op
                 ·gc.count:                        9.000 counts
                 ·gc.time:                         186.000 ms

Iteration   5: 271.266 ms/op
                 ·gc.alloc.rate:                   758.311 MB/sec
                 ·gc.alloc.rate.norm:              226456339.892 B/op
                 ·gc.churn.G1_Eden_Space:          417.745 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     124752204.108 B/op
                 ·gc.churn.G1_Survivor_Space:      ≈ 10⁻³ MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 111.568 B/op
                 ·gc.count:                        8.000 counts
                 ·gc.time:                         163.000 ms


# Run progress: 66.67% complete, ETA 00:03:34
# Fork: 2 of 3
# Warmup Iteration   1: 266.158 ms/op
# Warmup Iteration   2: 250.279 ms/op
# Warmup Iteration   3: 252.648 ms/op
# Warmup Iteration   4: 254.739 ms/op
# Warmup Iteration   5: 249.866 ms/op
Iteration   1: 243.382 ms/op
                 ·gc.alloc.rate:                   845.857 MB/sec
                 ·gc.alloc.rate.norm:              226456233.714 B/op
                 ·gc.churn.G1_Eden_Space:          498.718 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     133518677.333 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 294.857 B/op
                 ·gc.count:                        7.000 counts
                 ·gc.time:                         94.000 ms

Iteration   2: 244.107 ms/op
                 ·gc.alloc.rate:                   843.475 MB/sec
                 ·gc.alloc.rate.norm:              226456303.810 B/op
                 ·gc.churn.G1_Eden_Space:          497.313 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     133518677.333 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 245.714 B/op
                 ·gc.count:                        7.000 counts
                 ·gc.time:                         148.000 ms

Iteration   3: 244.518 ms/op
                 ·gc.alloc.rate:                   842.120 MB/sec
                 ·gc.alloc.rate.norm:              226456337.714 B/op
                 ·gc.churn.G1_Eden_Space:          496.514 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     133518677.333 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 294.857 B/op
                 ·gc.count:                        7.000 counts
                 ·gc.time:                         147.000 ms

Iteration   4: 248.039 ms/op
                 ·gc.alloc.rate:                   829.836 MB/sec
                 ·gc.alloc.rate.norm:              226456337.951 B/op
                 ·gc.churn.G1_Eden_Space:          501.205 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     136775230.439 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 371.122 B/op
                 ·gc.count:                        7.000 counts
                 ·gc.time:                         148.000 ms

Iteration   5: 269.711 ms/op
                 ·gc.alloc.rate:                   763.398 MB/sec
                 ·gc.alloc.rate.norm:              226456338.737 B/op
                 ·gc.churn.G1_Eden_Space:          424.178 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     125829120.000 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 529.263 B/op
                 ·gc.count:                        12.000 counts
                 ·gc.time:                         263.000 ms


# Run progress: 83.33% complete, ETA 00:01:47
# Fork: 3 of 3
# Warmup Iteration   1: 274.238 ms/op
# Warmup Iteration   2: 251.120 ms/op
# Warmup Iteration   3: 272.876 ms/op
# Warmup Iteration   4: 276.053 ms/op
# Warmup Iteration   5: 277.248 ms/op
Iteration   1: 272.264 ms/op
                 ·gc.alloc.rate:                   755.621 MB/sec
                 ·gc.alloc.rate.norm:              226456235.892 B/op
                 ·gc.churn.G1_Eden_Space:          431.582 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     129343266.595 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 390.486 B/op
                 ·gc.count:                        12.000 counts
                 ·gc.time:                         238.000 ms

Iteration   2: 274.007 ms/op
                 ·gc.alloc.rate:                   751.058 MB/sec
                 ·gc.alloc.rate.norm:              226456251.892 B/op
                 ·gc.churn.G1_Eden_Space:          428.788 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     129286586.811 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 242.595 B/op
                 ·gc.count:                        12.000 counts
                 ·gc.time:                         254.000 ms

Iteration   3: 276.590 ms/op
                 ·gc.alloc.rate:                   744.401 MB/sec
                 ·gc.alloc.rate.norm:              226456339.027 B/op
                 ·gc.churn.G1_Eden_Space:          460.574 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     140112425.514 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 613.622 B/op
                 ·gc.count:                        13.000 counts
                 ·gc.time:                         273.000 ms

Iteration   4: 272.924 ms/op
                 ·gc.alloc.rate:                   753.891 MB/sec
                 ·gc.alloc.rate.norm:              226456339.027 B/op
                 ·gc.churn.G1_Eden_Space:          430.405 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     129286586.811 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 655.135 B/op
                 ·gc.count:                        12.000 counts
                 ·gc.time:                         253.000 ms

Iteration   5: 270.179 ms/op
                 ·gc.alloc.rate:                   762.142 MB/sec
                 ·gc.alloc.rate.norm:              226456338.737 B/op
                 ·gc.churn.G1_Eden_Space:          458.956 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     136370068.211 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 434.526 B/op
                 ·gc.count:                        13.000 counts
                 ·gc.time:                         272.000 ms



Result "com.ionutbalosin.jvm.jit.benchmark.PassingConsumerVsExternalForEachIteratorBenchmark.passing_consumer":
  265.479 ±(99.9%) 13.815 ms/op [Average]
  (min, avg, max) = (243.382, 265.479, 276.590), stdev = 12.922
  CI (99.9%): [251.664, 279.293] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.PassingConsumerVsExternalForEachIteratorBenchmark.passing_consumer:·gc.alloc.rate":
  777.100 ±(99.9%) 42.633 MB/sec [Average]
  (min, avg, max) = (744.401, 777.100, 845.857), stdev = 39.879
  CI (99.9%): [734.467, 819.733] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.PassingConsumerVsExternalForEachIteratorBenchmark.passing_consumer:·gc.alloc.rate.norm":
  226456303.644 ±(99.9%) 50.755 B/op [Average]
  (min, avg, max) = (226456233.714, 226456303.644, 226456339.892), stdev = 47.476
  CI (99.9%): [226456252.889, 226456354.399] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.PassingConsumerVsExternalForEachIteratorBenchmark.passing_consumer:·gc.churn.G1_Eden_Space":
  453.818 ±(99.9%) 35.282 MB/sec [Average]
  (min, avg, max) = (412.922, 453.818, 501.205), stdev = 33.003
  CI (99.9%): [418.535, 489.100] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.PassingConsumerVsExternalForEachIteratorBenchmark.passing_consumer:·gc.churn.G1_Eden_Space.norm":
  132200289.070 ±(99.9%) 6197100.844 B/op [Average]
  (min, avg, max) = (124638844.541, 132200289.070, 140452504.216), stdev = 5796771.975
  CI (99.9%): [126003188.226, 138397389.915] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.PassingConsumerVsExternalForEachIteratorBenchmark.passing_consumer:·gc.churn.G1_Survivor_Space":
  0.001 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (≈ 10⁻³, 0.001, 0.002), stdev = 0.001
  CI (99.9%): [0.001, 0.002] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.PassingConsumerVsExternalForEachIteratorBenchmark.passing_consumer:·gc.churn.G1_Survivor_Space.norm":
  361.165 ±(99.9%) 163.890 B/op [Average]
  (min, avg, max) = (111.568, 361.165, 655.135), stdev = 153.303
  CI (99.9%): [197.275, 525.055] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.PassingConsumerVsExternalForEachIteratorBenchmark.passing_consumer:·gc.count":
  144.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (7.000, 9.600, 13.000), stdev = 2.414
  CI (99.9%): [144.000, 144.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.PassingConsumerVsExternalForEachIteratorBenchmark.passing_consumer:·gc.time":
  2942.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (94.000, 196.133, 273.000), stdev = 57.280
  CI (99.9%): [2942.000, 2942.000] (assumes normal distribution)


# Run complete. Total time: 00:10:44

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                                                                             Mode  Cnt          Score         Error   Units
PassingConsumerVsExternalForEachIteratorBenchmark.external_for_each                                   avgt   15        276.977 ±       8.821   ms/op
PassingConsumerVsExternalForEachIteratorBenchmark.external_for_each:·gc.alloc.rate                    avgt   15        743.635 ±      23.268  MB/sec
PassingConsumerVsExternalForEachIteratorBenchmark.external_for_each:·gc.alloc.rate.norm               avgt   15  226456204.173 ±      53.329    B/op
PassingConsumerVsExternalForEachIteratorBenchmark.external_for_each:·gc.churn.G1_Eden_Space           avgt   15        439.398 ±      25.274  MB/sec
PassingConsumerVsExternalForEachIteratorBenchmark.external_for_each:·gc.churn.G1_Eden_Space.norm      avgt   15  133829236.460 ± 6908513.103    B/op
PassingConsumerVsExternalForEachIteratorBenchmark.external_for_each:·gc.churn.G1_Survivor_Space       avgt   15          0.099 ±       0.155  MB/sec
PassingConsumerVsExternalForEachIteratorBenchmark.external_for_each:·gc.churn.G1_Survivor_Space.norm  avgt   15      29633.577 ±   46547.453    B/op
PassingConsumerVsExternalForEachIteratorBenchmark.external_for_each:·gc.count                         avgt   15        150.000                counts
PassingConsumerVsExternalForEachIteratorBenchmark.external_for_each:·gc.time                          avgt   15       3019.000                    ms
PassingConsumerVsExternalForEachIteratorBenchmark.passing_consumer                                    avgt   15        265.479 ±      13.815   ms/op
PassingConsumerVsExternalForEachIteratorBenchmark.passing_consumer:·gc.alloc.rate                     avgt   15        777.100 ±      42.633  MB/sec
PassingConsumerVsExternalForEachIteratorBenchmark.passing_consumer:·gc.alloc.rate.norm                avgt   15  226456303.644 ±      50.755    B/op
PassingConsumerVsExternalForEachIteratorBenchmark.passing_consumer:·gc.churn.G1_Eden_Space            avgt   15        453.818 ±      35.282  MB/sec
PassingConsumerVsExternalForEachIteratorBenchmark.passing_consumer:·gc.churn.G1_Eden_Space.norm       avgt   15  132200289.070 ± 6197100.844    B/op
PassingConsumerVsExternalForEachIteratorBenchmark.passing_consumer:·gc.churn.G1_Survivor_Space        avgt   15          0.001 ±       0.001  MB/sec
PassingConsumerVsExternalForEachIteratorBenchmark.passing_consumer:·gc.churn.G1_Survivor_Space.norm   avgt   15        361.165 ±     163.890    B/op
PassingConsumerVsExternalForEachIteratorBenchmark.passing_consumer:·gc.count                          avgt   15        144.000                counts
PassingConsumerVsExternalForEachIteratorBenchmark.passing_consumer:·gc.time                           avgt   15       2942.000                    ms

Benchmark result is saved to results/report-openjdk-13/hotspotvm_c1_c2_jit/PassingConsumerVsExternalForEachIteratorBenchmark.json
Running java  -jar benchmarks/target/benchmarks.jar .*EnumValuesBenchmark.* -prof gc -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_c1_c2_jit/EnumValuesBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.EnumValuesBenchmark.cached_enum_set_values
# Parameters: (iterations = 1000000)

# Run progress: 0.00% complete, ETA 00:10:00
# Fork: 1 of 3
# Warmup Iteration   1: 2.873 ns/op
# Warmup Iteration   2: 2.755 ns/op
# Warmup Iteration   3: 2.697 ns/op
# Warmup Iteration   4: 2.665 ns/op
# Warmup Iteration   5: 2.655 ns/op
Iteration   1: 2.646 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.642 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.638 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.625 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.624 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 16.67% complete, ETA 00:08:46
# Fork: 2 of 3
# Warmup Iteration   1: 2.473 ns/op
# Warmup Iteration   2: 2.484 ns/op
# Warmup Iteration   3: 2.487 ns/op
# Warmup Iteration   4: 2.487 ns/op
# Warmup Iteration   5: 2.491 ns/op
Iteration   1: 2.476 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.556 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.549 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.535 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.533 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts


# Run progress: 33.33% complete, ETA 00:07:01
# Fork: 3 of 3
# Warmup Iteration   1: 2.474 ns/op
# Warmup Iteration   2: 2.617 ns/op
# Warmup Iteration   3: 2.607 ns/op
# Warmup Iteration   4: 2.604 ns/op
# Warmup Iteration   5: 2.603 ns/op
Iteration   1: 2.595 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   2: 2.595 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   3: 2.594 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   4: 2.593 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts

Iteration   5: 2.594 ns/op
                 ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
                 ·gc.alloc.rate.norm: ≈ 10⁻⁷ B/op
                 ·gc.count:           ≈ 0 counts



Result "com.ionutbalosin.jvm.jit.benchmark.EnumValuesBenchmark.cached_enum_set_values":
  2.586 ±(99.9%) 0.052 ns/op [Average]
  (min, avg, max) = (2.476, 2.586, 2.646), stdev = 0.048
  CI (99.9%): [2.535, 2.638] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.EnumValuesBenchmark.cached_enum_set_values:·gc.alloc.rate":
  ≈ 10⁻⁴ MB/sec

Secondary result "com.ionutbalosin.jvm.jit.benchmark.EnumValuesBenchmark.cached_enum_set_values:·gc.alloc.rate.norm":
  ≈ 10⁻⁷ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.EnumValuesBenchmark.cached_enum_set_values:·gc.count":
  ≈ 0 counts


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.EnumValuesBenchmark.values
# Parameters: (iterations = 1000000)

# Run progress: 50.00% complete, ETA 00:05:15
# Fork: 1 of 3
# Warmup Iteration   1: 14.092 ns/op
# Warmup Iteration   2: 13.618 ns/op
# Warmup Iteration   3: 13.583 ns/op
# Warmup Iteration   4: 13.630 ns/op
# Warmup Iteration   5: 13.634 ns/op
Iteration   1: 13.610 ns/op
                 ·gc.alloc.rate:                   12277.695 MB/sec
                 ·gc.alloc.rate.norm:              184.000 B/op
                 ·gc.churn.G1_Eden_Space:          12251.525 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     183.608 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        165.000 counts
                 ·gc.time:                         92.000 ms

Iteration   2: 13.634 ns/op
                 ·gc.alloc.rate:                   12255.925 MB/sec
                 ·gc.alloc.rate.norm:              184.000 B/op
                 ·gc.churn.G1_Eden_Space:          12320.684 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     184.972 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        166.000 counts
                 ·gc.time:                         94.000 ms

Iteration   3: 13.715 ns/op
                 ·gc.alloc.rate:                   12184.167 MB/sec
                 ·gc.alloc.rate.norm:              184.000 B/op
                 ·gc.churn.G1_Eden_Space:          12167.281 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     183.745 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        164.000 counts
                 ·gc.time:                         98.000 ms

Iteration   4: 13.615 ns/op
                 ·gc.alloc.rate:                   12273.592 MB/sec
                 ·gc.alloc.rate.norm:              184.000 B/op
                 ·gc.churn.G1_Eden_Space:          12247.430 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     183.608 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        165.000 counts
                 ·gc.time:                         94.000 ms

Iteration   5: 13.628 ns/op
                 ·gc.alloc.rate:                   12260.692 MB/sec
                 ·gc.alloc.rate.norm:              184.000 B/op
                 ·gc.churn.G1_Eden_Space:          12325.476 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     184.972 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        166.000 counts
                 ·gc.time:                         93.000 ms


# Run progress: 66.67% complete, ETA 00:03:30
# Fork: 2 of 3
# Warmup Iteration   1: 14.247 ns/op
# Warmup Iteration   2: 13.695 ns/op
# Warmup Iteration   3: 13.732 ns/op
# Warmup Iteration   4: 13.657 ns/op
# Warmup Iteration   5: 13.685 ns/op
Iteration   1: 13.658 ns/op
                 ·gc.alloc.rate:                   12235.756 MB/sec
                 ·gc.alloc.rate.norm:              184.000 B/op
                 ·gc.churn.G1_Eden_Space:          12187.054 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     183.268 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        157.000 counts
                 ·gc.time:                         90.000 ms

Iteration   2: 13.687 ns/op
                 ·gc.alloc.rate:                   12208.113 MB/sec
                 ·gc.alloc.rate.norm:              184.000 B/op
                 ·gc.churn.G1_Eden_Space:          12270.450 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     184.940 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        158.000 counts
                 ·gc.time:                         94.000 ms

Iteration   3: 13.712 ns/op
                 ·gc.alloc.rate:                   12186.312 MB/sec
                 ·gc.alloc.rate.norm:              184.000 B/op
                 ·gc.churn.G1_Eden_Space:          12187.689 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     184.021 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        157.000 counts
                 ·gc.time:                         91.000 ms

Iteration   4: 13.668 ns/op
                 ·gc.alloc.rate:                   12225.901 MB/sec
                 ·gc.alloc.rate.norm:              184.000 B/op
                 ·gc.churn.G1_Eden_Space:          12271.542 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     184.687 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        158.000 counts
                 ·gc.time:                         95.000 ms

Iteration   5: 13.673 ns/op
                 ·gc.alloc.rate:                   12221.329 MB/sec
                 ·gc.alloc.rate.norm:              184.000 B/op
                 ·gc.churn.G1_Eden_Space:          12189.313 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     183.518 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        157.000 counts
                 ·gc.time:                         88.000 ms


# Run progress: 83.33% complete, ETA 00:01:45
# Fork: 3 of 3
# Warmup Iteration   1: 14.259 ns/op
# Warmup Iteration   2: 13.678 ns/op
# Warmup Iteration   3: 13.665 ns/op
# Warmup Iteration   4: 13.698 ns/op
# Warmup Iteration   5: 13.679 ns/op
Iteration   1: 13.614 ns/op
                 ·gc.alloc.rate:                   12273.835 MB/sec
                 ·gc.alloc.rate.norm:              184.000 B/op
                 ·gc.churn.G1_Eden_Space:          12301.916 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     184.421 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        155.000 counts
                 ·gc.time:                         90.000 ms

Iteration   2: 13.668 ns/op
                 ·gc.alloc.rate:                   12225.233 MB/sec
                 ·gc.alloc.rate.norm:              184.000 B/op
                 ·gc.churn.G1_Eden_Space:          12224.045 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     183.982 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        154.000 counts
                 ·gc.time:                         90.000 ms

Iteration   3: 13.729 ns/op
                 ·gc.alloc.rate:                   12171.689 MB/sec
                 ·gc.alloc.rate.norm:              184.000 B/op
                 ·gc.churn.G1_Eden_Space:          12220.590 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     184.739 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        154.000 counts
                 ·gc.time:                         94.000 ms

Iteration   4: 13.742 ns/op
                 ·gc.alloc.rate:                   12160.993 MB/sec
                 ·gc.alloc.rate.norm:              184.000 B/op
                 ·gc.churn.G1_Eden_Space:          12147.229 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     183.792 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        153.000 counts
                 ·gc.time:                         92.000 ms

Iteration   5: 13.679 ns/op
                 ·gc.alloc.rate:                   12215.698 MB/sec
                 ·gc.alloc.rate.norm:              184.000 B/op
                 ·gc.churn.G1_Eden_Space:          12214.511 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     183.982 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        154.000 counts
                 ·gc.time:                         89.000 ms



Result "com.ionutbalosin.jvm.jit.benchmark.EnumValuesBenchmark.values":
  13.669 ±(99.9%) 0.046 ns/op [Average]
  (min, avg, max) = (13.610, 13.669, 13.742), stdev = 0.043
  CI (99.9%): [13.623, 13.715] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.EnumValuesBenchmark.values:·gc.alloc.rate":
  12225.129 ±(99.9%) 40.766 MB/sec [Average]
  (min, avg, max) = (12160.993, 12225.129, 12277.695), stdev = 38.133
  CI (99.9%): [12184.362, 12265.895] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.EnumValuesBenchmark.values:·gc.alloc.rate.norm":
  184.000 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (184.000, 184.000, 184.000), stdev = 0.001
  CI (99.9%): [184.000, 184.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.EnumValuesBenchmark.values:·gc.churn.G1_Eden_Space":
  12235.116 ±(99.9%) 59.031 MB/sec [Average]
  (min, avg, max) = (12147.229, 12235.116, 12325.476), stdev = 55.218
  CI (99.9%): [12176.084, 12294.147] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.EnumValuesBenchmark.values:·gc.churn.G1_Eden_Space.norm":
  184.150 ±(99.9%) 0.627 B/op [Average]
  (min, avg, max) = (183.268, 184.150, 184.972), stdev = 0.587
  CI (99.9%): [183.523, 184.777] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.EnumValuesBenchmark.values:·gc.churn.G1_Survivor_Space":
  0.004 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.004, 0.004, 0.005), stdev = 0.001
  CI (99.9%): [0.004, 0.005] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.EnumValuesBenchmark.values:·gc.churn.G1_Survivor_Space.norm":
  ≈ 10⁻⁴ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.EnumValuesBenchmark.values:·gc.count":
  2383.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (153.000, 158.867, 166.000), stdev = 4.897
  CI (99.9%): [2383.000, 2383.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.EnumValuesBenchmark.values:·gc.time":
  1384.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (88.000, 92.267, 98.000), stdev = 2.658
  CI (99.9%): [1384.000, 1384.000] (assumes normal distribution)


# Run complete. Total time: 00:10:32

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                                       (iterations)  Mode  Cnt      Score    Error   Units
EnumValuesBenchmark.cached_enum_set_values                           1000000  avgt   15      2.586 ±  0.052   ns/op
EnumValuesBenchmark.cached_enum_set_values:·gc.alloc.rate            1000000  avgt   15     ≈ 10⁻⁴           MB/sec
EnumValuesBenchmark.cached_enum_set_values:·gc.alloc.rate.norm       1000000  avgt   15     ≈ 10⁻⁷             B/op
EnumValuesBenchmark.cached_enum_set_values:·gc.count                 1000000  avgt   15        ≈ 0           counts
EnumValuesBenchmark.values                                           1000000  avgt   15     13.669 ±  0.046   ns/op
EnumValuesBenchmark.values:·gc.alloc.rate                            1000000  avgt   15  12225.129 ± 40.766  MB/sec
EnumValuesBenchmark.values:·gc.alloc.rate.norm                       1000000  avgt   15    184.000 ±  0.001    B/op
EnumValuesBenchmark.values:·gc.churn.G1_Eden_Space                   1000000  avgt   15  12235.116 ± 59.031  MB/sec
EnumValuesBenchmark.values:·gc.churn.G1_Eden_Space.norm              1000000  avgt   15    184.150 ±  0.627    B/op
EnumValuesBenchmark.values:·gc.churn.G1_Survivor_Space               1000000  avgt   15      0.004 ±  0.001  MB/sec
EnumValuesBenchmark.values:·gc.churn.G1_Survivor_Space.norm          1000000  avgt   15     ≈ 10⁻⁴             B/op
EnumValuesBenchmark.values:·gc.count                                 1000000  avgt   15   2383.000           counts
EnumValuesBenchmark.values:·gc.time                                  1000000  avgt   15   1384.000               ms

Benchmark result is saved to results/report-openjdk-13/hotspotvm_c1_c2_jit/EnumValuesBenchmark.json
Running java  -jar benchmarks/target/benchmarks.jar .*LogRecordBenchmark.* -prof gc -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_c1_c2_jit/LogRecordBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.escape_lambda
# Parameters: (aBoolean = true, aInt = 42, aString = P1, theLevel = INFO)

# Run progress: 0.00% complete, ETA 01:10:00
# Fork: 1 of 3
# Warmup Iteration   1: 12451.684 ns/op
# Warmup Iteration   2: 11314.135 ns/op
# Warmup Iteration   3: 10971.875 ns/op
# Warmup Iteration   4: 10646.576 ns/op
# Warmup Iteration   5: 11004.701 ns/op
Iteration   1: 11193.347 ns/op
                 ·gc.alloc.rate:                   547.794 MB/sec
                 ·gc.alloc.rate.norm:              6752.010 B/op
                 ·gc.churn.G1_Eden_Space:          559.903 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6901.260 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.028 B/op
                 ·gc.count:                        20.000 counts
                 ·gc.time:                         12.000 ms

Iteration   2: 11058.800 ns/op
                 ·gc.alloc.rate:                   554.462 MB/sec
                 ·gc.alloc.rate.norm:              6752.010 B/op
                 ·gc.churn.G1_Eden_Space:          531.904 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6477.315 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.030 B/op
                 ·gc.count:                        19.000 counts
                 ·gc.time:                         12.000 ms

Iteration   3: 10770.583 ns/op
                 ·gc.alloc.rate:                   569.307 MB/sec
                 ·gc.alloc.rate.norm:              6752.010 B/op
                 ·gc.churn.G1_Eden_Space:          587.910 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6972.648 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.040 B/op
                 ·gc.count:                        21.000 counts
                 ·gc.time:                         13.000 ms

Iteration   4: 11081.115 ns/op
                 ·gc.alloc.rate:                   553.380 MB/sec
                 ·gc.alloc.rate.norm:              6752.010 B/op
                 ·gc.churn.G1_Eden_Space:          559.941 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6832.060 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.032 B/op
                 ·gc.count:                        20.000 counts
                 ·gc.time:                         12.000 ms

Iteration   5: 10912.686 ns/op
                 ·gc.alloc.rate:                   561.904 MB/sec
                 ·gc.alloc.rate.norm:              6752.009 B/op
                 ·gc.churn.G1_Eden_Space:          559.917 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6728.132 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.032 B/op
                 ·gc.count:                        20.000 counts
                 ·gc.time:                         12.000 ms


# Run progress: 2.38% complete, ETA 01:11:59
# Fork: 2 of 3
# Warmup Iteration   1: 11919.025 ns/op
# Warmup Iteration   2: 11274.392 ns/op
# Warmup Iteration   3: 11019.662 ns/op
# Warmup Iteration   4: 11365.043 ns/op
# Warmup Iteration   5: 10972.661 ns/op
Iteration   1: 10908.823 ns/op
                 ·gc.alloc.rate:                   566.069 MB/sec
                 ·gc.alloc.rate.norm:              6800.009 B/op
                 ·gc.churn.G1_Eden_Space:          587.891 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     7062.150 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.025 B/op
                 ·gc.count:                        21.000 counts
                 ·gc.time:                         13.000 ms

Iteration   2: 10733.920 ns/op
                 ·gc.alloc.rate:                   575.305 MB/sec
                 ·gc.alloc.rate.norm:              6800.009 B/op
                 ·gc.churn.G1_Eden_Space:          559.901 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6617.936 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.032 B/op
                 ·gc.count:                        20.000 counts
                 ·gc.time:                         12.000 ms

Iteration   3: 10719.571 ns/op
                 ·gc.alloc.rate:                   576.070 MB/sec
                 ·gc.alloc.rate.norm:              6800.009 B/op
                 ·gc.churn.G1_Eden_Space:          587.895 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6939.597 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.035 B/op
                 ·gc.count:                        21.000 counts
                 ·gc.time:                         11.000 ms

Iteration   4: 10831.789 ns/op
                 ·gc.alloc.rate:                   570.110 MB/sec
                 ·gc.alloc.rate.norm:              6800.009 B/op
                 ·gc.churn.G1_Eden_Space:          559.903 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6678.271 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.030 B/op
                 ·gc.count:                        20.000 counts
                 ·gc.time:                         12.000 ms

Iteration   5: 11446.174 ns/op
                 ·gc.alloc.rate:                   539.498 MB/sec
                 ·gc.alloc.rate.norm:              6800.009 B/op
                 ·gc.churn.G1_Eden_Space:          531.896 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6704.200 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.029 B/op
                 ·gc.count:                        19.000 counts
                 ·gc.time:                         11.000 ms


# Run progress: 4.76% complete, ETA 01:10:13
# Fork: 3 of 3
# Warmup Iteration   1: 11656.283 ns/op
# Warmup Iteration   2: 11081.444 ns/op
# Warmup Iteration   3: 10547.896 ns/op
# Warmup Iteration   4: 11239.867 ns/op
# Warmup Iteration   5: 10735.020 ns/op
Iteration   1: 10829.371 ns/op
                 ·gc.alloc.rate:                   566.206 MB/sec
                 ·gc.alloc.rate.norm:              6752.009 B/op
                 ·gc.churn.G1_Eden_Space:          559.900 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6676.810 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.018 B/op
                 ·gc.count:                        20.000 counts
                 ·gc.time:                         14.000 ms

Iteration   2: 10927.100 ns/op
                 ·gc.alloc.rate:                   561.143 MB/sec
                 ·gc.alloc.rate.norm:              6752.009 B/op
                 ·gc.churn.G1_Eden_Space:          559.904 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6737.102 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.039 B/op
                 ·gc.count:                        20.000 counts
                 ·gc.time:                         14.000 ms

Iteration   3: 11075.546 ns/op
                 ·gc.alloc.rate:                   553.626 MB/sec
                 ·gc.alloc.rate.norm:              6752.009 B/op
                 ·gc.churn.G1_Eden_Space:          559.907 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6828.610 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.032 B/op
                 ·gc.count:                        20.000 counts
                 ·gc.time:                         13.000 ms

Iteration   4: 10971.427 ns/op
                 ·gc.alloc.rate:                   558.915 MB/sec
                 ·gc.alloc.rate.norm:              6752.009 B/op
                 ·gc.churn.G1_Eden_Space:          559.942 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6764.413 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.018 B/op
                 ·gc.count:                        20.000 counts
                 ·gc.time:                         13.000 ms

Iteration   5: 10953.611 ns/op
                 ·gc.alloc.rate:                   559.785 MB/sec
                 ·gc.alloc.rate.norm:              6752.009 B/op
                 ·gc.churn.G1_Eden_Space:          559.902 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6753.417 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.029 B/op
                 ·gc.count:                        20.000 counts
                 ·gc.time:                         13.000 ms



Result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.escape_lambda":
  10960.924 ±(99.9%) 204.642 ns/op [Average]
  (min, avg, max) = (10719.571, 10960.924, 11446.174), stdev = 191.422
  CI (99.9%): [10756.282, 11165.566] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.escape_lambda:·gc.alloc.rate":
  560.905 ±(99.9%) 10.823 MB/sec [Average]
  (min, avg, max) = (539.498, 560.905, 576.070), stdev = 10.124
  CI (99.9%): [550.081, 571.728] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.escape_lambda:·gc.alloc.rate.norm":
  6768.009 ±(99.9%) 25.039 B/op [Average]
  (min, avg, max) = (6752.009, 6768.009, 6800.009), stdev = 23.421
  CI (99.9%): [6742.971, 6793.048] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.escape_lambda:·gc.churn.G1_Eden_Space":
  561.774 ±(99.9%) 17.768 MB/sec [Average]
  (min, avg, max) = (531.896, 561.774, 587.910), stdev = 16.620
  CI (99.9%): [544.007, 579.542] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.escape_lambda:·gc.churn.G1_Eden_Space.norm":
  6778.261 ±(99.9%) 159.601 B/op [Average]
  (min, avg, max) = (6477.315, 6778.261, 7062.150), stdev = 149.291
  CI (99.9%): [6618.660, 6937.863] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.escape_lambda:·gc.churn.G1_Survivor_Space":
  0.002 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.001, 0.002, 0.003), stdev = 0.001
  CI (99.9%): [0.002, 0.003] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.escape_lambda:·gc.churn.G1_Survivor_Space.norm":
  0.030 ±(99.9%) 0.007 B/op [Average]
  (min, avg, max) = (0.018, 0.030, 0.040), stdev = 0.006
  CI (99.9%): [0.023, 0.037] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.escape_lambda:·gc.count":
  301.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (19.000, 20.067, 21.000), stdev = 0.594
  CI (99.9%): [301.000, 301.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.escape_lambda:·gc.time":
  187.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (11.000, 12.467, 14.000), stdev = 0.915
  CI (99.9%): [187.000, 187.000] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.escape_lambda
# Parameters: (aBoolean = true, aInt = 42, aString = P1, theLevel = FINE)

# Run progress: 7.14% complete, ETA 01:08:27
# Fork: 1 of 3
# Warmup Iteration   1: 110.115 ns/op
# Warmup Iteration   2: 126.696 ns/op
# Warmup Iteration   3: 124.723 ns/op
# Warmup Iteration   4: 123.650 ns/op
# Warmup Iteration   5: 127.405 ns/op
Iteration   1: 123.202 ns/op
                 ·gc.alloc.rate:                   1474.292 MB/sec
                 ·gc.alloc.rate.norm:              200.000 B/op
                 ·gc.churn.G1_Eden_Space:          1500.026 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     203.491 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        44.000 counts
                 ·gc.time:                         28.000 ms

Iteration   2: 124.962 ns/op
                 ·gc.alloc.rate:                   1453.464 MB/sec
                 ·gc.alloc.rate.norm:              200.000 B/op
                 ·gc.churn.G1_Eden_Space:          1431.775 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     197.015 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        42.000 counts
                 ·gc.time:                         23.000 ms

Iteration   3: 122.265 ns/op
                 ·gc.alloc.rate:                   1485.480 MB/sec
                 ·gc.alloc.rate.norm:              200.000 B/op
                 ·gc.churn.G1_Eden_Space:          1499.912 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     201.943 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        44.000 counts
                 ·gc.time:                         25.000 ms

Iteration   4: 126.236 ns/op
                 ·gc.alloc.rate:                   1438.808 MB/sec
                 ·gc.alloc.rate.norm:              200.000 B/op
                 ·gc.churn.G1_Eden_Space:          1431.777 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     199.023 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        42.000 counts
                 ·gc.time:                         29.000 ms

Iteration   5: 121.324 ns/op
                 ·gc.alloc.rate:                   1497.064 MB/sec
                 ·gc.alloc.rate.norm:              200.000 B/op
                 ·gc.churn.G1_Eden_Space:          1499.974 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     200.389 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        44.000 counts
                 ·gc.time:                         22.000 ms


# Run progress: 9.52% complete, ETA 01:06:42
# Fork: 2 of 3
# Warmup Iteration   1: 112.569 ns/op
# Warmup Iteration   2: 109.911 ns/op
# Warmup Iteration   3: 110.567 ns/op
# Warmup Iteration   4: 111.038 ns/op
# Warmup Iteration   5: 108.137 ns/op
Iteration   1: 111.878 ns/op
                 ·gc.alloc.rate:                   1623.502 MB/sec
                 ·gc.alloc.rate.norm:              200.000 B/op
                 ·gc.churn.G1_Eden_Space:          1602.290 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     197.387 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        47.000 counts
                 ·gc.time:                         28.000 ms

Iteration   2: 108.071 ns/op
                 ·gc.alloc.rate:                   1680.559 MB/sec
                 ·gc.alloc.rate.norm:              200.000 B/op
                 ·gc.churn.G1_Eden_Space:          1704.420 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     202.840 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        50.000 counts
                 ·gc.time:                         29.000 ms

Iteration   3: 111.891 ns/op
                 ·gc.alloc.rate:                   1623.229 MB/sec
                 ·gc.alloc.rate.norm:              200.000 B/op
                 ·gc.churn.G1_Eden_Space:          1602.181 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     197.407 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        47.000 counts
                 ·gc.time:                         29.000 ms

Iteration   4: 107.163 ns/op
                 ·gc.alloc.rate:                   1694.859 MB/sec
                 ·gc.alloc.rate.norm:              200.000 B/op
                 ·gc.churn.G1_Eden_Space:          1704.476 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     201.135 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        50.000 counts
                 ·gc.time:                         29.000 ms

Iteration   5: 108.907 ns/op
                 ·gc.alloc.rate:                   1667.678 MB/sec
                 ·gc.alloc.rate.norm:              200.000 B/op
                 ·gc.churn.G1_Eden_Space:          1670.341 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     200.319 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        49.000 counts
                 ·gc.time:                         31.000 ms


# Run progress: 11.90% complete, ETA 01:04:57
# Fork: 3 of 3
# Warmup Iteration   1: 110.277 ns/op
# Warmup Iteration   2: 113.541 ns/op
# Warmup Iteration   3: 115.839 ns/op
# Warmup Iteration   4: 114.254 ns/op
# Warmup Iteration   5: 116.355 ns/op
Iteration   1: 113.423 ns/op
                 ·gc.alloc.rate:                   1601.359 MB/sec
                 ·gc.alloc.rate.norm:              200.000 B/op
                 ·gc.churn.G1_Eden_Space:          1602.259 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     200.112 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        47.000 counts
                 ·gc.time:                         27.000 ms

Iteration   2: 113.948 ns/op
                 ·gc.alloc.rate:                   1593.973 MB/sec
                 ·gc.alloc.rate.norm:              200.000 B/op
                 ·gc.churn.G1_Eden_Space:          1602.260 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     201.040 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        47.000 counts
                 ·gc.time:                         33.000 ms

Iteration   3: 114.221 ns/op
                 ·gc.alloc.rate:                   1590.238 MB/sec
                 ·gc.alloc.rate.norm:              200.000 B/op
                 ·gc.churn.G1_Eden_Space:          1602.148 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     201.498 B/op
                 ·gc.churn.G1_Survivor_Space:      0.007 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        47.000 counts
                 ·gc.time:                         31.000 ms

Iteration   4: 114.232 ns/op
                 ·gc.alloc.rate:                   1589.997 MB/sec
                 ·gc.alloc.rate.norm:              200.000 B/op
                 ·gc.churn.G1_Eden_Space:          1568.135 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     197.250 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        46.000 counts
                 ·gc.time:                         26.000 ms

Iteration   5: 115.016 ns/op
                 ·gc.alloc.rate:                   1579.129 MB/sec
                 ·gc.alloc.rate.norm:              200.000 B/op
                 ·gc.churn.G1_Eden_Space:          1602.184 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     202.920 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        47.000 counts
                 ·gc.time:                         30.000 ms



Result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.escape_lambda":
  115.783 ±(99.9%) 6.683 ns/op [Average]
  (min, avg, max) = (107.163, 115.783, 126.236), stdev = 6.251
  CI (99.9%): [109.100, 122.466] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.escape_lambda:·gc.alloc.rate":
  1572.909 ±(99.9%) 89.348 MB/sec [Average]
  (min, avg, max) = (1438.808, 1572.909, 1694.859), stdev = 83.576
  CI (99.9%): [1483.561, 1662.257] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.escape_lambda:·gc.alloc.rate.norm":
  200.000 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (200.000, 200.000, 200.000), stdev = 0.001
  CI (99.9%): [200.000, 200.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.escape_lambda:·gc.churn.G1_Eden_Space":
  1574.944 ±(99.9%) 92.588 MB/sec [Average]
  (min, avg, max) = (1431.775, 1574.944, 1704.476), stdev = 86.607
  CI (99.9%): [1482.356, 1667.532] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.escape_lambda:·gc.churn.G1_Eden_Space.norm":
  200.251 ±(99.9%) 2.347 B/op [Average]
  (min, avg, max) = (197.015, 200.251, 203.491), stdev = 2.195
  CI (99.9%): [197.904, 202.598] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.escape_lambda:·gc.churn.G1_Survivor_Space":
  0.004 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.002, 0.004, 0.007), stdev = 0.001
  CI (99.9%): [0.002, 0.005] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.escape_lambda:·gc.churn.G1_Survivor_Space.norm":
  ≈ 10⁻³ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.escape_lambda:·gc.count":
  693.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (42.000, 46.200, 50.000), stdev = 2.541
  CI (99.9%): [693.000, 693.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.escape_lambda:·gc.time":
  420.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (22.000, 28.000, 33.000), stdev = 3.000
  CI (99.9%): [420.000, 420.000] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_parametrized
# Parameters: (aBoolean = true, aInt = 42, aString = P1, theLevel = INFO)

# Run progress: 14.29% complete, ETA 01:03:11
# Fork: 1 of 3
# Warmup Iteration   1: 14553.270 ns/op
# Warmup Iteration   2: 13739.932 ns/op
# Warmup Iteration   3: 13992.662 ns/op
# Warmup Iteration   4: 13633.086 ns/op
# Warmup Iteration   5: 13501.085 ns/op
Iteration   1: 13341.203 ns/op
                 ·gc.alloc.rate:                   668.173 MB/sec
                 ·gc.alloc.rate.norm:              9816.014 B/op
                 ·gc.churn.G1_Eden_Space:          671.883 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     9870.517 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.034 B/op
                 ·gc.count:                        24.000 counts
                 ·gc.time:                         17.000 ms

Iteration   2: 13728.977 ns/op
                 ·gc.alloc.rate:                   649.277 MB/sec
                 ·gc.alloc.rate.norm:              9816.014 B/op
                 ·gc.churn.G1_Eden_Space:          671.859 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     10157.429 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.040 B/op
                 ·gc.count:                        24.000 counts
                 ·gc.time:                         15.000 ms

Iteration   3: 13841.757 ns/op
                 ·gc.alloc.rate:                   643.992 MB/sec
                 ·gc.alloc.rate.norm:              9816.013 B/op
                 ·gc.churn.G1_Eden_Space:          643.872 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     9814.181 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.046 B/op
                 ·gc.count:                        23.000 counts
                 ·gc.time:                         15.000 ms

Iteration   4: 13600.105 ns/op
                 ·gc.alloc.rate:                   655.445 MB/sec
                 ·gc.alloc.rate.norm:              9816.013 B/op
                 ·gc.churn.G1_Eden_Space:          643.879 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     9642.793 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.026 B/op
                 ·gc.count:                        23.000 counts
                 ·gc.time:                         15.000 ms

Iteration   5: 13439.121 ns/op
                 ·gc.alloc.rate:                   663.311 MB/sec
                 ·gc.alloc.rate.norm:              9816.014 B/op
                 ·gc.churn.G1_Eden_Space:          671.896 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     9943.063 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.025 B/op
                 ·gc.count:                        24.000 counts
                 ·gc.time:                         15.000 ms


# Run progress: 16.67% complete, ETA 01:01:26
# Fork: 2 of 3
# Warmup Iteration   1: 14619.792 ns/op
# Warmup Iteration   2: 13533.953 ns/op
# Warmup Iteration   3: 13652.596 ns/op
# Warmup Iteration   4: 13269.502 ns/op
# Warmup Iteration   5: 12909.383 ns/op
Iteration   1: 13215.761 ns/op
                 ·gc.alloc.rate:                   671.228 MB/sec
                 ·gc.alloc.rate.norm:              9768.014 B/op
                 ·gc.churn.G1_Eden_Space:          671.897 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     9777.746 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.033 B/op
                 ·gc.count:                        24.000 counts
                 ·gc.time:                         15.000 ms

Iteration   2: 13259.002 ns/op
                 ·gc.alloc.rate:                   669.035 MB/sec
                 ·gc.alloc.rate.norm:              9768.014 B/op
                 ·gc.churn.G1_Eden_Space:          671.895 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     9809.767 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.043 B/op
                 ·gc.count:                        24.000 counts
                 ·gc.time:                         16.000 ms

Iteration   3: 13002.074 ns/op
                 ·gc.alloc.rate:                   682.297 MB/sec
                 ·gc.alloc.rate.norm:              9768.015 B/op
                 ·gc.churn.G1_Eden_Space:          699.934 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     10020.508 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.044 B/op
                 ·gc.count:                        25.000 counts
                 ·gc.time:                         15.000 ms

Iteration   4: 13070.863 ns/op
                 ·gc.alloc.rate:                   678.705 MB/sec
                 ·gc.alloc.rate.norm:              9768.014 B/op
                 ·gc.churn.G1_Eden_Space:          671.937 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     9670.611 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.023 B/op
                 ·gc.count:                        24.000 counts
                 ·gc.time:                         16.000 ms

Iteration   5: 13161.671 ns/op
                 ·gc.alloc.rate:                   673.973 MB/sec
                 ·gc.alloc.rate.norm:              9768.014 B/op
                 ·gc.churn.G1_Eden_Space:          671.887 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     9737.789 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.030 B/op
                 ·gc.count:                        24.000 counts
                 ·gc.time:                         15.000 ms


# Run progress: 19.05% complete, ETA 00:59:40
# Fork: 3 of 3
# Warmup Iteration   1: 14828.148 ns/op
# Warmup Iteration   2: 12931.233 ns/op
# Warmup Iteration   3: 13487.350 ns/op
# Warmup Iteration   4: 13228.377 ns/op
# Warmup Iteration   5: 13198.605 ns/op
Iteration   1: 12836.043 ns/op
                 ·gc.alloc.rate:                   692.800 MB/sec
                 ·gc.alloc.rate.norm:              9792.014 B/op
                 ·gc.churn.G1_Eden_Space:          699.913 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     9892.544 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.045 B/op
                 ·gc.count:                        25.000 counts
                 ·gc.time:                         18.000 ms

Iteration   2: 12650.705 ns/op
                 ·gc.alloc.rate:                   702.934 MB/sec
                 ·gc.alloc.rate.norm:              9792.014 B/op
                 ·gc.churn.G1_Eden_Space:          699.883 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     9749.519 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.055 B/op
                 ·gc.count:                        25.000 counts
                 ·gc.time:                         15.000 ms

Iteration   3: 13343.539 ns/op
                 ·gc.alloc.rate:                   666.425 MB/sec
                 ·gc.alloc.rate.norm:              9792.014 B/op
                 ·gc.churn.G1_Eden_Space:          671.893 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     9872.348 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.050 B/op
                 ·gc.count:                        24.000 counts
                 ·gc.time:                         16.000 ms

Iteration   4: 12989.480 ns/op
                 ·gc.alloc.rate:                   684.634 MB/sec
                 ·gc.alloc.rate.norm:              9792.014 B/op
                 ·gc.churn.G1_Eden_Space:          671.933 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     9610.354 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.033 B/op
                 ·gc.count:                        24.000 counts
                 ·gc.time:                         14.000 ms

Iteration   5: 12858.922 ns/op
                 ·gc.alloc.rate:                   691.544 MB/sec
                 ·gc.alloc.rate.norm:              9792.014 B/op
                 ·gc.churn.G1_Eden_Space:          699.885 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     9910.123 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.045 B/op
                 ·gc.count:                        25.000 counts
                 ·gc.time:                         15.000 ms



Result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_parametrized":
  13222.615 ±(99.9%) 361.148 ns/op [Average]
  (min, avg, max) = (12650.705, 13222.615, 13841.757), stdev = 337.818
  CI (99.9%): [12861.467, 13583.763] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_parametrized:·gc.alloc.rate":
  672.918 ±(99.9%) 17.564 MB/sec [Average]
  (min, avg, max) = (643.992, 672.918, 702.934), stdev = 16.429
  CI (99.9%): [655.354, 690.482] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_parametrized:·gc.alloc.rate.norm":
  9792.014 ±(99.9%) 21.684 B/op [Average]
  (min, avg, max) = (9768.014, 9792.014, 9816.014), stdev = 20.283
  CI (99.9%): [9770.330, 9813.698] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_parametrized:·gc.churn.G1_Eden_Space":
  675.630 ±(99.9%) 19.164 MB/sec [Average]
  (min, avg, max) = (643.872, 675.630, 699.934), stdev = 17.926
  CI (99.9%): [656.465, 694.794] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_parametrized:·gc.churn.G1_Eden_Space.norm":
  9831.953 ±(99.9%) 155.726 B/op [Average]
  (min, avg, max) = (9610.354, 9831.953, 10157.429), stdev = 145.666
  CI (99.9%): [9676.227, 9987.679] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_parametrized:·gc.churn.G1_Survivor_Space":
  0.003 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.002, 0.003, 0.004), stdev = 0.001
  CI (99.9%): [0.002, 0.003] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_parametrized:·gc.churn.G1_Survivor_Space.norm":
  0.038 ±(99.9%) 0.010 B/op [Average]
  (min, avg, max) = (0.023, 0.038, 0.055), stdev = 0.010
  CI (99.9%): [0.028, 0.049] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_parametrized:·gc.count":
  362.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (23.000, 24.133, 25.000), stdev = 0.640
  CI (99.9%): [362.000, 362.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_parametrized:·gc.time":
  232.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (14.000, 15.467, 18.000), stdev = 0.990
  CI (99.9%): [232.000, 232.000] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_parametrized
# Parameters: (aBoolean = true, aInt = 42, aString = P1, theLevel = FINE)

# Run progress: 21.43% complete, ETA 00:57:55
# Fork: 1 of 3
# Warmup Iteration   1: 81.108 ns/op
# Warmup Iteration   2: 81.848 ns/op
# Warmup Iteration   3: 84.089 ns/op
# Warmup Iteration   4: 83.090 ns/op
# Warmup Iteration   5: 82.182 ns/op
Iteration   1: 82.840 ns/op
                 ·gc.alloc.rate:                   1841.710 MB/sec
                 ·gc.alloc.rate.norm:              168.000 B/op
                 ·gc.churn.G1_Eden_Space:          1840.844 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     167.921 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        54.000 counts
                 ·gc.time:                         30.000 ms

Iteration   2: 83.768 ns/op
                 ·gc.alloc.rate:                   1821.377 MB/sec
                 ·gc.alloc.rate.norm:              168.000 B/op
                 ·gc.churn.G1_Eden_Space:          1806.841 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     166.659 B/op
                 ·gc.churn.G1_Survivor_Space:      0.006 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        53.000 counts
                 ·gc.time:                         29.000 ms

Iteration   3: 83.097 ns/op
                 ·gc.alloc.rate:                   1836.054 MB/sec
                 ·gc.alloc.rate.norm:              168.000 B/op
                 ·gc.churn.G1_Eden_Space:          1840.919 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     168.445 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        54.000 counts
                 ·gc.time:                         29.000 ms

Iteration   4: 83.688 ns/op
                 ·gc.alloc.rate:                   1823.033 MB/sec
                 ·gc.alloc.rate.norm:              168.000 B/op
                 ·gc.churn.G1_Eden_Space:          1840.838 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     169.641 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        54.000 counts
                 ·gc.time:                         32.000 ms

Iteration   5: 83.369 ns/op
                 ·gc.alloc.rate:                   1830.014 MB/sec
                 ·gc.alloc.rate.norm:              168.000 B/op
                 ·gc.churn.G1_Eden_Space:          1840.819 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     168.992 B/op
                 ·gc.churn.G1_Survivor_Space:      0.006 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        54.000 counts
                 ·gc.time:                         30.000 ms


# Run progress: 23.81% complete, ETA 00:56:10
# Fork: 2 of 3
# Warmup Iteration   1: 84.106 ns/op
# Warmup Iteration   2: 80.872 ns/op
# Warmup Iteration   3: 82.567 ns/op
# Warmup Iteration   4: 83.075 ns/op
# Warmup Iteration   5: 82.429 ns/op
Iteration   1: 82.978 ns/op
                 ·gc.alloc.rate:                   1838.552 MB/sec
                 ·gc.alloc.rate.norm:              168.000 B/op
                 ·gc.churn.G1_Eden_Space:          1842.461 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     168.357 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        45.000 counts
                 ·gc.time:                         26.000 ms

Iteration   2: 82.214 ns/op
                 ·gc.alloc.rate:                   1855.732 MB/sec
                 ·gc.alloc.rate.norm:              168.000 B/op
                 ·gc.churn.G1_Eden_Space:          1842.561 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     166.808 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        45.000 counts
                 ·gc.time:                         27.000 ms

Iteration   3: 80.905 ns/op
                 ·gc.alloc.rate:                   1885.768 MB/sec
                 ·gc.alloc.rate.norm:              168.000 B/op
                 ·gc.churn.G1_Eden_Space:          1883.519 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     167.800 B/op
                 ·gc.churn.G1_Survivor_Space:      0.007 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        46.000 counts
                 ·gc.time:                         28.000 ms

Iteration   4: 81.188 ns/op
                 ·gc.alloc.rate:                   1879.238 MB/sec
                 ·gc.alloc.rate.norm:              168.000 B/op
                 ·gc.churn.G1_Eden_Space:          1883.563 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     168.387 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        46.000 counts
                 ·gc.time:                         27.000 ms

Iteration   5: 81.382 ns/op
                 ·gc.alloc.rate:                   1874.690 MB/sec
                 ·gc.alloc.rate.norm:              168.000 B/op
                 ·gc.churn.G1_Eden_Space:          1883.499 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     168.789 B/op
                 ·gc.churn.G1_Survivor_Space:      0.006 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        46.000 counts
                 ·gc.time:                         28.000 ms


# Run progress: 26.19% complete, ETA 00:54:24
# Fork: 3 of 3
# Warmup Iteration   1: 84.945 ns/op
# Warmup Iteration   2: 81.674 ns/op
# Warmup Iteration   3: 80.073 ns/op
# Warmup Iteration   4: 81.167 ns/op
# Warmup Iteration   5: 82.345 ns/op
Iteration   1: 82.894 ns/op
                 ·gc.alloc.rate:                   1840.545 MB/sec
                 ·gc.alloc.rate.norm:              168.000 B/op
                 ·gc.churn.G1_Eden_Space:          1842.613 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     168.189 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        45.000 counts
                 ·gc.time:                         25.000 ms

Iteration   2: 83.139 ns/op
                 ·gc.alloc.rate:                   1835.113 MB/sec
                 ·gc.alloc.rate.norm:              168.000 B/op
                 ·gc.churn.G1_Eden_Space:          1842.588 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     168.684 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        45.000 counts
                 ·gc.time:                         26.000 ms

Iteration   3: 82.321 ns/op
                 ·gc.alloc.rate:                   1853.256 MB/sec
                 ·gc.alloc.rate.norm:              168.000 B/op
                 ·gc.churn.G1_Eden_Space:          1842.509 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     167.026 B/op
                 ·gc.churn.G1_Survivor_Space:      0.007 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        45.000 counts
                 ·gc.time:                         30.000 ms

Iteration   4: 81.374 ns/op
                 ·gc.alloc.rate:                   1874.919 MB/sec
                 ·gc.alloc.rate.norm:              168.000 B/op
                 ·gc.churn.G1_Eden_Space:          1883.518 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     168.771 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        46.000 counts
                 ·gc.time:                         27.000 ms

Iteration   5: 83.818 ns/op
                 ·gc.alloc.rate:                   1820.321 MB/sec
                 ·gc.alloc.rate.norm:              168.000 B/op
                 ·gc.churn.G1_Eden_Space:          1801.727 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     166.284 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        44.000 counts
                 ·gc.time:                         27.000 ms



Result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_parametrized":
  82.598 ±(99.9%) 1.051 ns/op [Average]
  (min, avg, max) = (80.905, 82.598, 83.818), stdev = 0.983
  CI (99.9%): [81.547, 83.649] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_parametrized:·gc.alloc.rate":
  1847.355 ±(99.9%) 23.622 MB/sec [Average]
  (min, avg, max) = (1820.321, 1847.355, 1885.768), stdev = 22.096
  CI (99.9%): [1823.733, 1870.977] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_parametrized:·gc.alloc.rate.norm":
  168.000 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (168.000, 168.000, 168.000), stdev = 0.001
  CI (99.9%): [168.000, 168.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_parametrized:·gc.churn.G1_Eden_Space":
  1847.921 ±(99.9%) 27.459 MB/sec [Average]
  (min, avg, max) = (1801.727, 1847.921, 1883.563), stdev = 25.685
  CI (99.9%): [1820.462, 1875.380] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_parametrized:·gc.churn.G1_Eden_Space.norm":
  168.050 ±(99.9%) 1.030 B/op [Average]
  (min, avg, max) = (166.284, 168.050, 169.641), stdev = 0.963
  CI (99.9%): [167.020, 169.080] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_parametrized:·gc.churn.G1_Survivor_Space":
  0.005 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.004, 0.005, 0.007), stdev = 0.001
  CI (99.9%): [0.005, 0.006] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_parametrized:·gc.churn.G1_Survivor_Space.norm":
  ≈ 10⁻³ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_parametrized:·gc.count":
  722.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (44.000, 48.133, 54.000), stdev = 4.190
  CI (99.9%): [722.000, 722.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_parametrized:·gc.time":
  421.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (25.000, 28.067, 32.000), stdev = 1.907
  CI (99.9%): [421.000, 421.000] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_unparametrized
# Parameters: (aBoolean = true, aInt = 42, aString = P1, theLevel = INFO)

# Run progress: 28.57% complete, ETA 00:52:39
# Fork: 1 of 3
# Warmup Iteration   1: 11459.521 ns/op
# Warmup Iteration   2: 10548.751 ns/op
# Warmup Iteration   3: 10892.451 ns/op
# Warmup Iteration   4: 10929.599 ns/op
# Warmup Iteration   5: 10741.529 ns/op
Iteration   1: 10771.278 ns/op
                 ·gc.alloc.rate:                   576.703 MB/sec
                 ·gc.alloc.rate.norm:              6840.009 B/op
                 ·gc.churn.G1_Eden_Space:          587.920 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6973.053 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.031 B/op
                 ·gc.count:                        21.000 counts
                 ·gc.time:                         13.000 ms

Iteration   2: 10537.773 ns/op
                 ·gc.alloc.rate:                   589.455 MB/sec
                 ·gc.alloc.rate.norm:              6840.009 B/op
                 ·gc.churn.G1_Eden_Space:          587.897 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6821.929 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.031 B/op
                 ·gc.count:                        21.000 counts
                 ·gc.time:                         12.000 ms

Iteration   3: 10745.954 ns/op
                 ·gc.alloc.rate:                   578.043 MB/sec
                 ·gc.alloc.rate.norm:              6840.010 B/op
                 ·gc.churn.G1_Eden_Space:          587.902 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6956.674 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.023 B/op
                 ·gc.count:                        21.000 counts
                 ·gc.time:                         13.000 ms

Iteration   4: 10784.434 ns/op
                 ·gc.alloc.rate:                   575.988 MB/sec
                 ·gc.alloc.rate.norm:              6840.009 B/op
                 ·gc.churn.G1_Eden_Space:          559.913 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6649.117 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.025 B/op
                 ·gc.count:                        20.000 counts
                 ·gc.time:                         12.000 ms

Iteration   5: 10336.985 ns/op
                 ·gc.alloc.rate:                   600.920 MB/sec
                 ·gc.alloc.rate.norm:              6840.009 B/op
                 ·gc.churn.G1_Eden_Space:          615.908 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     7010.602 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.020 B/op
                 ·gc.count:                        22.000 counts
                 ·gc.time:                         13.000 ms


# Run progress: 30.95% complete, ETA 00:50:54
# Fork: 2 of 3
# Warmup Iteration   1: 12369.117 ns/op
# Warmup Iteration   2: 10761.469 ns/op
# Warmup Iteration   3: 10933.739 ns/op
# Warmup Iteration   4: 11189.520 ns/op
# Warmup Iteration   5: 10862.481 ns/op
Iteration   1: 10859.606 ns/op
                 ·gc.alloc.rate:                   567.989 MB/sec
                 ·gc.alloc.rate.norm:              6792.009 B/op
                 ·gc.churn.G1_Eden_Space:          559.920 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6695.524 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.034 B/op
                 ·gc.count:                        20.000 counts
                 ·gc.time:                         12.000 ms

Iteration   2: 10797.005 ns/op
                 ·gc.alloc.rate:                   571.291 MB/sec
                 ·gc.alloc.rate.norm:              6792.010 B/op
                 ·gc.churn.G1_Eden_Space:          587.911 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6989.601 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.029 B/op
                 ·gc.count:                        21.000 counts
                 ·gc.time:                         14.000 ms

Iteration   3: 11093.933 ns/op
                 ·gc.alloc.rate:                   555.965 MB/sec
                 ·gc.alloc.rate.norm:              6792.010 B/op
                 ·gc.churn.G1_Eden_Space:          559.885 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6839.905 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.032 B/op
                 ·gc.count:                        20.000 counts
                 ·gc.time:                         13.000 ms

Iteration   4: 11128.905 ns/op
                 ·gc.alloc.rate:                   554.250 MB/sec
                 ·gc.alloc.rate.norm:              6792.010 B/op
                 ·gc.churn.G1_Eden_Space:          559.920 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6861.492 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.022 B/op
                 ·gc.count:                        20.000 counts
                 ·gc.time:                         11.000 ms

Iteration   5: 11154.186 ns/op
                 ·gc.alloc.rate:                   552.979 MB/sec
                 ·gc.alloc.rate.norm:              6792.009 B/op
                 ·gc.churn.G1_Eden_Space:          531.910 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6533.235 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.008 B/op
                 ·gc.count:                        19.000 counts
                 ·gc.time:                         12.000 ms


# Run progress: 33.33% complete, ETA 00:49:08
# Fork: 3 of 3
# Warmup Iteration   1: 11264.056 ns/op
# Warmup Iteration   2: 10636.562 ns/op
# Warmup Iteration   3: 10943.847 ns/op
# Warmup Iteration   4: 10840.356 ns/op
# Warmup Iteration   5: 10805.956 ns/op
Iteration   1: 10889.117 ns/op
                 ·gc.alloc.rate:                   568.449 MB/sec
                 ·gc.alloc.rate.norm:              6816.010 B/op
                 ·gc.churn.G1_Eden_Space:          587.912 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     7049.385 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.032 B/op
                 ·gc.count:                        21.000 counts
                 ·gc.time:                         14.000 ms

Iteration   2: 10475.039 ns/op
                 ·gc.alloc.rate:                   590.929 MB/sec
                 ·gc.alloc.rate.norm:              6816.009 B/op
                 ·gc.churn.G1_Eden_Space:          587.915 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6781.248 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.028 B/op
                 ·gc.count:                        21.000 counts
                 ·gc.time:                         18.000 ms

Iteration   3: 10464.649 ns/op
                 ·gc.alloc.rate:                   591.508 MB/sec
                 ·gc.alloc.rate.norm:              6816.010 B/op
                 ·gc.churn.G1_Eden_Space:          587.913 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6774.592 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.032 B/op
                 ·gc.count:                        21.000 counts
                 ·gc.time:                         12.000 ms

Iteration   4: 10465.531 ns/op
                 ·gc.alloc.rate:                   591.455 MB/sec
                 ·gc.alloc.rate.norm:              6816.010 B/op
                 ·gc.churn.G1_Eden_Space:          587.909 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6775.145 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.033 B/op
                 ·gc.count:                        21.000 counts
                 ·gc.time:                         12.000 ms

Iteration   5: 11057.963 ns/op
                 ·gc.alloc.rate:                   559.762 MB/sec
                 ·gc.alloc.rate.norm:              6816.010 B/op
                 ·gc.churn.G1_Eden_Space:          559.902 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6817.714 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.030 B/op
                 ·gc.count:                        20.000 counts
                 ·gc.time:                         12.000 ms



Result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_unparametrized":
  10770.824 ±(99.9%) 286.056 ns/op [Average]
  (min, avg, max) = (10336.985, 10770.824, 11154.186), stdev = 267.577
  CI (99.9%): [10484.768, 11056.880] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_unparametrized:·gc.alloc.rate":
  575.046 ±(99.9%) 16.430 MB/sec [Average]
  (min, avg, max) = (552.979, 575.046, 600.920), stdev = 15.369
  CI (99.9%): [558.615, 591.476] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_unparametrized:·gc.alloc.rate.norm":
  6816.010 ±(99.9%) 21.684 B/op [Average]
  (min, avg, max) = (6792.009, 6816.010, 6840.010), stdev = 20.284
  CI (99.9%): [6794.325, 6837.694] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_unparametrized:·gc.churn.G1_Eden_Space":
  576.709 ±(99.9%) 22.055 MB/sec [Average]
  (min, avg, max) = (531.910, 576.709, 615.908), stdev = 20.630
  CI (99.9%): [554.654, 598.764] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_unparametrized:·gc.churn.G1_Eden_Space.norm":
  6835.281 ±(99.9%) 154.115 B/op [Average]
  (min, avg, max) = (6533.235, 6835.281, 7049.385), stdev = 144.159
  CI (99.9%): [6681.166, 6989.396] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_unparametrized:·gc.churn.G1_Survivor_Space":
  0.002 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.001, 0.002, 0.003), stdev = 0.001
  CI (99.9%): [0.002, 0.003] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_unparametrized:·gc.churn.G1_Survivor_Space.norm":
  0.027 ±(99.9%) 0.008 B/op [Average]
  (min, avg, max) = (0.008, 0.027, 0.034), stdev = 0.007
  CI (99.9%): [0.020, 0.035] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_unparametrized:·gc.count":
  309.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (19.000, 20.600, 22.000), stdev = 0.737
  CI (99.9%): [309.000, 309.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_unparametrized:·gc.time":
  193.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (11.000, 12.867, 18.000), stdev = 1.642
  CI (99.9%): [193.000, 193.000] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_unparametrized
# Parameters: (aBoolean = true, aInt = 42, aString = P1, theLevel = FINE)

# Run progress: 35.71% complete, ETA 00:47:23
# Fork: 1 of 3
# Warmup Iteration   1: 109.747 ns/op
# Warmup Iteration   2: 108.236 ns/op
# Warmup Iteration   3: 110.390 ns/op
# Warmup Iteration   4: 110.481 ns/op
# Warmup Iteration   5: 107.221 ns/op
Iteration   1: 107.864 ns/op
                 ·gc.alloc.rate:                   1683.926 MB/sec
                 ·gc.alloc.rate.norm:              200.000 B/op
                 ·gc.churn.G1_Eden_Space:          1704.563 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     202.451 B/op
                 ·gc.churn.G1_Survivor_Space:      0.006 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        50.000 counts
                 ·gc.time:                         28.000 ms

Iteration   2: 105.676 ns/op
                 ·gc.alloc.rate:                   1718.745 MB/sec
                 ·gc.alloc.rate.norm:              200.000 B/op
                 ·gc.churn.G1_Eden_Space:          1704.513 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     198.344 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        50.000 counts
                 ·gc.time:                         26.000 ms

Iteration   3: 111.000 ns/op
                 ·gc.alloc.rate:                   1636.302 MB/sec
                 ·gc.alloc.rate.norm:              200.000 B/op
                 ·gc.churn.G1_Eden_Space:          1636.326 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     200.003 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        48.000 counts
                 ·gc.time:                         26.000 ms

Iteration   4: 108.372 ns/op
                 ·gc.alloc.rate:                   1676.016 MB/sec
                 ·gc.alloc.rate.norm:              200.000 B/op
                 ·gc.churn.G1_Eden_Space:          1670.451 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     199.336 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        49.000 counts
                 ·gc.time:                         30.000 ms

Iteration   5: 107.835 ns/op
                 ·gc.alloc.rate:                   1684.335 MB/sec
                 ·gc.alloc.rate.norm:              200.000 B/op
                 ·gc.churn.G1_Eden_Space:          1704.523 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     202.397 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        50.000 counts
                 ·gc.time:                         27.000 ms


# Run progress: 38.10% complete, ETA 00:45:38
# Fork: 2 of 3
# Warmup Iteration   1: 111.100 ns/op
# Warmup Iteration   2: 106.906 ns/op
# Warmup Iteration   3: 108.816 ns/op
# Warmup Iteration   4: 110.841 ns/op
# Warmup Iteration   5: 109.050 ns/op
Iteration   1: 109.534 ns/op
                 ·gc.alloc.rate:                   1658.090 MB/sec
                 ·gc.alloc.rate.norm:              200.000 B/op
                 ·gc.churn.G1_Eden_Space:          1670.303 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     201.473 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        49.000 counts
                 ·gc.time:                         28.000 ms

Iteration   2: 109.347 ns/op
                 ·gc.alloc.rate:                   1661.045 MB/sec
                 ·gc.alloc.rate.norm:              200.000 B/op
                 ·gc.churn.G1_Eden_Space:          1636.325 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     197.024 B/op
                 ·gc.churn.G1_Survivor_Space:      0.006 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        48.000 counts
                 ·gc.time:                         26.000 ms

Iteration   3: 109.924 ns/op
                 ·gc.alloc.rate:                   1652.295 MB/sec
                 ·gc.alloc.rate.norm:              200.000 B/op
                 ·gc.churn.G1_Eden_Space:          1670.381 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     202.189 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        49.000 counts
                 ·gc.time:                         29.000 ms

Iteration   4: 109.520 ns/op
                 ·gc.alloc.rate:                   1658.418 MB/sec
                 ·gc.alloc.rate.norm:              200.000 B/op
                 ·gc.churn.G1_Eden_Space:          1670.409 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     201.446 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        49.000 counts
                 ·gc.time:                         28.000 ms

Iteration   5: 109.218 ns/op
                 ·gc.alloc.rate:                   1662.950 MB/sec
                 ·gc.alloc.rate.norm:              200.000 B/op
                 ·gc.churn.G1_Eden_Space:          1670.375 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     200.893 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        49.000 counts
                 ·gc.time:                         26.000 ms


# Run progress: 40.48% complete, ETA 00:43:52
# Fork: 3 of 3
# Warmup Iteration   1: 109.431 ns/op
# Warmup Iteration   2: 111.385 ns/op
# Warmup Iteration   3: 112.270 ns/op
# Warmup Iteration   4: 111.877 ns/op
# Warmup Iteration   5: 109.082 ns/op
Iteration   1: 110.014 ns/op
                 ·gc.alloc.rate:                   1650.988 MB/sec
                 ·gc.alloc.rate.norm:              200.000 B/op
                 ·gc.churn.G1_Eden_Space:          1636.358 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     198.228 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        48.000 counts
                 ·gc.time:                         27.000 ms

Iteration   2: 110.989 ns/op
                 ·gc.alloc.rate:                   1636.385 MB/sec
                 ·gc.alloc.rate.norm:              200.000 B/op
                 ·gc.churn.G1_Eden_Space:          1636.252 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     199.984 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        48.000 counts
                 ·gc.time:                         29.000 ms

Iteration   3: 112.751 ns/op
                 ·gc.alloc.rate:                   1610.850 MB/sec
                 ·gc.alloc.rate.norm:              200.000 B/op
                 ·gc.churn.G1_Eden_Space:          1636.279 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     203.157 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        48.000 counts
                 ·gc.time:                         31.000 ms

Iteration   4: 109.230 ns/op
                 ·gc.alloc.rate:                   1662.852 MB/sec
                 ·gc.alloc.rate.norm:              200.000 B/op
                 ·gc.churn.G1_Eden_Space:          1636.365 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     196.814 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        48.000 counts
                 ·gc.time:                         27.000 ms

Iteration   5: 113.064 ns/op
                 ·gc.alloc.rate:                   1606.352 MB/sec
                 ·gc.alloc.rate.norm:              200.000 B/op
                 ·gc.churn.G1_Eden_Space:          1636.256 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     203.723 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        48.000 counts
                 ·gc.time:                         27.000 ms



Result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_unparametrized":
  109.623 ±(99.9%) 2.010 ns/op [Average]
  (min, avg, max) = (105.676, 109.623, 113.064), stdev = 1.880
  CI (99.9%): [107.613, 111.632] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_unparametrized:·gc.alloc.rate":
  1657.303 ±(99.9%) 30.427 MB/sec [Average]
  (min, avg, max) = (1606.352, 1657.303, 1718.745), stdev = 28.462
  CI (99.9%): [1626.876, 1687.730] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_unparametrized:·gc.alloc.rate.norm":
  200.000 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (200.000, 200.000, 200.000), stdev = 0.001
  CI (99.9%): [200.000, 200.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_unparametrized:·gc.churn.G1_Eden_Space":
  1661.312 ±(99.9%) 29.126 MB/sec [Average]
  (min, avg, max) = (1636.252, 1661.312, 1704.563), stdev = 27.245
  CI (99.9%): [1632.185, 1690.438] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_unparametrized:·gc.churn.G1_Eden_Space.norm":
  200.497 ±(99.9%) 2.340 B/op [Average]
  (min, avg, max) = (196.814, 200.497, 203.723), stdev = 2.189
  CI (99.9%): [198.158, 202.837] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_unparametrized:·gc.churn.G1_Survivor_Space":
  0.005 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.003, 0.005, 0.006), stdev = 0.001
  CI (99.9%): [0.004, 0.006] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_unparametrized:·gc.churn.G1_Survivor_Space.norm":
  0.001 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (≈ 10⁻³, 0.001, 0.001), stdev = 0.001
  CI (99.9%): [≈ 10⁻³, 0.001] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_unparametrized:·gc.count":
  731.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (48.000, 48.733, 50.000), stdev = 0.799
  CI (99.9%): [731.000, 731.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.guarded_unparametrized:·gc.time":
  415.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (26.000, 27.667, 31.000), stdev = 1.543
  CI (99.9%): [415.000, 415.000] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.no_escape_lambda
# Parameters: (aBoolean = true, aInt = 42, aString = P1, theLevel = INFO)

# Run progress: 42.86% complete, ETA 00:42:07
# Fork: 1 of 3
# Warmup Iteration   1: 11814.668 ns/op
# Warmup Iteration   2: 11011.654 ns/op
# Warmup Iteration   3: 11427.614 ns/op
# Warmup Iteration   4: 11116.122 ns/op
# Warmup Iteration   5: 11129.270 ns/op
Iteration   1: 11444.244 ns/op
                 ·gc.alloc.rate:                   538.972 MB/sec
                 ·gc.alloc.rate.norm:              6792.010 B/op
                 ·gc.churn.G1_Eden_Space:          559.917 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     7055.954 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.015 B/op
                 ·gc.count:                        20.000 counts
                 ·gc.time:                         14.000 ms

Iteration   2: 11441.984 ns/op
                 ·gc.alloc.rate:                   539.091 MB/sec
                 ·gc.alloc.rate.norm:              6792.009 B/op
                 ·gc.churn.G1_Eden_Space:          531.925 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6701.722 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.043 B/op
                 ·gc.count:                        19.000 counts
                 ·gc.time:                         14.000 ms

Iteration   3: 11066.641 ns/op
                 ·gc.alloc.rate:                   557.349 MB/sec
                 ·gc.alloc.rate.norm:              6792.010 B/op
                 ·gc.churn.G1_Eden_Space:          559.899 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6823.086 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.025 B/op
                 ·gc.count:                        20.000 counts
                 ·gc.time:                         13.000 ms

Iteration   4: 11286.238 ns/op
                 ·gc.alloc.rate:                   546.511 MB/sec
                 ·gc.alloc.rate.norm:              6792.009 B/op
                 ·gc.churn.G1_Eden_Space:          531.913 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6610.582 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.019 B/op
                 ·gc.count:                        19.000 counts
                 ·gc.time:                         13.000 ms

Iteration   5: 10868.935 ns/op
                 ·gc.alloc.rate:                   567.499 MB/sec
                 ·gc.alloc.rate.norm:              6792.010 B/op
                 ·gc.churn.G1_Eden_Space:          587.906 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     7036.245 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.025 B/op
                 ·gc.count:                        21.000 counts
                 ·gc.time:                         15.000 ms


# Run progress: 45.24% complete, ETA 00:40:22
# Fork: 2 of 3
# Warmup Iteration   1: 12159.880 ns/op
# Warmup Iteration   2: 11172.752 ns/op
# Warmup Iteration   3: 11070.984 ns/op
# Warmup Iteration   4: 11087.688 ns/op
# Warmup Iteration   5: 10940.246 ns/op
Iteration   1: 10902.939 ns/op
                 ·gc.alloc.rate:                   575.738 MB/sec
                 ·gc.alloc.rate.norm:              6912.010 B/op
                 ·gc.churn.G1_Eden_Space:          587.923 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     7058.300 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.030 B/op
                 ·gc.count:                        21.000 counts
                 ·gc.time:                         13.000 ms

Iteration   2: 10812.334 ns/op
                 ·gc.alloc.rate:                   580.550 MB/sec
                 ·gc.alloc.rate.norm:              6912.009 B/op
                 ·gc.churn.G1_Eden_Space:          559.907 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6666.242 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.036 B/op
                 ·gc.count:                        20.000 counts
                 ·gc.time:                         15.000 ms

Iteration   3: 11120.191 ns/op
                 ·gc.alloc.rate:                   564.486 MB/sec
                 ·gc.alloc.rate.norm:              6912.010 B/op
                 ·gc.churn.G1_Eden_Space:          587.918 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     7198.935 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.037 B/op
                 ·gc.count:                        21.000 counts
                 ·gc.time:                         13.000 ms

Iteration   4: 10803.783 ns/op
                 ·gc.alloc.rate:                   581.040 MB/sec
                 ·gc.alloc.rate.norm:              6912.009 B/op
                 ·gc.churn.G1_Eden_Space:          559.945 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6661.063 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.023 B/op
                 ·gc.count:                        20.000 counts
                 ·gc.time:                         14.000 ms

Iteration   5: 10865.489 ns/op
                 ·gc.alloc.rate:                   577.731 MB/sec
                 ·gc.alloc.rate.norm:              6912.010 B/op
                 ·gc.churn.G1_Eden_Space:          587.933 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     7034.066 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.034 B/op
                 ·gc.count:                        21.000 counts
                 ·gc.time:                         14.000 ms


# Run progress: 47.62% complete, ETA 00:38:36
# Fork: 3 of 3
# Warmup Iteration   1: 11540.131 ns/op
# Warmup Iteration   2: 11092.941 ns/op
# Warmup Iteration   3: 11211.287 ns/op
# Warmup Iteration   4: 11261.131 ns/op
# Warmup Iteration   5: 10927.314 ns/op
Iteration   1: 11074.018 ns/op
                 ·gc.alloc.rate:                   558.960 MB/sec
                 ·gc.alloc.rate.norm:              6816.009 B/op
                 ·gc.churn.G1_Eden_Space:          559.917 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6827.687 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.028 B/op
                 ·gc.count:                        20.000 counts
                 ·gc.time:                         12.000 ms

Iteration   2: 10946.588 ns/op
                 ·gc.alloc.rate:                   565.468 MB/sec
                 ·gc.alloc.rate.norm:              6816.010 B/op
                 ·gc.churn.G1_Eden_Space:          587.914 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     7086.563 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.020 B/op
                 ·gc.count:                        21.000 counts
                 ·gc.time:                         12.000 ms

Iteration   3: 10988.224 ns/op
                 ·gc.alloc.rate:                   563.326 MB/sec
                 ·gc.alloc.rate.norm:              6816.010 B/op
                 ·gc.churn.G1_Eden_Space:          559.921 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6774.819 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.038 B/op
                 ·gc.count:                        20.000 counts
                 ·gc.time:                         12.000 ms

Iteration   4: 10971.414 ns/op
                 ·gc.alloc.rate:                   564.196 MB/sec
                 ·gc.alloc.rate.norm:              6816.009 B/op
                 ·gc.churn.G1_Eden_Space:          559.929 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6764.457 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.017 B/op
                 ·gc.count:                        20.000 counts
                 ·gc.time:                         12.000 ms

Iteration   5: 10895.715 ns/op
                 ·gc.alloc.rate:                   568.103 MB/sec
                 ·gc.alloc.rate.norm:              6816.010 B/op
                 ·gc.churn.G1_Eden_Space:          559.908 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6717.686 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.027 B/op
                 ·gc.count:                        20.000 counts
                 ·gc.time:                         12.000 ms



Result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.no_escape_lambda":
  11032.582 ±(99.9%) 224.279 ns/op [Average]
  (min, avg, max) = (10803.783, 11032.582, 11444.244), stdev = 209.791
  CI (99.9%): [10808.303, 11256.862] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.no_escape_lambda:·gc.alloc.rate":
  563.268 ±(99.9%) 14.391 MB/sec [Average]
  (min, avg, max) = (538.972, 563.268, 581.040), stdev = 13.461
  CI (99.9%): [548.877, 577.659] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.no_escape_lambda:·gc.alloc.rate.norm":
  6840.010 ±(99.9%) 57.372 B/op [Average]
  (min, avg, max) = (6792.009, 6840.010, 6912.010), stdev = 53.666
  CI (99.9%): [6782.638, 6897.382] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.no_escape_lambda:·gc.churn.G1_Eden_Space":
  565.518 ±(99.9%) 20.239 MB/sec [Average]
  (min, avg, max) = (531.913, 565.518, 587.933), stdev = 18.931
  CI (99.9%): [545.279, 585.757] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.no_escape_lambda:·gc.churn.G1_Eden_Space.norm":
  6867.827 ±(99.9%) 203.602 B/op [Average]
  (min, avg, max) = (6610.582, 6867.827, 7198.935), stdev = 190.450
  CI (99.9%): [6664.225, 7071.429] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.no_escape_lambda:·gc.churn.G1_Survivor_Space":
  0.002 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.001, 0.002, 0.003), stdev = 0.001
  CI (99.9%): [0.002, 0.003] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.no_escape_lambda:·gc.churn.G1_Survivor_Space.norm":
  0.028 ±(99.9%) 0.009 B/op [Average]
  (min, avg, max) = (0.015, 0.028, 0.043), stdev = 0.008
  CI (99.9%): [0.019, 0.037] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.no_escape_lambda:·gc.count":
  303.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (19.000, 20.200, 21.000), stdev = 0.676
  CI (99.9%): [303.000, 303.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.no_escape_lambda:·gc.time":
  198.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (12.000, 13.200, 15.000), stdev = 1.082
  CI (99.9%): [198.000, 198.000] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.no_escape_lambda
# Parameters: (aBoolean = true, aInt = 42, aString = P1, theLevel = FINE)

# Run progress: 50.00% complete, ETA 00:36:51
# Fork: 1 of 3
# Warmup Iteration   1: 117.057 ns/op
# Warmup Iteration   2: 112.042 ns/op
# Warmup Iteration   3: 115.287 ns/op
# Warmup Iteration   4: 114.167 ns/op
# Warmup Iteration   5: 115.223 ns/op
Iteration   1: 110.978 ns/op
                 ·gc.alloc.rate:                   1833.008 MB/sec
                 ·gc.alloc.rate.norm:              224.000 B/op
                 ·gc.churn.G1_Eden_Space:          1842.560 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     225.167 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        45.000 counts
                 ·gc.time:                         27.000 ms

Iteration   2: 111.572 ns/op
                 ·gc.alloc.rate:                   1823.234 MB/sec
                 ·gc.alloc.rate.norm:              224.000 B/op
                 ·gc.churn.G1_Eden_Space:          1801.597 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     221.342 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        44.000 counts
                 ·gc.time:                         27.000 ms

Iteration   3: 116.075 ns/op
                 ·gc.alloc.rate:                   1752.458 MB/sec
                 ·gc.alloc.rate.norm:              224.000 B/op
                 ·gc.churn.G1_Eden_Space:          1760.609 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     225.042 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        43.000 counts
                 ·gc.time:                         26.000 ms

Iteration   4: 116.320 ns/op
                 ·gc.alloc.rate:                   1748.842 MB/sec
                 ·gc.alloc.rate.norm:              224.000 B/op
                 ·gc.churn.G1_Eden_Space:          1760.688 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     225.517 B/op
                 ·gc.churn.G1_Survivor_Space:      0.006 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        43.000 counts
                 ·gc.time:                         27.000 ms

Iteration   5: 112.149 ns/op
                 ·gc.alloc.rate:                   1813.835 MB/sec
                 ·gc.alloc.rate.norm:              224.000 B/op
                 ·gc.churn.G1_Eden_Space:          1801.602 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     222.489 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        44.000 counts
                 ·gc.time:                         26.000 ms


# Run progress: 52.38% complete, ETA 00:35:06
# Fork: 2 of 3
# Warmup Iteration   1: 115.619 ns/op
# Warmup Iteration   2: 116.147 ns/op
# Warmup Iteration   3: 116.835 ns/op
# Warmup Iteration   4: 116.935 ns/op
# Warmup Iteration   5: 118.177 ns/op
Iteration   1: 114.393 ns/op
                 ·gc.alloc.rate:                   1778.307 MB/sec
                 ·gc.alloc.rate.norm:              224.000 B/op
                 ·gc.churn.G1_Eden_Space:          1772.690 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     223.292 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        52.000 counts
                 ·gc.time:                         30.000 ms

Iteration   2: 114.588 ns/op
                 ·gc.alloc.rate:                   1775.332 MB/sec
                 ·gc.alloc.rate.norm:              224.000 B/op
                 ·gc.churn.G1_Eden_Space:          1772.753 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     223.675 B/op
                 ·gc.churn.G1_Survivor_Space:      0.007 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        52.000 counts
                 ·gc.time:                         29.000 ms

Iteration   3: 115.075 ns/op
                 ·gc.alloc.rate:                   1767.676 MB/sec
                 ·gc.alloc.rate.norm:              224.000 B/op
                 ·gc.churn.G1_Eden_Space:          1772.599 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     224.624 B/op
                 ·gc.churn.G1_Survivor_Space:      0.008 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        52.000 counts
                 ·gc.time:                         30.000 ms

Iteration   4: 115.630 ns/op
                 ·gc.alloc.rate:                   1759.350 MB/sec
                 ·gc.alloc.rate.norm:              224.000 B/op
                 ·gc.churn.G1_Eden_Space:          1772.763 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     225.708 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        52.000 counts
                 ·gc.time:                         29.000 ms

Iteration   5: 116.149 ns/op
                 ·gc.alloc.rate:                   1751.299 MB/sec
                 ·gc.alloc.rate.norm:              224.000 B/op
                 ·gc.churn.G1_Eden_Space:          1738.488 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     222.361 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        51.000 counts
                 ·gc.time:                         29.000 ms


# Run progress: 54.76% complete, ETA 00:33:20
# Fork: 3 of 3
# Warmup Iteration   1: 114.053 ns/op
# Warmup Iteration   2: 112.062 ns/op
# Warmup Iteration   3: 114.438 ns/op
# Warmup Iteration   4: 113.268 ns/op
# Warmup Iteration   5: 113.710 ns/op
Iteration   1: 117.181 ns/op
                 ·gc.alloc.rate:                   1735.978 MB/sec
                 ·gc.alloc.rate.norm:              224.000 B/op
                 ·gc.churn.G1_Eden_Space:          1738.598 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     224.338 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        51.000 counts
                 ·gc.time:                         28.000 ms

Iteration   2: 116.511 ns/op
                 ·gc.alloc.rate:                   1745.956 MB/sec
                 ·gc.alloc.rate.norm:              224.000 B/op
                 ·gc.churn.G1_Eden_Space:          1738.584 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     223.054 B/op
                 ·gc.churn.G1_Survivor_Space:      0.006 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        51.000 counts
                 ·gc.time:                         29.000 ms

Iteration   3: 112.336 ns/op
                 ·gc.alloc.rate:                   1810.957 MB/sec
                 ·gc.alloc.rate.norm:              224.000 B/op
                 ·gc.churn.G1_Eden_Space:          1840.981 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     227.714 B/op
                 ·gc.churn.G1_Survivor_Space:      0.008 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        54.000 counts
                 ·gc.time:                         30.000 ms

Iteration   4: 113.633 ns/op
                 ·gc.alloc.rate:                   1790.173 MB/sec
                 ·gc.alloc.rate.norm:              224.000 B/op
                 ·gc.churn.G1_Eden_Space:          1772.681 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     221.811 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        52.000 counts
                 ·gc.time:                         31.000 ms

Iteration   5: 114.777 ns/op
                 ·gc.alloc.rate:                   1772.288 MB/sec
                 ·gc.alloc.rate.norm:              224.000 B/op
                 ·gc.churn.G1_Eden_Space:          1772.635 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     224.044 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        52.000 counts
                 ·gc.time:                         30.000 ms



Result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.no_escape_lambda":
  114.491 ±(99.9%) 2.088 ns/op [Average]
  (min, avg, max) = (110.978, 114.491, 117.181), stdev = 1.953
  CI (99.9%): [112.404, 116.579] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.no_escape_lambda:·gc.alloc.rate":
  1777.246 ±(99.9%) 32.683 MB/sec [Average]
  (min, avg, max) = (1735.978, 1777.246, 1833.008), stdev = 30.571
  CI (99.9%): [1744.564, 1809.929] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.no_escape_lambda:·gc.alloc.rate.norm":
  224.000 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (224.000, 224.000, 224.000), stdev = 0.001
  CI (99.9%): [224.000, 224.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.no_escape_lambda:·gc.churn.G1_Eden_Space":
  1777.322 ±(99.9%) 34.619 MB/sec [Average]
  (min, avg, max) = (1738.488, 1777.322, 1842.560), stdev = 32.382
  CI (99.9%): [1742.703, 1811.940] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.no_escape_lambda:·gc.churn.G1_Eden_Space.norm":
  224.012 ±(99.9%) 1.814 B/op [Average]
  (min, avg, max) = (221.342, 224.012, 227.714), stdev = 1.696
  CI (99.9%): [222.198, 225.825] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.no_escape_lambda:·gc.churn.G1_Survivor_Space":
  0.005 ±(99.9%) 0.002 MB/sec [Average]
  (min, avg, max) = (0.003, 0.005, 0.008), stdev = 0.002
  CI (99.9%): [0.003, 0.007] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.no_escape_lambda:·gc.churn.G1_Survivor_Space.norm":
  0.001 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (≈ 10⁻³, 0.001, 0.001), stdev = 0.001
  CI (99.9%): [≈ 10⁻³, 0.001] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.no_escape_lambda:·gc.count":
  738.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (43.000, 49.200, 54.000), stdev = 4.039
  CI (99.9%): [738.000, 738.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.no_escape_lambda:·gc.time":
  428.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (26.000, 28.533, 31.000), stdev = 1.598
  CI (99.9%): [428.000, 428.000] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.string_format
# Parameters: (aBoolean = true, aInt = 42, aString = P1, theLevel = INFO)

# Run progress: 57.14% complete, ETA 00:31:35
# Fork: 1 of 3
# Warmup Iteration   1: 13212.042 ns/op
# Warmup Iteration   2: 11877.316 ns/op
# Warmup Iteration   3: 12589.479 ns/op
# Warmup Iteration   4: 12361.995 ns/op
# Warmup Iteration   5: 12132.484 ns/op
Iteration   1: 12373.349 ns/op
                 ·gc.alloc.rate:                   570.131 MB/sec
                 ·gc.alloc.rate.norm:              7768.011 B/op
                 ·gc.churn.G1_Eden_Space:          587.907 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     8010.201 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.036 B/op
                 ·gc.count:                        21.000 counts
                 ·gc.time:                         14.000 ms

Iteration   2: 12095.254 ns/op
                 ·gc.alloc.rate:                   583.267 MB/sec
                 ·gc.alloc.rate.norm:              7768.010 B/op
                 ·gc.churn.G1_Eden_Space:          559.936 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     7457.289 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.040 B/op
                 ·gc.count:                        20.000 counts
                 ·gc.time:                         12.000 ms

Iteration   3: 12540.976 ns/op
                 ·gc.alloc.rate:                   562.512 MB/sec
                 ·gc.alloc.rate.norm:              7768.011 B/op
                 ·gc.churn.G1_Eden_Space:          587.913 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     8118.792 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.044 B/op
                 ·gc.count:                        21.000 counts
                 ·gc.time:                         13.000 ms

Iteration   4: 12473.660 ns/op
                 ·gc.alloc.rate:                   565.525 MB/sec
                 ·gc.alloc.rate.norm:              7768.011 B/op
                 ·gc.churn.G1_Eden_Space:          559.890 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     7690.614 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.024 B/op
                 ·gc.count:                        20.000 counts
                 ·gc.time:                         13.000 ms

Iteration   5: 11944.026 ns/op
                 ·gc.alloc.rate:                   590.651 MB/sec
                 ·gc.alloc.rate.norm:              7768.011 B/op
                 ·gc.churn.G1_Eden_Space:          587.934 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     7732.274 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.030 B/op
                 ·gc.count:                        21.000 counts
                 ·gc.time:                         12.000 ms


# Run progress: 59.52% complete, ETA 00:29:50
# Fork: 2 of 3
# Warmup Iteration   1: 13586.466 ns/op
# Warmup Iteration   2: 12118.182 ns/op
# Warmup Iteration   3: 12385.874 ns/op
# Warmup Iteration   4: 12367.611 ns/op
# Warmup Iteration   5: 12280.517 ns/op
Iteration   1: 12198.756 ns/op
                 ·gc.alloc.rate:                   578.320 MB/sec
                 ·gc.alloc.rate.norm:              7768.011 B/op
                 ·gc.churn.G1_Eden_Space:          587.936 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     7897.177 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.035 B/op
                 ·gc.count:                        21.000 counts
                 ·gc.time:                         14.000 ms

Iteration   2: 12298.437 ns/op
                 ·gc.alloc.rate:                   573.608 MB/sec
                 ·gc.alloc.rate.norm:              7768.010 B/op
                 ·gc.churn.G1_Eden_Space:          559.910 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     7582.510 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.025 B/op
                 ·gc.count:                        20.000 counts
                 ·gc.time:                         15.000 ms

Iteration   3: 12620.550 ns/op
                 ·gc.alloc.rate:                   558.951 MB/sec
                 ·gc.alloc.rate.norm:              7768.011 B/op
                 ·gc.churn.G1_Eden_Space:          559.898 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     7781.179 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.028 B/op
                 ·gc.count:                        20.000 counts
                 ·gc.time:                         11.000 ms

Iteration   4: 12494.366 ns/op
                 ·gc.alloc.rate:                   564.611 MB/sec
                 ·gc.alloc.rate.norm:              7768.011 B/op
                 ·gc.churn.G1_Eden_Space:          587.910 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     8088.574 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.030 B/op
                 ·gc.count:                        21.000 counts
                 ·gc.time:                         12.000 ms

Iteration   5: 12293.348 ns/op
                 ·gc.alloc.rate:                   573.840 MB/sec
                 ·gc.alloc.rate.norm:              7768.011 B/op
                 ·gc.churn.G1_Eden_Space:          559.912 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     7579.462 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.038 B/op
                 ·gc.count:                        20.000 counts
                 ·gc.time:                         13.000 ms


# Run progress: 61.90% complete, ETA 00:28:04
# Fork: 3 of 3
# Warmup Iteration   1: 13038.365 ns/op
# Warmup Iteration   2: 11913.133 ns/op
# Warmup Iteration   3: 11876.835 ns/op
# Warmup Iteration   4: 11973.152 ns/op
# Warmup Iteration   5: 11781.699 ns/op
Iteration   1: 11946.512 ns/op
                 ·gc.alloc.rate:                   588.692 MB/sec
                 ·gc.alloc.rate.norm:              7744.011 B/op
                 ·gc.churn.G1_Eden_Space:          587.921 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     7733.881 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.035 B/op
                 ·gc.count:                        21.000 counts
                 ·gc.time:                         13.000 ms

Iteration   2: 12187.404 ns/op
                 ·gc.alloc.rate:                   577.084 MB/sec
                 ·gc.alloc.rate.norm:              7744.011 B/op
                 ·gc.churn.G1_Eden_Space:          559.953 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     7514.127 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.040 B/op
                 ·gc.count:                        20.000 counts
                 ·gc.time:                         12.000 ms

Iteration   3: 11909.365 ns/op
                 ·gc.alloc.rate:                   590.521 MB/sec
                 ·gc.alloc.rate.norm:              7744.011 B/op
                 ·gc.churn.G1_Eden_Space:          587.917 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     7709.861 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.046 B/op
                 ·gc.count:                        21.000 counts
                 ·gc.time:                         13.000 ms

Iteration   4: 11663.011 ns/op
                 ·gc.alloc.rate:                   602.992 MB/sec
                 ·gc.alloc.rate.norm:              7744.011 B/op
                 ·gc.churn.G1_Eden_Space:          615.910 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     7909.914 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.034 B/op
                 ·gc.count:                        22.000 counts
                 ·gc.time:                         12.000 ms

Iteration   5: 11901.298 ns/op
                 ·gc.alloc.rate:                   590.926 MB/sec
                 ·gc.alloc.rate.norm:              7744.011 B/op
                 ·gc.churn.G1_Eden_Space:          587.916 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     7704.575 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.025 B/op
                 ·gc.count:                        21.000 counts
                 ·gc.time:                         12.000 ms



Result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.string_format":
  12196.021 ±(99.9%) 300.459 ns/op [Average]
  (min, avg, max) = (11663.011, 12196.021, 12620.550), stdev = 281.049
  CI (99.9%): [11895.562, 12496.480] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.string_format:·gc.alloc.rate":
  578.109 ±(99.9%) 13.665 MB/sec [Average]
  (min, avg, max) = (558.951, 578.109, 602.992), stdev = 12.783
  CI (99.9%): [564.443, 591.774] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.string_format:·gc.alloc.rate.norm":
  7760.011 ±(99.9%) 12.520 B/op [Average]
  (min, avg, max) = (7744.011, 7760.011, 7768.011), stdev = 11.711
  CI (99.9%): [7747.491, 7772.530] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.string_format:·gc.churn.G1_Eden_Space":
  578.584 ±(99.9%) 18.475 MB/sec [Average]
  (min, avg, max) = (559.890, 578.584, 615.910), stdev = 17.282
  CI (99.9%): [560.109, 597.060] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.string_format:·gc.churn.G1_Eden_Space.norm":
  7767.362 ±(99.9%) 215.382 B/op [Average]
  (min, avg, max) = (7457.289, 7767.362, 8118.792), stdev = 201.469
  CI (99.9%): [7551.980, 7982.744] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.string_format:·gc.churn.G1_Survivor_Space":
  0.003 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.002, 0.003, 0.004), stdev = 0.001
  CI (99.9%): [0.002, 0.003] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.string_format:·gc.churn.G1_Survivor_Space.norm":
  0.034 ±(99.9%) 0.007 B/op [Average]
  (min, avg, max) = (0.024, 0.034, 0.046), stdev = 0.007
  CI (99.9%): [0.027, 0.041] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.string_format:·gc.count":
  310.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (20.000, 20.667, 22.000), stdev = 0.617
  CI (99.9%): [310.000, 310.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.string_format:·gc.time":
  191.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (11.000, 12.733, 15.000), stdev = 1.033
  CI (99.9%): [191.000, 191.000] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.string_format
# Parameters: (aBoolean = true, aInt = 42, aString = P1, theLevel = FINE)

# Run progress: 64.29% complete, ETA 00:26:19
# Fork: 1 of 3
# Warmup Iteration   1: 1215.322 ns/op
# Warmup Iteration   2: 1123.565 ns/op
# Warmup Iteration   3: 1083.388 ns/op
# Warmup Iteration   4: 1066.344 ns/op
# Warmup Iteration   5: 1087.755 ns/op
Iteration   1: 1069.112 ns/op
                 ·gc.alloc.rate:                   978.555 MB/sec
                 ·gc.alloc.rate.norm:              1152.000 B/op
                 ·gc.churn.G1_Eden_Space:          979.850 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     1153.524 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.005 B/op
                 ·gc.count:                        35.000 counts
                 ·gc.time:                         18.000 ms

Iteration   2: 1054.690 ns/op
                 ·gc.alloc.rate:                   991.923 MB/sec
                 ·gc.alloc.rate.norm:              1152.000 B/op
                 ·gc.churn.G1_Eden_Space:          979.842 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     1137.969 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.006 B/op
                 ·gc.count:                        35.000 counts
                 ·gc.time:                         16.000 ms

Iteration   3: 1073.612 ns/op
                 ·gc.alloc.rate:                   974.492 MB/sec
                 ·gc.alloc.rate.norm:              1152.000 B/op
                 ·gc.churn.G1_Eden_Space:          979.893 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     1158.385 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.003 B/op
                 ·gc.count:                        35.000 counts
                 ·gc.time:                         20.000 ms

Iteration   4: 1058.521 ns/op
                 ·gc.alloc.rate:                   988.394 MB/sec
                 ·gc.alloc.rate.norm:              1152.000 B/op
                 ·gc.churn.G1_Eden_Space:          979.901 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     1142.102 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.006 B/op
                 ·gc.count:                        35.000 counts
                 ·gc.time:                         17.000 ms

Iteration   5: 1083.349 ns/op
                 ·gc.alloc.rate:                   965.661 MB/sec
                 ·gc.alloc.rate.norm:              1152.000 B/op
                 ·gc.churn.G1_Eden_Space:          979.823 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     1168.895 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.004 B/op
                 ·gc.count:                        35.000 counts
                 ·gc.time:                         18.000 ms


# Run progress: 66.67% complete, ETA 00:24:34
# Fork: 2 of 3
# Warmup Iteration   1: 1234.610 ns/op
# Warmup Iteration   2: 1120.685 ns/op
# Warmup Iteration   3: 1142.092 ns/op
# Warmup Iteration   4: 1116.649 ns/op
# Warmup Iteration   5: 1083.416 ns/op
Iteration   1: 1151.442 ns/op
                 ·gc.alloc.rate:                   908.588 MB/sec
                 ·gc.alloc.rate.norm:              1152.000 B/op
                 ·gc.churn.G1_Eden_Space:          895.871 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     1135.876 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.007 B/op
                 ·gc.count:                        32.000 counts
                 ·gc.time:                         20.000 ms

Iteration   2: 1119.405 ns/op
                 ·gc.alloc.rate:                   934.570 MB/sec
                 ·gc.alloc.rate.norm:              1152.000 B/op
                 ·gc.churn.G1_Eden_Space:          951.840 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     1173.288 B/op
                 ·gc.churn.G1_Survivor_Space:      0.006 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.007 B/op
                 ·gc.count:                        34.000 counts
                 ·gc.time:                         19.000 ms

Iteration   3: 1141.830 ns/op
                 ·gc.alloc.rate:                   916.238 MB/sec
                 ·gc.alloc.rate.norm:              1152.000 B/op
                 ·gc.churn.G1_Eden_Space:          923.865 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     1161.590 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.004 B/op
                 ·gc.count:                        33.000 counts
                 ·gc.time:                         20.000 ms

Iteration   4: 1153.477 ns/op
                 ·gc.alloc.rate:                   906.989 MB/sec
                 ·gc.alloc.rate.norm:              1152.000 B/op
                 ·gc.churn.G1_Eden_Space:          895.871 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     1137.880 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.004 B/op
                 ·gc.count:                        32.000 counts
                 ·gc.time:                         17.000 ms

Iteration   5: 1147.958 ns/op
                 ·gc.alloc.rate:                   911.312 MB/sec
                 ·gc.alloc.rate.norm:              1152.000 B/op
                 ·gc.churn.G1_Eden_Space:          923.826 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     1167.819 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.006 B/op
                 ·gc.count:                        33.000 counts
                 ·gc.time:                         16.000 ms


# Run progress: 69.05% complete, ETA 00:22:48
# Fork: 3 of 3
# Warmup Iteration   1: 1195.750 ns/op
# Warmup Iteration   2: 1118.540 ns/op
# Warmup Iteration   3: 1104.104 ns/op
# Warmup Iteration   4: 1110.886 ns/op
# Warmup Iteration   5: 1108.548 ns/op
Iteration   1: 1109.075 ns/op
                 ·gc.alloc.rate:                   943.275 MB/sec
                 ·gc.alloc.rate.norm:              1152.000 B/op
                 ·gc.churn.G1_Eden_Space:          923.847 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     1128.273 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.005 B/op
                 ·gc.count:                        33.000 counts
                 ·gc.time:                         18.000 ms

Iteration   2: 1097.628 ns/op
                 ·gc.alloc.rate:                   953.139 MB/sec
                 ·gc.alloc.rate.norm:              1152.000 B/op
                 ·gc.churn.G1_Eden_Space:          951.859 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     1150.454 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.005 B/op
                 ·gc.count:                        34.000 counts
                 ·gc.time:                         20.000 ms

Iteration   3: 1087.676 ns/op
                 ·gc.alloc.rate:                   961.837 MB/sec
                 ·gc.alloc.rate.norm:              1152.000 B/op
                 ·gc.churn.G1_Eden_Space:          979.838 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     1173.560 B/op
                 ·gc.churn.G1_Survivor_Space:      0.006 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.007 B/op
                 ·gc.count:                        35.000 counts
                 ·gc.time:                         18.000 ms

Iteration   4: 1103.626 ns/op
                 ·gc.alloc.rate:                   947.932 MB/sec
                 ·gc.alloc.rate.norm:              1152.000 B/op
                 ·gc.churn.G1_Eden_Space:          951.837 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     1156.746 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.005 B/op
                 ·gc.count:                        34.000 counts
                 ·gc.time:                         19.000 ms

Iteration   5: 1125.071 ns/op
                 ·gc.alloc.rate:                   929.873 MB/sec
                 ·gc.alloc.rate.norm:              1152.000 B/op
                 ·gc.churn.G1_Eden_Space:          923.853 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     1144.542 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.006 B/op
                 ·gc.count:                        33.000 counts
                 ·gc.time:                         18.000 ms



Result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.string_format":
  1105.098 ±(99.9%) 36.282 ns/op [Average]
  (min, avg, max) = (1054.690, 1105.098, 1153.477), stdev = 33.938
  CI (99.9%): [1068.816, 1141.380] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.string_format:·gc.alloc.rate":
  947.519 ±(99.9%) 31.095 MB/sec [Average]
  (min, avg, max) = (906.989, 947.519, 991.923), stdev = 29.086
  CI (99.9%): [916.424, 978.613] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.string_format:·gc.alloc.rate.norm":
  1152.000 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (1152.000, 1152.000, 1152.000), stdev = 0.001
  CI (99.9%): [1152.000, 1152.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.string_format:·gc.churn.G1_Eden_Space":
  948.121 ±(99.9%) 33.688 MB/sec [Average]
  (min, avg, max) = (895.871, 948.121, 979.901), stdev = 31.512
  CI (99.9%): [914.433, 981.809] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.string_format:·gc.churn.G1_Eden_Space.norm":
  1152.727 ±(99.9%) 15.593 B/op [Average]
  (min, avg, max) = (1128.273, 1152.727, 1173.560), stdev = 14.586
  CI (99.9%): [1137.133, 1168.320] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.string_format:·gc.churn.G1_Survivor_Space":
  0.004 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.003, 0.004, 0.006), stdev = 0.001
  CI (99.9%): [0.003, 0.005] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.string_format:·gc.churn.G1_Survivor_Space.norm":
  0.005 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (0.003, 0.005, 0.007), stdev = 0.001
  CI (99.9%): [0.004, 0.006] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.string_format:·gc.count":
  508.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (32.000, 33.867, 35.000), stdev = 1.125
  CI (99.9%): [508.000, 508.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.string_format:·gc.time":
  274.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (16.000, 18.267, 20.000), stdev = 1.387
  CI (99.9%): [274.000, 274.000] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_parametrized
# Parameters: (aBoolean = true, aInt = 42, aString = P1, theLevel = INFO)

# Run progress: 71.43% complete, ETA 00:21:03
# Fork: 1 of 3
# Warmup Iteration   1: 14224.372 ns/op
# Warmup Iteration   2: 13430.532 ns/op
# Warmup Iteration   3: 13098.269 ns/op
# Warmup Iteration   4: 13155.727 ns/op
# Warmup Iteration   5: 12690.165 ns/op
Iteration   1: 12931.731 ns/op
                 ·gc.alloc.rate:                   688.786 MB/sec
                 ·gc.alloc.rate.norm:              9808.014 B/op
                 ·gc.churn.G1_Eden_Space:          699.905 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     9966.344 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.027 B/op
                 ·gc.count:                        25.000 counts
                 ·gc.time:                         16.000 ms

Iteration   2: 13054.324 ns/op
                 ·gc.alloc.rate:                   682.315 MB/sec
                 ·gc.alloc.rate.norm:              9808.014 B/op
                 ·gc.churn.G1_Eden_Space:          671.898 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     9658.277 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.039 B/op
                 ·gc.count:                        24.000 counts
                 ·gc.time:                         15.000 ms

Iteration   3: 13241.622 ns/op
                 ·gc.alloc.rate:                   672.649 MB/sec
                 ·gc.alloc.rate.norm:              9808.014 B/op
                 ·gc.churn.G1_Eden_Space:          671.889 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     9796.934 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.030 B/op
                 ·gc.count:                        24.000 counts
                 ·gc.time:                         15.000 ms

Iteration   4: 12942.567 ns/op
                 ·gc.alloc.rate:                   688.195 MB/sec
                 ·gc.alloc.rate.norm:              9808.015 B/op
                 ·gc.churn.G1_Eden_Space:          699.890 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     9974.689 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.028 B/op
                 ·gc.count:                        25.000 counts
                 ·gc.time:                         17.000 ms

Iteration   5: 12792.421 ns/op
                 ·gc.alloc.rate:                   696.285 MB/sec
                 ·gc.alloc.rate.norm:              9808.014 B/op
                 ·gc.churn.G1_Eden_Space:          699.897 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     9858.895 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.022 B/op
                 ·gc.count:                        25.000 counts
                 ·gc.time:                         16.000 ms


# Run progress: 73.81% complete, ETA 00:19:18
# Fork: 2 of 3
# Warmup Iteration   1: 13957.707 ns/op
# Warmup Iteration   2: 13285.826 ns/op
# Warmup Iteration   3: 12836.618 ns/op
# Warmup Iteration   4: 12987.050 ns/op
# Warmup Iteration   5: 13257.836 ns/op
Iteration   1: 12718.478 ns/op
                 ·gc.alloc.rate:                   702.040 MB/sec
                 ·gc.alloc.rate.norm:              9832.014 B/op
                 ·gc.churn.G1_Eden_Space:          699.896 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     9801.982 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.032 B/op
                 ·gc.count:                        25.000 counts
                 ·gc.time:                         15.000 ms

Iteration   2: 12919.327 ns/op
                 ·gc.alloc.rate:                   691.110 MB/sec
                 ·gc.alloc.rate.norm:              9832.014 B/op
                 ·gc.churn.G1_Eden_Space:          699.872 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     9956.662 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.048 B/op
                 ·gc.count:                        25.000 counts
                 ·gc.time:                         15.000 ms

Iteration   3: 13229.693 ns/op
                 ·gc.alloc.rate:                   674.952 MB/sec
                 ·gc.alloc.rate.norm:              9832.014 B/op
                 ·gc.churn.G1_Eden_Space:          671.936 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     9788.082 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.041 B/op
                 ·gc.count:                        24.000 counts
                 ·gc.time:                         14.000 ms

Iteration   4: 12932.556 ns/op
                 ·gc.alloc.rate:                   690.455 MB/sec
                 ·gc.alloc.rate.norm:              9832.014 B/op
                 ·gc.churn.G1_Eden_Space:          699.930 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     9966.937 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.046 B/op
                 ·gc.count:                        25.000 counts
                 ·gc.time:                         15.000 ms

Iteration   5: 13163.897 ns/op
                 ·gc.alloc.rate:                   678.279 MB/sec
                 ·gc.alloc.rate.norm:              9832.013 B/op
                 ·gc.churn.G1_Eden_Space:          671.893 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     9739.442 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.030 B/op
                 ·gc.count:                        24.000 counts
                 ·gc.time:                         18.000 ms


# Run progress: 76.19% complete, ETA 00:17:33
# Fork: 3 of 3
# Warmup Iteration   1: 14462.694 ns/op
# Warmup Iteration   2: 13568.796 ns/op
# Warmup Iteration   3: 13553.181 ns/op
# Warmup Iteration   4: 13740.019 ns/op
# Warmup Iteration   5: 13785.355 ns/op
Iteration   1: 13202.092 ns/op
                 ·gc.alloc.rate:                   674.670 MB/sec
                 ·gc.alloc.rate.norm:              9808.010 B/op
                 ·gc.churn.G1_Eden_Space:          671.892 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     9767.626 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.036 B/op
                 ·gc.count:                        24.000 counts
                 ·gc.time:                         14.000 ms

Iteration   2: 13515.522 ns/op
                 ·gc.alloc.rate:                   659.053 MB/sec
                 ·gc.alloc.rate.norm:              9808.010 B/op
                 ·gc.churn.G1_Eden_Space:          671.846 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     9998.381 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.036 B/op
                 ·gc.count:                        24.000 counts
                 ·gc.time:                         16.000 ms

Iteration   3: 13562.402 ns/op
                 ·gc.alloc.rate:                   656.722 MB/sec
                 ·gc.alloc.rate.norm:              9808.010 B/op
                 ·gc.churn.G1_Eden_Space:          643.877 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     9616.167 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.042 B/op
                 ·gc.count:                        23.000 counts
                 ·gc.time:                         15.000 ms

Iteration   4: 13473.148 ns/op
                 ·gc.alloc.rate:                   661.122 MB/sec
                 ·gc.alloc.rate.norm:              9808.010 B/op
                 ·gc.churn.G1_Eden_Space:          671.920 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     9968.207 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.044 B/op
                 ·gc.count:                        24.000 counts
                 ·gc.time:                         15.000 ms

Iteration   5: 13052.776 ns/op
                 ·gc.alloc.rate:                   682.377 MB/sec
                 ·gc.alloc.rate.norm:              9808.010 B/op
                 ·gc.churn.G1_Eden_Space:          671.881 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     9657.143 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.028 B/op
                 ·gc.count:                        24.000 counts
                 ·gc.time:                         15.000 ms



Result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_parametrized":
  13115.504 ±(99.9%) 275.796 ns/op [Average]
  (min, avg, max) = (12718.478, 13115.504, 13562.402), stdev = 257.980
  CI (99.9%): [12839.708, 13391.300] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_parametrized:·gc.alloc.rate":
  679.934 ±(99.9%) 14.532 MB/sec [Average]
  (min, avg, max) = (656.722, 679.934, 702.040), stdev = 13.593
  CI (99.9%): [665.402, 694.466] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_parametrized:·gc.alloc.rate.norm":
  9816.013 ±(99.9%) 12.520 B/op [Average]
  (min, avg, max) = (9808.010, 9816.013, 9832.014), stdev = 11.712
  CI (99.9%): [9803.492, 9828.533] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_parametrized:·gc.churn.G1_Eden_Space":
  681.228 ±(99.9%) 18.480 MB/sec [Average]
  (min, avg, max) = (643.877, 681.228, 699.930), stdev = 17.287
  CI (99.9%): [662.748, 699.708] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_parametrized:·gc.churn.G1_Eden_Space.norm":
  9834.385 ±(99.9%) 140.885 B/op [Average]
  (min, avg, max) = (9616.167, 9834.385, 9998.381), stdev = 131.784
  CI (99.9%): [9693.499, 9975.270] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_parametrized:·gc.churn.G1_Survivor_Space":
  0.002 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.002, 0.002, 0.003), stdev = 0.001
  CI (99.9%): [0.002, 0.003] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_parametrized:·gc.churn.G1_Survivor_Space.norm":
  0.035 ±(99.9%) 0.008 B/op [Average]
  (min, avg, max) = (0.022, 0.035, 0.048), stdev = 0.008
  CI (99.9%): [0.027, 0.044] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_parametrized:·gc.count":
  365.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (23.000, 24.333, 25.000), stdev = 0.617
  CI (99.9%): [365.000, 365.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_parametrized:·gc.time":
  231.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (14.000, 15.400, 18.000), stdev = 1.056
  CI (99.9%): [231.000, 231.000] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_parametrized
# Parameters: (aBoolean = true, aInt = 42, aString = P1, theLevel = FINE)

# Run progress: 78.57% complete, ETA 00:15:47
# Fork: 1 of 3
# Warmup Iteration   1: 81.712 ns/op
# Warmup Iteration   2: 73.435 ns/op
# Warmup Iteration   3: 73.103 ns/op
# Warmup Iteration   4: 72.865 ns/op
# Warmup Iteration   5: 75.128 ns/op
Iteration   1: 73.412 ns/op
                 ·gc.alloc.rate:                   1187.549 MB/sec
                 ·gc.alloc.rate.norm:              96.000 B/op
                 ·gc.churn.G1_Eden_Space:          1187.398 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     95.988 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        29.000 counts
                 ·gc.time:                         17.000 ms

Iteration   2: 72.026 ns/op
                 ·gc.alloc.rate:                   1210.443 MB/sec
                 ·gc.alloc.rate.norm:              96.000 B/op
                 ·gc.churn.G1_Eden_Space:          1228.410 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     97.425 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        30.000 counts
                 ·gc.time:                         19.000 ms

Iteration   3: 72.846 ns/op
                 ·gc.alloc.rate:                   1196.825 MB/sec
                 ·gc.alloc.rate.norm:              96.000 B/op
                 ·gc.churn.G1_Eden_Space:          1187.464 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     95.249 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        29.000 counts
                 ·gc.time:                         18.000 ms

Iteration   4: 74.689 ns/op
                 ·gc.alloc.rate:                   1167.257 MB/sec
                 ·gc.alloc.rate.norm:              96.000 B/op
                 ·gc.churn.G1_Eden_Space:          1146.477 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     94.291 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        28.000 counts
                 ·gc.time:                         17.000 ms

Iteration   5: 74.733 ns/op
                 ·gc.alloc.rate:                   1166.485 MB/sec
                 ·gc.alloc.rate.norm:              96.000 B/op
                 ·gc.churn.G1_Eden_Space:          1187.342 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     97.717 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        29.000 counts
                 ·gc.time:                         15.000 ms


# Run progress: 80.95% complete, ETA 00:14:02
# Fork: 2 of 3
# Warmup Iteration   1: 85.870 ns/op
# Warmup Iteration   2: 85.498 ns/op
# Warmup Iteration   3: 82.896 ns/op
# Warmup Iteration   4: 84.744 ns/op
# Warmup Iteration   5: 85.644 ns/op
Iteration   1: 84.973 ns/op
                 ·gc.alloc.rate:                   1795.470 MB/sec
                 ·gc.alloc.rate.norm:              168.000 B/op
                 ·gc.churn.G1_Eden_Space:          1806.765 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     169.057 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        53.000 counts
                 ·gc.time:                         31.000 ms

Iteration   2: 85.012 ns/op
                 ·gc.alloc.rate:                   1794.674 MB/sec
                 ·gc.alloc.rate.norm:              168.000 B/op
                 ·gc.churn.G1_Eden_Space:          1772.684 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     165.942 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        52.000 counts
                 ·gc.time:                         30.000 ms

Iteration   3: 84.607 ns/op
                 ·gc.alloc.rate:                   1803.147 MB/sec
                 ·gc.alloc.rate.norm:              168.000 B/op
                 ·gc.churn.G1_Eden_Space:          1806.658 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     168.327 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        53.000 counts
                 ·gc.time:                         33.000 ms

Iteration   4: 83.525 ns/op
                 ·gc.alloc.rate:                   1826.585 MB/sec
                 ·gc.alloc.rate.norm:              168.000 B/op
                 ·gc.churn.G1_Eden_Space:          1840.830 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     169.310 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        54.000 counts
                 ·gc.time:                         33.000 ms

Iteration   5: 85.143 ns/op
                 ·gc.alloc.rate:                   1791.827 MB/sec
                 ·gc.alloc.rate.norm:              168.000 B/op
                 ·gc.churn.G1_Eden_Space:          1806.686 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     169.393 B/op
                 ·gc.churn.G1_Survivor_Space:      0.006 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        53.000 counts
                 ·gc.time:                         29.000 ms


# Run progress: 83.33% complete, ETA 00:12:17
# Fork: 3 of 3
# Warmup Iteration   1: 80.210 ns/op
# Warmup Iteration   2: 80.055 ns/op
# Warmup Iteration   3: 82.079 ns/op
# Warmup Iteration   4: 81.606 ns/op
# Warmup Iteration   5: 81.693 ns/op
Iteration   1: 81.675 ns/op
                 ·gc.alloc.rate:                   1868.072 MB/sec
                 ·gc.alloc.rate.norm:              168.000 B/op
                 ·gc.churn.G1_Eden_Space:          1883.615 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     169.398 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        46.000 counts
                 ·gc.time:                         24.000 ms

Iteration   2: 81.659 ns/op
                 ·gc.alloc.rate:                   1868.451 MB/sec
                 ·gc.alloc.rate.norm:              168.000 B/op
                 ·gc.churn.G1_Eden_Space:          1883.599 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     169.362 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        46.000 counts
                 ·gc.time:                         28.000 ms

Iteration   3: 80.980 ns/op
                 ·gc.alloc.rate:                   1884.055 MB/sec
                 ·gc.alloc.rate.norm:              168.000 B/op
                 ·gc.churn.G1_Eden_Space:          1883.561 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     167.956 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        46.000 counts
                 ·gc.time:                         27.000 ms

Iteration   4: 80.817 ns/op
                 ·gc.alloc.rate:                   1887.827 MB/sec
                 ·gc.alloc.rate.norm:              168.000 B/op
                 ·gc.churn.G1_Eden_Space:          1883.509 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     167.616 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        46.000 counts
                 ·gc.time:                         30.000 ms

Iteration   5: 79.511 ns/op
                 ·gc.alloc.rate:                   1918.712 MB/sec
                 ·gc.alloc.rate.norm:              168.000 B/op
                 ·gc.churn.G1_Eden_Space:          1924.358 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     168.494 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        47.000 counts
                 ·gc.time:                         31.000 ms



Result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_parametrized":
  79.707 ±(99.9%) 5.192 ns/op [Average]
  (min, avg, max) = (72.026, 79.707, 85.143), stdev = 4.857
  CI (99.9%): [74.515, 84.899] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_parametrized:·gc.alloc.rate":
  1624.492 ±(99.9%) 345.846 MB/sec [Average]
  (min, avg, max) = (1166.485, 1624.492, 1918.712), stdev = 323.505
  CI (99.9%): [1278.646, 1970.338] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_parametrized:·gc.alloc.rate.norm":
  144.000 ±(99.9%) 37.559 B/op [Average]
  (min, avg, max) = (96.000, 144.000, 168.000), stdev = 35.132
  CI (99.9%): [106.441, 181.559] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_parametrized:·gc.churn.G1_Eden_Space":
  1628.624 ±(99.9%) 348.183 MB/sec [Average]
  (min, avg, max) = (1146.477, 1628.624, 1924.358), stdev = 325.691
  CI (99.9%): [1280.441, 1976.807] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_parametrized:·gc.churn.G1_Eden_Space.norm":
  144.368 ±(99.9%) 37.763 B/op [Average]
  (min, avg, max) = (94.291, 144.368, 169.398), stdev = 35.324
  CI (99.9%): [106.605, 182.131] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_parametrized:·gc.churn.G1_Survivor_Space":
  0.004 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.003, 0.004, 0.006), stdev = 0.001
  CI (99.9%): [0.003, 0.006] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_parametrized:·gc.churn.G1_Survivor_Space.norm":
  ≈ 10⁻³ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_parametrized:·gc.count":
  641.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (28.000, 42.733, 54.000), stdev = 10.471
  CI (99.9%): [641.000, 641.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_parametrized:·gc.time":
  382.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (15.000, 25.467, 33.000), stdev = 6.490
  CI (99.9%): [382.000, 382.000] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_unparametrized
# Parameters: (aBoolean = true, aInt = 42, aString = P1, theLevel = INFO)

# Run progress: 85.71% complete, ETA 00:10:31
# Fork: 1 of 3
# Warmup Iteration   1: 11718.615 ns/op
# Warmup Iteration   2: 10614.991 ns/op
# Warmup Iteration   3: 10617.513 ns/op
# Warmup Iteration   4: 10626.485 ns/op
# Warmup Iteration   5: 10721.849 ns/op
Iteration   1: 10546.384 ns/op
                 ·gc.alloc.rate:                   587.622 MB/sec
                 ·gc.alloc.rate.norm:              6824.009 B/op
                 ·gc.churn.G1_Eden_Space:          587.920 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6827.476 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.024 B/op
                 ·gc.count:                        21.000 counts
                 ·gc.time:                         13.000 ms

Iteration   2: 10494.566 ns/op
                 ·gc.alloc.rate:                   590.512 MB/sec
                 ·gc.alloc.rate.norm:              6824.009 B/op
                 ·gc.churn.G1_Eden_Space:          587.906 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6793.894 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.035 B/op
                 ·gc.count:                        21.000 counts
                 ·gc.time:                         17.000 ms

Iteration   3: 10775.610 ns/op
                 ·gc.alloc.rate:                   575.128 MB/sec
                 ·gc.alloc.rate.norm:              6824.009 B/op
                 ·gc.churn.G1_Eden_Space:          559.930 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6643.687 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.032 B/op
                 ·gc.count:                        20.000 counts
                 ·gc.time:                         13.000 ms

Iteration   4: 10722.525 ns/op
                 ·gc.alloc.rate:                   577.950 MB/sec
                 ·gc.alloc.rate.norm:              6824.010 B/op
                 ·gc.churn.G1_Eden_Space:          587.899 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6941.472 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.029 B/op
                 ·gc.count:                        21.000 counts
                 ·gc.time:                         14.000 ms

Iteration   5: 10711.707 ns/op
                 ·gc.alloc.rate:                   578.526 MB/sec
                 ·gc.alloc.rate.norm:              6824.010 B/op
                 ·gc.churn.G1_Eden_Space:          587.892 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6934.483 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.027 B/op
                 ·gc.count:                        21.000 counts
                 ·gc.time:                         13.000 ms


# Run progress: 88.10% complete, ETA 00:08:46
# Fork: 2 of 3
# Warmup Iteration   1: 11599.465 ns/op
# Warmup Iteration   2: 10835.567 ns/op
# Warmup Iteration   3: 10923.902 ns/op
# Warmup Iteration   4: 10673.466 ns/op
# Warmup Iteration   5: 10716.803 ns/op
Iteration   1: 11194.010 ns/op
                 ·gc.alloc.rate:                   555.562 MB/sec
                 ·gc.alloc.rate.norm:              6848.009 B/op
                 ·gc.churn.G1_Eden_Space:          559.911 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6901.615 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.028 B/op
                 ·gc.count:                        20.000 counts
                 ·gc.time:                         11.000 ms

Iteration   2: 10909.218 ns/op
                 ·gc.alloc.rate:                   570.039 MB/sec
                 ·gc.alloc.rate.norm:              6848.009 B/op
                 ·gc.churn.G1_Eden_Space:          559.887 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6726.055 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.034 B/op
                 ·gc.count:                        20.000 counts
                 ·gc.time:                         13.000 ms

Iteration   3: 10864.272 ns/op
                 ·gc.alloc.rate:                   572.415 MB/sec
                 ·gc.alloc.rate.norm:              6848.010 B/op
                 ·gc.churn.G1_Eden_Space:          587.898 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     7033.233 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.034 B/op
                 ·gc.count:                        21.000 counts
                 ·gc.time:                         14.000 ms

Iteration   4: 10564.228 ns/op
                 ·gc.alloc.rate:                   588.700 MB/sec
                 ·gc.alloc.rate.norm:              6848.009 B/op
                 ·gc.churn.G1_Eden_Space:          587.928 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6839.023 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.029 B/op
                 ·gc.count:                        21.000 counts
                 ·gc.time:                         13.000 ms

Iteration   5: 10968.513 ns/op
                 ·gc.alloc.rate:                   567.024 MB/sec
                 ·gc.alloc.rate.norm:              6848.009 B/op
                 ·gc.churn.G1_Eden_Space:          559.954 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6762.632 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.035 B/op
                 ·gc.count:                        20.000 counts
                 ·gc.time:                         14.000 ms


# Run progress: 90.48% complete, ETA 00:07:01
# Fork: 3 of 3
# Warmup Iteration   1: 11775.045 ns/op
# Warmup Iteration   2: 11043.902 ns/op
# Warmup Iteration   3: 10758.067 ns/op
# Warmup Iteration   4: 10730.918 ns/op
# Warmup Iteration   5: 11149.532 ns/op
Iteration   1: 11006.477 ns/op
                 ·gc.alloc.rate:                   558.431 MB/sec
                 ·gc.alloc.rate.norm:              6768.010 B/op
                 ·gc.churn.G1_Eden_Space:          559.917 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6786.026 B/op
                 ·gc.churn.G1_Survivor_Space:      0.001 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.017 B/op
                 ·gc.count:                        20.000 counts
                 ·gc.time:                         15.000 ms

Iteration   2: 10515.164 ns/op
                 ·gc.alloc.rate:                   584.500 MB/sec
                 ·gc.alloc.rate.norm:              6768.010 B/op
                 ·gc.churn.G1_Eden_Space:          587.887 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6807.224 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.031 B/op
                 ·gc.count:                        21.000 counts
                 ·gc.time:                         13.000 ms

Iteration   3: 11033.967 ns/op
                 ·gc.alloc.rate:                   557.037 MB/sec
                 ·gc.alloc.rate.norm:              6768.010 B/op
                 ·gc.churn.G1_Eden_Space:          559.915 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6802.977 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.019 B/op
                 ·gc.count:                        20.000 counts
                 ·gc.time:                         17.000 ms

Iteration   4: 10868.463 ns/op
                 ·gc.alloc.rate:                   565.524 MB/sec
                 ·gc.alloc.rate.norm:              6768.010 B/op
                 ·gc.churn.G1_Eden_Space:          559.921 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6700.960 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.025 B/op
                 ·gc.count:                        20.000 counts
                 ·gc.time:                         13.000 ms

Iteration   5: 10576.226 ns/op
                 ·gc.alloc.rate:                   581.148 MB/sec
                 ·gc.alloc.rate.norm:              6768.010 B/op
                 ·gc.churn.G1_Eden_Space:          587.908 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     6846.733 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.029 B/op
                 ·gc.count:                        21.000 counts
                 ·gc.time:                         15.000 ms



Result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_unparametrized":
  10783.422 ±(99.9%) 231.491 ns/op [Average]
  (min, avg, max) = (10494.566, 10783.422, 11194.010), stdev = 216.537
  CI (99.9%): [10551.931, 11014.913] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_unparametrized:·gc.alloc.rate":
  574.008 ±(99.9%) 12.395 MB/sec [Average]
  (min, avg, max) = (555.562, 574.008, 590.512), stdev = 11.594
  CI (99.9%): [561.613, 586.402] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_unparametrized:·gc.alloc.rate.norm":
  6813.343 ±(99.9%) 37.092 B/op [Average]
  (min, avg, max) = (6768.010, 6813.343, 6848.010), stdev = 34.696
  CI (99.9%): [6776.251, 6850.435] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_unparametrized:·gc.churn.G1_Eden_Space":
  574.845 ±(99.9%) 15.450 MB/sec [Average]
  (min, avg, max) = (559.887, 574.845, 587.928), stdev = 14.452
  CI (99.9%): [559.395, 590.294] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_unparametrized:·gc.churn.G1_Eden_Space.norm":
  6823.166 ±(99.9%) 107.148 B/op [Average]
  (min, avg, max) = (6643.687, 6823.166, 7033.233), stdev = 100.227
  CI (99.9%): [6716.018, 6930.314] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_unparametrized:·gc.churn.G1_Survivor_Space":
  0.002 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.001, 0.002, 0.003), stdev = 0.001
  CI (99.9%): [0.002, 0.003] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_unparametrized:·gc.churn.G1_Survivor_Space.norm":
  0.028 ±(99.9%) 0.006 B/op [Average]
  (min, avg, max) = (0.017, 0.028, 0.035), stdev = 0.006
  CI (99.9%): [0.022, 0.034] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_unparametrized:·gc.count":
  308.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (20.000, 20.533, 21.000), stdev = 0.516
  CI (99.9%): [308.000, 308.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_unparametrized:·gc.time":
  208.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (11.000, 13.867, 17.000), stdev = 1.598
  CI (99.9%): [208.000, 208.000] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_unparametrized
# Parameters: (aBoolean = true, aInt = 42, aString = P1, theLevel = FINE)

# Run progress: 92.86% complete, ETA 00:05:15
# Fork: 1 of 3
# Warmup Iteration   1: 109.071 ns/op
# Warmup Iteration   2: 110.055 ns/op
# Warmup Iteration   3: 105.581 ns/op
# Warmup Iteration   4: 107.240 ns/op
# Warmup Iteration   5: 107.320 ns/op
Iteration   1: 109.087 ns/op
                 ·gc.alloc.rate:                   1665.031 MB/sec
                 ·gc.alloc.rate.norm:              200.000 B/op
                 ·gc.churn.G1_Eden_Space:          1670.452 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     200.651 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        49.000 counts
                 ·gc.time:                         29.000 ms

Iteration   2: 108.199 ns/op
                 ·gc.alloc.rate:                   1678.590 MB/sec
                 ·gc.alloc.rate.norm:              200.000 B/op
                 ·gc.churn.G1_Eden_Space:          1704.443 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     203.080 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        50.000 counts
                 ·gc.time:                         28.000 ms

Iteration   3: 105.182 ns/op
                 ·gc.alloc.rate:                   1726.848 MB/sec
                 ·gc.alloc.rate.norm:              200.000 B/op
                 ·gc.churn.G1_Eden_Space:          1704.553 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     197.418 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        50.000 counts
                 ·gc.time:                         31.000 ms

Iteration   4: 107.946 ns/op
                 ·gc.alloc.rate:                   1682.619 MB/sec
                 ·gc.alloc.rate.norm:              200.000 B/op
                 ·gc.churn.G1_Eden_Space:          1704.538 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     202.605 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        50.000 counts
                 ·gc.time:                         27.000 ms

Iteration   5: 108.315 ns/op
                 ·gc.alloc.rate:                   1676.928 MB/sec
                 ·gc.alloc.rate.norm:              200.000 B/op
                 ·gc.churn.G1_Eden_Space:          1670.478 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     199.231 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        49.000 counts
                 ·gc.time:                         27.000 ms


# Run progress: 95.24% complete, ETA 00:03:30
# Fork: 2 of 3
# Warmup Iteration   1: 109.433 ns/op
# Warmup Iteration   2: 108.614 ns/op
# Warmup Iteration   3: 109.367 ns/op
# Warmup Iteration   4: 107.820 ns/op
# Warmup Iteration   5: 111.386 ns/op
Iteration   1: 111.863 ns/op
                 ·gc.alloc.rate:                   1623.729 MB/sec
                 ·gc.alloc.rate.norm:              200.000 B/op
                 ·gc.churn.G1_Eden_Space:          1596.947 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     196.701 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        39.000 counts
                 ·gc.time:                         24.000 ms

Iteration   2: 110.213 ns/op
                 ·gc.alloc.rate:                   1648.026 MB/sec
                 ·gc.alloc.rate.norm:              200.000 B/op
                 ·gc.churn.G1_Eden_Space:          1678.842 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     203.740 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        41.000 counts
                 ·gc.time:                         23.000 ms

Iteration   3: 109.230 ns/op
                 ·gc.alloc.rate:                   1662.832 MB/sec
                 ·gc.alloc.rate.norm:              200.000 B/op
                 ·gc.churn.G1_Eden_Space:          1637.853 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     196.996 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        40.000 counts
                 ·gc.time:                         24.000 ms

Iteration   4: 110.648 ns/op
                 ·gc.alloc.rate:                   1641.496 MB/sec
                 ·gc.alloc.rate.norm:              200.000 B/op
                 ·gc.churn.G1_Eden_Space:          1637.843 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     199.555 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        40.000 counts
                 ·gc.time:                         25.000 ms

Iteration   5: 107.416 ns/op
                 ·gc.alloc.rate:                   1690.829 MB/sec
                 ·gc.alloc.rate.norm:              200.000 B/op
                 ·gc.churn.G1_Eden_Space:          1719.675 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     203.412 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        42.000 counts
                 ·gc.time:                         26.000 ms


# Run progress: 97.62% complete, ETA 00:01:45
# Fork: 3 of 3
# Warmup Iteration   1: 110.105 ns/op
# Warmup Iteration   2: 108.892 ns/op
# Warmup Iteration   3: 109.798 ns/op
# Warmup Iteration   4: 111.690 ns/op
# Warmup Iteration   5: 109.763 ns/op
Iteration   1: 104.972 ns/op
                 ·gc.alloc.rate:                   1730.259 MB/sec
                 ·gc.alloc.rate.norm:              200.000 B/op
                 ·gc.churn.G1_Eden_Space:          1738.581 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     200.962 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        51.000 counts
                 ·gc.time:                         26.000 ms

Iteration   2: 107.289 ns/op
                 ·gc.alloc.rate:                   1692.839 MB/sec
                 ·gc.alloc.rate.norm:              200.000 B/op
                 ·gc.churn.G1_Eden_Space:          1704.454 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     201.372 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        50.000 counts
                 ·gc.time:                         28.000 ms

Iteration   3: 108.679 ns/op
                 ·gc.alloc.rate:                   1671.262 MB/sec
                 ·gc.alloc.rate.norm:              200.000 B/op
                 ·gc.churn.G1_Eden_Space:          1670.423 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     199.900 B/op
                 ·gc.churn.G1_Survivor_Space:      0.006 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        49.000 counts
                 ·gc.time:                         29.000 ms

Iteration   4: 106.540 ns/op
                 ·gc.alloc.rate:                   1704.827 MB/sec
                 ·gc.alloc.rate.norm:              200.000 B/op
                 ·gc.churn.G1_Eden_Space:          1704.528 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     199.965 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        50.000 counts
                 ·gc.time:                         31.000 ms

Iteration   5: 108.938 ns/op
                 ·gc.alloc.rate:                   1667.155 MB/sec
                 ·gc.alloc.rate.norm:              200.000 B/op
                 ·gc.churn.G1_Eden_Space:          1670.310 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     200.378 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        49.000 counts
                 ·gc.time:                         30.000 ms



Result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_unparametrized":
  108.301 ±(99.9%) 2.015 ns/op [Average]
  (min, avg, max) = (104.972, 108.301, 111.863), stdev = 1.885
  CI (99.9%): [106.286, 110.316] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_unparametrized:·gc.alloc.rate":
  1677.551 ±(99.9%) 31.271 MB/sec [Average]
  (min, avg, max) = (1623.729, 1677.551, 1730.259), stdev = 29.251
  CI (99.9%): [1646.280, 1708.823] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_unparametrized:·gc.alloc.rate.norm":
  200.000 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (200.000, 200.000, 200.000), stdev = 0.001
  CI (99.9%): [200.000, 200.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_unparametrized:·gc.churn.G1_Eden_Space":
  1680.928 ±(99.9%) 39.192 MB/sec [Average]
  (min, avg, max) = (1596.947, 1680.928, 1738.581), stdev = 36.660
  CI (99.9%): [1641.736, 1720.120] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_unparametrized:·gc.churn.G1_Eden_Space.norm":
  200.398 ±(99.9%) 2.395 B/op [Average]
  (min, avg, max) = (196.701, 200.398, 203.740), stdev = 2.241
  CI (99.9%): [198.002, 202.793] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_unparametrized:·gc.churn.G1_Survivor_Space":
  0.004 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.003, 0.004, 0.006), stdev = 0.001
  CI (99.9%): [0.004, 0.005] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_unparametrized:·gc.churn.G1_Survivor_Space.norm":
  0.001 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (≈ 10⁻³, 0.001, 0.001), stdev = 0.001
  CI (99.9%): [≈ 10⁻³, 0.001] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_unparametrized:·gc.count":
  699.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (39.000, 46.600, 51.000), stdev = 4.611
  CI (99.9%): [699.000, 699.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.LogRecordBenchmark.unguarded_unparametrized:·gc.time":
  408.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (23.000, 27.200, 31.000), stdev = 2.541
  CI (99.9%): [408.000, 408.000] (assumes normal distribution)


# Run complete. Total time: 01:13:42

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                                                     (aBoolean)  (aInt)  (aString)  (theLevel)  Mode  Cnt      Score     Error   Units
LogRecordBenchmark.escape_lambda                                                    true      42         P1        INFO  avgt   15  10960.924 ± 204.642   ns/op
LogRecordBenchmark.escape_lambda:·gc.alloc.rate                                     true      42         P1        INFO  avgt   15    560.905 ±  10.823  MB/sec
LogRecordBenchmark.escape_lambda:·gc.alloc.rate.norm                                true      42         P1        INFO  avgt   15   6768.009 ±  25.039    B/op
LogRecordBenchmark.escape_lambda:·gc.churn.G1_Eden_Space                            true      42         P1        INFO  avgt   15    561.774 ±  17.768  MB/sec
LogRecordBenchmark.escape_lambda:·gc.churn.G1_Eden_Space.norm                       true      42         P1        INFO  avgt   15   6778.261 ± 159.601    B/op
LogRecordBenchmark.escape_lambda:·gc.churn.G1_Survivor_Space                        true      42         P1        INFO  avgt   15      0.002 ±   0.001  MB/sec
LogRecordBenchmark.escape_lambda:·gc.churn.G1_Survivor_Space.norm                   true      42         P1        INFO  avgt   15      0.030 ±   0.007    B/op
LogRecordBenchmark.escape_lambda:·gc.count                                          true      42         P1        INFO  avgt   15    301.000            counts
LogRecordBenchmark.escape_lambda:·gc.time                                           true      42         P1        INFO  avgt   15    187.000                ms
LogRecordBenchmark.escape_lambda                                                    true      42         P1        FINE  avgt   15    115.783 ±   6.683   ns/op
LogRecordBenchmark.escape_lambda:·gc.alloc.rate                                     true      42         P1        FINE  avgt   15   1572.909 ±  89.348  MB/sec
LogRecordBenchmark.escape_lambda:·gc.alloc.rate.norm                                true      42         P1        FINE  avgt   15    200.000 ±   0.001    B/op
LogRecordBenchmark.escape_lambda:·gc.churn.G1_Eden_Space                            true      42         P1        FINE  avgt   15   1574.944 ±  92.588  MB/sec
LogRecordBenchmark.escape_lambda:·gc.churn.G1_Eden_Space.norm                       true      42         P1        FINE  avgt   15    200.251 ±   2.347    B/op
LogRecordBenchmark.escape_lambda:·gc.churn.G1_Survivor_Space                        true      42         P1        FINE  avgt   15      0.004 ±   0.001  MB/sec
LogRecordBenchmark.escape_lambda:·gc.churn.G1_Survivor_Space.norm                   true      42         P1        FINE  avgt   15     ≈ 10⁻³              B/op
LogRecordBenchmark.escape_lambda:·gc.count                                          true      42         P1        FINE  avgt   15    693.000            counts
LogRecordBenchmark.escape_lambda:·gc.time                                           true      42         P1        FINE  avgt   15    420.000                ms
LogRecordBenchmark.guarded_parametrized                                             true      42         P1        INFO  avgt   15  13222.615 ± 361.148   ns/op
LogRecordBenchmark.guarded_parametrized:·gc.alloc.rate                              true      42         P1        INFO  avgt   15    672.918 ±  17.564  MB/sec
LogRecordBenchmark.guarded_parametrized:·gc.alloc.rate.norm                         true      42         P1        INFO  avgt   15   9792.014 ±  21.684    B/op
LogRecordBenchmark.guarded_parametrized:·gc.churn.G1_Eden_Space                     true      42         P1        INFO  avgt   15    675.630 ±  19.164  MB/sec
LogRecordBenchmark.guarded_parametrized:·gc.churn.G1_Eden_Space.norm                true      42         P1        INFO  avgt   15   9831.953 ± 155.726    B/op
LogRecordBenchmark.guarded_parametrized:·gc.churn.G1_Survivor_Space                 true      42         P1        INFO  avgt   15      0.003 ±   0.001  MB/sec
LogRecordBenchmark.guarded_parametrized:·gc.churn.G1_Survivor_Space.norm            true      42         P1        INFO  avgt   15      0.038 ±   0.010    B/op
LogRecordBenchmark.guarded_parametrized:·gc.count                                   true      42         P1        INFO  avgt   15    362.000            counts
LogRecordBenchmark.guarded_parametrized:·gc.time                                    true      42         P1        INFO  avgt   15    232.000                ms
LogRecordBenchmark.guarded_parametrized                                             true      42         P1        FINE  avgt   15     82.598 ±   1.051   ns/op
LogRecordBenchmark.guarded_parametrized:·gc.alloc.rate                              true      42         P1        FINE  avgt   15   1847.355 ±  23.622  MB/sec
LogRecordBenchmark.guarded_parametrized:·gc.alloc.rate.norm                         true      42         P1        FINE  avgt   15    168.000 ±   0.001    B/op
LogRecordBenchmark.guarded_parametrized:·gc.churn.G1_Eden_Space                     true      42         P1        FINE  avgt   15   1847.921 ±  27.459  MB/sec
LogRecordBenchmark.guarded_parametrized:·gc.churn.G1_Eden_Space.norm                true      42         P1        FINE  avgt   15    168.050 ±   1.030    B/op
LogRecordBenchmark.guarded_parametrized:·gc.churn.G1_Survivor_Space                 true      42         P1        FINE  avgt   15      0.005 ±   0.001  MB/sec
LogRecordBenchmark.guarded_parametrized:·gc.churn.G1_Survivor_Space.norm            true      42         P1        FINE  avgt   15     ≈ 10⁻³              B/op
LogRecordBenchmark.guarded_parametrized:·gc.count                                   true      42         P1        FINE  avgt   15    722.000            counts
LogRecordBenchmark.guarded_parametrized:·gc.time                                    true      42         P1        FINE  avgt   15    421.000                ms
LogRecordBenchmark.guarded_unparametrized                                           true      42         P1        INFO  avgt   15  10770.824 ± 286.056   ns/op
LogRecordBenchmark.guarded_unparametrized:·gc.alloc.rate                            true      42         P1        INFO  avgt   15    575.046 ±  16.430  MB/sec
LogRecordBenchmark.guarded_unparametrized:·gc.alloc.rate.norm                       true      42         P1        INFO  avgt   15   6816.010 ±  21.684    B/op
LogRecordBenchmark.guarded_unparametrized:·gc.churn.G1_Eden_Space                   true      42         P1        INFO  avgt   15    576.709 ±  22.055  MB/sec
LogRecordBenchmark.guarded_unparametrized:·gc.churn.G1_Eden_Space.norm              true      42         P1        INFO  avgt   15   6835.281 ± 154.115    B/op
LogRecordBenchmark.guarded_unparametrized:·gc.churn.G1_Survivor_Space               true      42         P1        INFO  avgt   15      0.002 ±   0.001  MB/sec
LogRecordBenchmark.guarded_unparametrized:·gc.churn.G1_Survivor_Space.norm          true      42         P1        INFO  avgt   15      0.027 ±   0.008    B/op
LogRecordBenchmark.guarded_unparametrized:·gc.count                                 true      42         P1        INFO  avgt   15    309.000            counts
LogRecordBenchmark.guarded_unparametrized:·gc.time                                  true      42         P1        INFO  avgt   15    193.000                ms
LogRecordBenchmark.guarded_unparametrized                                           true      42         P1        FINE  avgt   15    109.623 ±   2.010   ns/op
LogRecordBenchmark.guarded_unparametrized:·gc.alloc.rate                            true      42         P1        FINE  avgt   15   1657.303 ±  30.427  MB/sec
LogRecordBenchmark.guarded_unparametrized:·gc.alloc.rate.norm                       true      42         P1        FINE  avgt   15    200.000 ±   0.001    B/op
LogRecordBenchmark.guarded_unparametrized:·gc.churn.G1_Eden_Space                   true      42         P1        FINE  avgt   15   1661.312 ±  29.126  MB/sec
LogRecordBenchmark.guarded_unparametrized:·gc.churn.G1_Eden_Space.norm              true      42         P1        FINE  avgt   15    200.497 ±   2.340    B/op
LogRecordBenchmark.guarded_unparametrized:·gc.churn.G1_Survivor_Space               true      42         P1        FINE  avgt   15      0.005 ±   0.001  MB/sec
LogRecordBenchmark.guarded_unparametrized:·gc.churn.G1_Survivor_Space.norm          true      42         P1        FINE  avgt   15      0.001 ±   0.001    B/op
LogRecordBenchmark.guarded_unparametrized:·gc.count                                 true      42         P1        FINE  avgt   15    731.000            counts
LogRecordBenchmark.guarded_unparametrized:·gc.time                                  true      42         P1        FINE  avgt   15    415.000                ms
LogRecordBenchmark.no_escape_lambda                                                 true      42         P1        INFO  avgt   15  11032.582 ± 224.279   ns/op
LogRecordBenchmark.no_escape_lambda:·gc.alloc.rate                                  true      42         P1        INFO  avgt   15    563.268 ±  14.391  MB/sec
LogRecordBenchmark.no_escape_lambda:·gc.alloc.rate.norm                             true      42         P1        INFO  avgt   15   6840.010 ±  57.372    B/op
LogRecordBenchmark.no_escape_lambda:·gc.churn.G1_Eden_Space                         true      42         P1        INFO  avgt   15    565.518 ±  20.239  MB/sec
LogRecordBenchmark.no_escape_lambda:·gc.churn.G1_Eden_Space.norm                    true      42         P1        INFO  avgt   15   6867.827 ± 203.602    B/op
LogRecordBenchmark.no_escape_lambda:·gc.churn.G1_Survivor_Space                     true      42         P1        INFO  avgt   15      0.002 ±   0.001  MB/sec
LogRecordBenchmark.no_escape_lambda:·gc.churn.G1_Survivor_Space.norm                true      42         P1        INFO  avgt   15      0.028 ±   0.009    B/op
LogRecordBenchmark.no_escape_lambda:·gc.count                                       true      42         P1        INFO  avgt   15    303.000            counts
LogRecordBenchmark.no_escape_lambda:·gc.time                                        true      42         P1        INFO  avgt   15    198.000                ms
LogRecordBenchmark.no_escape_lambda                                                 true      42         P1        FINE  avgt   15    114.491 ±   2.088   ns/op
LogRecordBenchmark.no_escape_lambda:·gc.alloc.rate                                  true      42         P1        FINE  avgt   15   1777.246 ±  32.683  MB/sec
LogRecordBenchmark.no_escape_lambda:·gc.alloc.rate.norm                             true      42         P1        FINE  avgt   15    224.000 ±   0.001    B/op
LogRecordBenchmark.no_escape_lambda:·gc.churn.G1_Eden_Space                         true      42         P1        FINE  avgt   15   1777.322 ±  34.619  MB/sec
LogRecordBenchmark.no_escape_lambda:·gc.churn.G1_Eden_Space.norm                    true      42         P1        FINE  avgt   15    224.012 ±   1.814    B/op
LogRecordBenchmark.no_escape_lambda:·gc.churn.G1_Survivor_Space                     true      42         P1        FINE  avgt   15      0.005 ±   0.002  MB/sec
LogRecordBenchmark.no_escape_lambda:·gc.churn.G1_Survivor_Space.norm                true      42         P1        FINE  avgt   15      0.001 ±   0.001    B/op
LogRecordBenchmark.no_escape_lambda:·gc.count                                       true      42         P1        FINE  avgt   15    738.000            counts
LogRecordBenchmark.no_escape_lambda:·gc.time                                        true      42         P1        FINE  avgt   15    428.000                ms
LogRecordBenchmark.string_format                                                    true      42         P1        INFO  avgt   15  12196.021 ± 300.459   ns/op
LogRecordBenchmark.string_format:·gc.alloc.rate                                     true      42         P1        INFO  avgt   15    578.109 ±  13.665  MB/sec
LogRecordBenchmark.string_format:·gc.alloc.rate.norm                                true      42         P1        INFO  avgt   15   7760.011 ±  12.520    B/op
LogRecordBenchmark.string_format:·gc.churn.G1_Eden_Space                            true      42         P1        INFO  avgt   15    578.584 ±  18.475  MB/sec
LogRecordBenchmark.string_format:·gc.churn.G1_Eden_Space.norm                       true      42         P1        INFO  avgt   15   7767.362 ± 215.382    B/op
LogRecordBenchmark.string_format:·gc.churn.G1_Survivor_Space                        true      42         P1        INFO  avgt   15      0.003 ±   0.001  MB/sec
LogRecordBenchmark.string_format:·gc.churn.G1_Survivor_Space.norm                   true      42         P1        INFO  avgt   15      0.034 ±   0.007    B/op
LogRecordBenchmark.string_format:·gc.count                                          true      42         P1        INFO  avgt   15    310.000            counts
LogRecordBenchmark.string_format:·gc.time                                           true      42         P1        INFO  avgt   15    191.000                ms
LogRecordBenchmark.string_format                                                    true      42         P1        FINE  avgt   15   1105.098 ±  36.282   ns/op
LogRecordBenchmark.string_format:·gc.alloc.rate                                     true      42         P1        FINE  avgt   15    947.519 ±  31.095  MB/sec
LogRecordBenchmark.string_format:·gc.alloc.rate.norm                                true      42         P1        FINE  avgt   15   1152.000 ±   0.001    B/op
LogRecordBenchmark.string_format:·gc.churn.G1_Eden_Space                            true      42         P1        FINE  avgt   15    948.121 ±  33.688  MB/sec
LogRecordBenchmark.string_format:·gc.churn.G1_Eden_Space.norm                       true      42         P1        FINE  avgt   15   1152.727 ±  15.593    B/op
LogRecordBenchmark.string_format:·gc.churn.G1_Survivor_Space                        true      42         P1        FINE  avgt   15      0.004 ±   0.001  MB/sec
LogRecordBenchmark.string_format:·gc.churn.G1_Survivor_Space.norm                   true      42         P1        FINE  avgt   15      0.005 ±   0.001    B/op
LogRecordBenchmark.string_format:·gc.count                                          true      42         P1        FINE  avgt   15    508.000            counts
LogRecordBenchmark.string_format:·gc.time                                           true      42         P1        FINE  avgt   15    274.000                ms
LogRecordBenchmark.unguarded_parametrized                                           true      42         P1        INFO  avgt   15  13115.504 ± 275.796   ns/op
LogRecordBenchmark.unguarded_parametrized:·gc.alloc.rate                            true      42         P1        INFO  avgt   15    679.934 ±  14.532  MB/sec
LogRecordBenchmark.unguarded_parametrized:·gc.alloc.rate.norm                       true      42         P1        INFO  avgt   15   9816.013 ±  12.520    B/op
LogRecordBenchmark.unguarded_parametrized:·gc.churn.G1_Eden_Space                   true      42         P1        INFO  avgt   15    681.228 ±  18.480  MB/sec
LogRecordBenchmark.unguarded_parametrized:·gc.churn.G1_Eden_Space.norm              true      42         P1        INFO  avgt   15   9834.385 ± 140.885    B/op
LogRecordBenchmark.unguarded_parametrized:·gc.churn.G1_Survivor_Space               true      42         P1        INFO  avgt   15      0.002 ±   0.001  MB/sec
LogRecordBenchmark.unguarded_parametrized:·gc.churn.G1_Survivor_Space.norm          true      42         P1        INFO  avgt   15      0.035 ±   0.008    B/op
LogRecordBenchmark.unguarded_parametrized:·gc.count                                 true      42         P1        INFO  avgt   15    365.000            counts
LogRecordBenchmark.unguarded_parametrized:·gc.time                                  true      42         P1        INFO  avgt   15    231.000                ms
LogRecordBenchmark.unguarded_parametrized                                           true      42         P1        FINE  avgt   15     79.707 ±   5.192   ns/op
LogRecordBenchmark.unguarded_parametrized:·gc.alloc.rate                            true      42         P1        FINE  avgt   15   1624.492 ± 345.846  MB/sec
LogRecordBenchmark.unguarded_parametrized:·gc.alloc.rate.norm                       true      42         P1        FINE  avgt   15    144.000 ±  37.559    B/op
LogRecordBenchmark.unguarded_parametrized:·gc.churn.G1_Eden_Space                   true      42         P1        FINE  avgt   15   1628.624 ± 348.183  MB/sec
LogRecordBenchmark.unguarded_parametrized:·gc.churn.G1_Eden_Space.norm              true      42         P1        FINE  avgt   15    144.368 ±  37.763    B/op
LogRecordBenchmark.unguarded_parametrized:·gc.churn.G1_Survivor_Space               true      42         P1        FINE  avgt   15      0.004 ±   0.001  MB/sec
LogRecordBenchmark.unguarded_parametrized:·gc.churn.G1_Survivor_Space.norm          true      42         P1        FINE  avgt   15     ≈ 10⁻³              B/op
LogRecordBenchmark.unguarded_parametrized:·gc.count                                 true      42         P1        FINE  avgt   15    641.000            counts
LogRecordBenchmark.unguarded_parametrized:·gc.time                                  true      42         P1        FINE  avgt   15    382.000                ms
LogRecordBenchmark.unguarded_unparametrized                                         true      42         P1        INFO  avgt   15  10783.422 ± 231.491   ns/op
LogRecordBenchmark.unguarded_unparametrized:·gc.alloc.rate                          true      42         P1        INFO  avgt   15    574.008 ±  12.395  MB/sec
LogRecordBenchmark.unguarded_unparametrized:·gc.alloc.rate.norm                     true      42         P1        INFO  avgt   15   6813.343 ±  37.092    B/op
LogRecordBenchmark.unguarded_unparametrized:·gc.churn.G1_Eden_Space                 true      42         P1        INFO  avgt   15    574.845 ±  15.450  MB/sec
LogRecordBenchmark.unguarded_unparametrized:·gc.churn.G1_Eden_Space.norm            true      42         P1        INFO  avgt   15   6823.166 ± 107.148    B/op
LogRecordBenchmark.unguarded_unparametrized:·gc.churn.G1_Survivor_Space             true      42         P1        INFO  avgt   15      0.002 ±   0.001  MB/sec
LogRecordBenchmark.unguarded_unparametrized:·gc.churn.G1_Survivor_Space.norm        true      42         P1        INFO  avgt   15      0.028 ±   0.006    B/op
LogRecordBenchmark.unguarded_unparametrized:·gc.count                               true      42         P1        INFO  avgt   15    308.000            counts
LogRecordBenchmark.unguarded_unparametrized:·gc.time                                true      42         P1        INFO  avgt   15    208.000                ms
LogRecordBenchmark.unguarded_unparametrized                                         true      42         P1        FINE  avgt   15    108.301 ±   2.015   ns/op
LogRecordBenchmark.unguarded_unparametrized:·gc.alloc.rate                          true      42         P1        FINE  avgt   15   1677.551 ±  31.271  MB/sec
LogRecordBenchmark.unguarded_unparametrized:·gc.alloc.rate.norm                     true      42         P1        FINE  avgt   15    200.000 ±   0.001    B/op
LogRecordBenchmark.unguarded_unparametrized:·gc.churn.G1_Eden_Space                 true      42         P1        FINE  avgt   15   1680.928 ±  39.192  MB/sec
LogRecordBenchmark.unguarded_unparametrized:·gc.churn.G1_Eden_Space.norm            true      42         P1        FINE  avgt   15    200.398 ±   2.395    B/op
LogRecordBenchmark.unguarded_unparametrized:·gc.churn.G1_Survivor_Space             true      42         P1        FINE  avgt   15      0.004 ±   0.001  MB/sec
LogRecordBenchmark.unguarded_unparametrized:·gc.churn.G1_Survivor_Space.norm        true      42         P1        FINE  avgt   15      0.001 ±   0.001    B/op
LogRecordBenchmark.unguarded_unparametrized:·gc.count                               true      42         P1        FINE  avgt   15    699.000            counts
LogRecordBenchmark.unguarded_unparametrized:·gc.time                                true      42         P1        FINE  avgt   15    408.000                ms

Benchmark result is saved to results/report-openjdk-13/hotspotvm_c1_c2_jit/LogRecordBenchmark.json
Running java  -jar benchmarks/target/benchmarks.jar .*StringInterpolationBenchmark.* -prof gc -wi 5 -w 10 -i 5 -r 10 -f 3 -foe true -rf json -rff results/report-openjdk-13/hotspotvm_c1_c2_jit/StringInterpolationBenchmark.json
# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StringInterpolationBenchmark.concat_default
# Parameters: (size = 16)

# Run progress: 0.00% complete, ETA 00:20:00
# Fork: 1 of 3
# Warmup Iteration   1: 82.821 ns/op
# Warmup Iteration   2: 77.463 ns/op
# Warmup Iteration   3: 79.777 ns/op
# Warmup Iteration   4: 81.579 ns/op
# Warmup Iteration   5: 81.257 ns/op
Iteration   1: 78.101 ns/op
                 ·gc.alloc.rate:                   1488.366 MB/sec
                 ·gc.alloc.rate.norm:              128.000 B/op
                 ·gc.churn.G1_Eden_Space:          1499.961 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     128.997 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        44.000 counts
                 ·gc.time:                         28.000 ms

Iteration   2: 81.530 ns/op
                 ·gc.alloc.rate:                   1425.771 MB/sec
                 ·gc.alloc.rate.norm:              128.000 B/op
                 ·gc.churn.G1_Eden_Space:          1431.801 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     128.541 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        42.000 counts
                 ·gc.time:                         25.000 ms

Iteration   3: 80.128 ns/op
                 ·gc.alloc.rate:                   1450.705 MB/sec
                 ·gc.alloc.rate.norm:              128.000 B/op
                 ·gc.churn.G1_Eden_Space:          1431.777 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     126.330 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        42.000 counts
                 ·gc.time:                         22.000 ms

Iteration   4: 77.448 ns/op
                 ·gc.alloc.rate:                   1500.944 MB/sec
                 ·gc.alloc.rate.norm:              128.000 B/op
                 ·gc.churn.G1_Eden_Space:          1500.008 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     127.920 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        44.000 counts
                 ·gc.time:                         22.000 ms

Iteration   5: 80.829 ns/op
                 ·gc.alloc.rate:                   1438.023 MB/sec
                 ·gc.alloc.rate.norm:              128.000 B/op
                 ·gc.churn.G1_Eden_Space:          1465.772 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     130.470 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        43.000 counts
                 ·gc.time:                         24.000 ms


# Run progress: 8.33% complete, ETA 00:19:18
# Fork: 2 of 3
# Warmup Iteration   1: 80.536 ns/op
# Warmup Iteration   2: 78.288 ns/op
# Warmup Iteration   3: 79.188 ns/op
# Warmup Iteration   4: 75.515 ns/op
# Warmup Iteration   5: 76.519 ns/op
Iteration   1: 77.292 ns/op
                 ·gc.alloc.rate:                   1503.894 MB/sec
                 ·gc.alloc.rate.norm:              128.000 B/op
                 ·gc.churn.G1_Eden_Space:          1499.908 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     127.661 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        44.000 counts
                 ·gc.time:                         27.000 ms

Iteration   2: 76.761 ns/op
                 ·gc.alloc.rate:                   1514.336 MB/sec
                 ·gc.alloc.rate.norm:              128.000 B/op
                 ·gc.churn.G1_Eden_Space:          1499.944 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     126.784 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        44.000 counts
                 ·gc.time:                         26.000 ms

Iteration   3: 79.390 ns/op
                 ·gc.alloc.rate:                   1464.176 MB/sec
                 ·gc.alloc.rate.norm:              128.000 B/op
                 ·gc.churn.G1_Eden_Space:          1465.854 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     128.147 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        43.000 counts
                 ·gc.time:                         28.000 ms

Iteration   4: 77.512 ns/op
                 ·gc.alloc.rate:                   1499.635 MB/sec
                 ·gc.alloc.rate.norm:              128.000 B/op
                 ·gc.churn.G1_Eden_Space:          1499.936 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     128.026 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        44.000 counts
                 ·gc.time:                         26.000 ms

Iteration   5: 78.941 ns/op
                 ·gc.alloc.rate:                   1472.487 MB/sec
                 ·gc.alloc.rate.norm:              128.000 B/op
                 ·gc.churn.G1_Eden_Space:          1499.917 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     130.384 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        44.000 counts
                 ·gc.time:                         22.000 ms


# Run progress: 16.67% complete, ETA 00:17:33
# Fork: 3 of 3
# Warmup Iteration   1: 78.148 ns/op
# Warmup Iteration   2: 78.873 ns/op
# Warmup Iteration   3: 76.358 ns/op
# Warmup Iteration   4: 74.557 ns/op
# Warmup Iteration   5: 76.476 ns/op
Iteration   1: 76.746 ns/op
                 ·gc.alloc.rate:                   1514.590 MB/sec
                 ·gc.alloc.rate.norm:              128.000 B/op
                 ·gc.churn.G1_Eden_Space:          1499.910 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     126.759 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        44.000 counts
                 ·gc.time:                         21.000 ms

Iteration   2: 74.377 ns/op
                 ·gc.alloc.rate:                   1562.892 MB/sec
                 ·gc.alloc.rate.norm:              128.000 B/op
                 ·gc.churn.G1_Eden_Space:          1568.130 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     128.429 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        46.000 counts
                 ·gc.time:                         25.000 ms

Iteration   3: 75.335 ns/op
                 ·gc.alloc.rate:                   1542.946 MB/sec
                 ·gc.alloc.rate.norm:              128.000 B/op
                 ·gc.churn.G1_Eden_Space:          1533.994 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     127.257 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        45.000 counts
                 ·gc.time:                         25.000 ms

Iteration   4: 74.857 ns/op
                 ·gc.alloc.rate:                   1552.862 MB/sec
                 ·gc.alloc.rate.norm:              128.000 B/op
                 ·gc.churn.G1_Eden_Space:          1568.139 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     129.259 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        46.000 counts
                 ·gc.time:                         25.000 ms

Iteration   5: 75.894 ns/op
                 ·gc.alloc.rate:                   1531.640 MB/sec
                 ·gc.alloc.rate.norm:              128.000 B/op
                 ·gc.churn.G1_Eden_Space:          1534.052 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     128.202 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        45.000 counts
                 ·gc.time:                         25.000 ms



Result "com.ionutbalosin.jvm.jit.benchmark.StringInterpolationBenchmark.concat_default":
  77.676 ±(99.9%) 2.302 ns/op [Average]
  (min, avg, max) = (74.377, 77.676, 81.530), stdev = 2.154
  CI (99.9%): [75.374, 79.979] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.StringInterpolationBenchmark.concat_default:·gc.alloc.rate":
  1497.551 ±(99.9%) 44.168 MB/sec [Average]
  (min, avg, max) = (1425.771, 1497.551, 1562.892), stdev = 41.315
  CI (99.9%): [1453.383, 1541.719] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.StringInterpolationBenchmark.concat_default:·gc.alloc.rate.norm":
  128.000 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (128.000, 128.000, 128.000), stdev = 0.001
  CI (99.9%): [128.000, 128.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.StringInterpolationBenchmark.concat_default:·gc.churn.G1_Eden_Space":
  1499.940 ±(99.9%) 43.559 MB/sec [Average]
  (min, avg, max) = (1431.777, 1499.940, 1568.139), stdev = 40.745
  CI (99.9%): [1456.381, 1543.500] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.StringInterpolationBenchmark.concat_default:·gc.churn.G1_Eden_Space.norm":
  128.211 ±(99.9%) 1.301 B/op [Average]
  (min, avg, max) = (126.330, 128.211, 130.470), stdev = 1.217
  CI (99.9%): [126.911, 129.512] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.StringInterpolationBenchmark.concat_default:·gc.churn.G1_Survivor_Space":
  0.004 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.002, 0.004, 0.005), stdev = 0.001
  CI (99.9%): [0.003, 0.005] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.StringInterpolationBenchmark.concat_default:·gc.churn.G1_Survivor_Space.norm":
  ≈ 10⁻³ B/op

Secondary result "com.ionutbalosin.jvm.jit.benchmark.StringInterpolationBenchmark.concat_default:·gc.count":
  660.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (42.000, 44.000, 46.000), stdev = 1.195
  CI (99.9%): [660.000, 660.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.StringInterpolationBenchmark.concat_default:·gc.time":
  371.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (21.000, 24.733, 28.000), stdev = 2.187
  CI (99.9%): [371.000, 371.000] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StringInterpolationBenchmark.string_buffer
# Parameters: (size = 16)

# Run progress: 25.00% complete, ETA 00:15:47
# Fork: 1 of 3
# Warmup Iteration   1: 144.688 ns/op
# Warmup Iteration   2: 144.943 ns/op
# Warmup Iteration   3: 142.933 ns/op
# Warmup Iteration   4: 143.279 ns/op
# Warmup Iteration   5: 142.483 ns/op
Iteration   1: 142.847 ns/op
                 ·gc.alloc.rate:                   2136.047 MB/sec
                 ·gc.alloc.rate.norm:              336.000 B/op
                 ·gc.churn.G1_Eden_Space:          2129.155 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     334.916 B/op
                 ·gc.churn.G1_Survivor_Space:      0.003 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻³ B/op
                 ·gc.count:                        52.000 counts
                 ·gc.time:                         34.000 ms

Iteration   2: 139.692 ns/op
                 ·gc.alloc.rate:                   2184.258 MB/sec
                 ·gc.alloc.rate.norm:              336.000 B/op
                 ·gc.churn.G1_Eden_Space:          2210.987 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     340.112 B/op
                 ·gc.churn.G1_Survivor_Space:      0.007 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        54.000 counts
                 ·gc.time:                         33.000 ms

Iteration   3: 144.345 ns/op
                 ·gc.alloc.rate:                   2113.868 MB/sec
                 ·gc.alloc.rate.norm:              336.000 B/op
                 ·gc.churn.G1_Eden_Space:          2088.183 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     331.917 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        51.000 counts
                 ·gc.time:                         29.000 ms

Iteration   4: 138.324 ns/op
                 ·gc.alloc.rate:                   2206.025 MB/sec
                 ·gc.alloc.rate.norm:              336.000 B/op
                 ·gc.churn.G1_Eden_Space:          2211.171 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     336.784 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        54.000 counts
                 ·gc.time:                         31.000 ms

Iteration   5: 142.937 ns/op
                 ·gc.alloc.rate:                   2134.757 MB/sec
                 ·gc.alloc.rate.norm:              336.000 B/op
                 ·gc.churn.G1_Eden_Space:          2129.144 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     335.117 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        52.000 counts
                 ·gc.time:                         31.000 ms


# Run progress: 33.33% complete, ETA 00:14:02
# Fork: 2 of 3
# Warmup Iteration   1: 149.788 ns/op
# Warmup Iteration   2: 146.355 ns/op
# Warmup Iteration   3: 142.737 ns/op
# Warmup Iteration   4: 141.447 ns/op
# Warmup Iteration   5: 139.725 ns/op
Iteration   1: 141.861 ns/op
                 ·gc.alloc.rate:                   2150.885 MB/sec
                 ·gc.alloc.rate.norm:              336.000 B/op
                 ·gc.churn.G1_Eden_Space:          2129.132 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     332.602 B/op
                 ·gc.churn.G1_Survivor_Space:      0.002 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: ≈ 10⁻⁴ B/op
                 ·gc.count:                        52.000 counts
                 ·gc.time:                         27.000 ms

Iteration   2: 143.688 ns/op
                 ·gc.alloc.rate:                   2123.638 MB/sec
                 ·gc.alloc.rate.norm:              336.000 B/op
                 ·gc.churn.G1_Eden_Space:          2129.182 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     336.877 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        52.000 counts
                 ·gc.time:                         31.000 ms

Iteration   3: 146.741 ns/op
                 ·gc.alloc.rate:                   2079.349 MB/sec
                 ·gc.alloc.rate.norm:              336.000 B/op
                 ·gc.churn.G1_Eden_Space:          2088.169 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     337.425 B/op
                 ·gc.churn.G1_Survivor_Space:      0.006 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        51.000 counts
                 ·gc.time:                         30.000 ms

Iteration   4: 144.906 ns/op
                 ·gc.alloc.rate:                   2105.719 MB/sec
                 ·gc.alloc.rate.norm:              336.000 B/op
                 ·gc.churn.G1_Eden_Space:          2129.176 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     339.743 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        52.000 counts
                 ·gc.time:                         30.000 ms

Iteration   5: 140.848 ns/op
                 ·gc.alloc.rate:                   2166.422 MB/sec
                 ·gc.alloc.rate.norm:              336.000 B/op
                 ·gc.churn.G1_Eden_Space:          2170.132 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     336.575 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        53.000 counts
                 ·gc.time:                         27.000 ms


# Run progress: 41.67% complete, ETA 00:12:17
# Fork: 3 of 3
# Warmup Iteration   1: 144.390 ns/op
# Warmup Iteration   2: 143.402 ns/op
# Warmup Iteration   3: 141.271 ns/op
# Warmup Iteration   4: 143.339 ns/op
# Warmup Iteration   5: 144.260 ns/op
Iteration   1: 137.533 ns/op
                 ·gc.alloc.rate:                   2218.571 MB/sec
                 ·gc.alloc.rate.norm:              336.000 B/op
                 ·gc.churn.G1_Eden_Space:          2211.031 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     334.858 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        54.000 counts
                 ·gc.time:                         25.000 ms

Iteration   2: 143.837 ns/op
                 ·gc.alloc.rate:                   2121.443 MB/sec
                 ·gc.alloc.rate.norm:              336.000 B/op
                 ·gc.churn.G1_Eden_Space:          2129.216 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     337.231 B/op
                 ·gc.churn.G1_Survivor_Space:      0.006 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        52.000 counts
                 ·gc.time:                         33.000 ms

Iteration   3: 141.022 ns/op
                 ·gc.alloc.rate:                   2163.750 MB/sec
                 ·gc.alloc.rate.norm:              336.000 B/op
                 ·gc.churn.G1_Eden_Space:          2170.155 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     336.995 B/op
                 ·gc.churn.G1_Survivor_Space:      0.007 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        53.000 counts
                 ·gc.time:                         30.000 ms

Iteration   4: 144.577 ns/op
                 ·gc.alloc.rate:                   2110.567 MB/sec
                 ·gc.alloc.rate.norm:              336.000 B/op
                 ·gc.churn.G1_Eden_Space:          2088.281 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     332.452 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        51.000 counts
                 ·gc.time:                         29.000 ms

Iteration   5: 143.721 ns/op
                 ·gc.alloc.rate:                   2123.077 MB/sec
                 ·gc.alloc.rate.norm:              336.000 B/op
                 ·gc.churn.G1_Eden_Space:          2129.160 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     336.963 B/op
                 ·gc.churn.G1_Survivor_Space:      0.006 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        52.000 counts
                 ·gc.time:                         32.000 ms



Result "com.ionutbalosin.jvm.jit.benchmark.StringInterpolationBenchmark.string_buffer":
  142.459 ±(99.9%) 2.737 ns/op [Average]
  (min, avg, max) = (137.533, 142.459, 146.741), stdev = 2.560
  CI (99.9%): [139.721, 145.196] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.StringInterpolationBenchmark.string_buffer:·gc.alloc.rate":
  2142.558 ±(99.9%) 41.521 MB/sec [Average]
  (min, avg, max) = (2079.349, 2142.558, 2218.571), stdev = 38.839
  CI (99.9%): [2101.037, 2184.080] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.StringInterpolationBenchmark.string_buffer:·gc.alloc.rate.norm":
  336.000 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (336.000, 336.000, 336.000), stdev = 0.001
  CI (99.9%): [336.000, 336.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.StringInterpolationBenchmark.string_buffer:·gc.churn.G1_Eden_Space":
  2142.818 ±(99.9%) 45.818 MB/sec [Average]
  (min, avg, max) = (2088.169, 2142.818, 2211.171), stdev = 42.858
  CI (99.9%): [2097.000, 2188.636] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.StringInterpolationBenchmark.string_buffer:·gc.churn.G1_Eden_Space.norm":
  336.038 ±(99.9%) 2.589 B/op [Average]
  (min, avg, max) = (331.917, 336.038, 340.112), stdev = 2.422
  CI (99.9%): [333.448, 338.627] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.StringInterpolationBenchmark.string_buffer:·gc.churn.G1_Survivor_Space":
  0.005 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.002, 0.005, 0.007), stdev = 0.001
  CI (99.9%): [0.003, 0.006] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.StringInterpolationBenchmark.string_buffer:·gc.churn.G1_Survivor_Space.norm":
  0.001 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (≈ 10⁻⁴, 0.001, 0.001), stdev = 0.001
  CI (99.9%): [0.001, 0.001] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.StringInterpolationBenchmark.string_buffer:·gc.count":
  785.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (51.000, 52.333, 54.000), stdev = 1.047
  CI (99.9%): [785.000, 785.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.StringInterpolationBenchmark.string_buffer:·gc.time":
  452.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (25.000, 30.133, 34.000), stdev = 2.475
  CI (99.9%): [452.000, 452.000] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StringInterpolationBenchmark.string_builder
# Parameters: (size = 16)

# Run progress: 50.00% complete, ETA 00:10:31
# Fork: 1 of 3
# Warmup Iteration   1: 142.236 ns/op
# Warmup Iteration   2: 140.608 ns/op
# Warmup Iteration   3: 131.363 ns/op
# Warmup Iteration   4: 136.591 ns/op
# Warmup Iteration   5: 136.617 ns/op
Iteration   1: 134.209 ns/op
                 ·gc.alloc.rate:                   2219.338 MB/sec
                 ·gc.alloc.rate.norm:              328.000 B/op
                 ·gc.churn.G1_Eden_Space:          2251.930 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     332.817 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        55.000 counts
                 ·gc.time:                         26.000 ms

Iteration   2: 133.037 ns/op
                 ·gc.alloc.rate:                   2239.025 MB/sec
                 ·gc.alloc.rate.norm:              328.000 B/op
                 ·gc.churn.G1_Eden_Space:          2211.082 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     323.907 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        54.000 counts
                 ·gc.time:                         28.000 ms

Iteration   3: 132.834 ns/op
                 ·gc.alloc.rate:                   2242.341 MB/sec
                 ·gc.alloc.rate.norm:              328.000 B/op
                 ·gc.churn.G1_Eden_Space:          2251.954 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     329.406 B/op
                 ·gc.churn.G1_Survivor_Space:      0.006 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        55.000 counts
                 ·gc.time:                         33.000 ms

Iteration   4: 137.420 ns/op
                 ·gc.alloc.rate:                   2167.621 MB/sec
                 ·gc.alloc.rate.norm:              328.000 B/op
                 ·gc.churn.G1_Eden_Space:          2170.156 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     328.383 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        53.000 counts
                 ·gc.time:                         29.000 ms

Iteration   5: 136.709 ns/op
                 ·gc.alloc.rate:                   2178.872 MB/sec
                 ·gc.alloc.rate.norm:              328.000 B/op
                 ·gc.churn.G1_Eden_Space:          2211.093 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     332.850 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        54.000 counts
                 ·gc.time:                         32.000 ms


# Run progress: 58.33% complete, ETA 00:08:46
# Fork: 2 of 3
# Warmup Iteration   1: 133.677 ns/op
# Warmup Iteration   2: 134.280 ns/op
# Warmup Iteration   3: 131.973 ns/op
# Warmup Iteration   4: 130.678 ns/op
# Warmup Iteration   5: 128.117 ns/op
Iteration   1: 131.697 ns/op
                 ·gc.alloc.rate:                   2261.810 MB/sec
                 ·gc.alloc.rate.norm:              328.000 B/op
                 ·gc.churn.G1_Eden_Space:          2252.065 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     326.587 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        55.000 counts
                 ·gc.time:                         27.000 ms

Iteration   2: 132.630 ns/op
                 ·gc.alloc.rate:                   2245.900 MB/sec
                 ·gc.alloc.rate.norm:              328.000 B/op
                 ·gc.churn.G1_Eden_Space:          2252.067 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     328.901 B/op
                 ·gc.churn.G1_Survivor_Space:      0.006 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        55.000 counts
                 ·gc.time:                         31.000 ms

Iteration   3: 129.947 ns/op
                 ·gc.alloc.rate:                   2292.295 MB/sec
                 ·gc.alloc.rate.norm:              328.000 B/op
                 ·gc.churn.G1_Eden_Space:          2293.035 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     328.106 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        56.000 counts
                 ·gc.time:                         32.000 ms

Iteration   4: 132.650 ns/op
                 ·gc.alloc.rate:                   2245.624 MB/sec
                 ·gc.alloc.rate.norm:              328.000 B/op
                 ·gc.churn.G1_Eden_Space:          2252.128 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     328.950 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        55.000 counts
                 ·gc.time:                         31.000 ms

Iteration   5: 133.745 ns/op
                 ·gc.alloc.rate:                   2227.000 MB/sec
                 ·gc.alloc.rate.norm:              328.000 B/op
                 ·gc.churn.G1_Eden_Space:          2210.927 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     325.633 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        54.000 counts
                 ·gc.time:                         29.000 ms


# Run progress: 66.67% complete, ETA 00:07:01
# Fork: 3 of 3
# Warmup Iteration   1: 136.297 ns/op
# Warmup Iteration   2: 134.923 ns/op
# Warmup Iteration   3: 137.445 ns/op
# Warmup Iteration   4: 136.714 ns/op
# Warmup Iteration   5: 133.392 ns/op
Iteration   1: 137.769 ns/op
                 ·gc.alloc.rate:                   2162.090 MB/sec
                 ·gc.alloc.rate.norm:              328.000 B/op
                 ·gc.churn.G1_Eden_Space:          2170.127 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     329.219 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        53.000 counts
                 ·gc.time:                         33.000 ms

Iteration   2: 131.582 ns/op
                 ·gc.alloc.rate:                   2263.847 MB/sec
                 ·gc.alloc.rate.norm:              328.000 B/op
                 ·gc.churn.G1_Eden_Space:          2252.119 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     326.301 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        55.000 counts
                 ·gc.time:                         30.000 ms

Iteration   3: 135.829 ns/op
                 ·gc.alloc.rate:                   2193.011 MB/sec
                 ·gc.alloc.rate.norm:              328.000 B/op
                 ·gc.churn.G1_Eden_Space:          2170.159 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     324.582 B/op
                 ·gc.churn.G1_Survivor_Space:      0.006 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        53.000 counts
                 ·gc.time:                         29.000 ms

Iteration   4: 134.997 ns/op
                 ·gc.alloc.rate:                   2206.442 MB/sec
                 ·gc.alloc.rate.norm:              328.000 B/op
                 ·gc.churn.G1_Eden_Space:          2211.027 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     328.682 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        54.000 counts
                 ·gc.time:                         31.000 ms

Iteration   5: 130.244 ns/op
                 ·gc.alloc.rate:                   2287.030 MB/sec
                 ·gc.alloc.rate.norm:              328.000 B/op
                 ·gc.churn.G1_Eden_Space:          2292.980 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     328.853 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.001 B/op
                 ·gc.count:                        56.000 counts
                 ·gc.time:                         31.000 ms



Result "com.ionutbalosin.jvm.jit.benchmark.StringInterpolationBenchmark.string_builder":
  133.687 ±(99.9%) 2.617 ns/op [Average]
  (min, avg, max) = (129.947, 133.687, 137.769), stdev = 2.448
  CI (99.9%): [131.070, 136.304] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.StringInterpolationBenchmark.string_builder:·gc.alloc.rate":
  2228.816 ±(99.9%) 43.485 MB/sec [Average]
  (min, avg, max) = (2162.090, 2228.816, 2292.295), stdev = 40.676
  CI (99.9%): [2185.332, 2272.301] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.StringInterpolationBenchmark.string_builder:·gc.alloc.rate.norm":
  328.000 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (328.000, 328.000, 328.000), stdev = 0.001
  CI (99.9%): [328.000, 328.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.StringInterpolationBenchmark.string_builder:·gc.churn.G1_Eden_Space":
  2230.190 ±(99.9%) 43.370 MB/sec [Average]
  (min, avg, max) = (2170.127, 2230.190, 2293.035), stdev = 40.569
  CI (99.9%): [2186.820, 2273.560] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.StringInterpolationBenchmark.string_builder:·gc.churn.G1_Eden_Space.norm":
  328.212 ±(99.9%) 2.733 B/op [Average]
  (min, avg, max) = (323.907, 328.212, 332.850), stdev = 2.557
  CI (99.9%): [325.479, 330.945] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.StringInterpolationBenchmark.string_builder:·gc.churn.G1_Survivor_Space":
  0.005 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.004, 0.005, 0.006), stdev = 0.001
  CI (99.9%): [0.004, 0.006] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.StringInterpolationBenchmark.string_builder:·gc.churn.G1_Survivor_Space.norm":
  0.001 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
  CI (99.9%): [0.001, 0.001] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.StringInterpolationBenchmark.string_builder:·gc.count":
  817.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (53.000, 54.467, 56.000), stdev = 0.990
  CI (99.9%): [817.000, 817.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.StringInterpolationBenchmark.string_builder:·gc.time":
  452.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (26.000, 30.133, 33.000), stdev = 2.100
  CI (99.9%): [452.000, 452.000] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 13, OpenJDK 64-Bit Server VM, 13+33
# VM invoker: /usr/lib/jvm/openjdk-13/bin/java
# VM options: <none>
# Warmup: 5 iterations, 10 s each
# Measurement: 5 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.ionutbalosin.jvm.jit.benchmark.StringInterpolationBenchmark.string_format
# Parameters: (size = 16)

# Run progress: 75.00% complete, ETA 00:05:15
# Fork: 1 of 3
# Warmup Iteration   1: 1391.934 ns/op
# Warmup Iteration   2: 1346.103 ns/op
# Warmup Iteration   3: 1351.901 ns/op
# Warmup Iteration   4: 1308.874 ns/op
# Warmup Iteration   5: 1331.715 ns/op
Iteration   1: 1312.202 ns/op
                 ·gc.alloc.rate:                   1007.651 MB/sec
                 ·gc.alloc.rate.norm:              1456.000 B/op
                 ·gc.churn.G1_Eden_Space:          1007.828 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     1456.256 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.007 B/op
                 ·gc.count:                        36.000 counts
                 ·gc.time:                         22.000 ms

Iteration   2: 1344.797 ns/op
                 ·gc.alloc.rate:                   983.264 MB/sec
                 ·gc.alloc.rate.norm:              1456.000 B/op
                 ·gc.churn.G1_Eden_Space:          979.873 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     1450.978 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.005 B/op
                 ·gc.count:                        35.000 counts
                 ·gc.time:                         18.000 ms

Iteration   3: 1309.339 ns/op
                 ·gc.alloc.rate:                   1009.862 MB/sec
                 ·gc.alloc.rate.norm:              1456.000 B/op
                 ·gc.churn.G1_Eden_Space:          1007.836 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     1453.079 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.008 B/op
                 ·gc.count:                        36.000 counts
                 ·gc.time:                         21.000 ms

Iteration   4: 1350.426 ns/op
                 ·gc.alloc.rate:                   979.120 MB/sec
                 ·gc.alloc.rate.norm:              1456.000 B/op
                 ·gc.churn.G1_Eden_Space:          979.826 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     1457.050 B/op
                 ·gc.churn.G1_Survivor_Space:      0.007 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.010 B/op
                 ·gc.count:                        35.000 counts
                 ·gc.time:                         20.000 ms

Iteration   5: 1355.261 ns/op
                 ·gc.alloc.rate:                   975.624 MB/sec
                 ·gc.alloc.rate.norm:              1456.000 B/op
                 ·gc.churn.G1_Eden_Space:          979.817 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     1462.258 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.006 B/op
                 ·gc.count:                        35.000 counts
                 ·gc.time:                         21.000 ms


# Run progress: 83.33% complete, ETA 00:03:30
# Fork: 2 of 3
# Warmup Iteration   1: 1324.109 ns/op
# Warmup Iteration   2: 1289.991 ns/op
# Warmup Iteration   3: 1297.714 ns/op
# Warmup Iteration   4: 1270.257 ns/op
# Warmup Iteration   5: 1281.276 ns/op
Iteration   1: 1247.922 ns/op
                 ·gc.alloc.rate:                   1059.566 MB/sec
                 ·gc.alloc.rate.norm:              1456.000 B/op
                 ·gc.churn.G1_Eden_Space:          1063.830 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     1461.860 B/op
                 ·gc.churn.G1_Survivor_Space:      0.004 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.006 B/op
                 ·gc.count:                        38.000 counts
                 ·gc.time:                         22.000 ms

Iteration   2: 1275.300 ns/op
                 ·gc.alloc.rate:                   1036.793 MB/sec
                 ·gc.alloc.rate.norm:              1456.000 B/op
                 ·gc.churn.G1_Eden_Space:          1035.797 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     1454.600 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.007 B/op
                 ·gc.count:                        37.000 counts
                 ·gc.time:                         20.000 ms

Iteration   3: 1281.821 ns/op
                 ·gc.alloc.rate:                   1031.552 MB/sec
                 ·gc.alloc.rate.norm:              1456.000 B/op
                 ·gc.churn.G1_Eden_Space:          1035.840 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     1462.053 B/op
                 ·gc.churn.G1_Survivor_Space:      0.006 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.008 B/op
                 ·gc.count:                        37.000 counts
                 ·gc.time:                         24.000 ms

Iteration   4: 1293.442 ns/op
                 ·gc.alloc.rate:                   1022.279 MB/sec
                 ·gc.alloc.rate.norm:              1456.000 B/op
                 ·gc.churn.G1_Eden_Space:          1035.848 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     1475.326 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.007 B/op
                 ·gc.count:                        37.000 counts
                 ·gc.time:                         23.000 ms

Iteration   5: 1268.882 ns/op
                 ·gc.alloc.rate:                   1041.999 MB/sec
                 ·gc.alloc.rate.norm:              1456.000 B/op
                 ·gc.churn.G1_Eden_Space:          1035.770 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     1447.296 B/op
                 ·gc.churn.G1_Survivor_Space:      0.006 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.008 B/op
                 ·gc.count:                        37.000 counts
                 ·gc.time:                         21.000 ms


# Run progress: 91.67% complete, ETA 00:01:45
# Fork: 3 of 3
# Warmup Iteration   1: 1381.338 ns/op
# Warmup Iteration   2: 1340.585 ns/op
# Warmup Iteration   3: 1294.454 ns/op
# Warmup Iteration   4: 1352.309 ns/op
# Warmup Iteration   5: 1305.903 ns/op
Iteration   1: 1328.081 ns/op
                 ·gc.alloc.rate:                   995.614 MB/sec
                 ·gc.alloc.rate.norm:              1456.000 B/op
                 ·gc.churn.G1_Eden_Space:          979.850 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     1432.945 B/op
                 ·gc.churn.G1_Survivor_Space:      0.006 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.008 B/op
                 ·gc.count:                        35.000 counts
                 ·gc.time:                         26.000 ms

Iteration   2: 1347.709 ns/op
                 ·gc.alloc.rate:                   981.145 MB/sec
                 ·gc.alloc.rate.norm:              1456.000 B/op
                 ·gc.churn.G1_Eden_Space:          979.883 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     1454.127 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.007 B/op
                 ·gc.count:                        35.000 counts
                 ·gc.time:                         23.000 ms

Iteration   3: 1330.739 ns/op
                 ·gc.alloc.rate:                   993.662 MB/sec
                 ·gc.alloc.rate.norm:              1456.000 B/op
                 ·gc.churn.G1_Eden_Space:          1007.887 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     1476.844 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.008 B/op
                 ·gc.count:                        36.000 counts
                 ·gc.time:                         19.000 ms

Iteration   4: 1323.459 ns/op
                 ·gc.alloc.rate:                   999.129 MB/sec
                 ·gc.alloc.rate.norm:              1456.000 B/op
                 ·gc.churn.G1_Eden_Space:          1007.883 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     1468.757 B/op
                 ·gc.churn.G1_Survivor_Space:      0.006 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.008 B/op
                 ·gc.count:                        36.000 counts
                 ·gc.time:                         19.000 ms

Iteration   5: 1325.336 ns/op
                 ·gc.alloc.rate:                   997.670 MB/sec
                 ·gc.alloc.rate.norm:              1456.000 B/op
                 ·gc.churn.G1_Eden_Space:          979.843 MB/sec
                 ·gc.churn.G1_Eden_Space.norm:     1429.983 B/op
                 ·gc.churn.G1_Survivor_Space:      0.005 MB/sec
                 ·gc.churn.G1_Survivor_Space.norm: 0.007 B/op
                 ·gc.count:                        35.000 counts
                 ·gc.time:                         19.000 ms



Result "com.ionutbalosin.jvm.jit.benchmark.StringInterpolationBenchmark.string_format":
  1312.981 ±(99.9%) 35.200 ns/op [Average]
  (min, avg, max) = (1247.922, 1312.981, 1355.261), stdev = 32.926
  CI (99.9%): [1277.781, 1348.181] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.StringInterpolationBenchmark.string_format:·gc.alloc.rate":
  1007.662 ±(99.9%) 27.352 MB/sec [Average]
  (min, avg, max) = (975.624, 1007.662, 1059.566), stdev = 25.585
  CI (99.9%): [980.310, 1035.014] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.StringInterpolationBenchmark.string_format:·gc.alloc.rate.norm":
  1456.000 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (1456.000, 1456.000, 1456.000), stdev = 0.001
  CI (99.9%): [1456.000, 1456.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.StringInterpolationBenchmark.string_format:·gc.churn.G1_Eden_Space":
  1007.841 ±(99.9%) 29.920 MB/sec [Average]
  (min, avg, max) = (979.817, 1007.841, 1063.830), stdev = 27.987
  CI (99.9%): [977.920, 1037.761] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.StringInterpolationBenchmark.string_format:·gc.churn.G1_Eden_Space.norm":
  1456.228 ±(99.9%) 14.011 B/op [Average]
  (min, avg, max) = (1429.983, 1456.228, 1476.844), stdev = 13.106
  CI (99.9%): [1442.217, 1470.238] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.StringInterpolationBenchmark.string_format:·gc.churn.G1_Survivor_Space":
  0.005 ±(99.9%) 0.001 MB/sec [Average]
  (min, avg, max) = (0.004, 0.005, 0.007), stdev = 0.001
  CI (99.9%): [0.004, 0.006] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.StringInterpolationBenchmark.string_format:·gc.churn.G1_Survivor_Space.norm":
  0.007 ±(99.9%) 0.001 B/op [Average]
  (min, avg, max) = (0.005, 0.007, 0.010), stdev = 0.001
  CI (99.9%): [0.006, 0.009] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.StringInterpolationBenchmark.string_format:·gc.count":
  540.000 ±(99.9%) 0.001 counts [Sum]
  (min, avg, max) = (35.000, 36.000, 38.000), stdev = 1.000
  CI (99.9%): [540.000, 540.000] (assumes normal distribution)

Secondary result "com.ionutbalosin.jvm.jit.benchmark.StringInterpolationBenchmark.string_format:·gc.time":
  318.000 ±(99.9%) 0.001 ms [Sum]
  (min, avg, max) = (18.000, 21.200, 26.000), stdev = 2.178
  CI (99.9%): [318.000, 318.000] (assumes normal distribution)


# Run complete. Total time: 00:21:03

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                                                     (size)  Mode  Cnt     Score    Error   Units
StringInterpolationBenchmark.concat_default                                       16  avgt   15    77.676 ±  2.302   ns/op
StringInterpolationBenchmark.concat_default:·gc.alloc.rate                        16  avgt   15  1497.551 ± 44.168  MB/sec
StringInterpolationBenchmark.concat_default:·gc.alloc.rate.norm                   16  avgt   15   128.000 ±  0.001    B/op
StringInterpolationBenchmark.concat_default:·gc.churn.G1_Eden_Space               16  avgt   15  1499.940 ± 43.559  MB/sec
StringInterpolationBenchmark.concat_default:·gc.churn.G1_Eden_Space.norm          16  avgt   15   128.211 ±  1.301    B/op
StringInterpolationBenchmark.concat_default:·gc.churn.G1_Survivor_Space           16  avgt   15     0.004 ±  0.001  MB/sec
StringInterpolationBenchmark.concat_default:·gc.churn.G1_Survivor_Space.norm      16  avgt   15    ≈ 10⁻³             B/op
StringInterpolationBenchmark.concat_default:·gc.count                             16  avgt   15   660.000           counts
StringInterpolationBenchmark.concat_default:·gc.time                              16  avgt   15   371.000               ms
StringInterpolationBenchmark.string_buffer                                        16  avgt   15   142.459 ±  2.737   ns/op
StringInterpolationBenchmark.string_buffer:·gc.alloc.rate                         16  avgt   15  2142.558 ± 41.521  MB/sec
StringInterpolationBenchmark.string_buffer:·gc.alloc.rate.norm                    16  avgt   15   336.000 ±  0.001    B/op
StringInterpolationBenchmark.string_buffer:·gc.churn.G1_Eden_Space                16  avgt   15  2142.818 ± 45.818  MB/sec
StringInterpolationBenchmark.string_buffer:·gc.churn.G1_Eden_Space.norm           16  avgt   15   336.038 ±  2.589    B/op
StringInterpolationBenchmark.string_buffer:·gc.churn.G1_Survivor_Space            16  avgt   15     0.005 ±  0.001  MB/sec
StringInterpolationBenchmark.string_buffer:·gc.churn.G1_Survivor_Space.norm       16  avgt   15     0.001 ±  0.001    B/op
StringInterpolationBenchmark.string_buffer:·gc.count                              16  avgt   15   785.000           counts
StringInterpolationBenchmark.string_buffer:·gc.time                               16  avgt   15   452.000               ms
StringInterpolationBenchmark.string_builder                                       16  avgt   15   133.687 ±  2.617   ns/op
StringInterpolationBenchmark.string_builder:·gc.alloc.rate                        16  avgt   15  2228.816 ± 43.485  MB/sec
StringInterpolationBenchmark.string_builder:·gc.alloc.rate.norm                   16  avgt   15   328.000 ±  0.001    B/op
StringInterpolationBenchmark.string_builder:·gc.churn.G1_Eden_Space               16  avgt   15  2230.190 ± 43.370  MB/sec
StringInterpolationBenchmark.string_builder:·gc.churn.G1_Eden_Space.norm          16  avgt   15   328.212 ±  2.733    B/op
StringInterpolationBenchmark.string_builder:·gc.churn.G1_Survivor_Space           16  avgt   15     0.005 ±  0.001  MB/sec
StringInterpolationBenchmark.string_builder:·gc.churn.G1_Survivor_Space.norm      16  avgt   15     0.001 ±  0.001    B/op
StringInterpolationBenchmark.string_builder:·gc.count                             16  avgt   15   817.000           counts
StringInterpolationBenchmark.string_builder:·gc.time                              16  avgt   15   452.000               ms
StringInterpolationBenchmark.string_format                                        16  avgt   15  1312.981 ± 35.200   ns/op
StringInterpolationBenchmark.string_format:·gc.alloc.rate                         16  avgt   15  1007.662 ± 27.352  MB/sec
StringInterpolationBenchmark.string_format:·gc.alloc.rate.norm                    16  avgt   15  1456.000 ±  0.001    B/op
StringInterpolationBenchmark.string_format:·gc.churn.G1_Eden_Space                16  avgt   15  1007.841 ± 29.920  MB/sec
StringInterpolationBenchmark.string_format:·gc.churn.G1_Eden_Space.norm           16  avgt   15  1456.228 ± 14.011    B/op
StringInterpolationBenchmark.string_format:·gc.churn.G1_Survivor_Space            16  avgt   15     0.005 ±  0.001  MB/sec
StringInterpolationBenchmark.string_format:·gc.churn.G1_Survivor_Space.norm       16  avgt   15     0.007 ±  0.001    B/op
StringInterpolationBenchmark.string_format:·gc.count                              16  avgt   15   540.000           counts
StringInterpolationBenchmark.string_format:·gc.time                               16  avgt   15   318.000               ms

Benchmark result is saved to results/report-openjdk-13/hotspotvm_c1_c2_jit/StringInterpolationBenchmark.json
Finished hotspotvm_c1_c2_jit JMH Tests Suite!
Time Elapsed : 2559 minutes and 1 seconds.
